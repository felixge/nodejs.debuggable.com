[00:00] deadmau5: :D
[00:00] satyr has joined the channel
[00:00] deadmau5: motivation to write nice tests haha
[00:00] deadmau5: doubles as docs
[00:01] nerdy has joined the channel
[00:02] ircdearia has joined the channel
[00:03] jbrokc_ has joined the channel
[00:04] CarterL has joined the channel
[00:04] joshwnj has joined the channel
[00:05] joshwnj has left the channel
[00:08] robertj: anyone here have any experience in trying to sandbox untrusted code in node?
[00:08] brianc1: robertj: you could potentally use vm.runInNewContext
[00:08] diogogmt has joined the channel
[00:08] robertj: brianc1, that gets you part of the way there
[00:08] jerrysv: v8: var foo = 'var';
[00:08] v8bot_: jerrysv: 
[00:09] jerrysv: .. var foo = 'var';
[00:09] jerrysv: catb0t?
[00:09] ircdearia has joined the channel
[00:09] robertj: brianc1, but you gotta have some way to abort the context
[00:09] brianc1: robertj: good point. 
[00:09] robertj: brianc1, plus you got memory leaking issues
[00:10] robertj: and not even leaking issues, you got just memory rationing
[00:10] cjm has joined the channel
[00:10] robertj: I tried giving it a proxy as a context to try to compute the memory requirement objects put in the context's global scope even...
[00:11] robertj: but apparently it doesn't honor the setter of a proxy for contexts
[00:12] raincole has joined the channel
[00:12] elevenarms has joined the channel
[00:12] brianc1: yeah node docs say safely running untrusted code requires a separate process
[00:12] bartt has joined the channel
[00:13] jbrokc_ has joined the channel
[00:14] jhurliman has joined the channel
[00:15] josh-k has joined the channel
[00:16] stonebranch has joined the channel
[00:17] brianseeders has joined the channel
[00:18] zemanel has joined the channel
[00:19] francisl has joined the channel
[00:21] marcello3d has joined the channel
[00:22] devongovett has joined the channel
[00:22] tkaemming has joined the channel
[00:23] igl1 has joined the channel
[00:27] ph^_ has joined the channel
[00:27] josh-k has joined the channel
[00:28] StanlySoManly has joined the channel
[00:28] jackbean_ has joined the channel
[00:31] chrislorenz has joined the channel
[00:31] francisl has joined the channel
[00:35] jaigouk has joined the channel
[00:36] StanlySoManly has joined the channel
[00:37] nickadeemus2002 has joined the channel
[00:37] nickadeemus2002 has left the channel
[00:39] davidbanham has joined the channel
[00:40] lyte_ has joined the channel
[00:40] isaacs: any windows users in here?
[00:41] stantona has joined the channel
[00:41] isaacs: http://npmjs.org/dist/npm-1.1.0-alpha-3.zip unpack in the same folder as node.exe, please
[00:41] isaacs: see if that fixes some stuff
[00:41] base698: what's windows
[00:41] laprice has left the channel
[00:41] mmalecki: base698: you probably never heard of it.
[00:41] insin: any stuff in particular or just the man pages?
[00:42] base698: It's some toy OS for VMs right?  
[00:43] jerrysv: base698: it's like a commercial version of reactos
[00:43] aioue has joined the channel
[00:43] jerrysv: speaking of which, anyone know if node runs on reactos?
[00:44] sechrist_: reactos.. wow I haven't looked at that in so long
[00:44] jerrysv: tempted to try it
[00:44] migimunz has joined the channel
[00:45] jerrysv: but would require me to get vbox set up first. maybe a rainy day project
[00:45] criswell has joined the channel
[00:45] a_suenami has joined the channel
[00:45] jesusabdullah: I used to be all about following reactos and haiku and shit
[00:45] insin: it doesn't barf when it needs to display man stuff any more
[00:45] jesusabdullah: then I started having to get work done
[00:46] lorfds has joined the channel
[00:46] lorfds: does anyone know how to install zombie via npm on os x
[00:46] lorfds: i need to know how to setup my node_path
[00:46] lorfds: specifically
[00:48] albertosh has joined the channel
[00:49] aioue has joined the channel
[00:50] jscheel has joined the channel
[00:50] jscheel has joined the channel
[00:50] seebees: isaacs: windows npm fix works
[00:51] seebees: isaacs:  ran v0.6.3, npm -> Error: ENOENT
[00:51] isaacs: seebees: oh?
[00:51] isaacs: nice!
[00:51] isaacs: and now you don't have that problem?
[00:51] jscheel has joined the channel
[00:51] jscheel has joined the channel
[00:51] seebees: well I don't get an error when I run npm
[00:51] isaacs: awesome :)
[00:52] isaacs: that's a good start
[00:52] seebees: installing http-proxy works
[00:52] seebees: anything else you want me to try?
[00:52] bobbuck has joined the channel
[00:52] isaacs: i dunno.  whatever you were doing before that wasn't working :))
[00:52] mikeal has joined the channel
[00:52] seebees: (npm_g and npm-g) are in your zip
[00:52] isaacs: yeah, and those don't auto-global as yet
[00:52] themiddleman_itv has joined the channel
[00:52] isaacs: which is unfortnuate.
[00:52] seebees: that's about it.  I'll poke around...
[00:52] isaacs: gotta figure that one out.
[00:53] isaacs: also, the msi needs to set up prefix = %APPDATA%\npm and add %APPDATA\npm to the %Path%
[00:54] joshsmith: anyone know when Mongoose is going to add in insertAll?
[00:55] seebees: you're moving "Program Files\node_modules" to %APPDATA%
[00:55] seebees: or just npm?
[00:55] aioue has joined the channel
[00:56] isaacs: seebees: npm itself will still live there, with node.
[00:56] isaacs: seebees: but, the global installs that npm installs will go into %APPDATA%
[00:56] isaacs: that is, into %APPDATA%\npm\node_modules\blah
[00:56] isaacs: and i think we can make `npm link` work on windows soonish, maybe
[00:57] isaacs: probably not in xp, though
[00:57] seebees: hum.  junctions?
[00:57] seebees: they should work
[00:58] mmalecki: on windows should has extremely low value
[00:59] mikeric has joined the channel
[00:59] isaacs: seebees: they totally should work.
[00:59] isaacs: they're lazy, though
[00:59] isaacs: lazy and weird.
[01:00] nex3 has joined the channel
[01:00] nex3: How does one debug a stack overflow in node?
[01:00] seebees: weird?  how so?
[01:00] chjj: nex3: you look for the recursive function that is going haywire
[01:01] mmalecki: isaacs: welcome to Windows. enjoy your stay. in case of problems, please consult Ctrl+Alt+Del.
[01:01] nex3: I'd really like a backtrace so I'd know where to start looking
[01:03] zeade has joined the channel
[01:03] AvianFlu: mmalecki, in case of problems, please consult your nearest linux distro install disc
[01:03] mmalecki: AvianFlu++
[01:03] v8bot_:  mmalecki has given a beer to AvianFlu. AvianFlu now has 1 beers.
[01:03] isaacs: seebees: well, you can't create junctions to files, the paths need ot be absolute, and there are slightly different semantics around creating and deleting them
[01:04] aioue has joined the channel
[01:04] mmalecki: I actually ditched discs quite a long time ago
[01:04] mmalecki: usb boot ftw
[01:04] mmalecki: I still have no idea how to do full network install tho
[01:05] AvianFlu: tftp is a bitch
[01:05] seebees: isaacs: that is all true.  I suppose I was thinking that for simple cases it should just work.
[01:07] mmalecki: AvianFlu: yeah, it is. there's no easy solution for this, unfortunately
[01:07] mmalecki: so I guess Linux isn't enterprise-ready
[01:07] perezd_ has joined the channel
[01:07] nicholasf has joined the channel
[01:07] AvianFlu: it's clearly not webscael
[01:07] nex3: No one? Backtrace from a stack overflow?
[01:08] AvianFlu: nex3: did it say maximum call stack size exceeded?
[01:08] nicholasf has joined the channel
[01:08] AvianFlu: or did you see a segfault
[01:08] nex3: AvianFlu: neither, it just said "Stack Overflow"
[01:08] nex3: I'll gist the entire output
[01:08] CoverSlide: wow
[01:08] CoverSlide: that's a new one
[01:08] nex3: [https://gist.github.com/1412449
[01:08] seebees: isaacs: "There is a limit of 31 reparse points on any given path."  you winâ€¦ again.
[01:09] Dmitrijus: nex3: well, enable teh core dumps, wait for it, gdb it!
[01:09] AvianFlu: nex3: it looks like somebody wrote `throw 'Stack Overflow'`
[01:10] AvianFlu: which is just lulz
[01:10] rwasielewski has joined the channel
[01:10] AvianFlu: but yeah, that's new to me too
[01:10] chjj: nex3: stack overflows dont usually look like that in node, you wouldnt get the throw e; junk at the top
[01:10] chjj: and it wouldnt say stack overflow
[01:10] deadmau5: fuck i hate when people throw strings
[01:10] deadmau5: or callback(string)
[01:10] AvianFlu: yeah
[01:11] mmalecki: ahahahaha
[01:11] AvianFlu: I had a lib that I forked because every error was either callback(data) or callback(err)
[01:11] nex3: Ah, I see... we are wrapping exceptions in a potentially weird way
[01:11] AvianFlu: so you'd have to check every object afterwards to see what it was
[01:11] deadmau5: i see that soooo often
[01:11] deadmau5: unfortunately
[01:11] caolanm has joined the channel
[01:11] Tuller has joined the channel
[01:11] mmalecki: I'll start putting throw 'stack overflow' into random places
[01:11] chjj: AvianFlu: oh wow
[01:12] AvianFlu: chjj: YEAH.
[01:12] chjj: that would drive me insane
[01:12] deadmau5: ahahaha
[01:12] deadmau5: do it
[01:12] deadmau5: all over core
[01:12] AvianFlu: yeah, I was waiting on some other small pull request for two weeks
[01:12] deadmau5: no descriptive error message either
[01:12] AvianFlu: and then one day I just stopped and re-wrote every callback in 600 lines of code
[01:12] deadmau5: just stack overflow for everything
[01:13] bradleyg has joined the channel
[01:13] mmalecki: also, make it happen after some random interval
[01:14] deadmau5: yeah
[01:14] deadmau5: and write it with that weird []+whatever hack
[01:14] matin has joined the channel
[01:14] deadmau5: so you can never find it
[01:14] mmalecki: oh yes
[01:14] matin has left the channel
[01:14] mmalecki: that would make me a very bad human being, right?
[01:15] jesusabdullah: Not sure
[01:15] AvianFlu: that would make a funny troll pull request... "Error messages too descriptive, too friendly to beginners.'
[01:15] mmalecki: lol
[01:15] deadmau5: make them work for it
[01:15] nex3: Okay, so, I've got the actual exception object
[01:15] stantona has joined the channel
[01:15] nex3: But it still has no stack information attached to it
[01:15] AvianFlu: nex3: gist it
[01:16] deadmau5: :s
[01:16] deadmau5: maybe some failed attempt to inherit from Error
[01:16] nex3: https://gist.github.com/1412449
[01:16] AvianFlu: OKAY. that makes sense.
[01:16] chjj: okay, so someone was wrapping that error?
[01:16] AvianFlu: something, somewhere, is recursing in an infinite loop
[01:16] mmalecki: ok, now I'm gonna write my first line of coffeescript in my entire life
[01:17] jesusabdullah: Godspeed, sir
[01:17] jesusabdullah: I wrote cs once
[01:17] chjj: nex3: this should be easy, search for the code that wraps that error
[01:17] AvianFlu: nex3: try to find recursion and throw the recursive call into a process.nextTick()
[01:17] jerrysv: mmalecki: sucker
[01:17] jesusabdullah: but then I learned js better and now I, well
[01:17] jesusabdullah: I'm happy with what I got
[01:17] mmalecki: I need it for forever testing :(
[01:17] mmalecki: actually, I need any command
[01:17] deadmau5: i LOVE adding separate coffeescript support
[01:17] nicholasf has joined the channel
[01:17] mmalecki: deadmau5: no, we have -c swithc
[01:17] mmalecki: *switch
[01:18] chjj: whats all this talk of coffeescript, cut it out
[01:18] mmalecki: I'll just use python
[01:18] jocafa has joined the channel
[01:18] nex3: chjj: I know where it's getting wrapped
[01:18] mmalecki: I'll die a being a coffeescript virgin
[01:18] nex3: AvianFlu: If I knew what the recursion was, I wouldn't need the backtrace :p
[01:18] marcello3d: weeee
[01:18] jerrysv: i bought a book on it, during an agile week sale for pragprog, still haven't read it
[01:19] chjj: a book on what?
[01:19] jesusabdullah: Why were you thinking of writing cs?
[01:19] deadmau5: the best is
[01:19] deadmau5: http://cl.ly/CEGy
[01:19] jesusabdullah: cs support for a project?
[01:19] deadmau5: that's because, it's not a language
[01:19] deadmau5: it's a parser
[01:19] chjj: ...theres books on coffeescript? ...
[01:19] jerrysv: chjj: the forbidden language
[01:19] chjj: ACTION vomits.
[01:20] koo5 has joined the channel
[01:20] jerrysv: chjj: http://pragprog.com/book/tbcoffee/coffeescript
[01:20] jerrysv: (you asked)
[01:20] Hamms has joined the channel
[01:21] chjj: wow, someone wanted to cash out on coffeescript
[01:21] pksunkara: which is the best mock?
[01:21] pksunkara: to be used along with vows
[01:21] chjj: "CoffeeScript is JavaScript done right."
[01:21] chjj: hahahahahahahahahhaha
[01:21] jerrysv: chjj: having watched a friend write a book for pragprog, that's a hellofa lot of work to "cash out"
[01:21] jerrysv: pksunkara: what are you mocking?
[01:22] pksunkara: github api
[01:22] pksunkara: github.com/pkumar/octonode
[01:23] nex3: So I'm still in the position where I have this exception object that has no stack information
[01:23] jesusabdullah: s/right/like ruby/
[01:23] jesusabdullah: which is fine, but we should call it what it is
[01:23] nex3: Whether or not that exception is wrapped
[01:23] jerrysv: nex3: when i force a stack overflow, that's not even the error i'm getting
[01:24] pksunkara: I don't know, I like coffeescript just cuz it redcues the code I have to write
[01:24] pksunkara: I convert it into js before publishing
[01:24] nex3: jerrysv: you're not getting RangeError?
[01:24] deadmau5: and increases what you have to debug
[01:24] jerrysv: nex3: so, that error could be coming from the OS - maybe compile in debug mode and run inside of gdb
[01:24] chjj: i think someone is messing with nex3's code to try to make him slowly go insane or something
[01:24] deadmau5: who writes code
[01:24] nex3: It's not impossible
[01:24] deadmau5: automate that shit
[01:24] jerrysv: nex3: yes, getting range error, not the other gist you posted though
[01:25] nex3: yeah, that was weird wrapping
[01:25] nex3: But getting rid of it still doesn't get me a stack
[01:25] jerrysv: nex3: RangeError: Maximum call stack size exceeded 
[01:25] marcello3d: github.com/pkumar/octonode: the c-style method names are very un-javascript
[01:25] nex3: jerrysv: yes, that's what I'm getting now
[01:26] pksunkara: marcello3d: it's just a draft and it's not even mine ;)
[01:26] kiilo has joined the channel
[01:26] marcello3d: just saying :)
[01:26] jesusabdullah: pksunkara: octonode should use camelCase methods
[01:26] jesusabdullah: pksunkara: cause camelCase rocks
[01:26] pksunkara: jesusabdullah: definitely
[01:26] chjj: no it doesnt
[01:26] chjj: i hate camelcase
[01:26] marcello3d: it's not a matter of rocking
[01:26] pksunkara: camelCase ++
[01:27] marcello3d: it's a matter of consistency
[01:27] chjj: camelcase is such a failure i refuse to type it in camelcase
[01:27] jesusabdullah: Yeah, it's the consistency really
[01:27] jesusabdullah: in python i_use_undascores
[01:27] chjj: yeah, i use it, but i dont like it
[01:27] jesusabdullah: whiner
[01:27] CrabDude has joined the channel
[01:27] pksunkara: let's talk about what mocking framework should I use?
[01:27] chjj: :(
[01:27] jesusabdullah: hehe
[01:27] pksunkara: I haven't got an answer yet
[01:27] marcello3d: someone should write a javascript preparser that replaces camelcase with underscores
[01:27] chjj: i would prefer lowercase + underscores
[01:27] marcello3d: call it java_script
[01:27] jesusabdullah: pksunkara: nock sounded nice, but you should camelcase those methods first
[01:28] chjj: javascript is just a bad name all around
[01:28] marcello3d: and the commandline would be j_s
[01:28] chjj: and ecmascript is worse
[01:28] pksunkara: jesusabdullah: those are not even written yet, they are a todo list
[01:28] chjj: i vote we just call it "js"
[01:28] jesusabdullah: ah
[01:28] jesusabdullah: in that case
[01:28] chjj: the j and the s dont stand for anything
[01:28] jesusabdullah: DONT FORGET
[01:28] pksunkara: jesusabdullah: copied from someone else's abandoned project
[01:28] jesusabdullah: oh, I see
[01:28] jesusabdullah: YOU ARE FORGIVEN
[01:28] jocafa: except that all of the standard interfaces in js are camel case
[01:29] chjj: i want to fork v8 and make that not the case ^
[01:29] pksunkara: jesusabdullah: If you want to see the functions until now, see the "usage" seciton
[01:29] jocafa: parseInt, toString...
[01:29] chjj: get it? "not the case"? get it?
[01:29] jocafa: lawls
[01:31] pksunkara: marcello3d: what use would j_s be?
[01:31] marcello3d: so chjj doesn't have to use camelCase
[01:31] pksunkara: lol
[01:31] marcello3d: we could also replace . with ->
[01:31] marcello3d: and require $ in front of variable names
[01:31] deadmau5:  and \
[01:32] deadmau5:  Awesome\Namespacing\FTW
[01:32] pksunkara: I think the name should be php instead of j_s
[01:32] chjj: it wouldnt be called j_s !
[01:32] pksunkara: chjj: jj?
[01:33] sdwrage has joined the channel
[01:33] chjj: lets rename node to php so it gets more popular
[01:33] themiddleman_itv has joined the channel
[01:33] marcello3d: probably best to call it PHjP to avoid trademark violation
[01:33] RobWC has joined the channel
[01:33] pksunkara: php was the first ever language I learnt 2 yrs ago
[01:33] marcello3d: or perhaps p_h_j_p
[01:34] pksunkara: jesusabdullah: thanks for nock, it's awesome
[01:34] AvianFlu: I started writing BASIC in 1993
[01:34] AvianFlu: I was 9 XD
[01:34] githogori has joined the channel
[01:34] tonymilne: If i have a buffer (from a zeromq message), whats the best way to convert that to a JavaScript object?
[01:34] chjj: i think i started writing php in ~2000 when i was 11 ;)
[01:35] pksunkara: AvianFlu: You were 9 in 1993?
[01:35] jesusabdullah: pksunkara: thank pedro and nuno, yo
[01:35] chjj: only 5 years older than me
[01:35] deadmau5: tonymilne give msgpack a go
[01:36] jesusabdullah: I wrote basic for my ti-83 when I was 16
[01:36] jesusabdullah: did some html when I was like 14
[01:36] AvianFlu: pksunkara,  yeah
[01:36] abraxas has joined the channel
[01:36] chjj: AvianFlu is oldschool
[01:36] pksunkara: AvianFlu: sorry abt that, some derp calculation I made
[01:36] AvianFlu: tonymilne, if it's a Buffer object, Buffer.toString()
[01:38] tonymilne: AvianFlu then back to object literal again? JSON.parse(buffer.toString())
[01:38] AvianFlu: yep
[01:38] ircdearia has joined the channel
[01:38] tonymilne: yeah, really was hoping for something better.
[01:38] tonymilne: ;)
[01:39] deadmau5: that's the awesome thing about zmq you can use whatever protocol you want
[01:39] deadmau5: just wrap it in some api
[01:39] deadmau5: well one of the awesome things
[01:39] tonymilne: yeah, i get all those benefits
[01:39] ditesh|cassini has joined the channel
[01:39] robbiet480 has left the channel
[01:40] truedat101 has joined the channel
[01:41] secoif has joined the channel
[01:41] jocafa: i need to spend some quality time with zmq
[01:42] aioue has joined the channel
[01:42] tonymilne: is there a way to do a distributed zmq?
[01:42] Kunda has joined the channel
[01:42] tonymilne: (hmm, don't know if that makes senseâ€¦ firstly, can you use zmq across different servers within the same network)
[01:42] secoif has joined the channel
[01:43] tonymilne: from there, can you do something thats pub/sub so that its not single point of failure on one server that all of the pub/sub are binding / connecting to?
[01:43] deadmau5: yes
[01:43] deadmau5: you use the different socket types to constructor the network topology for whatever your use-case it
[01:44] secoif has joined the channel
[01:44] deadmau5: workers use push/pull, pubsub use.. pub/sub haha etc
[01:44] rwasielewski has joined the channel
[01:44] deadmau5: i have a half-assed node implementation working on 0.6.x getting around 80krps but
[01:45] deadmau5: there's not really any point to redo that stuff
[01:45] deadmau5: it's tiny anyway
[01:45] sente: so i got node.js working, no idea what to do with it though. i just wanted to play.  can anyone suggest DevOp-type node.js resources or such?
[01:45] tonymilne: Ok, well basically i have node-http-proxy that will balance between multiple app servers (on different VPS), i will have something that posts a request (basically a remote command) to it, and i want each of the app servers to know about the request, so that they can all respond accordingly. Any ideas on this deadmau5?
[01:45] marcello3d: what's devop?
[01:46] jocafa: could someone write a badass operational transformation library that works on arbitrary objects for me so i don't have to?
[01:46] deadmau5: tonymilne you wouldnt use message passing for that
[01:46] deadmau5: not really suited for streaming requests
[01:46] deadmau5: that's what a load balancer is for
[01:46] pksunkara: Are there any nodejs conferences in India?
[01:46] sente: marcello3d: half developer half sys-admin
[01:46] marcello3d: ah
[01:47] tonymilne: deadmau5 how so? I feel like i need to do it the way i described, unless you can explain why - otherwise?
[01:47] deadmau5: you could hack it together im sure but messaging is not really designed for that
[01:48] deadmau5: that's what streaming is for
[01:48] deadmau5: streaming things
[01:48] chjj: streaming is webscale
[01:48] chjj: lots of webscale
[01:48] tonymilne: i can't stream from the 3rd party that makes the request into my stack.
[01:48] tonymilne: thats some Java app ;)
[01:48] tonymilne: i have load balanced app + socket.io servers using a load balancer  + cluster.
[01:49] tonymilne: i need all of them to act upon the incoming request from said 3rd party,
[01:49] tonymilne: by pushing to their connected sockets, etc.
[01:49] k1ttty has joined the channel
[01:49] gavin_huang has joined the channel
[01:49] Samuel_Roldan has joined the channel
[01:50] tonymilne: I'm thinking i can use redis store for socket.io , but i still feel like the app instances will need to all know that the 3rd party has made a request.
[01:50] jocafa: java is a 4-letter-word
[01:51] deadmau5: your network design should be pretty opaque
[01:51] deadmau5: so
[01:51] ryan_stevens: tonymline: https://github.com/dshaw/socket.io-redis is a good project for that
[01:51] deadmau5: either you need some nodes to get that data
[01:51] deadmau5: or you dont
[01:51] ryan_stevens: uses redis as a bus to pub to all node instances listening 
[01:51] deadmau5: and if you do, then proxy to them or whatever
[01:51] Samuel_Roldan: Hi everyone, I am trying to run a jellyfish script and the following error occurs. (I wonder if it is related to some missing module)
[01:51] Samuel_Roldan: node.js:201
[01:51] Samuel_Roldan:  Â  Â  Â  Â throw e; // process.nextTick error, or 'error' event on first tick
[01:51] Samuel_Roldan:  Â  Â  Â  Â  Â  Â  Â ^
[01:51] Samuel_Roldan: Error: Cannot find module '../../build/default/window_context'
[01:51] deadmau5: still you dont pub a whole request
[01:51] tonymilne: no, 
[01:51] deadmau5: massive uploads n shit
[01:51] tonymilne: im not pubbing a request!
[01:51] tonymilne: lol.
[01:51] deadmau5: oh
[01:51] deadmau5: well fuck
[01:51] deadmau5: haha
[01:52] deadmau5: say that
[01:52] tonymilne: I'm pebbling what the request is essentially telling my stack
[01:52] tonymilne: imaging this.
[01:52] TN has joined the channel
[01:52] tonymilne: 3rd party tells me its now 4th period
[01:52] tonymilne: i tell all connected socket.io clients, its now 4th period (â€¦)
[01:52] tonymilne: and some logic, etc.
[01:52] devongovett has joined the channel
[01:52] tonymilne: or i get my apps to re-load the data from mongoose, after the receiving app updated my model/document.
[01:53] Samuel_Roldan: does this ring a bell to anyone: Error: Cannot find module '../../build/default/window_context'
[01:53] tonymilne: so just pub/subbing a command to my apps, more than the request iteself.
[01:53] deadmau5: ah
[01:53] tonymilne: (it's for a sporting app)
[01:53] deadmau5: yes then zmq would be perfect
[01:53] deadmau5: for that
[01:53] tonymilne: so 3rd party tells me score event happened
[01:53] tonymilne: but it will come into my load balanced stack
[01:53] tonymilne: and i need "everyone" to know about it.
[01:54] tonymilne: kk, cool :)
[01:54] tonymilne: thanks for being a sounding board!
[01:55] tonymilne: Lastly, um, zeromq - it's just a lib, right? (no need to start it up / keep it running?)
[01:55] tonymilne: it will "just work"?
[01:55] deadmau5: just a lib
[01:55] pksunkara: When will nodejs support __noSuchMethod__ ?
[01:55] AvianFlu: pksunkara, I'd way rather just have people consuming my APIs who can remember function names
[01:55] jldbasa has joined the channel
[01:56] Samuel_Roldan: anyone =/
[01:56] pksunkara: AvianFlu: It's for writing API's :(
[01:56] deadmau5: magic
[01:56] marcello3d: pksunkara: that'd be a v8 thing
[01:56] deadmau5: sucks
[01:56] marcello3d: pksunkara: and harmony proxies basically replace that
[01:57] jesster7 has joined the channel
[01:57] jesster7 has left the channel
[01:58] CrabDude: pksunkara: checkout the node_proxy module for Harmony Proxies in node
[01:58] diminoten has joined the channel
[01:58] Aria has joined the channel
[01:59] CrabDude: pksunkara: npm install node-proxy
[01:59] pksunkara: CrabDude: thnx
[01:59] pksunkara: though I don't think I will use it
[01:59] CrabDude: pksunkara: fair enough
[01:59] CrabDude: =)
[02:04] davidbanham has joined the channel
[02:04] aioue has joined the channel
[02:04] icewhite has joined the channel
[02:04] stantona has joined the channel
[02:05] criswell has joined the channel
[02:05] benvie: run `node --harmony_proxies --harmony_weakmaps`
[02:06] benvie: bam
[02:06] benvie: do not install node_proxy if you're using node 0.6.x
[02:06] aioue has joined the channel
[02:07] deadmau5: and then explain that you have to use those flags to use your api :p
[02:07] stantona has joined the channel
[02:08] benvie: I'd rather use the thing built directly into V8 than a third-partu module for something that fundamentally changes how javascript operates behind the scenes
[02:08] benvie: the module was made before it was implemented in v8, now it's obsolete
[02:09] jamescarr has joined the channel
[02:09] benvie: and the way it works requires every property lookup and every function call to be redirected
[02:09] benvie: so that's better done at the engine level in my opinion
[02:09] jamescarr: so... I have a potentially large JSON response I can get back from this service I'm calling... is there a good way to chunk the JSON response?
[02:10] ChaoWang has joined the channel
[02:10] jomoho2 has joined the channel
[02:10] SubStack: jamescarr: sure is!
[02:10] SubStack: https://github.com/dominictarr/JSONStream
[02:10] jamescarr: SubStack, tell me sir :)
[02:10] jamescarr: cool
[02:10] SubStack: I'm using this in testling for streaming json output
[02:11] SubStack: jamescarr: also I wrote this https://github.com/substack/node-gutter that lets you nest streams in json documents and the documents will get streamed intelligently
[02:11] bobbuck has joined the channel
[02:11] jamescarr: cool
[02:11] jamescarr: I'll have to try them out
[02:11] marcello3d: SubStack: how many of your modules would you say you maintain/use?
[02:11] SubStack: good for streaming multiple streams into a document and uploading to couch in-place
[02:11] marcello3d: cause you have a bajiggilyion
[02:11] SubStack: marcello3d: most
[02:12] postwait has joined the channel
[02:12] SubStack: even if I don't touch the really old ones much I still depend on them indirectly in new code a lot
[02:12] SubStack: substack : testling-server $ npm ls | wc -l
[02:12] SubStack: 71
[02:13] phiggins has joined the channel
[02:13] JasonSmith: isaacs: Oh shit. I think I am losing my mind.
[02:13] marcello3d: crazy
[02:13] heavysixer has joined the channel
[02:13] isaacs: JasonSmith: oh?
[02:13] JasonSmith: I used to fear and loathe semicolon insertion. Then when I joined CouchOne, mikeal said, "nah, it's never a problem"
[02:13] SubStack: and then browserling has a lot of deps too but they're spread out among several package.jsons so they're harder to count
[02:13] JasonSmith: then I noticed your code using less and less of them at all
[02:13] JasonSmith: Over about 2 years, I've moved that way
[02:13] isaacs: JasonSmith: oh, i pretty much only use semicolons where they're relevant, and in node.
[02:14] isaacs: ie, node-core
[02:14] SubStack: I like semicolons is all
[02:14] marcello3d: yea, I don't use semi colons at all
[02:14] SubStack: they fit my style pretty well
[02:14] JasonSmith: And then just today, I was reading my own code and I realized, not only does Javascript get it right when you terminate statements with newline, IT ALSO GETS IT RIGHT when you continue statements on new lines!
[02:14] benvie: there's only like one or two ways it can fuck you up and you have to already be writing your code in a weird way to trigger that
[02:14] dgathright has joined the channel
[02:14] isaacs: JasonSmith: awesome, rihgt?
[02:14] isaacs: JasonSmith: the only tricky thing is *starting* lines with ( and [
[02:14] marcello3d: I only have one place in my codebase that I need a semicolon I think
[02:15] benvie: yeah
[02:15] isaacs: JasonSmith: which is why i prefix those with ; so that they'll work whether the line above has a ; or not
[02:15] JasonSmith: oh yeah, I've been prefixing that with semicolon for a while
[02:15] JasonSmith: ; ['stuff'].forEach(...
[02:15] isaacs: right
[02:15] SubStack: I especially like trailing semicolons on their own line flush with the opening column of some complicated multi-line expression
[02:15] isaacs: that's just safer
[02:15] jacobolus has joined the channel
[02:15] benvie: starting with parens is the only place I can imagine it ever happening when you weren't doing something completely dumb
[02:15] isaacs: i'd like to start indenting with semicolons
[02:15] benvie: as there's a few places it makes sense to do that and it could end up running a function from the line before
[02:15] marcello3d: yea, it's exactly like jason's example
[02:15] briancray has joined the channel
[02:15] isaacs: also, newlines?  not safe. you can't trust newlines.  Just use semicolons until your editor word-wraps
[02:15] JasonSmith: SubStack: Well, I noticed a couple weeks ago isaacs stopped terminating his `var` stanzas and I was like, yeah that's it, I'm all in
[02:16] benvie: hahahaha
[02:16] marcello3d: I have var foo = { ... } [...].forEach
[02:16] marcello3d: basically
[02:16] SubStack: I rarely do multiple vars at once
[02:16] isaacs: "oh, mehhh, it's too much visual clutter, all those semicolons, wahhha, i like whitespace, mwehhh"
[02:16] isaacs: babies.
[02:16] benvie: yeah it starts with the var blocks, it irks you because of the asymmetry
[02:16] SubStack: and only if it fits on the same like like var x = 0, y = 0
[02:16] benvie: and then it's the one line functions
[02:16] isaacs: use semicolons, just configure your editor to not show them
[02:16] joemccann has joined the channel
[02:16] SubStack: much easier to reorganize var blocks when each line has its own var
[02:17] benvie: pretty soon you're out walking the streets doing nasty things for new lines
[02:17] JasonSmith: Also, I can finally use the conditional syntax I have been missing since Perl! https://github.com/iriscouch/erlang.js/blob/master/lib.js#L62-64
[02:17] JasonSmith: Both Ruby and Python screw up what IMO is the most aesthetic way to do that expression. (It looks LISPy)
[02:17] JasonSmith: Although I still like Python's: return foo if expression else bar;
[02:17] davidascher has joined the channel
[02:18] marcello3d: super backwards though
[02:18] tomlion has joined the channel
[02:18] alexcheninfo has joined the channel
[02:19] benvie: I don't really want to program exactly, more like have a casual conversation with my computer
[02:19] isaacs: SubStack: sometimes, i like having a little bit of conceptual inertia keeping my var's all glomed together
[02:19] benvie: how's it going v8
[02:19] jocafa: this is why i code exclusively in lolcode
[02:19] benvie: node can you send me some vars
[02:19] secoif has joined the channel
[02:19] SubStack: isaacs: I like how everybody can have their own preferences and I don't have to care
[02:19] isaacs: SubStack: yeah, that's my favorite
[02:19] SubStack: because I can just require('somemodule')
[02:19] isaacs: i saw when i patched mkdirp that you use 4 space indents
[02:19] benvie: yeah I was looking for a lib to translate javascript into LOLCODE. All the implmenetations I've found go the other way and it's disappointing
[02:19] SubStack: and it works no matter how many spaces they used
[02:20] marcello3d: SubStack: nice article btw
[02:20] isaacs: SubStack: what's up with that, man?
[02:20] JasonSmith: isaacs: Yeah, recently in my code I have a "var block" with like all my imports. Then no semicolon. Then another "var block" for like actual variables
[02:20] stantona has joined the channel
[02:20] isaacs: SubStack: do we need an intervention or something?
[02:20] isaacs: 4 is too many
[02:20] maxogden: "i use three space tabs because fuck you"
[02:20] SubStack: 4 is awesome
[02:20] benvie: CAN HAZ UTIL?
[02:20] marcello3d: 4 is awesome
[02:20] SubStack: marcello3d: hahaha
[02:20] russfrank: there's nothing wrong with 4!
[02:20] russfrank: i use 3 though.
[02:20] russfrank: 2 is too little. if you use 2, you're lame
[02:20] isaacs: i used to use tabs at yahoo, and it was great.  i configured my editor to show them as 8 spaces when writing, then as 1 space when debugging
[02:20] SubStack: 3 is the compromiser
[02:20] marcello3d: especially if your ide does it for you
[02:20] asoltys has joined the channel
[02:20] benvie: I use 2 now and I'm feeling like 1 is growing on me
[02:20] isaacs: 3 is odd.
[02:21] isaacs: only odd people use it
[02:21] isaacs: indents should be multiples of 2 spaces.
[02:21] isaacs: 8, 4, 2, 1
[02:21] isaacs: 1/2
[02:21] isaacs: etc.
[02:21] benvie: binary
[02:21] SubStack: I like 4 with a hard wrap at 80 cols
[02:21] marcello3d: now you're just trolling
[02:21] SubStack: keeps me honest
[02:21] marcello3d: what about floating point tabs?
[02:21] russfrank: i'm odd? :(
[02:21] isaacs: marcello3d: srsly!
[02:21] JakeyChan has joined the channel
[02:21] marcello3d: SubStack: I'm all about the 120 cols
[02:21] russfrank: yeah I do hard wrap at 80 too, that's hot.
[02:21] maxogden: 4 space prevents you from coding like an rtard
[02:21] isaacs: marcello3d: SciTE could do it
[02:21] benvie: well like for doing var blocks, I indent the 4 spaces just so it's symmetrical
[02:21] russfrank: I'd switch to 4 but then I'd have to reindent _everything_
[02:21] benvie: I need a better solution
[02:22] josephg has joined the channel
[02:22] benvie: thinking like just var one a line by itself
[02:22] isaacs: marcello3d: you could use non-mono fonts, and so spaces were les than a standard character
[02:22] marcello3d: isaacs: coding in zapfino is really how you get down it
[02:22] robertj: is there any way to cancel a running context?
[02:22] marcello3d: *down to it
[02:22] SubStack: if you use 4 spaces at 80 cols then you pretty much have to factor everything out into reusable modules
[02:22] JasonSmith: SubStack: Yeah nice article. A small addition: Not only can you tell exactly where all those modules came from; but you can also tell exactly where your own code calls into those modules. That's crucial when refactoring or debugging
[02:22] isaacs: SubStack: that's why bmc prefers 8
[02:22] marcello3d: I mean, you really get a feel for the code
[02:22] JasonSmith: I search for "foo\." all the time in Vim
[02:22] isaacs: you basically only get 3 indents befor eyou're out of space
[02:22] marcello3d: its curves and movements
[02:23] pauls1 has joined the channel
[02:23] zachsmith: 8?! that's gross
[02:23] marcello3d: you know what's nuts
[02:23] isaacs: JasonSmith: you know, that conditional styleâ€¦. you can write it something like an inline switch that way
[02:23] marcello3d: java's source code
[02:23] marcello3d: it uses 8-space tabs
[02:23] marcello3d: er
[02:23] marcello3d: it uses real tabs, as if they were 8-space
[02:23] marcello3d: but everything is 4-space indented
[02:23] marcello3d: so lines are mixed with real tabs and spaces
[02:24] JasonSmith: isaacs: you mean like chaining the "false" expression as this cascade of conditional expressions? That's awesome
[02:24] lorfds: ummm...what does this mean
[02:24] lorfds: `make install` is not implemented yet. Bug bnoordhuis about it in #node.js
[02:24] makeInstallBot: lorfds: `make install` is not supported on current node.js `master` due to build system refactor. Please use latest stable tag (v0.6.x).
[02:24] robertj: ACTION can't believe were still formatting whitespace by hand in 2011
[02:24] lorfds: weak
[02:24] isaacs: JasonSmith: https://github.com/isaacs/npm/blob/tar-js/lib/utils/config-defs.js#L114-116
[02:24] SubStack: java is the most flawlessly deadpan parody language ever written
[02:24] JasonSmith: 80 columns is the most overrated concept in programming. /cc maxogden 
[02:24] kazupon has joined the channel
[02:25] marcello3d: JasonSmith: is it?
[02:25] isaacs: JasonSmith: yeah, 60 is really much better
[02:25] SubStack: bill joy is going to pop out any minute and shout "fooled you!"
[02:25] maxogden: my stance on whitespace something like: children are dying in africa, who cares
[02:25] marcello3d: my problem with 80 columns is it discourages written out variable names
[02:25] JasonSmith: 11" MacBook Air. iTerm2: echo "$COLUMNS" -> 169
[02:25] benvie: I have to link this every time Java is mentioned http://codegolf.stackexchange.com/questions/3994/write-a-code-golf-problem-in-which-java-wins
[02:25] Emmanuel` has joined the channel
[02:25] isaacs: if it's too wide for me to show two files side by side in 16pt font on my 13" macbook screen, it's too wide.
[02:25] isaacs: effectively, that's like 50-something chars
[02:25] SubStack: maxogden: they had better be dying for the right kind of whitespace then
[02:26] zachsmith: JasonSmith: We need backwards compatability with 1980's terminals
[02:26] JasonSmith: The only decent argument for 80 columns is if you do 3-way merges all day long
[02:26] JasonSmith: zachsmith: Totally!
[02:26] maxogden: SubStack: the only space they have is in their empty stomachs
[02:26] SubStack: so like
[02:26] isaacs: JasonSmith: you must have excellent vision
[02:26] isaacs: $ echo "$COLUMNS"
[02:26] isaacs: 99
[02:26] SubStack: 2 spaces?
[02:26] JasonSmith: It's okay if it's a three-way. Merge.
[02:26] russfrank: marcello3d: why would it idscourage written out variable names
[02:26] JasonSmith: It's not gay if it's in a three-way. Merge.
[02:26] marcello3d: just cause
[02:26] isaacs: oh, wait, that wasn't fs
[02:26] isaacs: $ echo "$COLUMNS"
[02:26] isaacs: 141
[02:26] russfrank: it discourages lots of indentation, but so do all of the Big Guys, if you know what I mean
[02:27] russfrank: ie those who are more experienced than me and are often right about such things
[02:27] isaacs: 80 char width is the *maximum*.  not the goal.
[02:27] JasonSmith: Linus Torvalds enforces 8 space indent (for good reason, in C), and 80 columns. Because he merges all day long.
[02:27] jxie has joined the channel
[02:27] SubStack: what if you need to encode your program on punch cards
[02:27] SubStack: WHAT THEN
[02:27] JasonSmith: maxogden: I'm strongly considering switching to 4 space. You're a fan?
[02:28] AD7six has joined the channel
[02:28] russfrank: me too JasonSmith !
[02:28] maxogden: JasonSmith: i have no stance on whitespace i think its a stupid argument
[02:28] alexcheninfo has joined the channel
[02:28] isaacs: maxogden: WHITESPACE THINKS YOURE A STUPID ARGUMENT!!
[02:28] isaacs: so ther
[02:28] maxogden: you can call me funsucker
[02:28] SubStack: maxogden is racist against whitespace
[02:28] JasonSmith: maxogden: Oh, the "rtard" comment above was an ironic joke then?
[02:28] marcello3d: benvie: I totally don't get that java code
[02:28] SubStack: no wait, the other one
[02:28] jocafa: tabs to indent, spaces to align
[02:29] maxogden: JasonSmith: no that was true actually
[02:29] benvie: the challenge was to come up with something that java could do in less code than any other language
[02:29] maxogden: JasonSmith: but my political stance on the whitespace issue is neutral
[02:29] marcello3d: benvie: where is a value assigned to x?
[02:29] benvie: the only answer was someone outputting a java division by zero stack trace
[02:30] benvie: and even that was verbose
[02:30] JasonSmith: maxogden: Yeah that is why Linus wants 8 space
[02:30] maxogden: benvie: how about a script that script that parses html without significant memory leaks
[02:30] maxogden: benvie: or convert an XLS to a CSV
[02:30] stantona has joined the channel
[02:30] JasonSmith: (In C) if you are 3 indentations deep, that spells trouble
[02:30] benvie: I don't know if java can do that sorry
[02:31] maxogden: benvie: it can, my point is that javas strength is in the amount of man-hours dumped into its libraries over the last 15 years
[02:31] jamescarr: SubStack, doh... JSON Stream handle http basic auth?
[02:31] SubStack: jamescarr: what are you trying to do?
[02:32] SubStack: JSONStream just takes a stream and returns another stream which is also json
[02:32] jamescarr: I have some JSON based services on another site that use http basic auth to authenticate
[02:32] jamescarr: ah I see
[02:32] benvie: my experience with java and people who spend their time doing things in it is that an inordinate amount of time is spent on the journey going somewhere and not being there
[02:32] jamescarr: nvm... I can make the request myself and pass the stream off
[02:32] SubStack: jamescarr: just pipe it through mikeal's request lib
[02:32] jamescarr: cool
[02:32] SubStack: that's what I'm doing to dump some streams into couch
[02:32] jesster7 has joined the channel
[02:32] SubStack: request does all of the http things
[02:32] jesster7 has left the channel
[02:32] jamescarr: SubStack, yeah, I fogot about request. :)
[02:32] jamescarr: *forgot
[02:32] SubStack: only pipier
[02:33] jamescarr: and I was using it back when mikeal first released it ;)
[02:33] maxogden: benvie: it might not be the most 'agile' language ever invented but it is (on average) more dependable at scale than a lot of high level dynamic languages
[02:33] SubStack: all of the pipes
[02:33] twolfson has joined the channel
[02:33] alexcheninfo has joined the channel
[02:33] JasonJS has joined the channel
[02:33] chrisvwebdev has joined the channel
[02:33] jamescarr: benvie, heh, I blogged about this recently, and my disappointment at some devs in my workplace essentially writing wordpress. In java.
[02:33] benvie: it has its place but I do not like it
[02:34] SubStack: maxogden: yep it's super great if you want to build reliable and performant software
[02:34] SubStack: good thing I just want to build silly programs
[02:34] benvie: yeah that's another thing I see constantly
[02:34] benvie: that's a mentality community thing
[02:34] jamescarr: benvie, my take is I don't mind java, I like JVM langauges like groovy, scala, and clojure. But use the right tool for the right job
[02:34] SubStack: like, ponies
[02:34] jamescarr: I really like Enterprise Integration Pattern type stuff in java
[02:34] SubStack: PONIES I SAY
[02:34] benvie: like node and ruby and python are heavily invested in the whole module reuse public thing
[02:35] SubStack: enterprise ponies
[02:35] ajpiano has joined the channel
[02:35] benvie: and in other community I see everyone basically redoing everything over and over for varioud reasons
[02:35] maxogden: benvie: agreed. cant we all just get along?
[02:35] benvie: yeah enterprise is the worst too and that's java land or .net land. .net is way preferable though
[02:35] benvie: we can indeed
[02:36] zachsmith: I only trust code I myself have written
[02:36] benvie: java people don't seem to want to hang out with us here much and the feeling is mutual
[02:36] SubStack: benvie: not sure, I see plenty of NIH and feature duplication in node
[02:36] alexcheninfo has joined the channel
[02:36] SubStack: much of which I am personally responsible for
[02:36] benvie: oh absolutely
[02:36] benvie: I was just looking at the module list today thinking
[02:36] zachsmith: How do I know that open source stuff hasn't been written by some 15 year old kid
[02:36] zachsmith: I trust enterprises
[02:36] benvie: there's 800 modules for converting xml into json and zero for going the other way as far as I could see
[02:37] benvie: but at least in this case it's reproducing things that are 100 lines of code and not 100,000
[02:37] SubStack: zachsmith: I only use modules written by programmers under 18
[02:37] SubStack: they spoil pretty quickly
[02:37] zachsmith: lol
[02:38] SubStack: real jobs ruin a lot of programmers
[02:38] benvie: yeah that's why I try not to have one
[02:38] shoobat has joined the channel
[02:39] alexcheninfo has joined the channel
[02:39] marcello3d: so opinionated :)
[02:39] shoobat: noob here, i have an easy question
[02:39] benvie: I'm a huge fan of syntax highlighting and colors and I was making a thing to make it easy to edit tmTheme and tmLanguage files and just found it funny how many ways the node community has come up with to convert xml into anything else
[02:39] marcello3d: only reason to use xml in node is legacy ;)
[02:39] shoobat: i installed node on my vps, server is running and everything.. now how do i connect to it?
[02:39] benvie: and not the reverse
[02:40] marcello3d: or dealing with some API that doesn't support json
[02:40] marcello3d: (also legacy)
[02:40] sunnyx has joined the channel
[02:40] benvie: the tm formats seem to have had staying power
[02:40] jamescarr: good grief
[02:40] benvie: plist
[02:40] jamescarr: I'm sure I'm being stupid somewhere here: https://gist.github.com/1412981
[02:40] marcello3d: shoobat: open http://serverip:port in your browser?
[02:40] jamescarr: npm globally install package doesnt resolve from node console :S
[02:40] isaacs: jamescarr: npm faq
[02:41] isaacs: jamescarr: global installs are not for require()
[02:41] isaacs: they're for cli apps
[02:41] isaacs: and for npm link
[02:41] shoobat: marcello3d sure sure, that works! but.. i want to grab the content and put it onto a site
[02:41] marcello3d: shoobat: not sure what that means...
[02:41] jamescarr: isaacs, man, I think I just need to read all of npms docs each time you have a new release
[02:41] jamescarr: top to bottom :)
[02:41] shoobat: ummm like on a webpage i put <script>connect.to.node.server</script> or something?
[02:41] isaacs: jamescarr: just the faq, really :)
[02:41] marcello3d: jamescarr: it's been that way since 1.0 I think
[02:42] shoobat: some way to interact with the server with JS?
[02:42] shoobat: on client side
[02:42] marcello3d: shoobat: that's not really a node question
[02:43] tonymilne: unless of course he mis understands the link between front end js and server side js.
[02:43] kilnaar has joined the channel
[02:43] shoobat: sure i just figured someone here knew how to do it.. im probably explaining my problem poorly
[02:44] boltR has joined the channel
[02:44] willwh has joined the channel
[02:44] willwh has joined the channel
[02:44] sdwrage has left the channel
[02:45] piscisaureus_ has joined the channel
[02:45] d_low: hey guys, what's the best way in node to convert json to an object?
[02:46] benvie: hmm
[02:46] davidban_ has joined the channel
[02:46] maxogden: d_low: shell out to java
[02:46] d_low: lol
[02:46] benvie: lol
[02:46] maxogden: d_low: hehe just kidding. JSON.parse
[02:46] d_low: maxogden: will that protect against malicious stuff in the json?
[02:46] benvie: fire up a tombat server
[02:46] AndroUser2 has joined the channel
[02:46] fzzzy has joined the channel
[02:46] benvie: tomcat
[02:46] benvie: get some tiles going
[02:46] jamescarr: wait wait
[02:46] d_low: ohh god
[02:47] maxogden: d_low: pretty sure, its what everyone uses
[02:47] isaacs: d_low: i've got a web service that'll let you post a json string, and it'll return you an object.
[02:47] isaacs: in json
[02:47] maxogden: lol
[02:47] benvie: util.pump
[02:47] isaacs: it's here:  require("http").createServer(function (req, res) { req.pipe(res) }).listen(80)
[02:47] JaKWaC has joined the channel
[02:47] isaacs: oh, i geuss that doesn't quite work
[02:47] brianseeders has joined the channel
[02:48] benvie: send it to Yahoo's YQL
[02:48] isaacs: require("http").createServer(function (req, res) { res.writeHead({}, 200); req.pipe(res) }).listen(80)
[02:48] isaacs: benvie: oh, that's great.  then you can get it in xml, so you can parse it
[02:48] jamescarr: we have web services in "EX M EL"
[02:49] jamescarr: :)
[02:49] d_low: lol. OK. I'll keep using json.parse. I just thought i read somewhere that this was dangerous
[02:49] chrisvwebdev has joined the channel
[02:49] SubStack: function toXml (json) { return '<xml data=' + json + '></xml>' }
[02:49] marcello3d: d_low: the JSON shims can be dangerous if you don't trust the source
[02:49] d_low: marcello3d: i can't. It's a 3rd party site.
[02:49] marcello3d: but most modern browsers have a proper JSON implementation
[02:50] marcello3d: including v8
[02:50] jamescarr: SubStack, sadly, I HAVE SEEN IT
[02:50] benvie: here's one where the IIS guys win. Goddamn SOAP, embedding JSON in xml cdata
[02:50] benvie: is a winning idea
[02:50] TN has joined the channel
[02:50] jamescarr: <historyItems><!CDATA[[{"some":"json"}]]></historyItems> :)
[02:51] benvie: don't forget that you have to encode all the XML entities and then reparse that before you can parse the json
[02:51] jamescarr: SubStack, I guess to be fair though, the team was migrating some legacy hand woven DOM based XML generation to JSON and it was only like that during the transitional phase
[02:51] benvie: and if it's soap you are as likely to have JSON embedded in XML embedded in other XML
[02:52] benvie: the embedded xml being properly escaped of course
[02:52] jamescarr: seen it
[02:53] benvie: last project I got duped into doing in fact, pulling that shit down to an ipad no less to parse a meg of it at a time
[02:54] Venom_X has joined the channel
[02:54] benvie: I made a quick thing to do the conversion through node first but it couldn't go live, had to pull right from the SOAP service
[02:55] jamescarr: benvie, If you're dealing with SOAP I'd suggest this setup I've done with a SOAP service with several megs of responses:
[02:55] tomlion has joined the channel
[02:55] jamescarr: ah nvm
[02:56] rwasielewski has joined the channel
[02:56] marcello3d: ok you guys are distracting. chat later
[02:56] benvie: yeah this was some crazy thing that had to be worked with in place
[03:00] alexcheninfo has joined the channel
[03:00] bobbuck has joined the channel
[03:01] aioue has joined the channel
[03:01] joemccann has joined the channel
[03:02] AndroUser2: Does Ryan Dahl enter thus canal
[03:02] AndroUser2: This channel?
[03:02] syoyo_ has joined the channel
[03:03] mikeric has joined the channel
[03:05] itsme1 has joined the channel
[03:05] strmpnk has joined the channel
[03:05] itsme1 has joined the channel
[03:06] itsme1: Hello, wikipedia says Node.js is suitable for building web servers. Is it not good for building web applications?
[03:06] itsme1: (like Disqus was built on Django)
[03:06] chjj has joined the channel
[03:06] francisl_ has joined the channel
[03:06] davidbanham has joined the channel
[03:06] tonymilne: itsme1 you can build your web server and web app too if you like! :)
[03:07] itsme1: oh
[03:07] tonymilne: node is good for both.
[03:07] itsme1: okay
[03:07] itsme1: and how is the speed of development in javascript, compared to Python?
[03:07] tonymilne: some people just use express for their web server, and focus on building the web app.
[03:07] tonymilne: for me, much faster. i don't know python. ;)
[03:07] itsme1: okay
[03:08] itsme1: JavaScript is my first prog. language and I want to make good use of it
[03:08] itsme1: I am learning JS atm
[03:08] AndroUser2: How about the speed of development compared to rails?
[03:08] itsme1: sure,go ahead
[03:08] AndroUser2: (Ruby)
[03:09] itsme1: yes? faster or too slow?
[03:09] tonymilne: lol, these are personal preference questions for the large part.
[03:09] tonymilne: I'm much faster with JS (node) than ruby+rails.
[03:09] tonymilne: whats your favourite colour?
[03:09] AndroUser2: Why is that?
[03:09] itsme1: right, got it
[03:09] chjj: *the* favorite color you mean
[03:09] chjj: the favorite color is orange
[03:10] tonymilne: yeah, the. ;) lol.
[03:11] itsme1: tonymilne: thanks. Back to learning JS now. Good day :)
[03:11] chjj: why do people like that stupid twitter thing
[03:11] chjj: bootstrap
[03:11] tonymilne: At the end of the day, i suspect the only metric worth comparing is printed on screen here: http://nodejs-vs-ror.nodejitsu.com/
[03:11] CaesarC has joined the channel
[03:11] chjj: it is fail
[03:11] CaesarC: hello everyone.
[03:11] fzzzy has joined the channel
[03:12] AndroUser2: Yeah I don't get it is anyone using bootstrap here?
[03:12] chjj: would i ever trust the twitter guys to write css for me? no
[03:12] AndroUser2: It us the third most watched repo on github
[03:12] chjj: js? no
[03:12] chjj: second now
[03:12] chjj: its even gaining on node =/
[03:12] Leemp has joined the channel
[03:12] TheLifelessOne: lol what are you talking about?
[03:13] chjj: "bootstrap"
[03:13] chjj: for people who dont know how to make websites
[03:13] CaesarC: @<AndroUser2>
[03:13] TheLifelessOne: I see.
[03:13] CaesarC: @<AndroUser2> I am using now.
[03:13] AndroUser2: Why do you use it Caesar
[03:14] torsd has joined the channel
[03:14] CaesarC: you can build a beautiful form more ez.
[03:14] CaesarC: and very quick.
[03:14] CaesarC: copy & paste
[03:14] CaesarC: :D
[03:14] chrisvwebdev has left the channel
[03:14] AndroUser2: But you customize the buttons etc right?
[03:15] CaesarC: yes.
[03:15] Dulak: The twitter thing is an epidemic of people that dislike reading.  If you are a reader, twitter's popularity will baffle you.
[03:15] AndroUser2: Because if you don't it will look too twitterish
[03:15] Dulak: Sometimes I feel like I get paid a lot of money to read the docs.
[03:15] CaesarC: boostrap is one of my css theme.
[03:16] mandric has joined the channel
[03:16] AndroUser2: So node coders are against bootstrap
[03:16] robertj: is it possible to hand-crank the event loop for a context one tick at a time?
[03:16] CaesarC: why?
[03:16] CaesarC: bootstrap is only for css.
[03:16] CaesarC: and js.
[03:17] chjj: because its the same thing as twitter: hype at things that have existed for more than a decade and undeserved popularity
[03:17] skm has joined the channel
[03:17] CaesarC: Of course.
[03:17] CaesarC: I could not build a product with bootstrap.
[03:17] CaesarC: But I use bootstrap for prototype.
[03:18] itsme1 has left the channel
[03:18] davidbanham has joined the channel
[03:18] Aria: Huh? Bootstrap's fine.
[03:18] Aria: noders just aren't all web devs, and most of us like to keep things really simple.
[03:19] pauls1 has joined the channel
[03:19] chjj: its fine, i have no problem with it existing, its just not good, why is it gaining in watchers so steadily?
[03:19] chjj: i dont see anything exceptional there to justify 11k watchers
[03:20] AndroUser2: Bootstrap and rails have the same number of watches
[03:20] chjj: ive seen much better stuff elsewhere, all over github, that has shit and dick for watchers
[03:20] AndroUser2: Right now I wonder if it is going to beat node
[03:22] dgathright has joined the channel
[03:23] Aria: Bootstrap is just likely to serve as common language and infrastructure.
[03:23] Aria: Network benefit, not code benefit.
[03:24] suzuken has joined the channel
[03:24] chjj: Aria: so if i were to put up something better and advertise it, would i get 11k watchers?
[03:24] tonymilne: robertj process.nextTick or setInterval might be what you're after.
[03:24] chjj: probably not
[03:25] JakeyChan has joined the channel
[03:25] stalled has joined the channel
[03:25] chjj: because im not the twitter guys who write javascript with john-resig-infected syntax
[03:25] Aria: chjj: Dunno. Would there be a name on it that people could point to and say things like "Twitter uses this"?
[03:26] chjj: obviously not
[03:26] chjj: thats my point exactly
[03:26] chjj: theres pointless hype around it
[03:26] chjj: because the clueless twitter guys use it
[03:26] Aria: And I'm saying that doesn't matter. Because it's good enough, and if a bunch of people know and understand it, _that itself_ is a benefit.
[03:26] willwhite has joined the channel
[03:27] arpunk has joined the channel
[03:27] AndroUser2: Hwy do you guys prefer less or stylus
[03:27] chjj: and im saying, it better not pass node up, or i would be mad
[03:27] RobWC has joined the channel
[03:27] chjj: :)
[03:27] Aria: AndroUser2: Any. Less/stylus/sass. All good. I've used 'em all, no clear preference.
[03:28] Aria: (though stylus is written by an awesome person)
[03:28] freewil has joined the channel
[03:28] freewil has joined the channel
[03:28] tiagobutzke has left the channel
[03:28] chjj: you could use my css preprocessor, it conforms to potential standards ;)
[03:28] chjj: i think its the only one that does
[03:28] Wizek has joined the channel
[03:29] JumpMast3r has joined the channel
[03:29] AndroUser2: Which is your CSS preprocessing?
[03:29] aioue has joined the channel
[03:30] AndroUser2: I mean preprocessor
[03:30] chjj: its a small unpopular one, i wouldnt recommend it if your want your css to be portable
[03:30] chjj: https://github.com/chjj/csslike
[03:31] chjj: but if youre crazy and want your css to fall in line with the www-style proposals its good
[03:31] davidbanham has joined the channel
[03:31] chjj: otherwise, i would use stylus personally
[03:32] Aria: Oh, spiffy, chjj.
[03:32] chjj: thanks
[03:32] Aria: That looks really awesome. Minimal.
[03:32] Aria: Kinda the anti-stylus.
[03:32] CarterL has joined the channel
[03:32] chjj: i put links to all the proposals in the readme
[03:32] chjj: so you can see where the syntax comes from
[03:33] Aria: I was just doing so.
[03:36] aioue has joined the channel
[03:38] StanlySoManly1 has joined the channel
[03:38] lyte has joined the channel
[03:38] lyte has joined the channel
[03:43] skm has joined the channel
[03:43] sdwrage has joined the channel
[03:44] aioue has joined the channel
[03:44] ryanfitz has joined the channel
[03:46] hydrogel has joined the channel
[03:47] davidascher has joined the channel
[03:47] rwaldron has joined the channel
[03:48] aioue has joined the channel
[03:48] k1ttty has joined the channel
[03:49] boltR has joined the channel
[03:50] deedubs_ has joined the channel
[03:51] aioue has joined the channel
[03:52] sdwrage has joined the channel
[03:55] aioue has joined the channel
[03:56] chrislorenz has joined the channel
[03:56] danmactough has joined the channel
[03:57] dr0id has joined the channel
[03:57] wilmoore has joined the channel
[03:57] davidascher has joined the channel
[03:58] neoesque has joined the channel
[03:58] dhasenan has joined the channel
[03:59] jaimef has joined the channel
[04:00] luke` has joined the channel
[04:00] ohtogo has joined the channel
[04:02] TheLifelessOne: can anyone tell me how to properly build POST parameters?
[04:02] jgautier has joined the channel
[04:03] jamescarr: goddamn socket.io is fast
[04:03] willwh: yup
[04:03] TheLifelessOne: websockets?
[04:03] willwh: hook.io is good too :
[04:03] devongovett has joined the channel
[04:03] jgautier: hey im trying to use socket.io namespaces and i want the name space to have a # in it so like /#namespace instead of /namespace....does not seem to be working
[04:03] jgautier: any ideas?
[04:03] grampajoe has joined the channel
[04:04] Aria: Encode it?
[04:04] Aria: Why do you want this?
[04:04] jgautier: im making an irc client
[04:05] beseku has joined the channel
[04:06] jeedey has joined the channel
[04:06] dhasenan has joined the channel
[04:06] jgautier: i want each room a user is in to be in its own namespace
[04:07] Aria: So encode it.
[04:07] Aria: %3Fnamespace
[04:07] jgautier: will do
[04:07] jgautier: ill try it out
[04:07] _th_n has joined the channel
[04:07] jgautier: brb
[04:08] hij1nx has joined the channel
[04:08] issackelly_ has joined the channel
[04:09] AndroUser2 has joined the channel
[04:09] Gogol has joined the channel
[04:10] thepatr1ck has joined the channel
[04:10] marcello3d: is it bad that I feel like socket.io is bloated?
[04:11] TheLifelessOne: No.
[04:11] TheLifelessOne: Every library is, in some way, bloated.
[04:11] marcello3d: no, like super bloated
[04:11] marcello3d: like 25-50%
[04:11] thepatr1ck: how so?
[04:11] TheLifelessOne: Yes, I know.
[04:11] DrPizza has joined the channel
[04:11] jamescarr: thats pretty clever, putting mustache templates in <script type="text/template">
[04:11] marcello3d: I think I want this instead: https://github.com/learnboost/engine.io
[04:14] MUILTFN has joined the channel
[04:16] Aria: jamescarr: The practice of embedding "Foreign" data in a <script> is being enshrined in the HTML5 spec, too.
[04:16] dhasenan has joined the channel
[04:16] blaenk has joined the channel
[04:23] jstash has joined the channel
[04:26] BillyBreen has joined the channel
[04:27] stu64 has joined the channel
[04:27] kazupon has joined the channel
[04:27] context: aria: ?
[04:28] jamescarr: sometimes one has to forsake cleverness for readability 
[04:28] Aria: Hm, context?
[04:30] context: aria: foreign data in <Script> ?
[04:30] jp232 has joined the channel
[04:31] Aria: Yeah. The practice of embedding templates, svg data, whatever else, inside a <script type='somethingotherthanjavascript'> block
[04:31] context: oh gotcha
[04:31] Aria: Since inside script, it's a very restricted superset of CDATA, you can stuff (almost) anything in there
[04:31] context: i think its intelligent
[04:31] context: especially for doing like single-page apps
[04:32] torsd has joined the channel
[04:32] Aria: Yeah. Really, <script> means "don't fuck with what's inside here"
[04:32] Aria: But you can put an id on a script block and get the contents.
[04:32] dgathright has joined the channel
[04:32] jamescarr: Aria, yeah, it's frigging SWEET
[04:32] jamescarr: especially since I can put my jade in it and it renders to html on the client
[04:33] jamescarr: less typing on my part, haha
[04:35] Wizek has joined the channel
[04:35] ecin has joined the channel
[04:38] isaacs has joined the channel
[04:39] Aria: Yeah!
[04:42] mattpodwysocki has joined the channel
[04:43] PyroPete1 has joined the channel
[04:43] JakeyChan: hi ?
[04:44] JakeyChan: how to get current line of code in js source file ? because I want to generate error message
[04:44] JakeyChan: I want to get this information;
[04:45] base698 has joined the channel
[04:45] skm has joined the channel
[04:46] Kunda has joined the channel
[04:46] davidascher has joined the channel
[04:48] satyr has joined the channel
[04:48] jakehow has joined the channel
[04:50] itsme1 has joined the channel
[04:50] francisl has joined the channel
[04:51] itsme1: Hello, I am planning to start a photo sharing site. Yes, seriously, and it's built on Node.js. I need helping hand(s) in choosing a name for the service.
[04:51] ohtogo has joined the channel
[04:51] itsme1: The service will allow sharing photos, audio and video
[04:52] itsme1: (streaming)
[04:52] itsme1: any ideas?
[04:53] itsme1: :-/
[04:54] ecin has joined the channel
[04:54] strmpnk has joined the channel
[04:55] luoluoluo has joined the channel
[04:55] jamescarr: damn
[04:57] u6482 has joined the channel
[04:57] nicholasf has joined the channel
[04:58] itsme1: upclosr.com, distortd.com, dglim.com - - which of these do you like for a photo/video sharing site (built on node.js)? Any suggestions are welcome.
[04:59] context: upclosr.com
[04:59] WarheadsSE: yaps
[04:59] itsme1: upclosr is good, sure?
[04:59] WarheadsSE: yet another photo share...
[04:59] context: heh
[04:59] airhorns has joined the channel
[05:00] WarheadsSE: makes sure comments work though, or the dynamic of the name is lost
[05:00] itsme1: nope, I am sure you all will like it. I will launch it here
[05:00] itsme1 has left the channel
[05:01] ambroff_ has joined the channel
[05:01] JakeyChan has joined the channel
[05:01] itsme1 has joined the channel
[05:01] WarheadsSE: thats what i thought
[05:01] WarheadsSE: it's bad learner again
[05:01] itsme1: sorry got disconnected. Meanwhile any ideas from your end?
[05:01] itsme1: (hehe! right)
[05:02] WarheadsSE: yeah, pic a language yet?
[05:02] itsme1: done that, already working on it and I like it - - JS, it is
[05:02] WarheadsSE: or even the backing database of the system
[05:02] itsme1: no, just JS for now
[05:02] pauls1 has joined the channel
[05:02] WarheadsSE: well, scale is going to be an issue fast, if it takes at all.
[05:03] itsme1: got it, now forget it plz! :D
[05:03] context: wow! bootstrap looks awesome
[05:03] itsme1: registered!
[05:03] tommyvyo has joined the channel
[05:03] itsme1: (already)
[05:03] itsme1: come on, try to help. You'll love the service, I promise
[05:03] WarheadsSE: context, wha? im to tired o think
[05:04] boehm has joined the channel
[05:04] itsme1: :'(
[05:04] WarheadsSE: itsme1, aka badlearner .. I've heard that before
[05:04] WarheadsSE: sorry
[05:04] itsme1: heard what?
[05:04] WarheadsSE: zero filling a drive with a headcrash on the $mft takes FOREVER.
[05:04] caffine has joined the channel
[05:05] WarheadsSE: you spelled it wrong caffine 
[05:05] caffine: fun, huh? :)
[05:06] WarheadsSE: :P just poking
[05:06] itsme1 has left the channel
[05:06] caffine: np
[05:07] JaKWaC has joined the channel
[05:08] itsme1 has joined the channel
[05:10] zemanel has joined the channel
[05:11] k1ttty has joined the channel
[05:12] jtsnow has joined the channel
[05:13] michaelh_ has joined the channel
[05:15] jspiros has joined the channel
[05:15] purr has joined the channel
[05:16] nealstewart has joined the channel
[05:16] b_i_d: Ahaaaa. Now I get it! Why didn't any of you tell me how cool hook.io is??? ;)
[05:16] jrogers has joined the channel
[05:16] brianc has joined the channel
[05:17] b_i_d: Is it time for the 3rd rewrite of my app?
[05:17] lorfds has joined the channel
[05:17] broofa has joined the channel
[05:17] michaelhartau has joined the channel
[05:17] brianc: anyone know if you can use mocha without globally installing module?
[05:18] brianc: err rather, the right way to go about that?
[05:18] mikeal has joined the channel
[05:18] itsme1 has left the channel
[05:18] brianc: I realized as I typed that I'm just being lazy and need to RTFS
[05:18] ParadoxQuine has joined the channel
[05:18] bartt has joined the channel
[05:18] diogogmt has joined the channel
[05:19] benlyng_ has joined the channel
[05:20] b_i_d: Yes it is. Damn, the last rewrite is just done. :D
[05:21] mansoor-s has joined the channel
[05:22] saikat has joined the channel
[05:22] b_i_d: Why do you always find the things that would have make all your problems disappear AFTER you're done with working around them. :/
[05:22] zilch_ has joined the channel
[05:22] WarheadsSE: same reason you find your keys just after breaking the window
[05:22] b_i_d: *g*
[05:24] b_i_d: Or you begin to plan a rewrite when it's already 6 in the morning. *yawn* GN8 everyone.
[05:24] davidbanham has joined the channel
[05:24] zilch_ has joined the channel
[05:25] felixge has joined the channel
[05:26] ciju has joined the channel
[05:28] wookiehangover has joined the channel
[05:30] mike5w3c_ has joined the channel
[05:30] zilch_ has joined the channel
[05:30] jspiros has joined the channel
[05:32] u6482 has joined the channel
[05:35] zilch_ has joined the channel
[05:36] mikeal has joined the channel
[05:37] garrensmith has joined the channel
[05:38] _dc has joined the channel
[05:39] tilgovi has joined the channel
[05:39] tilgovi has joined the channel
[05:39] mikeric has joined the channel
[05:39] garrensmith: morning
[05:42] svnlto has joined the channel
[05:42] sdwrage has joined the channel
[05:42] zachsmith: garrensmith: s/morning/night/g ftfy
[05:43] zilch_ has joined the channel
[05:43] CaesarC has joined the channel
[05:45] jspiros has joined the channel
[05:47] stonebranch has joined the channel
[05:48] rauchg has joined the channel
[05:49] Shrink has joined the channel
[05:50] jamescarr: argh
[05:50] jamescarr: jade isn't liking a(href="#", data-id="{{id}}")
[05:51] saikat has joined the channel
[05:52] jamescarr: nvm... typo
[05:52] zilch_ has joined the channel
[05:52] chrixian has joined the channel
[05:54] flat has joined the channel
[05:54] CaesarC: does anyone know showoff.io. how does it work?
[05:54] sdwrage has joined the channel
[05:54] CaesarC: http://showoff.io
[05:54] wereHamster: CaesarC: it's described on its homepage
[05:55] felixge has joined the channel
[05:55] CaesarC: Is is a relay server for every client?
[05:55] wereHamster: what do you mean by 'every client'?
[05:56] wereHamster: just read the three boxes at the top
[05:56] CaesarC: every client means, everyone who get the url.
[05:56] lyte_ has joined the channel
[05:57] wereHamster: you get an url and you can share that.
[05:57] CaesarC: I have no idea about how does it back end work.
[05:57] bartt has joined the channel
[05:57] fbartho has joined the channel
[05:58] wereHamster: why do you need to know?
[05:59] CaesarC: it seens like a relay server. just put html code and  render.
[05:59] CaesarC: just for fun.
[05:59] wereHamster: CaesarC: there's contact information at the bottom of the page. Call the guy who wrote it.
[05:59] rio{ has joined the channel
[05:59] yumike has joined the channel
[06:00] satyr has joined the channel
[06:00] CaesarC: Yes. you are right.
[06:00] CaesarC: <wereHamster> Thanks.
[06:01] CaesarC: I did figure out before.
[06:01] CaesarC: :d
[06:01] joemccann has joined the channel
[06:03] u6482 has joined the channel
[06:05] nicholasf has joined the channel
[06:05] ShinyDarkness has joined the channel
[06:05] MatthewS has joined the channel
[06:05] danbeam has left the channel
[06:06] OmidRaha has joined the channel
[06:15] saikat has joined the channel
[06:15] felixge has joined the channel
[06:15] felixge has joined the channel
[06:16] skm has joined the channel
[06:17] truedat101 has joined the channel
[06:18] thabats has joined the channel
[06:20] ryan_stevens has joined the channel
[06:23] pauls1 has joined the channel
[06:25] gregmoreno has joined the channel
[06:25] PhilK has joined the channel
[06:25] zilch_ has joined the channel
[06:29] pizthewiz has joined the channel
[06:29] SamuraiJack has joined the channel
[06:30] e6nian has joined the channel
[06:33] npa has joined the channel
[06:35] truedat101 has joined the channel
[06:35] EvRide has joined the channel
[06:36] leahculver has joined the channel
[06:40] josephg has joined the channel
[06:40] sineltor has joined the channel
[06:41] braoru has joined the channel
[06:45] cache_za has joined the channel
[06:46] chjj: githubs stylesheet is ~18k lines unminified
[06:46] chjj: hmmm
[06:49] _dc has joined the channel
[06:50] hij1nx has joined the channel
[06:52] tonymilne has left the channel
[06:53] maletor has joined the channel
[06:53] simenbrekken has joined the channel
[06:57] RobWC has joined the channel
[06:57] galaxywatcher has joined the channel
[06:57] te-brian has joined the channel
[06:58] kazupon_ has joined the channel
[06:58] Shrink has joined the channel
[06:58] te-brian: Need some Cakefile help ... https://gist.github.com/1414468 ... console.log for the output is not ideal , because it adds extra newlines and kills special characters like cursor movment... what can I use instead?
[06:58] tih-ra_ has joined the channel
[06:59] JaKWaC has joined the channel
[06:59] luoluoluo has joined the channel
[07:00] leah has left the channel
[07:01] lorfds has joined the channel
[07:03] mikeric has joined the channel
[07:03] te-brian: google and you shall be answered :) .. helped myself ... process.stdout.write()
[07:05] airhorns has joined the channel
[07:05] smgt has joined the channel
[07:05] KK_ has joined the channel
[07:08] u6482 has joined the channel
[07:09] brainproxy: is the incremental gargabe collection stuff that was announced by the v8 devs a week+ ago going to make its way into the node v0.6 branch?
[07:11] jacobolus has joined the channel
[07:13] riven` has joined the channel
[07:13] MerlinDMC has joined the channel
[07:14] brainproxy: nvm, looks like it made it into v8 v3.6.5 and node is using a newer version even than that
[07:14] brainproxy: so I guess maybe node is already benefitting from it :)
[07:16] ljackson has joined the channel
[07:16] EM03 has left the channel
[07:18] jspiros has joined the channel
[07:21] appinsanity-mike has joined the channel
[07:23] benvie: they haven't backported the harmony stuff though which sucks
[07:23] benvie: some important changes
[07:25] NetRoY has joined the channel
[07:26] benvie: would be nice if they at least added the proxy in weakmap fix so that was useful at all
[07:26] fangel has joined the channel
[07:27] benvie: I'm just playing with node compiled with 3.7.9 for now
[07:28] Jay has joined the channel
[07:28] galaxywatcher_ has joined the channel
[07:29] JakeyChan: hi ?
[07:29] JakeyChan: how can i get current module name ?
[07:32] benvie: module.id is the main module I believe
[07:32] JakeyChan: benvie: you !
[07:32] benvie: or maybe current, not sure
[07:32] JakeyChan: right !
[07:32] JakeyChan: __filename 
[07:32] brainproxy: ah cool
[07:32] JakeyChan: maybe ok
[07:32] benvie: ooh filename
[07:32] benvie: __dirname __filename
[07:33] benvie: those don't get set in the repl though
[07:33] burningdog has joined the channel
[07:34] galaxywatcher has joined the channel
[07:34] davidbanham has joined the channel
[07:35] stonebranch has joined the channel
[07:36] johnnywengluu: anyone here having experience with Browserify .. I can't quite get it
[07:36] rwasielewski has joined the channel
[07:37] merlin83 has joined the channel
[07:37] johnnywengluu: do I need a entry.js and require all the modules I wanna be able to use on the frontend?
[07:37] ayaz has joined the channel
[07:40] JakeyChan: I didn't get the idea of process.nextTick 
[07:40] JakeyChan: how to use it ??
[07:40] Renegade001 has joined the channel
[07:40] jackbean_ has joined the channel
[07:42] johnnywengluu: eg. I have required all the modules I wanna use on the browser side, but I the variables aren't accessible to my other javascript files I load in with the script tags
[07:43] zilch_ has joined the channel
[07:45] jaigouk has joined the channel
[07:45] brainproxy: JakeyChan: it's like setTimeout(..., 0)
[07:45] JakeyChan: but 
[07:45] JakeyChan: node says it more effection
[07:45] JakeyChan: n
[07:45] brainproxy: except its guaranteed to run on the next trip around the event loop
[07:45] JakeyChan: what's the event loop ?
[07:45] JakeyChan: where ?
[07:45] JakeyChan: who create the event loop ?
[07:46] benvie: node does in C++ land
[07:46] brainproxy: it's a conceptual thing, maintained by the javascript implementation
[07:46] benvie: javascript runs in an event loop
[07:46] benvie: javascript lives in a kind of artificial world
[07:46] jackbean_ has joined the channel
[07:47] JakeyChan: I don't understand  "javascript runs in an event loop"
[07:47] benvie: so
[07:47] benvie: like an operating system has a scheduler
[07:47] benvie: your cpu
[07:47] robotmay has joined the channel
[07:48] benvie: and it continually goes through each program and gives it a slice of CPU time
[07:48] brainproxy: JakeyChan: let me think how to explain, doing so is a good exercise
[07:48] benvie: C++ does something similar for javascript code
[07:48] brainproxy: but don't worry, coming to understand the event loop is just part of maturing in js knowledge
[07:48] benvie: when the event loop is stopped, and doesn't tick over
[07:48] benvie: that's blocking/synchronous
[07:48] brainproxy: that is, don't feel bad you don't know already
[07:48] benvie: everything comes to a standstill
[07:49] JakeyChan: I feel good, you are trying explain for me :D
[07:49] benvie: it's like us humans
[07:49] brainproxy: let's take a browser example
[07:49] JakeyChan: let me read you 
[07:49] chilts: where standstill = idles (ie. doesn't nothing)
[07:49] groom has joined the channel
[07:49] brainproxy: suppose you have a script that does a few things, but is waiting for a mouse click
[07:49] benvie: we sense time as a fluid thing, but our brain actually works in like 10millisecond ticks
[07:49] benvie: that's our brain's event loop
[07:49] shedinja has joined the channel
[07:49] chilts: also, I'd generally steer clear of nextTick() ... it's useful to know about it but I'd generally say you should do it another way :)
[07:50] brainproxy: when the script is finished running whatever the script says to do, the js process goes idle, basically
[07:50] benvie: various things in javascript are scheduled around the event loop
[07:50] benvie: like V8 garbage collects in between ticks
[07:50] brainproxy: but when the hosting environment of the js engine indicates a click event
[07:50] benvie: at that point your code is frozen
[07:50] benvie: for a fraction of a second
[07:51] brainproxy: then whatever "listener" function/logic is attached to the mouse click event will be executed by the js engine
[07:51] brainproxy: that listener logic being supplied somewhere in your script
[07:51] benvie: yeah most of the time it just sits there idle
[07:51] benvie: which is why it can be very responsive when something does happen
[07:51] brainproxy: now, in addition to external event sources, like clicks and key presses
[07:52] brainproxy: the js engine supplies an internal event source, namely a timer
[07:52] brainproxy: when you write a setTimeout, your basically telling the js engine to fire an event after the specified amount of time
[07:52] brainproxy: and the function supplied to settimeout gets runs when that event fires
[07:52] JakeyChan: you confused me 
[07:53] matejv has joined the channel
[07:53] brainproxy: which part, i will try to do better
[07:53] JakeyChan: let me search some document 
[07:53] brainproxy: okay
[07:53] benvie: you could just think of it like
[07:53] JakeyChan: brainproxy: thanks a lot :D
[07:54] brainproxy: you're welcome ... i remember strugglingn with this about 2 years ago
[07:54] brainproxy: then finally had the "aha moment"
[07:54] benvie: every millisecond node/v8 check to see if something new has come up, or a timer has run out. If so it wakes up yuor javascript code and relays the message
[07:54] benvie: otherwise it sleeps
[07:54] benvie: on that continuous cycle
[07:54] chilts: yeah, I think doing JS always requires an 'aha' moment :)
[07:54] chilts: same with Git ... I remember when I 'got' that :D
[07:55] rendar has joined the channel
[07:55] chilts: benvie: I don't think node/v8 checks, I think the OS wakes it up when an event has occured
[07:55] benvie: most of the hard work is handed off to other process, native C and C++ code. Javascript is lazy and sleeps and just gives directions
[07:55] simenbrekken has joined the channel
[07:56] benvie: er yeah I meant
[07:56] benvie: the os pings back to uv technically
[07:56] brainproxy: benvie: was reading about the weak maps, interesting stuff
[07:56] benvie: and then uv relays to v8
[07:57] benvie: yeah weak maps confused me at first, I didn't understand the purpose or benefit
[07:58] benvie: but it makes sense now that I understand better how memory and references work in javascript engines
[07:58] benvie: v8 and spidermonkey anyway
[07:58] benvie: it's a thing that you don't see in js but the performance would affect you
[07:58] benvie: also there's the ability (with proxies) give revokable access to objects
[07:58] benvie: which is neato
[07:59] brainproxy: i'm actually got something similar in a library i'm writing, but my "weaklyHeld" logic and cleanup works a bit differently owing to how objects get chained together
[07:59] hipsters_ has joined the channel
[07:59] HT has joined the channel
[07:59] benvie: I've been trying to think of crazy things to do with proxies
[07:59] monokrom_ has joined the channel
[07:59] brainproxy: basically i've got my own little garbage collector thing ... but when harmony stuff gets finalized, i may detect for environment support and use the native facility
[08:00] Wa has joined the channel
[08:00] benvie: well I think once the new v8 is in node you'll want to use WeakMaps
[08:00] brainproxy: well my lib is designed for cross-platform work
[08:00] JakeyChan: hey, about event loop and process.nextTick, I still have questions 
[08:00] JakeyChan: :)
[08:00] JakeyChan: sorry for my stupid
[08:00] benvie: oh as in not all in node? browser or non js?
[08:00] brainproxy: so node support isn't enough to warrant dropping the pre-harmony implementation
[08:00] JakeyChan: node
[08:00] benvie: yeah
[08:01] JakeyChan: node create event loop ? or v8 ?
[08:01] benvie: long time before it's usable in a browser
[08:01] benvie: libuv does
[08:01] JakeyChan: ok
[08:01] Morkel has joined the channel
[08:01] benvie: v8 needs an event loop one way or another
[08:01] JakeyChan: so when the event loop begin to process next tick ?
[08:01] benvie: in Chrome the event loop ties into webkit
[08:02] benvie: the event loop goes well before V8 ever even starts
[08:02] benvie: it's used for everything, not just javascript
[08:02] chilts: JakeyChan: your program goes into the event loop once it has reached the end of your script
[08:02] benvie: yeah V8 initializes on it
[08:02] abraxas has joined the channel
[08:02] benvie: but it's being used prior to that for internal C++ land stuff too
[08:03] benvie: in node there's not much difference
[08:03] benvie: much bigger in Chromium
[08:03] benvie: a lot more stuff living outside of javascript's reach
[08:03] benvie: but it still makes use of event loops for a everything
[08:03] Margle has joined the channel
[08:03] benvie: event loops are how GUIs work
[08:04] JakeyChan: var MyConstructor = function() {
[08:04] JakeyChan:   ...
[08:04] JakeyChan:   process.nextTick(function() {
[08:04] JakeyChan:     self._continue();
[08:04] JakeyChan:   });
[08:04] JakeyChan: };
[08:04] JakeyChan: MyConstructor.prototype.__proto__ = EventEmitter.prototype;
[08:04] JakeyChan: MyConstructor.prototype._continue = function() {
[08:04] JakeyChan:   // without the process.nextTick
[08:04] JakeyChan:   // these events would be emitted immediately
[08:04] JakeyChan:   // with no listeners. they would be lost.
[08:04] JakeyChan:   this.emit('data', 'hello');
[08:04] JakeyChan:   this.emit('data', 'world');
[08:04] JakeyChan:   this.emit('end');
[08:04] brainproxy: JakeyChan: the event loop is an abstract idea which you don't need to understand in terms of its implementation in most cases
[08:04] JakeyChan: this's example I found from google
[08:05] chilts: JakeyChan: try not to paste code into the channel, use a paste service like pastebin or gist.github.com
[08:05] brainproxy: JakeyChan: might want to use gist or pastie or something :p
[08:05] petrjanda has joined the channel
[08:05] JakeyChan: :)
[08:05] JakeyChan: yeah yeah , sorry for that 
[08:05] brainproxy: it's considered rude to paste multi-line stuff in irc
[08:05] benvie: libuv actually has a specific thing to always keep the event loop alive for one extra tick before it goes away
[08:05] benvie: so you get that last notification
[08:05] benvie: like in browsers where you can listen for the page close event, same idea
[08:06] jjd has joined the channel
[08:06] JakeyChan: https://gist.github.com/1414846
[08:06] JakeyChan: here 
[08:06] SteveDekorte has joined the channel
[08:07] brainproxy: JakeyChan: see page 29 in this sample of the "Hands On Node.js" book
[08:07] brainproxy: http://nodetuts.com/pdf/handson-nodejs-sample.pdf
[08:08] brainproxy: in the "Understanding" chapter, the concept of the event loop is explained
[08:08] JakeyChan: :D
[08:08] JakeyChan: OK
[08:08] brainproxy: how good an explanation it is I'm not sure
[08:08] brainproxy: but I found the reference when looking for something that might aid you
[08:09] emattias has joined the channel
[08:10] otakutomo has joined the channel
[08:10] mraleph has joined the channel
[08:10] arcanis has joined the channel
[08:11] boltR has joined the channel
[08:13] obensource has joined the channel
[08:13] qFox has joined the channel
[08:15] bosphorus has joined the channel
[08:15] kuebk has joined the channel
[08:15] benvie: https://github.com/joyent/node/blob/master/src/node.cc#L261
[08:15] benvie: there's the last tick
[08:16] zilch_ has joined the channel
[08:17] beevits has joined the channel
[08:18] djcoin has joined the channel
[08:18] gavin_huang has joined the channel
[08:18] ablomen has joined the channel
[08:19] jackbean has joined the channel
[08:19] gavin_huang has joined the channel
[08:20] zilch_ has joined the channel
[08:21] tdegrunt has joined the channel
[08:21] eddyb has joined the channel
[08:21] eddyb: woot
[08:21] eddyb: npm is now bundled with node?
[08:22] jackbean_ has joined the channel
[08:23] SteveDekorte has joined the channel
[08:25] Margle has joined the channel
[08:26] p1d has joined the channel
[08:27] boltR has joined the channel
[08:29] joshsmith has joined the channel
[08:29] zilch_ has joined the channel
[08:32] svnlto has joined the channel
[08:35] yumike has joined the channel
[08:35] skm has joined the channel
[08:36] michaelh_ has joined the channel
[08:37] raphdg has joined the channel
[08:37] [AD]Turbo has joined the channel
[08:37] blup has joined the channel
[08:39] [AD]Turbo: hi there
[08:40] mange has joined the channel
[08:41] dnjaramba has joined the channel
[08:43] yumike has joined the channel
[08:44] bergie has joined the channel
[08:45] raphdg has joined the channel
[08:46] yumike has joined the channel
[08:46] whitman has joined the channel
[08:48] yumike has joined the channel
[08:48] lzskiss has joined the channel
[08:49] qFox has joined the channel
[08:49] Druid_ has joined the channel
[08:52] mc_greeny has joined the channel
[08:54] idl3 has joined the channel
[08:54] MrBenn has joined the channel
[08:55] stelcheck has joined the channel
[08:56] robhawkes has joined the channel
[08:57] salva has joined the channel
[08:57] metaverse has joined the channel
[08:59] uchuff has joined the channel
[08:59] stonebranch has joined the channel
[08:59] secoif has joined the channel
[09:00] neshaug has joined the channel
[09:00] michaelhartau has joined the channel
[09:00] benvie: hmm strict mode for harmony has a decent chunk of changes in V8 http://code.google.com/p/v8/source/detail?r=10062
[09:01] mikeal has joined the channel
[09:03] benvie: nevermind those are all changes just for the flag itself derp
[09:03] neshaug has joined the channel
[09:03] aaronmcadam has joined the channel
[09:03] loob2 has joined the channel
[09:04] matej_ has joined the channel
[09:04] hipsters_ has joined the channel
[09:05] SoulRaven has joined the channel
[09:05] matejv has joined the channel
[09:06] mpavel has joined the channel
[09:06] matejv has joined the channel
[09:06] mjr_ has joined the channel
[09:07] kmox83 has joined the channel
[09:07] matejv has joined the channel
[09:07] neshaug has joined the channel
[09:08] matejv has joined the channel
[09:08] mpavel has left the channel
[09:09] matejv has joined the channel
[09:09] nils_r has joined the channel
[09:10] JakeSays has joined the channel
[09:11] CaesarC has joined the channel
[09:12] zilch_ has joined the channel
[09:13] ccapndave has joined the channel
[09:13] matej_ has joined the channel
[09:14] nrdb: I am trying to run nvm with the command "nvm install v0.6.3" but all I am getting is "curl: (33) HTTP server doesn't seem to support byte ranges. Cannot resume."  ... :-( ... I don't want it to resume ... I want it to try again... how do I do this?
[09:14] matejv has joined the channel
[09:14] nealstewart has joined the channel
[09:15] alessioalex has joined the channel
[09:16] matejv has joined the channel
[09:16] matejv has joined the channel
[09:17] kmox83_ has joined the channel
[09:17] matejv has joined the channel
[09:21] TomY has joined the channel
[09:21] kmox83 has joined the channel
[09:22] zilch_ has joined the channel
[09:23] tahu has joined the channel
[09:23] skm has joined the channel
[09:24] beseku has joined the channel
[09:26] eddyb: this is highly ridiculous
[09:26] kmox83_ has joined the channel
[09:26] eddyb: [00:15|% 100|+ 173|-   0]: Done                                                
[09:27] eddyb: there's more tests failed than passed. but I get not a single stack trace
[09:31] __t has joined the channel
[09:32] zilch_ has joined the channel
[09:32] eldios has joined the channel
[09:33] arcanis has joined the channel
[09:33] galaxywatcher has joined the channel
[09:35] adambeynon has joined the channel
[09:36] sh1mmer has joined the channel
[09:37] jhurliman has joined the channel
[09:37] hackband has joined the channel
[09:39] fly-away has joined the channel
[09:42] swestcott has joined the channel
[09:43] chapel: is there a way to decode a hex string?
[09:43] dannyamey has joined the channel
[09:44] jacobrask: I need to stub fs.readFile for a test, what's the best way? Do I need to use a framework, and in that case which one?
[09:45] markwubben has joined the channel
[09:46] mraleph has joined the channel
[09:47] alessioalex has joined the channel
[09:51] ppcano has joined the channel
[09:53] tomlion_ has joined the channel
[09:53] wereHamster: jacobrask: split your code into a function which does the IO and a function which does the rest, and only test the rest
[09:53] __t: jacobrask: i use jasmine with async tests
[09:54] __t: but the way wereHamster recommend is probably easier
[09:54] pksunkara: chapel: 
[09:54] chapel: yo
[09:54] pksunkara: chapel: 0x83 gives 131
[09:54] pksunkara: here '83' is hex string
[09:55] chapel: well I know what hex is, just wondering if node has something built in
[09:55] pksunkara: yes, open node repl and type 0x83
[09:55] eddyb: parseInt maybe?
[09:55] pksunkara: node gives 131
[09:55] eddyb: pksunkara: you don't get it
[09:55] eddyb: chapel: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt with radix=16
[09:56] eddyb: parseInt('83', 16) for example
[09:56] pksunkara: parseInt('0x' + hex) = dec
[09:56] pksunkara: or ^^
[09:57] boltR has joined the channel
[09:57] chapel: not exactly what Im looking for
[09:57] Sami_ZzZ has joined the channel
[09:57] chapel: in actuality unescape('%' + hex) is what I need
[09:57] eddyb: uhm
[09:57] eddyb: that's urlcode
[09:57] eddyb: not really your usual hex
[09:58] eddyb: String.fromCharCode(parseInt(hex, 16))
[09:58] jacobrask: wereHamster: but the function will call the IO function?
[09:58] chapel: I found this http://snipplr.com/view/30964/
[09:58] chapel: and that seems to work
[09:59] cgfuh has joined the channel
[09:59] bradleyg has joined the channel
[09:59] jacobrask: the function reads a JSON file and returns a match if it's found, I want to supply it with a bunch of different possible JSON structures using quickcheck or something
[09:59] blup has joined the channel
[09:59] wereHamster: jacobrask: have a function myReadFile(cb) which reads the file and invokes the callback. Then have a function myProcessData(err, data) which implements the logic. Test only myProcessData
[10:00] idl3 has joined the channel
[10:00] CodeRarity has joined the channel
[10:01] `3rdEden has joined the channel
[10:01] herbySk has joined the channel
[10:02] jacobrask: so basically myReadFile = function(file, callback) = { fs.readFile(file...} and then I define a custom myReadFile in the test which returns fake JSON data?
[10:02] wereHamster: no, don't ever test or use myReadFile. Just test myProcessData and pass it the data you want to test
[10:03] wereHamster: I mean, don't test or use myReadFIle in tests
[10:03] kmox83 has joined the channel
[10:03] wereHamster: like, do this in your tests:  assert.equals(myProcessData(null, "your json string"), "...")
[10:03] jacobrask: ok, I guess I could make another wrapper function which wraps those two together so I don't have to mess upp my main code narrative with more function calls and callbacks
[10:04] jacobrask: but then only use one of them in the tests
[10:04] jacobrask: thanks, makes sense
[10:05] jomoho has joined the channel
[10:07] jbpros has joined the channel
[10:08] sjltaylor has joined the channel
[10:10] luke`_ has joined the channel
[10:10] kazupon has joined the channel
[10:10] OmidRaha has joined the channel
[10:11] niloy_ has joined the channel
[10:12] niloy_: can someone suggest a good static server in node?
[10:13] vguerra has joined the channel
[10:13] kazupon has joined the channel
[10:13] mmalecki: niloy_: http-server
[10:13] mmalecki: !npm info http-server
[10:13] jhbot: http-server by Nodejitsu, version 0.3.0: a simple zero-configuration command-line http server
[10:15] niloy_: mmalecki, thanks, whats the ! for?
[10:15] jbpros has joined the channel
[10:15] mmalecki: niloy_: that's a bot command
[10:16] MrBenn has joined the channel
[10:17] satyr has joined the channel
[10:17] einaros: here I was, hoping you'd explain the grammatical use of the exclamation point.
[10:17] niloy_: lolz
[10:18] ballantyne has joined the channel
[10:18] niloy_: http-server supports caching?
[10:19] tvw has joined the channel
[10:20] jondot has joined the channel
[10:21] jondot: hi all. i'm looking for a logging library to use with express. i'm currently using winston, but it has awkward choices of behavior (such as the log format, and timestamp format).. any recommendation?
[10:23] jimmysparkle has joined the channel
[10:27] jondot: and another question - is there a point to use cluster with new node?
[10:27] alessioalex has joined the channel
[10:31] JakeyChan_ has joined the channel
[10:34] Iszak has joined the channel
[10:34] josh-k has joined the channel
[10:35] aliem has joined the channel
[10:36] Iszak: When is Node.js going to have a relatively stable API?
[10:36] pksunkara: Iszak: it has now
[10:36] Iszak: until 0.8 release
[10:36] Iszak: then it's broken again
[10:37] jondot: anyone using learnboost/cluster?
[10:38] eddyb: http://lua-list.2524044.n2.nabble.com/ANN-Luvit-Lua-UV-Jit-NodeJS-re-implemented-in-Lua-td7048032.html
[10:38] eddyb: wtf?
[10:38] ljackson: jondot, still working on that or were we discussing something else?
[10:39] k1ttty has joined the channel
[10:39] OmidRaha has joined the channel
[10:41] mchammel has joined the channel
[10:41] mchammel: hi
[10:42] mchammel: anyone familar with mongoose? i'm trying to insert an array with mixed content into a collection. but it will only save an empty array
[10:42] markwubben has joined the channel
[10:44] stisti has joined the channel
[10:45] mchammel: http://paste.bradleygill.com/index.php?paste_id=343464
[10:47] kishoreyekkanti has joined the channel
[10:48] monokrom_: Does throwing an error return your function?
[10:48] monokrom_: ACTION has always assumed so
[10:48] ljackson: eddyb, yeah luvit looks very cool, but this is node.js channel! :P
[10:49] eddyb: can one do JIT within lua?
[10:49] eddyb: weird
[10:50] mchammel: nope, no error. (saving the name works, but array is always empty)
[10:50] nicholasf has joined the channel
[10:50] mmalecki: eddyb: luvit is really awesome
[10:51] metaverse has joined the channel
[10:54] bergie has joined the channel
[10:54] gut4 has joined the channel
[10:55] chapel: anyone know why a connect even fires multiple times on subsequent connections?
[10:56] chapel: https://gist.github.com/820527239f9de9280178
[10:56] chapel: Im just reconnecting when the socket ends, or errors
[10:56] joeman has joined the channel
[10:56] zilch_ has joined the channel
[10:57] RichardBronosky has joined the channel
[10:57] joeman: yo all
[10:57] joeman: Anybody knows why the mongodb nodejs driver hijacks my exceptions?
[10:58] mchammel: okay, seems to be a prob with nowJS not mongoose. damn
[10:59] joeman: I mean when an error is thrown in the callback after a db operation, it does not print the normal stack trace but rather a short shit provided by the mongodb nodejs driver.
[10:59] joeman: Its quite irritating.
[11:00] OmidRaha has joined the channel
[11:04] mchammel: /j #nowjs
[11:04] tmartiro has joined the channel
[11:04] tmartiro: hi all
[11:04] gut4 has joined the channel
[11:05] ace: is there some services like heruko (for hosting rails app) for nodejs?
[11:05] SubStack: lots
[11:06] ace: what is the most known?
[11:06] SubStack: http://nodejitsu.com http://no.de
[11:06] ace: thx
[11:06] SubStack: http://nodester.com/ and http://www.nodesocket.com/ too
[11:07] SubStack: I've only used nodejitsu and no.de
[11:07] ace: ok
[11:07] robotmay has joined the channel
[11:08] ace: i wonder what is the limit of concurrent cnx on linux
[11:08] ace: like if we have a permanent connection with the browser that does nothing
[11:08] jacobrask: wereHamster: https://github.com/jacobrask/node-upnp-device/commit/df6a1e870f1baf8372f11a958d097da59105cdaa not a very complicated function to test, but it's a start of a more complete test suite, thanks for the help
[11:09] pandeiro has joined the channel
[11:09] jacobrask: is that kind of what you meant?
[11:12] Iszak: ace: heroku also does node.js hosting
[11:12] ace: oh Iszak i didn't know :)
[11:13] ace: indeed
[11:13] TomY has joined the channel
[11:14] josh_k has joined the channel
[11:15] d0k has joined the channel
[11:15] Lingerance: monokrom_: No.  The fuction never returns, execution skips directly to the catch block.
[11:16] tmartiro has left the channel
[11:17] monokrom_: Lingerance: Right, so I don't need to return - right?
[11:18] davidbanham has joined the channel
[11:18] Lingerance: ...
[11:18] djazz has joined the channel
[11:18] Lingerance: If you always throw, you will never return.
[11:18] Lingerance: If you sometimes throw, you will sometimes return.
[11:20] svnlto has joined the channel
[11:20] hellp has joined the channel
[11:20] zilch_ has joined the channel
[11:21] pyparadigm has joined the channel
[11:21] kishoreyekkanti_ has joined the channel
[11:22] pyparadigm: What is a good tools that runs Node in the background and keeps logs?
[11:22] pyparadigm: tool*
[11:22] dnjaramba has joined the channel
[11:23] hipster__ has joined the channel
[11:23] stagas has joined the channel
[11:26] ljackson: pyparadigm, forever
[11:26] pyparadigm: ljackson, thanks
[11:26] Danielss89 has joined the channel
[11:27] djazz1 has joined the channel
[11:27] arvindravi has joined the channel
[11:28] tmartiro has joined the channel
[11:28] luoluoluo has joined the channel
[11:28] mike5w3c_ has joined the channel
[11:29] arvindravi: hi all,i'm trying to install express using npm,the output is this http://pastebin.com/MTLQGW4e ,i'm just not sure what do after that. it'd be good if someone could tell me what thats about.
[11:29] verdoc has joined the channel
[11:30] ljackson: arvindravi, it is that the install succeeded go write your code! :P
[11:30] tmartiro has left the channel
[11:31] arvindravi: but using express says command not found :/
[11:31] ljackson: ACTION smirks
[11:31] ljackson: try something like in the docs for express....
[11:31] tomlion has joined the channel
[11:32] ljackson: see expressjs.com
[11:32] joeman: anyone here with
[11:33] mchammel has joined the channel
[11:33] joeman: knowledge of mongodb nodejs driver plox
[11:33] joeman: :D
[11:33] joeman: ?
[11:33] vervain has joined the channel
[11:33] stagas: arvindravi: npm install express -g for the command line tool
[11:33] joeman: https://github.com/christkv/node-mongodb-native/issues/423
[11:33] ljackson: stagas, no need to install gobal
[11:34] ljackson: stagas, he did it right just needs to write some javascript code to use express there isn't a command called "express" :P
[11:34] ljackson: s/gobal/global/
[11:35] D3f0 has joined the channel
[11:36] ljackson: stagas, i stand corrected :P there is but always used it as a library my bad
[11:36] mchammel has joined the channel
[11:37] fangel has joined the channel
[11:38] versicolor has joined the channel
[11:39] ace: january 31st, ryan dahl told "Hopefully in the next 6 months weâ€™ll release a 1.0 version of Node"
[11:39] ace: and we are 0.6 :/
[11:40] ljackson: ace, how much code/testing did you contribute ?
[11:40] ace: it s not the question
[11:40] k1ttty has joined the channel
[11:40] ljackson: ace, sure it is, with opensource projects where your not paying for a product
[11:40] braoru has joined the channel
[11:40] augustl: ace: with emphasis on hopefully :)
[11:41] ablomen: ace, who cares, it's just a version number
[11:41] qFox has joined the channel
[11:41] ace: i wonder what s happen that changes his mind, that s all
[11:41] ace: 0.6 is great for me :)
[11:41] augustl: ablomen: not entirely true, you typically get API breakage in 0.x releases
[11:41] shedinja: just saw this http://www.youtube.com/watch?feature=player_embedded&v=SAc0vQCC6UQ it's a pretty interesting story about the history of node from ryan dahl
[11:41] __doc__ has joined the channel
[11:41] augustl: ace: he probably didn't change his mind ;)
[11:41] ablomen: augustl, sure but you can get that with going from 1.* to 2.* too, there is no defacto standard for version numbers..
[11:42] augustl: 0.x to 1.0 is often different from 1.x to 2.0
[11:43] okuryu has joined the channel
[11:43] augustl: and 0.x to 0.x happens often, and breaks APIs
[11:43] augustl: while they obviously _can_ break APIs in 1.x to 1.x it typically doesn't happen
[11:44] boehm has joined the channel
[11:47] zilch_ has joined the channel
[11:47] ace: is there a system/module in node.js so you can edit the server code, refresh the browser page and you see the new code like in apache/php for example
[11:47] wereHamster: jacobrask: you probably want assert(uuid, parsedUuid)
[11:47] wereHamster: and the question is whether you're not testing the uuid library
[11:48] mchammel: isn't nowJS able to transfer associative arrays? it is only working with indexed-onces?!
[11:48] wereHamster: er.. assert.equals(...)
[11:50] piscisaureus_ has joined the channel
[11:50] JanLi has joined the channel
[11:52] satyr has joined the channel
[11:53] luke`_ has joined the channel
[11:53] blup has joined the channel
[11:55] jacobrask: wereHamster: quickcheck uses assert but 100 times with different values coming from arbString etc. with testing the uuid library you mean I shouldn't use node-uuid but just an arbitrary string there as well?
[11:58] wereHamster: jacobrask: no. I mean your function basically parses the json. So you're actually testing the json parser more than anything else
[11:58] Poetro has joined the channel
[11:59] jacobrask: yeah.. it turned out that way after factoring out the IO :)
[12:00] wereHamster: jacobrask: for that case I would'nt use quickckeck, but pass it selective strings and see for example if it throws an error or not.
[12:00] joeman: if i create a file writestream can i ask it how much byte was written?
[12:01] martin_sunset has joined the channel
[12:04] jbpros has joined the channel
[12:05] mmalecki: can I attach to existing node process just like I'd spawn it with child_process.fork? I want some channel to talk to it.
[12:06] flat has joined the channel
[12:06] mmalecki: use case: fork a node process to daemonize him. master kills itself, child leaves in the background. I want to talk to the child.
[12:07] chapel: mmalecki: check out dnode
[12:07] adrianF has joined the channel
[12:07] mmalecki: s/leaves/lives/
[12:07] mmalecki: chapel: yeah, I wanted to avoid that
[12:07] chapel: why?
[12:07] N0va` has joined the channel
[12:08] EvRide has joined the channel
[12:08] tobmaster has joined the channel
[12:08] mmalecki: chapel: I want to avoid listening on any socket, in general. it'd have to be unix sockets and forever already has problems with leaving them behind
[12:10] phiggins has joined the channel
[12:11] Renegade001 has joined the channel
[12:11] cjroebuck has joined the channel
[12:12] mmalecki: looks like I have to hack child_process and just reattach to child's stdin
[12:12] arcanis has joined the channel
[12:13] TomY_ has joined the channel
[12:13] jacobrask: wereHamster: Ok, I made it work this way instead: https://github.com/jacobrask/node-upnp-device/blob/96e4c9392d41cc21dcf25aea84b93aa6763ab442/test/uuid.coffee
[12:13] bnoordhuis has joined the channel
[12:13] wereHamster: jacobrask: well, that looks much better IMHO, the tests make much more sense now
[12:13] jacobrask: yeah
[12:14] jacobrask: thanks again for the help
[12:16] qFox has joined the channel
[12:16] shinuza has joined the channel
[12:17] idl3 has joined the channel
[12:26] robi42 has joined the channel
[12:28] stagas has joined the channel
[12:31] augustl: will node build on ARM?
[12:32] mmalecki: yeah
[12:33] augustl: I want a transformer with emacs and a terminal... and node.
[12:33] jbpros has joined the channel
[12:33] augustl: wonder how hard it is to do "normal" linux stuff on Android
[12:34] pyparadigm: Anyone know why this doesn't work with Cluster? http://pastebin.com/tvh9RV0D I get the error "object is not a function" for the cluster var, but when I console.log, it does exist
[12:34] eddyb: augustl: kill the Android. install MeeGo. profit
[12:35] augustl: eddyb: is that possible?
[12:35] augustl: brb going to pick up a transformer prime
[12:35] tuhoojabotti: :D
[12:35] bogomips has joined the channel
[12:36] eddyb: as long as you got internet and dd, anything is possible
[12:36] augustl: it's more wether meego works on a touch screen and so on
[12:37] eddyb: hmm
[12:37] eddyb: how RAM is on that thing?
[12:37] eddyb: you might be able to run kde4 with the touchscreen plasma
[12:37] eddyb: but I'm not sure
[12:37] eddyb: s/how/how much/
[12:37] augustl: yeah that's what I'm thinking. Seems plasma is made for working with touch AND none-touch
[12:38] tuhoojabotti: 1G
[12:38] augustl: eddyb: 1gb ram
[12:38] augustl: arr
[12:38] eddyb: http://wiki.meego.com/ARM/Meego_on_Beagleboard_from_scratch#Touchscreen
[12:39] eddyb: yeah, MeeGo definitely works with touchscreens
[12:39] augustl: so node actually compiles on ARM? I thought you had to work hard to make stuff compile on ARM for large-ish projects in most cases
[12:39] augustl: and not just node itself.. V8 too
[12:39] Industrial: Why are call stacks only 10 lines long? Can I see the whole call chain?
[12:39] Industrial: most of them end in some Promise object somewhere and I dont know where its coming from
[12:39] eddyb: augustl: V8 was created with ARM support in mind
[12:40] augustl: eddyb: hmm neat
[12:40] eddyb: "May 31st 2011: The instructions on this page don't work anymore!" heh
[12:41] augustl: so linux itself works fine on ARM? I thought that was work in progress.
[12:42] eddyb: wtf?
[12:42] eddyb: Android is linux, dude
[12:42] zilch_ has joined the channel
[12:42] tuhoojabotti: lol
[12:42] tuhoojabotti: augustl: y u so funny?
[12:42] augustl: well Google have their own fork
[12:42] augustl: of the kernel
[12:43] eddyb: with little things changed
[12:43] augustl: I need a ARM kick in the butt apparently
[12:43] eddyb: the 3.0 kernel even supports OpenRISC
[12:44] eddyb: http://www.transformerforums.com/forum/asus-transformer-general-discussions/8658-realities-getting-meego-other-linux-distro-tegra3.html
[12:44] ohtogo has joined the channel
[12:44] augustl: oooooh
[12:45] eddyb: augustl: I wouldn't touch ubuntu if I were you
[12:45] xy has joined the channel
[12:45] augustl: hmm, isn't unity supposed to be all touch screen compatible?
[12:45] eddyb: btw, pro tip: -O3 -g is a bitch
[12:45] augustl: eddyb: how come?
[12:45] eddyb: so you're new to linux?
[12:45] tuhoojabotti: :D
[12:45] eddyb: or to the fact that Ubuntu is hated
[12:45] tuhoojabotti: GENTOO
[12:46] rwasiele_ has joined the channel
[12:46] eddyb: tuhoojabotti: fine, use your gentoo
[12:46] eddyb: I have openSUSE on all my machines
[12:46] eddyb: and it's great, even for newbies
[12:46] augustl: eddyb: no, just curious what specifically you're refering to
[12:46] tuhoojabotti: ACTION secretly has Ubuntu, which doesn't even work.
[12:46] alexcheninfo has joined the channel
[12:47] eddyb: augustl: the general dislike for that crap
[12:47] otakutomo has joined the channel
[12:47] oberhamsi has joined the channel
[12:47] mmalecki: not like I hate ubuntu
[12:48] Morkel has joined the channel
[12:48] mmalecki: it's just weird that many people assume that it's the most awesome linux for human beings
[12:48] eddyb: then I'm a penguin
[12:48] tuhoojabotti: I'm a bot
[12:48] augustl: I hate new software.. So I hate ubuntu. I want stable stuff that has few bugs, not new stuff with tons of bugs
[12:48] augustl: xfce <3
[12:49] tuhoojabotti: linux 1.0
[12:50] eddyb: augustl: well, in openSUSE you can choose
[12:50] zomg: "stable stuff that has few bugs"
[12:50] augustl: old software as in the newest and hopefully recent version of old software ;)
[12:50] zomg: what are you doing on this irc channel?
[12:50] zomg: :D
[12:50] mmalecki: xmonad <3
[12:50] augustl: zomg: haha
[12:50] augustl: zomg: I'm desperate for asynchronous APIs apparently
[12:50] eddyb: funny thing
[12:51] oberhamsi has left the channel
[12:51] eddyb: I'm using the second-most unstable version of kde
[12:51] eddyb: which gets updated a few times a week
[12:51] eddyb: and I don't think I've ever found a major bug
[12:51] mchammel: is it possible to use xmonad on some workspaces and gnome on another workspace?
[12:51] k1ttty has joined the channel
[12:51] felixge has joined the channel
[12:51] Industrial: Why are call stacks only 10 lines long? Can I see the whole call chain?
[12:51] augustl: eddyb: I tried kde once and hated it, you like using it? Guess it's just habit
[12:51] Industrial: most of them end in some Promise object somewhere and I dont know where its coming from
[12:52] mmalecki: mchammel: you can use GTK with xmonad
[12:52] eddyb: kde4
[12:52] eddyb: there's nothing to hate
[12:52] mchammel: sometimes id like to have gnome :o
[12:52] mchammer_ has joined the channel
[12:52] augustl: eddyb: out of the box, gtk apps were ugly for example
[12:52] augustl: Industrial: what are you talking about?
[12:52] augustl: Industrial: some specific use case of some specific promise lib?
[12:52] eddyb: I guess you haven't used a newer-than-2010 version
[12:53] Industrial: augustl: https://gist.github.com/7e123c0a269b18aae1c5
[12:53] augustl: eddyb: I used the most recent version available on arch linux
[12:53] eddyb: like, the past two openSUSE versions (or the past three) came with a kde4 theme for gtk
[12:53] augustl: eddyb: which is probably the most recent version :)
[12:53] Industrial: augustl: it doesnt end at model.<anonymous>
[12:53] eddyb: augustl: can you do a quick version test?
[12:53] Industrial: augustl: it should be going on way back to when I run my unit test to the unit test JS file etc
[12:53] Industrial: but it caps at 10 lines
[12:53] Industrial: always.
[12:53] Industrial: why is that?
[12:54] eddyb: because v8
[12:54] Industrial: so v8 doesnt give full stack traces, that's it? :p
[12:54] tuhoojabotti: It's as full as it can be
[12:55] alexcheninfo: I'm not sure if this is a myth but are most node developers vim users?
[12:55] augustl: eddyb: ugh, packages.archlinux.org doesn't list it since "kde" is a meta package
[12:55] mc_greeny has joined the channel
[12:55] Industrial: tuhoojabotti: it ends somewhere in the mongoose library. Some code is making that query so it's definately not as full as it can be.
[12:55] augustl: eddyb: http://www.archlinux.org/packages/extra/any/kde-meta-kdebase/ seems like 4.7
[12:56] Industrial: tuhoojabotti: it should end with the first function, no? :P
[12:56] tuhoojabotti: Industrial: It's the negative side of using the event-loop?
[12:56] anaio has joined the channel
[12:56] augustl: eddyb: Arch's packages are pretty bare bone though. No extra integration etc, just a pure install.
[12:56] Industrial: tuhoojabotti: explain, I don't understand that.
[12:56] eddyb: augustl:http://www.archlinux.org/packages/extra/x86_64/oxygen-gtk/
[12:56] augustl: eddyb: so I guess it's possible/easy to make gtk apps pretty in kde too
[12:56] eddyb: you want that
[12:57] augustl: eddyb: I do find KDE and especially QT interesting.. I'll give it another go
[12:57] Industrial: tuhoojabotti: 'please' :p
[12:57] marcello3d has joined the channel
[12:58] tuhoojabotti: Industrial: I'm not sure how to put it, I have read stuff about it and watched talks.
[12:58] tuhoojabotti: :D
[12:58] tuhoojabotti: "A common problem when debugging event-driven JavaScript is stack traces are limited to a single "event", so it's difficult to trace the code path that caused an error."
[12:58] tuhoojabotti: Industrial: https://github.com/tlrobinson/long-stack-traces
[12:59] tuhoojabotti: That might help.
[12:59] Industrial: hm, k
[12:59] TheJH has joined the channel
[12:59] Industrial: thanks
[13:00] tomlion has joined the channel
[13:02] Kunda has joined the channel
[13:04] Cromulent has joined the channel
[13:04] TheFuzzb_ has joined the channel
[13:04] Brendan_ has joined the channel
[13:07] martin_sunset has joined the channel
[13:09] mYkon has joined the channel
[13:09] swestcott has joined the channel
[13:10] mYkon: anyone who knows how to pass vars to the expressjs layout file?
[13:11] mYkon: dynamicHelper could work, but i need data from the database, so i have a callback there...
[13:11] igl1: mYkon: res.render("templ", { foo: "bar" });
[13:11] mYkon: its for the layout
[13:12] polymar has joined the channel
[13:13] brianseeders has joined the channel
[13:13] mYkon: i need something like an asynchronous dynamic helper ^^
[13:14] enmand has joined the channel
[13:16] rsterner has joined the channel
[13:18] strmpnk has joined the channel
[13:18] erichynds has joined the channel
[13:18] MUILTFN has joined the channel
[13:18] eviltwin_ has joined the channel
[13:19] gavin_hu_ has joined the channel
[13:20] jbpros has joined the channel
[13:22] skm has joined the channel
[13:24] alexcheninfo has joined the channel
[13:24] CIA-109: libuv: 03Bruce Mitchener 07v0.6 * rc69ccfa 10/ include/uv.h : 
[13:24] CIA-109: libuv: Remove incorrect documentation comment.
[13:24] CIA-109: libuv: The callback for uv_close does not have a status parameter. - http://git.io/ax84HA
[13:24] CIA-109: libuv: 03Ben Noordhuis 07v0.6 * rfadfd0f 10/ (.mailmap AUTHORS): Update AUTHORS and .mailmap - http://git.io/Ipdesw
[13:25] Raynos: What happened to node --cluster ?
[13:25] xetorthio has joined the channel
[13:25] Diaoer has joined the channel
[13:26] vkareh has joined the channel
[13:27] pimetrai has joined the channel
[13:27] bnoordhuis: Raynos: replaced by require('cluster')
[13:27] animorten1 has joined the channel
[13:27] subbyyy has joined the channel
[13:28] Raynos: I thought we had both at the same time 
[13:28] Raynos: where --cluster was just a bit of sugar for the "simple dumb cluster" setup
[13:29] TheJH has joined the channel
[13:29] alexcheninfo has joined the channel
[13:29] thdbased has joined the channel
[13:29] thdbased: Anyone ever used Quova with nodejs?
[13:29] bnoordhuis: Raynos: only for a short while in 0.5.x
[13:29] fumanchu182 has joined the channel
[13:30] ombinde has joined the channel
[13:30] issackelly_ has joined the channel
[13:30] Raynos: Is there a good reason not to have that sugar?
[13:30] animorten has joined the channel
[13:30] nickb has joined the channel
[13:31] bnoordhuis: Raynos: explicitness
[13:31] fermion has joined the channel
[13:31] ombinde: I have made a little game in js using websockets. I have developed it using node.js. But now I would like to deploy it, where can I do that?
[13:31] ombinde: I dont have a dedicated node.js server
[13:31] Vennril has joined the channel
[13:32] Epeli: ombinde:  no.de, nodester.com, cloud9ide, heroku ...
[13:32] swestcott has joined the channel
[13:32] bnoordhuis: don't forget joyent!
[13:33] Epeli: I think no.de is joyent's
[13:33] bnoordhuis: oops, fail me
[13:33] torsd has joined the channel
[13:33] Epeli: At least some of those allow you to host small apps for free
[13:33] arpunk has joined the channel
[13:34] ombinde: yeah, I just wanna a have a place to host it. For kicks.
[13:34] ombinde: I don't want to have a cost hosting it.
[13:34] thinkt4nk has joined the channel
[13:35] alexcheninfo has joined the channel
[13:35] JKarsrud1 has joined the channel
[13:35] Epeli: oh and Nodejitsu is also a Node hoster
[13:36] ryanfitz has joined the channel
[13:36] itsme1 has joined the channel
[13:36] mmalecki: the best one, of course ;)
[13:36] itsme1: Hello, can someone help me choose a name for a photo/video sharing site?
[13:37] mmalecki: naming things is hard
[13:37] itsme1: Yeah... 
[13:37] mmalecki: Names as a Service would be kinda awesome
[13:38] itsme1: I am brainstorming and really have no clue - - my ideas so far upclosr.com, distortd.com and dglim.com
[13:38] thdbased: Anyone using Quova - Location API?
[13:38] rsterner has joined the channel
[13:39] shanebo has joined the channel
[13:40] thdbased: I am trying to figure out what woul dbe the best place to put the REST code for this?
[13:41] itsme1: Maybe someone whose first language is not english can help me out?
[13:41] sjltaylor has joined the channel
[13:41] alexcheninfo has joined the channel
[13:41] thdbased: So I need the clients IP and then let the server do the request to Quova server to get back JSON
[13:42] dr0id: metube ?
[13:42] mehtryx has joined the channel
[13:43] itsme1: dr0id: thanks for the suggestion, but the name shouldn't suggest videos alone... it should suggest photos, & videos in general
[13:43] itsme1: (I almost registered snapsome.com, didn't and someone took it!)
[13:44] itsme1: a short name with "snap" would be great
[13:44] dr0id: snaptoes
[13:44] zilch_ has joined the channel
[13:44] dr0id: snapdos
[13:45] mcfedr has joined the channel
[13:45] adrianmg has joined the channel
[13:45] mmalecki: grep snap /usr/share/dict/words
[13:45] itsme1: You know, you can do better!  :-[
[13:45] mmalecki: snapback?
[13:45] adrianmg has left the channel
[13:45] mmalecki: snapsack!
[13:45] itsme1: come on,  the domain isn't available!
[13:45] dr0id: snapnode
[13:46] itsme1: I need a .com domain for the photo/video sharing site
[13:46] nerdy has joined the channel
[13:46] itsme1: snapnode.com is taken
[13:46] itsme1: A meaningful word in other languages would be great too...
[13:46] sriley: why does it need a .com?
[13:47] itsme1: Because it's the most obvious domain for even a layman
[13:47] mehtryx has left the channel
[13:49] sriley: yes but you can also do things like snap.it etc
[13:49] alexcheninfo has joined the channel
[13:49] itsme1: I dont want to spend 1000s of $ on the domain alone. I am trying to look for a creative name
[13:50] tdegrunt has joined the channel
[13:50] Diaoer has joined the channel
[13:50] sriley: yea dont mean trying to buy that but you can get a decent creative name involving the tld too, doesnt have to end in .com
[13:50] pauls1 has joined the channel
[13:51] itsme1: I can buy snapso.me, but snapsome.com is owned by somebody else.
[13:51] itsme1: It's kinda clashing
[13:52] Diaoer has joined the channel
[13:52] mchammer_ has joined the channel
[13:53] deedubs has left the channel
[13:53] JakeyChan has joined the channel
[13:54] augustl: itsme1: is it a product or something for programmers?
[13:54] augustl: there's alwas a myname-js.org domain available ;)
[13:55] itsme1: I am looking for a domain name suggestion (.com) for a photo/video sharing site (like Flickr)
[13:55] augustl: so it's a product?
[13:55] Diaoer has joined the channel
[13:55] itsme1: yes, kinda
[13:55] fairwinds has joined the channel
[13:55] itsme1: product-as-a-service
[13:55] flat: itsme1: How is it different from flickr / youtube?
[13:56] gripir has joined the channel
[13:56] gripir has left the channel
[13:56] mmalecki: augustl: lol @ *-js
[13:56] augustl: photoandvideosharingsite423.com
[13:56] augustl: mmalecki: busterjs.org yo!
[13:56] itsme1: I didn't say YouTube. The service is about storing your precious moments without having to  worry about backups and stuff
[13:56] emattias_ has joined the channel
[13:56] jbpros has joined the channel
[13:56] augustl: mmalecki: it's srsly stuffs
[13:57] itsme1: It's more about usability
[13:57] flat: itsme1: How is it different from flickr?
[13:57] itsme1: and other stuff (I cant say now)
[13:57] galaxywatcher has joined the channel
[13:57] augustl: wepromisethisnewcloudproductwillnotgodownaftertwoyears.com
[13:57] hipster__: hah
[13:58] itsme1: augustl: plz enough of that $%!#
[13:58] mmalecki: augustl: lulz
[13:58] flat: I laughed.
[13:58] augustl: yourdataissafewith.us
[13:58] Jarda: &win 26
[13:59] augustl: 100percenthackproofphotosite.com
[13:59] augustl: aanyhow..
[13:59] lmatteis: is there a book on network programming with node?
[13:59] lmatteis: (not just about node, i already know node)
[13:59] alexcheninfo has joined the channel
[14:00] ShotgunKlaus has joined the channel
[14:00] scott_gonzalez has joined the channel
[14:00] maushu has joined the channel
[14:00] ShotgunKlaus has joined the channel
[14:01] marcello3d has joined the channel
[14:01] augustl: lmatteis: don't think so
[14:02] augustl: itsme1: it's hard to name a product you know nothing about :)
[14:03] itsme1: right
[14:03] AaronMT has joined the channel
[14:03] lmatteis: http://nodetuts.com/handson-nodejs-book.html
[14:03] lmatteis: what about that?
[14:03] itsme1 has left the channel
[14:03] augustl: all I can think of is bordizer, mutler, ungranfer, and other abstract names
[14:03] davidsklar has joined the channel
[14:03] ablomen has joined the channel
[14:07] Margle: how you guys feel about coffeescript?
[14:08] eddyb: caffeine is bad
[14:08] TheJH: Margle, I like it, but coco is much better
[14:08] joshsmith has joined the channel
[14:08] TheJH: (coco is a coffeesccript dialect by satyr)
[14:09] Margle: TheJH: lol, ok, actually thought you were taking the piss as well.
[14:09] kriszyp3 has joined the channel
[14:09] flat: Margle: It's obfuscating.
[14:09] fuzzled has joined the channel
[14:09] bogomips2_ has joined the channel
[14:10] CIA-109: node: 03Ben Noordhuis 07v0.6 * r03eb41c 10/ (lib/net.js test/simple/test-net-socket-destroy-twice.js): 
[14:10] CIA-109: node: net: don't emit 'close' event twice
[14:10] CIA-109: node: Don't allow `socket.destroy()` to run twice. The self-destruct sequence itself
[14:10] CIA-109: node: is idempotent but it makes the 'close' and 'error' events fire more than once,
[14:10] CIA-109: node: which may confuse listeners.
[14:10] CIA-109: node: Fixes #2223. - http://git.io/OVSJPA
[14:11] mchammer__ has joined the channel
[14:11] TheJH: flat, coco compiles to pretty clean JS
[14:11] TheJH: flat, if there's a s->s compiler, it's no obfuscation :P
[14:11] booyaa: re: coffeescript - @dailyjs thought it was to make js more ruby like
[14:11] booyaa: for rubists
[14:11] sjltaylor has joined the channel
[14:11] srijan4 has joined the channel
[14:12] flat: TheJH: My brain compiles to pretty clean JS too, and I like to debug code that I've actually written.
[14:12] booyaa: i think there's a fair bit of eliteness going on. sounds lot like assembly guys ripping into the "high level" language coders writing in c
[14:12] ablomen: flat, +1
[14:12] booyaa: but that's me being old as dirty
[14:13] booyaa: -y
[14:13] bnoordhuis: asm is for pussies, real men write microcode
[14:13] smh has joined the channel
[14:13] booyaa: bnoordhuis: fuck yeah!
[14:14] booyaa: and for the record i am dirty
[14:14] booyaa: too incase anyone was wondering
[14:15] kishoreyekkanti_ has joined the channel
[14:15] smh: does anyone know if there is a way of redirecting stdout/err for forked workers in the 0.6 cluster api?
[14:17] joshsmith: does anyone here use postgres (and possibly express)?
[14:17] jtrudeau has joined the channel
[14:20] alexcheninfo has joined the channel
[14:20] lyte has joined the channel
[14:20] lyte has joined the channel
[14:20] lazyshot has joined the channel
[14:22] merlin83 has joined the channel
[14:23] alessioalex has joined the channel
[14:23] postwait has joined the channel
[14:23] CIA-109: libuv: 03Bert Belder 07master * rb471b33 10/ config-mingw.mk : 
[14:23] CIA-109: libuv: Bump required windows headers to Vista
[14:23] CIA-109: libuv: This does not mean that XP/2k3 is no longer supported - we just need the
[14:23] CIA-109: libuv: headers so we can use newer APIs on later windows versions. - http://git.io/LOBGCg
[14:24] kazupon has joined the channel
[14:25] Venom_X has joined the channel
[14:25] jldbasa has joined the channel
[14:26] colinclark has joined the channel
[14:28] pauls1 has joined the channel
[14:29] CIA-109: libuv: 03Yuki Okumura 07master * r7c50415 10/ src/win/util.c : Win: lower case tlhelp32.h to support cross compilation - http://git.io/-ntILg
[14:29] criswell has joined the channel
[14:29] alexcheninfo has joined the channel
[14:30] ceej has joined the channel
[14:30] srijan4 has joined the channel
[14:31] stepheneb has joined the channel
[14:31] TheJH has joined the channel
[14:32] burningdog has joined the channel
[14:33] creationix has joined the channel
[14:34] strmpnk has joined the channel
[14:35] jbrokc has joined the channel
[14:35] strmpnk has joined the channel
[14:35] lmatteis: ok so what's a good book about node?
[14:35] alessioalex: Hands on Node & Node Beginner
[14:35] creationix: put nodeJS in the title and HN is all over it. http://news.ycombinator.com/item?id=3298936
[14:35] lmatteis: nothing beginner like
[14:35] alessioalex: also Node Web Development
[14:35] xerox: the api docs
[14:35] creationix: even if it's not about node
[14:35] joemccann has joined the channel
[14:35] strmpnk has joined the channel
[14:35] xerox: they're short and to the point :)
[14:36] lmatteis: :)
[14:36] lmatteis: i'd like something in paper that i can read while i commute
[14:36] augustl: creationix: well, it sort of is about node ;)
[14:37] creationix: true
[14:37] augustl: async embedded lua everywhere!
[14:37] creationix: it does have libuv which is the soul of node
[14:37] creationix: libuv++
[14:37] v8bot_:  creationix has given a beer to libuv. libuv now has 1 beers.
[14:37] augustl: libuv--
[14:37] v8bot_:  libuv is getting too many beers.  Don't let libuv get drunk!
[14:37] augustl: c++
[14:37] v8bot_:  augustl has given a beer to c. c now has 1 beers.
[14:37] augustl: c\+\+
[14:38] augustl: c\+\+++
[14:38] augustl: oh well
[14:38] TheJH: augustl--
[14:38] v8bot_:  TheJH has taken a beer from augustl. augustl now has 0 beers.
[14:38] catb0t: augustl now has -1 beer
[14:38] augustl: augustl++
[14:38] v8bot_: augustl: Don't cheat!  You can't give a beer to yourself.
[14:38] catb0t: augustl now has 1 beer
[14:38] augustl: I like catb0t
[14:38] catb0t: like PUT and DEL I
[14:38] lmatteis: so why is libuv actually called libuv, instead of just "node"? :)
[14:38] augustl: lmatteis: because node is not libuv I guess
[14:38] joemccann has joined the channel
[14:38] creationix: Rust uses libuv too
[14:38] augustl: node is v8 and all that jazz
[14:38] creationix: (the mozilla language)
[14:38] DRMacIver has joined the channel
[14:39] lmatteis: augustl: but libuv is implemented using v8
[14:39] lmatteis: or not?
[14:39] augustl: no it's stand alone
[14:39] creationix: lmatteis: it's straight C
[14:39] lmatteis: ah ok
[14:39] augustl: lmatteis: node uses v8 to execute javascript, and libuv to do asynchronous disk and network
[14:39] creationix: which is great, because Luajit is also C
[14:39] lmatteis: so it's just a cross-platform libevent
[14:39] creationix: so luvit doesn't have to use any C++
[14:40] augustl: lmatteis: no it's implementations of none blocking IO afaik
[14:40] creationix: lmatteis: it does more than libevent
[14:40] lmatteis: ok
[14:40] zilch_ has joined the channel
[14:40] creationix: on unix it's libev and libeio under the hood
[14:40] CarterL has joined the channel
[14:40] creationix: on windows it's all new
[14:40] ShinyDarkness has joined the channel
[14:40] lmatteis: so does it abstract all sort of I/O?
[14:40] lmatteis: or just certain stuff?
[14:41] augustl: abstract all the I/O!
[14:41] creationix: Pipes, TTY, Files, TCP, UDP, Timers
[14:41] creationix: basically all the I/O Node can do
[14:41] alexcheninfo has joined the channel
[14:41] kishoreyekkanti_ has joined the channel
[14:41] creationix: openssl and dns aren't part of it
[14:41] creationix: though it does have integration for c-ares
[14:42] creationix: which is what node uses for dns
[14:43] lmatteis: interesting
[14:43] lmatteis: so it's like an entire asynch interface to the OS
[14:45] JasonJS has joined the channel
[14:46] jscheel has joined the channel
[14:46] thomblake has joined the channel
[14:47] thomblake has left the channel
[14:47] eldios: creationix, cheers.. do you take HN first page even when you burp? :P
[14:48] niclone has joined the channel
[14:48] CIA-109: libuv: 03Bert Belder 07master * ree49c7a 10/ (include/uv-private/uv-win.h src/win/winapi.h): 
[14:48] CIA-109: libuv: Fix MinGW and MinGW-w64 builds
[14:48] CIA-109: libuv: Closes GH-222 and GH-267.
[14:48] CIA-109: libuv: Thanks Yuki Okumura and Yasuhiro Matsumoto for providing fixes. - http://git.io/PT3KvA
[14:48] idl3 has joined the channel
[14:50] kishoreyekkanti_ has joined the channel
[14:50] mc_greeny has joined the channel
[14:51] BillyBreen has joined the channel
[14:51] Scala_ has joined the channel
[14:53] N0va` has joined the channel
[14:53] Scala_: How does Node make the decision to spawn a thread to work on something async rather than in series?
[14:53] bogomips2_ has joined the channel
[14:54] JakeyChan has joined the channel
[14:55] lmatteis: Scala_: to work asynchronously Node doesn't spawn a new thread
[14:55] galaxywatcher has joined the channel
[14:55] Scala_: lmatteis: How does it achieve concurrency?
[14:55] lmatteis: depends what your script is doing
[14:55] Scala_: Lets say I want to read from a database
[14:56] lmatteis: if it does I/O, like communicates with a db somewhere, the piece of code will just "idle" in the main thread without blocking other operations
[14:56] lmatteis: so while your code is reading from a database, the same thread can do other stuff
[14:57] Scala_: How does it idle without blocking if it doesn't use threads?
[14:57] lmatteis: and when your db has finished reading, the code that was idling will finish what's it doing by usually calling the "callback"
[14:57] lmatteis: Scala_: things can idle without blocking
[14:58] lmatteis: that's how the event loop works
[14:58] Scala_: Let me make sure of one thing before I keep asking questions
[14:58] Scala_: Does the javascript event loop run in one thread or a process?
[14:58] lmatteis: you must understand that the processing required to read from the database, is handled by the database itself, so no processing is done in the main thread of your node program
[14:59] lmatteis: just one thread
[14:59] cha0s has joined the channel
[14:59] rurufufuss has joined the channel
[15:00] Scala_: I think the thing that confuses me is that if you had code written in a serial manner (not necessarily node), that runs in one thread, and when you make a query to a database, it'll block until it receives data back
[15:00] lmatteis: i'm not sure how the idling is achieved, it's a low-level OS functionality
[15:00] idl3 has joined the channel
[15:01] lmatteis: Scala_: right, but that's the whole idea behind Node, that it's not like that
[15:01] lmatteis: in the regular approach imagine you had to do 4 different database queries
[15:01] lmatteis: so you make 4 db.query() calls, ok?
[15:01] lmatteis: they each block, so each one of those has to wait until the other finishes
[15:02] Scala_: The picture I get is this: I have my event loop running, and then I make a query to a database.  The query to the database idles for data and the event loop keeps going.  When the data comes back, now there's two code execution flows going, the event loop and the callback to handle data from the database.  Can one thread handle two code execution flows?
[15:02] Lingerance: select() and poll() are used to make the OS tell the application when an FD is ready for reading, node uses one of the two or an equivolent to function.
[15:02] Lingerance: Those existed long before threading.
[15:02] mandric has joined the channel
[15:02] stagas has joined the channel
[15:02] kevwil has joined the channel
[15:03] lmatteis: Scala_: no, there's never 2 things running at the same time
[15:03] lmatteis: in 1 thread
[15:04] Scala_: Oh, so the event loop will get a signal to query the database.  The database does it's own thing and the event loop keeps running, and then the event loop will get a signal that the database is done reading, so it jumps into code execution for the callback with the data?
[15:04] lmatteis: so after the callback is executed, the regular event loop continues
[15:04] jstash has joined the channel
[15:04] JakeyChan_ has joined the channel
[15:04] lmatteis: right
[15:04] Scala_: Oh, makes sense
[15:05] swestcott_ has joined the channel
[15:05] lmatteis: so now you have 4 queries that no longer take the sum of the amount that each one takes
[15:05] lmatteis: but it only takes the amount the "longest" query takes
[15:05] Scala_: It works because it doesn't keep checking if the database is done doing its thing, the database makes its queries and tells the event loop "Hey, I'm done! Here's what I have"
[15:05] lmatteis: (sorry about my broken english :-))
[15:05] alindeman has joined the channel
[15:05] jrogers has joined the channel
[15:06] pizthewiz has joined the channel
[15:06] Scala_: lmatteis: Haha it's okay, I understand it now. Thanks for the explanation.
[15:07] lmatteis: no problem
[15:07] lmatteis: i'd also like to understand how select() and poll() work at a lower level
[15:07] lmatteis: seems interesting
[15:07] lmatteis: but the global concept is what you said, yes
[15:08] booyaa: right let's play around with ntlm and auth. i hate iis
[15:08] Scala_: Lingerance: Thanks for the select() and poll() info.  I'll look into those, and I might poke into the Node source to see how they do that.
[15:08] bradleyg has joined the channel
[15:09] lmatteis: all i know is that select() simply blocks until the file descriptor status changes to "read"... or something like that
[15:09] lmatteis: i mean, one of the file descriptors
[15:09] Scala_: But it can't block, or else it would hold up the event loop?
[15:10] lmatteis: but haven't used it in many years, and frankly now that Node abstracts it very nicely, i don't really have to understand it :)
[15:10] chuck_daniel has joined the channel
[15:10] Scala_: I understand.  I'm a very curious individual and I like to know how things work completely
[15:10] diminoten: how long should Node.js take to build from scratch?
[15:11] zilch_ has joined the channel
[15:11] brianc has joined the channel
[15:11] diminoten: I think my VM is fucked up, it's taking like 15 minutes...
[15:11] chuck_daniel has left the channel
[15:11] martin_sunset has joined the channel
[15:11] aioue has joined the channel
[15:12] jammsen has joined the channel
[15:12] bradleyg_ has joined the channel
[15:12] bradleyg_ has joined the channel
[15:12] booyaa: pretty certain mine took minutes to compile v0.6
[15:13] booyaa: but i was compiling natively on osx
[15:13] booyaa: you might be paging in your vm
[15:13] jammsen: can i start a nodejs server with paramters? and how can i read the parameters in the script?`
[15:13] creationix: diminoten: v8 can take a while to buil
[15:13] creationix: *build
[15:13] zilch_ has joined the channel
[15:13] creationix: especially on low memory or slower machines
[15:13] brianc: jammsen: process.argv[0] = "node" 
[15:13] diminoten: I gave it a bunch of cores... oh well, it's done now
[15:13] brianc: jammsen: process.argv[1] = "<your script name>"
[15:14] diminoten: I build v0.6.4 I think though
[15:14] creationix: node builds in 10 minutes on my touchpad with JOBS=2
[15:14] MatthewS has joined the channel
[15:14] brianc: jammsen: process.argv[2] = "<anything you passed to script as first argument>"
[15:14] creationix: that 1GB ram and 1.5ghz dual-core armv7
[15:14] jammsen: brianc : ty
[15:14] jammsen: brianc: do i need to implement a module for that?
[15:14] riven has joined the channel
[15:14] booyaa: oh remember someone asking about piping to a node script? did you need to use file descriptors to read a named pipe?
[15:15] brianc: jammsen: no it's built into node
[15:15] booyaa: creationix: touchpad? transformer?
[15:15] brianc: jammsen: http://nodejs.org/docs/v0.6.3/api/process.html#process.argv
[15:15] creationix: hp touchpad
[15:15] creationix: I worked on it and it comes with node
[15:15] creationix: so I often tested new versions of node
[15:15] booyaa: creationix: nice :)
[15:16] booyaa: i wonder if they're still rare hp touchpads... time to go check
[15:16] creationix: we finally got v0.4.12 on it and the next week ryah released v0.6.0
[15:16] aconbere has joined the channel
[15:16] creationix: at least it's not running 0.2.3 anymore
[15:16] creationix: that was terrible
[15:16] cyborg has joined the channel
[15:17] N0va` has joined the channel
[15:18] jondot has joined the channel
[15:18] jondot: hey guys. anyone using node-log4js?
[15:19] pagameba has joined the channel
[15:20] user321 has joined the channel
[15:20] user321: hello
[15:20] galaxywatcher_ has joined the channel
[15:20] booyaa: man still rare and anyone who is selling wants like 400 sterling
[15:20] galaxywatcher_ has joined the channel
[15:20] lmatteis: Lingerance: would you know how select() (or poll) works in the main loop?
[15:20] lmatteis: me and Scala_ are trying to understand how things work
[15:20] willwhite has joined the channel
[15:21] cyborg has left the channel
[15:21] enotodden has joined the channel
[15:21] lmatteis: i've used select() in a regular C program, and what it does is that it *blocks* until one of the file descriptors is ready to be read (or some other event)
[15:22] MatthewS has joined the channel
[15:23] lmatteis: so, as Scala_ says, how can it block the main event loop?
[15:23] bogomips2__ has joined the channel
[15:23] Xano has joined the channel
[15:23] Leemp has joined the channel
[15:23] brianloveswords has joined the channel
[15:25] jtsnow has joined the channel
[15:25] r04r has joined the channel
[15:25] r04r has joined the channel
[15:28] lmatteis: so how does the communication between the "database" and the node "main event loop" happen?
[15:28] lmatteis: through file descriptors i imagine, which is cool
[15:28] ohtogo has joined the channel
[15:28] ceej has joined the channel
[15:28] hunterloftis has joined the channel
[15:29] lmatteis: but how does the main event loop of node check these file-descriptors without blocking?
[15:29] idl3_ has joined the channel
[15:29] hunterloftis: Hey guys I'm having trouble spawning a server
[15:29] hunterloftis: spawn('node') works fine but spawn('node /absolute/path/to/server.js') gives me "No such file or directory"
[15:29] hunterloftis: Does that make any sense?
[15:30] cjm has joined the channel
[15:30] Lingerance: lmatteis: There's also poll() and some systems have something that does a similar function.
[15:30] Cromulent has joined the channel
[15:30] lmatteis: Lingerance: ok, but these call block untile the file-descriptors status changes
[15:30] hunterloftis: oh shit nevermind, stupid question
[15:30] Lingerance: http://www.kegel.com/c10k.html#nb <-- this is linked to from the nodejs.org mainpage.
[15:31] hunterloftis: Imust need some other arg for passing args to the spawned process
[15:31] ovaillancourt has joined the channel
[15:31] NetRoY has joined the channel
[15:31] creationix has joined the channel
[15:32] creationix_ has joined the channel
[15:32] rachet: has anyone here ever made a bayesian filter?
[15:32] rachet: or know of an existing project I can start with?
[15:32] davemo has joined the channel
[15:32] baudehlo: ACTION has
[15:32] r04r has joined the channel
[15:32] baudehlo: I wrote the original one for SpamAssassin
[15:33] skm has joined the channel
[15:34] rachet: baudehlo: the place where I start working on monday is getting horrible forum spam, so I was thinking of writing/using a bayes filter to help
[15:34] rachet: maybe even use SpamAssassin to do the actual filtering
[15:34] Brozilla: ACTION is listening to Houses In Motion by Talking Heads (0:16/4:33)
[15:34] lmatteis: Lingerance: so it uses signals?
[15:34] Brozilla has left the channel
[15:35] rwaldron has joined the channel
[15:35] arcanis has joined the channel
[15:35] rachet: baudehlo: know a good resource to start learning bayes filtering?
[15:36] baudehlo: yeah google "Plan for Spam"
[15:36] Lingerance: lmatteis: I have no idea what node uses.
[15:36] baudehlo: it's an article Paul Graham wrote.
[15:36] diminoten: okay so why would someone do a 'require' path that doesn't exist?  like, I've got a 'require('foo/bar/baz'), with no 'foo' folder.  the 'foo' folder is in a dir called 'public'... is that a convention of some kind I'm not understanding?
[15:36] MatthewS has joined the channel
[15:36] baudehlo: the code is in lisp/arc, but easy to translate.
[15:36] sniff has joined the channel
[15:36] Layke has joined the channel
[15:36] lmatteis: baudehlo: that guy is crazy :) why are you reading
[15:37] rachet: baudehlo: thanks
[15:37] Layke: Looking for some pointers on how I can have a session timeout notification.. when users are approaching the timeout.
[15:37] baudehlo: hah. It's just an easy to read article.
[15:37] Layke: Any request will refresh the session right.. so I can't check against the server how long they have left?
[15:37] sniff has left the channel
[15:37] kevwil has joined the channel
[15:38] Layke: node.js doesn't know anytihng about my user sessions, which was why I was thinkiung it might be able to help...
[15:38] Layke: I'm using node.js and socket.io at the moment.
[15:38] cypherblue has joined the channel
[15:39] baudehlo: rachet: I wouldn't use SpamAssassin for the filtering though - it's trained for email spam.
[15:39] bnoordhuis: lmatteis: you had a question about event loops?
[15:39] rachet: baudehlo: what would you use? something custom?
[15:39] lmatteis: bnoordhuis: yes, just how the low-levels work. how does the main event loop communicate with, say, the database where it spawned a query
[15:40] bnoordhuis: lmatteis: through file descriptors (on unices)
[15:40] baudehlo: If I was starting from scratch? To be honest probably just strict moderation of first N posts for each submitter.
[15:40] diminoten: even if I change the require lines to point to where the folders actuall are, it still doesn't find the modules listed, even though they're there
[15:40] rachet: I'm trying to get something automated :/
[15:41] bnoordhuis: lmatteis: connections / sockets are file descriptors on unix systems, you can pool them and watch them for changes with syscalls like select, poll, kqueue, etc.
[15:41] baudehlo: I'd also use surbl, uribl and dbl on any URLs posted in comments.
[15:41] JumpMast3r has joined the channel
[15:41] ryanfitz has joined the channel
[15:41] dilvie has joined the channel
[15:42] cgray has joined the channel
[15:42] rachet: surbl?
[15:42] lmatteis: bnoordhuis: ok, a little more than that? so in my node program i call db.query(function(){..}); and i suppose it tells the DB to run that stuff and then continues the regular event loop execution... but when it tells it to run the query it also sets up this file descriptor that the DB uses to "signal" when the query has been done?
[15:42] baudehlo: rachet: those three are dns blocklists for domain names used in spam.
[15:42] rachet: awesome.
[15:43] baudehlo: lmatteis: it depends on the database driver.
[15:43] lmatteis: bnoordhuis: ok, but to "watch" the file descriptor whether it has changed (the DB has written it or something), the main event loop must use something like select(), right? and select() blocks
[15:43] baudehlo: yes select blocks. But only until it has something to do.
[15:43] lmatteis: baudehlo: right, and where does it block? it cant block in the main event loop
[15:43] baudehlo: remember it's not just listening on that one file descriptor, it's listening on all of them.
[15:44] lmatteis: yes sure
[15:44] baudehlo: yes it "blocks" in the main event loop
[15:44] rachet: so far, it looks like I can combine URL blacklists with activity filters, and some sort of word naturalizer to help check the content
[15:44] r04r has joined the channel
[15:44] baudehlo: that's what an event loop is.
[15:44] rachet: basically prevent someone from just putting "cocks" a million times
[15:44] lmatteis: so how is the rest of my node code going to be executed if it's stuck on select()?
[15:44] davemo has joined the channel
[15:45] bnoordhuis: lmatteis: you can pass a timeout parameter to select()
[15:45] bnoordhuis: so if nothing interesting happens in say 500 ms, select() will return and you continue with whatever you were doing
[15:45] joshkehn has joined the channel
[15:45] lmatteis: and then go back to select()?
[15:45] joshkehn has left the channel
[15:45] lmatteis: where my callback is then executed?
[15:45] bnoordhuis: between the calls to select()
[15:46] lmatteis: yes
[15:46] bnoordhuis: it works like this: there's a set of fds we watch for changes
[15:46] bnoordhuis: and then there's things like timers
[15:46] lmatteis: so how does it know to end the node process, seems like this event loop continues
[15:46] vrs has joined the channel
[15:46] baudehlo: lmatteis: code only needs to run when something is happening on a file descriptor, or a timer event happens.
[15:46] bnoordhuis: so right before we call select(), we look up when the next timer is supposed to run
[15:46] vrs: bnoordhuis: i was told by make to bug you
[15:46] bnoordhuis: if that's in 500 ms, we pass that as the timeout to select()
[15:47] bnoordhuis: vrs: try pasting the exact message :)
[15:47] lmatteis: ok
[15:47] vrs: `make install` is not implemented yet. Bug bnoordhuis about it in #node.js
[15:47] makeInstallBot: vrs: `make install` is not supported on current node.js `master` due to build system refactor. Please use latest stable tag (v0.6.x).
[15:47] bnoordhuis: ^ awesome isn't it :)
[15:47] vrs: :)
[15:47] bnoordhuis: it's good that people bug me about it though, i really should get `make install` fixed
[15:48] bnoordhuis: lmatteis: in a nutshell, we only block in select() if there's nothing else to do
[15:48] lmatteis: bnoordhuis: ok.... so when does the program end?
[15:48] scttnlsn has joined the channel
[15:48] lmatteis: when there's no more file descriptors?
[15:48] Samuel_Roldan has joined the channel
[15:49] bnoordhuis: lmatteis: or other events (like timers)
[15:49] baudehlo: yes, basically. Or you call process.exit()
[15:49] lmatteis: so there's like
[15:49] davidascher has joined the channel
[15:49] r04r has joined the channel
[15:50] bartt has joined the channel
[15:50] lmatteis: for(;;){ run_javascript_code_in_my_node_program(); select(..); execute_stuff_in_descriptors() }
[15:50] lmatteis: wait
[15:50] lmatteis: how do you prevent the javascript code from being re-executed?
[15:51] lmatteis: like your actual JS program
[15:51] grampajoe has joined the channel
[15:51] lmorchard has joined the channel
[15:51] josh-k has joined the channel
[15:51] lmatteis: well i guess it only needs to run the first iteration of the loop, right?
[15:52] bartt has joined the channel
[15:52] jaequery has joined the channel
[15:52] jxie has joined the channel
[15:52] eldios:  telnet miku.acm.uiuc.edu
[15:53] ohtogo has joined the channel
[15:53] bnoordhuis: lmatteis: yes, when node starts, it executes your script
[15:53] baudehlo: lmatteis: so you run "node file.js", it executes the code in file.js, and then enters the event loop.
[15:53] bnoordhuis: lmatteis: when the last line of your script has been executed, we enter the event loop proper
[15:53] bnoordhuis: lmatteis: after that, the only thing node does is wait for events and call your callbacks when one happens
[15:53] lmatteis: ahhhh
[15:53] lmatteis: nice sure
[15:54] indutny: heya! devs, take a look at this : http://news.ycombinator.com/item?id=3300107
[15:54] lmatteis: wow much clearer
[15:54] lmatteis: thanks guys
[15:54] mchammer__ has joined the channel
[15:54] indutny: and please upvote for it (double posting link, sorry : http://news.ycombinator.com/item?id=3300107 )
[15:54] lmatteis: Scala_: does that make sense?
[15:54] diminoten: asking for upvotes?  tisk tisk
[15:55] r04r has joined the channel
[15:55] r04r has joined the channel
[15:55] neurodrone has joined the channel
[15:55] lyte has joined the channel
[15:55] lyte has joined the channel
[15:57] lmatteis: bnoordhuis: so all the db.query(callback); does is that it writes a file descriptor that the DB driver uses as well?
[15:57] lmatteis: bnoordhuis: what if the DB driver "writes" the file descriptor before the node js program has finished execution?
[15:58] josh_k has joined the channel
[15:58] lmatteis: then it enters the event loop... and the event has already been fired
[15:58] lmatteis: so i guess the timeout fixes this?
[15:58] joshsmith: I'm using gnoguchi's everyauth; is there any way to add custom info to my session?
[15:59] bnoordhuis: lmatteis: a file descriptor is a two-way communication channel between the client (your code) and the server
[15:59] alFReD-NSH has joined the channel
[15:59] bnoordhuis: lmatteis: if you (or the db library) writes to the fd, the server receives a query
[15:59] eldios: is it better to have config properties in a .json file or in a .js and require it?
[16:00] r04r has joined the channel
[16:00] bnoordhuis: lmatteis: if the server writes to its counterpart, you receive a response
[16:00] lmatteis: bnoordhuis: yes
[16:00] lmatteis: right i understand that
[16:00] eldios: this is more of a best practice than an absolute rule I'd say
[16:00] alFReD-NSH: Hi guys, I wanna know about inversion-of-control, and how we can do it in node, any articles to read? videos to watch?
[16:00] deedubs has joined the channel
[16:01] alFReD-NSH: Technically I have no idea what is it.. :D
[16:01] lzskiss has joined the channel
[16:01] stantona has joined the channel
[16:02] bnoordhuis: alFReD-NSH: ioc is an enterprise-y java / c# thing, it has no place in dynamic languages
[16:02] aelien27 has joined the channel
[16:02] mattrobenolt has joined the channel
[16:02] alFReD-NSH: hmmm... someone told me that I should do it in nodeJS
[16:02] matejv has joined the channel
[16:03] Scala_: lmatteis: Just finished reading the scrollback
[16:03] alFReD-NSH: Am I supposed to forget ioc and live my life? :P
[16:03] Scala_: bnoordhuis: Thanks for the select/node explanation
[16:03] zomg: alFReD-NSH: you probably should be passing dependencies in constructor or setters to your objects
[16:03] stantona has joined the channel
[16:04] zomg: but besides that you probably won't really need much IoC/DI type stuff
[16:04] alFReD-NSH: @zomg that's what I usually do....
[16:05] alFReD-NSH: But I thought maybe ioc is the cleaner way of it, though I don't know what is.... :D
[16:05] r04r has joined the channel
[16:05] r04r has joined the channel
[16:06] Vennril has joined the channel
[16:07] jocafa has joined the channel
[16:07] scttnlsn has joined the channel
[16:09] secoif has joined the channel
[16:09] criswell has joined the channel
[16:10] bnoordhuis: alFReD-NSH: read up on what spring and guice do (and how they do it)
[16:10] vrs: ok, it built nicely, thanks
[16:10] vrs has left the channel
[16:10] bnoordhuis: maybe start with guice, spring does a lot more than just ioc
[16:11] alFReD-NSH: thanks
[16:11] _dc has joined the channel
[16:12] jakehow has joined the channel
[16:12] sfoster has joined the channel
[16:12] grampajoe_ has joined the channel
[16:12] jaequery has joined the channel
[16:12] joshsmith_ has joined the channel
[16:13] sdwrage has joined the channel
[16:14] pkrumins: started a new node.js article series!
[16:14] pkrumins: called "node.js modules you should know about"
[16:14] pkrumins: first blog post is about dnode: http://www.catonmat.net/blog/nodejs-modules-dnode/
[16:14] idl3 has joined the channel
[16:15] r04r has joined the channel
[16:15] r04r has joined the channel
[16:16] Danielss89 has joined the channel
[16:16] isaacs has joined the channel
[16:17] elijah-mbp has joined the channel
[16:17] lzskiss has joined the channel
[16:17] brianc has joined the channel
[16:18] base698 has joined the channel
[16:18] truedat101 has joined the channel
[16:19] cronopio has joined the channel
[16:19] ritch has joined the channel
[16:19] ccapndave has joined the channel
[16:19] boltR has joined the channel
[16:20] jj0hns0n has joined the channel
[16:21] mandric has joined the channel
[16:22] r04r has joined the channel
[16:23] ritch has left the channel
[16:25] fangel has joined the channel
[16:25] bosphorus has joined the channel
[16:26] diminoten: I've got a really baic question
[16:26] diminoten: *basic
[16:26] diminoten: and could use some direction... I understand the concept of browser executed js, but where can I read about non-browser executed JS?  I don't really get how it works right now
[16:27] zalun has joined the channel
[16:27] r04r has joined the channel
[16:27] alvaro_o has joined the channel
[16:27] zomg: diminoten: it's essentially the same, except the browser is removed from the equation
[16:27] ryanfitz has joined the channel
[16:27] burningdog has joined the channel
[16:27] zalun: which package is the best to write documentation for JS project?
[16:27] diminoten: okay, so I create my little js file, it's got some logic in it... how do I execute it?
[16:27] zomg: diminoten: well with node, you would use "node myfile.js"
[16:28] diminoten: okay, and it doesn't have to be written to perform some kind of server task for me to use node, then?
[16:28] gtramontina has joined the channel
[16:28] diminoten: see I don't even really know where to go to read about this heh, I feel silly asking basic questions like this
[16:29] mchammer__: diminoten: what kind of system are you using?
[16:29] diminoten: linux
[16:29] tjholowaychuk has joined the channel
[16:29] tih-ra has joined the channel
[16:30] aheckmann has joined the channel
[16:30] mchammer__: https://github.com/joyent/node/wiki/Installation
[16:30] mchammer__: u just need to install node
[16:30] eviltwin_ has joined the channel
[16:30] mchammer__: afterwards you can, just like zomg said run a js-file in your terminal via node myfile.js
[16:31] diminoten: I've got node installed
[16:31] diminoten: hm okay
[16:31] r04r has joined the channel
[16:31] r04r has joined the channel
[16:32] diminoten: okay, I got it
[16:32] mchammer__: what kind of application do you want to write?
[16:32] vguerra has joined the channel
[16:33] vlucas has joined the channel
[16:33] diminoten: heh something that can load a dynamic set of data into mongodb
[16:33] bogomips2_ has joined the channel
[16:33] mchammer__: okay, then you should take a look at the package "mongoose". to install mongoose you need the node-package-manager:  http://npmjs.org/
[16:34] vlucas: I cloned the node.js repo locally and am trying to run tests...
[16:34] vlucas: https://github.com/joyent/node/wiki/Contributing says to run "make test"
[16:34] vlucas: but it's not working
[16:34] diminoten: okay, I'll look at mongoose
[16:34] vlucas: am I missing a step here?
[16:34] strmpnk has joined the channel
[16:34] mchammer__: when you got npm installed type npm install mongoose in terminal and have a look at: http://mongoosejs.com/
[16:35] Swimming_Bird has joined the channel
[16:35] diminoten: okay cool, reading about it now
[16:36] zomg: Yeah you can use node in a similar way as you would use python or perl too, it's not just for web stuff :)
[16:36] scttnlsn_ has joined the channel
[16:36] vlucas: can anyone tell me how to run the node.js tests in the "test/" directory?
[16:37] r04r has joined the channel
[16:37] zomg: make test or something?
[16:37] smgt has joined the channel
[16:37] vlucas: not working
[16:37] vlucas: so I need to install something else first?
[16:37] vlucas: I am on OS X
[16:37] MatthewS has joined the channel
[16:38] vlucas: I get "make: *** No rule to make target `options.gypi', needed by `out/Makefile'.  Stop."
[16:38] eignerchris has joined the channel
[16:38] bnoordhuis: vlucas: is this with master?
[16:39] vlucas: yes
[16:39] bnoordhuis: vlucas: does `make test` work if you `git checkout eda1538^` first?
[16:39] MrBenn has joined the channel
[16:39] luizlopes has joined the channel
[16:40] emattias has joined the channel
[16:40] vlucas: I get a different result now
[16:40] vlucas: http://cl.ly/CHox
[16:41] vlucas: I cd into "test/" and get this
[16:41] caolanm has joined the channel
[16:41] vlucas: http://cl.ly/CFVS
[16:41] bnoordhuis: vlucas: sorry, `make distclean && ./configure` will fix that
[16:42] bnoordhuis: you don't have to cd into any directories
[16:42] r04r has joined the channel
[16:42] vlucas: okay, runs now
[16:42] Morkel has joined the channel
[16:43] vlucas: want me to edit the page at https://github.com/joyent/node/wiki/Contributing to add those instructions?
[16:44] cgfuh has joined the channel
[16:44] bnoordhuis: vlucas: no - i think i'll have to revert eda1538
[16:44] vlucas: well it didn't work in master either
[16:46] tdegrunt has joined the channel
[16:46] ank has joined the channel
[16:46] booyaa: phew
[16:46] booyaa: almost spammed you guys... irssi stopped me
[16:46] SamuraiJack has joined the channel
[16:47] r04r has joined the channel
[16:47] matejv has joined the channel
[16:47] bnoordhuis: vlucas: eda1538 is a recent commit in master
[16:47] vlucas: bnoordhuis: also... there is no documentation on how to run a single test file, like when I create a .js test to cover a new feature addition
[16:48] bnoordhuis: vlucas: oh, easy - `./node path/to/test.js`
[16:48] vlucas: bnoordhuis: what command should I use for running a single test file?
[16:48] vlucas: ah, cool
[16:48] vlucas: should also be in contributor docs :)
[16:48] bnoordhuis: vlucas: you can also use `python tools/test.py --mode=debug,release simple/test-cli-eval`
[16:48] grekko has joined the channel
[16:49] SamuraiJack has joined the channel
[16:49] bnoordhuis: vlucas: feel free to update the wiki
[16:49] MatthewS has joined the channel
[16:50] smgt has joined the channel
[16:51] broofa has joined the channel
[16:51] r04r has joined the channel
[16:51] r04r has joined the channel
[16:52] vlucas: will do
[16:52] tdegrunt has joined the channel
[16:53] TooTallNate has joined the channel
[16:53] diogogmt has joined the channel
[16:54] bnoordhuis: .. {x:42}
[16:54] catb0t: 42
[16:54] bnoordhuis: .. {x:42, y:1337}
[16:54] catb0t: Exception: SyntaxError: Unexpected token :
[16:54] bnoordhuis: seriously, wtf?
[16:54] bnoordhuis: .. o = {x:42, y:1337}
[16:54] catb0t: { x: 42, y: 1337 }
[16:55] orangevinz has joined the channel
[16:55] topaxi: {x:42} <- a block with a label "x" and a number literal?
[16:55] hydrozen has joined the channel
[16:55] bnoordhuis: topaxi: the weird is that it does work in the repl
[16:56] alFReD-NSH has left the channel
[16:56] sdwrage has left the channel
[16:56] topaxi: well, i don't know how the bot implements it here :]
[16:56] bnoordhuis: .. eval('{x:42, y:1337}')
[16:56] catb0t: Exception: SyntaxError: Unexpected token :
[16:56] r04r has joined the channel
[16:57] topaxi: hm ^^
[16:58] gut4 has joined the channel
[16:58] diminoten: so apparently I'll have to use mongoskin
[16:59] diminoten: any good docs other than what's provided?
[16:59] maligree has joined the channel
[16:59] JaKWaC has joined the channel
[16:59] bnoordhuis: .. {}
[17:00] Renegade001 has joined the channel
[17:00] bnoordhuis: .. undefined
[17:00] bnoordhuis: .. 42
[17:00] catb0t: 42
[17:00] bnoordhuis: so {} is undefined... the plot thickens
[17:01] rauchg has joined the channel
[17:01] r04r has joined the channel
[17:01] scott_gonzalez_ has joined the channel
[17:01] ank has joined the channel
[17:02] base698 has joined the channel
[17:02] trose has joined the channel
[17:03] lzskiss has joined the channel
[17:03] CIA-109: node: 03Ben Noordhuis 07v0.6 * r3d22dbf 10/ (src/node.cc src/node.js test/simple/test-cli-eval.js): cli: add -p switch, print result of --eval - http://git.io/XJC_Iw
[17:03] dgathright has joined the channel
[17:03] Renegade001 has joined the channel
[17:04] sh1mmer has joined the channel
[17:05] robi42 has joined the channel
[17:05] vkandy has joined the channel
[17:05] TheJH has joined the channel
[17:06] r04r has joined the channel
[17:06] r04r has joined the channel
[17:06] kickingvegas has joined the channel
[17:06] jesster7 has joined the channel
[17:06] jesster7 has left the channel
[17:07] _dc has joined the channel
[17:07] HRSatiya has joined the channel
[17:08] stephank has joined the channel
[17:08] Robi_ has joined the channel
[17:08] Renegade001 has joined the channel
[17:08] mandric_ has joined the channel
[17:09] EyePulp has joined the channel
[17:10] isaqual has joined the channel
[17:10] jesster71 has joined the channel
[17:11] mandric has joined the channel
[17:11] jesster71 has left the channel
[17:11] r04r has joined the channel
[17:11] GrizzLyCRO has joined the channel
[17:12] Poetro_ has joined the channel
[17:12] Poetro_ has joined the channel
[17:13] icebox has joined the channel
[17:15] raincole has joined the channel
[17:15] vlucas: bnoordhuis: I am guessing this is not the output I should be getting while running the python test runner script?
[17:15] vlucas: http://cl.ly/CHaq
[17:16] chrislorenz has joined the channel
[17:16] TheJH: about node core: would the fs module still work if communication with the binding was async?
[17:16] maletor has joined the channel
[17:17] saesh has joined the channel
[17:17] TheJH: like, fs.js in the browser, fs binding on the server? :D
[17:17] TheJH: everything but "watch" and "watchFile" looks like it might work
[17:18] joshsmith: okay, I have a "model" and am using exports.someFunction within that model
[17:18] Sadjow has joined the channel
[17:18] joshsmith: how can I access those functions from within that file?
[17:18] TheJH: would be easy to write a browser-based file manager, just shim dnode between the JS core stuff and the bindings :D
[17:18] ShinyDarkness: Hello, all. Which do you think is more likely to happen first: A multithreaded version of node.js, or a g++ release that implements C++1?
[17:18] joshsmith: this. is not the right scope
[17:19] jerrysv has joined the channel
[17:19] RobWC has joined the channel
[17:19] federicoweber has joined the channel
[17:19] benvie: multithreaded node is incoming
[17:19] joshsmith: anyone have any idea?
[17:20] ShinyDarkness: benvie: But... when?
[17:20] benvie: imminent
[17:20] baudehlo: ShinyDarkness: there are already implementations of multi-threaded node.
[17:20] TheJH: who is the core team guy for fs stuff?
[17:20] joshsmith: Bueller? Bueller...?
[17:21] ShinyDarkness: baudehlo: Where? :O
[17:21] wilmoore has joined the channel
[17:21] baudehlo: google for node w16
[17:21] sfoster has joined the channel
[17:21] benvie: technically it's already multithreaded
[17:21] ShinyDarkness: baudehlo: I found nothing.
[17:21] benvie: just not in the javascript context
[17:22] benvie: but that's going to change
[17:22] baudehlo: ShinyDarkness: https://github.com/sheremetyev/w16
[17:22] jocafa: soooo it's a VW Phaeton then?
[17:23] jocafa: mmmmmmmm
[17:23] ShinyDarkness: benvie: baudehlo: Thanks.
[17:23] lzskiss has joined the channel
[17:23] benvie: https://github.com/joyent/node/tree/isolates
[17:23] benvie: you can get it now technically
[17:23] benvie: if you want to compile it
[17:23] benvie: not stable though
[17:23] r04r has joined the channel
[17:23] jtsnow has joined the channel
[17:24] baudehlo: also there's this threads_a_gogo thing being discussed/demo'd on the mailing list right now
[17:25] baudehlo: I just fucking wish they hadn't demo'd it with fibonacci. Urgghhhh.
[17:26] dilvie has joined the channel
[17:27] kenperkins has joined the channel
[17:28] mike5w3c_ has joined the channel
[17:29] airhorns has joined the channel
[17:31] r04r has joined the channel
[17:31] Poetro_ has joined the channel
[17:31] Poetro_ has joined the channel
[17:32] fmeyer has joined the channel
[17:33] chirag has joined the channel
[17:34] chirag: I'm trying to learn node.js and m working on socket.io for now.
[17:34] diogogmt has joined the channel
[17:34] chirag: http://pastie.org/2945182 here is my code
[17:34] chirag: but when i make a request
[17:34] chirag: nothing is printed to console.
[17:35] trotter has joined the channel
[17:35] Revernd has joined the channel
[17:35] chirag: only hello is printed
[17:35] p1d has joined the channel
[17:36] pksunkara: chirag: Let me chck
[17:37] ekryski has joined the channel
[17:37] mikl has joined the channel
[17:37] pksunkara: chirag: Remove quotes from data in line 17
[17:38] jarek has joined the channel
[17:38] jarek has joined the channel
[17:38] chirag: ok
[17:38] isaacs has joined the channel
[17:38] lauxley has left the channel
[17:38] r04r has joined the channel
[17:38] r04r has joined the channel
[17:38] context: maybe he wanted quotes
[17:39] context: chirag: i dont see anything in your code suggesting something should get printed to the console
[17:39] davidascher has joined the channel
[17:40] springmeyer has joined the channel
[17:40] dshaw_ has joined the channel
[17:40] r1ngzer0 has joined the channel
[17:40] devongovett has joined the channel
[17:41] lauxley has joined the channel
[17:42] fzzzy has joined the channel
[17:44] diogogmt has joined the channel
[17:44] kishoreyekkanti has joined the channel
[17:45] te-brian2 has joined the channel
[17:45] pksunkara: chirag: that too
[17:45] gr-eg has joined the channel
[17:45] pksunkara: context: but at least socket.io should print some logs right?
[17:46] r04r has joined the channel
[17:46] r04r has joined the channel
[17:46] stantona has joined the channel
[17:46] b_i_d: Argh! Head exploding! Is hook.io a complete game changer of 30 years in application design or do only I feel that way?
[17:47] daffod has joined the channel
[17:47] daffod: Hello
[17:48] daffod: I installed node.js windows version.created a file inside c dir.when i tried node hello,my cmd says node is unrecognised
[17:48] b_i_d: (P.S. Head exploding in a good way. The possibilities! The elegant code! )
[17:48] chirag: context: I missed to add the console.log line in the pastie
[17:48] chirag: sorry
[17:48] chirag: http://pastie.org/2950607
[17:48] EyePulp has joined the channel
[17:48] baudehlo: b_i_d: there's lots of shared message passing systems out there, long before hook.io came out.
[17:48] chirag: heres the updated pastie
[17:48] chirag: pksunkara: sorry that was not the correct pastie
[17:49] b_i_d: Yeah. But I didn't stumble over them before. :D
[17:49] chirag: it prints hello
[17:49] mange has joined the channel
[17:49] baudehlo: right, so it's changed your game, not the world's :)
[17:50] b_i_d: It changed MY world. ;)
[17:50] daffod: Sny i/p on my question
[17:50] ace: anyone use socketstream here?
[17:50] daffod: *Any
[17:50] Dulak has joined the channel
[17:50] baudehlo: personally I've yet to see much of a use-case for it in large scale application design, but I didn't spend much time playing with it.
[17:50] b_i_d: Or will. Once I'm done with the plans for a complete rewrite of my app.
[17:51] baudehlo: daffod: you need to put node in your PATH.
[17:51] daffod: baudehlo: Which path
[17:51] daffod: c:/test
[17:51] r04r has joined the channel
[17:51] r04r has joined the channel
[17:51] baudehlo: the PATH environment variable
[17:51] daffod: baudehlo: How do i set that?
[17:52] Destos has joined the channel
[17:52] baudehlo: no idea.
[17:52] baudehlo: I don't do Windows, sorry :)
[17:53] b_i_d: daffod: Easy. Install Linux and ask again. ;)
[17:53] patcito has joined the channel
[17:53] daffod: b_i_d: I do  not have linux on my machine now
[17:54] baudehlo: http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx
[17:54] b_i_d: The google is strong with this one.
[17:54] baudehlo: http://lmgtfy.com/?q=how+do+I+set+the+PATH+on+windows
[17:55] truedat101 has joined the channel
[17:56] ryan_stevens has joined the channel
[17:56] harthur has joined the channel
[17:56] issackelly_ has joined the channel
[17:56] r04r has joined the channel
[17:56] nickb has joined the channel
[17:56] Ibuprofen has joined the channel
[17:58] robotmay has joined the channel
[17:58] SamuraiJack has joined the channel
[17:59] PhilK has joined the channel
[18:00] boltR has joined the channel
[18:00] crcn has joined the channel
[18:00] AvianFlu has joined the channel
[18:01] r04r has joined the channel
[18:02] daffod: baudehlo: what should my path be?
[18:02] baudehlo: it should contain whatever directory the node.exe file is in.
[18:03] daffod: baudehlo: It is set correctly
[18:04] daffod: baudehlo: Why is ti not executing?Should i refer any file inside the folder
[18:04] diminoten: there should be a list out there, of the top 15 or 20 simple computer tasks that everyone should know how to do
[18:04] diminoten: among them, how to set the PATH in windows
[18:04] CarterL has joined the channel
[18:04] willwh: windows key + pass break -> Advanced tab -> environement variables :)
[18:04] willwh: puase*
[18:04] Danielss89 has joined the channel
[18:05] hipsters_ has joined the channel
[18:05] ecin has joined the channel
[18:05] EyePulp has joined the channel
[18:05] baudehlo: daffod: I gotta bow out of this one, I don't have a clue about windows. I haven't programmed it since Windows NT 4. Perhaps call the Geek Squad?
[18:06] daffod: baudehlo: okay
[18:06] context: chirag: you never said whats wrong. how can anyone tell you how to fix it
[18:06] martin_sunset has joined the channel
[18:07] context: chirag: console.log("Hello"); what do you expect it to print?
[18:07] b_i_d: daffod: ##windows
[18:07] chirag: context: it prints hello
[18:07] Carter_ has joined the channel
[18:07] chirag: but not world whenever a new connection is made
[18:07] context: then thats not a problem is it?
[18:08] chirag: context: problem is world is not printed when a new connection is made
[18:08] context: maybe a connection was never made ?
[18:08] r04r has joined the channel
[18:09] jimmysparkle has joined the channel
[18:09] _dc has joined the channel
[18:10] lauxley has joined the channel
[18:11] alessioalex has joined the channel
[18:12] chirag: context: when i type localhost:9000  a new connection is made right?
[18:12] chirag: or m i missing something here?
[18:13] GrizzLyCRO: why is syntax for modules "module.exports = item;" instead of "module.exports(item)"
[18:13] tbranyen: because exports is not a function
[18:13] GrizzLyCRO: when i see "exports" i think its function
[18:13] tbranyen: GrizzLyCRO: well thats unfortunate :-/
[18:14] tbranyen: module.exports=(item); there you go thats pretty close
[18:14] GrizzLyCRO: its not about syntactic sugar
[18:14] __t has joined the channel
[18:14] GrizzLyCRO: its just that exports is action
[18:14] GrizzLyCRO: verb
[18:14] fmeyer has joined the channel
[18:14] r04r has joined the channel
[18:15] tbranyen: yea except the idea is that you attach to exports to expose what you want
[18:15] diminoten: exports is also a noun
[18:15] tbranyen: exports.something = "whatever";
[18:15] diminoten: think of it as cargo
[18:15] jocafa: are there any plans for adding commonjs amd support to node directly?
[18:15] GrizzLyCRO: tbranyen: thanks for explanation, makes sense
[18:15] GrizzLyCRO: diminoten: thats wrong, then it should be exports.add()
[18:16] GrizzLyCRO: because if its cargo, each time you change value, you "replace" old cargo
[18:16] diminoten: you've only got room for one export
[18:16] GrizzLyCRO: hehe :)
[18:16] diminoten: you're a shrimpin' vessel, after all
[18:17] Dulak: diminoten++
[18:17] v8bot_:  Dulak has given a beer to diminoten. diminoten now has 1 beers.
[18:17] diminoten: woo
[18:17] GrizzLyCRO: anyway, i thinkg it should be renamed to module.export then
[18:17] GrizzLyCRO: without "s"
[18:18] GrizzLyCRO: not really important though :)
[18:18] Dulak: you can have multiple objects attached to exports
[18:18] GrizzLyCRO: but i need to proxy them all trough one object?
[18:18] davidascher has joined the channel
[18:18] context: chirag: you should really ask questions here. more ears to hear your question
[18:18] context: chirag: and probably NOT. seeing as socket.io handles websocket connections.
[18:18] chirag: ok
[18:19] GrizzLyCRO: this should not work? "module.exports = item; module.exports = dummy;"
[18:19] githogori has joined the channel
[18:19] r04r has joined the channel
[18:20] bradleyg has joined the channel
[18:20] Dulak: GrizzLyCRO: module.exports.myfunc1 = function () { ... };  module.exports.myfunc2 = function () { ... } etc
[18:20] issackelly_ has joined the channel
[18:21] GrizzLyCRO: i see
[18:21] GrizzLyCRO: thanks :)
[18:21] mmalecki: bnoordhuis: are you guys releasing 0.6.4 today?
[18:21] chirag: context: so localhost:9000 make what kind of connection?
[18:21] chirag: and how do i make a websocket connection
[18:22] Dulak: GrizzLyCRO: then when you do var m = require('modulename');  you get m.myfunc1() and m.myfunc2()
[18:22] GrizzLyCRO: yeah, i see
[18:22] GrizzLyCRO: so "exports" is obect, and i am jsut adding properties to it in module?
[18:22] GrizzLyCRO: *object
[18:23] salva has left the channel
[18:23] reid has joined the channel
[18:24] blup has joined the channel
[18:24] r04r has joined the channel
[18:24] Dulak: GrizzLyCRO: the properties are in the exports object, which gets exported on require,  module is the global object inside a module iirc (maybe not, I cannot remember off the top of my head)
[18:24] StanlySoManly has joined the channel
[18:24] GrizzLyCRO: yeah, i see, i got confused about it earlier, but makes perfect sense now
[18:25] Dulak: what threw me for a loop was that the global object inside a module is local to the module, not truly global
[18:25] Dulak: tripped me up pretty good coming from browser js
[18:25] CrabDude has joined the channel
[18:26] jbpros has joined the channel
[18:26] davemo has joined the channel
[18:26] ecto has joined the channel
[18:27] arcanis has joined the channel
[18:27] Morkel has joined the channel
[18:29] r04r has joined the channel
[18:30] atourino has joined the channel
[18:30] context: chirag: you use the example client code
[18:30] context: on a webpage
[18:30] context: that you then access from your browser
[18:30] brianc: Dulak: 'global' is actually global to all of node
[18:30] CiRlE has joined the channel
[18:30] chirag: ok
[18:31] chirag: tried that as well
[18:31] chirag: dint work
[18:31] chirag: nothing was printed to console
[18:31] doctorm has joined the channel
[18:31] brianc: Dulak: the global object inside of a module is global. global to everything.
[18:31] doctorm: Can anyone recommend a pattern for deferring a function call with arguments?
[18:32] Dulak: brianc: Uhhh last time I tested attaching to global in a module then requiring the file as a module did not make my object show up on the global object...  I am going to test again, because that was a while ago
[18:33] jsvana_ has left the channel
[18:33] chirag: context: i tried with the example on the home page of socket.io
[18:33] brianc: Dulak: gist your script if it doesn't make a global, i'd like to take a look at it
[18:33] doctorm: for example, foo(bar(baz, qux)) won't work of course. You could pass foo(bar, [ baz, qux ]), but then how do you call bar with arguments baz and qux from foo? Is that what "apply" is for?
[18:33] chirag: nothing is printed to console
[18:33] brianc: Dulak: por favor
[18:34] chirag: context: i just changed the port no to 9000 is that causing the problem?
[18:34] brianc: doctorm: setTimeout
[18:35] WarheadsSE has joined the channel
[18:35] jbrokc has joined the channel
[18:35] Dulak: brianc: it's working as you said but I swear I tested it somewhere on the 0.4.x cycle and it would not show up on the global object in the requiring script
[18:36] EriksLV has joined the channel
[18:36] doctorm: brianc: I don't think so...maybe my use of defer was wrong. I'm looking for a pattern for calling a callback with it's arguments later on. I think .apply is what I'm looking for actually.
[18:36] r04r has joined the channel
[18:37] brianc: doctorm: var functionToCal = function(arg1, arg2) { /* whatever */ }; setTimeout(function() { functionToCall(1,2);}, 1000);
[18:38] brianc: doctorm: you could get fancy using Function.prototype.bind or Function.prototype.apply
[18:38] tmcw has joined the channel
[18:38] doctorm: brianc: There is no set time to wait for this instance.
[18:38] brianc: doctorm: process.nextTick ?
[18:39] doctorm: brianc: Think commands being stored to be executed as they come up.
[18:39] GrizzLyCRO: yay, moongose is really nice :)
[18:39] brianc: doctorm: ah, okay, yeah apply or bind 
[18:39] GrizzLyCRO: at least for now
[18:39] doctorm: brianc: Cool, I'll check out bind as well
[18:39] GrizzLyCRO: just tuned express to mvc :)
[18:40] christine has joined the channel
[18:40] jbrokc_ has joined the channel
[18:40] CIA-109: libuv: 03Bert Belder 07master * reb6d754 10/ src/win/tty.c : Win: utf-8 decoder bug when compiling with gcc - http://git.io/9Pcftg
[18:41] lz2 has joined the channel
[18:42] r04r has joined the channel
[18:42] jomoho has joined the channel
[18:43] Renegade001 has joined the channel
[18:43] gtramontina has joined the channel
[18:44] davidwalsh has joined the channel
[18:45] DennisRasmussen has joined the channel
[18:47] gut4 has joined the channel
[18:49] smathy has joined the channel
[18:49] mikeal has joined the channel
[18:51] raenger has joined the channel
[18:51] lzskiss has joined the channel
[18:51] r04r has joined the channel
[18:54] hydrozen has joined the channel
[18:56] truedat101 has joined the channel
[18:57] franciscallo has joined the channel
[18:57] kishoreyekkanti has left the channel
[18:59] pyrotechnick has joined the channel
[18:59] forward has joined the channel
[18:59] pyrotechnick: NODE IS TAKING OVER THE WORLD
[18:59] r04r has joined the channel
[19:00] bnoordhuis: mmalecki: yes
[19:00] mmalecki: bnoordhuis: awesome! <3
[19:01] briancray has joined the channel
[19:02] eddyb: NCIS: LA is advertising Microshit SkyDrive
[19:02] mmalecki: eddyb: they store classified information there, lol
[19:02] eddyb: mmalecki: yeah, that would be dumb
[19:03] mikeal has joined the channel
[19:03] mjr_: bnoordhuis: how do you guys feel about the latest 0.6 vs. 0.4 under heavy load?
[19:03] ovaillancourt has joined the channel
[19:04] mjr_: Any things you are concerned about?  We are getting crushed right now, and hoping the transition to 0.6 will get us more capacity.
[19:04] joaquin_win_ has joined the channel
[19:04] githogori has joined the channel
[19:05] r04r has joined the channel
[19:05] jsurfer has joined the channel
[19:06] lazyshot has joined the channel
[19:06] harthur has joined the channel
[19:07] bnoordhuis: mjr_: you should benchmark it yourself obviously but 0.6 should be faster than 0.4 in just about everything
[19:07] mjr_: In synthetic benchmarks, it's a lot faster
[19:07] MatthewS has joined the channel
[19:07] mjr_: And sometimes slightly slower.
[19:08] pyrotechnick: it's both faster and slower
[19:08] pyrotechnick: it defies all reason
[19:08] pyrotechnick: it is node
[19:08] mjr_: We find ourselves with a rather daunting number of users that are connecting to our cluster these days.
[19:09] pyrotechnick: 0.6 is self-aware
[19:09] mjr_: And node is now getting slow, for reasons that are difficult to measure.
[19:09] pyrotechnick: http://nodejs.org/docs/v0.6.3/api/cluster.html
[19:09] ecin has joined the channel
[19:09] pyrotechnick: it's getting on all this new-age spirituality shizznit
[19:10] pquerna: http://haproxy.1wt.eu/download/1.5/doc/proxy-protocol.txt
[19:10] mmalecki: any idea if can I reattach to forked process?
[19:11] bnoordhuis: mjr_: slow in what respect?
[19:12] mjr_: bnoordhuis: it's using a lot more CPU that I was expecting, and our latencies are up.
[19:13] pquerna: mjr_: what version of v8, the bundled one?
[19:13] pyrotechnick: is it possibly churning through alot of workers?
[19:14] mjr_: pquerna: yes, bundled v8 and whatever openssl ubuntu uses
[19:14] orangevinz_ has joined the channel
[19:14] r04r has joined the channel
[19:14] r04r has joined the channel
[19:14] mjr_: Might be openssl time as well.  It's hard to tell.  We are stacking up a shitload of https connections these days.
[19:14] simenbrekken has joined the channel
[19:15] orangevinz_ has left the channel
[19:15] orangevinz_ has joined the channel
[19:15] bnoordhuis: mjr_: can you test it with --prof?
[19:15] zomg: My app isn't even doing that much and it's spiking to 60% CPU
[19:15] pquerna: mjr_: would be interesting to see if its related to the new gc stuff.
[19:15] pquerna: +1 prof needed
[19:15] zomg: I suspect it's node-binary's fault, but I'm awful at that stuff so I have no idea how to be more efficient about parsing a binary protocol :P
[19:15] mjr_: bnoordhuis: I'm tempted to run with --prof for a while, but I need to stop/start
[19:16] mjr_: then stop/start again to disable
[19:16] scttnlsn has joined the channel
[19:16] robotmay has joined the channel
[19:16] bnoordhuis: mjr_: i'll be happy to help but i need something to go on
[19:16] mjr_: oh yeah
[19:16] mjr_: Obviously you need data
[19:17] mjr_: I was just fishing for any concerns you had about just swapping in 0.6 on one of many processes to see if it helps.
[19:17] bnoordhuis: ah, like that :)
[19:17] mjr_: After we patched up some bugs that impact us, 0.4 is has been super stable.
[19:18] bnoordhuis: i'm positive that 0.6 is faster but if 0.4 is working well enough...
[19:18] chirag: context: after trying to work around socket.io for so long i finally give up..nowjs comes to my resuce and chat application is running..:)
[19:18] chirag: thanks for your time and help
[19:19] rwaldron has joined the channel
[19:19] r04r has joined the channel
[19:19] r04r has joined the channel
[19:19] mjr_: bnoordhuis: any concerns about https in 0.6 vs 0.4?
[19:19] mjr_: I mean, stuff to watch out for?
[19:20] bnoordhuis: mjr_: not really, if anything it should be more robust
[19:20] mjr_: I'll grab a profile of a loaded process on 0.4 and 0.6 and let you know what we find.
[19:20] joemccann: any one have any issues with bouncy and monit scripts?
[19:20] bnoordhuis: not necessarily faster, i'm still working on that
[19:20] bnoordhuis: mjr_: cool, thanks
[19:21] mjr_: V8 improvements to [] on Buffer help us a lot in one case.
[19:21] mjr_: And JSON seems faster as well
[19:21] joemccann: found something weird where monit can't restart bouncy if the path to the bouncy cli is "#!/usr/bin/env node"
[19:21] joemccann: https://github.com/substack/bouncy/issues/13
[19:22] ding has joined the channel
[19:22] gut4 has joined the channel
[19:23] boltR has joined the channel
[19:24] r04r has joined the channel
[19:24] simenbrekken has joined the channel
[19:24] nex3 has joined the channel
[19:25] pyrotechnick has joined the channel
[19:26] jerrysv: i thought i saw someone had put together a comprehensive list of v8 options?  does anyone have a link to that?
[19:26] deedubs has joined the channel
[19:27] uchuff has joined the channel
[19:27] WarheadsSE: probably on the v8 project page..
[19:28] yurivish has joined the channel
[19:28] ovaillancourt has joined the channel
[19:28] jerrysv: WarheadsSE: yeah, but someone external put together a better guide
[19:28] jerrysv: specifically for startup with node
[19:28] r04r has joined the channel
[19:29] fatjonny has joined the channel
[19:29] WarheadsSE: ah..
[19:29] mansoor-s has joined the channel
[19:30] WarheadsSE: I'd be content if I could figure out why I can't get node to compile/run cleanly on ARM kernels > 3.0
[19:30] yurivish: Hi, I have a quick question about node and redis. I'd like to execute two redis commands in a multi-like fashion, but the second one depends on the first â€“ is there a way to do that, or some clever pattern to avoid it?
[19:31] WarheadsSE: yurivish, why not have the second run on the return of the prior
[19:31] slawek- has joined the channel
[19:31] eddyb: mmalecki: O_O
[19:31] eddyb: just after that
[19:31] mikeal has joined the channel
[19:31] jxson has joined the channel
[19:31] TheJH: jerrysv, there's a flag you can give to node that prints them all
[19:31] eddyb: they have an episode set in Romania
[19:31] petrjanda has joined the channel
[19:31] mmalecki: eddyb: yeah, I remember that
[19:31] TheJH: jerrysv, `node --v8-options`
[19:32] jerrysv: TheJH: yeah, i know that, but there was a comprehensive guide to what each of them meant :)
[19:32] eddyb: ok, it's real, saw some signs with proper Romanian
[19:32] eddyb: it's fun
[19:32] mmalecki: it's the one with confidential data stored on ms, right?
[19:32] eddyb: because I'm living in Bucharest :P
[19:32] jerrysv: eg, what the base gc interval was, etc
[19:32] joshsmith: deedubs: were you the one who got a call from Heroku yesterday?
[19:32] eddyb: and I'm 100% Romanian
[19:33] deedubs: yes
[19:33] yurivish: WarheadsSE: That's how I have it now, but i noticed that it might mess up in some concurrency situations. I'm trying to assign numerical IDs to words. If a word already has an ID, use that; otherwise, auto-inc a key and assign its value to the word
[19:33] deedubs: joshsmith: ^
[19:33] joshsmith: I would kill for your luck right now
[19:33] eddyb: tho I don't speak that rromani language thing
[19:33] neilk_ has joined the channel
[19:33] deedubs: joshsmith: What's up?
[19:33] joshsmith: I'm currently blocked
[19:33] joshsmith: I can't db:push
[19:33] __t has joined the channel
[19:33] r04r has joined the channel
[19:33] r04r has joined the channel
[19:34] yurivish: WarheadsSE: Though... So long as I assign it atomically it should be fine, right? I just might end up skipping some id numbers.
[19:34] joshsmith: I can keep hacking away locally but this is a major prod change and I can't push at all until I can sync my db
[19:34] eddyb: if I'm right... it's a gypsy language
[19:35] eddyb: Cullen is Romanian :O:O
[19:35] AvianFlu: eddyb, romanian is a romance language, descended from latin
[19:35] yurivish: Right, I think the problem's solved, in that it was't a problem. Thanks! :P
[19:35] AvianFlu: eddyb, the gypsies call themselves the "romanee" or something, and that's their language, but it's unrelated largely
[19:35] eddyb: AvianFlu: never saw romance used in this context...
[19:36] eddyb: I'm Romanian ffs
[19:36] WarheadsSE: yurivish: :)
[19:36] AvianFlu: a "romance language" is a language descended from the roman language, i.e. latin
[19:36] eddyb: that sounds disturbingly weird
[19:36] AvianFlu: so spanish, italian, french, romanian are the big ones
[19:36] eddyb: (like Romanian is big or anything :P)
[19:37] eddyb: the gypsies are officially called (singular: rrom, plural: rromi)
[19:37] AvianFlu: that's what it is, then - it sounds similar but is unrelated to the romanian language as I'm aware
[19:37] eddyb: I want to hear some real Romanian on the show... that would be nice
[19:37] eddyb: AvianFlu: yes it isn't
[19:37] AvianFlu: it sounds kind of like spanish, but strange, to me
[19:38] eddyb: it's a long-term derivative of some Indian base
[19:38] r04r has joined the channel
[19:38] eddyb: gypsies are descendants of indians, after all
[19:38] eddyb: (I hope I didn't get that wrong)
[19:40] jesster7 has joined the channel
[19:40] mikeric has joined the channel
[19:40] kevwil has joined the channel
[19:41] jesster7 has left the channel
[19:41] mmalecki_ has joined the channel
[19:41] mikeric has joined the channel
[19:42] eldios has joined the channel
[19:43] coreb has joined the channel
[19:43] bosphorus has joined the channel
[19:43] r04r has joined the channel
[19:43] pig has joined the channel
[19:44] dscape has joined the channel
[19:44] dnyy has joined the channel
[19:44] joshsmith: aggghhh HEROKUUUU!
[19:45] garrensmith has joined the channel
[19:45] PhilK has joined the channel
[19:45] churp has joined the channel
[19:45] thax has joined the channel
[19:46] tlynn has joined the channel
[19:47] gut4 has joined the channel
[19:47] _eddyb_ has joined the channel
[19:47] _eddyb_ has joined the channel
[19:48] r04r has joined the channel
[19:48] pig has joined the channel
[19:50] dgathright has joined the channel
[19:51] tkaemming has joined the channel
[19:51] mmalecki has joined the channel
[19:51] niftylettuce has joined the channel
[19:52] churp has joined the channel
[19:53] whoops has joined the channel
[19:54] jyp has joined the channel
[19:54] r04r has joined the channel
[19:54] strmpnk has joined the channel
[19:55] CIA-109: libuv: 03Ben Noordhuis 07v0.6 * re5a50c4 10/ (config-unix.mk uv.gyp): 
[19:55] CIA-109: libuv: build: don't build with __DARWIN_64_BIT_INO_T=1
[19:55] CIA-109: libuv: Said define does more harm than good across OS X releases. - http://git.io/5Jjxyw
[19:55] pizthewiz has joined the channel
[19:56] idefine has joined the channel
[19:57] mjr_ has joined the channel
[19:57] _eddyb_ has joined the channel
[19:59] willwhite has joined the channel
[19:59] b_i_d has joined the channel
[20:00] reid has joined the channel
[20:00] r04r has joined the channel
[20:00] JasonJS: What tools to people use for profiling their node code?
[20:01] jesster7 has joined the channel
[20:01] te-brian has joined the channel
[20:01] SteveDekorte has joined the channel
[20:01] jesster7 has left the channel
[20:02] fairwinds has joined the channel
[20:03] diogogmt has joined the channel
[20:03] zeade has joined the channel
[20:03] mjr_: JasonJS: you can either use the V8 profiler, by starting your program with --prof, then processing the resulting v8.log file, or your system's profiler, like oprofile on linux or Instruments.app on OSX.
[20:03] CIA-109: node: 03Ben Noordhuis 07v0.6 * rd5feb1c 10/ wscript : 
[20:03] CIA-109: node: Revert "build: compile with -D__DARWIN_64_BIT_INO_T on OS X"
[20:03] CIA-109: node: This reverts commit f004d5aeac0a91a1731575d3ac9a80d710a1f48a.
[20:03] CIA-109: node: __DARWIN_64_BIT_INO_T is a no-op in most cases and might be actively harmful in
[20:03] CIA-109: node: some others. - http://git.io/eDKFBA
[20:04] strmpnk has joined the channel
[20:05] r04r has joined the channel
[20:05] strmpnk has joined the channel
[20:06] fbartho has joined the channel
[20:06] paulwe has joined the channel
[20:06] CIA-109: libuv: 03Ben Noordhuis 07v0.6 * rec37d05 10/ (config-unix.mk uv.gyp): 
[20:06] CIA-109: libuv: Revert "build: compile with -D__DARWIN_64_BIT_INO_T on OS X"
[20:06] CIA-109: libuv: This reverts commit 01fbe7bf37909736b4ba99d30c34378f561d6761.
[20:06] CIA-109: libuv: __DARWIN_64_BIT_INO_T is a no-op in most cases and might be actively harmful in
[20:06] CIA-109: libuv: some others. - http://git.io/E5cR1w
[20:06] jj0hns0n_ has joined the channel
[20:08] dshaw_: einaros++
[20:08] v8bot_:  dshaw_ has given a beer to einaros. einaros now has 1 beers.
[20:08] catb0t: einaros now has 1 beer
[20:09] saikat has joined the channel
[20:09] r04r has joined the channel
[20:10] lorfds has joined the channel
[20:10] insin has joined the channel
[20:11] neilk_ has joined the channel
[20:11] EvRide has joined the channel
[20:11] booyaa: hola!
[20:12] martin_sunset has joined the channel
[20:13] jbpros has joined the channel
[20:14] jbrokc_ has joined the channel
[20:14] CIA-109: node: 03isaacs 07v0.6 * r6176461 10/ (253 files in 19 dirs): 
[20:14] CIA-109: node: npm 1.1.0-alpha-5
[20:14] CIA-109: node: Fix #2186
[20:14] CIA-109: node: First part of #2207 - http://git.io/hEnLEA
[20:14] CIA-109: node: 03isaacs 07v0.6 * rd5f4011 10/ tools/msvs/msi/npmrc : Re #2207 Add default npmrc for MSI install - http://git.io/tMAwJw
[20:14] CIA-109: node: 03Igor Zinkovsky 07v0.6 * r3e7f4b0 10/ (tools/msvs/msi/product.wxs tools/msvs/npm/npmrc): npm msi changes - http://git.io/5LeGKA
[20:14] r04r has joined the channel
[20:14] r04r has joined the channel
[20:19] sridatta has joined the channel
[20:20] r04r has joined the channel
[20:20] ryan_stevens has left the channel
[20:21] stagas has joined the channel
[20:22] pizthewiz has joined the channel
[20:22] augustl: looking for a util to parse Accept HTTP headers. http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
[20:24] jbrokc_ has joined the channel
[20:24] CIA-109: node: 03isaacs 07v0.6 * r0f6d3e2 10/ tools/msvs/msi/npmrc : Remove duplicate npmrc file - http://git.io/TNpbxw
[20:24] jesster7 has joined the channel
[20:25] jesster7 has left the channel
[20:25] r04r has joined the channel
[20:25] isaacs: augustl: i don't know of one
[20:25] isaacs: augustl: if you end up writing a complete one, please do publish to npm
[20:26] isaacs: with good searchable keywords :)
[20:26] rm99_ has joined the channel
[20:27] rm99_: Anybody with experience using node.js looking for part time work to join a team? Msg me
[20:28] augustl: isaacs: haha, will do
[20:28] lzskiss has joined the channel
[20:28] augustl: (if I do)
[20:30] r04r has joined the channel
[20:30] stride: isaacs: haha @ opera :)
[20:30] CIA-109: libuv: 03Igor Zinkovsky 07v0.6 * rdceb3e6 10/ (6 files in 5 dirs): uv_cwd + uv_chdir - http://git.io/v32hDw
[20:30] diogogmt has joined the channel
[20:31] herbySk has joined the channel
[20:32] TheFuzzball has joined the channel
[20:32] mraleph has joined the channel
[20:33] _th_n has joined the channel
[20:33] bnoordhuis: mraleph: behold
[20:33] bnoordhuis: .. eval('{x:42, y:1337}')
[20:33] catb0t: Exception: SyntaxError: Unexpected token :
[20:33] bnoordhuis: .. eval('{x:42}') // this works
[20:33] catb0t: 42
[20:34] bnoordhuis: there is probably a perfectly reasonable explanation for this...
[20:34] jbrokc_ has joined the channel
[20:35] r04r has joined the channel
[20:35] bnoordhuis: i suspect it's interpreting it as one or more statements, not as an object declaration
[20:35] wavded has joined the channel
[20:36] SteveDekorte has joined the channel
[20:36] mmalecki_ has joined the channel
[20:37] base698 has joined the channel
[20:37] localhost has joined the channel
[20:37] rwasielewski has joined the channel
[20:38] mmalecki has joined the channel
[20:38] TheJH: bnoordhuis, put parens around {}
[20:39] bnoordhuis: .. eval('({x:42, y:1337})')
[20:39] catb0t: { x: 42, y: 1337 }
[20:39] TheJH: .. eval('a:1')
[20:39] catb0t: 1
[20:39] bnoordhuis: right, so the parser thought it was a label
[20:39] TheJH: bnoordhuis, here, {} is a block and 'a:' is a label
[20:39] r04r has joined the channel
[20:40] TheJH: bnoordhuis, yes, I think so
[20:40] bnoordhuis: exactly - perfectly reasonable if somewhat surprising
[20:40] TheJH: mmmhm... wondering...
[20:41] TheJH: .. print(1);{{{{{print(2)}}}}}print(3)
[20:41] catb0t: 1; 2; 3
[20:41] TheJH: bnoordhuis, ^ :D
[20:41] mmalecki: why would that be weird?
[20:41] socketio\test\57 has joined the channel
[20:41] TheJH: mmalecki, I somehow find blocks being statements funny
[20:41] tilgovi has joined the channel
[20:42] Yank has joined the channel
[20:42] mmalecki: yeah, I never understood why would people use them
[20:42] TheJH: mmalecki, ?
[20:43] indutny: mmalecki: heya! have you seen deadbolt?
[20:43] mmalecki: indutny: sure I did
[20:43] TheJH: btw, I also like the seq syntax, allows for elegant and wtf'y code: if(condition) a(), b(); c()
[20:43] mmalecki: indutny: haven't had a reason to test it out yet tho
[20:43] TheJH: indutny, the zombie library?
[20:43] mmalecki: indutny: but it looks awesome :)
[20:43] indutny: TheJH: zombie?
[20:43] indutny: mmalecki: thanks :)
[20:43] mmalecki: TheJH: no
[20:43] TheJH: indutny, came to life, and then somehow came to life again? :P
[20:44] indutny: TheJH: ah :)
[20:44] TheJH: indutny, your announcement on the ML...
[20:44] r04r has joined the channel
[20:44] indutny: TheJH: ah, yeah :)
[20:44] TheJH: "almost new" :)
[20:45] mmalecki: XD
[20:45] mmalecki: indutny: why are you asking?
[20:45] simenbrekken has joined the channel
[20:45] mmalecki: TheJH: (by 'no' I meant: this isn't wtfy at all, really)
[20:46] mmalecki: that's a popular thing in few languages
[20:46] TheJH: mmalecki, well, the first time you see it, it is :D
[20:46] chrisvwebdev has joined the channel
[20:46] mmalecki: indutny: why are you asking?
[20:46] indutny: mmalecki: because I'm not sure if that module's purpose is clear from project's readme
[20:46] mmalecki: indutny: making auto-releasing locks is the purpose
[20:47] mmalecki: let me lookup the readme
[20:47] maletor has joined the channel
[20:47] markwubben has joined the channel
[20:47] indutny: mmalecki: thanks
[20:47] mmalecki: indutny: (btw, name is fucking awesome)
[20:47] faysal has joined the channel
[20:47] indutny: mmalecki: heh, AvianFlu++
[20:47] indutny: AvianFlu++
[20:47] v8bot_:  indutny has given a beer to AvianFlu. AvianFlu now has 2 beers.
[20:48] rm99_: Anybody with experience using node.js looking for part time work to join a team? Msg me
[20:48] lz2: anyone still use switch statements here
[20:48] augustl: lz2: yep
[20:48] brianc: lz2: yea
[20:48] mmalecki: haha
[20:48] AvianFlu: lz2: yeah
[20:48] mmalecki: indutny: Deadbolt#lock(...);
[20:48] mmalecki: ?
[20:49] lz2: good, I am not that old
[20:49] r04r has joined the channel
[20:49] stagas: .. eval('a:{a:1}')
[20:49] catb0t: Exception: SyntaxError: Label 'a' has already been declared
[20:49] mmalecki: indutny: yeah, readme seems clear
[20:49] stagas: .. eval('a:{b:1}')
[20:49] catb0t: 1
[20:49] TheJH: lz2, I use switch, and I'm 16 :P
[20:49] indutny: mmalecki: Deadbolt.prototype.lock
[20:49] indutny: mmalecki: thanks
[20:49] lz2: TheJH, wise for your years
[20:50] mmalecki: oh, catb0t has a global state
[20:50] catb0t: global install location is you, local installs don't even know how to build native module on Windows with node state
[20:50] TheJH: mmalecki, no
[20:50] mmalecki: .. while(1);
[20:50] catb0t: Timeout Error
[20:50] indutny: lz2: be careful with switches
[20:50] TheJH: mmalecki, a per-channel one
[20:50] TheJH: mmalecki, and yes, you just cleared it
[20:50] augustl: lz2 http://pastie.org/2951490 BOOOM
[20:50] indutny: lz2: they will cause function deoptimization in v8 < 3.7.x
[20:50] boltR has joined the channel
[20:51] indutny: mmalecki: TheJH: upboat please : http://news.ycombinator.com/item?id=3300955
[20:51] lz2: indutny, osnap
[20:51] lz2: qugustl, :)
[20:51] lz2: *augustl
[20:51] brianc: indutny: no comprendo 'function deoptimization'
[20:51] b_i_d: lz2: I recently came upon a certain problem and after some tinkering around with different callback structures I suddenly remembered that switch exists. Does that count? ;)
[20:52] mmalecki: indutny: sock puppet reporting in for upvotes
[20:52] lz2 has joined the channel
[20:52] indutny: brianc: switches with non-number cases won't be optimized with crankshaft
[20:52] brianc: indutny: bummer
[20:52] indutny: mmalecki: :)
[20:52] augustl: yay I has number cases
[20:52] augustl: enum style baby
[20:52] indutny: you can use string cases with v8 v3.7.x
[20:52] lz: b_i_d that's usually how/why switch is used C:
[20:52] mmalecki: joshthecoder: you mindfucked me with this tweet a bit XD
[20:53] bnoordhuis: indutny is telling you that because he wrote the patch :)
[20:53] b_i_d: lol. May be...
[20:53] mmalecki: indutny++
[20:53] v8bot_:  mmalecki has given a beer to indutny. indutny now has 1 beers.
[20:53] catb0t: indutny now has 1 beer
[20:53] indutny: bnoordhuis: just want people to be aware of that feature
[20:53] indutny: :)
[20:53] r04r has joined the channel
[20:53] r04r has joined the channel
[20:54] lz: indutny, that's good because I hate readability anyways
[20:54] indutny: bnoordhuis: because I missed some performance points in one app I wrote
[20:54] lz: ints all the way baby
[20:54] kiilo has joined the channel
[20:54] indutny: bnoordhuis: actually, a lib : http://github.com/veged/xjst
[20:54] augustl: protip: use ints and assign to variables
[20:54] indutny: bnoordhuis: it was generating tree of nested switches and it was reaaaaly sloow
[20:54] b_i_d: If we wrote readable code, we couldn't feel 1337 anymore... :D
[20:55] brianc: indutny: so how to make a string based switch statement faster?
[20:55] indutny: brianc: wait for node 0.8.0 :)
[20:55] indutny: hehe
[20:55] brianc: indutny: roger wilco
[20:55] dilvie has joined the channel
[20:55] mmalecki: it was hard to write, it should be hard to understand!
[20:55] joshthecoder: mmalecki: don't take my tweets seriously ;)
[20:55] indutny: I think joyent probably will update v8
[20:55] joshthecoder: my stream is must one big joke
[20:55] mmalecki: joshthecoder: haha, I know, I work part-time myself :)
[20:55] lz: augustl, you do that too?
[20:56] davidbanham has joined the channel
[20:56] lz: sometimes fruits are good for variables too
[20:56] b_i_d: Also: If bug-hunting is your job, having others understand your code is a bad thing. ;)
[20:56] brianc: indutny: https://github.com/brianc/node-postgres/blob/master/lib/connection.js#L257 looks like I might be in the clear
[20:56] augustl: lz: yep, no idea what fruit has to do with variables though
[20:57] indutny: brianc: yeah, looks good
[20:57] lz: the best obfuscation is fruit obfuscation
[20:57] chapel: you could just make an object with the keys being the 'cases'
[20:57] noazark has joined the channel
[20:58] GrizzLyCRO1 has joined the channel
[20:58] indutny: chapel: this will be slower
[20:58] indutny: chapel: for small amounts of keys
[20:58] eignerchris has joined the channel
[20:58] chapel: what will?
[20:58] indutny: chapel: or if speaking of smi (small integers), probably it'll be slower on any amount of cases
[20:58] r04r has joined the channel
[20:58] wavded has left the channel
[20:59] indutny: chapel: object with keys vs switch
[20:59] chapel: that switch will be slower, or vice?
[20:59] indutny: chapel: vice versa
[21:00] __t has joined the channel
[21:01] chapel: yeah http://jsperf.com/object-vs-regular-switch
[21:02] rm99__ has joined the channel
[21:02] level09 has joined the channel
[21:02] duffman has joined the channel
[21:03] JJMalina has joined the channel
[21:03] brianc: method on object 88% slower
[21:03] duffman: what's the catch?
[21:03] duffman: this looks way to easy, even to a non developer.
[21:03] r04r has joined the channel
[21:03] r04r has joined the channel
[21:03] duffman: Not fully grasping all of it, but it seems very easy to use.
[21:04] saesh has joined the channel
[21:04] chapel: catch for what?
[21:05] GrizzLyCRO1: anyway, what is use case for that?
[21:05] indutny: duffman: I think if you call methods directly it will be at almost same speed
[21:05] alexa has joined the channel
[21:05] GrizzLyCRO1: some VERY basic url resolving?
[21:05] chapel: http://jsperf.com/if-else-vs-arrays-vs-switch-vs-ternary/6 << though that (for chrome) shows objects faster
[21:05] saikat has joined the channel
[21:06] chapel: could it be obj[x] || obj._default causing the slow down?
[21:06] duffman: i wasn't reffering to cache, rather "what's the catch" as in "is it a trick, or too good to be true". Sorry for the confusion.
[21:07] indutny: chapel: wow, that's odd
[21:08] r04r has joined the channel
[21:08] mikeal has joined the channel
[21:08] lukstr: Since this channel is the closest thing I have to a #siliconvalley currently open,
[21:09] lukstr: Where in the hell does one find cheap hdmi cables in south bay area
[21:09] matjas: chapel, duffman, indutny: see https://github.com/rwldrn/idiomatic.js/issues and please chime in
[21:09] matjas: sorry i mean https://github.com/rwldrn/idiomatic.js/issues/13
[21:09] hackband has joined the channel
[21:09] GrizzLyCRO1: lukstr: usually big all around megastores
[21:09] duffman: Eventho, while we're on this subject: have any of you successfully deployed: https://github.com/atmos/camo ? 
[21:10] GrizzLyCRO1: they should have electronics area, and you might get lucky there
[21:10] GrizzLyCRO1: at least its like that in croatia :)
[21:10] chrisvwebdev has joined the channel
[21:10] lukstr: GrizzLyCRO1: _cheap_? target sells a 3' for $15 which is absurd.
[21:10] stonebranch has joined the channel
[21:11] GrizzLyCRO1: cheaper
[21:11] GrizzLyCRO1: much
[21:11] GrizzLyCRO1: here, i can get 2m cable for $8
[21:11] GrizzLyCRO1: and that means in US it should be half that price
[21:12] duffman: lukstr, to be honest purified silver plated monstercable is well worth the money. don't got for the cheap non insulated chinese knock off and get the ones with quadruple coating. 
[21:12] duffman: ^ this was a joke
[21:12] ShinyDarkness_ has joined the channel
[21:12] lukstr: duffman: I would hope there isn't anyone who would fall for it :P
[21:12] r04r has joined the channel
[21:12] r04r has joined the channel
[21:13] lukstr: GrizzLyCRO1: yes I bought a 6m cable for less than $15 CAD a few months ago
[21:13] truedat101 has joined the channel
[21:13] level09_ has joined the channel
[21:13] jhurliman has joined the channel
[21:14] Kevinstubbs has joined the channel
[21:14] dgathright has joined the channel
[21:15] mandric has joined the channel
[21:16] jacobrask: If I require a file inside a function, will it only be required when that function is called (and thus cause a sync delay)?
[21:16] Kevinstubbs: Hey I've tried installing Node.js on Windows and I can't figure out how to get node-waf to work... Any ideas?
[21:16] indutny: jacobrask: yes
[21:16] jacobrask: ok
[21:16] indutny: Kevinstubbs: what are you doing?
[21:16] indutny: jacobrask: but it'll be called only first time
[21:16] brianc: jacobrask: yes it will only be required when the function is called (when the require statement executes); however, required modules are cached so the delay will only be felt the first time require('..') is executed
[21:16] indutny: jacobrask: s/called/loaded
[21:16] Kevinstubbs: Trying to create a C++ addon that I can run
[21:17] brianc: Kevinstubbs: node-waf no work on windows
[21:17] brianc: Kevinstubbs: I don't think there's yet a solution for C/C++ modules on windows
[21:18] Kevinstubbs: =/ do you know when it might be available?
[21:18] r04r has joined the channel
[21:18] chapel: indutny: I think I know why its faster in the latter test I linked, its because there aren't any misses
[21:19] brianc: Kevinstubbs: I don't know a time frame and I don't count as an official answer but it has been said it's "being worked on"
[21:20] Kevinstubbs: Hm ok thanks
[21:20] chrisvwebdev has left the channel
[21:22] jarek has joined the channel
[21:22] r04r has joined the channel
[21:23] indutny: chapel: that shouldn't be the case
[21:23] zemanel has joined the channel
[21:23] indutny: chapel: while that matters, of course
[21:24] chapel: well Im just guessing that because they were only testing known methods, it had no performance hit, where as with a miss it was slower (which is backed up by all the different tests)
[21:24] insin: hooray, npm alpha 5: now with man edition
[21:24] rwasielewski has joined the channel
[21:24] jesster7 has joined the channel
[21:25] jesster7 has left the channel
[21:25] indutny: chapel: probably because number hashmap is faster
[21:25] indutny: sorry, gtg
[21:25] chapel: np
[21:25] chapel: :)
[21:27] r04r has joined the channel
[21:27] doki_pen: what's the best way to get the package.json version from a lib file?
[21:27] liar has joined the channel
[21:27] springmeyer: does anyone know if it is possible to force/tell npm to continue installing a package even if it encounters an error?
[21:28] springmeyer: like you can do with make
[21:28] springmeyer: make -i -k
[21:28] springmeyer: (keep going)
[21:28] springmeyer: the goal I have is to be able to download a package into node_modules and have npm avoid removing it when a few c++ addon files fail to compile
[21:29] brianc: springmeyer: I have run into that same issue. would you lemme know if you find out a solution? 
[21:29] springmeyer: brianc: hey, okay
[21:30] neilk_ has joined the channel
[21:30] CIA-109: node: 03Ben Noordhuis 07v0.6 * r9b4e8e0 10/ src/node_file.cc : 
[21:30] CIA-109: node: fs: fix typo in function names
[21:30] CIA-109: node: The build was not affected: the typos were in macros that only come into effect
[21:30] CIA-109: node: when _LARGEFILE_SOURCE is not defined - which is never. - http://git.io/lAmYYg
[21:31] r04r has joined the channel
[21:31] r04r has joined the channel
[21:32] scottschecter has joined the channel
[21:33] trco has joined the channel
[21:33] lz: hm is there an easy way to merge objects in node
[21:33] lz: like jquery's extend
[21:33] bnoordhuis: lz: bash them together repeatedly
[21:33] GrizzLyCRO1: lz iterate trough properties of both
[21:33] bnoordhuis: or use something like underscore
[21:33] GrizzLyCRO1: and add each property to third one
[21:34] lz: bnoordhuis, tried that already
[21:34] lz: there was blood everywhere
[21:34] jesster7 has joined the channel
[21:34] bnoordhuis: haha
[21:34] GrizzLyCRO1: lol
[21:34] lz: hmm
[21:35] isaacs: springmeyer: --force
[21:35] isaacs: brianc: ^
[21:35] springmeyer: isaacs: oh? sweet!
[21:35] AvianFlu: you'll do better with --gangsta
[21:35] isaacs: or that
[21:36] isaacs: i mean, if you're a gangsta
[21:36] AvianFlu: truth
[21:36] brianc: isaacs: you're a baller
[21:36] r04r has joined the channel
[21:37] lz: GrizzLyCRO1, bnoordhuis, for loop it is
[21:37] brianc: thanks
[21:37] lz: thanks for the suggestions
[21:37] springmeyer: isaacs: fantastic, worked, thank you
[21:38] springmeyer: isaacs: I'm working on getting http://mapbox.com/tilemill/ running on windows
[21:38] isaacs: sweet!
[21:38] springmeyer: all the c++ addon compiles are pretty custom at this point
[21:38] springmeyer: so --force will help build the structure
[21:38] skm has joined the channel
[21:38] isaacs: yeah, just don't think of --force as any sort of permanent solution
[21:38] springmeyer: then I'll go from there
[21:38] isaacs: but for this kind of situation, you always need an escape hatch
[21:38] springmeyer: right
[21:38] springmeyer: exactly
[21:38] petrjanda has joined the channel
[21:39] tkaemming has joined the channel
[21:39] isaacs: i think there's some kind of --no-rollback you can do, too
[21:39] isaacs: but that ends up being kind of messy
[21:39] springmeyer: okay, thanks will look into that too
[21:39] Renegade001 has joined the channel
[21:39] colinclark has joined the channel
[21:40] brianc: isaacs: works great for node-postgres. I've got a javascript only implementation and a native implementation...so if you can't compile, you can still install and use errything
[21:40] brianc: everything except the native parts, that is.
[21:40] isaacs: brianc: you can also have your make file just swallow the erro
[21:40] isaacs: *error
[21:41] isaacs: "scripts": { "install": "make foo || exit 0" }
[21:41] isaacs: that's also windows-safe
[21:41] brianc: isaacs: yeah I've got an open issue on that right now.  no one was able to find a nice way to swallow the error on both windows and unix.  hmm....i'll try that
[21:41] isaacs: "|| true" is not, though
[21:41] r04r has joined the channel
[21:41] r04r has joined the channel
[21:42] josh-k has joined the channel
[21:43] eddanger has joined the channel
[21:43] heatxsink has joined the channel
[21:43] Jay has joined the channel
[21:43] slickplaid: what's the preferred method in node for running a separate, high computation process and communication between the processes?
[21:43] Heisenmink has joined the channel
[21:44] bengrue has joined the channel
[21:44] springmeyer: brianc: what kind of progress have you made getting your addon compiled on windows?
[21:45] medice: springmeyer: dunno, but hook.io?
[21:45] mandric has joined the channel
[21:45] springmeyer: medice: did you mean slickplaid ?
[21:45] medice: yes, i did
[21:46] context: 0.6 has better inter-process messaging
[21:46] context: if you forked from the same master process
[21:46] torm3nt has joined the channel
[21:47] CIA-109: libuv: 03Yuki Okumura 07v0.6 * rf71f5a0 10/ src/win/util.c : Win: lower case tlhelp32.h to support cross compilation - http://git.io/MPONlw
[21:47] CIA-109: libuv: 03Bert Belder 07v0.6 * r2a6a4a0 10/ src/win/winapi.h : Fix MinGW and MinGW-w64 builds - http://git.io/BuIOuQ
[21:47] CIA-109: libuv: 03Bert Belder 07v0.6 * r9c064fb 10/ src/win/tty.c : Win: utf-8 decoder bug when compiling with gcc - http://git.io/wrvVkg
[21:47] waterhead has joined the channel
[21:47] wankdanker has joined the channel
[21:47] r04r has joined the channel
[21:47] r04r has joined the channel
[21:49] slickplaid: hmm..okay :) Just trying to figure out how I'm going to do the heavy lifting in this application
[21:50] brianc: springmeyer: 0 progress!
[21:50] brianc: springmeyer: it's fully functional on windows using the pure-javascript client so it's not a huge deal
[21:50] CIA-109: node: 03Bert Belder 07v0.6 * rae648a4 10/ (31 files in 5 dirs): Upgrade libuv to 9c064fb - http://git.io/l3RySg
[21:50] springmeyer: brianc: heh, okay
[21:50] AvianFlu: slickplaid, get a time machine and go to march when there will be isolate support in node :)
[21:50] springmeyer: ah, thats nice
[21:51] bosphorus has joined the channel
[21:51] brianc: springmeyer: ofcourse I would like it to work everywhere both native & javascript version, but you don't suffer for being on windows really
[21:51] slickplaid: AvianFlu: How seredipidous! That's what I'm building!
[21:51] waterhead: in socket.io, what are the performance overheads involved with sending many messages in sequence. for example, if i want to do some computation remotely on each element of an array, i may want to maximize both network and cpu by sending each element as a separate message and starting computation on each element as it comes in. but i may just want to send the whole array at once if sending a ton of messages essentially at once will cause problems with the w
[21:51] waterhead: socket
[21:52] CIA-109: libuv: 03Igor Zinkovsky 07v0.6 * r60630da 10/ (4 files in 4 dirs): windows: enable pending pipe instances knob - http://git.io/xDIdcA
[21:52] springmeyer: brianc: cool, my app depends on a c++ core rendering engine, so I'm in serious compile land atm
[21:52] brianc: springmeyer: I feel yo pain
[21:53] springmeyer: :) thx
[21:53] jesster7 has left the channel
[21:53] slickplaid: If I use a *gasp* while loop in a view, will the process hang until execution is finished? So if a user hits refresh a million times, it'll hang on each execution in sync?
[21:53] dgathright has joined the channel
[21:53] rwasielewski has joined the channel
[21:53] brianc: slickplaid: yeah, while loop is going to block the node runloop until the loop finishes
[21:53] brianc: until the *while-loop finishes
[21:54] slickplaid: Yeah.. that's what I thought.
[21:54] slickplaid: Trying to pin down this odd hang in my app
[21:54] recycle_ has joined the channel
[21:54] brianc: slickplaid: how often does it happen and is it reproducible? it could be the v8 GC pause
[21:54] brianc: slickplaid: you could use node-inspector for some better insight 
[21:55] AvianFlu: I had a great experience one time with a suspicious hang in a node app
[21:55] michaelhartau has joined the channel
[21:55] AvianFlu: a lib I was using was trying to use while(data) to get chunks of a stream
[21:55] mraleph has joined the channel
[21:55] slickplaid: brianc: Reproducible, and reliable on every full page refresh. :(
[21:55] TheJH: AvianFlu, hehe
[21:55] brianc: slickplaid: ah prolly not GC then. :) I don't think GC really pauses for very long at all anyway
[21:55] AvianFlu: really hard to track down, though
[21:55] AvianFlu: kohai would last about ten minutes, then ping timeout
[21:55] brianc: AvianFlu: what lib was that?
[21:56] zennny has joined the channel
[21:56] deedubs has joined the channel
[21:56] TheJH: AvianFlu, can't you just connect the debugger, pause execution and inspect the stack?
[21:56] skunkape has joined the channel
[21:56] slickplaid: Yeah, I have a long/heavy loop that needs to run on every page refresh to recalculate values for the display. Hence my need for separation of that from the node process and interest in while() loops in the view.
[21:57] slickplaid: Need to just strip that out and xhr/socket it for calculation
[21:57] CIA-109: node: 03Igor Zinkovsky 07v0.6 * rdd4b280 10/ (4 files in 4 dirs): upgrade libuv to 60630dab0f - http://git.io/Gi6agA
[21:57] TheJH: slickplaid, sure you can't optimize the loop?
[21:57] TheJH: slickplaid, or cache stuff or so?
[21:57] slickplaid: Oh, I'm sure it's possible. But our timeline is way too close for me to start work on that at the moment.
[21:57] joshsmith: deedubs: yo, you around?
[21:57] slickplaid: yeah, caching will be one of the things done here soon.
[21:57] deedubs: joshsmith: indeed
[21:58] joshsmith: I'm at my wit's end on this Heroku thing. if you have the number for that GM, I could really use it
[21:58] joshsmith: I've spent all day trying to figure this out
[21:58] AvianFlu: TheJH, this was months ago
[21:58] TheJH: AvianFlu, yes, I understand that, but you could have done it that way, right?
[21:58] deedubs: joshsmith: have you sent in a support ticket?
[21:58] AvianFlu: I didn't know about that stuff at the time
[21:59] TheJH: ah, ok
[21:59] AvianFlu: I just started eliminating deps
[21:59] Sorella has joined the channel
[21:59] joshsmith: deedubs: yes, one as "high" and another as "urgent"
[21:59] AvianFlu: then when I found the one that was causing it, I read through it
[21:59] AvianFlu: then, while(data), then lulz
[21:59] deedubs: yeah that was the same response I gotâ€¦ silence
[21:59] deedubs: I don't have the number unfortunately it didn't come up
[22:00] joshsmith: yeah, for someone who's paying for a service, I'm pretty pissed
[22:00] slickplaid: hm.. can't really use a async callback in a view, can you? It'll shoot the view off before the callback gets called.
[22:00] joshsmith: they say #heroku is a good support channel, and it's crickets in there, too
[22:00] someguyTHM has joined the channel
[22:01] aheckmann has joined the channel
[22:01] FireBomb has joined the channel
[22:01] slickplaid: suppose that's what dynamic helpers are for
[22:01] slickplaid: anyhoo back to wokr
[22:01] slickplaid: work*
[22:01] joshsmith: I put my phone number in my ticket saying they can call at any hour. I hope they get the message
[22:02] mmalecki: every time bnoordhuis gets +o I hear a gun click in my head
[22:02] deedubs: joshsmith: do you have anything under https://support.heroku.com/requests
[22:03] slickplaid: I'm done with heroku
[22:03] slickplaid: tired of waiting for a new 0.6.0 release
[22:04] waterhead: sorry to spam, i just want to reiterate my question from above
[22:04] waterhead: in socket.io, what are the performance overheads involved with sending many messages in sequence. for example, if i want to do some computation remotely on each element of an array, i may want to maximize both network and cpu by sending each element as a separate message and starting computation on each element as it comes in. but i may just want to send the whole array at once if sending a ton of messages essentially at once will cause problems with the w
[22:04] waterhead: socket
[22:05] joshsmith: deedubs: yes
[22:05] joshsmith: deedubs: two request, one that's being processed, and one that's awaiting assignment
[22:06] slickplaid: waterhead: It would really depend on use case. If you need the data NOW, send it individually. If not, organize and send it in a logical group of data sets.
[22:06] joshsmith: someone was assigned to my first request 6 hours ago, and nothing from them
[22:06] mmalecki: ACTION points at nodejitsu
[22:06] slickplaid: ACTION also points at nodejitsu
[22:07] joshsmith: you know, I might reconsider nodejitsu after this
[22:07] ovaillancourt has joined the channel
[22:08] maxogden: joshsmith: they are in beta
[22:08] slickplaid: okay, im drinking a beer in the office. It's friday, right?
[22:08] joshsmith: I know, I have an account
[22:08] isaacs: so... i'm considering a policy where if you have an invalid git repo in your published npm package, i email you, and then check it again a week later, and if it's still broken, unpublish it for you.
[22:08] spcshpopr8r has joined the channel
[22:08] isaacs: would that cause more harm than it prevents, you think?
[22:08] isaacs: there's a lot of people who get confused and end up posting bugs in the wrong places.
[22:08] mmalecki: isaacs++
[22:08] v8bot_:  mmalecki has given a beer to isaacs. isaacs now has 9 beers.
[22:08] maxogden: isaacs: ya do it
[22:08] mmalecki: isaacs: I hate it when I get broken github links
[22:08] slickplaid: isaacs, send it on a pink piece of paper along witha dunce cap, hand delivered by monkeys
[22:09] dilvie has joined the channel
[22:09] joshsmith: slickplaid++
[22:09] v8bot_:  joshsmith has given a beer to slickplaid. slickplaid now has 2 beers.
[22:09] catb0t: slickplaid now has 1 beer
[22:09] isaacs: i think an email warning is fine
[22:09] isaacs: then like a week to fix it
[22:09] isaacs: a *lot* of them 404
[22:09] seebees: isaacs: "unpublish is for you."  I like that
[22:09] joshgillies has joined the channel
[22:09] mmalecki: isaacs: that can be automated
[22:09] slickplaid: monkeys > automation
[22:09] davidbanham has joined the channel
[22:09] joshsmith: catb0t stole a beer!
[22:09] catb0t: stole it from ryah's slide he just pasted, but it fits with what we're talking about here
[22:09] slickplaid: just saying
[22:10] aaronmcadam has joined the channel
[22:10] mmalecki: how can one steal a beer from ryah's slide?
[22:10] quackquack has joined the channel
[22:10] braoru has joined the channel
[22:10] mmalecki: silly Markov
[22:11] lyte has joined the channel
[22:11] enmand has joined the channel
[22:11] davidbanham has joined the channel
[22:12] pyrotechnick has joined the channel
[22:12] joshsmith: why should I use nodejitsu over Heroku?
[22:12] waterhead: slickplaid: i'm implementing a crowd sourced map reduce based system, so i only *need* the end result ASAP. there are two opportunities for streaming (and thus simultaneously using as much cpu and network as possible). first, sending input data in individual kv pairs or in chunks of them out to map workers, which will process one kv pair at a time. second, emitting intermediate/final kv pairs from mappers/reducers. in each case it would be nice to transmit
[22:13] waterhead: computing if possible, but that approach would be bad if socketio doesn't like getting spammed, which it would be when computational requirements are low.
[22:13] strmpnk has joined the channel
[22:13] maxogden: joshsmith: there is a nodejitsu channel too btw
[22:13] bradleyg has joined the channel
[22:13] mmalecki: joshsmith: our irc channel. when talking about support, we're quite awesome
[22:13] mmalecki: joshsmith: in most cases, someone will get back to you immediately
[22:13] strmpnk has joined the channel
[22:13] mmalecki: joshsmith: our open source software is awesome!
[22:14] mmalecki: joshsmith: deploy is nicer than one at heroku, afaik
[22:14] slickplaid: plus they have monkeys!
[22:14] joshsmith: mmalecki: hm. how is deploy nicer?
[22:14] mmalecki: we have monkeys?
[22:15] slickplaid: joshsmith: current node version, quick support, open source, and monkeys
[22:15] mmalecki: joshsmith: `jitsu deploy` is all you need. not sure about comparison with heroku tho, that's what I've heard
[22:15] slickplaid: that's at least six reasons
[22:15] slickplaid: cause we all know monkeys come in threes
[22:15] ovaillancourt: isaacs: Is there a way to report faulty modules and stuff like that with npm right now (10 minutes late on your policy idea)
[22:15] joshsmith: mmalecki: it's just git push heroku master
[22:15] joshsmith: which I've aliased further
[22:16] jakehow has joined the channel
[22:16] lzskiss: joshsmith, jitsu more elegant and robust than heroku client
[22:16] mmalecki: joshsmith: well, I quite like the idea of git deploy, but in some cases it isn't enough
[22:16] Morkel has joined the channel
[22:16] mmalecki: I mean, there are some files I wouldn't put in source control
[22:16] lzskiss: joshsmith, i switched from heroku to nodejitsu
[22:17] lorfds has joined the channel
[22:17] mattrobenolt has left the channel
[22:17] lzskiss: joshsmith, the heroku support speed is legendary like turtle
[22:17] hydrozen has joined the channel
[22:17] slickplaid: waterhead: socket.io is good at transferring data back and forth. I don't know exactly how much data you'd be looking at but try the easiest one and see how it goes. It sounds like it'd be pretty easy to separate and change over to the other method with a little work.
[22:18] lzskiss: joshsmith, try nodejitsu this is my opinion
[22:18] vguerra has joined the channel
[22:18] slickplaid: That's about as close to a non-answer as I can give :D
[22:18] mmalecki: and websockets work at nodejitsu!
[22:18] alejandromg has joined the channel
[22:18] isaacs: ovaillancourt: well, there's the `npm bugs` command, but that depends on having a valid github link.  `npm owner ls <pkg>` will give you the package maintainer email addresses
[22:18] slickplaid: ooh shoot... when i said monkeys, i meant websockets
[22:18] isaacs: ovaillancourt: that's the most reliable
[22:18] joshsmith: mmalecki: ah, that's also a big one
[22:18] lzskiss: +2
[22:18] slickplaid: but yeah, websockets ftw
[22:19] lzskiss: im a monkey from the obsd community too:D
[22:19] mmalecki: isaacs: hey, you wanted to refactor npmjs.org, right?
[22:19] joshsmith: well, I was having issues with deploy
[22:19] joshsmith: so maybe when I get home I'll come into #nodejitsu for some help
[22:19] slickplaid: i don't know why I don't just get two beers when I start drinking. I just sat down and my beer is empty
[22:19] isaacs: i figure what i'd probably do is have some kind of counter, and every day, some automated thing could check every package, and update the counter and email the maintainer, and when it hits 10, unpublish it
[22:20] bnoordhuis: lzskiss: you're an openbsd user?
[22:20] ovaillancourt: isaacs: got you, would be nice if there were some peer-reviewing features that could allow the reporting of 404s on repos and stuff like that, which would trigger the whole verification process automatically
[22:20] isaacs: or something
[22:20] isaacs: i dunno
[22:20] joshsmith: thanks for the thoughts, guys
[22:20] isaacs: yeah
[22:20] lzskiss: bnoordhuis, yep 
[22:20] joshsmith: gotta run now
[22:20] bnoordhuis: lzskiss: cool
[22:20] bnoordhuis: lzskiss: you know, i met the other guy once
[22:20] CiRlE has joined the channel
[22:20] isaacs: we just gotta get away from the system of "user finds problem, emails isaac, he fixes it"
[22:20] isaacs: cuz that isn't scaling
[22:20] ovaillancourt: lol
[22:20] ovaillancourt: you're too limited
[22:20] mmalecki: bnoordhuis: lol
[22:20] lzskiss: bnoordhuis, but the loved monkeys not supported the Atheros5007EG wifi
[22:21] lzskiss: and this is the problem for me:)
[22:21] slickplaid: TIL I can just email isaacs and he'll fix my problems.
[22:21] mmalecki: bnoordhuis: have you met these two guys coding Delphi? they are crazy, really
[22:21] ovaillancourt: one thing I find annoying with npm is when the users fix bugs and don't update their package, we end up with relatively popular libs not being up to date
[22:21] isaacs: ovaillancourt: yeah
[22:21] ovaillancourt: but there's hardly anything to do about it 
[22:21] lzskiss: mmalecki, Delphi? fortune telling temple?:D
[22:21] isaacs: ovaillancourt: at least, when you can type `npm bugs <pkg>` you can go and post an issue bugging thm
[22:22] joemccann has joined the channel
[22:22] jarek__ has joined the channel
[22:22] ovaillancourt: yeah, thinking about packages like hashlib (not to name names...) that are "maintained" but not "updated" on npm
[22:23] jarek__ has joined the channel
[22:23] jarek has joined the channel
[22:27] sh1mmer has joined the channel
[22:29] Renegade001 has joined the channel
[22:29] tschundeee has joined the channel
[22:29] blueadept` has joined the channel
[22:31] cgfuh has joined the channel
[22:31] CiRlE has joined the channel
[22:32] boltR has joined the channel
[22:32] scottschecter has joined the channel
[22:32] EvilPacket has joined the channel
[22:35] jgornick has joined the channel
[22:36] CIA-109: node: 03Igor Zinkovsky 07v0.6 * r99c9d19 10/ (lib/net.js src/pipe_wrap.cc src/pipe_wrap.h): binding for uv_pipe_pending_instances - http://git.io/5LeQFw
[22:36] CiRlE has joined the channel
[22:38] Sorella has joined the channel
[22:38] enmand has joined the channel
[22:39] adamstantonvan has joined the channel
[22:40] brianc: we need a yelp for npm packages
[22:40] brianc: but then that's kinda what github is
[22:40] isaacs: brianc: hahaha
[22:40] isaacs: nono, github is too honest.
[22:40] isaacs: a yelp for npm packages would be like a review website, where if you give me $$, i filter out the bad reviews.
[22:40] isaacs: and call it "algorithmic"
[22:40] brianc: something where I can give a module 1 star so they'll invite me to use it again and give me a 10 dollar gift cirtificate if I up their stars to 4
[22:41] isaacs: the algorithm is, "if you give me money, i remove the bad ones"
[22:41] brianc: hahaha exactly
[22:41] brianc: then you'd be riiiiich
[22:41] diogogmt has joined the channel
[22:41] apoc: is it possible to specify a response code in express? I want to respond with a 206 Partial
[22:41] maxogden: as long as all the npm packages have github urls it only takes like 10 seconds to determine quality
[22:41] AvianFlu: maxogden, 
[22:41] AvianFlu: ++
[22:42] maxogden: AvianFlu,
[22:42] slickplaid: apoc, yes
[22:42] maxogden: thanks
[22:42] brianc: maxogden: yeah you're right
[22:42] isaacs: maxogden: unless the github urls are invald.
[22:42] teadict: we need a package to show the amount of watchers for a given npm package that is hosted on github
[22:42] isaacs: *invalid
[22:42] brianc: i check watchers, last updated, the existence of a /test folder, and a readme 
[22:42] teadict: which is the only thing one pays atenttion to
[22:42] teadict: you lie!
[22:43] brianc: haha
[22:43] BillyBreen has joined the channel
[22:43] brianc: to me /test is more important than watcher count
[22:43] samBiotic has joined the channel
[22:43] brianc: and a little travis CI badge is sweet sweet icing on the cake
[22:43] mmalecki: isaacs: this npmjs.org refactor.
[22:43] mmalecki: isaacs: can you tell me more?
[22:43] teadict: do you analize /test if the repo has 10 watches? NO YOU DO NOT
[22:43] djcoin has joined the channel
[22:44] apoc: okay found it, response.statusCode = 206; does what what i want
[22:44] davidbanham has joined the channel
[22:44] trodrigues has joined the channel
[22:44] brianc: hahaha, i do still if it's claiming the functionality I'm looking for
[22:44] stisti has joined the channel
[22:44] eeemsi: is git branch v0.6 the stable one?
[22:44] teadict: fair enough
[22:45] brianc: otherwise sometimes watch count is too much a popularity contest. who's coolest doesn't always mean who's module is best
[22:45] teadict: helps though
[22:45] brianc: it does
[22:45] brianc: and the more eyes on something arguably it's more stable
[22:45] teadict: since it's the open source ideology kicking in
[22:45] teadict: kinda
[22:47] brianc: yar
[22:47] diminoten: okay anyone here use express?
[22:47] jerrysv: diminoten: i use bricks :)
[22:47] lazyshot has joined the channel
[22:48] diminoten: I dunno what that is :(
[22:48] diminoten: unless you mean the clay object
[22:48] jerrysv: diminoten: http://bricksjs.com/
[22:48] diminoten: in which case I'm all over that
[22:48] diminoten: oh
[22:48] fly-away has joined the channel
[22:49] brianc: diminoten: plenty of us use express...there's also a #express room 
[22:49] diminoten: oh cool
[22:49] elijahwright has joined the channel
[22:50] tvw has joined the channel
[22:50] teadict: how is bricks preferable to express or others?
[22:51] jerrysv: teadict: different approach - apache hook style routing, events
[22:51] teadict: okey.. another question
[22:51] teadict: in which cases is bricks peferrable?
[22:51] teadict: that r moved
[22:52] diminoten: go answer my question brianc :-P
[22:52] diminoten: haha that's fairly bossy of me, sorry
[22:52] jerrysv: teadict: when you need to operate several operations on a single route -- let's say /admin requires sessions, but nothing else does, or modifications to specific content, or adding a transparent caching layer
[22:53] teadict: ic...
[22:53] devongovett has joined the channel
[22:53] jerrysv: teadict: so set up a route for sessions for /admin/.+ and an acl layer on /admin/.+
[22:53] jerrysv: teadict: and make sure that css or js get cached until a timeout or some other external event happens
[22:53] jerrysv: clean up headers after render, etc
[22:54] jerrysv: teadict: and no connect
[22:54] mehtryx has joined the channel
[22:54] diminoten: since this channel is way more active than #express, I'll ask here too
[22:54] diminoten: nevermind
[22:55] teadict: jerrysv: too complex for my project, I'll stick to express I think
[22:55] jerrysv: teadict: obviously not for everyone :)
[22:56] ohtogo has joined the channel
[22:57] bogomips has joined the channel
[22:57] grampajoe has joined the channel
[22:58] storrgie has joined the channel
[22:58] DamonOehlman has joined the channel
[23:00] joshsmith has joined the channel
[23:00] aioue has left the channel
[23:01] mehtryx has left the channel
[23:02] jgornick has joined the channel
[23:02] trodrigues has joined the channel
[23:02] koo3 has joined the channel
[23:04] phiggins has joined the channel
[23:04] bnoordhuis: konobi: you're in vancouver right?
[23:05] CIA-109: node: 03Bert Belder 07reviewme * r2876ef3 10/ (src/node.cc src/node.h src/node_file.cc): Rename FSError to UVException and move to node.cc - http://git.io/e9ymdg
[23:05] CIA-109: node: 03Bert Belder 07reviewme * rb0eb54f 10/ (src/node.cc test/simple/test-chdir.js): 
[23:05] CIA-109: node: Win: make process.cwd and chdir support non-ansi characters
[23:05] CIA-109: node: Closes GH-2215 - http://git.io/4KfpFQ
[23:06] springmeyer: isaacs: could http://f.cl.ly/items/2Z3u150i3m1h2I3h1j0t/Screen%20Shot%202011-12-01%20at%203.03.47%20PM.png
[23:06] springmeyer: perhaps be fixed by https://github.com/isaacs/npm/commit/7582751f2513100f7a7b41bea67ac14761745de9 ?
[23:06] isaacs: springmeyer: no.
[23:06] springmeyer: I'm running npm 1.1.0-alpha-2
[23:06] isaacs: springmeyer: it's fixed by a different thing :)
[23:06] springmeyer: ah, cool
[23:06] isaacs: springmeyer: get a newer alpha from http://npmjs.org/dist/
[23:06] isaacs: springmeyer: 5 should not have that bug.
[23:07] isaacs: -6 will be with node 0.6.4 today, most likely
[23:07] mmalecki: springmeyer: lol, what terminal app is that?
[23:07] devongovett has joined the channel
[23:07] isaacs: mmalecki: you're so cute.
[23:07] springmeyer: k, great. I installed npm originally via the windows node installer
[23:07] mmalecki: isaacs: any estimate on that? not sure if should I go to sleep
[23:07] Leemp has joined the channel
[23:07] isaacs: mmalecki: /join #libuv
[23:08] cjm has joined the channel
[23:10] jesster7 has joined the channel
[23:10] mandric has joined the channel
[23:11] mmalecki: isaacs: there I go. I don't feel enlightened ;) 
[23:13] slajax has joined the channel
[23:18] jarek__ has joined the channel
[23:18] jesster7 has left the channel
[23:18] jacobolus has joined the channel
[23:18] mandric has joined the channel
[23:19] hellp has joined the channel
[23:19] spcshpopr8r has left the channel
[23:23] devongovett has joined the channel
[23:23] luxigo has joined the channel
[23:23] davidasc_ has joined the channel
[23:25] hij1nx has joined the channel
[23:25] davidasc_ has joined the channel
[23:26] CIA-109: node: 03Bert Belder 07reviewme * rcf6cd5e 10/ (src/node.cc src/node.h src/node_file.cc): Rename FSError to UVException and move to node.cc - http://git.io/rO_FgQ
[23:26] CIA-109: node: 03Bert Belder 07reviewme * r7a9b4c9 10/ (src/node.cc test/simple/test-chdir.js): 
[23:26] CIA-109: node: Win: make process.cwd and chdir support non-ansi characters
[23:26] CIA-109: node: Closes GH-2215 - http://git.io/PJAUhg
[23:26] CIA-109: node: 03Bert Belder 07reviewme * r21ba485 10/ src/node.cc : 
[23:26] CIA-109: node: Exclude getbuf from the windows build
[23:26] CIA-109: node: It's not used. - http://git.io/ywqSFQ
[23:27] mikeal has joined the channel
[23:27] dude has joined the channel
[23:28] matejv has joined the channel
[23:28] TooTallNate has joined the channel
[23:29] mike5w3c_ has joined the channel
[23:29] CiRlE has joined the channel
[23:29] obensource has joined the channel
[23:30] subbyyy has joined the channel
[23:30] sdwrage has joined the channel
[23:31] arturadib has joined the channel
[23:32] ambroff has joined the channel
[23:34] bengrue has joined the channel
[23:34] polyrhythmic has joined the channel
[23:34] nrdb: can anyone tell me why when I compile with these commands http://paste.debian.net/147760/ ... everything compiles OK ... but when I run node (without installing, as a test) ... "node-v0.6.3# ./node" I get an "Illegal instruction" ?
[23:35] adamstantonvan has joined the channel
[23:38] CiRlE has joined the channel
[23:41] TheFuzzball has joined the channel
[23:41] ceej has joined the channel
[23:43] subbyyy has joined the channel
[23:46] Industrial: bnoordhuis: `make install` is not implemented yet. Bug bnoordhuis about it in #node.js
[23:46] makeInstallBot: Industrial: `make install` is not supported on current node.js `master` due to build system refactor. Please use latest stable tag (v0.6.x).
[23:46] stonebranch has joined the channel
[23:47] Industrial: yessar
[23:49] mandric has joined the channel
[23:49] CiRlE has joined the channel
[23:52] koo3 has joined the channel
[23:54] ecto has left the channel
[23:58] MatthewS has joined the channel
