[00:00] thetony: if you copy and change the setInterval to setInterval("foo()"... then it will actually change to bye cruel world etc
[00:00] vpamulap has joined the channel
[00:00] jesusabdullah: yessch
[00:00] thetony: rlidwka: does node not?
[00:00] cipher__: that last line was meant to be; }).Print();
[00:00] vpamulap: I want to replace the jsdom installed on my system via npm with a patched version on github, is there a good guide on how to do this?
[00:01] SubStack: vpamulap: just put the github url in your package.json
[00:01] crutex has joined the channel
[00:01] crutex has joined the channel
[00:01] SubStack: instead of the version in the dependencies field put the url
[00:01] rlidwka: seems like node does not :)   there are no reason to support it because there are no 10-year-old-code for node.js
[00:01] SubStack: "jsdom" : "http://github.com/..."
[00:01] srk9 has joined the channel
[00:01] RobWC has joined the channel
[00:02] RobWC has left the channel
[00:02] arduix has joined the channel
[00:04] zackattack has joined the channel
[00:04] cyphase has joined the channel
[00:05] vpamulap: SubStack: thanks, so if i replace the jsdom dependecy in the zombie.js package.json, what command do I need to run to update it?
[00:05] joshsmith has joined the channel
[00:08] cjm has joined the channel
[00:09] warz: substack, i remember you saying something about how you disliked the javascript amd loader stuff, like requirejs, for browser-side require, and that browserify is better? did i understand that correctly, in that i can use browserify as a replacement for requirejs?
[00:09] seanstickle has joined the channel
[00:09] EyePulp has joined the channel
[00:10] xtianw has joined the channel
[00:10] argami has joined the channel
[00:10] mattgifford has joined the channel
[00:10] lohkey has joined the channel
[00:11] argami has joined the channel
[00:11] qbert_: cipher__, see my IM
[00:11] mattgifford has joined the channel
[00:11] SubStack: warz: well I wrote browserify
[00:11] SubStack: vpamulap: just do `npm install` and it'll fetch the latest things from your package.json
[00:11] SubStack: or perhaps `npm install .`
[00:11] vpamulap: so inside the zombie folder?
[00:11] SubStack: warz: browserify lets you do require()s the node.js way in the browser
[00:12] Aria has joined the channel
[00:12] SubStack: requirejs is some other strange thing that makes you write require()s in a strange way
[00:13] warz: yea, thats why im looking at alternatives. ive used requirejs before and id like to avoid it this time around, if possible
[00:13] SubStack: warz: plus browserify shims out things like the path, url, vm, stream, and buffer modules so that you can take code written for node and actually run it browser-side
[00:13] SubStack: I use some npm modules in my browser code
[00:13] cburyta has joined the channel
[00:14] vpamulap: SubStack: looks like it worked! thanks for your help
[00:14] baudehlo has joined the channel
[00:15] SubStack: warz: lately even the request module works browser-side without modification https://github.com/substack/request-browserify-example/blob/master/entry.js
[00:16] Joeysomo has joined the channel
[00:16] joshthecoder has joined the channel
[00:17] Authoritarianism has joined the channel
[00:17] warz: very cool
[00:17] Authoritarianism has joined the channel
[00:17] tilgovi has joined the channel
[00:19] zivester has joined the channel
[00:22] devongovett has joined the channel
[00:22] MT has joined the channel
[00:23] warz: do you know why people have created what look like shims for backbone and jquery, with browserify?
[00:23] warz: i guess i can find out pretty easily if they're needed, myself. heh
[00:24] SubStack: warz: because backbone and jquery attach themselves to the window object or use globals to export their functionality by default
[00:24] SubStack: they aren't written to use module.exports
[00:24] warz: ah
[00:26] CloudGroup has joined the channel
[00:27] JSONB has joined the channel
[00:27] rdegges has joined the channel
[00:27] Beticious has joined the channel
[00:28] rdegges: Yo all! I've got a (hopefully) quick question. I'm extremely new to node, but I'm trying to publish a library on npm (code is here: https://github.com/telephonyresearch/node-opencnam).
[00:28] rlidwka: requirejs is basically just async require... it doesn't needed on server but in the browser it's the only good way to use modules
[00:28] timoxley: rlidwka "the only good way"?
[00:28] maxogden: lolz
[00:28] SubStack: rlidwka: I disagree.
[00:29] rdegges: I made a package.json, ripping off most of the content from other node packages, I also did a ``node publish``. However, when I attempt to install my package (eg: ``npm install opencam``), I get this error: http://pastie.org/private/ssvbm8s1wwvhafxo5euyg
[00:29] rdegges: I was wondering if any of you could tell me what I've done wrong? ^^
[00:30] Beticious: Play the free game of sports bet, you can win a PS3 or 50$ paypal tickets for free http://www.beticious.com/es/register?ref=Trece30
[00:30] Clordio has joined the channel
[00:30] Clordio: Nodester is down :(
[00:30] polardude has joined the channel
[00:30] qbert_: rdegges, ENOENT is no file or directory found
[00:30] rdegges: qbert_: any idea why I'd be getting it? I'm having a really hard time figuring this out. I'm completely noob here =/
[00:31] timoxley: rdegges post your package.json
[00:31] rdegges: I don't even have a cli.js file anywhere, I can't figure out why it wants it.
[00:31] rlidwka: well... you can pack 10k or 100k bytes into one javascript file. But when it'll be megabytes of modules async module loading will be really only one way :)   Not all apps will reach this though
[00:31] rdegges: It's all on my github: https://github.com/telephonyresearch/node-opencnam
[00:31] timoxley: rdegges remove that bin entry
[00:31] rdegges: timoxley: what should I change it to? :o
[00:32] timoxley: rdegges just remvoe lines 22 to 24
[00:32] timoxley: rdegges it's not required
[00:32] rdegges: :o
[00:32] rdegges: oh whoop
[00:32] SubStack: rlidwka: if you have to pull down megabytes of modules then you have to pull down megabytes of modules
[00:32] timoxley: rdegges http://blog.nodejitsu.com/package-json-cheat-sheet
[00:32] nerdfiles1 has joined the channel
[00:32] rdegges: I copied my package.json from that guy's file.
[00:32] SubStack: I don't see how async is going to save you
[00:32] rdegges: I guess I forgot to remove that part >.>
[00:32] SubStack: in fact, if you have lots of modules async is going to be way slower than bundling
[00:32] timoxley: rdegges and `npm help json`
[00:32] rdegges: I was staring at that for 30 minutes too, damn.
[00:32] rdegges: timoxley: thanks a ton! I'll give this a go!
[00:33] SubStack: since there's a round-trip for every async module fetch
[00:33] SubStack: versus a single round-trip to get all the contents
[00:34] polardude: After I register one user through mongoose-auth, I cannot create another user due to this error, "Someone already claimed that login."
[00:34] polardude: The login is completely different from the original user registered
[00:35] rdegges: timoxley: holy cow! I've just published my first working node package ^^
[00:35] timoxley: SubStack only problem with bundling is inability to do CDN caching
[00:35] chadskidmore has joined the channel
[00:35] timoxley: rdegges nice
[00:35] rdegges: Thank you so much for your help!
[00:35] argami_ has joined the channel
[00:35] rdegges: This has been a really fun experience :)
[00:35] timoxley: rdegges nowâ€¦ where are your tests?
[00:35] timoxley: :P
[00:35] cm has joined the channel
[00:35] SubStack: timoxley: I've been thinking a little about an adaptive bundler using local storage
[00:35] rdegges: Hah, I've gotta learn a JS unit testing framework first =p
[00:35] polardude: Any ideas?
[00:36] rdegges: timoxley: I'm a python/django guy, but I've been learning js / node, so this is my first project ^^
[00:36] rdegges: Haven't done __any__ js unit testing yet ^^
[00:36] SubStack: timoxley: still possible to get CDN-ish behavior with nice require()s
[00:36] SubStack: see also http://browserify.nodejitsu.com/
[00:36] timoxley: SubStack what do you mean adaptive bundler?
[00:37] SubStack: it could inspect which modules you already have in local storage and serve up a bundle that excludes those
[00:37] localhost has joined the channel
[00:37] agnat_ has joined the channel
[00:38] admc has joined the channel
[00:40] timoxley: SubStack ahh, that's a pretty sweet idea. I wonder if the rails guys are working on such a thing for their asset pipeline. Though sameorigin restriction with localstorage removes the CDN benefit for common libs
[00:42] argami has joined the channel
[00:42] shinuza has joined the channel
[00:42] timoxley: This guy doing something similar http://addyosmani.github.com/basket.js/
[00:43] arduix has joined the channel
[00:44] SubStack: timoxley: a script on the local domain could just send hashes to a cdn server with cors enabled
[00:44] SubStack: over xhr
[00:45] timoxley: ahh
[00:45] SubStack: then it gets back the bundle of everything it doesn't have all in one go
[00:45] timoxley: Funny that this issue didn't get solved years ago when people actually had serious bandwidth issues
[00:46] maxogden: javascript is funny in general
[00:46] timoxley: It seems pretty obvious
[00:46] SubStack: maybe I'll build a browserify cdn on a whim some day
[00:46] timoxley: SubStack do it.
[00:46] maxogden has joined the channel
[00:46] SubStack: but I have other things which are relevant to my present interests
[00:47] timoxley: SubStack get an apprentice
[00:47] Destos has joined the channel
[00:47] qbert_: ... like taking over a small little known east european country
[00:47] maxogden: GSoC substack edition
[00:47] YoY has joined the channel
[00:48] timoxley: +1 to that
[00:48] SubStack: qbert_: like growing revenues for my business :p
[00:48] Druid_ has joined the channel
[00:48] SubStack: and releasing more products which are just crazy combinations of modules
[00:48] mikeal has joined the channel
[00:50] argami has joined the channel
[00:50] qbert_: the cross browser testing business ?
[00:50] qbert_: and what are these "products" you speak of :D ?
[00:50] SubStack: so many products
[00:51] jesusabdullah: speaking of browserify.jit.su: The code is incredistale but I would be more than happy to accept pull requests to update it!
[00:51] SubStack: jesusabdullah: noted!
[00:52] SubStack: I'm more thinking of exploring a different approach entirely though
[00:52] jesusabdullah: sure
[00:52] SubStack: but maybe adaptive bundling could work with the existing stack
[00:52] jesusabdullah: I'd take it down except it seems like people like it it there
[00:55] igl1 has joined the channel
[00:55] ted_ has joined the channel
[00:56] exchgr has joined the channel
[00:58] tylerstalder has joined the channel
[00:58] skeptic has joined the channel
[00:58] k1ttty has joined the channel
[00:59] Destos has joined the channel
[01:00] rauchg has joined the channel
[01:02] khrome has joined the channel
[01:05] sreeix has joined the channel
[01:07] cipher__: is gedit the only choice on linux for editing js?
[01:09] mehale: cipher__: try vim
[01:09] neoesque has joined the channel
[01:09] microp11 has joined the channel
[01:10] jetienne has joined the channel
[01:11] take_cheeze has joined the channel
[01:17] enmand has joined the channel
[01:19] robhawkes has joined the channel
[01:19] cha0s has joined the channel
[01:19] exchgr: cipher__, try sublime text 2
[01:20] bradleymeck has joined the channel
[01:20] exchgr: it's the best gui editor.
[01:20] paulwe has joined the channel
[01:21] WarheadsSE: try Komodo.. 
[01:21] WarheadsSE: :p
[01:21] WarheadsSE: (yes its a pay product...ty work)
[01:21] erichynds has joined the channel
[01:23] cipher__: exchgr, segfault :O
[01:23] exchgr: like it?
[01:24] exchgr: oh i thought segfault was a user you were pinging lol
[01:24] exchgr: what distro?
[01:24] JmZ_ has joined the channel
[01:24] johnmdonahue: is there any way to declare the listening port on an http(s).get/request?
[01:24] postwait has joined the channel
[01:25] jrundquist has joined the channel
[01:25] willwhite has joined the channel
[01:26] DijkstraGroupie has joined the channel
[01:26] exchgr: cipher__ what distro are you on?
[01:27] jrundquist has left the channel
[01:27] scottdware has joined the channel
[01:28] yuroyoro has joined the channel
[01:30] chadskidmore has joined the channel
[01:30] abraxas has joined the channel
[01:31] apoc has joined the channel
[01:32] pksunkara has joined the channel
[01:33] brianseeders has joined the channel
[01:37] timoxley: cipher__ +1 vim. gvim good if you're used to a gui.
[01:38] timoxley: johnmdonahue server.listen(port) where server is a http(s) server should do it
[01:38] bradleymeck has joined the channel
[01:38] timoxley: johnmdonahue is that what you're asking?
[01:39] johnmdonahue: timoxley: i'm trying to open a port with access through the firewall when needed. so i need to make an https.get request but over a specific port
[01:39] johnmdonahue: i'm not sure what port that method uses by default
[01:39] timoxley: johnmdonahue http://nodejs.org/docs/latest/api/all.html#all_http_get_options_callback 
[01:40] jgaui has joined the channel
[01:40] orlandovftw has joined the channel
[01:40] trepan has joined the channel
[01:40] johnmdonahue: yeah I checked that out. I'm not trying to specify the remote port, but the port the request originates from. does that make sense?
[01:41] johnmdonahue: i'm assuming it uses 443/80 to make the request? just trying to figure out a way to use a different port.
[01:43] dekub has joined the channel
[01:43] polardude has joined the channel
[01:43] timoxley: johnmdonahue IMO if your firewall is blocking 80/443 you've got bigger problems.
[01:44] konobi: normally on the client side a random port is chosen from
[01:44] JimRoepcke has joined the channel
[01:45] johnmdonahue: timoxley: maybe so, it's an internal app for use in house, but i need a way to hit external api's somehow
[01:45] johnmdonahue: w/o exposing 80/443
[01:46] konobi: unless you have an insanely restrictive firewall it will just work
[01:46] timoxley: johnmdonahue you could try using a proxy https://github.com/nodejitsu/node-http-proxy
[01:46] kickingvegas has left the channel
[01:47] adamkittelson has joined the channel
[01:48] johnmdonahue: yeah i'm actually using that already as a proxy server to sit in front of several internal apps. I'll see if i can work that out for this as well. it's getting messy. ;) may need to take a step back and reconsider the setup thanks
[01:49] konobi: johnmdonahue: just because you "use" a port in a client doesn't mean it's "open" for listening
[01:49] johnmdonahue: but it would need to be to receive the API response no?
[01:49] konobi: no
[01:49] johnmdonahue: oh!
[01:50] konobi: by default your browser will use random ports to connect to websites
[01:50] konobi: src port does not have to match dest port
[01:51] Aria has joined the channel
[01:52] johnmdonahue: so the same is true server side? node uses random ports to make requests?
[01:52] konobi: yes
[01:53] yhpark has joined the channel
[01:53] Hebo has joined the channel
[01:54] ioscale has joined the channel
[01:54] johnmdonahue: and if the server is not publicly accessible except from within the local network is there some way to make requests through w/o opening a port?
[01:54] johnmdonahue: sorry iguess i should say it's locked down on the iptables level. I'm no sys admin so this is new to me
[01:55] thetony: if your server is listening on a port and that is the only way, then no
[01:56] mikeal has joined the channel
[01:56] konobi: johnmdonahue: time to brush up on TCP/IP =0)
[01:57] johnmdonahue: konobi: i have a lot to learn! thanks
[01:57] konobi: (actually the CCNA book is a good starter)
[01:57] zdk has joined the channel
[01:57] johnmdonahue: nice i'll check it out
[01:57] Init--WithStyle- has joined the channel
[01:58] timoxley: konobi you mean http://www.amazon.com/CCNA-Cisco-Certified-Network-Associate/dp/0782126472 ?
[01:58] Init--WithStyle-: Hey guys, I have an express server test running.. just curious what the "#" in <a href='#' id='chat'>could mean in my chat.ejs file :)
[01:59] Init--WithStyle-: Is it referring to the enclosing file or something?
[01:59] scottdware: my guess is that it's just a dead link?
[01:59] thetony: Init--WithStyle-: it's a document link - that one means don't do anything when you click the a
[02:00] k1ttty_ has joined the channel
[02:00] eduardostalinho has joined the channel
[02:00] Init--WithStyle-: So it's basically just a blank "do-nothing" link?
[02:00] johnmdonahue: timoxley konobi thetony Thanks for the help!
[02:00] Init--WithStyle-: that doesn't throw an error?
[02:00] thetony: yea
[02:00] Init--WithStyle-: ok that makes sense since on click a script creates an iFrame anyways
[02:00] infynyxx_ has joined the channel
[02:00] Init--WithStyle-: thanks thetony 
[02:01] thetony: np, and no - to your browser it's just an attribute to an html tag
[02:01] erujolc has joined the channel
[02:01] Karmaon has joined the channel
[02:02] infynyxx has joined the channel
[02:02] mcluskydodallas has joined the channel
[02:02] andrewpthorp has joined the channel
[02:03] andrewpthorp: Hi! How do I develop locally with a command line utility? "npm link my-tool" doesn't install the CLI, and I can't do -g with npm link
[02:04] sawgij has joined the channel
[02:04] mikeal has joined the channel
[02:05] HacDan_ has joined the channel
[02:05] thetony: andrewpthorp: just create local js files and then do node <filename>
[02:06] thetony: the more common cli editors are vim and emacs, vim is obviously far superior
[02:06] andrewpthorp: ohhh nm
[02:06] konobi: timoxley: not sure.. my copy is about 10 years old now
[02:06] andrewpthorp: I got you, I can execute the CLI directly from node
[02:06] andrewpthorp: Awesome, thanks!
[02:06] zanefactory has joined the channel
[02:07] timoxley: konobi they were selling used copies for around $4, figured can't hurt to get one
[02:07] thetony: timoxley: that be the one 
[02:07] konobi: mine was an official one that i got during doing the ccna course
[02:07] timoxley: ooo
[02:07] ctp6360 has joined the channel
[02:07] thetony: timoxley: my mistake - that is not the one
[02:07] timoxley: thetony dang. can you tell me the one
[02:09] thetony: looking, give me a minute
[02:10] aconbere has joined the channel
[02:11] CIA-19: node: 03Nathan Rajlich 07master * r698e795 10/ (lib/_debugger.js src/node.js): 
[02:11] CIA-19: node: repl: fix 'terminal' mode autodetection on global repls
[02:11] CIA-19: node: Fixes test/simple/test-force-repl.js - http://git.io/SwIEEQ
[02:11] thetony: timoxley: http://www.amazon.com/640-802-Official-Library-Updated-Edition/dp/158720438X/ref=sr_1_1?s=books&ie=UTF8&qid=1332814217&sr=1-1
[02:12] timoxley: thetony dang. they;re not selling for $4
[02:12] jetienne has joined the channel
[02:13] thetony: timoxley: nah, 32$. it's probably overkill if you just want to use a socket once 
[02:13] thetony: http://www.faqs.org/rfcs/rfc1180.html
[02:13] jgornick has joined the channel
[02:14] timoxley: thetony thanks
[02:14] johnmdonahue: thetony: oh nice! thanks
[02:14] Brandon_R has joined the channel
[02:14] EhevuTov has joined the channel
[02:16] HacDan_ has joined the channel
[02:16] Brandon_R: hi guys
[02:16] tlack: hows the node.js consulting market? 
[02:16] rurufufuss has joined the channel
[02:16] Brandon_R: the node.js consulting market?
[02:17] Brandon_R: you mean the mailing list :P
[02:17] tlack: sorry, what?
[02:17] nerdfiles1 has joined the channel
[02:17] kejun has joined the channel
[02:17] JSONB has joined the channel
[02:17] evilnate has joined the channel
[02:17] Brandon_R: there are always people around to help
[02:18] tlack: i meant to consult for businesses that are interested in using node.js on their websites. :)
[02:18] warz has joined the channel
[02:18] warz has joined the channel
[02:18] Emmanuel` has joined the channel
[02:18] tlack has left the channel
[02:18] tlack has joined the channel
[02:18] jgautier has joined the channel
[02:18] jgautier: any riak guys in here?
[02:19] evilnate has joined the channel
[02:20] aconbere has joined the channel
[02:20] wolftankk has joined the channel
[02:21] dshaw_ has joined the channel
[02:21] Emmanuel` has joined the channel
[02:22] eduardostalinho has joined the channel
[02:23] konobi: tlack: pretty decent as far as i'm aware... but it seems quite systems orientated atm.
[02:23] nicholas_ has joined the channel
[02:23] pksunkara: can somebody ping me if tj comes online, please
[02:23] pksunkara: thanks
[02:24] orlandovftw has joined the channel
[02:24] mikeal has joined the channel
[02:25] Destos has joined the channel
[02:26] Brandon_R: kk
[02:26] sammmy has joined the channel
[02:28] k1ttty has joined the channel
[02:28] RORgasm has joined the channel
[02:29] sammmy: If I'm displaying dynamic content (say a number from the database) on every page (in the header partial), do I have to call this information from the database before EVERY res.render I use? Or, is there a way to make this a helper, but one that changes on every request?
[02:29] Aria: Either you have to be fetching it from the database periodically, at every request, or being notified when it changes.
[02:30] evilnate: yyuuuppp
[02:30] iangreenleaf has joined the channel
[02:31] zackattack has joined the channel
[02:33] mikeal has joined the channel
[02:33] philips has joined the channel
[02:34] dylang has joined the channel
[02:34] bradleymeck has joined the channel
[02:35] kejun has joined the channel
[02:35] kvda has joined the channel
[02:35] Brandon_R: h3y evilnate
[02:35] Brandon_R: are you tootallnate?
[02:36] TooTallNate: just an imposter ;)
[02:38] itayneeman has joined the channel
[02:39] dnolen has joined the channel
[02:41] paul_ has joined the channel
[02:41] itayneeman: Does anyone know why the https module will close a connection even though it should be waiting for a response (requesting using curl works fine)
[02:41] sammmy: Aria: I just don't know how I would make a dynamic helper with what I want with Express 2.x
[02:41] devongovett has joined the channel
[02:42] duncanbeevers has joined the channel
[02:43] sammmy: Aria: If I was using Express 3.x (I will once it's released), I could just use app.locals.use() and do an asynchronous call to the database. But, using Express 2.x I don't have this async support. Maybe I could do something similar in 2.x though?
[02:44] meso has joined the channel
[02:44] ctp6360 has joined the channel
[02:45] Aria: You can always make async calls ... just don't write to the response until you have the data you need.
[02:45] Brandon_R: i wonder how to read from the command line in c with libuv
[02:45] Aria: (Ah, express -- you didn't mention that you were using it)
[02:45] Aria: Brandon_R: argc? argv? Why use libuv for that?
[02:45] kirbysayshi has joined the channel
[02:45] Brandon_R: i just want to learn how the library works :P
[02:46] Brandon_R: got it
[02:46] Aria: Hehe.
[02:46] Brandon_R: https://github.com/joyent/libuv/tree/master/src/win#L159
[02:47] Aria: Mmhm?
[02:47] Brandon_R: https://github.com/joyent/libuv/blob/master/src/win/pipe.c#L159
[02:47] Brandon_R: but that's windows
[02:47] smackdab has joined the channel
[02:48] smackdab has left the channel
[02:48] sammmy: Aria: I can make the async calls, which is what I'm doing now, but I have to repeat myself over and over again for everytime I render my templates..a royal pain.
[02:48] Aria: What's that got to do with the commandline?
[02:48] Aria: sammmy: So abstract it into a function.
[02:48] sammmy: Aria: what do you mean?
[02:49] Aria: Well, if you're repeating yourself, write a function that does it. Use that.
[02:49] ksys has joined the channel
[02:49] ksys: ll
[02:49] sammmy: Aria: But then I'd have to use that function everytime aswell, which is also what I'm doing.
[02:49] Aria: Brandon_R: What's that got to do with the command-line? That's code to read from a named pipe.
[02:49] Aria: sammmy: Okay, and? (or configure middleware...)
[02:49] sammmy: I'm wanting a way to make my local magically be there and update on every request.
[02:49] sammmy: Maybe I could do some middleware then?
[02:49] Brandon_R: i want the user to enter something in the command line and have the program read it
[02:50] Brandon_R: i don't mean passed in as an argc but actually type something in the command line and press enter
[02:50] Brandon_R: like cin >> var;
[02:50] sammmy: Can I do app.locals.somelocal = 'whatever'; in a middleware?
[02:50] nerdfiles1 has joined the channel
[02:51] Aria: Probably. But I might use req.something instead.
[02:52] TooTallNate: Brandon_R: take a look at uv.h
[02:52] TooTallNate: that's the public stuff
[02:52] Brandon_R: got it
[02:52] Brandon_R: uv_tty_t
[02:52] Brandon_R: libuv is probably one of the best libraries i have ever seen
[02:53] Aria: Ah, yeah, you want either tty access, or to just read and write to stdin/stdout
[02:53] Aria: Depending on whether you want human or pipe input.
[02:53] Brandon_R: got it
[02:54] Aria: (the c++ cin/cout are stdin/stdout, not tty)
[02:55] itayneeman: Any ideas why a GET request that works fine in curl doesn't work from https.get?
[02:56] disappearedng has joined the channel
[02:56] Aria: Not without knowing what you mean by 'doesn't work'
[02:56] jesusabdullah: short answer: curl is being more clever than https.get
[02:56] Aria: Throws an exception? Times out? returns different results?
[02:56] itayneeman: returns an empty body
[02:56] jesusabdullah: logn answer: not without knowing what you mean by 'doesn't work'
[02:56] jesusabdullah: long*
[02:57] itayneeman: It's a streaming endpoint
[02:57] itayneeman: similar to twitter's streaming endpoint (just it returns CSV)
[02:57] itayneeman: I get back the headers from the response
[02:57] itayneeman: but then it just seems to close
[02:57] itayneeman: the 'end' event is emitted on the response
[02:58] itayneeman: I'm more than willing to believe the server is sending something bad, I'm just trying to figure out what it might be
[02:58] Aria: I'd suspect that it's just hanging up on you because you didn't incant the right magic to say you wanted a stream.
[02:58] ditesh|cassini has joined the channel
[02:58] itayneeman: Aria: on the request side or the response side?
[02:58] Aria: request, that's my guess
[02:59] Aria: try curl -v and see if you can spot headers that might help
[02:59] evilnate has joined the channel
[02:59] itayneeman: Aria: I did, we send the same headers
[02:59] duncanm has joined the channel
[02:59] duncanm: hola - can i ask coffeescript questions here? #coffeescript is quiet
[03:00] achiu has joined the channel
[03:00] Aria: Interesting
[03:00] itayneeman: Aria: the only headers that curl sends are Authorization, User-Agent, Host and Accept
[03:00] SubStack: duncanm: asking to ask is inefficient
[03:00] EyePulp: duncanm: you'll hear angry hissing
[03:01] SubStack: especially in a high-latency asynchronous messaging medium
[03:01] nerdfiles has joined the channel
[03:01] sh1mmer has joined the channel
[03:01] Brandon_R: is libuv child process spawning synonymous with spawning a new thread?
[03:02] jesusabdullah: duncanm: go for it, though you'll hear multiple people say, "eww coffeescript" ;)
[03:02] duncanm: ah
[03:02] duncanm: well, either way
[03:02] ksys: hi, does anyone know why jsdom fails to fetch the external js scripts? http://pastebin.com/X4jAwJQV
[03:02] piscisaureus_ has joined the channel
[03:02] duncanm: i come from coding in Scheme - so i was looking for a way to reload a file in the REPL
[03:02] ksys: the urls are absolute
[03:02] duncanm: a quick way to reload a file
[03:03] astropirate has joined the channel
[03:03] duncanm: i do something like foo = require './foo', but it doesn't seem to pick up changes
[03:03] duncanm: if i change the file and run it again
[03:04] SubStack: duncanm: you can delete the entries from require.cache
[03:04] louissmit has joined the channel
[03:04] SubStack: there are probably some modules on npm that do this already
[03:05] rurufufuss has joined the channel
[03:05] gf3 has joined the channel
[03:05] zodiak has joined the channel
[03:07] duncanm: hmm
[03:07] SubStack: here I just wrote this
[03:07] SubStack: on the repl
[03:07] SubStack: function reload (name) { var base = require('path').dirname(require.resolve(name + '/package.json')) + '/'; Object.keys(require.cache).forEach(function (key) { if (key.slice(0, base.length) === base) delete require.cache[key] }); return require(name) }
[03:07] duncanm: looks like i can do delete require.cache['foo']
[03:07] SubStack: seems to work
[03:08] SubStack: you probably want to pull out all the subdependencies too
[03:08] duncanm: SubStack: i find it bizarre that this is not built-in, do most people just restart node on every change?
[03:08] SubStack: I do usually
[03:09] duncanm: SubStack: in the scheme/lisp world, the usual workflow is to keep the REPL running, and incrementally evaluation different bits of code
[03:09] duncanm: evaluate
[03:09] itayneeman: jesusabdullah: any ideas?
[03:09] jesusabdullah: huh?
[03:10] jesusabdullah: If I were you I'd crank up the verbosity of curl to the max
[03:10] jesusabdullah: and see what it's "really" doing
[03:10] JimRoepcke has joined the channel
[03:10] Karmaon has joined the channel
[03:12] itayneeman: jesusabdullah: I get the feeling it may be because the server isn't respnoding with Transfer-Encoding: chunked
[03:14] duncanm: is there a way to change the way the REPL prints an object? is it not enough to implement toString?
[03:15] jesusabdullah: itayneeman: entirely possible
[03:15] polardude has joined the channel
[03:16] itayneeman: jesusabdullah: is there a way to force http/https module to use chunked encoding even if the header is not sent?
[03:16] retornam has joined the channel
[03:17] pradeepbv has joined the channel
[03:18] hdon-: hi all :) I am using Sequelize. return values are often objects with properties that i can use to register callbacks like .success(successCallback). is there a standard node module it's probably using that i can also use in my code?
[03:18] jesusabdullah: itayneeman: no idea. Have you looked at mikeal's request module?
[03:18] itayneeman: yes, same behaivor
[03:19] itayneeman: I actually started out with it, and moved to http/https directly because I thought it might be something there
[03:21] cconstantine_ has joined the channel
[03:21] tilgovi has joined the channel
[03:22] automata has joined the channel
[03:22] crutex has joined the channel
[03:22] garthk has joined the channel
[03:23] isufy has joined the channel
[03:24] githogori has joined the channel
[03:24] garthk has joined the channel
[03:24] cjm has joined the channel
[03:26] garthk has joined the channel
[03:26] itayneeman has joined the channel
[03:28] garthk has left the channel
[03:29] garthk has joined the channel
[03:30] k1ttty_ has joined the channel
[03:31] jyp has joined the channel
[03:32] pizthewiz has joined the channel
[03:32] dr0id has joined the channel
[03:35] rtgibbons has joined the channel
[03:35] joshthecoder has joined the channel
[03:36] c4milo: ACTION sigh 
[03:37] Spion_ has joined the channel
[03:37] kmiyashiro has joined the channel
[03:37] denom has joined the channel
[03:38] petschm_ has joined the channel
[03:38] mikeal has joined the channel
[03:38] ctp6360 has joined the channel
[03:38] OmidRaha has joined the channel
[03:40] wilmoore has joined the channel
[03:41] dgathright has joined the channel
[03:44] EyePulp has joined the channel
[03:45] h4mz1d has joined the channel
[03:47] elguapo99 has joined the channel
[03:48] thomasloh has joined the channel
[03:48] jrundquist has joined the channel
[03:49] jeremya has joined the channel
[03:49] jeremya: I've come to claim my moon laser
[03:51] cconstantine_: I'm trying to get a callback on receipt of a socket.io .emit call.  has anyone gotten that to work?
[03:53] yaymukund has joined the channel
[03:54] ramitos has joined the channel
[03:56] jakehow has joined the channel
[03:58] meandi15 has joined the channel
[03:58] jtsnow has joined the channel
[03:58] crescendo has joined the channel
[03:59] jdparker has joined the channel
[04:00] benvie: oms[ect
[04:00] benvie: inspect property
[04:00] benvie: controls it
[04:00] kirbysay_ has joined the channel
[04:00] isaacs has joined the channel
[04:01] benvie: this whole file is dedicated to the inspector for the lib https://github.com/Benvie/reified/blob/master/lib/inspect.js
[04:01] benvie: you tap into it with an function in the inspect property on an object or its prototype
[04:03] andrewpthorp has joined the channel
[04:06] domo has joined the channel
[04:06] dshaw_ has joined the channel
[04:06] domo: (node) warning: possible EventEmitter memory leak detected. 11 listeners added. Use emitter.setMaxListeners() to increase limit.
[04:06] Aria: Just what it says on the tin. Make sure you want that many.
[04:06] domo: I'm seeing this relating to a Socket
[04:07] domo: I'm new to node, so I don't know what I can use to debug this. I know it says setMaxListeners, but could someone offer some insight as to how I should do this and understand the process?
[04:07] k1ttty has joined the channel
[04:07] diogogmt has joined the channel
[04:08] timoxley: duncanm you can use console.log(util.inspect(myObj, true, null, true))  to get a more comprehensive object nump
[04:08] timoxley: nump? dump.
[04:08] duncanm: timoxley: thanks
[04:09] mikeal has joined the channel
[04:09] timoxley: benvie your ultra-repl no work.
[04:10] benvie: did you just upgrade node?
[04:10] duncanm: timoxley: what ultra-repl?
[04:10] benvie: I'm working on it now
[04:10] timoxley: benvie that I did.
[04:10] benvie: based on the latrst stuff
[04:10] benvie: it's awesome though
[04:10] timoxley: duncanm it's apparently a fancy pants repl
[04:10] benvie: I got it working with putty
[04:10] benvie: in windows
[04:11] jeremya has left the channel
[04:11] benvie: full keybindings and all
[04:11] timoxley: duncanm I was going to suggest it RE prionting objects, and thought I'd see if it was still working
[04:11] benvie: unless he has the node literally from an hour ago
[04:11] benvie: it should be fine
[04:11] timoxley: benvie oh, I'm on 0.6.14
[04:11] benvie: oh hmm
[04:11] timoxley: benvie I'll submit bug
[04:12] benvie: I'll take a look at it and get it fixed
[04:12] benvie: wonder what changed
[04:12] domo: benvie hello
[04:13] benvie: hey
[04:14] nerdfiles has joined the channel
[04:14] timoxley: benvie https://github.com/Benvie/Node.js-Ultra-REPL/issues/6
[04:15] indy3 has joined the channel
[04:15] jtsnow has joined the channel
[04:15] benvie: oh
[04:15] benvie: it's building node-ffi
[04:15] benvie: hmm odd
[04:15] benvie: that's distributed compiled mostly
[04:16] benvie: well if you -f the npm install and get node-ffi manually it should be fine, or just don't get it
[04:16] benvie: it's for a plugin
[04:16] benvie: and I'll get it upgraded to the latest
[04:18] DijkstraGroupie has joined the channel
[04:21] jaha has joined the channel
[04:21] joshsmith has joined the channel
[04:22] cipher__ has joined the channel
[04:22] cipher__ has joined the channel
[04:23] jerkchicken has joined the channel
[04:24] jerkchicken: app.get('/', function (req, res) {} what is '/'?
[04:24] synesp: jerkchicken: http://www.google.com(/)
[04:24] synesp: it's the trailing slash
[04:24] synesp: www.google.com/foo it would be /foo
[04:24] jerkchicken: what does it mean in that context?
[04:25] synesp: its the path
[04:25] synesp: you mean what does / mean alone?
[04:25] jerkchicken: no i mean: what does it mean in that context...
[04:25] synesp: ohhh
[04:26] mikeal has joined the channel
[04:26] cliffano has joined the channel
[04:27] Brandon_R: hey guys
[04:27] nerdfiles: Ex:
[04:28] kvda has joined the channel
[04:29] Brandon_R: what is a good datastructure to store socket connections in?
[04:29] jerkchicken: app.get('/', function (req, res) {value : req.session.value});   how do i access value?
[04:30] jerkchicken: keeps saying undefined when i alert(value)
[04:30] Brandon_R: y r u lerting it?
[04:30] jaha: Hey all. Any of you using messaging queue libraries? Which ones? I basically need a transport layer that will be 99.99% successful no matter that stability of the connection.
[04:31] jerkchicken: Brandon_R, i just want to see it
[04:31] Brandon_R: what about console.log?
[04:31] ctp6360 has joined the channel
[04:31] Joeysomo has joined the channel
[04:32] jerkchicken: would probably give the same response. undefined
[04:32] maxogden: lol @ lerting
[04:32] yaymukund has joined the channel
[04:33] jerkchicken: is value global?
[04:36] sammmy: Is there a way to run a function when something in my MySQL database changes?
[04:36] dshaw_ has joined the channel
[04:38] schredder has joined the channel
[04:38] nerdfiles has left the channel
[04:41] polardude has joined the channel
[04:42] oldsplice has joined the channel
[04:42] SubStack: jaha: lots of folks use amqp or zmq for that sort of thing or if you want dnode-style rpc you could use http://github.com/substack/upnode
[04:42] oldsplice: Could someone help me with a for loop issue?
[04:42] nerdfiles1 has joined the channel
[04:44] SubStack: jaha: also check this one out https://github.com/substack/airport
[04:44] SubStack: if you like service registries
[04:44] synesp: beep boop
[04:45] SubStack: you can take down an airport server and bring one up on a completely different server and the connection won't skip a beat
[04:46] Brandon_R: does airport have security?
[04:46] SubStack: yep, just pass in a 'secret' key
[04:46] Brandon_R: or can terrorists hijack it?
[04:46] SubStack: or you can roll it yourself by defining an auth methods
[04:46] SubStack: s/s$//
[04:47] oldsplice: Could someone explain why this function returns the same sha-128 hash in a for loop? => https://gist.github.com/2212606
[04:47] SubStack: Brandon_R: but you can just do air(fn).listen('beep', { secret : 'boop' })
[04:47] SubStack: then you just need to air.connect('beep') and the secret will be pulled down from the service registry metadata
[04:48] Brandon_R: kool
[04:48] jaha: SubStack: I have played with upnode/dnode a bit and like it however for this application I was looking to stay away from RPC , I have been testing zmq but having problems with how to deal with connection interuptions and TCP timeouts. I would like to stay as high level as possible at the moment so I think some of it is going a bit over my head, i am not looking for ultimate performanceâ€¦ just reliablity.
[04:48] jaha: id appreciate any more suggestions
[04:49] SubStack: jaha: upnode connections ping the other side continuously and forcibly try to re-establish the connection if the pings don't get back in time
[04:49] SubStack: I've been running this stuff in production across spotty network boundaries for a while now
[04:50] ivanfi has joined the channel
[04:51] ivanfi has left the channel
[04:51] jaha: SubStack: how does it handle long interuptions, say over 24 hours?
[04:51] SubStack: jaha: it just continuously retries
[04:52] SubStack: or with airport you can have multiple services for redundancy
[04:52] SubStack: and it will just use whichever services are available
[04:53] rlidwka has joined the channel
[04:54] njain has joined the channel
[04:54] thetony: are you guys creating binaries from node or writing some seriously intricate apps with node?
[04:54] munichlinux has joined the channel
[04:54] kvda has joined the channel
[04:55] ewalker has joined the channel
[04:55] jaha: SubStack: I forget, does upnode handle multiple inidividual clients, meaning I could target messages from the server?
[04:56] insanoid has joined the channel
[04:56] niloy has joined the channel
[04:57] SubStack: jaha: yes all the clients are handled individually
[04:57] ctp6360 has joined the channel
[04:57] nerdfiles1 has joined the channel
[04:57] test_ has joined the channel
[04:57] SubStack: if you want broadcast behavior you'll need to roll that yourself
[04:58] test_: test 
[04:59] nerdfiles1 has left the channel
[04:59] nateps has joined the channel
[05:00] mikeal has joined the channel
[05:00] nerdfiles1 has joined the channel
[05:01] ivanfi1 has joined the channel
[05:01] ivanfi1 has left the channel
[05:01] jtsnow has joined the channel
[05:02] rurufufuss has joined the channel
[05:04] infynyxx has joined the channel
[05:04] jesusabdullah: redis pubsub
[05:04] jesusabdullah: dun done
[05:05] kvda has joined the channel
[05:05] nerdfiles1 has joined the channel
[05:06] Stoobles has joined the channel
[05:07] fangel has joined the channel
[05:07] patcito_ has joined the channel
[05:07] xananax has joined the channel
[05:08] patcito has joined the channel
[05:09] jaha: SubStack: thanks, I may have to look into upnode again since ZMQ is starting to get on my nerves
[05:11] sreeix has joined the channel
[05:12] rosalindwills has joined the channel
[05:13] polardude has joined the channel
[05:14] rosalindwills: 'eyoâ€¦does anyone here know any useful tutorials around building a chat server/application in node.js?
[05:14] hardikr has joined the channel
[05:14] Stoobles: Yeah,
[05:15] Stoobles: http://chat.nodejs.org/
[05:15] Stoobles: And its source: https://github.com/ry/node_chat
[05:16] rosalindwills: yeah, i ran across that and was going to look it over. was just curious if there are any tuts about that step through the process a bit
[05:16] rosalindwills: (i'm new to this framework)
[05:16] rosalindwills: but thank ye :)
[05:16] Lorentz: I should upload that chat thing I wrote
[05:16] Stoobles: Yeah. Best of luck.
[05:16] Lorentz: it extended the normal chat thing and gives you rooms to talk in
[05:17] rosalindwills: There any tutorials in general that you recommend?
[05:18] oldsplice has joined the channel
[05:19] Stoobles: Hmm. Maybe that's what the node.js community needs.
[05:19] Stoobles: A good tutorial
[05:20] oldsplice has joined the channel
[05:20] Morkel has joined the channel
[05:21] Lorentz: Maybe a solid book on it
[05:21] hardikr has left the channel
[05:21] oldsplice: Lorentz: can I message you?
[05:21] Lorentz: oldsplice: go on
[05:22] orlandovftw has joined the channel
[05:22] rosalindwills: there's a couple i've found that have been sort of helpful but i feel like sometimes they're assuming prior knowledge so i'm just sort of digging around seeing if there's anything else that's considered a go-to resource
[05:24] rosalindwills: (purportedly "for beginners", i mean. obviously some tutorials are going to assume prior knowledge :P )
[05:24] Stoobles: Yeah...
[05:24] ksys has joined the channel
[05:24] Stoobles: The ones I've come across assume knowledge of programming language construction
[05:24] Stoobles: javascript syntax
[05:25] Stoobles: javascript functional programming, I guess.
[05:25] maxogden: http://eloquentjavascript.net/ ftw
[05:26] rosalindwills: it's not so much the syntax that confuses me, i guess. i'm just coming from a PHP server-side background so figuring out how to structure everything is somewhat bewildering
[05:26] ryanseddon has joined the channel
[05:26] shedinja has joined the channel
[05:27] Stoobles: Yeah. Event based-programming?
[05:27] rosalindwills: as near as i understand the term, PHP is not so good at that
[05:27] rosalindwills: heh
[05:28] guidocalvano has joined the channel
[05:29] Stoobles: Everything happens only when an event triggers it...
[05:29] cipher__ has joined the channel
[05:30] kickingvegas has joined the channel
[05:30] nateps has joined the channel
[05:30] Stoobles: So, there's a continual loop of process, each time somebody, for example, visits a website. Everybody gets placed in line to be processed (Hopefully, if you're running a web server, most people don't have to wait in line long. This is known as the 'blocking' issue Node.js isn't designed to handle)
[05:31] Stoobles: If it does aI/O event like database query, then the queue is moved up, and the next process in line gets priority. Basically, PHP and other server paradigms just spawn a new thread every time a website gets a hit. Node.js processes them in a queue.
[05:31] cha0s has joined the channel
[05:31] cha0s has joined the channel
[05:32] Stoobles: It means certain processes are faster, and you don't have to wait for database queries for your thread to be accessible again.
[05:32] blueadept has joined the channel
[05:32] blueadept has joined the channel
[05:32] Trindaz has joined the channel
[05:32] Trindaz: hi
[05:32] rosalindwills: ::nod::
[05:32] purr: rosalindwills: Paws code executed sucessfully. (no output)
[05:32] rosalindwills: hmm
[05:33] Stoobles: So... uhh... every line of code you write is processed when an event happens. Usually that event is a webpage visit.
[05:34] Stoobles: var http = require('http');http.createServer(function (req, res) {  res.writeHead(200, {'Content-Type': 'text/plain'});  res.end('Hello World\n');}).listen(1337, '127.0.0.1');All that does is respond "hello world", since the anonymous function on the second line is called every time a the node.js server gets a request.
[05:34] Stoobles: huh. No formatting. j/k
[05:34] rosalindwills: lol
[05:35] syntaxiko has joined the channel
[05:35] rosalindwills: no worries; i can read it still
[05:35] onar_ has joined the channel
[05:36] Stoobles: http.createServer(function (req, res)  {                 <----- That's an anonymous function, on the right hand side. It's not given a name, but the http.createServer still has it saved (in a closure, if you're familiar with the theory)
[05:36] rosalindwills: aye, vaguely
[05:37] dshaw_ has joined the channel
[05:37] ivanfi has joined the channel
[05:37] ivanfi has left the channel
[05:37] Stoobles: Have you looked into express?
[05:38] rosalindwills: not yet
[05:38] rosalindwills: ran across the name in a couple of articles i looked at but hadn't poked at it yet
[05:38] Stoobles: It's a pretty good intro... not into node specifically, but it's a framework that'll get you serving web pages in ten minutes.
[05:38] Stoobles: just started playing around with it
[05:38] rosalindwills: i'll definitely check that out then
[05:39] rosalindwills: i do like to know how the language is working underneath but it's also nice to have something that you can just start messing around with
[05:39] rosalindwills: question, if i may...
[05:39] Stoobles: sure
[05:40] synesp has left the channel
[05:40] MT has joined the channel
[05:41] pylemon has joined the channel
[05:41] rosalindwills: the initial reason i ended up looking at node was that when I asked people for help/thoughts on the app i'm working on (which has a lot of real-time interaction â€” chat, etc.) they suggested that node might be a better choice than PHPâ€¦however, I'm a bit puzzled why, since it sounds like node and PHP both don't handle "blocking," if i'm understanding you correctly...
[05:41] rosalindwills: is it just that it's faster?
[05:42] Stoobles: It handles different kind of blocking.
[05:42] Stoobles: PHP has a single thread for each connection. It makes a new thread every time there's a new webpage hit. This thread processes all of the data, then returns values, then dies.
[05:43] Stoobles: Node.js uses a single thread for *every* connection.
[05:43] maxogden: all threads are not created equal
[05:44] Stoobles: Which means each request is put into a queue, and then first come first serve. If a thread does something that takes a long while, such as a database query or any other I/O, then the thread is placed in the back of the queue (theoretically, of course)
[05:44] Stoobles: Basically
[05:45] Steven_ has joined the channel
[05:45] Stoobles: PHP is good for processing lots of data server side. If a single request takes 30 seconds, it's not going to hold up the queue.
[05:45] Stoobles: Node.js is good for doing very little processing server side. A database query that takes 30 seconds won't hold the line up.
[05:45] sammmy: how does nodejitsu compare to nodester?
[05:46] Steven_: hello ? anybody here?
[05:46] Ricket has joined the channel
[05:46] Stoobles: Nope, nobody.
[05:46] Steven_: oops :(
[05:46] developit has joined the channel
[05:46] rosalindwills: that makes sense. i think. :P still getting my head around it but your explanation is helping a lot
[05:46] sammmy: Free VPS anywhere what say you?
[05:47] developit: Question: Is there an issue with http.Server#listen() that causes hostnames to be overlooked?
[05:47] Steven_: Im new here. what should I do ?? I wanna ask something to you guys expert 
[05:47] rosalindwills: when you say node is using a new thread for *every* request, you mean, like, including AJAX calls and such?
[05:47] developit: -.-
[05:47] rosalindwills: Steven_, I think you just ask. :)
[05:47] Steven_: thank you :)
[05:47] developit: rosalindwills: a web server doesn't care how you made your HTTP request
[05:48] rosalindwills: ahh
[05:48] Stoobles: rosalindwills: Yeah. You can make different logic for ajax vs a front-page of course. But you can give it the same thing for both.
[05:48] developit: also, a new thread is not being spawned for every request. it is not that direct of a relationship
[05:48] rosalindwills: heh, you can tell i haven't mucked around with this sort of thing very much
[05:48] rosalindwills: gotcha
[05:49] mikeal has joined the channel
[05:49] developit: with node's http module you handle connections via events rather than spawned threads
[05:49] Stoobles: I just started a couple days back. Just regurgitating what I've learned. Thanks for listening, makes sure I know what I'm saying.
[05:49] OmidRaha has joined the channel
[05:49] Steven_: I want to install node.js and I wanna see the 'hello world!' ...    I'm using xampp on window7.   what should I do as next step to use node.js .. ?
[05:49] developit: you don't need XAMPP
[05:49] developit: just download and install node
[05:49] MerlinDMC has joined the channel
[05:49] rosalindwills: Stooble â€” likewise, thanks for taking the time to answer
[05:49] yawNO has joined the channel
[05:49] simenbrekken has joined the channel
[05:50] developit: anyone had any issues with hostname routing with http.Server???
[05:50] yawNO: hai
[05:50] tylerstalder has joined the channel
[05:51] rosalindwills: i think i will go mess with express; i've no doubt i'll be back at some point. Thanks all for the help.
[05:51] jrostand has joined the channel
[05:51] Stoobles: Aight. Good luck
[05:51] Chel has joined the channel
[05:51] rosalindwills: thanks
[05:51] rosalindwills has left the channel
[05:52] skm has joined the channel
[05:53] pvankouteren has joined the channel
[05:54] huggies has joined the channel
[05:55] lmorchard has joined the channel
[05:55] fivetwentysix has joined the channel
[05:55] graeme_f has joined the channel
[05:57] ag4ve: did bcrypt change interfaces? it seems there are different methods that got switched or there are different versions?
[05:59] ag4ve: ie, bcrypt.genSaltSync vs bcrypt.gen_salt (one being async as well...)
[06:03] Steven_: anyone knows.. good webpage to learn.. about  installing node with *.msi  and..  making 'hello world!'   ??
[06:03] Steven_:  :((
[06:07] abraxas has joined the channel
[06:14] enjalot has joined the channel
[06:15] cconstantine_ has joined the channel
[06:15] gf3 has joined the channel
[06:16] pylemon has left the channel
[06:17] RobWC1 has joined the channel
[06:19] Stoobles: poor Steven_
[06:19] Qzen: Steven_ , you can try http://blog.mozilla.com/webdev/2011/10/10/installing-node-js-on-windows/
[06:19] Qzen: i dont know if thats what you are looking for
[06:19] developit: So I take it nobody here can think of a reason why an http.Server listen() ing for requests to the specified hostname is instead calling my handler for all requests?
[06:19] admc has joined the channel
[06:20] developit: I am starting to think it's doing a reverse IP lookup and just using the IP...
[06:21] Steven_: thanks Qzen and . I can't use node.js without  cygwin on windows ? 
[06:22] tuhoojabotti: No
[06:22] Qzen: sure you can
[06:22] tuhoojabotti: Node.js runs natively on Windows.
[06:22] erujolc has joined the channel
[06:22] yawNO has joined the channel
[06:22] Aiden has joined the channel
[06:22] maxogden: developit: http://nodejs.org/api/http.html#http_server_listen_port_hostname_callback
[06:23] Qzen: You can install node on windows without any other program
[06:23] developit: That's what I'm using.
[06:23] Steven_: I'm reading this page http://code.google.com/p/nodejs-win/ .. but still dont know .. how can I see the 'hello world ' on window.. :S
[06:24] developit: the instance/listen setup is basically this:  http.createServer(function(){ /*request handler*/ }).listen(8080, 'example.com');
[06:24] developit: but when I issue a request to test.example.com:8080, it still goes through
[06:24] developit: calls the request handler, etc.
[06:24] developit: I have the app stripped down so its not even using cluster or a config, still happening.
[06:24] Qzen: well just make a "hello world" script in .js and then load it in node using "node /path/to/script.js" in cmd
[06:25] BombStrike: I do think for windows all you'd need to do is add node to the system PATH and you're set
[06:25] slaskis has joined the channel
[06:25] developit: also maxogden I'm envious of your location. Missed France the second we left!
[06:26] Qzen: Steven_ : just put "console.log("Hello World");" in a .js file then open CMD and type "node c:/path/to/script.js" and you should be set to go
[06:27] maxogden: developit: im not in france!
[06:27] developit: maxogden: aw :/
[06:27] developit: is ryah Dahl?
[06:27] maxogden: nope we're both in the bay area
[06:28] developit: ahh, just as good.
[06:28] developit: it was mainly for the coffee anyway
[06:28] maxogden: developit: im not sure how strict the hostname thing is. does it still route if you use a totally different domain altogether?
[06:28] developit: damn I miss peets.
[06:28] developit: maxogden: I have only tried subdomains
[06:28] developit: my thoery is that it's using the resolved IP for routing
[06:28] developit: which would be the same for all domains I've tried, as they are all pointing at this box
[06:29] developit: is this a good time for me to finally put NGINX in front of my app? :P
[06:29] RORgasm has joined the channel
[06:29] developit: I feel weird doing it, given the app itself is a proxy. Proxied proxies scare me.
[06:30] maxogden: developit: a simple host checker on top of http.Server https://github.com/mikeal/tako/blob/master/index.js#L729
[06:30] maxogden: developit: basically just check req.headers.host in a handler
[06:30] developit: does that prevent other apps from handling that request?
[06:30] maxogden: and return a 404 if it doesnt match what you want
[06:31] developit: I basically would like to use the same VPS with two hostnames, each being handled by its own request handler.
[06:32] fangel has joined the channel
[06:33] maxogden: http.createServer(function(req, resp) { vps1.emit('request', req, resp)  })
[06:33] maxogden: where vps1 is a http.createServer of it's own
[06:34] developit: ah so I need an http.Server in front of the app's own servers
[06:34] developit: basically a router
[06:34] maxogden: yea pretty much
[06:34] developit: hmm.
[06:34] developit: sounds like something nginx would do for me.
[06:34] maxogden: yes but it depends on whether or not you want to run nginx just to get that little snippet up there
[06:35] developit: true.
[06:35] developit: any thoughts on whether that might change in the future? :P
[06:35] gf3 has joined the channel
[06:35] maxogden: the strictness of the hostname in createserver? i dunno
[06:35] evilnate has joined the channel
[06:35] developit: the Server instance can see those headers and has access to the specific hostname from .listen(), right?  I'm wondering how hard it would be to get the hostname itself into the routing rules
[06:36] cipher__: would anyone mind explaining how to use callbacks to achieve async flow?
[06:36] cipher__: (or a short example :P?)
[06:36] developit: cipher__: in what context
[06:37] Steven_: oh.. thx alot Qzen , BombStrike 
[06:38] Qzen: Steven_ , did you get it to work?
[06:39] nsolsen has joined the channel
[06:39] Steven_: yes. I got the hello world. thx man
[06:39] Qzen: I am glad i could help
[06:39] cipher__: developit, well if i define a "class": var Test = function(err, callback/*that is the standard args?*/) {this.file = '';}; Test.prototype.load(filename, callback?) {this.file = fs.load.etc(filename);}. How could i for example load and print the output asynchronously?
[06:39] groom has joined the channel
[06:39] developit: the callback is a function
[06:40] cipher__: yeah
[06:40] cipher__: so callback(null, loaded_file_string); in the 'load' function then?
[06:41] jetienne has joined the channel
[06:42] plato: hey all, I want to store a grid of vertices and then retrieve them by a coordinate pair. e.g. v1=Vertex(-1,1); but then getVertex(-1,1) needs to return v1. I can't store the Vertex objects in a 2d array because I can't access negative indices, like verts[-1][1]
[06:42] Steven_: Qzen. I made hellowolrd.js  and put console.log("Hello World");  .. and  node helloworld.js   .. I got it on CMD .    if I want to see  on browser.    using   http://localhost/helloworld.html   using node.. what should I put in the html ?
[06:42] developit: cipher__: http://pastebin.com/pieKbHXz
[06:43] developit: plato: you can store negative indices in an Array, but you're addressing them as Object properties
[06:43] ph^ has joined the channel
[06:43] staar2 has joined the channel
[06:43] risto_ has joined the channel
[06:43] Qzen: Steven_ you can try this http://yinsochen.com/nodejs-hello-world/
[06:43] jrostand has left the channel
[06:43] developit: plato: just assign the negative indicies after initializing the array, using square bracket notation as you did for your references
[06:43] Qzen: that will allow you to send text to the client by http-socket
[06:44] `3rdEden has joined the channel
[06:44] developit: plato: only caveat would be that some structured clone algorithms will ignore properties hanging off of Arrays
[06:44] plato: shit really? this has been frustrating me for quite a while... tyvm
[06:45] cipher__: developit, thanks
[06:45] tornad has joined the channel
[06:46] dragansah has joined the channel
[06:46] ewalker has joined the channel
[06:46] fangel has joined the channel
[06:46] bartt has joined the channel
[06:47] developit: plato: if you use an Object for your storage, you can use Strings for the keys 
[06:47] DijkstraGroupie has joined the channel
[06:47] Steven_: omg.. Im seeing the helloworld! on browser..  finally..   thx Qzen. you are the best teacher, made me got this in 10min
[06:47] developit: verts = { '-1':new Vertex(-1,1), '0':new Vertex(2,5) };
[06:47] Qzen: Steven_ , glad i could help... :P
[06:48] abraxas_ has joined the channel
[06:48] developit: then you just make sure you're casting your keys to strings before you assign or reference values when working with that object. It will serialize properly assuming your Vertext object isn't doing anything funky about storing those values passed to the constructor.
[06:48] DijkstraGroupie has joined the channel
[06:48] DijkstraGroupie has joined the channel
[06:48] simenbrekken has joined the channel
[06:49] Guest26027 has joined the channel
[06:49] Guest26027 has left the channel
[06:49] plato: thanks developit 
[06:50] developit: np
[06:50] mikeal has joined the channel
[06:50] Authoritarianism has joined the channel
[06:51] Brandon_R: hi
[06:51] pgte has joined the channel
[06:52] developit: plato: you should add some crazy operator functions to your vector class :)
[06:52] developit: http://jsfiddle.net/developit/Nhv2y/
[06:52] erikzaadi has joined the channel
[06:53] yawNO has joined the channel
[06:53] tvw has joined the channel
[06:54] jacobolu_ has joined the channel
[06:55] mikeal has joined the channel
[06:57] emattias has joined the channel
[06:57] ivanfi has joined the channel
[06:58] rendar has joined the channel
[06:59] DijkstraGroupie has joined the channel
[06:59] DijkstraGroupie has joined the channel
[06:59] ivanfi has left the channel
[07:00] synesp has joined the channel
[07:01] meso has joined the channel
[07:01] hipsterslapfight has joined the channel
[07:02] meso has joined the channel
[07:03] plato: developit i'm actually trying to code a hex grid
[07:03] savudin has joined the channel
[07:03] developit: ah, cool.
[07:03] plato: which is an interesting challenge, not least because it's my first javascript project as well as my first node.js project
[07:04] synesp: plato: good for you man
[07:04] synesp: that's awesome
[07:06] ag4ve: is this a mongoose bug or is it just not raising the right error and i'm doing something wrong? http://paste.scsys.co.uk/189173
[07:08] Industrial: Is there anyone here using JugglingDB?
[07:08] Industrial: I can't get it to work with MongoDB
[07:08] neshaug has joined the channel
[07:09] Industrial: schema = new require('jugglingdb').Schema 'mongodb', url: 'mongodb://127.0.0.1:27017/MyDatabase'
[07:10] ag4ve: Industrial: if you keep irc open, try looking through your scroll, iirc someone asked that a week or so ago and it might help (i don't use juggling though)
[07:10] paulwe has joined the channel
[07:11] Industrial: A week or so? my client doesn't keep a history that long
[07:11] Industrial: also, it might have been me ;p
[07:11] incon has joined the channel
[07:12] weepy has joined the channel
[07:12] hackband has joined the channel
[07:13] weepy: hi Nodesters. 
[07:13] weepy: Is there any reason why process:exit wouldn't fire ?
[07:13] developit: from a child process?
[07:13] weepy: I'm doing: process.on('exit', function() {   console.log('exiting') })    ---- very simple app, but I see nothing 
[07:13] weepy: no just main process
[07:14] ctp6360 has joined the channel
[07:14] ag4ve: hummm, i think i found my issue... maybe: https://github.com/LearnBoost/mongoose/pull/415
[07:14] alm0nd has joined the channel
[07:14] Hebo has joined the channel
[07:14] developit: weepy: I don't see any reason why it wouldn't fire. Has to be something else in your code.
[07:14] ag4ve: ACTION grumbles "this might break backward compatabllity but....." grrrr
[07:15] developit: ACTION wonders if ag4ve is a fan of agave nectar
[07:16] weepy: developit - yes - it seems to be if there's a server 
[07:16] weepy: here's a gist
[07:16] weepy: https://gist.github.com/2213578
[07:16] developit: weepy: it's not exiting until you destroy your server
[07:16] cipher__: is this async? http://pastie.org/private/rlbmla0fzxsalrxtt5uw
[07:17] developit: as long as there are instances of EventEmitter available to emit events, your process lives on.
[07:17] ksys has joined the channel
[07:17] djcoin has joined the channel
[07:17] developit: cipher__: yes, but you shouldn't use throw()
[07:17] cipher__: okay
[07:17] developit: you have "err" in your callback signature
[07:18] developit: pass the error text to the callback in that argument.
[07:18] weepy: developit - well if I do Ctrl+C   the process dies
[07:18] bartt has joined the channel
[07:18] developit: weepy: yes, that should fire the event
[07:18] developit: it doesnt?
[07:18] weepy: the process exits
[07:18] developit: what about pkill -15
[07:18] weepy: but the on exit doesn't run
[07:19] weepy: if there's no server then it runs the exit event
[07:19] benjixx has joined the channel
[07:19] [AD]Turbo has joined the channel
[07:19] [AD]Turbo: hi there
[07:20] dmilith_ has joined the channel
[07:20] bartt has joined the channel
[07:20] weepy: kill -15 kills the process but the exit event isn't run
[07:20] benjixx has joined the channel
[07:20] developit: weepy: ahh, you need signal events. http://nodejs.org/api/process.html#process_signal_events
[07:21] yawNO has joined the channel
[07:21] developit: A quick look at the docs makes me think the "exit" event is for graceful only
[07:21] cipher__: developit, sorry one more question: everything is on the heap right, local stacks are not accessible explicitly? what does the new operator do then? say if i have var s = new String("hi");?
[07:21] bartt has joined the channel
[07:21] developit: it instances the class you specified
[07:21] developit: local variables are scoped within the function you declare them in
[07:22] antz29 has joined the channel
[07:22] cipher__: ok
[07:22] developit: though the global object (root context) has its properties accessible as locals when you are in global scope.
[07:22] weepy: developit - ah i see 
[07:22] developit: weepy: Today I Learned
[07:22] developit: haha
[07:23] bartt has joined the channel
[07:23] developit: the nodejs IRC makes me wish my web chat client was IRC-backed.
[07:24] yawNO: developit: just add irc support
[07:24] yawNO: ain that difficult :D
[07:25] ag4ve: i'm sure you can get some json or soap irc gateway
[07:25] developit: its mostly that I'm lazy.
[07:26] ag4ve: heh, can't help ya there :)
[07:26] developit: There are actually IRC client libraries for node though. I could just make it a bridge
[07:26] developit: (as crappy as that would be)
[07:26] ablomen has joined the channel
[07:26] developit: still, NickServ is a silly idea I'd be wary of promoting
[07:27] misza222 has joined the channel
[07:27] ag4ve: run your own server
[07:27] yawNO: i saw a irc as a service platform
[07:27] yawNO: but i cant remember the name
[07:27] yawNO: :(
[07:27] rio{ has joined the channel
[07:27] developit: ...mibbit? :P
[07:27] yawNO: no
[07:27] yawNO: literally
[07:27] yawNO: a platform
[07:27] yawNO: not a client
[07:27] Edy has joined the channel
[07:28] developit: ah. 
[07:28] developit: If it was more than a spare time project, I might have found that intriguing :P
[07:30] kejun has joined the channel
[07:31] synesp: platforms
[07:31] synesp: I love platforms
[07:31] markwubben has joined the channel
[07:33] trivol has joined the channel
[07:33] Hebo_ has joined the channel
[07:34] hackband has joined the channel
[07:35] developit: lol you sound like some people I work with :P
[07:36] synesp: developit: I work for an advertising network and we're re-working parts of the *platform* and utilizing node in places
[07:36] weepy: developit - thanks that all worked
[07:36] rlidwka: developit: there is irc server written in node.js... have you seen it? I think it's possible to make something nice instead of nickserv there
[07:37] synesp: are their bindings for any GUI libs in node?
[07:37] synesp: there lol!
[07:37] synesp: i just wrote their
[07:37] synesp: its late.
[07:37] AD7six has joined the channel
[07:38] pradeepbv has joined the channel
[07:38] pradeepbv_ has joined the channel
[07:39] maxogden: irccloud and subway
[07:39] cipher__: are there any functions for string parsing anyone would mind referring me to? 
[07:39] PHPFluesterer has joined the channel
[07:40] maxogden: string parsing what
[07:40] SubStack: .. 'beep'.replace(/e/g, 'o')
[07:40] SubStack: where is zee robot
[07:41] maxogden: rebet
[07:41] whitman has joined the channel
[07:41] meandi16 has joined the channel
[07:43] pradeepbv has joined the channel
[07:44] bEEEviz has joined the channel
[07:44] cipher__: maxogden, searching through strings, selecting lines, etc. 
[07:45] djcoin: SubStack aahahak, let me hear the story of a man that switched from haskell to node.js :)
[07:47] sammmy has left the channel
[07:47] s0urce has joined the channel
[07:47] s0urce: morning
[07:47] developit: hi
[07:47] djcoin: 'ning
[07:48] developit: I have a theory:  every time you want to write a startup script (upstart etc), the format has changed.
[07:49] dragansah has joined the channel
[07:49] michaelhartau has joined the channel
[07:50] cipher__: maxogden, using fstream in c++ would could load a file, iterate over each character until finding a match. if (doc[i] == 's') begin = i; ... ?
[07:50] sreeix_ has joined the channel
[07:50] ioscale has joined the channel
[07:50] s0urce: I have a vision and had 2 question on it before i start to realize, i want browser to request only the main index file and load each part of it (like new, votes, etc) async. I already did a prototype with php and ajax, but this isnt the best for it. Here my questions, can i do this more "native" as with socket.io and will search spiders like the google ones get my site rated? ;)
[07:51] alm0nd has left the channel
[07:51] ksys has joined the channel
[07:51] cipher__: ACTION is just trying to find the docs for string functions
[07:51] developit: s0urce: you'd be giving up the "google juice"
[07:51] djcoin: cipher__: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String
[07:51] developit: unless you use html5's history API and create static versions of your pages by rendering them using JSDOM
[07:52] cipher__: i swear i couldn't find anything on google. my googlefu has went down hill since they removed a lot of keywords :(
[07:52] developit: cipher__: prefix your query with "MDN"
[07:52] SamuraiJack has joined the channel
[07:52] s0urce: developit: history api? didnt hear about, but how can this get my red by a static file command?
[07:52] plato has joined the channel
[07:52] plato has joined the channel
[07:53] s0urce: i just guess, but google read my page like a static file doenst it?
[07:53] developit: cipher__: in Node, you can read a file into a String (specify "utf-8" as your stream encoding) and then iterate over the string as you would normally: for (var i=0; i<str.length; i++){ if(str[i]==='s'){ begin=i; } }
[07:54] developit: s0urce: pretty much. They have improved, but the litmus test is still to load your website in Lynx
[07:54] graeme_f has joined the channel
[07:54] cipher__: developit, thanks for all the help tonight.
[07:54] s0urce: why this much code? just: "string".split('').each() ;)
[07:54] developit: s0urce: you're very quick to use function iterators :P
[07:54] developit: they are slow
[07:54] s0urce: slow is so relative ^^
[07:55] developit: to what
[07:55] developit: you're using PHP :P
[07:55] cipher__: assembly :P
[07:55] developit: my point was to make it look the same as his question ;)
[07:55] s0urce: yes, if u used php, all seems to be quick :)
[07:55] salva has joined the channel
[07:55] developit: I used to, sadly.
[07:55] cipher__: doing cgi in assembly is always a fun exercise. 
[07:56] developit: Still haven't finished migrating our stuff from the LAMP stack
[07:56] developit: its close
[07:56] developit: we picked Python for that :P
[07:56] s0urce: i used assembly too, but only for integrated circuit
[07:57] staar2: well when i access the route /post/new, it does add the /post to static content also how ?
[07:57] s0urce: and after we did this in my  training, our teacher told us, there is a c framework wich do the same in 10% of the code- .-
[07:58] skeptic has joined the channel
[07:59] s0urce: dont know if u ever heard about autoit and qt4, for botch there is an apache module like php, this would  to be interessting too, if there would be no node.js ;)
[07:59] s0urce: both*
[08:00] Stoobles has left the channel
[08:01] sreeix has joined the channel
[08:01] s0urce: ok, back to my idea. if there is an problem with google, the i'll send the page full at first request, but how about loading the single divs updates async, is socket.io really the best solution atm?
[08:01] ioscale has joined the channel
[08:01] developit: s0urce: no
[08:02] Topcat has joined the channel
[08:02] developit: Socket.IO is something you would use if you wanted to push content
[08:02] developit: in the case of your page, you should just poll.
[08:02] developit: every N seconds, you fire off an ajax request and pull down a bit of data to template into those divs.
[08:03] s0urce: i dont just wanna get refresh of new, if the user request it, i want to pull them if there is a new news
[08:03] flou has joined the channel
[08:03] s0urce: why should i poll if i could push?
[08:03] developit: but you don't need the server to be the one who decides.
[08:03] developit: because its less resource intensive.
[08:03] s0urce: rly?
[08:03] developit: you could also use HTTP long-polling.
[08:03] s0urce: i thought the opposite
[08:03] developit: yes, having open connections consumes more RAM and CPU
[08:04] developit: thats not news :P
[08:04] hipsterslapfight has joined the channel
[08:04] s0urce: just read iX web magazin
[08:04] developit: few occasional updates VS stalled TCP connection
[08:04] s0urce: and they say, its much more resource itensive to poll
[08:04] developit: never heard of the magazing
[08:04] developit: depends on what you're implementing
[08:04] s0urce: u dont know iX?
[08:04] s0urce: heise, cT, iX?
[08:04] developit: a web chat, you probably want some form of COMET
[08:05] herbySk has joined the channel
[08:05] developit: for a web page (where you probably have multiple modules that want new data), you probably don't want 50,000 open connections to your server.
[08:05] s0urce: the only problem is see atm wich websockets if the proxy thing
[08:05] developit: also, if you're worried about Google crawling your pages, you're probably making an actual website (not an app), so you're probably not able to use WebSockets yet
[08:05] developit: the adoption isn't mass market yet
[08:06] s0urce: :(
[08:06] developit: Windows 8 and a few new Android phones might get us there
[08:06] developit: but we're not there yet
[08:06] developit: look up HTTP Long-Polling
[08:06] developit: its easy
[08:06] developit: node does it very well
[08:06] developit: it lets you do push
[08:06] developit: it's also sort-of like DDoSing yourself, but there are ways to make that less terrible.
[08:06] s0urce: do u got any module name for me for this?
[08:06] developit: I haven't tried any
[08:06] slaskis has joined the channel
[08:07] developit: I'm more of a "from scratch" person 
[08:07] developit: (its a curse)
[08:07] developit: there is a long-polling transport in Socket.IO
[08:07] developit: but again, I would question why you feel the need to push updates to a web page
[08:07] s0urce: i like lightweight too, thats why i started to build my own jquery lib, but all the me, this is like build a new wheel
[08:07] developit: an app is different. news isn't something most users need pushed to them - we barely have push email at this point
[08:08] developit: :P
[08:08] developit: http://puredom.socialseek.com/
[08:08] developit: everybody has their own "its like jquery but not"
[08:08] developit: that's mine haha
[08:08] lperrin has joined the channel
[08:08] s0urce: ^^
[08:08] tvw has joined the channel
[08:09] developit: if you're interested in that HTML5 history API, view the source of that documentation. I used it for the page loader.
[08:09] developit: apologies for the inline html parser
[08:09] s0urce: i was a prototype/mootools fans, but these times, u need to use jquery /
[08:09] developit: :P
[08:09] bearnard has joined the channel
[08:09] developit: those are very different beasts
[08:09] antdillon has joined the channel
[08:09] skomski has joined the channel
[08:09] pid has joined the channel
[08:10] Aiden has joined the channel
[08:10] hackband has joined the channel
[08:10] developit: eg: in Carbyn, we have UI libraries that provide common interface elements. It's faster to develop, but it can be less flexible.
[08:10] s0urce: i like the prototype syntax much more, this $('a').css('foo','baar'); rly confused me, dirty crap
[08:10] s0urce: tried about 1h to each() each element -.-
[08:11] s0urce: back to the root, what can i use to long poll with node?
[08:11] s0urce: is native implemented?
[08:11] maxogden: require('http')
[08:12] s0urce: there is much to much infos about node, i stack at this yui thing, not sure if it is cool or crap
[08:12] lk has joined the channel
[08:13] s0urce: then i shortly tried to rune this "fayde", also not sure if it is rly useful
[08:13] s0urce: run*
[08:13] maxogden: it would be more impressive if you runed it
[08:13] maxogden: like... celtically
[08:14] robi42 has joined the channel
[08:14] s0urce: not good?
[08:15] s0urce: but the most strange thing were these template engines, i just build my own now, with normal html replacements like in php
[08:15] s0urce: just one comment at YUI plz, is it worth to read in, or not?
[08:16] lk has left the channel
[08:17] lk has joined the channel
[08:17] synesp has left the channel
[08:18] lk has left the channel
[08:18] tokumine has joined the channel
[08:19] developit: YUI is well-designed.
[08:19] developit: it's an opinionated framework, be warned.
[08:20] bergie has joined the channel
[08:21] developit: YAY!!
[08:21] developit: maxogden: I got that working :)
[08:21] developit: via node-http-proxy
[08:21] djazz has joined the channel
[08:22] developit: http://jsonp.net/%7B%22url%22:%22http://nodejs.org/%22,%22headers%22:%7B%7D,%22body%22:%22%22%7D
[08:22] aliem has joined the channel
[08:22] developit: woot.
[08:22] mikedeboer has joined the channel
[08:23] dobber has joined the channel
[08:24] sammmy has joined the channel
[08:25] kejun has joined the channel
[08:25] sammmy: I can't seem to get bouncy to route subdomains and I tried "*.mydomain.com": 8000
[08:25] gavin_huang has joined the channel
[08:25] developit: sammy: I just fixed the same problem. You mean with http.Server ?
[08:25] developit: ahh, nvm. 
[08:26] erikzaadi has joined the channel
[08:26] developit: Also, it doesn't look like bouncy even supports wildcards.
[08:26] sammmy: substack: Help! D:
[08:26] sammmy: developit: htf do I do it then?
[08:27] robi42_ has joined the channel
[08:27] developit: sammmy: You probably have to modify the source.
[08:28] sammmy: Or use a script
[08:28] developit: that is a script :P
[08:29] developit: I mean, if you're just using it for vhosts-like support, you could do what I just did
[08:29] sammmy: No what I mean is not use the CLI, rather use the require() method
[08:30] developit: sammy: https://github.com/nodejitsu/node-http-proxy/blob/master/examples/http/proxy-table.js#L35
[08:30] developit: ah
[08:30] developit: not sure how you'd use the cli for that, iptables is limited to port forwarding. You could use an nginx proxy, or the solution I posted there ^
[08:31] developit: basically sticking a thin HTTP server with hostname-based routing in front of your app's http.Server
[08:31] developit: rather than doing those logical forks within your codebase.
[08:31] developit: anyway, im beat. good luck with it.
[08:32] vguerra has joined the channel
[08:33] skm has joined the channel
[08:34] stagas has joined the channel
[08:36] SubStack: sammmy: just write a script
[08:36] __doc__ has joined the channel
[08:36] dragansah has joined the channel
[08:37] sammmy: SubStack: I'm thinking of forking your github project, modifying the /bin/bouncy.js file, and then pestering you with a pull request. =D
[08:37] DijkstraGroupie has joined the channel
[08:37] SubStack: I don't even use the bin script for anything so go right on ahead
[08:38] SubStack: you can use a route name of "" as a wildcard fall-through though
[08:40] sammmy: SubStack: I know. But what I want is to have two domains that can have subdomains. 
[08:41] sammmy: I just need to figure out how I would modify line 16..hmmm
[08:41] sinclair has joined the channel
[08:43] staar2: when i set the express to production mode, the erros show me 'internal error' ?
[08:46] aranw has joined the channel
[08:47] gavin_huang has joined the channel
[08:48] guidocalvano has joined the channel
[08:49] maritz has joined the channel
[08:49] dannyamey has joined the channel
[08:50] jspiros has joined the channel
[08:51] bergie has joined the channel
[08:51] aron_ has joined the channel
[08:51] ewalker has left the channel
[08:52] tommyvyo has joined the channel
[08:53] ioscale has joined the channel
[08:53] timoxley: staar2 can't help without more information.
[08:54] staar2: error handling in production mode, all error requests are shown in plain text page with Internal Server Error
[08:56] adambeynon has joined the channel
[08:56] hz has joined the channel
[08:57] mattyh88 has joined the channel
[08:57] mattyh88: hey, what does the ./configure thingie do exactly? 
[08:58] SubStack: staar2: that is somewhat hilarious
[08:59] radiodario: mattyh88: it 'configures' your build environment
[08:59] radiodario: checks that you have the required programs to build node.js
[08:59] radiodario: and tells you what you might not have 
[08:59] radiodario: is it the first time you build something from source?
[09:00] astropirate has joined the channel
[09:00] adambeynon has joined the channel
[09:00] zackattack has joined the channel
[09:01] SubStack: that switching a configuration would cause errors
[09:01] Steven_: wow. node.js is so cool.
[09:02] timoxley: staar2 that's the default in production mode, for security. you can adjust it: http://expressjs.com/guide.html#error-handling
[09:02] darrenlooby has joined the channel
[09:02] Steven_: im trying some tutorials... : )  so funny. 
[09:04] xippi has joined the channel
[09:04] xippi has joined the channel
[09:05] DrPheltRight has joined the channel
[09:06] markwubben has joined the channel
[09:10] rlidwka: what do you suggest for speech recognition? is there something for that?
[09:10] mattyh88: radiodario: yeah pretty much 
[09:10] mattyh88: so that ./configure thingie can't do any harm really? 
[09:10] mattyh88: just checks some things? 
[09:10] dmilith_ has joined the channel
[09:10] oldsplice has joined the channel
[09:10] radiodario: you *have* to run it
[09:10] radiodario: nothing does any harm
[09:10] radiodario: except rm -r /*
[09:11] mattyh88: haha 
[09:11] mattyh88: yeh but didn't have any good experience in the past with 'make' 
[09:11] radiodario: well time to get some
[09:11] TomY has joined the channel
[09:12] mattyh88: :p
[09:14] krnl has joined the channel
[09:14] pickelsss has joined the channel
[09:14] erujolc has joined the channel
[09:15] erujolc: where can I find the default code for uncaughtException, as it print hidden member such as .stack when available, util.inspect doesnt cut it, would be good to take a peek
[09:16] tokumine has joined the channel
[09:16] justmoon has joined the channel
[09:17] satyr has joined the channel
[09:19] erikzaadi has joined the channel
[09:20] sammmy: SubStack: Just made a pull request. ;P
[09:21] robi42 has joined the channel
[09:22] dragansah has joined the channel
[09:22] sammmy: SubStack: https://github.com/substack/bouncy/pull/29
[09:25] master5o1 has joined the channel
[09:25] master5o1: hai.
[09:27] hgg has joined the channel
[09:28] DrPheltRight has joined the channel
[09:28] mattyh88: isn't there any docs out there that will tell me how to install node.js? 
[09:29] igl1: http://lmgtfy.com/?q=how+to+install+node.js
[09:30] prasak has joined the channel
[09:30] astropirate: LOLOL
[09:30] TimTimTim has joined the channel
[09:30] mattyh88: yeh okay ... haha did that :p but there aren't any really detailed instructions out there
[09:30] mattyh88: like what does 'make' exactly do 
[09:31] mauritslamers has joined the channel
[09:31] astropirate: mattyh88, what OS are you running?
[09:31] mattyh88: centos 
[09:31] astropirate: ok
[09:31] astropirate: make builds it
[09:31] astropirate: compile link.. etc
[09:31] astropirate: make install installs it
[09:31] mattyh88: ah ok
[09:31] tommyvyo has joined the channel
[09:33] mattyh88: takes quite a long time 
[09:34] master5o1: Been playing with node for a week as a learning exercise, this is what I made :D http://121.98.163.33:3000/
[09:34] garrensmith: master5o1: nice looks pretty cool
[09:35] astropirate:  mattyh88 yup
[09:35] master5o1: Still have some things to iron out.
[09:35] astropirate: master5o1, how are those pictures being downloaded?
[09:36] astropirate: they load... wiered
[09:36] master5o1: :)
[09:36] antz291 has joined the channel
[09:36] astropirate: interlaced?
[09:37] master5o1:         stream.pipe(res)
[09:37] astropirate: ahh
[09:37] master5o1: stream is from the Mongolian deadbeef gridfs stream.
[09:37] master5o1: I suppose there is a better way?
[09:38] quijote has joined the channel
[09:39] SubStack: sammmy: that is a silly way of doing it with an incongruous style (newline {s)
[09:40] SubStack: why not just find a wildcard module and use that?
[09:40] SubStack: or treat the keys as regexps if they start with / and end with /
[09:40] Joe-Joe has joined the channel
[09:41] erujolc: master5o1, minor suggestion correct you package json or soon you may find breaking dependencies, say you on expressjs 2.6.14 then put ~2.6.14 this will give you a version >= 2.6.14 < 2.7 
[09:41] master5o1: O rly?
[09:41] master5o1: Cool.
[09:43] Vennril has joined the channel
[09:44] antz291 has joined the channel
[09:45] jimmysparkle has joined the channel
[09:48] SubStack: I hate it when people ruin code reusability by writing ad-hoc feature detection on window/module.exports/define
[09:48] SubStack: just encountered another instance of this >_<
[09:48] master5o1: :O
[09:49] Vespakoen has joined the channel
[09:50] Vespakoen has left the channel
[09:52] bradleyg has joined the channel
[09:53] mattyh88: i've done this: https://gist.github.com/2214497, i go to ip_of_my_server:8819 but i don't see the hello world message? 
[09:53] radiodario: have you run the node js app?
[09:53] radiodario: i.e. node app.js?
[09:53] radiodario: or whatever you've called it?
[09:53] mattyh88: yes 
[09:53] radiodario: do you have a firewall?
[09:54] mattyh88: no, it's disabled 
[09:54] mattyh88: ah whait
[09:54] radiodario: have you tried using localhost:8819 instead of the ip?
[09:54] mattyh88: it's not disabled anymore
[09:54] radiodario: or 127.0.0.1
[09:54] mattyh88: someone turned it on again 
[09:54] radiodario: you should be fine using localhost 
[09:55] Wizek has joined the channel
[09:55] mattyh88: don't think so as i'm running it on the local server here 
[09:55] mattyh88: not directly on my computer 
[09:55] radiodario: ah
[09:56] stagas: mattyh88: that code is outdated
[09:56] eduardostalinho has joined the channel
[09:56] pksunkara: mattyh88: what is your node version? (node -v)
[09:57] erujolc: if received an Error object either via try/catch or it is passed to callback as the first arg. Is it bad practice to suffix the message with something relevant err.message = 'Some relevant context about this\n' + err.message; throw err;
[09:57] mattyh88: latest one 
[09:57] stagas: mattyh88: see the example in http://nodejs.org/
[09:57] mattyh88: 0.6.14 
[09:57] pksunkara: mattyh88: it should be setHeader not sendHeader
[09:58] pksunkara: and response.end() not response.close()
[09:58] maritz: what's the best way to do fulltext dbs/searches with node.js? preferably using redis. (reds is nice, but doesn't support pagination yet)
[10:00] mattyh88: okay thx .. i'll try again and configure the firewall :)
[10:02] tokka has joined the channel
[10:03] cipher__away: I am having some issues wrapping my mind around async behavior, and have produced some pretty wretched code: http://pastie.org/private/szxo9gqgkglgy5lyd0i48w ... Would anyone mind telling me where it become synchronous?
[10:04] hellp has joined the channel
[10:04] TheJH has joined the channel
[10:06] fangel has joined the channel
[10:07] cipher__away: http://pastie.org/private/qczgmzjlysdilk9xtt7q
[10:07] cipher__away: *
[10:07] Zharktas: cipher__away: i think it is allready async, you could print something between lines 50 and 51 to check it
[10:07] cipher__away: alright, because i always get this error: data was not initialized.
[10:07] Zharktas: since you print in your callbacks, you won't see the asynchronous run
[10:07] cipher__away: data == null
[10:08] cipher__away: Zharktas, sorry i do not follow? 
[10:08] cipher__away: i wont see it run?*
[10:08] odyniec has joined the channel
[10:09] mattyh88: i suppose the node httpserver should run on another port than the one that the actual website is running on, right? :p
[10:09] cipher__away: i don't think your file-descriptors would appreciate it
[10:10] stagas: cipher__away: in the readFile callback, 'this' has changed
[10:11] cipher__away: oh :S
[10:11] stagas: cipher__away: so you need to save it before that call, var self = this; and do: self.data = new String(data);
[10:11] Zharktas: oh yeah, that too
[10:12] cipher__away: stagas, thank you. i really need to get the idea this is just an odd traditional class out of my mind
[10:13] fangel has joined the channel
[10:13] njain has joined the channel
[10:14] Zharktas: cipher__away: and i meant printing something between lines 50 and 51 to see that it is actually async, since it shouls print it before calling callback-functions
[10:14] cipher__away: ok
[10:14] larsschenk has joined the channel
[10:15] larsschenk1 has joined the channel
[10:15] larsschenk1 has left the channel
[10:16] cipher__away: stagas, when in callbacks can i refer to data as preParser.data, or will that be 'instanceless'?
[10:17] stagas: cipher__away: no you can't, 'this' holds the instance
[10:17] erujolc: when using heroku logging is it a good idea to flatten a log message to a single line e.g. if(e.stack) { process.stderr.write(e.stack.replace(/\n/g,'|') }
[10:17] cipher__away: just making sure 
[10:18] stagas: cipher__away: it's a little tricky at first but it's easy once you get it
[10:19] cipher__away: stagas, haha i hope so
[10:19] erikzaadi has joined the channel
[10:22] Sadin has joined the channel
[10:24] cipher__away: stagas, is this what you meant: http://pastie.org/private/0p7h9jg8tbbzeryi2jg ? (it's not working, self.anything is undefined? or did the scope change loose that variable self?) 
[10:24] cipher__away: in which case i am completely lost. 
[10:25] Zharktas: cipher__away: you must set self = this before the function call
[10:25] cipher__away: oh wow, i am blind
[10:25] cipher__away: ACTION thought he did
[10:25] stagas: cipher__away: yeah it should work
[10:25] rio{{ has joined the channel
[10:25] cipher__away: wait, what? 
[10:25] cipher__away: i did?
[10:27] stagas: cipher__away: what's the error you get? that code should be ok
[10:28] fermion has joined the channel
[10:28] cipher__away: 'undefined', it must be an error else where, brb.
[10:28] stagas: cipher__away: the indentation is confusing, you should write as if it's strict, otherwise things will get messy
[10:28] cipher__away: ok
[10:29] cipher__away: gedit's indentation helper is rather lacking (are there any node editors?)
[10:29] stagas: cipher__away: sublime2 is awesome
[10:29] daglees has joined the channel
[10:29] daglees has joined the channel
[10:30] cipher__away: sublime2 segfaulted for me lol
[10:30] salva has joined the channel
[10:30] cipher__away: (64bit linux)
[10:30] RORgasm has joined the channel
[10:30] __doc__ has joined the channel
[10:30] ablomen: cipher__away, did you check plugins? there should be a few handling different kinds of indentation
[10:33] milani has joined the channel
[10:34] cipher__away: ablomen, my version of gedit has no such plugin
[10:34] ablomen: http://live.gnome.org/Gedit/Plugins
[10:35] milani: Can anyone help me with node-gui?
[10:35] nicholas_ has joined the channel
[10:35] milani: I tried to implement webkit web view for node-gui, but I get an error I can not handle 
[10:35] tokka has left the channel
[10:36] ablomen: anyway, something like vim should do anything you'd ever need
[10:36] TheJesus has joined the channel
[10:36] ablomen: after you have configured it that is..
[10:36] kejun has joined the channel
[10:37] TheJesus: hi
[10:37] TheJesus: is there a way to override the installation directory using the node.js Windows msi? 
[10:39] TomY has joined the channel
[10:40] krnl` has joined the channel
[10:40] cipher__away: ablomen, thanks. stagas (not that you want updates) but i fixed it
[10:41] skm has joined the channel
[10:41] stagas: cipher__away: cool! :)
[10:41] cipher__away: ACTION made a little typo :P
[10:41] mattyh88: if i go to this url : http://local_ip:8819/test.js?query=50, then url.parse(request.url, true) should return '50' really? 
[10:44] myndzi\ has joined the channel
[10:44] TheJesus: mattyh88: url.parse returns an object full of info
[10:44] tomnewmann has joined the channel
[10:44] mattyh88: eh yes .. I meant this: https://gist.github.com/2214762 :)
[10:45] mattyh88: parsed.query should return 50 ? :)
[10:45] TheJesus: but console.log(url.parse('http://local_ip:8819/test.js?query=50', true).query.query);
[10:45] theCole has joined the channel
[10:45] TheJesus: parsed.query.query
[10:45] TheJesus: you have a query parameter named "query"
[10:45] mattyh88: ah i see 
[10:45] mattyh88: okay
[10:45] mattyh88: thx :)
[10:46] TheJesus: np!
[10:46] master5o1: which one of you uploaded sample.avi to my Dumploader?
[10:46] master5o1: :P
[10:47] josh-k has joined the channel
[10:48] pksunkara has left the channel
[10:48] milani: anyone familiar with node-gui here?
[10:48] master5o1: nep
[10:48] master5o1 has left the channel
[10:53] cipher__away: stagas, i will attempt to stop highlighting you.. i cannot see where there was typecast to object from string with the variable preParser.data  --  http://pastie.org/private/zkqxsqr5weyfojwmmu9w
[10:53] cipher__away: was a*
[10:54] stagas has joined the channel
[10:55] cipher__away: stagas, i take it you did not receive my last question?
[10:57] k1ttty has joined the channel
[10:58] k1ttty_ has joined the channel
[10:59] nsolsen has joined the channel
[11:02] zdk has left the channel
[11:02] PHPFluesterer_ has joined the channel
[11:03] abraxas has joined the channel
[11:04] dekub has left the channel
[11:05] enmand has joined the channel
[11:05] nsolsen has joined the channel
[11:07] enmand_ has joined the channel
[11:09] rickibalboa has joined the channel
[11:15] dylang has joined the channel
[11:15] stagas: cipher__away: yeah 'new' always returns an object type, try just String(data) or data.toString()
[11:15] Steven_ has joined the channel
[11:15] krnl has joined the channel
[11:16] webguynow has joined the channel
[11:16] stagas: cipher__away: but since you already said it's 'utf8' it should be a string anyway
[11:17] __doc__ has joined the channel
[11:18] SomeoneWeird: Trying to install geoip module and getting this http://pastebin.com/EZmQCJJp
[11:18] broofa has joined the channel
[11:19] cipher__away: stagas, wow, my stupidity surpasses even my expectations; then again in my defense, all of this is turning into a meaningless amalgam the later is becomes ;P (5:19am)
[11:22] skomski has joined the channel
[11:26] rio{{: Ive asked before but, there is no built in way to set a timeout for UDP socket?
[11:26] TheJH has joined the channel
[11:28] fangel has joined the channel
[11:28] SomeoneWeird: anyone?
[11:29] stagas has joined the channel
[11:30] sharkbird has joined the channel
[11:31] ehedenst has joined the channel
[11:31] antz29_: @SomeoneWeird your probably best asking the packages maintainer - details here: http://search.npmjs.org/#/geoip
[11:31] SomeoneWeird: yeah, will do just thought it could be worth asking in here first :)
[11:33] fairwinds_ has joined the channel
[11:34] RandallKent has joined the channel
[11:38] cipher__away: i need to enforce ordered behavior, can't i encapsulate it in parentheses or such?
[11:39] baudehlo has joined the channel
[11:39] dragansah has joined the channel
[11:39] cipher__away: (function() {code;}); (function() {code2;});
[11:40] zackattack has joined the channel
[11:40] klaustsen has joined the channel
[11:42] __doc__ has joined the channel
[11:43] mattgifford has joined the channel
[11:43] master5o1 has joined the channel
[11:45] sadjow has joined the channel
[11:46] anubhaw has joined the channel
[11:46] cipher__away: f i need to enforce ordered behavior in a function that loops through a string in order to find positions, that the next loop uses in order to parse. can i not use something like (function(){code;});?
[11:46] meso_ has joined the channel
[11:46] tomnewmann has joined the channel
[11:47] cipher__away:  i need to enforce ordered behavior in a function that loops through a string in order to find positions, that the next loop uses in order to parse. can i not use something like (function(){code;});?*
[11:47] antz29_: @cipher__away not sure what you are trying to do thereâ€¦ (function() {code;}); (function() {code2;});
[11:48] cipher__away: neither am i... I am trying to force them to complete 'in order'
[11:48] erujolc: looking at sending UDP with node dgram.send it provdes a final callback which manual say " The only way to know for sure that a send has taken place is to use the callback."
[11:48] erujolc: i thought you couldnt be sure UDP has been successfully sent..
[11:48] erujolc: ah i see sent not received
[11:49] antz29_: umm, in what way? how are they not running in order at the moment. also, that code defines two functions, it doesn't execute them
[11:49] cipher__away: antz29_, code1 is dependent on code2's completion
[11:49] cipher__away: they are both loops
[11:49] antz29_: have you looked at async?
[11:49] bnoordhuis has joined the channel
[11:49] cipher__away: yes, i am trying to learn it
[11:50] cipher__away: i have been making headway
[11:51] antz29_: so you probably want to use the waterfall or series pattern in that to create that kind of dependency
[11:51] cipher__away: i don't know the nomenclature though :P. (will google that)
[11:52] ovaillancourt has joined the channel
[11:52] antz29_: https://github.com/caolan/async and check out the readme
[11:52] antz29_: in the Control Flow section there are the docs for 'series'
[11:53] antz29_: with examples
[11:53] cipher__away: thanks antz29_ 
[11:53] guidocalvano has joined the channel
[11:54] bkaney has joined the channel
[11:54] antz29_: no worries
[11:55] antz29_ has left the channel
[11:55] antz29_ has joined the channel
[11:56] master5o1 has left the channel
[11:56] mattgifford has joined the channel
[11:57] antz29_: @erujolc "Best thing about UDP jokes is that it doesn't matter if anybody gets them" ;)
[11:58] Juan77 has joined the channel
[11:58] cipher__away: that is incredibly lame xD
[12:01] lackac has joined the channel
[12:01] erujolc: hmmm not looking good node: ../src/udp_wrap.cc:284: static v8::Handle<v8::Value> node::UDPWrap::DoSend(const v8::Arguments&, int): Assertion `Buffer::HasInstance(args[0])' failed.
[12:02] sharkbird has joined the channel
[12:02] erujolc: my mistake
[12:06] kesor_ has joined the channel
[12:06] quackslike has joined the channel
[12:07] MerlinDMC has joined the channel
[12:08] j01 has joined the channel
[12:09] j01: having trouble with node sessions.  cool to ask about it in here?
[12:09] j01: using express
[12:10] erichynds has joined the channel
[12:12] horofox has joined the channel
[12:12] oldsplice has joined the channel
[12:13] arduix has joined the channel
[12:15] cipher__away: is it possible to use callbacks on function declared within the parentheses?
[12:15] cipher__away: so i could just link together dependencies in that manor?
[12:16] ksys has joined the channel
[12:17] infynyxx has joined the channel
[12:17] njain has joined the channel
[12:19] timoxley: cipher__ wat
[12:19] cipher__: timoxley, when you declare a function in ()'s it is self-contained right?
[12:20] cipher__: well, essentially i want to create the normal function(variable, function() {}); sort of scheme, with self contained functions.
[12:20] timoxley: cipher__ no, I think you're talking about closures
[12:20] cipher__: ok
[12:21] cipher__: at the moment i have to keep adding methods to my main "class" everytime i want to do an operation that requires order
[12:21] timoxley: cipher__ can you show some code
[12:21] cipher__: timoxley, yes.
[12:21] yumike has joined the channel
[12:24] timeimp has joined the channel
[12:24] cipher__: timoxley, actually i seemed to have fixed it: http://pastie.org/private/xocmzooapinhrdwhyfmq on line 48, it was displaying randomly during the for loop's operation?
[12:24] Wizek has joined the channel
[12:24] arthurdebert has joined the channel
[12:24] timeimp: hi everyone - node.js newbie here. I have installed node + npm on windows, but when I run: npm install socket.io the whole operation fails with a 'tunneling error (error=getaddr
[12:25] timeimp: is this a bug in this release or can I fix it somehow?
[12:26] rickibalboa has joined the channel
[12:26] fumanchu182 has joined the channel
[12:26] pickelsss has joined the channel
[12:27] timoxley: cipher__ be aware that console.log is asynchronous 
[12:27] timoxley: cipher__ console.error is sync
[12:27] s0urce: hi timeimp, i tried this too, but it seems not to work on windows
[12:27] s0urce: my only tip is, use a debian, there the installtion works like a charm
[12:27] jmar777 has joined the channel
[12:27] cipher__: timoxley, at the moment does it seem my code would behave as it seems intended?
[12:28] timeimp: s0urce: oh dear. Well, I also downloaded the socket.io from Github, extracted it, went to tun it, and it says "will install depdenancy on istelf" :S?
[12:28] timoxley: cipher__ also, what is going on with your formatting?
[12:28] cipher__: timoxley, gedit
[12:28] cipher__: i blame it all on gedit
[12:29] timoxley: cipher__ ?
[12:30] cipher__: timoxley, it's the analog to wordpad for linux
[12:30] sadjow has left the channel
[12:30] briancray has joined the channel
[12:30] timoxley: cipher__ yep. is it  mixing tabs and spaces
[12:30] RORgasm has joined the channel
[12:31] cipher__: timoxley, i will make so to fix it up later :p
[12:31] cipher__: sure*
[12:32] indy3 has joined the channel
[12:32] tuhoojabotti: how do I use JSONStream to stringify objects to a file
[12:34] yawNO has joined the channel
[12:37] zackattack has joined the channel
[12:37] thomblake has joined the channel
[12:37] thomblake has left the channel
[12:38] sadjow has joined the channel
[12:39] timoxley: cipher__ also http://www.devthought.com/2011/12/22/a-string-is-not-an-error/
[12:40] dylang has joined the channel
[12:40] cipher__: timoxley, thanks
[12:41] j01: trying to get sessions configured with express 2.5.8.  In my app.js I have: http://pastie.org/3677773 but I get this 500 error when trying to access req.flash(): "Error: req.flash() requires sessions" Any ideas?
[12:42] brianseeders has joined the channel
[12:44] davidsklar has joined the channel
[12:45] tuhoojabotti: Got it
[12:45] tuhoojabotti: Ny JSON Logger is now prefect :P
[12:46] aranw has joined the channel
[12:47] colinclark has joined the channel
[12:47] jetienne has joined the channel
[12:49] c4milo has joined the channel
[12:49] yawNO has joined the channel
[12:50] timeimp: oh this is just so stupid.
[12:50] skm has joined the channel
[12:51] seanstickle has joined the channel
[12:52] seanstickle has joined the channel
[12:52] timeimp: could someone help me with this pastie?: http://pastie.org/3677856
[12:52] timeimp: (thanks in advance!)
[12:53] timoxley: j01 I think your middleware are out of order
[12:54] timoxley: j01 move static and router to the end
[12:54] timoxley: j01 and swap method + bodyParser
[12:54] j01: timoxley sweet, that did it, thanks!
[12:55] timoxley: awesome.
[12:55] s0urce: timeimp: looks like some nat problem?
[12:55] s0urce: mb
[12:55] timeimp: s0urce: nope, no proxies at all
[12:56] jimmyrcom has joined the channel
[12:56] timeimp: s0urce get config proxy (and https-proxy) both return 'https-proxy' ;; is that normal?
[12:56] s0urce: router?
[12:56] timeimp: s0urce: router is setup to allow nat traversal.
[12:56] josh-k has joined the channel
[12:57] s0urce: ok, as i said, i didnt get it run under win too, was just an idea
[12:57] dotmariusz has joined the channel
[12:58] timeimp: s0urce: ok. is there another commonly-used node package I could test?
[12:58] mattyh88: if my page in my webapplication needs node.js, how does that work? I just need to include the js file? 
[12:59] jgaui_ has joined the channel
[12:59] mattyh88: and it will automatically start the httpserver or ? 
[12:59] timoxley: mattyh88 you need to boot nodejs on some machine
[12:59] timoxley: mattyh88 have it listen for connections on some port
[12:59] timoxley: mattyh88 then ahve web browser connect to said machine on said port
[13:00] spcshpopr8r has joined the channel
[13:00] timoxley: mattyh88 via a normal url. It's no different conceptually to any other serverside platform 
[13:00] timoxley: â€¦for this purpose.
[13:01] mattyh88: i have a page in my application that has to wait for an incoming price 
[13:01] timoxley: mattyh88 where does the price come from
[13:01] mattyh88: some software on another server
[13:01] qjcg has joined the channel
[13:01] timoxley: mattyh88 is that other server web-accessible?
[13:02] mattyh88: no
[13:02] mattyh88: well i can upload things to that server
[13:02] timoxley: mattyh88 how will node get things off that server?
[13:02] rektide has joined the channel
[13:03] mattyh88: the software could call an url when it has calculated the price?
[13:03] AaronMT has joined the channel
[13:03] timoxley: mattyh88 how do you tell the software what price to calculate?
[13:03] indy3 has joined the channel
[13:03] mattyh88: when a user clicks a button in my appl. it exports a textfile that gets uploaded to that other server
[13:03] lduros has joined the channel
[13:04] mattyh88: based on that it calculates the price
[13:04] TomY has joined the channel
[13:04] rt7 has joined the channel
[13:05] timoxley: your web application uploads a file to this other server, which then does some calculations and then you have the option of having it call some url
[13:05] Lee- has joined the channel
[13:05] Lee- has joined the channel
[13:05] mattyh88: would that work? 
[13:06] timoxley: mattyh88 are the prices custom? as in, how will you track whose price belongs to which url call?
[13:06] mattyh88: that software could put in a parameter (like the purchaseId ?)
[13:06] mehale: would anyone mind to take a look here? I cant make the stream.pipe to work (line 5): http://pastebin.com/WM516iHt
[13:06] shinuza has joined the channel
[13:07] vguerra_ has joined the channel
[13:07] timoxley: mattyh88 but it'd also have to recieve the purchase id from the browser. does that mean you have control over this software?
[13:08] devdazed has joined the channel
[13:08] mattyh88: what do you mean with 'receive the purchase id from the browser' ? 
[13:08] mattyh88: i don't have control over that software, no 
[13:09] timoxley: mattyh88 if I were you, I'd have the browser talk to nodeâ€¦ via http, and then have node talk back and forward with the awkward software
[13:09] rauchg has joined the channel
[13:09] nsolsen has joined the channel
[13:09] vguerra__ has joined the channel
[13:10] mattyh88: yes that's what i'm trying to do 
[13:10] mattyh88: but i don't understand when this http.createServer starts to work? as for now, for my test examples, I have to manually start the server all the time? 
[13:10] mattyh88: and let it listen to port 8819 for example 
[13:10] timoxley: mattyh88 yes, that's correct
[13:11] timoxley: mattyh88 you can use various tools to restart the server when files change.
[13:11] remysharp has joined the channel
[13:11] sharkbird has joined the channel
[13:12] timoxley: mattyh88 I use nodemon for that purpose. works ok. might be something newer
[13:13] sharkbird has joined the channel
[13:13] mattyh88: but let's say .. one user is busy with ordering .. it's waiting for it's price .. and server is listening to all requests on port 8819. If another user is waiting for it's price on that exact same moment, .. how would that work? How does it know which price to send to which user? 
[13:14] vkareh has joined the channel
[13:15] crutex has joined the channel
[13:17] tprice has joined the channel
[13:20] madtimber has joined the channel
[13:21] tahu has joined the channel
[13:22] TomY has joined the channel
[13:22] Edy has joined the channel
[13:23] jtrudeau has joined the channel
[13:24] [[zz]] has joined the channel
[13:25] saghul has joined the channel
[13:26] robhawkes has joined the channel
[13:28] piscisaureus_ has joined the channel
[13:29] yawNO: maritz: ping
[13:30] M1l3n1um has joined the channel
[13:31] maritz: yawNO: po --- WARNING DATA LOSS IMMINENT -- n
[13:31] yawNO: i knew OSI wasnt reliable
[13:31] yawNO: tell me
[13:31] yawNO: how do you set Cloud9 to allow every command from the online terminal?
[13:31] maritz: no idea
[13:31] yawNO: really
[13:31] maritz: really
[13:32] yawNO: how do you do? ssh + cloud9?
[13:32] yhpark has joined the channel
[13:32] maritz: everywhere i use cloud9 i have access to a shell
[13:32] qos has joined the channel
[13:32] yawNO: sucks man
[13:32] yawNO: we gotta fix this
[13:32] yawNO: TO THE BAT MOBILE
[13:32] maritz: either ssh or because i'm runnning it on my local machine... :P
[13:32] yawNO: yeah i'm just lazy enough to consider switching windows annoying
[13:32] yawNO: :D
[13:32] yawNO: ohwell
[13:32] yawNO: guess what
[13:32] maritz: cmd
[13:32] yawNO: tty.js + cloud9
[13:33] yawNO: that way i can just switch tabs
[13:33] yawNO: :D
[13:33] mschneider has joined the channel
[13:33] maritz: :)
[13:33] yawNO: that's easy enough
[13:33] Poetro has joined the channel
[13:33] krnl has joined the channel
[13:34] redir has joined the channel
[13:34] pgte has joined the channel
[13:34] diamonds has joined the channel
[13:35] diamonds: [sequoia@localhost afonigizer]$ npm install uglify-js
[13:35] diamonds: uglify-js@1.2.6 ./node_modules/uglify-js
[13:35] vargle has joined the channel
[13:35] qjcg has joined the channel
[13:35] diamonds: what am I doing incorrectly?
[13:35] diamonds: I think this worked on my other box
[13:35] yawNO: that means it worked :|
[13:35] diamonds: ah
[13:35] polardude has joined the channel
[13:35] diamonds: so it's just not in my path
[13:36] diamonds: I'm confused... where is it?
[13:36] diamonds: $  locate node_modules | grep uglify
[13:36] diamonds: ^nothing
[13:36] shinuza has joined the channel
[13:37] yawNO: diamonds: it's in .
[13:37] polardude has joined the channel
[13:37] diamonds: neither does `locate uglify`
[13:37] yawNO: the directory you're currently in
[13:37] diamonds: da fuq
[13:37] diamonds: thank you
[13:37] yawNO: you're welcome
[13:37] diamonds: I saw it but assumed it must be wrong
[13:37] diamonds: so it doesn't have a default install location?
[13:37] rlidwka: it does
[13:37] diamonds: /usr/local/lib/node_modules/.. ?
[13:37] rlidwka: default install location is ./node_modules :)
[13:38] diamonds: ah :)
[13:38] rlidwka: npm looks for a package in ./node_modules then in ../node_modules and so on
[13:39] rlidwka: and node's require() too
[13:39] diamonds: I'm looking at npm help install
[13:39] diamonds: ok so -g will put it in a globally accessible place
[13:39] diamonds: presumably on my PATH
[13:39] diamonds: oh wait, no
[13:40] redir_ has joined the channel
[13:40] kesor has joined the channel
[13:41] kesor: is there some blog post that explains use cases where handlebars is useful?
[13:41] lazyshot has joined the channel
[13:42] diamonds: what's the standard place to install packages
[13:42] pandeiro has joined the channel
[13:42] diamonds: I don't want to reinvent the wheel
[13:42] jrundquist has joined the channel
[13:42] rwaldron has joined the channel
[13:43] rlidwka: where are all your apps located?
[13:45] diamonds: err...
[13:45] diamonds: I don't really have node apps
[13:45] robi42 has joined the channel
[13:45] diamonds: I'm just using lessc and uglify
[13:45] diamonds: but generally speaking /Applications/[app-name]
[13:46] rlidwka: then it's /Applications/node_modules :)
[13:46] chadskidmore has joined the channel
[13:46] diamonds: rlidwka: then how do I fix my path?
[13:46] diamonds: cuz I added node_modules but it looks like i need node_modules/[module_name]/bin/
[13:46] HacDan has joined the channel
[13:47] timoxley has joined the channel
[13:47] diamonds: I swear I npm installed this the other day on my ubuntu box and I *did not* manually set location/path
[13:47] rio{{: For modules that are specifically made for a single application. do you still recommend putting them in node_modules?
[13:48] rlidwka: rio: that's typically located in ./lib
[13:48] diamonds: Oh I loaded a binary thru apt-get :)
[13:48] diamonds: forgot
[13:49] rio{{: rlidwka: Ok thanks, that's what I have at the moment :)
[13:50] savudin has joined the channel
[13:51] AviMarcus has joined the channel
[13:51] savudin: which module do you suggest for couchdb and mysql?
[13:51] mattyh88: what's the updated code for createClient? 
[13:54] mehale: how can I send data from var stream = fs.createReadStream(Â´/named_pipeÂ´) into a socket, to feed a web client?
[13:54] Tricon has joined the channel
[13:54] denom has joined the channel
[13:55] kirbysayshi has joined the channel
[13:55] carlyle has joined the channel
[13:57] bnoordhuis: mehale: stream.pipe(response)
[13:57] mehale: bnoordhuis: from inside the socket function?
[13:57] mehale: io.sockets.on('connection', function (socket) { ...});
[13:58] bnoordhuis: mehale: from a context where you have access to the response object
[13:58] bnoordhuis: so yes
[13:58] antz29 has joined the channel
[13:58] bnoordhuis: oh wait, a socket, not a http object
[13:58] bnoordhuis: mehale: stream.pipe(socket)
[13:59] postwait has joined the channel
[14:00] k1ttty has joined the channel
[14:01] mehale: bnoordhuis: mind to take a look? http://pastebin.com/HYjVnyvy
[14:02] jerrysv has joined the channel
[14:03] st_luke has joined the channel
[14:05] jtsnow has joined the channel
[14:05] ningu has joined the channel
[14:05] krnl has joined the channel
[14:06] ningu: what can I do with my moon laser?
[14:07] bnoordhuis: mehale: you can only use the stream once
[14:07] bnoordhuis: it's closed at the end
[14:07] bnoordhuis: closed at end-of-file, that is
[14:08] robhawkes has joined the channel
[14:09] joshfinnie has joined the channel
[14:09] mattyh88: a client can order a product on my website. when he clicks 'order', the user has to wait for a price to come from another server that calculates the price. How do I do this? I'm looking at socket I/O, is this the way to go? 
[14:10] cipher__: how can i use regex to search a string?
[14:11] thinkt4nk has joined the channel
[14:11] radiodario: cant your server ask your other server "hey other server, what's the price of sth"?
[14:11] radiodario: cipher__: http://lmgtfy.com/?q=nodejs+regex
[14:12] mehale: bnoordhuis: how closed?
[14:12] mattyh88: radiodario .. well yes, but only after a short amount of time 
[14:12] bnoordhuis: mehale: closed as in fs.close(fd)
[14:13] bnoordhuis: i.e. you need to create a new stream for each socket
[14:13] mehale: ahhh oh
[14:13] mehale: I imagined I could have a single stream for every incoming socket
[14:14] mattyh88: radiodario, i need to keep polling then with setInterval? or what would be the best way?
[14:14] qbit_: it seems the build for 0.7.6 doesn't properly detect newer versions of openbsd : 
[14:14] qbit_: ../deps/uv/src/ares/ares_getnameinfo.c:316: error: too many arguments to function 'getservbyport_r'
[14:14] qbit_: it's passing 6
[14:14] ningu: mattyh88: so you want to ask the other server directly, or what?
[14:14] CIA-19: libuv: 03Vladimir Dronnikov 07master * r2b3ba91 10/ config-unix.mk : build: make `make clean` really clean - http://git.io/i09Drw
[14:15] argami has joined the channel
[14:15] ningu: mattyh88: I don't know how socket.io would really help more than an ajax request
[14:15] robi42 has joined the channel
[14:15] qbit_: but GETSERVBYPORT_R_ARGS == 4 is set in config_openbsd
[14:15] mattyh88: i can't do the ajax request immediately after the user clicks 'order'
[14:15] radiodario: mattyh88: the best way usually is the way that works the best, and you only have one way of telling, trying all the ways
[14:15] mattyh88: because the price will still be being calculated
[14:15] radiodario: i think ajax request, and then wait until the response comes back
[14:16] robi42 has joined the channel
[14:16] ningu: ok, but you can have the server that receives the request not respond until it's done
[14:16] radiodario: i.e. long polling?
[14:17] jaha has joined the channel
[14:17] mattyh88: radiodario .. I'll get an answer directly ... the price will be 0 though 
[14:17] mattyh88: if i do an ajax request
[14:17] xtro has joined the channel
[14:18] mschneider has joined the channel
[14:18] xtro has left the channel
[14:19] ningu: http://i.imgur.com/VJoQh.png
[14:19] ningu: mattyh88: then you need to fix your server-side implementation :P
[14:19] xtro has joined the channel
[14:19] ningu: only the server knows when it's done
[14:19] jaha: SubStack: How do you properly wrap server->client requests in up() so that they are queued?
[14:19] djazz has left the channel
[14:20] nphase has joined the channel
[14:20] devongovett has joined the channel
[14:20] sadjow has left the channel
[14:20] nphase has joined the channel
[14:20] nphase has joined the channel
[14:21] aconbere has joined the channel
[14:22] chunhao_ has joined the channel
[14:22] [AD]Turbo has joined the channel
[14:24] vicapow has joined the channel
[14:25] jxie has joined the channel
[14:25] vicapow: so what does everyone use for analytics?
[14:25] kesor: analytics of what?
[14:27] xtro has left the channel
[14:27] stafamus has joined the channel
[14:28] ksys_ has joined the channel
[14:29] vicapow: kesor: good question :/
[14:29] pendlepa1ts has joined the channel
[14:29] baudehlo has joined the channel
[14:30] willwhite has joined the channel
[14:31] mandric has joined the channel
[14:31] RORgasm has joined the channel
[14:32] eduardostalinho has joined the channel
[14:32] alex1 has joined the channel
[14:32] ningu: analyze all the things
[14:33] ph^ has joined the channel
[14:36] krnl has joined the channel
[14:37] tomnewmann has joined the channel
[14:38] mattyh88 has left the channel
[14:40] ppcano has joined the channel
[14:41] baudehlo1 has joined the channel
[14:41] isaacs has joined the channel
[14:42] pizthewiz has joined the channel
[14:42] vipaca has joined the channel
[14:42] vipaca has joined the channel
[14:42] malcolmva has joined the channel
[14:43] rtgibbons has joined the channel
[14:43] CarlosC has joined the channel
[14:44] dwhittle has joined the channel
[14:44] warz has joined the channel
[14:45] BillyBreen has joined the channel
[14:46] Morkel has joined the channel
[14:47] dwhittle has joined the channel
[14:48] Industrial: How do I refactor this using a reduce? https://gist.github.com/3e8332ebd8e1b1b48b1b
[14:52] brngardner has joined the channel
[14:52] lperrin: Industrial, i commented on your gist
[14:52] lperrin: is that what you expected ?
[14:52] Venom_X has joined the channel
[14:53] Industrial: yes, thanks
[14:53] Nopik has joined the channel
[14:53] tjholowaychuk has joined the channel
[14:53] krnl has joined the channel
[14:54] PsiliPharm has joined the channel
[14:54] Nopik has joined the channel
[14:54] stagas has joined the channel
[14:56] JSONB has joined the channel
[14:56] aconbere has joined the channel
[14:57] shinuza has joined the channel
[14:57] s0urce: mongoDB or couchDB
[14:57] Industrial: google
[14:57] s0urce: googleDB? no ty ;=
[14:58] Industrial: no, pie.
[14:58] Industrial: everybody likes pie.
[14:58] s0urce: nah
[14:58] itayneeman has joined the channel
[14:58] s0urce: cookies, everyone like cookies
[14:58] Edy: nah
[14:58] s0urce: come to the dark site, we got cookies!
[14:58] jrundquist has joined the channel
[14:58] itayneeman: isaacs: are the npm http logs available anywhere?
[14:59] xat-- has joined the channel
[15:00] paul_ has joined the channel
[15:00] isaacs: itayneeman: not at this time, no
[15:00] ksys has joined the channel
[15:00] Witnes5 has joined the channel
[15:01] itayneeman: isaacs: OK - I was thinking it might be interesting to feed them into splunk and see if one could derive usage stats from them
[15:01] rtgibbons has joined the channel
[15:01] MrNko has joined the channel
[15:02] paul__ has joined the channel
[15:02] qubit[0|1] has joined the channel
[15:02] ovaillancourt has joined the channel
[15:03] sorensen has joined the channel
[15:03] isaacs: itayneeman: that is planned, yes.
[15:03] flagg0204 has joined the channel
[15:04] halfhalo has joined the channel
[15:04] clifton has joined the channel
[15:04] paul_ has joined the channel
[15:04] briancray has joined the channel
[15:04] jocafa has joined the channel
[15:04] Destos has joined the channel
[15:05] Morkel has joined the channel
[15:06] enobrev has joined the channel
[15:07] paul_ has joined the channel
[15:08] paul__ has joined the channel
[15:08] jrundquist has left the channel
[15:08] illourr has joined the channel
[15:08] skm has joined the channel
[15:10] RORgasm has joined the channel
[15:11] itayneeman: isaacs: sounds good. If you'd be interested in seeing it in Splunk, let me know - I'd be happy to feed it in and see what data you get out on the other side
[15:11] itayneeman: should be pretty simple
[15:12] astropirate has joined the channel
[15:13] pgte has joined the channel
[15:13] WarheadsSE: anyone else seen the youtube of the goofball ?
[15:14] ircretary has joined the channel
[15:14] WarheadsSE: sorry, I just foundit and woo, lol. heh.. woo.. I need to stop laughing a bit.
[15:14] rook2pawn: does reddis session store explicitly use db 0?
[15:17] IrishGringo_ has joined the channel
[15:19] bradleymeck has joined the channel
[15:19] jakehow has joined the channel
[15:19] automata has joined the channel
[15:19] Renegade001 has joined the channel
[15:19] bradleymeck has joined the channel
[15:19] Vespakoen has joined the channel
[15:20] pickelsss has joined the channel
[15:21] jeromegn has joined the channel
[15:21] autif has joined the channel
[15:21] IrishGringo has joined the channel
[15:21] jeromegn has joined the channel
[15:21] autif: I need some help in cross compiling node.js
[15:22] autif: I am getting this error - waf-light: error: no such option: --build
[15:23] jtsnow has joined the channel
[15:24] herbySk has joined the channel
[15:24] IrishGringo_ has joined the channel
[15:24] WarheadsSE: autif: cross compiling for .. ?
[15:25] pid has joined the channel
[15:25] WarheadsSE: I maintain packaged for ARM, so I do have some experience.
[15:26] autif: WarheadsSE - for x86 - I have webkit based browser running on my hardware - it is yocto based
[15:26] dthompso99 has joined the channel
[15:27] ioscale has joined the channel
[15:28] WarheadsSE: sorry, I'm catching up on "yocto"
[15:28] Druid_: hm
[15:28] Druid_: who's running linux / *bsd?
[15:28] jryans has joined the channel
[15:28] WarheadsSE: swing a stick Druid_ 
[15:28] WarheadsSE: you'll hit at least one.
[15:29] Druid_: haha :D
[15:29] Druid_: *swing*
[15:29] nathanielk: Druid_: ubuntu
[15:29] Destos has joined the channel
[15:29] nathanielk: and ow, that stick hurt
[15:29] nathanielk: :)
[15:30] WarheadsSE: Druid_: Arch Linux & Arch Linux ARM
[15:30] Druid_: i need some dumps of dmidecode, dmesg.boot and "lspci -vnn" for a new project i'm doing :) if anyone can supply me these would be great
[15:30] ksys has joined the channel
[15:30] colinclark has joined the channel
[15:30] hzin has joined the channel
[15:31] wilmoore has joined the channel
[15:31] colinclark_ has joined the channel
[15:31] autif: Yocto is sort of like a fork of openembedded project - it uses something called poky as their build system
[15:31] xtro has joined the channel
[15:32] PHPFluesterer_ has joined the channel
[15:32] WarheadsSE: so, you're trying to cross compile to x86 from.. ?
[15:33] autif: WarheadsSE - did you compile the package on ARM hardware or did you cross compile it and then packaged it? If the latter - then did you run into waf complaining about â€”build, â€”sysroot, â€”target and â€”host flags?
[15:33] WarheadsSE: I'm missing how webkit ties to nodejs ..
[15:33] WarheadsSE: k, first, which version of node, because waf & gyp have evolved seperately over teh revisions
[15:34] TomY has joined the channel
[15:34] nathanielk: Druid_: http://pastebin.com/RY6ZrKju
[15:34] autif: WarheadsSE - from x86-64. You are right - webkit does not tie with node.js - It is just what we use to stuff served by node. We are using 0.6.13 version of node.js 
[15:35] CIA-19: libuv: 03Aaron Bieber 07master * r40e6373 10/ src/unix/openbsd.c : 
[15:35] CIA-19: libuv: unix: fix compiler warning
[15:35] CIA-19: libuv: Fix warning "for loop initial declaration used outside C99 mode" on openbsd. - http://git.io/yldrCQ
[15:35] Druid_: thanks nathanielk
[15:35] WarheadsSE: autif: thank you, much more sense made
[15:35] TomY has joined the channel
[15:36] WarheadsSE: let me just hop over to that tree.
[15:36] perezd has joined the channel
[15:36] Zzaichik has joined the channel
[15:37] WarheadsSE: looks like you need to be looking for --dest-cpu
[15:37] WarheadsSE: https://github.com/joyent/node/blob/v0.6.13/wscript#L232
[15:37] WarheadsSE: anythign becyond that, and you'll want to pre-popultate environment CFLAGS & CXXFLAGS
[15:38] Spion has joined the channel
[15:38] autif: I see - thatks for pointing out the relevant part of the build system - I will dig deeper
[15:38] WarheadsSE: No biggy, I've had to do my share to get it building smoothly on ARM.
[15:38] slaskis_ has joined the channel
[15:39] autif: I might have to disable the check for unknown flags - while I can add more options (like â€”dest-cpu), I can not (easily) take the build options out
[15:39] autif: so, I want to just ignore them - can you point me to that part of the code too?
[15:39] EyePulp has joined the channel
[15:40] ehazlett has joined the channel
[15:40] bradleymeck: anyone know if gyp is able to detect if a function is available or if I would need something like autoconf?
[15:41] dylang has joined the channel
[15:41] Wizek has joined the channel
[15:41] rtgibbons has joined the channel
[15:41] ThatOtherPerson has joined the channel
[15:41] WarheadsSE: autif: I am unfamiliar with the require ment for "--build" flag, I assume it is from the build sequence of yocto ?
[15:42] ksys has joined the channel
[15:43] indy3 has joined the channel
[15:43] sshaginyan has joined the channel
[15:43] justfielding has joined the channel
[15:43] WarheadsSE: is this a bitbake script ?
[15:44] sshaginyan: Is there a way I can login to another website using node? For example login to gmail?
[15:44] autif: WarheadsSE - yes, these are bitbake scripts
[15:44] WarheadsSE: k
[15:44] fatjonny has joined the channel
[15:45] dthompso99 has left the channel
[15:45] autif: WarheadsSE - http://pastebin.com/4PhyBgUY    <â€”â€”â€” build output - just FYI
[15:45] dwhittle has joined the channel
[15:46] micheil has joined the channel
[15:46] WarheadsSE: why are you passing these as arguments to the waf ?
[15:47] cconstantine_ has joined the channel
[15:47] crutex has joined the channel
[15:47] crutex has joined the channel
[15:47] WarheadsSE: this entire series, doesnt belond to Node.
[15:47] autif: WarheadsSE - I am not, configure seems to
[15:47] autif: I am passing these to configure
[15:47] autif: which calls waf
[15:47] autif: waf-light actually
[15:47] autif: right?
[15:47] autif: or so was my understanding
[15:48] sshaginyan: Is there anyway I can populate a form and submit it? Is there a library for this? I just want to login to a website
[15:48] autif: these are a result of "inherit autotools" directive in bitbake recipe
[15:48] WarheadsSE: Have you read the configure script ?
[15:48] autif: WarheadsSE - I have not
[15:48] WarheadsSE: https://github.com/joyent/node/blob/v0.6.13/configure
[15:48] WarheadsSE: pretty straight forward.
[15:49] autif: wow!
[15:49] autif: never expected it to be that simple - I am unfamiliar with waf - I have seen insanely long configure scripts - 10k+ lines
[15:49] autif: this is 25
[15:49] _mrb_ has joined the channel
[15:49] autif: I see the point
[15:49] WarheadsSE: yes, and autotools aren't in use where.
[15:50] WarheadsSE: Are there any bitbake recipes for node that you can base off of?
[15:50] nicholas_ has joined the channel
[15:50] autif: may be I should not be using "inherit auto tools" instead write my own do_configure(), do_build() 
[15:50] autif: basedon waf
[15:50] stephank has joined the channel
[15:50] zemanel has joined the channel
[15:50] autif: here are none - that I could find
[15:51] cipher__:  http://pastie.org/private/fbuteojn2gedq3lf6gv1mw  ...   yar.match.regex is not yielding any results when i provide it a file that should have a dozen matches. 
[15:51] WarheadsSE:                              â”‚ apejens
[15:51] WarheadsSE: http://fastr.github.com/articles/bitbake-node.html
[15:51] WarheadsSE: sorry about that.. i clicked funny
[15:51] sorensen__ has joined the channel
[15:51] WarheadsSE: that is for a much older node, but might give you a start
[15:52] zemanel_ has joined the channel
[15:52] jgornick has joined the channel
[15:52] autif: yp - thats what I had in mnd for do_configure() and do_install()
[15:52] WarheadsSE: don't worry about the arm patches
[15:52] autif: yup 
[15:53] autif: let me try that
[15:53] WarheadsSE: there is a later one for .2.x
[15:53] autif: seems straightforward
[15:53] fangel has joined the channel
[15:53] WarheadsSE: http://coolaj86.info/articles/updating-a-bitbake-package.html
[15:53] zemanel_ has joined the channel
[15:53] arvidkahl has joined the channel
[15:53] hydrozen has joined the channel
[15:54] autif: I have everything else - DEPENDS, SRC_URI, S, even FILES_${PN} in my recipe - will override do_configure() and do_compile()
[15:54] autif: that should take care of things
[15:54] WarheadsSE: hopefully so
[15:55] WarheadsSE: and I hate to sound condescending, but here is all that i googled: bitbake node
[15:55] arvidkahl has joined the channel
[15:56] WarheadsSE: http://fastr.github.com even has a thing on waf on OE, which yocoto is based on, so 
[15:56] staar2 has joined the channel
[15:56] WarheadsSE: i'm really just parroting, and doing some back trakcing on relatively useful results
[15:57] bkaney has joined the channel
[15:57] dragansah has joined the channel
[15:58] ThatOtherPerson: Is Node.js v0.6.14 actually out?
[15:58] WarheadsSE: yes
[15:59] WarheadsSE: "v0.6.14" @ http://nodejs.org/
[15:59] WarheadsSE: I think I built it Friday afternoon ..
[16:00] ag4ve: anyone seen this: if (!this._passport) throw new Error('passport.initialize() middleware not i
[16:00] ag4ve: ah, better idea...
[16:01] sreeix has joined the channel
[16:01] ag4ve: http://scsys.co.uk:8002/189188
[16:01] ag4ve: ^^ is the error. but i don't know what could be causing it.
[16:02] PsiliPharm has joined the channel
[16:02] autif: WarheadsSE - no offense taken - I went down a different rabbit hole - before this I wrote the recipe for mono - the existing mono recipe was hopelessly out of date - and did not help much - I jumped to the same conclusion for nodejs
[16:03] kriskowal has joined the channel
[16:03] karellen has joined the channel
[16:03] WarheadsSE: with 0.8 waf will be replaced with gyp,
[16:04] WarheadsSE: that will be a different beast.
[16:04] paul__ has joined the channel
[16:05] tlack_: sshaginyan: there are a couple of different bits and pieces, but try out http://www.phantomjs.org/
[16:05] sshaginyan: ty
[16:05] brngardner has joined the channel
[16:06] Omega_Work has joined the channel
[16:06] broofa has joined the channel
[16:07] Vespakoen has left the channel
[16:08] jocafa has joined the channel
[16:09] _mrb_: I'm having some troubles installing _some_ packages via NPM and could use a little help. I followed the compile-from-source install instructions, but am seemingly having problems with paths. "sudo npm install inotify -g" says NPM's not found while "sudo /usr/local/bin/npm install inotify -g" says "/usr/bin/env: node: No such file or directory". I'm sure this is an easy fix, but can't find any info on moving forward to fix. 
[16:10] isaacs: _mrb_: sudo doesn't have /usr/local/bin in its path
[16:10] tlack_: _mrb_: is /usr/local/bin in root's $PATH
[16:10] isaacs: _mrb_: man sudo
[16:10] tlack_: a fraction of a second too late. doh.
[16:10] isaacs: _mrb_: sudo eval 'echo $PATH'
[16:10] redir has joined the channel
[16:11] isaacs: _mrb_: or, sudo bash -c 'echo $PATH'
[16:11] _mrb_: Thanks, isaacs, but it says eval not found
[16:11] tlack_: you could probably hax it by editing /etc/profile 
[16:11] isaacs: _mrb_: use the bash one
[16:11] wendall911 has joined the channel
[16:12] t0mmyvyo has joined the channel
[16:12] isaacs: _mrb_: man sudo, then /SECURITY
[16:12] _mrb_: "/sbin:/bin:/usr/sbin:/usr/bin " So do I I then add /usr/local/bin to .bash_rc? Not clear on all that.
[16:13] tlack_: yep, at the end.. :/usr/local/bin
[16:13] isaacs: _mrb_: not .bash_rc.  .bashrc
[16:13] isaacs: no _
[16:13] tlack_: if you fuck this up everything will go to shit, no pressure
[16:13] isaacs: _mrb_: but bash startup files aren't executed by sudo anyhow
[16:13] isaacs: (normally)
[16:13] isaacs: seriously:  read this.  man sudo
[16:13] isaacs: then man sudoers and man visudo
[16:14] isaacs: then run `sudo visudo` and check if the env_reset option is set for your group
[16:14] _mrb_: Am reading right now. Will come back if I have questions. Thanks both for your help.
[16:15] isaacs: np
[16:16] alejandromg has joined the channel
[16:16] gozala has joined the channel
[16:16] __doc__ has joined the channel
[16:16] tilgovi has joined the channel
[16:16] boehm has joined the channel
[16:17] khrome has joined the channel
[16:18] patcito has joined the channel
[16:20] maletor has joined the channel
[16:20] MT has joined the channel
[16:24] horofox has joined the channel
[16:25] pgte_ has joined the channel
[16:25] yaymukund has joined the channel
[16:28] bingomanatee_ has joined the channel
[16:29] r1ngzer0 has joined the channel
[16:29] joshthecoder has joined the channel
[16:29] orlandovftw has joined the channel
[16:30] bingomanatee_ has left the channel
[16:32] navpar has joined the channel
[16:33] ppcano has joined the channel
[16:33] AndreasMadsen has joined the channel
[16:34] jryans has joined the channel
[16:34] rio{ has joined the channel
[16:36] infynyxx has joined the channel
[16:36] dodo_ has joined the channel
[16:37] vargle has joined the channel
[16:37] rtgibbons has joined the channel
[16:38] st_luke_ has joined the channel
[16:38] jaxzin has joined the channel
[16:40] gregpascale has joined the channel
[16:41] microp11 has joined the channel
[16:41] simenbrekken has joined the channel
[16:41] microp11 has joined the channel
[16:41] kmiyashiro has joined the channel
[16:42] limgad has joined the channel
[16:43] kriskowal has joined the channel
[16:43] lohkey has joined the channel
[16:44] EhevuTov has joined the channel
[16:44] geetarista has joined the channel
[16:44] nateps has joined the channel
[16:45] whaley has joined the channel
[16:45] jay has joined the channel
[16:46] supershoe has joined the channel
[16:46] take_cheeze has joined the channel
[16:46] supershoe: Hello all! I'm looking at using node.js for a project at work. We're not using it for anything yet. It says on the website homepage that it's real-time, but I can't find in the docs details of the real-time guarantees that it provides (hard? soft? how extensive?) Are there any details on this?
[16:47] thetony: real time in what way?
[16:47] nerdy has joined the channel
[16:48] supershoe: Real time as in it meets some timing constraint
[16:48] supershoe: http://en.wikipedia.org/wiki/Real-time_computing
[16:48] josh-k has joined the channel
[16:49] thetony: i'm familiar with the term, just kind of a vague question
[16:49] supershoe: Well normally when we procure a hardware or software system here, they tell us it responds to input within this mean time, within this standard deviation of error, and it's all formally written out
[16:50] thetony: what do you do?
[16:50] adamkittelson has joined the channel
[16:51] supershoe: And they classify them as either hard real time, where missing a deadline is a system failure, or soft, where missing a deadline is statistically defined
[16:51] mikeal has joined the channel
[16:51] supershoe: we do avionics (not safety critical or in flight stuff tho)
[16:52] totallymike has joined the channel
[16:52] __doc__ has joined the channel
[16:53] thetony: cool, i worked on fixed wing jets in the Marine Corps - can't speak to your question though.  haven't ever needed it in that way
[16:53] supershoe: Basically, I need to know that node.js responds in a certain time to certain operations, how do i control this? so normally the software systems that we use will say responds within N ns, with a SD of X ms, and always at most Y ms.
[16:53] supershoe: don't worry i'm not putting node in your plane, just using it for development perhaps
[16:53] thetony: i think that it depends on the OS and the environment more than nodejs itself.  it runs when it's notified
[16:54] supershoe: thetony: so what does the website mean by real time? what real time guarantees does node itself provide?
[16:54] thetony: how long that response time is, i can't speak to
[16:54] t0mmyvyo has joined the channel
[16:54] agnat has joined the channel
[16:54] thetony: can you send me a link so that i may see the context?
[16:55] alvaro_o has joined the channel
[16:55] supershoe: thetony: sure - http://nodejs.org/ - first paragraph
[16:55] pizthewiz has joined the channel
[16:55] Wizek has joined the channel
[16:56] thetony: supershoe: i think the difference is that node relies on notifications from external sources.  software packages can give you statistics above because they are in control of the event loop, nodejs is not because it doesn't block
[16:56] infynyxx has joined the channel
[16:56] supershoe: thetony: oh right. but why does it say that on the website then?
[16:56] slajax has joined the channel
[16:57] tylerstalder has joined the channel
[16:58] slloyd has joined the channel
[16:58] elguapo99 has joined the channel
[16:59] thetony: supershoe: you'd have to look at the statistics of the environment you're in.  either epoll, kqueue, /dev/poll or select 
[16:59] tlack_: supershoe: i think they mean real time in the general sense (i.e., live communications for web services) not in the strict sense
[16:59] thetony: this discusses some of it http://www.kegel.com/c10k.html#nb./dev/poll
[17:00] thetony: tlack_: thanks, i guess i kind of assumed that - he still needs the other stats i think : - )
[17:00] supershoe: ha ha just trolling the lot of you. but seriously, it shouldn't say real time as that has a precise meaning in computer science, and you're abusing it. thanks! i'll be here all night with my trolling combined with science.
[17:00] tlack_: thetony: no, it's an actual thing - some systems guarantee you will get some kind of response (even if its just an interrupted event) within x milleseconds
[17:01] tlack_: thetony: regardless of what you are doing
[17:01] mikeal has joined the channel
[17:02] robhawkes has joined the channel
[17:02] sreeix has joined the channel
[17:03] kriskowal has joined the channel
[17:03] Spion_ has joined the channel
[17:03] larsschenk has joined the channel
[17:03] autif: what does â€”without-snapshot do? Description says build w/o snapshotting V8 libraries - since I am cross compiling, I need to do this. But I am not sure what it means - I looked around but could not figure it out
[17:03] trotter has joined the channel
[17:04] sreeix has joined the channel
[17:04] artusrocha has joined the channel
[17:04] WarheadsSE: supershoe: you're not familiar with BlackwaterOpsDotCom on youtube are you :p
[17:04] WarheadsSE: autif: look into V8 and snapshotting
[17:05] ningu has joined the channel
[17:06] Gateway69 has joined the channel
[17:06] dgathright has joined the channel
[17:07] Gateway69: node.js newbie here, im trying to set up a json service endpoint that can talk to our ios client, and store data into mysql or mongo are their any good examples of this, also how does this scale, aka from 1000 iOS users to 5 million hitting the service and storing and retriving data
[17:07] blueadept has joined the channel
[17:08] WarheadsSE: welp
[17:08] WarheadsSE: figure out how to scale the DB first, and then nodejs is just a low-latency layer in between
[17:08] tlack_: Gateway69: depends a lot on your workload - i.e., what mysql is doing
[17:08] WarheadsSE: while node is definitvely scalable, when architected correctly, it's not magic dust
[17:09] Gateway69: i mean im not opposed to a nosql type of system either
[17:09] tlack_: Gateway69: there are examples of boilerplate node apps - or even type 'express [dir]' to create one from your shell environment once express is installed, but of course there are no exact examples of precisely what you need. but node is trivial to understand
[17:10] Gateway69: ideally it would be like this, iOS client launches, gets latest data from server, ios user does a few things, addes some records, looks some things up, and may have a session of 2-5 min.. just when you go from 10,000 users to 1mil+ im trying to figure out a stragety
[17:10] tlack_: add more servers
[17:10] vicapow has joined the channel
[17:10] tlack_: we won't be able to tell you what to do here but there are thousands of articles about that on the internet
[17:10] mc: anyone here using felix's mysql driver?
[17:10] mc: we're having issues where it appears when the mysql logs are rotated and the server is restarted, the connection isn't fully reestablished, but it looks like it should be
[17:10] tlack_: Gateway69: node wont be your problem here. just go for it if you like the way node/express works
[17:11] Gateway69: so something like 2 load balancers (encase one fails), several nodes.js endpoints to take in the json data calls that read and write to a db (mysql master with slaves) nosql (not sure, ot to fam with it)
[17:12] Gateway69: ok, hmm does express or anyone ahve info on using node.js as REST server, specifcally with json data?
[17:12] tlack_: Gateway69: yeah, depending on your budget. i usually first move the mysql to its own server (so i can measure the load and scale separately), then start adding mysql slaves or frontend servers. its more of a spectrum of options than a single set of choices
[17:12] enjalot has joined the channel
[17:12] tlack_: Gateway69: it's trivial because res.send() takes a javascript obj and transforms it to json :)
[17:12] tlack_: Gateway69: so just res.send(record) 
[17:12] tlack_: Gateway69: you could also use JSON.stringify(record) 
[17:13] Gateway69: ill have curl calls like method.getuserinfo passing in user id, which returns json record, then methods to put data get data etc
[17:13] tlack_: Gateway69: here are some examples https://github.com/visionmedia/express/tree/master/examples
[17:14] Gateway69: tlack, is going to nosql right off the bat like mongo over kill or could like a nice dedicated master with several slaves scale from like 10,000 users doing prob 20-30 requests per session to 5+ million.. 
[17:14] ningu: I keep typing gut push or got push instead of git push.
[17:14] ningu: you can also use res.json(obj)
[17:14] nathanielk: git ass -p
[17:14] thetony: tlack_: i'm aware - i just mean that for his use that's what he wants
[17:15] tlack_: Gateway69: thats like going to williams sonoma and asking if "these are all the glasses and silverware i need" - impossible to say. if your app just updates a counter, sure. if it does complex joins, no. i personally find nosql to be a bit annoying because its such a manual process so i usually start with mysql and then go the caching route
[17:15] mikedeboer has joined the channel
[17:15] Gateway69: one of my friends who has poked around with node, says a node process getting data that talks to the db can end up taking up lots of cpu usage for heavy stuff, how do you spawn other nodes or what the general process in this case
[17:15] maritz has joined the channel
[17:15] thetony: tlack_: nm, got trolled :(
[17:16] tlack_: Gateway69: you can either launch multiple node instances and switch between them in a load balancer or nginx, or you could use node's new cluster stuff which basically forks. however i think your friend may be wrong because node is actually pretty good about releasing the cpu when waiting (thats one of the points of the callback-oriented style)
[17:16] Gateway69: tlack, vanrish or memcache, havnt looked at what works for node, sorry im coming from php/msyql 
[17:16] Gateway69: ok
[17:16] tlack_: Gateway69: at least in php i do the caching myself with memcache, i havent ever used varnish but i dont feel comfortable setting expires headers (compared to doing it myself) 
[17:17] slloyd has joined the channel
[17:17] Gateway69: yea varnish is a bit of a beast but if you get it right can work well and even well with memcache, most of the data that we will be dealign with will be mostly dynamic so caching wont help much
[17:17] achiu1 has joined the channel
[17:18] ditesh|cassini has joined the channel
[17:19] Gateway69: i might think about contracting this out to someone, is their a good place to finde node.js contractors?
[17:20] ThatOtherPerson has left the channel
[17:20] tlack_: Gateway69: there's a "jobs" section on the node.js homepage, i havent looked into it. feel free to shoot me the project spec once you write it out, it would be an interesting project (im trying to switch my whole life from php to node) 
[17:20] TooTallNate has joined the channel
[17:21] achiu has joined the channel
[17:21] blueadept has joined the channel
[17:21] tlack_: is there no list of node.js contractors? hm
[17:22] Gateway69: ok cool, yea the prob I have is limited amount of time and we are looking to switch we might be jumping the gun but im worried about our php/mysql system and if it can handle 5+ to 13million or more
[17:22] thetony: tlack_: opportunity arises 
[17:22] Omega_Work: Rather than repeat myself too much, I have a question that I posted on SO, that maybe someone here can offer some insight on: http://stackoverflow.com/questions/9890558/is-it-a-good-idea-to-use-nodes-vm-with-connects-vhosts
[17:22] qjcg has joined the channel
[17:23] skm has joined the channel
[17:23] Aiden has joined the channel
[17:23] tlack_: Omega_Work: that's a great question. i was wondering the same thing yesterday (my solution involved a bash script polling for new node apps, as i am a fairly ghetto person)
[17:23] tlack_: Gateway69: it can definitely handle it, but node feels better to work in, to me
[17:23] jarek has joined the channel
[17:23] jarek has joined the channel
[17:23] larsschenk has left the channel
[17:24] Omega_Work: tlack: It sounds really simple, which is why I want to "clear" it before going ahead and making it happen.  LOL
[17:24] qubit[0|1]: Omega_Work, yeah good question, I will say we use vhosts in our app, but if one app crashes, they all crash
[17:24] hlomas has joined the channel
[17:24] tlack_: Omega_Work: are the connect vhosts actually isolated?
[17:24] Gateway69: yea i should take a crash course on node.. il have your email thanks
[17:24] Omega_Work: tlack_: According to this design, they would be.
[17:24] Omega_Work: http://nodejs.org/docs/v0.4.8/api/vm.html
[17:25] Poetro has joined the channel
[17:25] Poetro has joined the channel
[17:25] Omega_Work: tlack_: It looks like you can trap and handle errors per vm-context, which is perfect because the dispatcher can then do proper and safe reporting.
[17:25] Omega_Work: (followed by re-instantiate)
[17:25] ningu: Omega_Work: why do you want the vhost router to also be in node? not that it won't work that way too, I'm just wondering how you made that decision.
[17:25] Omega_Work: (or re-create however you want to say it)
[17:25] Country has joined the channel
[17:26] gr4yscale has joined the channel
[17:26] jploh has joined the channel
[17:26] Omega_Work: ningu: Simplify the implementation.  I don't want to run multiple node instances AND I don't want to have to assign each one a port and then manage those mappings.
[17:26] sammmy has joined the channel
[17:26] Omega_Work: ningu: This also simplifies the administration of them.
[17:26] ningu: hmm. yeah, that makes sense.
[17:27] ningu: so I guess the node apps will have to be passed a port to listen on?
[17:27] Omega_Work: ningu: Not quite.  You just dispatch accordingly.
[17:28] Omega_Work: ningu: It's based on however you set up the vhosts at that point I guess :)
[17:28] shedinja_ has joined the channel
[17:29] rtgibbons has joined the channel
[17:29] qubit[0|1]: Have you guys seen http://koding.com/ ?
[17:30] WarheadsSE: (looks a lolt like c9)
[17:30] tlack_: Omega_Work: my psuedocode was here https://gist.github.com/2218211 - feels more safe and isolated, and the vms arent very large. besides how would npm installs work?
[17:31] Omega_Work: Well the server itself would represent my framework, right?
[17:31] Omega_Work: So it would host apps built on that framework.
[17:31] Omega_Work: (sorry, I know framework is a dirty word)
[17:31] hydrozen has joined the channel
[17:31] tlack_: yeah that could work, if the vms are totally isolated
[17:32] tlack_: i just feel its easier to make someone use express, and then have something else smart enough to start the instances and wire them up with nginx
[17:32] Omega_Work: tlack_: I don't like having to run one copy of node per site though.
[17:32] tlack_: with node-dev they'd restart themselves when changes are made. how would you handle that?
[17:32] tlack_: but arent you effectively running a separate copy of node with all those VM instances? but with less safety (most likely)
[17:33] Omega_Work: tlack_: My dispatcher would be able to be told to reload a site.
[17:33] Vespakoen has joined the channel
[17:33] Omega_Work: tlack_: Ideally ;)
[17:33] brngardner has joined the channel
[17:33] Omega_Work: tlack_: So it would ditch the VM and then re-load it.
[17:33] Vespakoen has left the channel
[17:33] TheJH has joined the channel
[17:34] lohkey: you could listen to the files for modifications and on modification spawn a new node and gracefully kill the current instance
[17:34] artusrocha has joined the channel
[17:34] Omega_Work: lohkey: Definitely a possibility as well.
[17:34] lohkey: the kind of "kosher" way to do it though is to just do this on code push
[17:34] franciscallo has joined the channel
[17:34] Omega_Work: lohkey: totally, dispatch scripts could handle it.
[17:34] hlomas: I am having a strange inconsistency on the exact same code between Windows and Linux. I have an http.get request to an image. Response encoding is base64. I cut and paste the logged response string after the "end" event into a small script which is basically "var image = new Buffer(<pasted result>, 'base64'); fs.writeFile('image.jpg')" image which I write to a jpg using fs.writeFile. When 
[17:34] hlomas: pasting the string output from Windows 7 (x64) the jpg file comes out perfectly, but pasting the output from Linux (2.6.18-194.32.1.el5.centos.plus) the jpg file comes out looking half-completed and partially scrambled. I'm quite confused.
[17:34] Omega_Work: lohkey: Sorry, not dispatch - deploy.
[17:34] whitman has joined the channel
[17:34] lohkey: yup
[17:35] mikeal: daleharvey: AppCach is the WORST!
[17:35] lohkey: just setup a post-commit hook in either git or svn
[17:35] lohkey: should work
[17:35] garrensm_ has joined the channel
[17:35] Omega_Work: So, getting back to the question, this doesn't sound too hair-brained does it?
[17:36] lohkey: restarting node on deploy?
[17:36] lohkey: or is there more to the question?
[17:36] Omega_Work: http://stackoverflow.com/questions/9890558/is-it-a-good-idea-to-use-nodes-vm-with-connects-vhosts
[17:36] tlack_: hlomas: have you compared the file sizes, the md5 signatures, etc?
[17:36] Omega_Work: That there :)
[17:37] tlack_: hlomas: gist.github.com your code
[17:37] hlomas: ok
[17:37] rtgibbons has joined the channel
[17:37] lohkey: Omega_Work: i would just run one node instance per vhost
[17:37] lohkey: then route to each one 
[17:37] Omega_Work: lohkey: But that requires one port per site, which is undesireable.
[17:37] tlack_: lohkey: know of any tools to coordinate that? i am thinking of making something but i'd like to see what everyone else does
[17:37] Omega_Work: lohkey: And also, doesn't running multiple node instances become a bit expensive?
[17:38] lazyshot has joined the channel
[17:38] mikedeboer has joined the channel
[17:38] Omega_Work: lohkey: I could get up to hundreds of sites going this way.  It seems topheavy, no?
[17:38] janne has joined the channel
[17:38] lohkey: Omega_Work: running multiple of the same process is relatively cheap due to COW
[17:38] Omega_Work: COW?
[17:38] WarheadsSE: hlomas: I'd also first-guess encoding.
[17:38] jsurfer has joined the channel
[17:38] lohkey: Copy On Write
[17:38] lohkey: basic virtual memory management technique the kernel uses
[17:39] Omega_Work: Ah, so only when it differs.
[17:39] lohkey: the only thing you have to worry about is the worse case stack allocation
[17:39] lohkey: which is system dependent
[17:39] lohkey: other then that, the kernel is really efficient at scheduling based on IO and computation
[17:40] lohkey: which should be your main concern when dealing with so many processes
[17:40] lohkey: unless all of the node processes are just on fire though
[17:40] lohkey: in which case you should scale your instances out
[17:40] akiva has joined the channel
[17:40] Omega_Work: lohkey: Right, more servers.
[17:40] Omega_Work: lohkey: And that's supported with this "model".
[17:40] lohkey: and when you need to scale out, you already have this routing arc itecture in place
[17:40] sadjow has joined the channel
[17:40] lohkey: Omega_Work: yup
[17:40] Omega_Work: lohkey: Again, I just don't like the idea of gobbling up ports per site.
[17:41] lohkey: 1 port is nothing
[17:41] tlack_: Omega_Work: you have hundreds of thousands to work with
[17:41] Omega_Work: lohkey: Could potentially create lots of work for my sysadmins...
[17:41] lohkey: compared to the millions of ports a single node instance can consume
[17:41] Omega_Work: lohkey: In managing sites.
[17:41] lohkey: Omega_Work: then i'd say you need to hire new sysadmins
[17:41] lohkey: the sysadmins at my work manage thousands of servers
[17:41] lohkey: running different crap
[17:41] Omega_Work: lohkey: Haha, what's out there to make their life easier with these kinds of setups?
[17:41] tlack_: Omega_Work: how many node apps do you have vhosted right now?
[17:41] lohkey: and theres less then 10 of them
[17:42] bradleymeck has joined the channel
[17:42] lohkey: i would do vhost routing with HAProxy instead of node
[17:42] lohkey: that alone will make life a bit easier
[17:42] tlack_: i just want a simple way to have the 2 or 3 programmers i work with be able to build node apps in the way they're used to with php, not having to edit config files etc
[17:43] tlack_: no starting apps when the server starts or whatever, i'd like to automate it
[17:43] tlack_: (simple goals)
[17:43] lohkey: tlack_: then you just need some git/svn post-commit hooks
[17:43] lohkey: which will update your dev site whenever some one pushes
[17:44] Omega_Work: lohkey:  This is very helpful.  At the very least, what you say makes development easier! ;)
[17:44] tlack_: lohkey: my problem is how it would autogenerate new nginx configs for each project, new port numbers, etc.
[17:44] Omega_Work: lohkey: Rather than writing a router, I'm just working on the site framwork.
[17:44] lohkey: devs can individually install monitors that reload node locally as files change
[17:44] lohkey: tlack_: it wouldn't
[17:44] tlack_: lohkey: why should devs have to do that? :)
[17:44] lohkey: tlack_: just the same as in php
[17:44] hij1nx has joined the channel
[17:44] lohkey: tlack_: they don't have to, but i'd argue they should know how to
[17:45] tlack_: lohkey: consider this https://gist.github.com/2218211
[17:45] lohkey: eek
[17:45] tlack_: node-dev should be run in the background and its logs redirected somewhere etc
[17:45] lohkey: looks scary
[17:46] sandropadin has joined the channel
[17:46] tlack_: i guess we have different scare points :D
[17:47] sandropadin has joined the channel
[17:47] lohkey: yeah, this is why everything should use something like zookeeper for configs
[17:47] AviMarcus: erm "service nginx reload" should be good enough?
[17:47] lohkey: statically modifying configs sounds less then optimal
[17:48] lohkey: i actually like keeping all static server configs in repos too
[17:48] tlack_: seems to work fine for tens of thousands of servers using cpanel etc (we're talking about vhosting-style servers here)
[17:48] lohkey: a cool devops trick i learned at my last job
[17:48] EvRide has joined the channel
[17:48] tlack_: yeah that is a good idea if you modify them a lot (although that could work either way)
[17:48] SubStack: lohkey: except something that is not zookeeper
[17:49] SubStack: heylookit I built one of those
[17:49] lohkey: SubStack: i agree
[17:49] dodo__ has joined the channel
[17:49] SubStack: http://github.com/substack/seaport
[17:49] SubStack: see also https://github.com/substack/airport
[17:49] ningu: when is spaceport coming?
[17:50] lohkey: the thing about vhosting and node
[17:50] lohkey: is what about for non web stuff?
[17:50] hlomas: @tlack_ actually it might be doing it on windows now, anyway the underlying problem is the incomplete image.... here is the gist https://gist.github.com/2218340
[17:50] jocafa: argh! why do focusin and focusout events not give me a relatedTarget?!
[17:50] lohkey: at work we use node for a couple of things
[17:50] lohkey: and only one of them uses HTTP
[17:51] thetony: SubStack: thank you for dnode
[17:51] AndreasMadsen has joined the channel
[17:51] lohkey: all other are other protocols
[17:51] ThatOtherPerson has joined the channel
[17:51] joebobjoe has joined the channel
[17:51] SubStack: ningu: been super working on that!
[17:52] SubStack: probably calling it spaceship
[17:52] ningu: :)
[17:52] lohkey: tlack_: you want your devs to write node like it's php? https://github.com/JosephMoniz/node.php
[17:52] bartt has joined the channel
[17:52] lohkey: </troll>
[17:52] tlack_: yikes
[17:52] lohkey: don't laugh at my latest expirement
[17:52] lohkey: wrote it for a hackathon at work
[17:52] joebobjoe: Anyone got any pointers on how I can go about resolving this issue? Forever has restarted my Flask (Python) script/server 1000 times in the past 2 days. http://bpaste.net/show/25955/
[17:52] RORgasm has joined the channel
[17:52] robi42 has joined the channel
[17:53] evilnate has joined the channel
[17:53] aranw has joined the channel
[17:53] bradleymeck: joebobjoe have you set -c to python? it looks like its trying to run your script in node
[17:53] tlack_: hlomas: why dont you put fs.close inside the fs.write callback?
[17:53] tlack_: hlomas: im an idiot, ignore me
[17:54] joebobjoe: bradleymeck: Hmmm I can remember doing that at some point, but I may have forgot... I'll check, brb
[17:54] tlack_: hlomas: maybe out of desperation try writeFileSync instead of writeFile?
[17:54] EyePulp: joebobjoe: maybe run your python directly from the command line or from a screen session and skip forever so you can see if it's a problem with your python?
[17:54] jsurfer has joined the channel
[17:54] dwhittle has joined the channel
[17:55] sadjow has left the channel
[17:55] automata has joined the channel
[17:56] brngardner has joined the channel
[17:57] qjcg has joined the channel
[17:57] snearch has joined the channel
[17:57] joebobjoe: bradleymeck EyePulp: That's probably what I did at some point and then I misread the logs as being pertinent to the current forever script... Well then I'll have to figure out what's going on w/ Python then, thanks!
[17:58] paulwe has joined the channel
[17:59] PHPFluesterer has left the channel
[18:00] admc has joined the channel
[18:00] quijote has joined the channel
[18:01] misza_ has joined the channel
[18:01] jrundquist has joined the channel
[18:01] meandi17 has joined the channel
[18:01] zanefactory has joined the channel
[18:02] gozala has joined the channel
[18:04] exchgr has joined the channel
[18:04] dshaw_ has joined the channel
[18:05] perezd_ has joined the channel
[18:05] githogori has joined the channel
[18:07] Maxani has joined the channel
[18:07] eboy has joined the channel
[18:07] eboy has joined the channel
[18:08] paulwe has joined the channel
[18:09] ThatOtherPerson: I just ran `./configure`, `make`, and `sudo make install`, then restarted my experimental Node.js IRC bot. Where's my moon laser?
[18:09] Poetro has joined the channel
[18:09] Poetro has joined the channel
[18:09] argami has joined the channel
[18:10] epokmedi1 has joined the channel
[18:10] hipsterslapfight has joined the channel
[18:10] ppcano has joined the channel
[18:10] paulwe has joined the channel
[18:13] skm has joined the channel
[18:13] paulwe has joined the channel
[18:13] argami has joined the channel
[18:14] stagas has joined the channel
[18:14] AvianFlu has joined the channel
[18:15] jxson has joined the channel
[18:16] wankdanker: ThatOtherPerson: good question. I did that same thing earlier, but no moon laser. I thought it might be because I checked out the v0.6 branch which is actually v0.6.15-pre...
[18:16] ThatOtherPerson: Huh. I downloaded the source from the blog.
[18:17] ThatOtherPerson: Maybe we have to sign up somewhere?
[18:17] wankdanker: maybe it's because you did ./configure and that was not specified.
[18:17] wankdanker: ;)
[18:17] ThatOtherPerson: Yikes. Sneaky.
[18:18] zodiak has joined the channel
[18:18] clifton has joined the channel
[18:19] Renegade001 has joined the channel
[18:20] insin has joined the channel
[18:21] Skaag has joined the channel
[18:21] kmiyashiro has joined the channel
[18:21] argami has joined the channel
[18:22] mandric has joined the channel
[18:23] argami has joined the channel
[18:24] vpamulap has joined the channel
[18:24] Skaag has joined the channel
[18:26] thirdknife has joined the channel
[18:26] EhevuTov has joined the channel
[18:27] isao has joined the channel
[18:28] jakehow has joined the channel
[18:29] nateps has joined the channel
[18:30] Renegade001 has joined the channel
[18:30] maxogden: no lasers for superusers
[18:30] maxogden: since they already have super powers
[18:32] ThatOtherPerson: But I'm not a superuser
[18:32] ThatOtherPerson: And I'd really like superpowers
[18:33] kesor_ has joined the channel
[18:33] nerdfiles has joined the channel
[18:34] mehlah has joined the channel
[18:34] vam3c has joined the channel
[18:35] M1l3n1um has joined the channel
[18:35] orlandovftw has joined the channel
[18:35] hlomas: Anyone have any idea why this sometimes properly saves the image, and sometimes saves a scrambled, incomplete image? https://gist.github.com/2218871
[18:35] vam3c has joined the channel
[18:35] qjcg has joined the channel
[18:36] hlomas: If you run it multiple times you will receive either true or false, and I have no idea why
[18:36] alessioalex has joined the channel
[18:37] sectionme has joined the channel
[18:38] nerdfiles1 has joined the channel
[18:40] maxogden: require('request')(imageURL).pipe(require('filed')('captcha.jpg'))
[18:41] CIA-19: node: 03Fedor Indutny 07master * r5e8c2b0 10/ src/node.cc : 
[18:41] CIA-19: node: debugger: use v8 api to wait for a connection
[18:41] CIA-19: node: Use v8::Debug::EnableAgent(_, _, true) to wait for incoming
[18:41] CIA-19: node: debugger-client connection before emitting any break (or other) events.
[18:41] CIA-19: node: This commit should fix test/simple/test-debugger-repl faults. - http://git.io/hWikww
[18:41] CIA-19: node: 03Fedor Indutny 07master * r0022477 10/ src/node.js : 
[18:41] CIA-19: node: Revert "debug: Wait 50ms before running the main module"
[18:41] CIA-19: node: This reverts commit c781f17742170f2e127f9ee6652c56b406c30586. - http://git.io/ZO4ClQ
[18:43] theCole has joined the channel
[18:44] elguapo99 has joined the channel
[18:44] larsschenk has joined the channel
[18:44] EhevuTov_ has joined the channel
[18:44] diogogmt has joined the channel
[18:44] tlack_: maxogden: what's "filed"? never come across that before and hard to google for
[18:45] maxogden: there is a registry of node modules ya know
[18:45] maxogden: :P
[18:46] mikeal has joined the channel
[18:46] tlack_: maxogden: looks handy thanks (and thanks for being unncessarily catty about it)
[18:46] maxogden: teach a man to fish etc etc
[18:46] maxogden: (or woman)
[18:48] jerrysv: teach a cat to play with string ...
[18:49] thetony: teach a kid to huff spray paint ...
[18:49] jerrysv: and it will keep bringing you the string
[18:49] jolo2 has joined the channel
[18:49] thetony: the kid or the cat?
[18:50] literal_username: Hi all, I've ventured back into the crazy world of email address validation. After an hour reading regexs, I have an idea for a different approach, and I want to get your feedback. It has two rules: 1. match /^[^@+]@[^@+]$/ 2. There must be an MX record for everything to the right of the "@". Opinions?
[18:50] ThatOtherPerson: Are spaces legal in email addresses?
[18:51] jarek: literal_username: are you sure you are not reinventing the wheel?
[18:51] hipsterslapfight has joined the channel
[18:51] literal_username: jarek: You sound like you haven't ever ventured into this world.
[18:51] thetony: there are already libraries to check mx records - 
[18:51] konobi: there are a ridiculous number of things that are valid in an email address
[18:51] literal_username: thetony: Do I really need a library for that?
[18:51] context: whats that node app that lets you 'mock' an smtp server like MockSMTP but its a web app
[18:51] konobi: (inluding @ signs in the the local-part)
[18:51] thetony: literal_username: no, but why keep reinventing the wheel as jarek points out
[18:52] literal_username: thetony: Because there's no accepted wheel
[18:52] literal_username: There's only really long regexes that come with caveats about how they are not perfect.
[18:52] thetony: literal_username: then do whatever you want to do, why bother checking the string before checking for an MX? 
[18:53] literal_username: I can't parse out a server if it doesn't match /^[^@+]@[^@+]$/
[18:53] thetony: take everything right of the last @
[18:53] mc: exactly
[18:54] literal_username: It must at least be *@* or it doesn't even make sense. But that's the shortest email regex in the world, but about 300 characters.
[18:54] JakeSays: v6.14 is current stable?
[18:54] JakeSays: er, .6.14
[18:54] tlack_: literal_username: just do whatever is practical for your app, i'd say
[18:54] tlack_: literal_username: not sure how many people are using the web these days with an email address with double @ signs
[18:55] literal_username: tlack_: Thanks, I often do. But this is a rather geneeric question that's applicable to most of our work.
[18:55] thetony: tlack_: probably not many but he wants to make it the gold standard email check solution
[18:55] insin: validanduseless@example.com
[18:56] literal_username: insin: `dig example.com MX +short` not valid
[18:56] jrundquist has left the channel
[18:56] thetony: checking for MX record against /^.*@(.*?)$/$1/   will tell you if it's valid
[18:56] literal_username: thetony: `dig example.com MX +short` not valid
[18:57] j01 has joined the channel
[18:57] thetony: then it's not a valid address 
[18:57] literal_username: Exactly. So it seems like a robust approach, right?
[18:57] thetony: why bother spot checking prior to running that command?
[18:57] literal_username: thetony: Hmm, I guess having a single @ seems like the bare minimum necessary check.
[18:57] thetony: it does and i bet if you made it available as a webservice that i'd use it
[18:58] maxogden: o/ yes a webservice like this http://maxogden.com/#blog/gut-hosted-open-data-filets
[18:58] literal_username: thetony: Way quicker to do a local dig than use a webs service. DNS is cached.
[18:58] thetony: literal_username: it would run that dig command with empty parameters and fail, indicating an invalid address : - )
[18:58] thetony: dns is cached elsewhere too
[18:59] literal_username: thetony: You're right, but I also must have a recipient with at least one char.
[18:59] damiano_ has joined the channel
[18:59] graeme_f has joined the channel
[18:59] damiano_: hello everybody
[18:59] damiano_: i have created routes.js like this: https://gist.github.com/2219234 (i'm using express)
[18:59] thetony: maxogden: :)
[19:00] damiano_: as you can see I have Home.index Contatti.index  Contatti.conferma
[19:00] damiano_: etc et
[19:00] thetony: literal_username: what do you mean?
[19:00] mattgifford has joined the channel
[19:00] damiano_: i need to load those modules like Home, Contatti ecc ecc
[19:00] damiano_: can i do it automatically reading /controllers/ directory OR do i must load one after the other?
[19:01] literal_username: thetony: I mean gmail.com is an invalid email address.
[19:01] literal_username: thetony: So is @gmail.com
[19:01] damiano_: re-type....can i load all th emodules in a directory automatically ?
[19:01] literal_username: thetony: And so is @@gmail.com
[19:01] joshuajabbour has joined the channel
[19:02] thetony: literal_username: i think @@gmail.com may be RFC valid
[19:02] tlack_: literal_username: you'd already be done if you just regex'd whatever@whatever.whatever, this RFC nonsense is insane
[19:02] literal_username: thetony: Interesting. I'm not sure.
[19:02] thetony: tlack_: lol, i'm just waiting for my gf to get here to go eat
[19:02] dylang_ has joined the channel
[19:02] literal_username: tlack_: Plenty of people have weird email addresses.
[19:02] thetony: and for these oracle tools to install so i can check this sql, and a whole bunch of other crap to finish
[19:03] tlack_: literal_username: yes, that vital contingent of UUCP users
[19:03] damiano_: i mean to avoid something like: https://gist.github.com/2219269 i would liek to do that because if i have many controllers the list will be long...so if i can load automatically all the modules inside a directory is better
[19:04] thetony: literal_username: if you want you can change my .*s to .+s, that will ensure there is something there to match otherwise you'd run an empty dig and still fail
[19:04] brngardner has joined the channel
[19:04] literal_username: thetony: You're right. Although I didn't see your regex. So /^.*@.*$/ right?
[19:04] wilmoore has joined the channel
[19:05] literal_username: I meant /^.+@.+$/ 
[19:05] thetony: do a replace with /^.+@(.+?)$/$1/
[19:05] staar2: express suggests not to use default memory based storage, would the mongodb storage be enough ?
[19:05] Maxani has joined the channel
[19:05] ningu: staar2: mongodb or redis
[19:06] thetony: anyone know of a benchmark of joins with mapreduce in mongo vs sql dbs?
[19:06] mcluskydodallas has joined the channel
[19:06] literal_username: thetony: Yup, that makes awesome sense. Thanks!
[19:06] staar2: for redis there's also need for some redis deamon ?
[19:07] automata has joined the channel
[19:07] stafamus has joined the channel
[19:08] thetony: literal_username: that will fail for replace on 'last.fm'
[19:08] Hebo has joined the channel
[19:08] literal_username: thetony: Yeah, in js a match is more appropriate.
[19:09] literal_username: I'm sticking with .match(/^(.+)@(.+)$/)
[19:09] tlack_: staar2: yes, redis needs a simple daemon running
[19:10] Axsuul has joined the channel
[19:11] dwhittle has joined the channel
[19:11] crescendo|work has joined the channel
[19:16] damiano_: ??
[19:16] damiano_: someone coul dhelp me?
[19:16] ThatOtherPerson has left the channel
[19:18] damiano_: tlack, 
[19:19] Renacor has left the channel
[19:19] mehale: when reading json data from a string, how can I turn it into an object effectively?
[19:20] jomoho has joined the channel
[19:20] ningu: JSON.parse?
[19:21] larsschenk has left the channel
[19:21] damiano_: ningu, can I load all the modules inside a directory...automatically ?
[19:21] mehale: var newvar = jsonvar.parse ?
[19:21] ningu: damiano_: you can easily implement that with fs.readdir
[19:21] nerdfiles1 has left the channel
[19:22] ningu: mehale: var obj = JSON.parse(str)
[19:22] mehale: oh, thanks
[19:23] RalphK has joined the channel
[19:24] damiano_: ningu, thanks!
[19:24] colinclark_ has joined the channel
[19:25] damiano_: ningu
[19:25] damiano_: if i do
[19:25] damiano_: require('myModule')
[19:26] damiano_: my script will have the method of that module
[19:26] isao has left the channel
[19:26] mehale: ningu: it sometimes throw errors like: :null}{"db":"5", SyntaxError: Unexpected token { --- any idea how to prevent it?
[19:26] damiano_: without forcing the assignation like: var a = require('mymodule')
[19:26] dilvie has joined the channel
[19:26] ningu: damiano_: no
[19:26] damiano_: a.method1()
[19:26] damiano_: ?
[19:26] meandi18 has joined the channel
[19:26] ningu: damiano_: read the docs for require()
[19:26] mehale: no newline char in there...
[19:26] ningu: mehale: pass valid JSON?
[19:26] langworthy has joined the channel
[19:27] mehale: hm, thats json generated using perl json module.
[19:27] mehale: should be neat
[19:27] gregmoreno has joined the channel
[19:28] mehale: JSONlint says its valis json...
[19:28] mehale: node.js seems to have problems on Â¨obsÂ¨:null}{
[19:30] guiapprentice has joined the channel
[19:30] gregpascale has joined the channel
[19:30] damiano_: ningu, this is the doc:
[19:30] damiano_: require()#
[19:30] damiano_: {Function}
[19:30] damiano_: To require modules. See the Modules section. require isn't actually a global but rather local to each module.
[19:30] damiano_: :D
[19:31] damiano_: ;)
[19:31] ningu: there are full docs on the node site
[19:32] yawNO has joined the channel
[19:32] argami has joined the channel
[19:34] arturadi_: isaacs: hey, since npm link doesn't work on Windows, I was wondering if there's a way to publish npm packages in "development" version, i.e. the cutting-edge stuff, so we don't have to keep publishing new versions for every tweak. or perhaps there's already a workflow for that?
[19:36] tomasztomczyk has joined the channel
[19:36] meelash has joined the channel
[19:36] trivol has joined the channel
[19:36] ioscale has joined the channel
[19:37] ucesco has joined the channel
[19:38] tvw has joined the channel
[19:38] arturadib: isaacs: e.g., in package.json we'd set {"version":"dev"}, and `npm publish` would actually replace the old content for that "version"
[19:38] Renegade001 has joined the channel
[19:38] ucesco has joined the channel
[19:39] ucesco: Hey, anyone knows free node.js hosting with github integration?
[19:39] blueadept has joined the channel
[19:39] blueadept has joined the channel
[19:39] divoxx has joined the channel
[19:40] ucesco: hello?
[19:40] WarheadsSE: ucesco: it was 10 seconds.
[19:40] WarheadsSE: ok, technically 13
[19:41] ucesco: Well I guess I didn't ask to come up wth a new theory of solid bodies, was a simple question
[19:41] WarheadsSE: c9.io + no.de
[19:41] WarheadsSE: github plus editor plus hosting
[19:42] WarheadsSE: but then :p
[19:42] WarheadsSE: you did ask for entirely free huh..
[19:43] ucesco: thanks
[19:43] CIA-19: libuv: 03Bert Belder 07reviewme * r144c646 10/ (test/test-fs-event.c test/test-list.h): Add fs_event_close_with_pending_event test - http://git.io/wlgHUw
[19:43] elguapo99 has joined the channel
[19:45] innociv has joined the channel
[19:46] mraxilus has joined the channel
[19:47] adrianF has joined the channel
[19:47] Skaag_ has joined the channel
[19:48] vguerra has joined the channel
[19:50] blueadept: anyone know the best practice involving updating thousands of records at once using hte foursquare api?
[19:50] DTrejo__ has joined the channel
[19:50] DTrejo__: SubStack: did you ever implement paxos for node?
[19:50] blueadept: should i put a timer on each api call and space each call by half a second or such? or just throw each api update at foursquare at one time?
[19:50] dshaw_ has joined the channel
[19:50] SubStack: DTrejo__: negatory
[19:51] DTrejo__: SubStack: mmk, good to know :)
[19:51] orlandovftw has joined the channel
[19:52] dylang has joined the channel
[19:52] WarheadsSE: blueadept: might want to ask foursquare that :p
[19:54] dragansah has joined the channel
[19:54] thetristan has joined the channel
[19:54] dshaw_1 has joined the channel
[19:57] Renegade001 has joined the channel
[19:58] isaacs: arturadib: you can do this:  "publishConfig": { "tag": "dev" }
[19:58] kei has joined the channel
[19:58] isaacs: arturadib: that'll install it on the "dev" tag instead of the "latest" tag
[19:58] juanlas has joined the channel
[19:58] isaacs: arturadib: so you can do `npm i whatever@dev` to pick it up
[19:59] arturadib: isaacs: fantastic! does that also mean I don't have to update the ver prior to every `npm publish`?
[19:59] colinclark has joined the channel
[20:00] dwhittle has joined the channel
[20:01] kickingvegas has joined the channel
[20:02] yawNO: heya
[20:03] arturadib: isaacs: ("update the ver" == "bump the ver")
[20:03] arduix has joined the channel
[20:03] oldsplice has joined the channel
[20:04] AdamGoodrich has joined the channel
[20:04] ioscale has joined the channel
[20:04] piscisaureus_ has joined the channel
[20:04] hunterloftis has joined the channel
[20:05] argami has joined the channel
[20:06] argami has joined the channel
[20:06] hackband has joined the channel
[20:07] bingomanatee__ has joined the channel
[20:08] tomnewmann has joined the channel
[20:08] diogogmt has joined the channel
[20:09] argami_ has joined the channel
[20:09] divoxx has left the channel
[20:09] schredder has left the channel
[20:10] gr4yscale has joined the channel
[20:10] s0urce has joined the channel
[20:12] kyonsalt has joined the channel
[20:14] graeme_f has joined the channel
[20:15] tapout has joined the channel
[20:15] gerard0 has joined the channel
[20:15] graeme_f has joined the channel
[20:16] bergie has joined the channel
[20:16] kyonsalt: I can't view the title displayed by res.render('index',{title:'INDEX'}); it's confused... any1 met same problem?
[20:16] patcito has joined the channel
[20:16] xtro has left the channel
[20:17] thetony: literal_username: did you ever get it to work?
[20:17] justicefries has joined the channel
[20:17] kyonsalt: âˆš ï½ž
[20:17] argami has joined the channel
[20:18] juanlas has left the channel
[20:18] vargle has joined the channel
[20:18] Hamms has joined the channel
[20:19] dgathright has joined the channel
[20:20] incon has joined the channel
[20:20] s0urce: i am trying to build my own middleware between http.createServer and the callback function, any1 an idea how i can add the orginal callback function into my middleware one?  this i got, but this bind, seems not to be what i need: http.createServer(middle_callback.bind(real_callback));
[20:21] elijah__ has joined the channel
[20:22] argami_ has joined the channel
[20:23] RobWC has joined the channel
[20:23] RobWC has left the channel
[20:24] lukegalea has joined the channel
[20:25] maxogden: httpserver.emit('request', req, resp)
[20:25] argami has joined the channel
[20:27] argami_ has joined the channel
[20:28] s0urce: ty, but there seems to be another problem, i thought my functions did it get called twice, but the simple http.createServer(function(req,res){ console.log('x');}); get called twice, i see 2 x on console on each page reload
[20:28] s0urce: is this normal?
[20:29] hunterloftis: isaacs: new laptop. npm adduser (with the corret un/pass) gives me "conflict Document update conflict." <-- any ideas for what I should try next?
[20:29] Renegade001 has joined the channel
[20:30] jrostand has joined the channel
[20:30] thetony: s0urce: source?
[20:30] s0urce: http://pastebin.com/kaderSYr
[20:31] broofa_ has joined the channel
[20:32] mikeal has joined the channel
[20:32] thetony: s0urce: are you running this from a browser?  the browser may be looking for favicon or something - spit out the request's info so you can tell if it's requesting the same page
[20:33] thetony: requesting the same page meaning if your browser is requesting the same page twice or looking for another resource from the server, like a favicon
[20:33] sammmy: What's the best async library out there?
[20:33] s0urce: in the request i see the favicon call, but what to do against?
[20:33] maxogden: sammmy: nodejs
[20:33] sammmy: maxogden: I mean the best helper module, like node-async
[20:33] thetony: s0urce: what is the webserver for?
[20:34] s0urce: for publish a page?
[20:34] s0urce: what u mean
[20:34] TheJH has joined the channel
[20:35] thetony: s0urce: are you trying to publish as a service or are you gonig to use it to just generally serve pages to the public?  if the latter then people will make requests for favicon, you should be able to account for what resource someone is requesting if you're going to build a webserver
[20:36] FredC_ has joined the channel
[20:36] jimmysparkle has joined the channel
[20:36] tilgovi has joined the channel
[20:36] s0urce: that i try is to build my own little "express", so i just wanna serve pages
[20:36] s0urce: what*
[20:36] jrostand has left the channel
[20:36] gozala has joined the channel
[20:37] mraxilus has joined the channel
[20:38] thetony: s0urce: i use node because javascript is very flexible and it's super quick, i write applications to scrape and transform data - not really using it for web server stuff except web services (like my sentiment analysis which is naive bayesian algo in node) - i'm not familiar with express, regardless
[20:38] JakeSays: so i want to add to the baked in javascript files in node, and then have my custom built node.exe run one of those files on start. is there documentation on how i might go about it?
[20:40] brngardner has joined the channel
[20:41] warz has joined the channel
[20:41] JakeSays: hmm. i guess i'm trying to add to Core modules
[20:43] chrishyle has joined the channel
[20:45] gr4yscale has joined the channel
[20:45] dshaw_ has joined the channel
[20:48] dodo has joined the channel
[20:48] PsiliPharm has joined the channel
[20:50] robhawkes has joined the channel
[20:50] michaelhartau has joined the channel
[20:50] timeimp has joined the channel
[20:50] timoxley: sammmy async is pretty good
[20:50] disappearedng has joined the channel
[20:51] sammmy: timoxley: Yeah, I'm look at that now. I'm trying to get ideas for my own async module.
[20:51] timoxley: sammmy why your own
[20:51] sammmy: timoxley: becaues I like my syntax better.
[20:52] argami has joined the channel
[20:52] rtgibbons has joined the channel
[20:52] timoxley: sammmy cool
[20:52] sammmy: timoxley: it's called yarn. ;P
[20:53] evilnate has joined the channel
[20:54] eldar_ has joined the channel
[20:54] willwhite has joined the channel
[20:55] CIA-19: node: 03Nathan Rajlich 07master * rf41901c 10/ (5 files in 3 dirs): 
[20:55] CIA-19: node: repl: make ^D emit an 'end' event on the readline instance
[20:55] CIA-19: node: Also emit 'exit' on the repl when 'end' is emitted on the readline.
[20:55] CIA-19: node: Fixes `node debug test/fixtures/breakpoints.js` when ^D is pressed. - http://git.io/FU68VA
[20:55] sammmy: timoxley: here's my project if you want to check it out https://github.com/samholmes/yarn
[20:56] timoxley: sammmy cool. thanks
[20:56] sammmy: timoxley: np. Give me suggestions if you have any. ;)
[20:57] argami has joined the channel
[20:58] gozala has joined the channel
[20:58] timoxley: sammmy I haven't seen that pattern all that much recently, having two callbacks one for error one for success
[20:59] timoxley: sammmy only older libs seem to use it. I could be mistaken though.
[20:59] argami_ has joined the channel
[21:00] sammmy: timoxley: well, that pattern is implicit in how you want to use yarn. You could do it differently if you want.
[21:00] gorsti has joined the channel
[21:00] robi42 has joined the channel
[21:01] ramitos has joined the channel
[21:01] CIA-19: libuv: 03Bert Belder 07v0.6 * r7e8fe3e 10/ test/test-fs-event.c : test-fs-event.c: style - http://git.io/VvtHMw
[21:01] CIA-19: libuv: 03Bert Belder 07reviewme * r732cf91 10/ (test/test-fs-event.c test/test-list.h): Test: verify that no callbacks are made after closing an fs event watcher - http://git.io/mI3Dnw
[21:01] CIA-19: libuv: 03Bert Belder 07reviewme * r89303f3 10/ test/test-fs-event.c : Fs event tests: don't fail if a previously failed test left stray files - http://git.io/dnl1cA
[21:01] CIA-19: libuv: 03Bert Belder 07reviewme * r1795427 10/ src/win/fs-event.c : Windows: never call fs event callbacks after closing the watcher - http://git.io/d2P-yw
[21:01] CIA-19: libuv: 03Bert Belder 07reviewme * raff0783 10/ (test/test-fs-event.c test/test-list.h): Test: verify that uv_close from an fs event callback works properly - http://git.io/R0pXRA
[21:01] argami has joined the channel
[21:01] jomoho has joined the channel
[21:02] s0urce has left the channel
[21:02] sammmy: timoxley: the point is that you can have two separate callbacks for handling success and error, you don't have to pass on these operations to these callbacks.
[21:03] ningu: jquery lets you do it both ways for ajax
[21:04] argami_ has joined the channel
[21:06] bradleymeck has joined the channel
[21:08] tommyvyo has joined the channel
[21:10] kesor_ has joined the channel
[21:10] shinuza has joined the channel
[21:11] kei has joined the channel
[21:11] maxogden: the 'node way' is to use 1 callback for both
[21:11] maxogden: the first argument always being the error
[21:13] admc has joined the channel
[21:13] chjj: maxogden: i believe that's just called, 'the right way' ;)
[21:13] nateps has joined the channel
[21:14] argami has joined the channel
[21:15] sammmy: maxogden: true. You can pass a this(0) as a callback to handle it the node way, but in the this(0) function you can pass on the error or success handling to this(0) and this(1) respectively.
[21:15] sammmy: Of course, this(0) and this(1) within the first this(0) callback reference two separate functions (the two functions in the next set).
[21:15] argami__ has joined the channel
[21:16] ioscale has left the channel
[21:16] josh-k has joined the channel
[21:17] pgherveou has joined the channel
[21:17] netxshare has joined the channel
[21:17] netxshare: did I win?
[21:17] bkaney has joined the channel
[21:18] bingomanatee_ has joined the channel
[21:19] argami has joined the channel
[21:19] maxogden: sammmy: im confused by your last two statements :)
[21:20] eventualbuddha has joined the channel
[21:20] dwhittle has joined the channel
[21:20] jraffucci has joined the channel
[21:21] argami has joined the channel
[21:21] sh1mmer has joined the channel
[21:21] sammmy: maxogden: Eh.. How it works is like this:  yarn(function initial(){ this(0); /* returns zeroth */ this(1); /* returns first */ this(2); /* returns second */ })(function zeroth() { }, function first() {  }, function second(){ });
[21:22] divoxx has joined the channel
[21:22] crutex has joined the channel
[21:22] sammmy: So to call zeroth, first or second you'd use this(0)(), this(1)() or this(2)() respectively.
[21:23] maxogden: i dont know what you are referring to by (0) and (1) etc
[21:23] boltR has joined the channel
[21:23] sammmy: The this will also be available in the funcitons zeroth, first and second for the next set of functions.
[21:24] sammmy: maxogden: this(0) returns function zeroth() {}
[21:24] maxogden: zeroth???
[21:24] vam3c has joined the channel
[21:24] evilnate: popcorn
[21:24] maxogden: sounds like a region in world of warcraft
[21:24] sammmy: maxogden: you see where I defined zeroth?
[21:25] bkaney has joined the channel
[21:25] sammmy: maxogden: I'm not sure what the correct ordinal for zero is.
[21:25] sammmy: maxogden: looks like I got it right. http://www.answerbag.com/q_view/32548
[21:26] marcuswestin has joined the channel
[21:28] evilnate has joined the channel
[21:28] chilts has joined the channel
[21:29] gozala has joined the channel
[21:31] evilnate has joined the channel
[21:33] EyePulp has joined the channel
[21:35] autif has left the channel
[21:36] Skaag has joined the channel
[21:37] perezd_ has joined the channel
[21:37] automata has joined the channel
[21:38] robi42 has joined the channel
[21:39] jsulak has joined the channel
[21:39] CIA-19: libuv: 03Bert Belder 07v0.6 * raff0783 10/ (test/test-fs-event.c test/test-list.h): Test: verify that uv_close from an fs event callback works properly - http://git.io/R0pXRA
[21:39] CIA-19: libuv: 03Bert Belder 07v0.6 * r1795427 10/ src/win/fs-event.c : Windows: never call fs event callbacks after closing the watcher - http://git.io/d2P-yw
[21:39] CIA-19: libuv: 03Bert Belder 07v0.6 * r89303f3 10/ test/test-fs-event.c : Fs event tests: don't fail if a previously failed test left stray files - http://git.io/dnl1cA
[21:39] CIA-19: libuv: 03Bert Belder 07v0.6 * r732cf91 10/ (test/test-fs-event.c test/test-list.h): Test: verify that no callbacks are made after closing an fs event watcher - http://git.io/mI3Dnw
[21:39] satyr has joined the channel
[21:41] domo1 has joined the channel
[21:42] domo1: mikeal: you around?
[21:42] argami has joined the channel
[21:44] metanat has joined the channel
[21:45] metanat has left the channel
[21:46] caioketo has joined the channel
[21:46] CIA-19: libuv: 03Bert Belder 07master * r6e0ca3a 10/ (src/win/fs-event.c test/test-fs-event.c test/test-list.h): 
[21:46] CIA-19: libuv: Merge branch 'v0.6'
[21:46] CIA-19: libuv: Conflicts:
[21:46] CIA-19: libuv:  src/unix/linux/inotify.c (+5 more commits...) - http://git.io/2dQ0Fg
[21:47] argami has joined the channel
[21:48] fielding has joined the channel
[21:49] jsulak has left the channel
[21:49] socketio\test\24 has joined the channel
[21:51] socketio\test\29 has joined the channel
[21:51] jefferai has joined the channel
[21:52] hij1nx has joined the channel
[21:52] mikeal: domo1: yes
[21:52] socketio\test\81 has joined the channel
[21:53] dubenstein has joined the channel
[21:53] Renegade001 has joined the channel
[21:53] domo1: mikeal: I've asked a bunch of times in here and no one seemed to know or I didn't get any response, so I figured I'd ask you .. when using your request library and having the timeout option set, I seem to be getting memory leaks under heavy load (for me) of my server. I'm making 5-10 http requests per second
[21:54] domo1: if I comment out the timeout option, i dont see any memory leak warnings
[21:54] domo1: I can paste the output if you'd like
[21:54] mikeal: hrmm
[21:54] mikeal: let me look at that code
[21:54] mikeal: i didn't actually write that feature
[21:54] domo1: ohh
[21:55] jaha has joined the channel
[21:55] dubenstein has joined the channel
[21:55] mikeal: are there any forwards in the requests you're making?
[21:57] mikeal: what are you setting in the timeout option?
[22:01] lucidity14 has joined the channel
[22:01] FredC_ has joined the channel
[22:01] domo1: mikeal:  forwards?
[22:01] domo1: and I'm setting an int value of like 800
[22:03] mikeal: hrm....
[22:03] mikeal: i can't see anything obvious
[22:03] mikeal: unless there is a leak in clearTimeout
[22:04] dwhittle has joined the channel
[22:05] devongovett has joined the channel
[22:05] robhawkes has joined the channel
[22:07] rtgibbons has joined the channel
[22:08] hipsterslapfight has joined the channel
[22:08] joshfinnie has joined the channel
[22:08] domo1: mikeal:  https://github.com/joyent/node/pull/2357
[22:08] domo1: im guessing thats not related
[22:08] robi42 has joined the channel
[22:08] domo1: i'll file new haha
[22:08] alexrbarlow has joined the channel
[22:09] mikeal: that's been fixed
[22:10] automata has joined the channel
[22:10] Cheery has joined the channel
[22:11] Trindaz has joined the channel
[22:12] Trindaz: Hi all - is this the place for a node.js noob to ask questions about writing their first node application?
[22:12] domo1: why not!
[22:12] domo1: there is no #node.js.newbies channel .. so ask away
[22:12] mikeal: Trindaz: yes
[22:12] thetony: Trindaz: gopher it
[22:12] domo1: ha. ha.
[22:13] Trindaz: what is 'gopher'?
[22:13] domo1: just ask your question haha :)
[22:13] maxogden: a burrowing rodent with fur-lined pouches on the outside of the cheeks, found in North and Central America
[22:13] Trindaz: lol thanks maxogden
[22:13] jerrysv: Trindaz: http://en.wikipedia.org/wiki/Gopher_(protocol)
[22:13] robi42 has joined the channel
[22:13] Karmaon has joined the channel
[22:13] jerrysv: maxogden: smart ass
[22:13] jerrysv: thetony: troll :)
[22:14] Trindaz: My questions relates to the SO questions I posted yesterday at http://stackoverflow.com/questions/9884418/how-can-i-make-this-call-to-request-in-nodejs-synchronous
[22:14] Trindaz: In short: I am having trouble wrapping my head around how to use the asynchronous request lib in node - i'm coming from python dev where I use urllib2 pretty commonly in a 'synchronous' kind of way
[22:15] maxogden: Trindaz: get_source_at(uri, callback)
[22:15] maxogden: Trindaz: and call like get_source_at('http://www.google.com', function(err, resp body){})
[22:15] jerrysv: Trindaz: very common, moving from sync to async can be a tough transition
[22:15] maxogden: Trindaz: and modify your code to say request({url: uri}, callback)
[22:15] Trindaz: thanks maxogden - I understand the concept of asynchronous requests, *but* i'm writing a web application where I want to wait until all the 'scrape' tasks are completed before i return a response to the user
[22:16] argami has joined the channel
[22:16] maxogden: Trindaz: require('async').parallel([callback1, callback2, callback3], function(err){ /* all requests are done at this point */})
[22:16] jerrysv: Trindaz: there are libraries like step that help with that
[22:16] thetony: Trindaz: same concept as what maxogden is suggesting - you'd just call the get_source_at while handling the request and you'd write to the output (response) in that callback
[22:16] jerrysv: or async
[22:16] bingomanatee_ has joined the channel
[22:16] bkaney has joined the channel
[22:16] coderarity: Trindaz: you can do this asynchronously - you'd have a callback that runs when they all complete
[22:17] Trindaz: but there's almost nothing else to do besides calls to request, so my application will be ready to return a response to the user before i get a response from request
[22:18] enmand has joined the channel
[22:18] Trindaz: i have a hack now where my web application hands the response object to the callback function that request uses, so res.end is never called until i get the response from request, but this hack is going to result in very messy / complex code in the long term as i build out the rest of my app and add more and more calls to request
[22:19] Trindaz: Here is a link to my app to show the hack that I am using now: https://gist.github.com/2220914
[22:19] thetony: Trindaz: so start writing after you create the request and let it stop blocking, just close the response in the callback?
[22:19] Trindaz: thanks for your help on this everyione
[22:19] briancray has joined the channel
[22:19] yaymukund: Trindaz: do you want to "wait until all the scrape tasks are complete before I return a response" or "return a response to the user before I get a response from request"? Those seem mutually exclusive.
[22:19] Trindaz: yaymukund - i want the former - wait until all the scrape tasks are complete before i return a response
[22:20] indy3 has joined the channel
[22:20] coderarity: Trindaz: you would return the response in the callback you pass in, like thetony said
[22:20] thetony: Trindaz: then do as maxogden suggested and write to the response in the callback from the scrape
[22:20] coderarity: javascript closures make that pretty easy
[22:20] mikeal has joined the channel
[22:20] thetony: Trindaz: it's difficult to think in terms of async from sync because things seem 'stateless' you'll always need to pass a reference 
[22:21] Trindaz: thanks thetony - however my objection is that if i use that technique then the code my application is going to become more 'messy'. It will mean I have to pass the response obejct to almost *every* function in the app, and constantly wonder about whether i should call 'end' (if it's the last request to have been tunneled) or if there are others waiting
[22:21] thetony: in this case you'll pass a reference to the response and write to it in your server's requests' response
[22:21] Krmmalik has joined the channel
[22:22] Trindaz: this because i will have 0..n calls to request (the node library) during the course of processing a request (in my app from the user)
[22:22] thetony: Trindaz: are you going to do multiple tunnel's per request?
[22:22] michaelhartau has joined the channel
[22:22] Trindaz: that's correct thetony
[22:22] Trindaz: so if i have to pass the response object around, then doesn't it also mean i have to write some kind of other observer object that makes sure .end is only used after the final call to request?
[22:23] thetony: then you'll have to use the async to wait until all requests return as someone? suggested before and then close the response that way.  it's not messy, it's just necessary because it's event driven rather than blocking event loop driven
[22:23] cliffano has left the channel
[22:23] dragansah has joined the channel
[22:23] yaymukund: Trindaz: async libraries solve that exact problem (The "some kind of observer object.." problem)
[22:23] Trindaz: i see how event is better - in the end my app will be faster because i've been able to send out n requests in near parallel.
[22:24] Trindaz: yaymukund - can you explain more - do you mean this - https://github.com/caolan/async ?
[22:24] Trindaz: (i wish i'd discovered this channel earlier btw. thanks again for your help all)
[22:25] yaymukund: Trindaz: I've only really used Step: https://github.com/creationix/step, but async has async.parallel()
[22:25] thetony: Trindaz: async.parallel looks like the one you want
[22:25] kvda has joined the channel
[22:25] Trindaz: hmmm... but with step i lose the benefit of n requests in parallel don't i
[22:25] thetony: unless your tunnels rely on one finishing prior to another
[22:25] yaymukund: Trindaz: (but yeah, either of those will work)
[22:25] Trindaz: theony - some of them will but not all
[22:26] meandi19 has joined the channel
[22:26] Trindaz: i was hoping for something more 'native' than either creationix or caolan's work
[22:26] thetony: Trindaz: you can use step in parallel too it looks like, from example #2
[22:26] sammmy: What kind of objects are Errors usually?
[22:26] creationix: Trindaz, step does parallel
[22:26] Trindaz: should i be worried about creating a dependency on a potentially obscure library that no one else will support in the future?
[22:27] thetony: creationix: beat ya :-)
[22:27] Trindaz: (checking step, brb)
[22:27] yaymukund: Trindaz: Step is tiny, which is why I like it.
[22:27] thetony: Trindaz: no, npm is probably there if node is
[22:27] yaymukund: Trindaz: if it breaks, you can read the source and figure it out
[22:27] quinnirill has joined the channel
[22:28] thetony: Trindaz: you can also distribute the library with the script
[22:28] t4nk053 has joined the channel
[22:30] recur has joined the channel
[22:30] argami has joined the channel
[22:31] lzskiss has joined the channel
[22:32] robi42 has joined the channel
[22:32] SuMarDi has joined the channel
[22:35] denom has joined the channel
[22:36] Sami_ZzZ has joined the channel
[22:36] BillyBreen has joined the channel
[22:37] denom: is there a clean way to share code between browser and node? In my client JS code, do I have to test for "module" and then "module.exports=..." ?
[22:37] alexrbarlow: Does anyone know of any libraries that fill a similar purpose to Geddy's Model layer. I.e something that lets you define objects and validations for them, then hook in your own persistence layer
[22:37] Trindaz: creationix - on a side note, in your documentation it says "The first parameter is reserved for errors since this is the node standard". Where did you learn that? Is there a place where all of those kinds of standards are listed? It triggers other questions for me like should I be using camelCase or under_scored function names in my node apps etc.
[22:38] robo has joined the channel
[22:38] jmar777 has joined the channel
[22:38] joshsmith has joined the channel
[22:38] Trindaz: creationix: (see my above comment in case my use of the name - format didn't highlight my message to you)
[22:39] hgg has joined the channel
[22:39] warz has joined the channel
[22:39] bnoordhuis: Trindaz: Is there a place where all of those kinds of standards are listed? <- kind of, in the source
[22:39] bnoordhuis: not explicitly though, it's a code style / convention thing
[22:40] carlyle has joined the channel
[22:40] denom: alexrbarlow,  I'm working on models using Backbone.js on the server. I'm hoping to swap the "sync" method to allow for redis persistence layer
[22:40] tlack_: Trindaz: let me know if you find a good 'best practice's sheet somewhere; if not you should make one. 
[22:40] Trindaz: bnoordhuis: you're saying just get familiar with the actual node.js source code and repeat and commonly occurring patterns?
[22:40] blendedbychris has joined the channel
[22:40] tlack_: Trindaz: for the record, most people seem to use CamelCase for objects and camelCase for functions/methods
[22:41] alexrbarlow: denom: that sounds interesting, but perhaps limiting to Redis isnt that wise of a use case
[22:41] bnoordhuis: Trindaz: well, that's where creationix gets it from
[22:41] alexrbarlow: beheraps plugable backends are a good idea?
[22:41] Vespakoen has joined the channel
[22:41] alexrbarlow: perhaps?*
[22:41] blendedbychris: I have a question of the beginner type.
[22:41] bnoordhuis: Trindaz: i'll leave it up to you if you actually want to read the source :)
[22:41] cipher___ has joined the channel
[22:41] Trindaz: tlack_: ok i will!
[22:41] denom: alexrbarlow, you can use any persistence layer
[22:42] denom: e.g. flatfile/in memory etc
[22:42] alexrbarlow: interesting, do you have a github url for this?
[22:42] tlack_: Trindaz: there are a couple of other best practices, such as the use of events/pipes, what exactly to export from a module (some people export a constructor!), etc..
[22:42] blendedbychris: I installed node from "latest" tgzâ€¦ ran configure, make, make installâ€¦ now i run npm install socket.io but I have an warning "Checking for node path                   : not found "
[22:42] Trindaz: bnoordhuis: if(i_want_to){ return "i will"; }else{ return "i will anyway";}
[22:42] bnoordhuis: :)
[22:42] Trindaz: tlack_: where did you find that?
[22:43] blendedbychris: i tried doing export NODE_PATH="/usr/local/bin/node" but that wasn't of any help
[22:43] tlack_: Trindaz: just in my random wanderings
[22:43] blendedbychris: ideas?
[22:43] bnoordhuis: blendedbychris: what does `echo $PATH` print?
[22:43] denom: alexrbarlow, http://documentcloud.github.com/backbone/  and  http://documentcloud.github.com/backbone/docs/backbone.html#section-162
[22:43] tlack_: blendedbychris: you sure 'make install' actually installed it globally?
[22:43] denom: you can override the sync method I think..
[22:43] cipher___: on line 90 i never get any results, if i change yar to say " hello {\n" though, then it does work.  here is the output: http://pastie.org/3681088 ... 
[22:43] mehale: is it feasible to have a global stream and each socket can access it and filter as needed?
[22:43] blendedbychris: tlack: i ran it as sudo if that' what you are asking
[22:43] blendedbychris:  /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games 
[22:44] cipher___: and the source: http://pastie.org/private/u2dbzculc3o7gumfnej7bq :S
[22:44] Trindaz: tlack_: ok cheers. ok here's another question that i've heard asked but never seen answered: what happens if support for v8 stops, or it goes in a direction that makes it less optimal for use with node.js? It's super interesting to me but I get the impression that most in the community treat it like a "and what if the sky falls" type question
[22:44] alexrbarlow: denom: im familiar with backbone and you could indeed overide that
[22:44] alexrbarlow: but it would help with validation and mass assignment etc
[22:44] tlack_: Trindaz: probably get forked, node is too huge right now (833 people in this channel for instance)
[22:45] bnoordhuis: blendedbychris: and what does `which node` print?
[22:45] Trindaz: so Google are aware of the growing dependence on v8 from the node community? It seems to make sense that at some point a server-optimized version of v8 will get forked out won't it?
[22:45] jsurfer has joined the channel
[22:45] blendedbychris:  /usr/local/bin/node
[22:45] blendedbychris: I did all this :)
[22:45] bnoordhuis: blendedbychris: okay, good :) seems your environment is sound
[22:45] Axsuul has joined the channel
[22:46] bnoordhuis: can you gist the complete output of `npm install`?
[22:46] bnoordhuis: Trindaz: the v8 team is quite open to patches that improve server-side performance
[22:46] blendedbychris: yep
[22:46] marcuswestin has joined the channel
[22:46] bnoordhuis: we've contributed more than a few already
[22:46] blendedbychris: http://pastie.textmate.org/private/zoq5drxmlihx5kjxfhrwng
[22:47] marcuswestin has joined the channel
[22:47] bnoordhuis: blendedbychris: it installed fine -> 'build' finished successfully (0.368s)
[22:48] blendedbychris: okay  i wasn't sure if i should be concerned about the node path thing
[22:52] dylang has joined the channel
[22:53] blendedbychris: bnoordhuis: to kinda get me going i checked out /usr/local/lib/node_modules/socket.io/examples/chat â€¦ am i supposed to be able to run node app.js ?
[22:53] brianseeders has joined the channel
[22:53] bnoordhuis: blendedbychris: yes
[22:56] mikeric has joined the channel
[22:56] astropirate has joined the channel
[22:56] bartt has joined the channel
[22:58] bartt1 has joined the channel
[22:59] mehale: is it possible to have a global stream and each socket can access it and filter its content as needed? or should I make one stream for each socket?
[23:00] thetony: qbit_: = qbert?
[23:00] markwubben has joined the channel
[23:02] illourr: browserquest doesnt work?!
[23:02] qbit_: heh
[23:02] qbit_: negatron
[23:03] bartt has joined the channel
[23:03] illourr: nodejs tweets it
[23:03] illourr: and its broke
[23:04] thetony: anyone here involved with this?  https://hacks.mozilla.org/2012/03/browserquest/
[23:05] lucidity14 has left the channel
[23:07] mattgifford has joined the channel
[23:07] bnoordhuis: mehale: i already told you that, didn't i? you need a stream per socket
[23:08] ioscale has joined the channel
[23:08] tlack_: if i have a.js, and that does require('./b.js), can b.js see functions defined in a.js?
[23:08] bartt1 has joined the channel
[23:08] ioscale has joined the channel
[23:10] shinuza: tlack_: no
[23:11] tlack_: shinuza: never? seems like b is seeing my debug() function but not other stuff. puzzled.
[23:11] booyaa has joined the channel
[23:12] Trindaz: how bad is it if i use 4 spaces for indentation instead of 2? 2 is so much less readable imo
[23:12] jmar777 has joined the channel
[23:12] skomski has left the channel
[23:12] slloyd has joined the channel
[23:13] tlack_: Trindaz: i prefer hard tabs but im going the way of the dodo on that one i think. leave that out of your doc if you are writing one.. not worth arguing about
[23:13] shinuza: tlack_: b sees whatever is defined in module.exports in a
[23:13] shinuza: nothing else
[23:14] Joeysomo has joined the channel
[23:14] Trindaz: tlack_: thanks
[23:14] ben_alman: does anyone know how to test if a given path is absolute in nodejs on windows?
[23:14] Joeysomo has joined the channel
[23:14] ben_alman: it seems like depending what drive i run node from, path.resolve('/') refers to THAT DRIVE
[23:14] Trindaz: tlack_: how much experience have you had with node.js? have you seen these docs? http://nodeguide.com/
[23:14] tlack_: shinuza: you're right. that actually makes a lot of sense. thank you
[23:15] horofox has joined the channel
[23:15] yogig has joined the channel
[23:15] jakehow has joined the channel
[23:15] tlack_: Trindaz: a couple of weeks, but all on one app that was seemingly simpler (an open ended autocomplete thing)
[23:15] blendedbychris: hey guysâ€¦ anyone care to point me in the right directionâ€¦ I'm basically just trying to send events to a node.js application so that the client can be updated with information on their screenâ€¦ say, a video is populated in a <div>â€¦ I want these events to be triggered by my cms
[23:15] blendedbychris: am i doing it all wrong?
[23:16] tommyvyo has joined the channel
[23:17] tlack_: blendedbychris: so when someone makes a change to something in the cms, the node app gets updated via ajax?
[23:17] jryans has joined the channel
[23:18] AaronMT has joined the channel
[23:18] blendedbychris: tlack: yesâ€¦ there's a few components reallyâ€¦ a) we have a moderated twitter feed that is stored in the CMS's mysql tables b) we'd like to be able to update "snippets" of html on the user's screen when a CMS "entry" is updated
[23:19] blendedbychris: c) is a chatâ€¦ but this could be implemented laterâ€¦ we'd like for it to be populated in the cms's mysql tables
[23:20] Vespakoen has joined the channel
[23:20] blendedbychris: b) is my greatest concern i suppose
[23:20] blendedbychris: i've seen other systems just have the websocket force a refresh of the page
[23:20] mehale has joined the channel
[23:21] mehale: bnoordhuis: yes, you did. but even if the stream is the same for all users? 
[23:22] recrof has left the channel
[23:22] bnoordhuis: mehale: yes. streams are generally not reusable
[23:22] mehale: ok
[23:22] tommyvyo has joined the channel
[23:22] mehale: thanks!
[23:23] st_luke has joined the channel
[23:24] diogogmt has joined the channel
[23:24] blendedbychris: i'll be back on in a few
[23:24] dshaw_1 has joined the channel
[23:26] blendedbychris1 has joined the channel
[23:26] bartt has joined the channel
[23:26] bkaney has joined the channel
[23:27] YoY has joined the channel
[23:27] mandric has joined the channel
[23:27] cyphase has joined the channel
[23:28] st_luke_ has joined the channel
[23:31] ralphholzmann has joined the channel
[23:32] ralphholzmann: does anyone have any recommendations on how to detect if the current node env is windows vs unix ?
[23:32] ralphholzmann: I do branch my code to execute an external bash script, or an external windows bat file
[23:32] ralphholzmann: s/do/have to/
[23:32] domo1: isnt there an os module/lib
[23:32] Monte_ has joined the channel
[23:33] sammmy: I want to do this before every route:  if (!req.session.user) res.redirect('/login'); Is it as simple as putting a app.all() before all my other routes?
[23:33] ralphholzmann: ah, indeed domo1
[23:33] Montes: Hey all, working on an awesome project with heavy base in node. Need another developer to help out (yes ofcourse paid) - need a rockstar here to help get to launch and continue building
[23:33] mikeal has joined the channel
[23:34] denom has joined the channel
[23:34] Montes: any interest?
[23:35] perezd_ has joined the channel
[23:35] exchgr has joined the channel
[23:35] ohcibi has joined the channel
[23:36] subbyyy has joined the channel
[23:37] domo1: Montes:  craigslist?
[23:37] whaley has joined the channel
[23:37] FredC_ has joined the channel
[23:37] Montes: o, come on
[23:37] maxogden: that would only work in oakland
[23:37] domo1: then post there.. remote
[23:37] Zzaichik has joined the channel
[23:38] Montes:  #oakland .. anyone know node? :)
[23:38] maxogden: you attract developers by solving hard problems and being part of the community not by posting to craigslist remotely :P
[23:39] Montes: there is a fox, a bag of rice, and a chicken on one side of the river .... a man on a boat needs to get these to the other side ... but he can't leave the chicken alone with the bag of rice because he will eat it, and he can't leave the fox with the chicken ... how can he make it happen?
[23:40] perezd has joined the channel
[23:40] maxogden: rivers are streams
[23:40] maxogden: so you can river.pipe('/dev/null')
[23:40] maxogden: and then you dont have a river in your way anymore
[23:40] Montes: !=
[23:40] Hamms has joined the channel
[23:41] Montes: console.error();
[23:42] subbyyy has joined the channel
[23:44] yogig has joined the channel
[23:45] thetony: that is the geekest joke ive ever seen  im going to put that on my wall in my office
[23:45] YoY has joined the channel
[23:46] disappearedng: Do you guys install npm with root privileges? 
[23:47] Montes: the response or the riddle?
[23:47] disappearedng: Montes: what are you talking abouyt
[23:47] Montes: thetony: geekest joke
[23:48] githogori has joined the channel
[23:50] Joeysomo_ has joined the channel
[23:51] abdelrhman has joined the channel
[23:51] dshaw_ has joined the channel
[23:52] mdel has joined the channel
[23:53] Lemminkainen has left the channel
[23:53] k1ttty has joined the channel
[23:54] ioscale has joined the channel
[23:54] abdelrhman has left the channel
[23:55] Joeysomo has joined the channel
[23:56] JmZ_ has joined the channel
[23:56] JmZ_ has joined the channel
[23:56] synesp has joined the channel
[23:56] synesp: mikeal: remember our talk about the settimeout issue before? so to work around it, you're thinking i just set a setimeout right before request({.. and then aborting it in the timeouts function and calling my callback?
[23:57] kickingvegas has left the channel
[23:57] skm has joined the channel
[23:58] PPaul has joined the channel
