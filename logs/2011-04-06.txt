[00:00] eee_c has joined the channel
[00:00] aconran__ has joined the channel
[00:00] robotblake has joined the channel
[00:01] benw_ has joined the channel
[00:04] derferman has joined the channel
[00:07] zcopley: Anyone use npm with MacPorts? 
[00:07] zcopley: I mean, with the node installed by MacPorts
[00:08] zcopley: node can't seem to find any of the modules I installed with npm
[00:09] zcopley: The modules seem to be getting installed in /opt/local/lib/node
[00:09] zcopley: echo $NODE_PATH shows /opt/local/lib/node
[00:10] zcopley: but when I run my program I get - Error: Cannot find module 'xml2js'
[00:10] zcopley: What am I missing?
[00:11] zcopley: (xml2js seems to be installed)
[00:13] kriszyp has joined the channel
[00:14] mattrobenolt: Does something in Node screw up the scope of callbacks in setTimeout/Interval calls for some reason?
[00:14] mattrobenolt: Or am I going crazy?
[00:15] tjholowaychuk: mattrobenolt: the "scope"? what are you doing?
[00:16] deedubs: zcopley: which version of npm?
[00:16] zcopley: deedubs: 0.3.18
[00:17] fljitovak_ has joined the channel
[00:17] AntelopeSalad has joined the channel
[00:17] deedubs: Hank:~ deedubs$ npm -v
[00:17] deedubs: 1.0.1rc4
[00:17] mattrobenolt: tjholowaychuk: For example, this breaks: https://gist.github.com/61055615b2114f1359d8
[00:17] zcopley: So mine is real super old?
[00:17] deedubs: yes
[00:17] mattrobenolt: "this.bar" is undefined. The scope of "this" is referring to the actual setTimeout object.
[00:17] zcopley: ha!
[00:18] tjholowaychuk: mattrobenolt: yeah of course
[00:18] zcopley: That's what I get for cutting and pasting from an online install guide :/
[00:18] tjholowaychuk: mattrobenolt: when you do this.logBar you pass the function, it's not bound to "this"
[00:18] zcopley: does npm have a way to self-update?
[00:18] tjholowaychuk: mattrobenolt: its just as function
[00:18] tjholowaychuk: mattrobenolt: setTimeout(function(self){}, n, this)
[00:18] mattrobenolt: Right, but it's being called in the context of the prototype. That gets lost?
[00:19] kaos12 has joined the channel
[00:19] tjholowaychuk: mattrobenolt: yes
[00:19] tjholowaychuk: its still just a function
[00:19] tjholowaychuk: mattrobenolt: setTimeout(obj.foo.bind(obj), n) will work though
[00:19] beejeebus has joined the channel
[00:19] tjholowaychuk: but I bet it is much slower than passing the arg
[00:19] mattrobenolt: Yeah, I'd just expect the scope to be the instance of Foo()
[00:20] mattrobenolt: So in that case, it's literally irrelevant that it's on the Foo prototype.
[00:20] ryanfitz has joined the channel
[00:20] zcopley: deedubs: 0.3.18 is what gets installed when I do 'curl http://npmjs.org/install.sh | sh"
[00:20] mattrobenolt: It can be a global function and it'd work the same.
[00:20] ryah_: the worst thing about js is that 'this' doesn't refer to the objec thte function belongs to
[00:21] ryah_: so annoying
[00:21] deedubs: zcopley: Oh yeah forgot there was a big ump
[00:21] mattrobenolt: ryah_: I'm seeing that. :)
[00:21] deedubs: hmm I'm not sure
[00:21] ryah_: seriously, i can't beleive people use this language :)
[00:21] mattrobenolt: I'm coming from a heavy background in Python, and haven't used Javascript in a while. Node has been getting me back into it, and I'm going insane.
[00:22] Adman65 has joined the channel
[00:22] tjholowaychuk: ryah_: what doesnt make sense about that
[00:22] tjholowaychuk: its not bound
[00:22] mattrobenolt: Like this. :)
[00:22] tjholowaychuk: var obj = { foo: fn }, bar = obj.foo; bar() having "this" not be obj, makes perfect sense IMO
[00:22] tjholowaychuk: and super flexible
[00:22] reid_ has joined the channel
[00:22] ryah_: i'd rather just have classes
[00:23] ryah_: with a proper 'this'
[00:23] mattrobenolt: tjholowaychuk: This is basically what I'd expect to happen: https://gist.github.com/61055615b2114f1359d8
[00:23] mattrobenolt: And what, in my opinion, SHOULD happen.
[00:23] raz: i find js with coffeescript pretty bearable
[00:23] ryah_: and annonymous functions should inherit the 'this' from whatever method they are instanciated in
[00:23] raz: sure, it's not the smartest cookie in the box
[00:24] tjholowaychuk: ryah_: that I agree with, global is useless
[00:24] tjholowaychuk: i love prototypes though
[00:24] raz: i think there were good reasons for that design
[00:24] raz: good in the context of javascript ;)
[00:24] tjholowaychuk: although I wish .prototype didnt even exist, and no constructors
[00:25] mattrobenolt: tjholowaychuk: It's not a problem with prototypes, persay. It's just the way internally that setTimeout calls the function at hand. It's killing the scope.
[00:25] tjholowaychuk: just "User = Object clone(); tj = User clone()" etc
[00:25] mcantelon has left the channel
[00:25] tjholowaychuk: mattrobenolt: no, its not bound
[00:25] tjholowaychuk: lol
[00:25] tjholowaychuk: mattrobenolt: "this" is only assigned when it has a receiver
[00:25] mattrobenolt: I guess that's where it's really odd. Why even attach it to the prototype if it won't respect that.
[00:26] ryah_: mattrobenolt: it takes some getting used to - you have to make a lot of closures
[00:26] tobmaster has joined the channel
[00:26] mattrobenolt: ryah_: I guess I need to think a lot less OO for Javascript, haha
[00:26] insin: s/less/more flexible/
[00:27] ryah_: mattrobenolt: you can think OO - just don't rely on 'this'
[00:27] tjholowaychuk: I will never go back to ruby or something like that
[00:27] tjholowaychuk: cant stand it
[00:27] jtsnow has joined the channel
[00:27] tjholowaychuk: closures + unbound functions == massive win
[00:27] techwraith: tjholowaychuk++
[00:27] v8bot:  techwraith has given a beer to tjholowaychuk. tjholowaychuk now has 21 beers.
[00:27] insin: or take the time to understand "this" and use it like it's going out of fashion :)
[00:28] tim_smart: Hmm I might need to do some bindings to libssh2
[00:28] tjholowaychuk: its not hard to understand at all, in fact I think js is much easier than most languages
[00:28] tjholowaychuk: IMO the other ones teach worse ideas
[00:28] tjholowaychuk: like oh fuck lets "class eval" this shit to make a method
[00:28] mattrobenolt: ryah_: In my gist, how could that be solved with an "OO" mindset? I need an internal setTimeout to be called on an instance of an object. By binding it or wrapping the call in a closure, it completely nullifies the point of using a "class" i the first place. I have a global function.
[00:28] insin: doesn't ES5 already have Function.prototype.bind out of the box?
[00:28] ryah_: tim_smart: substack has some
[00:28] tjholowaychuk: and then lets grab the "singleton class" with some retarded syntax
[00:28] tim_smart: ryah_: Cool
[00:28] bbttxu has joined the channel
[00:29] insin: setTimeout(this.logBar.bind(this), 10);
[00:29] zcopley: Dang, node still can't find my npm modules even after I upgraded to 1.0.1rc5
[00:30] ryah_: mattrobenolt: by adding another closure
[00:30] ryah_: https://gist.github.com/897a4e2f35485c1a91b2
[00:30] ryah_: (which is what bind does)
[00:30] postwait: _ryah: with the 873 pull request, if we add the 1.0.0 SSL_OP for managing zlib buffers etc... you want need to hardcode it.
[00:30] mattrobenolt: ryah_: Yeah, that's what I was doing to fix my issue. It's just not what I'd expect to happen.
[00:31] ckknight: mattrobenolt: https://gist.github.com/f155ccf25dddfa3fb7b8
[00:31] ryah_: postwait: sorry i haven't got to that yet - i'll make sure it's in the next release - super busy this week
[00:31] rchavik has joined the channel
[00:31] rchavik has joined the channel
[00:32] warchiefThrall has joined the channel
[00:32] ryah_: postwait: i'm not parsing your statement though - are you asking me if you should support the SSL_OP_DISABLE_COMPRESSION (or whatever it was?)
[00:32] tim_smart: ryah_: Oh I just want a ssh client that I can keep a session open
[00:33] postwait: ryah_: I didn't.. I need to get the ssl.h 1.0.0 headers and add that in.
[00:33] postwait: I'll do it and put it into the pull request.
[00:43] Guest50153_____ has joined the channel
[00:43] Fuu has joined the channel
[00:44] ryah_: postwait: i think i want to disable compression by default by clearing that list. i believe (although i need to test) that if you re-add the zlib COMP_METHOD to the list it will re-enable compression
[00:44] ryah_: that is, not sure if i want to the OP_DISABLE_COMPRESSION
[00:44] ryah_: but i need to test this theory
[00:44] mattrobenolt: ryah_ tjholowaychuk, I guess what I'm getting at is in non-prototype based languages, what I'm doing would work as expected: https://gist.github.com/7a9c3c787f4549d1486d
[00:44] tjholowaychuk: mattrobenolt: dont use js
[00:44] mattrobenolt: That's an AS3 example. (I have a heavy Flash background as well)
[00:44] tjholowaychuk: if that's what you want
[00:44] mattrobenolt: haha, that's not my problem here. Actually, I don't have a problem at all.
[00:44] sh1mmer has joined the channel
[00:44] mattrobenolt: Just trying to understand what was actually going on instead of me doing a fix for something that I thought was a problem.
[00:44] mattrobenolt: I don't use js every day, so I'm convoluted with a bunch of different languages and don't keep track of the intricacies of each.
[00:44] tjholowaychuk: its really basic, if it has a dot, it has a receiver, if it has a receiver, "this" is that object
[00:44] ryah_: mattrobenolt: what's going on is that the caller determines "this" - it's not attached to the function
[00:44] insin: https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/this
[00:44] ryah_: so when setTimeout calls its callback - which happens here: https://github.com/joyent/node/blob/master/lib/timers.js#L173
[00:44] xastey` has joined the channel
[00:44] ryah_: it gets the "timer" object as 'this'
[00:44] heino__ has joined the channel
[00:44] ryah_: it doesn't actually happen there - but close enough :)
[00:44] TooTallNate has left the channel
[00:44] mattrobenolt: ryah_: That's actually interesting. Why is that implemented directly in node? Are intervals not a part of V8?
[00:44] ryah_: it actuall happens here: https://github.com/joyent/node/blob/master/lib/timers.js#L83
[00:44] ryah_: mattrobenolt: they aren't
[00:44] pastak has joined the channel
[00:44] mattrobenolt: ryah_: Do you know if there's a reason for that? Because I also noticed that in node, the return of a setInterval is an actual object, not an integer like I expected.
[00:44] astropirate has joined the channel
[00:44] devdazed has joined the channel
[00:44] DoubleV has joined the channel
[00:44] arpegius has joined the channel
[00:44] stepheneb has joined the channel
[00:44] seivan has joined the channel
[00:44] timcosgrove has joined the channel
[00:44] ryah_: mattrobenolt: because V8 doesn't want to determine how people structure the runtime layer
[00:44] Slashbunny has joined the channel
[00:44] ryah_: setTimeout implies event loop
[00:44] ryah_: most people want sleep()
[00:45] mattrobenolt: Gotcha.
[00:45] davidvanleeuwen has joined the channel
[00:46] blueadept has joined the channel
[00:47] pauls_ has joined the channel
[00:48] ngs has joined the channel
[00:48] [[zz]] has joined the channel
[00:51] mattrobenolt: ryah_ tjholowaychuk, thanks a lot. :)
[00:51] mattrobenolt: FYI: I don't hate Javascript. ;)
[00:51] tim_smart has joined the channel
[00:51] tjholowaychuk: mattrobenolt: np, takes some getting used to. ruby confused me at first, and then iwas like yeah ok i get this, then js was like to simple to understand haha
[00:51] tjholowaychuk: because i got used to shit being so fucked up
[00:51] tjholowaychuk: ruby sucks
[00:52] mattrobenolt: Yeah, that's the only problem I have right now. I don't have any problem understanding it, it's just the details I don't have because I don't use it daily.
[00:52] ryah_: mattrobenolt: the 'this' issue is the hardest thing
[00:53] ryah_: the semantics of constructors is pretty annoying too
[00:53] mattrobenolt: I definitely enjoy the callback behavior for certain things. Things you write in Node would be really hard to translate to a normal synchronous language.
[00:54] mattrobenolt: ryah_: For the most part, I can deal with it. I was just hung up on if this is the expected behavior or not. It didn't SEEM right. It wasn't an issue if not being able to do it. I use bind()/apply() frequently to adjust the scope.
[00:54] tjholowaychuk: just be happy you dont have operators that can be altered by anyone :D
[00:54] mattrobenolt: tjholowaychuk: That IS a good point. :)
[00:54] mattrobenolt: def __add__(self) in Python.
[00:55] tjholowaychuk: ill cry if js gets that "magic"
[00:55] mattrobenolt: Or whatever. Those are convenient for say, "adding" classes together. Say matrices or something that make logical sense to use operators.
[00:55] tjholowaychuk: yeah, but IMO its not worth it, I would rather do date.add(date)
[00:56] tjholowaychuk: bad example, but you know what I mean
[00:56] mattrobenolt: Or multiplying a vector to a point.
[00:56] tjholowaychuk: I'll take simplicity over a bit of typing any day
[00:56] tjholowaychuk: look at c++ its a HUGE mess
[00:56] mattrobenolt: It really comes down to a preference at that point and if it's used properly.
[00:56] saikat has joined the channel
[00:56] mattrobenolt: I don't want to do:  Foo() + Foo(), but in a few cases it's nice. Especially when things are transparent in libraries and "just work".
[00:57] tjholowaychuk: in some cases its fine
[00:57] tjholowaychuk: but people abuse it like no tomorrow
[00:57] mattrobenolt: Like, in Python, it's really nice to be able to add a datetime object and a timedelta object. It just makes logical sense.
[00:58] mattrobenolt: datetime.now() + timedelta(seconds=60)
[00:58] tjholowaychuk: all I can say is I used to love ruby, left it for js, and now completely regret using ruby haha
[00:59] mattrobenolt: haha, more power to ya. I honestly don't really have many preferences.
[00:59] tjholowaychuk: ruby dsls look kinda nice, but less powerful than a shell script
[00:59] tjholowaychuk: so i still wouldnt use it
[00:59] mattrobenolt: Oddly, above all languages I've used, I really really enjoy AS3. I'm probably a minority there. ;)
[00:59] seivan has joined the channel
[01:00] tjholowaychuk: i like super structured, or the opposite, but not mixes of both like ruby
[01:00] mattrobenolt: hahaha, yeah, AS3 is super structured.
[01:00] mattrobenolt: It's very Java-esque. But a LITTLE bit less structured.
[01:00] tjholowaychuk: yeah I used to write a bit of AS3
[01:00] mattrobenolt: It's not as annoying as Java. You CAN be loose-typed if you'd like.
[01:00] tjholowaychuk: few years ago
[01:00] samcday: lawl. Gogo node.js reinventing of the wheel, I just got my git library to clone a github project over HTTP (:
[01:01] siculars has joined the channel
[01:01] vipaca has joined the channel
[01:01] JianMeng has joined the channel
[01:01] EyePulp has joined the channel
[01:02] mattrobenolt: AS3 is fun because it's easy to see some awesome results. At least "back in the day" before Javascript became extremely dominant. For some things still, it's much nicer to sit in AS3 and code. You have lots of access to binary information in files and parsing on that level.
[01:03] hornairs has joined the channel
[01:03] yozgrahame has joined the channel
[01:03] mattrobenolt: Then everything I've been doing for the past few years has been purely server side, so I got really heavy into Python/Django daily and sysadmin stuff. Now I get to play with Javascript again on a server.
[01:06] wasabista has joined the channel
[01:06] gazumps has joined the channel
[01:06] warz has joined the channel
[01:07] deedubs: is there an expressjs or connect room?  I feel guilty asking those questions here :/
[01:07] tjholowaychuk: deedubs: not yet nope
[01:08] deedubs: hmph
[01:08] dgathright has joined the channel
[01:10] Booths has joined the channel
[01:12] blueadept: would anyone know why i'm getting a type error, undefined is not a function on line 6? http://pastie.org/private/kbt3h5q9frzpohe9pvmfla
[01:12] saikat has joined the channel
[01:13] Me1000 has joined the channel
[01:13] sor3nsen has joined the channel
[01:14] timcosgrove has left the channel
[01:15] kaos12: hi guys, anyone have a follow up on this? https://gist.github.com/902978
[01:15] tonymilne has joined the channel
[01:16] tonymilne: Just thought I'd share a laugh with you all :D Was debugging why my oauth code wasn't working... and stumbled upon this pearl of wisdom in the connect-auth (oauth code):
[01:16] jdub_ has joined the channel
[01:16] tonymilne: "//TODO: Figure out how to use post params...."
[01:16] charybdis has joined the channel
[01:17] warz has joined the channel
[01:17] Kami__ has joined the channel
[01:17] zedas has joined the channel
[01:17] moneal has joined the channel
[01:17] \sega has joined the channel
[01:17] pastak_ has joined the channel
[01:17] benatkin has joined the channel
[01:18] [tm] has joined the channel
[01:19] zentoooo has joined the channel
[01:19] greyscale-freeno has joined the channel
[01:19] mikegerwitz: blueadept: you aren't passing a callback to the function. It is undefined.
[01:20] k1ttty has joined the channel
[01:21] tim_smart has joined the channel
[01:21] tim_smar1 has joined the channel
[01:22] kriszyp has joined the channel
[01:25] ckknight|2 has joined the channel
[01:25] disqk has joined the channel
[01:25] alessio_alex973 has joined the channel
[01:27] doffm has joined the channel
[01:27] zined__ has joined the channel
[01:27] patcito_ has joined the channel
[01:27] Fuu` has joined the channel
[01:27] nail__ has joined the channel
[01:27] pastak has joined the channel
[01:27] Nacho has joined the channel
[01:27] roger_ra1mond has joined the channel
[01:27] izz_ has joined the channel
[01:27] neshaug has joined the channel
[01:27] McMAGIC--Copy has joined the channel
[01:27] stylus_ has joined the channel
[01:27] BillyBreen has joined the channel
[01:27] larsemil_ has joined the channel
[01:27] dingomanatee has joined the channel
[01:27] persson_ has joined the channel
[01:27] mde_ has joined the channel
[01:28] triel has joined the channel
[01:28] ctime_ has joined the channel
[01:28] jetienne__ has joined the channel
[01:28] F1LTER has joined the channel
[01:28] chilts_ has joined the channel
[01:28] adelcamb1e has joined the channel
[01:28] RushPL_ has joined the channel
[01:28] [[zzz]] has joined the channel
[01:28] jshsu_1 has joined the channel
[01:28] actonapp has joined the channel
[01:28] russell_1 has joined the channel
[01:28] Ls_Away_ has joined the channel
[01:28] sugyan has joined the channel
[01:28] PhilK_ has joined the channel
[01:28] joelperras has joined the channel
[01:29] Charuru: which js template frameworks do you use?
[01:29] Charuru: for client side stuff
[01:29] cognominal_ has joined the channel
[01:29] russell_h has joined the channel
[01:32] techwraith: Handlebars :)
[01:32] techwraith: http://handlebars.strobeapp.com/
[01:32] killfill has joined the channel
[01:33] tim_smart has joined the channel
[01:33] mattly_ has joined the channel
[01:33] jesusabdullah: Charuru: I've used jade
[01:33] ezmobius has joined the channel
[01:33] Charuru: i'm staring at this
[01:33] Charuru: http://jsperf.com/dom-vs-innerhtml-based-templating/112
[01:33] techwraith: jesusabdullah: Client side?
[01:33] jesusabdullah: oh, client-side
[01:34] Crshman has joined the channel
[01:34] jesusabdullah: I'm trying to remember if you can browserify jade
[01:34] Charuru: yeah i use jade with express, on the client i don't think it fits
[01:34] Charuru: 0.o
[01:34] Charuru: there is a client side version
[01:34] Charuru: http://jsperf.com/dom-vs-innerhtml-based-templating/112
[01:34] jesusabdullah: Yeah, that was my thinking
[01:34] Charuru: i want to use handlebars, it seems the most sensible
[01:34] jesusabdullah: You can use jquery like a template too, by grabbing empty elements and stuffing new stuff into them
[01:34] Charuru: but in terms of speed its the middle of the pack
[01:34] jesusabdullah: hmm
[01:35] jesusabdullah: I'm not much of a speed demon and haven't done a lot of front-end client-side stuff, so
[01:35] techwraith: How much does speed matter to your use case?
[01:35] jesusabdullah: I'm probably not the one to talk to
[01:35] beawesomeinstead has joined the channel
[01:35] techwraith: Are you rendering 1000s of templates at a time?
[01:35] Charuru: matters quite a bit, i use client side templates extensively
[01:36] techwraith: But we're talking about tens of ms's here, right?
[01:36] techwraith: hardly noticable to us puny humans ;)
[01:36] Charuru: depends on the browser lol
[01:36] techwraith: true, ie6 is going to have issues, lol
[01:36] Charuru: a phone?
[01:36] Charuru: lol
[01:37] insin: ACTION resists the urge to link to http://www.codeirony.com/?p=9 ... whoops! :)
[01:37] techwraith: iPhone and Android work really well with handlebars should be fine
[01:37] marienz has joined the channel
[01:37] techwraith: handlebars was actually made for mobile apps
[01:37] Charuru: oh some pages I do have 1000 elements rendered from templates
[01:38] techwraith: lol, might want to re-think how you're architecting that - it's going to be slow no matter which template lang you choose :)
[01:38] insin: is there any chance you can clone any amount of those?
[01:39] Charuru: does that help?
[01:40] pyrony has joined the channel
[01:40] Charuru: i know creating the elements in memory and not putting them into the DOM helps
[01:40] Charuru: but i think chrome even takes care of that for you in the latest versions
[01:40] techwraith: Chrome isn't going to be much of an issue for you
[01:40] Booths has joined the channel
[01:40] techwraith: IE is the one you have to worry about
[01:41] insin: yup :/
[01:41] Charuru: yeah
[01:42] [[zz]] has joined the channel
[01:42] insin: takes > 5x longer to run unit tests where I'm only generating HTML strings in IE8 vs. Firefox, Chrome and Opera
[01:43] pauls_ has joined the channel
[01:43] pengwynn has joined the channel
[01:43] Booths: Anyone familiar with using SSL/TSL with connect? I'm just trying to avoid having to send passwords plain text... the documentation says it's the same as HTTP server, which is connect.createServer... doesn't make sense to me
[01:44] tim_smart: ryah_: How do include deps with wscript?
[01:44] Charuru: ow yeah :(
[01:44] Emmanuel__ has joined the channel
[01:45] jimt has joined the channel
[01:45] timmywil has joined the channel
[01:45] ryah_: tim_smart: gtg - sorry
[01:46] ChrisPartridge: Booths: What issues are you having?
[01:46] tim_smart: ryah_: All good. I
[01:46] tim_smart: I'll have a look around
[01:47] konobi: tim_smart: node itself or addon?
[01:47] ChrisPartridge: Booths: If you pass in a SSL config options, it should create it as https
[01:47] tim_smart: konobi: addon
[01:53] arpegius has joined the channel
[01:53] tfe_ has joined the channel
[01:53] tfe_: does anyone know the set of legal characters for npm package names? seems like a-z, 0-9, hyphen, underscore, dot. am i missing anything?
[01:53] mysterio1` has joined the channel
[01:54] konobi: 2 secs
[01:54] tim_smart: konobi: I want to have the dep code cloned in a /deps/ folder
[01:54] Booths: ChrisPartridge: I"m just not sure how to pass it,I know https.createServer takes it before the regular response handler, does connect do the same?
[01:54] konobi: tim_smart: https://github.com/ry/node_postgres/blob/master/wscript
[01:54] konobi: (as a quick example
[01:54] mhooker has joined the channel
[01:54] konobi: tim_smart: as a static lib?
[01:54] tim_smart: konobi: Yeah
[01:54] konobi: hhhrrrmmm...
[01:54] konobi: http://code.google.com/p/waf/source/browse/trunk/docs/book/examples/cprog_propagation/wscript
[01:54] konobi: looks scary =0)
[01:54] tim_smart: konobi: I guess it would be similiar to how node links to v8
[01:54] tim_smart: But that wscript is scary as well
[01:54] hij1nx has joined the channel
[01:55] konobi: tim_smart: yeah... the v8 thing might be a good path to go down
[01:55] tfe_ has joined the channel
[01:55] nuba has joined the channel
[01:55] noocx has joined the channel
[01:55] noocx: hi
[01:55] blueadept: mikegerwitz: im still trying to get used to callbacks, you know of a good source to get a good grounding on them?
[01:55] zan_ has joined the channel
[01:56] zorzar has joined the channel
[01:56] jakehow has joined the channel
[01:57] McMAGIC--Copy has joined the channel
[01:59] kriszyp has joined the channel
[02:00] postwait has joined the channel
[02:00] eventi has joined the channel
[02:00] dabenium has joined the channel
[02:00] postwait: ryah_: are you guys running (or working toward) sunos-x64?
[02:01] mikegerwitz: blueadept: I'd look into closures and anonymous functions
[02:01] jaket has joined the channel
[02:02] ChrisPartridge: Booths: See the second example here: http://senchalabs.github.com/connect/connect.html 
[02:02] mikegerwitz: blueadept: The concept of a callback itself is fairly basic. You're simply passing a function as an argument. You can then invoke that argument as a function.
[02:03] charlesjolley- has joined the channel
[02:03] ryan[WIN] has joined the channel
[02:03] ckknight has joined the channel
[02:06] abraxas has joined the channel
[02:06] AAA_awright has joined the channel
[02:06] xastey has joined the channel
[02:08] Fuu has joined the channel
[02:08] Booths: ChrisPartridge: Thanks, got it working. Now I just have to decide if I want to pay to have SSL support on my personal website just for messin' around, seems like a waste.
[02:08] Booths: err a certificate officially signed that is
[02:08] SubStack: jesusabdullah: you can indeed browserify jade!
[02:08] matschaffer has joined the channel
[02:08] SubStack: it is part of the unit tests
[02:08] greyscale-freeno has joined the channel
[02:09] dguttman has joined the channel
[02:10] hucker has joined the channel
[02:10] swaj has joined the channel
[02:10] swaj has joined the channel
[02:10] erictj has joined the channel
[02:13] jesusabdullah: SubStack: Word. I'm watching the demo stream
[02:13] Insanity5902 has joined the channel
[02:15] persson has joined the channel
[02:16] marajit has joined the channel
[02:17] marajit: is this place to ask about express routing?
[02:18] balaa has joined the channel
[02:18] mike5w3c_ has joined the channel
[02:22] jtsnow has joined the channel
[02:24] ChrisPartridge: Booths: You can get them pretty cheap around the place, so why not :-)
[02:24] eee_c has joined the channel
[02:25] devrim: anybody uses mongoosejs and knows whether or not DBRef is supported by it?
[02:26] pyrony has joined the channel
[02:27] jroes: hey guys, what replaced Kyuri?
[02:29] rfay_afk has joined the channel
[02:29] disq has joined the channel
[02:29] seivan has joined the channel
[02:30] ChrisPartridge: devrim: See here https://github.com/LearnBoost/mongoose/issues#issue/188
[02:30] blueadept: anyone here using node.js with redis?
[02:31] eaton has joined the channel
[02:31] ChrisPartridge: yep
[02:31] matt729 has joined the channel
[02:31] blueadept: is it that much faster than say mongodb?
[02:32] ChrisPartridge: blueadept: i wouldn't really compare it to mongodb
[02:32] Swimming_bird has joined the channel
[02:32] matt729: does anyone know the syntax to have an anchor tag inside a paragraph in the jade template engine for express?
[02:34] matt729: nevermind i figured it out, use pipes to keep the paragraph going
[02:34] blueadept: ChrisPartidge: why so? is it because redis is more of a caching system than a permanent store?
[02:35] incon has joined the channel
[02:35] Booths: ChrisPartridge: Where do you see them cheap? I've been finding them for like $150/y, I must be looking in the wrong places.
[02:37] kriszyp has joined the channel
[02:38] abraham has joined the channel
[02:38] qbert_ has joined the channel
[02:38] warchiefThrall has joined the channel
[02:39] devrim: thx ChrisPartridge hope it comes around soon
[02:41] marajit: Express divides URL parameters in the req.param array. But I can't access them to create my filepath string. how come?
[02:42] marajit: doesn't like for (i in req.params; i>req.params.length; i++)
[02:44] mscdex: marajit: is req.params an array or an object?
[02:45] marajit: mscdex: author uses req.params[0] http://expressjs.com/guide.html
[02:46] evanmeagher has joined the channel
[02:47] Kami_ has joined the channel
[02:47] mscdex: marajit: is your route a regex?
[02:47] incon has joined the channel
[02:48] marajit: mscdex: yes. but I want it to handle any recursive directory structure
[02:49] mscdex: wait, is that really the for loop you're using?
[02:49] marajit: so if I say /kingdom/phyla/order/division/family/species I don't want to have to code everything. just /kingdom/*
[02:50] mscdex: if so, you're mixing for..in with regular for
[02:50] mscdex: using one or the other
[02:50] mscdex: s/using/use
[02:50] marajit: agh
[02:51] mscdex: also know that fo(x in y) is slower than a regular for loop
[02:51] mscdex: *for
[02:51] mscdex: :)
[02:52] highermath_away has joined the channel
[02:53] arpegius has joined the channel
[02:54] tobym has joined the channel
[02:54] jrockway_ has joined the channel
[02:55] marajit: thansk
[02:55] jrockway: so am i crazy to want to do something like this: https://gist.github.com/905042 ?
[02:56] jrockway: that is, given some object, make its methods be called when some other object emits an event with that name?
[02:56] Remoun has joined the channel
[02:56] bingomanatee has joined the channel
[02:57] sub_pop has joined the channel
[02:59] mscdex: jrockway: btw, you don't need _ to bind a function and binding is slow
[03:00] mscdex: jrockway: you could just pass in an anonymous function instead which calls the relevant EventListener method with the 'this' context
[03:00] mscdex: thus avoiding bind
[03:00] astropirate has joined the channel
[03:01] jrockway: yeah, ok
[03:01] mscdex: jrockway: also there is discussion on nodejs-dev about being able to listen for any event on an emitter
[03:01] mscdex: so maybe that might be helpful to you too
[03:01] tfe_: if i'm using npm programmatically, is there a way to keep it from dumping all the output to stdout?
[03:02] tfe_: set logLevel: silent?
[03:02] jrockway: mscdex: thanks, i'll take a look
[03:03] tfe_: nm, that's just for logs
[03:03] mikegerwitz: tfe_: I'm not familiar with all of npm's options. Easiest thing to do would be: npm ... 2>&1 >/dev/null
[03:03] mikegerwitz: tfe_: (not sure what it dumps to stderr, thus the 2>&1..remove that if you do want stderr)
[03:03] eee_c has joined the channel
[03:04] tfe_: mikegerwitz: thanks, but i'm using it from another program, not a shell. no redirection possible.
[03:04] mikegerwitz: tfe_: Ah, was unsure what you meant by "programatically" :)
[03:04] kkaefer: is there an official way to have npm download external non-package.json dependencies?
[03:05] briznad has joined the channel
[03:06] mikegerwitz: tfe_: $ npm help config  # shows that there is a "silent" option. Maybe a good starting point
[03:06] k1ttty has joined the channel
[03:07] tfe_: mikegerwitz: yeah, i tried that. it only suppresses the stderr logging stuff. still always prints stdout.
[03:07] Nexxy has joined the channel
[03:11] losing has joined the channel
[03:12] RusAlex1 has joined the channel
[03:16] Scala has joined the channel
[03:22] sivy has joined the channel
[03:22] sirkitree has joined the channel
[03:26] ryanfitz: does anyone have an example of using a sqlite db with express?
[03:26] CarterA has joined the channel
[03:26] marajit has left the channel
[03:27] jscheel has joined the channel
[03:27] jscheel has joined the channel
[03:27] eee_c has joined the channel
[03:28] dabenium has joined the channel
[03:29] devrim1 has joined the channel
[03:32] markc_ has joined the channel
[03:33] piscisaureus has joined the channel
[03:34] markc_ has joined the channel
[03:35] killfill has joined the channel
[03:36] eric__ has joined the channel
[03:36] themiddleman has joined the channel
[03:36] pauls_: anyone know what's up with this periodic process.nextTick server crash? http://pastebin.com/AND5GjTb
[03:37] Slashbunny has joined the channel
[03:38] Samot has joined the channel
[03:38] Me1000 has joined the channel
[03:39] sub_pop has joined the channel
[03:39] Spion_ has joined the channel
[03:39] Spion_ has joined the channel
[03:40] matschaffer has joined the channel
[03:43] mhooker has joined the channel
[03:45] pauls_: anyone know what's up with this periodic process.nextTick server crash? http://pastebin.com/AND5GjTb
[03:48] tim_smart: Anyone here a pro at statically linking libraries into addons?
[03:49] markc_ has joined the channel
[03:49] unomi has joined the channel
[03:49] furytheory has joined the channel
[03:50] gazumps has joined the channel
[03:50] warz has joined the channel
[03:51] charlesjolley- has joined the channel
[03:52] ajpiano has joined the channel
[03:53] broofa has joined the channel
[03:54] DJBouche has joined the channel
[03:54] joe4node has joined the channel
[03:54] joe4node: Hi ALL 
[03:55] joe4node: anyone home ?
[03:55] ajpiano_ has joined the channel
[03:56] joe4node: guys i have a question about mysql, can you please guide me into which module to use, which one is more stable ?
[03:57] flippyhead has joined the channel
[03:58] joe4node: is this IRC client working? can anyone see my messages ?
[03:59] roger_raymond has joined the channel
[03:59] killfill has joined the channel
[03:59] Emmanuel__ has joined the channel
[04:00] Samot: r0fl
[04:02] no-gooder has joined the channel
[04:02] secoif: anyone recommend a javascript/nodejs statemachine that will run on client side?
[04:03] mscdex: joe4node: i'd give node-mysql a shot
[04:03] Emmanuel_ has joined the channel
[04:03] joe4node: mscdex: thanks , man you are always here :) 
[04:04] no-gooder: hey guys. i installed "forever" into /var/www/node_modules/forever   even in "bin" folder for "forever" command i get  "forever : command not found" erorr.
[04:04] secoif: I'm trying to use https://github.com/jbr/stately.js via https://github.com/substack/node-browserify but it doesn't appear to be functioning as expected
[04:04] mscdex: pauls_: listen for the error event on the socket and you should be able to catch that error instead of it crashing the server
[04:04] no-gooder: can you help me with tihs
[04:04] secoif: no-gooder:  npm install forever shooudl do the trick
[04:05] no-gooder: i installed with npm : "npm install forever"
[04:05] secoif: *should
[04:05] mscdex: pauls_: or maybe the error event for the server
[04:05] pauls_: mscdex: thanks, i'll give that a shot
[04:05] __directory has joined the channel
[04:05] secoif: no-gooder: sounds like you haven't set up your path correctly
[04:05] secoif: can you: echo $PATH
[04:06] secoif: no-gooder: have you gotten other npm binarys to run before? 
[04:06] iFire has joined the channel
[04:07] secoif: also, is this to prevent you from having to restart node each time you change your app?
[04:08] sorens3n has joined the channel
[04:09] no-gooder: secoif, 1- no i havent.  2- yes it is
[04:09] secoif: no-gooder: pm
[04:10] aconran___ has joined the channel
[04:10] fadeddata: Should I be using connect-form to manage form params if I'm using express? I'm just asking because I'm having a hard time understanding what connect-form's purpose is.
[04:12] fadeddata: I guess it's mainly for the multipart attachments?
[04:14] dominictarr__ has joined the channel
[04:14] vipaca has joined the channel
[04:14] Me1000 has joined the channel
[04:19] unomi has joined the channel
[04:19] yozgrahame has joined the channel
[04:20] JianMeng has joined the channel
[04:21] MikhX has joined the channel
[04:23] __directory: lol
[04:27] dominictarr__ has joined the channel
[04:28] dominictarr__ has joined the channel
[04:28] beawesomeinstead has joined the channel
[04:28] Aria has joined the channel
[04:28] dominictarr__ has joined the channel
[04:29] dominictarr__ has joined the channel
[04:29] evanmeagher has joined the channel
[04:30] dominictarr__ has joined the channel
[04:30] beawesomeinstead has joined the channel
[04:30] dominictarr__ has joined the channel
[04:31] jnhnum1 has joined the channel
[04:31] dominictarr__ has joined the channel
[04:31] vipaca has joined the channel
[04:31] vipaca has joined the channel
[04:31] dominictarr__ has joined the channel
[04:33] dominictarr__ has joined the channel
[04:33] joe4node: mscdex: in node-mysql , how do i manage the connections for multiple users? a user on a website is logged in and click to check her balance. for every user i run new client ?
[04:33] Zebra10 has joined the channel
[04:33] dominictarr__ has joined the channel
[04:34] Zebra10: I'm looking into how to structure my project with oauth2... i find it all very confusing
[04:34] dominictarr__ has joined the channel
[04:35] Zebra10: in a standard design, would i run an oauth server and also my application server?
[04:35] dominictarr__ has joined the channel
[04:35] joe4node: does any one know how to use node-mysql effectivly in a webserver ?
[04:35] beawesomeinstead has joined the channel
[04:36] dominictarr__ has joined the channel
[04:36] joe4node: or if there some projects that uses node-mysql to get more examples than the one on the git page 
[04:36] jnhnum1: in a node.js http server which sets a timeout to end the connection in 5 seconds (and prints out a message saying 'somebody connected'), if I open a few connections concurrently in my browser, why does it seem to become more unresponsive?
[04:37] jnhnum1: like there will be a delay between me pressing enter and node.js printing 'somebody connected'
[04:37] dominictarr__ has joined the channel
[04:37] jnhnum1: is this because of a limitation on the number of connections that the browser makes to a a domain?
[04:38] secoif: jnhnum1: unlikely. pastebin your app
[04:38] dominictarr__ has joined the channel
[04:38] mscdex: joe4node: you don't have to
[04:38] brianc: anyone understand the new npm install methodology? 
[04:38] mscdex: joe4node: just keep the client object around
[04:38] brianc: I'm completely confused & cannot find good documentation
[04:39] dominictarr__ has joined the channel
[04:39] brianc: 'npm install cluser' installs the package (in a semi-random folder relative to which folder I'm currently in) but doesn't install the binary anywhere
[04:39] brianc: :/
[04:39] dominictarr__ has joined the channel
[04:40] sorens3n: i just installed cluster
[04:40] sorens3n: does it compare with fugue?
[04:40] dominictarr__ has joined the channel
[04:40] brianc: sorens3n: it installs the library, but doesn't install the binary anywhere
[04:41] sorens3n: ah
[04:41] dominictarr__ has joined the channel
[04:41] sorens3n: does anyone know of a good way to load test a node server?
[04:41] brianc: apache bench?
[04:41] dominictarr__ has joined the channel
[04:42] joe4node: mscdex: what do you mean ?  if A connects inside that function i will have var client = new Client ... and then client.connect() ... if now , how can i tell the that the results called will go to A and not B... looks like i am confused about it 
[04:42] brianc: joe4node: i know you need to use a connection pool manager with node-mysql
[04:42] brianc: joe4node: like node-pool
[04:43] jnhnum1: secoif: http://pastebin.com/2k7ZJdUE - that's the simplest example that shows what I'm talking about
[04:43] mscdex: brianc: since when?
[04:43] mscdex: joe4node: no, i mean create the client at the top of your program, before your create your http server
[04:43] joe4node: brianc: how is that ? do you have an example ?
[04:43] dominictarr__ has joined the channel
[04:43] brianc: mscdex: in a web scenario you're going to need a connection pool
[04:43] brianc: mscdex: oh yeah you can use a single connection if you want
[04:44] brianc: mscdex: but 1 connection for each http request will crash your server under load
[04:44] mscdex: right
[04:44] dominictarr__ has joined the channel
[04:44] joe4node: exactly so how do i know that this response belongs to that request ?
[04:44] brianc: joe4node: closures will probably help you out there
[04:45] mscdex: joe4node: because you get a callback or an event inside that request listener for your http server
[04:46] mscdex: so when the query comes back, just write to that connection's response stream
[04:46] mscdex: and end it
[04:46] joe4node: is there a simple example that includes the mysql and the http server ?
[04:46] brianc: i have an example for you
[04:46] brianc: it's using postgres instead of mysql
[04:46] brianc: but the API is very similar 
[04:46] joe4node: ok 
[04:46] brianc: https://github.com/brianc/node-postgres/wiki/Example
[04:47] jnhnum1: does anybody know why http://pastebin.com/2k7ZJdUE will cause (after you open a few concurrent connections) 'somebody connected' to be printed out some time after a tab is opened?
[04:47] joe4node: brianc: thanks checking it, might come back for more questions :) 
[04:47] dominictarr_ has joined the channel
[04:47] balaa has joined the channel
[04:48] sourcode has joined the channel
[04:48] brianc: joe4node: most likely wont be here! but hopefully someone else can help you.  Good luck. :)
[04:48] dominictarr_ has joined the channel
[04:48] joe4node: brianc: in all cases, thanks for the help 
[04:49] dominictarr_ has joined the channel
[04:49] Andi5 has joined the channel
[04:49] eric__: Hi there.  I'm having a hell of a time trying to get a Node HttpClient to send a JSON string via http POST.  The docs get me close (connection succeeds), but the body is always empty.  Ideas?
[04:49] secoif: jnhnum1: I see. I can reproduce the problem.
[04:49] brianc: joe4node: absolutely - you can reach me on google talk @ brian.m.carlson@gmail.com tomorrow CST if you hvae more questions - i don't IRC all that much
[04:50] langworthy has joined the channel
[04:50] mscdex: joe4node: https://gist.github.com/a4efdddce4deeda68171
[04:50] mscdex: eric__: post your code to gist.github.com
[04:50] eric__: yep, one sec
[04:51] luke` has joined the channel
[04:51] joe4node: brianc: thanks, i added you on gmail, In the example that you sent me , there is a new connect to every new connection to the http server ... and there is no 'end' connection ... that is 1 connection per user, am i wrong ?
[04:52] ljackson has joined the channel
[04:52] joe4node: mscdex: thanks , checking the code now 
[04:52] brianc: joe4node: node-postgres uses built-in connection pooling
[04:52] jnhnum1: secoif: do you know what the cause might be?
[04:52] brianc: joe4node: ignore the connection pooling part.  pretened you've already created the node-mysql connection before your sever is booted. ;)
[04:53] brianc: i mean before your sever is accepting new connections
[04:54] saschagehlich has joined the channel
[04:54] brianc: basically call 'client.connect' somewhere before calling 'server.listen(port)'
[04:54] matjas has joined the channel
[04:54] Remoun has joined the channel
[04:54] eric__: mscdex: https://gist.github.com/905163
[04:54] brianc: i believe node-mysql will queue any queries internally and not execute them until after the connection to your mysql server has been established
[04:55] secoif: jnhnum1: no idea, seems like it's keeping connections open or something
[04:56] jnhnum1: secoif: oh okay...I guess I'll just hope that I don't run into this problem in less contrived examples :/
[04:57] joe4node: mscdex: so    client.query('SELECT * FROM FOOTABLE', function selectCb(e, results, fields) {   will take care of the response coming back to the client that called client.query ?  but client is global object correct ? what is 2 calls it at the same time ?  answer: do not worry about it. client will take care of it 
[04:57] tlrobinson has joined the channel
[04:57] mscdex: eric__: how are you checking that the body is empty?
[04:58] dominictarr_ has joined the channel
[04:58] caligula has joined the channel
[04:58] eric__: on the receiving side, I get nothing at all.  Installing wireshark now to actually confirm.  (I can telnet into the receiving server and post data no probs)
[04:58] mscdex: joe4node: it doesn't matter if there are lots of calls at the same time, it's asynchronous
[04:58] samcday: Question - does anyone know how you tell http agent to close keep alive connections to a server once you're done making requests?
[04:58] samtest has joined the channel
[04:58] dominictarr_ has joined the channel
[04:58] samcday: Or am I going about it all wrong
[04:59] joe4node: brianc: that means : at least 1 connection will be open even with no users on the server, when a new user arrives, he will use that 1 connection ... when 5 come at the same time do they use the same connections ? or more are created ?
[04:59] indutny1 has joined the channel
[05:00] mscdex: joe4node: javascript allows anonymous functions to bind to variables that are used outside its scope
[05:00] jnhnum1: secoif: could it have something to do with the fact that favico is also hanging?
[05:00] mscdex: joe4node: so the callback will always write to the correct response
[05:01] mscdex: where you do res.write
[05:01] jnhnum1: oh I don't even know
[05:01] eric__: mscdex: curious really, if there is something special that needs to be done to send a JSON string as a body of a post message.  As you can see, I messed around with content-length and content-type headers, but to no avail.
[05:02] mscdex: eric__: what if you just send something simple, like non-json, such as: "data=foo" ?
[05:02] eric__: mscdex: I'll try, one sec
[05:04] secoif: jnhnum1: I don't think so, you could isolate that quickly using favicon middleware http://senchalabs.github.com/connect/middleware-favicon.html
[05:04] sonnym has joined the channel
[05:05] joe4node: mscdex: thanks , got it now 
[05:05] kawaz_air has joined the channel
[05:06] eric__: mscdex: Tried a simple string, and it doesn't send either.
[05:06] indutny has joined the channel
[05:06] beawesomeinstead has joined the channel
[05:06] mscdex: hrmm
[05:06] beawesomeinstead has joined the channel
[05:06] eric__: mscdex: I dropped a breakpoint on the req.end(body); call, and the body is correct
[05:07] mscdex: oh wait
[05:08] mscdex: eric__: give this a try: https://gist.github.com/905173
[05:09] eric__: mscdex: one sec, trying
[05:09] indutny has joined the channel
[05:10] copongcopong has joined the channel
[05:11] eric__: mscdex: Hmm, same thing.  Console prints out "END REPORT RECEIVED...", so a <300 status is being returned from the server.
[05:11] mscdex: eric__: but 200 means ok
[05:11] mscdex: :)
[05:12] mscdex: what is the status code?
[05:12] eric__: mscdex: right. The HTTP connection is fine.  Node's just not sending the body.  (one sec, checking the status code)
[05:13] wilmoore has joined the channel
[05:13] mscdex: huh... i dunno, i've never had any issue like that
[05:13] indutny1 has joined the channel
[05:13] mscdex: and that's how you use http.request
[05:14] kawaz_air has joined the channel
[05:14] eric__: mscdex: Oh jesus, I had >= 300 for when it's good.  That's messed up.
[05:14] mscdex: eric__: :)
[05:15] eric__: mscdex:  Rubber duck debugging  :)  http://aydsoftware.blogspot.com/2009/03/rubber-duck-debugging.html
[05:15] eric__: mscdex:  thanks for the help, I'll work from there.  (The status code was 500 btw).  
[05:15] mscdex: ok
[05:16] flippyhead has joined the channel
[05:17] dask has joined the channel
[05:18] charlesjolley- has joined the channel
[05:21] blueadept: would anyone happen to know why this query is freezing and not respond? http://pastie.org/private/xe5xzwucrdr6pymssciiyw
[05:24] sveimac has joined the channel
[05:25] medran has joined the channel
[05:25] secoif: blueadept: at what point does it freeze?
[05:25] blueadept: as soon as i hit the url
[05:25] blueadept: for instance url.com/products
[05:25] blueadept: which lists all the products in the mongo db
[05:26] secoif: if you replace the res.render with a console.log does it work?
[05:26] blueadept: hm, let me try that
[05:26] blueadept: no
[05:26] secoif: the connection will time out but did it print anything to the ndoe console?
[05:26] secoif: *node
[05:27] blueadept: hm, i took the .all part out, now it works
[05:28] medran: hi everyone, I just finished watching the intro video on nodejs.org and I was wondering if anybody knew how google v8 handles scheduling of all those setIntervals and settimeouts internally
[05:31] mscdex: medran: v8 doesn't have that stuff, that's implemented by node
[05:32] dotsnloops has joined the channel
[05:32] medran: mscdex no kidding
[05:32] mscdex: medran: and node uses libev for stuff like that
[05:32] medran: so setTimeout and setInterval arent actually part of javascript then
[05:32] ryah_: medran: correct
[05:33] kawaz_air has joined the channel
[05:33] mscdex: what he said :)
[05:34] medran: so node just ties all these other great systems together then
[05:34] mscdex: medran: it builds on top of v8
[05:35] mscdex: medran: to include mostly i/o capabilities
[05:35] mscdex: and adds other nice (web) stuff like http, dns, etc
[05:36] er1c_ has joined the channel
[05:36] medran: what hosting providers will let you run a node process these days?
[05:36] mscdex: Joyent has no.de
[05:37] medran: I would figure joyent would have a way since they look to be backing the project.
[05:37] isaacs has joined the channel
[05:37] mscdex: medran: also check out this wiki page for more: https://github.com/joyent/node/wiki/Hosting
[05:37] medran: cool, thx
[05:38] medran: this seems like a fairly active project for one so young
[05:38] mscdex: indeed :)
[05:39] mscdex: medran: there is an ever-growing number of modules for node as well: https://github.com/joyent/node/wiki/modules
[05:40] medran: wow thats incredible
[05:41] medran: There must be some fairly big sites using node already then
[05:42] beawesomeinstead has joined the channel
[05:42] medran: msdcex thats a pretty old school name
[05:43] sh1mmer has joined the channel
[05:45] MikhX has joined the channel
[05:46] hosh_work has joined the channel
[05:46] Levi has joined the channel
[05:47] mscdex: medran: heh :)
[05:50] tlrobinson: is there a reason there's no stderr on child process objects?
[05:50] tlrobinson: err nevermind
[05:52] tbranyen has joined the channel
[05:52] tbranyen: wonder if anyone has gotten node to run on a ps3
[05:52] tbranyen: a quick google didn't yield anything
[05:53] tlrobinson: wait where is stderr in node? it's not at process.stderr?
[05:55] medran: thanks for all the info guys, hopefully I'll get a chance to work with node in the future
[05:55] medran: ttfn
[05:55] medran has left the channel
[05:56] mhooker has joined the channel
[05:58] indutny has joined the channel
[06:01] fadeddata has joined the channel
[06:02] tlrobinson: how does one change stdin to be unbuffered?
[06:03] Lorentz has joined the channel
[06:04] meso has joined the channel
[06:04] mjr_ has joined the channel
[06:08] Emmanuel__ has joined the channel
[06:08] mscdex: tlrobinson: it's at process.stderr
[06:08] Emmanuel__ has joined the channel
[06:09] tlrobinson: oh, maybe i'm on an old version
[06:09] flippyhead has joined the channel
[06:10] tlrobinson: mscdex: any idea how to get stdin one character at a time, aka raw mode or whatever
[06:11] tlrobinson: rather than line buffered
[06:11] mscdex: tlrobinson: tty.setRawMode(true)
[06:11] tlrobinson: ah of course
[06:13] _jdalton has joined the channel
[06:13] SamuraiJack has joined the channel
[06:13] mscdex: tlrobinson: http://nodejs.org/docs/v0.4.5/api/tty.html
[06:13] _jdalton has left the channel
[06:13] wdperson has joined the channel
[06:13] mscdex: there's a useful example on there
[06:13] neorab has joined the channel
[06:13] langworthy has joined the channel
[06:14] ryanfitz has joined the channel
[06:15] malkomalko has joined the channel
[06:15] galaxywatcher has joined the channel
[06:15] danyork has joined the channel
[06:15] sugardave has joined the channel
[06:15] jspiros has joined the channel
[06:15] gigo1980: hi all, what is the best way to get the content from an url ? so make an simple http.client request ?
[06:15] unlink has joined the channel
[06:16] gigo1980: but it should support http basic authentification
[06:16] tfe_ has joined the channel
[06:16] tbranyen: gigo1980: http://nodejs.org/docs/v0.4.5/api/http.html#http.get
[06:16] newy_ has joined the channel
[06:16] tbranyen: get is pretty darn simple
[06:17] ryanfitz_ has joined the channel
[06:17] gigo1980: ok i use this.. but i read that it does not support redirecting and so on
[06:19] Brak has joined the channel
[06:20] tbranyen: gigo1980: oh well now you're expanding on your original question that was quite meager
[06:20] tbranyen: thats cheating
[06:21] ryanfitz has joined the channel
[06:21] hassox has joined the channel
[06:22] indutny has joined the channel
[06:25] mscdex: gigo1980: afaik the built-in node http client doesn't have the option to automatically follow redirects, but you could instead use mikeal's 'request' module: https://github.com/mikeal/request
[06:26] luke` has joined the channel
[06:26] saschagehlich: gnah. Parse error in Socket.ondata (http.js:1212:22)
[06:27] saschagehlich: any suggestions how to fix that?
[06:27] mikeal has joined the channel
[06:28] ryanfitz_ has joined the channel
[06:28] mscdex: saschagehlich: got your code somewhere?
[06:28] saschagehlich: mscdex: sure, one second
[06:31] saschagehlich: mscdex: https://gist.github.com/07222a6a27e50ff2f2df << the strange thing: if I call APICaller.getVideoInformation() with a youtube-url manually, everything works fine.
[06:32] mike_miller has joined the channel
[06:32] mike_miller: When using node-webworker, is there any way to have an "intiailization" function? My worker isn't going to be communicating with the parent at all, ever, in its execution.
[06:33] mike_miller: I just want it to be an equivilent to a fork/exec pair, essentially.
[06:34] mscdex: saschagehlich: one thing off the bat is, why are you assuming there'll always be only one 'data' event?
[06:34] saschagehlich: mscdex: well yea I should put a if(res.statusCode...) round it
[06:35] mscdex: saschagehlich: no, i mean in your tcp server
[06:35] saschagehlich: mscdex: ah I see - why shouldn't there be a data event?
[06:35] raphdg has joined the channel
[06:35] saschagehlich: mscdex: or do you mean stuff like "close" etc is missing?
[06:35] mscdex: saschagehlich: no i mean, there may be more than one?
[06:35] saschagehlich: mscdex: sure
[06:36] e6nian has joined the channel
[06:36] mscdex: is it possible that only part of the url is being sent?
[06:36] saschagehlich: mscdex: ah now I see what you mean
[06:36] e6nian: such a huge club here :)
[06:36] mape: mike_miller: Just send an "init" message to the worker and then ignore it?
[06:36] saschagehlich: mscdex: well in this case the url is transferred completely
[06:37] mscdex: saschagehlich: not sure that will solve the parser error, but still
[06:37] mscdex: ok
[06:37] mike_miller: mape: yeah, was thinking about that. seems like needless code in some sense, but if that's the only way then I guess I'll do it :)
[06:37] mape: mike_miller: Make a wrapper and reuse that piece of code
[06:37] mike_miller: that's overengineering :)
[06:38] muhqu has joined the channel
[06:38] mape: creating a function is hardly overengineering but yeah
[06:38] ph^ has joined the channel
[06:39] abraxas: Using node-mysql, is it safe to issue multiple queries on a client asynchronously?
[06:39] adambeynon has joined the channel
[06:39] mscdex: abraxas: sure
[06:39] mscdex: saschagehlich: are you able to get res.statusCode before the parser error?
[06:40] abraxas: Unlike say, when doing multithreaded apps (in C or whatnot) and using libmysqlclient.
[06:40] abraxas: mscdex: So even when a query is still being executed, I can safely push in another one? I don't have to wait for the callback?
[06:40] mscdex: abraxas: correct
[06:40] saschagehlich: mscdex: nope
[06:41] mscdex: saschagehlich: hrmm :\
[06:41] abraxas: mscdex: Awesome. I fckn love this stuff :)
[06:41] mscdex: saschagehlich: i'd fire up wireshark and see what's being returned by their server
[06:41] saschagehlich: mscdex: I'll try, one sec
[06:41] datapimp has joined the channel
[06:43] saschagehlich: mscdex: ah I see... it puts a crlf after the url
[06:43] saschagehlich: mscdex: looks like node can't handle this right now
[06:44] emattias has joined the channel
[06:44] jaket_ has joined the channel
[06:44] mscdex: saschagehlich: are you sure your url variable doesn't contain a crlf?
[06:45] saschagehlich: mscdex: yea that's what I tried to say ;)
[06:45] mscdex: oh
[06:45] mscdex: then just remove it :)
[06:45] saschagehlich: mscdex: yep, works :) thanks!
[06:49] adam_ has joined the channel
[06:51] arkx has joined the channel
[06:52] jeremyselier has joined the channel
[06:52] __tosh has joined the channel
[06:52] unomi has joined the channel
[06:53] Zebra10: I'm looking into using oauth2 for my project, but i cant really understand how I would do this correctly. Would I set up 1 server to run an API, 1 server to be the oauth server and then 1 server to run routes for the users connecting and sorting out the presentation layer?
[06:53] mhooker has joined the channel
[06:54] groom has joined the channel
[06:55] mikeal has joined the channel
[06:56] TomY_ has joined the channel
[06:56] m00p has joined the channel
[06:57] ajnasz has joined the channel
[07:00] TomY_ has joined the channel
[07:03] zentoooo has joined the channel
[07:05] mraleph has joined the channel
[07:06] fangel has joined the channel
[07:07] abraxas: mscdex: throwing queries randomly and asynchronously at a node-mysql Client will simply queue them up and execute them whenever the connection is free?
[07:08] V1 has joined the channel
[07:09] unlink has joined the channel
[07:09] unlink has joined the channel
[07:09] saschagehlich: mikeal: how do I post something like "url=myurl&api_user=myuser" on a POST request via your request module?
[07:10] meso has joined the channel
[07:13] neshaug has joined the channel
[07:13] matjas has joined the channel
[07:13] matjas has joined the channel
[07:14] Croms has joined the channel
[07:15] mAritz has joined the channel
[07:19] mscdex: abraxas: yes
[07:20] mscdex: abraxas: just don't create a new Client for each connection to your http server
[07:20] mscdex: :)
[07:20] mscdex: s/connection/request
[07:22] astropirate has joined the channel
[07:25] felixge has joined the channel
[07:25] felixge has joined the channel
[07:27] bergie has joined the channel
[07:27] sveimac has joined the channel
[07:28] abraxas: mscdex: I guess that kinda depends on the project...
[07:28] abraxas: mscdex: problem with that is, that mysql loves silently dropping connections after they have been idle for a while.
[07:28] abraxas: mscdex: and the client is unaware of that, so the next query you execute fails.
[07:28] mscdex: abraxas: you could always set up a timer to send a ping
[07:28] mscdex: or something similar
[07:29] abraxas: mscdex: good point
[07:29] mscdex: and only send the ping if Date.now() - the last query time >= some value
[07:29] abraxas: mscdex: is last query time stored in the Client object?
[07:29] graysky has joined the channel
[07:29] mscdex: i dunno offhand, but you could easily have your own variable
[07:30] davidcoallier has joined the channel
[07:30] mscdex: felixge is the one to ask :)
[07:30] felixge: hm?
[07:30] mscdex: felixge: is there a last query timestamp stored somewhere in node-mysql?
[07:30] felixge: abraxas: node-mysql reconnects automatically
[07:31] mscdex: ah
[07:31] felixge: mscdex: no
[07:31] FireFly|n900 has joined the channel
[07:31] felixge: but I detect connection drops
[07:31] felixge: and reconnect
[07:31] mscdex: cool
[07:31] sheerun has joined the channel
[07:31] abraxas: felixge: and then re-run the failed query?
[07:32] felixge: abraxas: well, it should reconnect before trying the query
[07:32] stonebranch has joined the channel
[07:32] felixge: there might be a race condition
[07:32] felixge: where the connection has not disconnected yet
[07:32] felixge: but sending the query will fail already
[07:32] felixge: but I haven't seen that in a few month of production use yet
[07:33] abraxas: felixge: how does it detect a lost connection before sending off the query?
[07:33] abraxas: felixge: does the mysql server notify the client?
[07:33] felixge: abraxas: nope, but tcp does
[07:33] jeremyselier has joined the channel
[07:33] abraxas: felixge: and that's reliable?
[07:33] felixge: https://github.com/felixge/node-mysql/blob/master/lib/mysql/client.js#L65
[07:34] felixge: abraxas: haven't had a single bug report yet, and we're using it for transloadit since months
[07:34] msucan has joined the channel
[07:34] felixge: I also have plenty of tests that show that it works
[07:34] felixge: like this one: https://github.com/felixge/node-mysql/blob/master/test/system/test-client-timeout.js
[07:34] felixge: so I'd say chances are 80% that it works
[07:35] abraxas: Alright
[07:35] abraxas: Looks promising
[07:35] abraxas: Thanks for the hard work
[07:35] felixge: and even if there is a race condition, chances are ~1% that you run into it
[07:36] felixge: so 0.2 * 0.01 = 0.2% chance that you'll have issues
[07:36] felixge: :)
[07:36] felixge: np
[07:36] teemow has joined the channel
[07:36] felixge: (calculations based on numbers I pulled out of my ass, using some smart guessing)
[07:36] abraxas: :) very scientific indeed
[07:36] felixge: ;)
[07:36] abraxas: I have a feature request by the way... if I may.
[07:36] felixge: sure
[07:36] abraxas: https://github.com/felixge/node-mysql/blob/master/lib/mysql/client.js#L179
[07:37] felixge: y
[07:37] abraxas: Could the boolean type casting be configurable?
[07:37] [AD]Turbo has joined the channel
[07:37] abraxas: I tend to use integer 0 / 1
[07:37] felixge: why?
[07:37] felixge: shouldn't mysql turn that into 0 / 1?
[07:37] suckerpunch has joined the channel
[07:37] felixge: when using a tinyint field?
[07:37] abraxas: Does it?
[07:37] felixge: tinyint(1)
[07:37] felixge: yeah
[07:37] felixge: boolean(1) === tinyint(1) in mysql
[07:37] jesusabdullah: Do any of you know if grep can print lines that *don't* have a match?
[07:37] felixge: when defining a field
[07:37] felixge: so I'd assume it also typecasts on inserts and queries
[07:37] [AD]Turbo: hi there
[07:37] felixge: you should try it out first
[07:38] abraxas: I will
[07:38] abraxas: I'll do a little test now
[07:38] felixge: but I'd be really surprised if it didn't
[07:38] troessner has joined the channel
[07:39] Kingdutch has joined the channel
[07:39] abraxas: You're right, that does work
[07:39] abraxas: I never knew :)
[07:39] julienXX has joined the channel
[07:40] abraxas: Still, some people, I believe, use an enum for booleans ('Y' / 'N' or 'T' / 'F')
[07:40] mscdex: jesusabdullah: yes, with -v
[07:40] abraxas: I'm personally not a fan of it, but technically, it's a more correct representation of booleans.
[07:40] felixge: abraxas: how is that more correct?
[07:40] abraxas: They may still appreciate the ability to configure that, I guess. But personally, it works for me, so I don't really care anymore :)
[07:40] felixge: than allocating a single byte?
[07:40] abraxas: Because it allows for exactly 2 states, not 10.
[07:41] felixge: ?
[07:41] felixge: tinyint(1) will only hold 1 or 0
[07:41] felixge: 2 states in my book
[07:41] felixge: 1 bit
[07:41] abraxas: why would it not store a 5?
[07:41] felixge: (sorry, I said byte, that was wrong)
[07:41] felixge: I don't think it does, but I guess you could be right
[07:41] felixge: let me try
[07:41] abraxas: the 1 is the decimal length of the number
[07:41] abraxas: so unsigned: 0-9
[07:42] abraxas: I just tested and inserted a 5 into my tinyint(1)
[07:42] ajnasz has left the channel
[07:42] felixge: abraxas: indeed
[07:42] felixge: my bad
[07:43] abraxas: Well... for your consideration :) I don't really care about anything but 0/1 for booleans, so...
[07:43] _sh0x has joined the channel
[07:44] jesusabdullah: mscdex: Thanks. Too bad the matching I need to do probably isn't something grep could really do. :(
[07:45] mscdex: jesusabdullah: why not? it accepts regex...
[07:45] kuebk has joined the channel
[07:45] kuebk: hi
[07:46] felixge: ACTION got work todo
[07:46] felixge: bye
[07:48] jesusabdullah: mscdex: Does it? In that case, it *might* be able to, but it wouldn't be the right way anyway.
[07:48] jesusabdullah: mscdex: The problem is that I need a second table of contents in my thesis for appendices specifically
[07:48] jesusabdullah: The way the class file does things now, you have to separate your .toc into a .toc and a .loa, and then recompile *ONCE*.
[07:49] k1ttty has joined the channel
[07:49] jesusabdullah: It works, but it's a hack. I thought about adding ANOTHER hack to separate these automagically with grep, but the lines are only different in that appendices are labelled alphabetically instead of numerically
[07:49] jesusabdullah: and there SHOULD be a latex solution, but I don't have the time to sort it out
[07:49] jesusabdullah: So, for now... *sigh*
[07:49] jesusabdullah: ;)
[07:50] eschnou has joined the channel
[07:50] darshanshankar has joined the channel
[07:51] tbassetto has joined the channel
[07:52] drspin has joined the channel
[07:54] d0k has joined the channel
[07:55] mikedeboer has joined the channel
[07:55] mc_greeny has joined the channel
[07:57] kuebk: has anyone treid to fully implement commonjs module idea in node?
[07:58] jesusabdullah: What do you mean?
[07:59] jesusabdullah: Isn't node's module system basically the same as commonjs's?
[07:59] kuebk: basically yes
[07:59] tbranyen: it was definitely adopted from that
[08:00] skohorn has joined the channel
[08:00] kuebk: but in case I would like to share exacly same files between client and server it's not the same
[08:00] tbranyen: kuebk: ew why
[08:00] kuebk: since on client I would have to put my modules in Module.declare
[08:01] tbranyen: the appeal of sharing client and server code isn't as appealing as separation of concerns
[08:01] mscdex: kuebk: have you checked out: https://github.com/substack/node-browserify ?
[08:02] kuebk: mscdex haven't seen that
[08:03] [ADTurbo] has joined the channel
[08:03] newy_ has joined the channel
[08:04] kuebk: tbranyen what you mean?
[08:04] Druide_ has joined the channel
[08:04] tbranyen: kuebk: i don't see the benefits of sharing identical code between the server and the client that are > than having separation of server and then client concerns
[08:05] tbranyen: validation is the only practical application i've been able to think of
[08:06] kuebk: depends on what app do you build
[08:08] tlrobinson: ok another shell question, how do i execute an interactive shell in node
[08:08] tlrobinson: i've tried various permutations of spawn and tty.open
[08:08] tlrobinson: can't seem to find the right one
[08:09] ivanfi has joined the channel
[08:09] jesusabdullah: kuebk: I was gonna say the exact same thing as mscdex . Browserify gives you require() in the browser
[08:10] Jonasbn_ has joined the channel
[08:10] jesusabdullah: Browserify also makes some code written in node work in the browser
[08:10] jesusabdullah: which is pretty cool
[08:10] tbranyen: lol node-irc is so damn convenient
[08:10] tbranyen: lost a nick on an old network
[08:10] jesusabdullah: What are you doing with it? :D
[08:10] jesusabdullah: Snagged it back, huh?
[08:10] tbranyen: now i just have it joined and trying to snag it back every 5 mins
[08:10] tbranyen: heh
[08:12] jesusabdullah: lol, awesome
[08:12] jesusabdullah: A bit mean, maybe, but awesome xD
[08:12] tbranyen: http://pastie.org/1762281
[08:12] tbranyen: I had that nick for 292 days
[08:12] tbranyen: until i accidentally quit today
[08:12] jesusabdullah: Oh?
[08:12] tbranyen: never regged it since i must have just assumed i did
[08:12] jesusabdullah: hah!
[08:13] tbranyen: yeah and it was stolen 2 hours after i quit
[08:13] tbranyen: which blows
[08:13] V1: Why didn't you just register it?
[08:13] tbranyen: might have been around before nickserv on that network
[08:13] tbranyen: thats nearly a year
[08:14] raphdg has joined the channel
[08:14] jacobolus has joined the channel
[08:18] daglees has joined the channel
[08:18] mike5w3c_ has joined the channel
[08:24] davidcoallier has joined the channel
[08:25] Guest34176 has joined the channel
[08:26] beawesomeinstead has joined the channel
[08:26] beawesomeinstead has joined the channel
[08:26] Emmanuel__ has joined the channel
[08:29] davemo has joined the channel
[08:29] Martz has joined the channel
[08:30] k1ttty has joined the channel
[08:30] loktar has joined the channel
[08:30] erikcorry has joined the channel
[08:30] kal-EL_ has joined the channel
[08:31] suckerpunch has joined the channel
[08:31] Remoun has joined the channel
[08:33] __tosh has joined the channel
[08:35] bingomanatee has joined the channel
[08:36] MikhX has joined the channel
[08:36] mscdex has joined the channel
[08:36] caligula has joined the channel
[08:37] mischief has joined the channel
[08:40] tmzt has joined the channel
[08:40] beejeebus has joined the channel
[08:40] saikat has joined the channel
[08:42] Croms has joined the channel
[08:42] Stan____ has joined the channel
[08:42] mc_greeny has joined the channel
[08:46] julienXX has joined the channel
[08:46] julienXX has joined the channel
[08:47] pdelgallego has joined the channel
[08:48] loktar has joined the channel
[08:52] pomodoro has joined the channel
[08:53] jetienne has joined the channel
[08:54] saschagehlich: how do I compile a .cc script with a wscript file? never did that before
[08:55] saschagehlich: (I'm trying to compile https://github.com/taggon/node-gd)
[08:56] criswell has joined the channel
[08:56] mytrile has joined the channel
[08:57] JianMeng has joined the channel
[08:57] tbranyen: saschagehlich: node-waf configure build
[08:57] tbranyen: in the project root
[08:57] saschagehlich: tbranyen: ah, thanks :)
[08:57] tbranyen: np
[08:58] tbranyen: saschagehlich: Tested with Node v0.1.91
[08:58] tbranyen: eeek
[08:58] dotsnloops has joined the channel
[08:59] tbranyen: hope that still works
[08:59] saschagehlich: tbranyen: yea.. I'll try it anyways :)
[08:59] tbranyen: what version of node?
[08:59] saschagehlich: but unfortunately libgd.org is not there anymore
[08:59] tbranyen: i already see places where it'll fail
[08:59] saschagehlich: 0.4.5
[08:59] tbranyen: yeah not gonna work
[08:59] tschundeee has joined the channel
[08:59] tbranyen: no more sys module
[08:59] tbranyen: so it'll bomb out right there
[09:00] saschagehlich: k, but that is easy to fix
[09:00] tbranyen: oh if your intention is to fix
[09:00] tbranyen: that's cool
[09:00] tbranyen: the bindings are probably fine, its just gonna be some of the api shifting
[09:00] tbranyen: actually i'm probably completely wrong about sys being missing
[09:01] tbranyen: since i just tested and its fine >_>
[09:01] saschagehlich: lol :P
[09:01] saschagehlich: but I can't find libgd for osx :S
[09:01] tbranyen: and its only used for debugging
[09:01] tbranyen: heh
[09:01] ajak1 has joined the channel
[09:01] tbranyen: saschagehlich: do you use brew?
[09:01] saschagehlich: tbranyen: yes, but the gd formula is broken
[09:01] saschagehlich: ah no it isnt
[09:01] saschagehlich: just need to update brew
[09:01] tbranyen: woot
[09:02] tbranyen: yeah i could have sworn sys was taken out, glad i was wrong
[09:02] ajak1: is there a proper way to upgrade node or should i just let make install overwrite the old install?
[09:02] saschagehlich: ajak1: ./configure && make && make install ;)
[09:02] tbranyen: ajak1: let it overwrite so long as you install to the same location
[09:02] ajak1: alright, thanks
[09:03] ajak1: and run npm rebuild after?
[09:08] xla has joined the channel
[09:09] bzinger has joined the channel
[09:10] Tug has joined the channel
[09:15] jeremyselier has joined the channel
[09:21] saschagehlich: tbranyen: node-gd works fine on 0.4.5 :)
[09:22] davidcoallier has joined the channel
[09:23] herbySk has joined the channel
[09:23] markwubben has joined the channel
[09:23] hoodoos has joined the channel
[09:24] hoodoos: hello guys! i have a problem with a server socket which I create with netbindings, it doesn't want to process more then 6(!) parallel connections for some reason, I guess I should alter some socket properties, but can't seem to find which
[09:26] mikl has joined the channel
[09:28] Lorentz has joined the channel
[09:29] jonashuckestein has joined the channel
[09:29] jetienne has joined the channel
[09:29] jonashuckestein: Boom! despite the free beer at the nodejs meetup, I built something tonight
[09:30] jonashuckestein: i proudly present the first draft version of hadoken: https://github.com/jonashuckestein/hadoken
[09:30] tbranyen: saschagehlich: awesome
[09:30] jonashuckestein: my implementation of twitter's phoenix with built in socket.io
[09:31] tokumine has joined the channel
[09:31] markwubben has joined the channel
[09:35] mc_greeny has joined the channel
[09:37] abraxas: Oh wow, node-mysql out of the box talks utf-8 to MySQL?
[09:37] abraxas: Sweet, I don't have to execute a SET NAMES :)
[09:38] dcelix has joined the channel
[09:39] Remoun: jonashuckestein; looks cool
[09:40] jonashuckestein: remoun, does it make at least a little bit of sense?
[09:41] Remoun: I'm not entirely sure how it would work, but I was about to take on a similar endeavor for a project of mine :)
[09:41] lukus has joined the channel
[09:41] Remoun: I think it does, yeah
[09:43] johnnyp has joined the channel
[09:43] markwubben has joined the channel
[09:43] jonashuckestein: it already works. the example will set up a server in development mode that'll server up a 'webapp' (an html page) and also feature the push service on the same server
[09:43] christophsturm has joined the channel
[09:44] jonashuckestein: when you move to production mode, you can run the webapp server and the push server separately on different subdomains without changing any code and things will still work :)
[09:45] jonashuckestein: this is not particular to push servers though. twitter uses a similar technique to send simple AJAX requests to api.twitter.com from their app at twitter.com
[09:47] [AD]Turbo has joined the channel
[09:48] micheil_mbp has joined the channel
[09:49] loktar_ has joined the channel
[09:49] abraxas: mscdex: Why do you have Client.ODBC as a default flag in node-mysql? Does that not mean what I would assume it means?
[09:54] sreeix has joined the channel
[09:57] jzaefferer1 has joined the channel
[09:57] d0k has joined the channel
[09:57] [AD]Turbo has joined the channel
[09:58] Remoun: jonashuckestein; that's a clever trick; I heard about it before, but didn't know how to implement it cleanly. +1 on wanting "as little crap as possible to interfere with or share a process/machine/datacenter with my webapp's push server." :)
[10:01] lukus has joined the channel
[10:05] Fuu` has joined the channel
[10:08] McMAGIC-- has joined the channel
[10:10] nyholt has joined the channel
[10:20] skohorn has joined the channel
[10:23] sonnym1 has joined the channel
[10:26] hwinkel has joined the channel
[10:26] tokumine has joined the channel
[10:27] beawesomeinstead has joined the channel
[10:27] beawesomeinstead has joined the channel
[10:28] astropirate has joined the channel
[10:29] stepheneb has joined the channel
[10:31] copongcopong has left the channel
[10:31] dekervit has joined the channel
[10:33] skohorn has joined the channel
[10:34] skohorn_ has joined the channel
[10:35] malkomal_ has joined the channel
[10:36] seivan has joined the channel
[10:37] skohorn has joined the channel
[10:38] sfoster has joined the channel
[10:44] hoodoos: btw, I found problem it was a browser.. wouldn't want to send more then 6 ajax requests..
[10:47] zentoooo has joined the channel
[10:55] xla has joined the channel
[10:57] Ori_P has joined the channel
[10:57] okuryu has joined the channel
[10:58] misterncw has joined the channel
[10:59] ph^ has joined the channel
[11:00] Samot has joined the channel
[11:00] broofa has joined the channel
[11:02] sveimac has joined the channel
[11:03] jelveh has joined the channel
[11:04] zed0 has joined the channel
[11:04] unomi has joined the channel
[11:05] freeformz has joined the channel
[11:06] MattJ has joined the channel
[11:07] stonebranch has joined the channel
[11:07] ph^ has joined the channel
[11:07] mraleph has joined the channel
[11:09] shaunau_ has joined the channel
[11:13] zentoooo has joined the channel
[11:14] zentoooo has joined the channel
[11:15] matschaffer has joined the channel
[11:17] eb4890 has joined the channel
[11:18] SamuraiJack has joined the channel
[11:20] FireFly|n900 has joined the channel
[11:23] Spion_ has joined the channel
[11:23] FireFly has joined the channel
[11:25] astropirate has joined the channel
[11:27] mc_greeny has joined the channel
[11:28] fairwinds has joined the channel
[11:38] johnnyp has left the channel
[11:39] Vertice has joined the channel
[11:42] eb4890_ has joined the channel
[11:43] Miljar has joined the channel
[11:45] bradleymeck1 has joined the channel
[11:48] lukegalea has joined the channel
[11:56] McMAGIC-- has joined the channel
[11:58] malkomalko has joined the channel
[11:59] markc has joined the channel
[12:01] stepheneb has joined the channel
[12:04] pomodoro has joined the channel
[12:07] TheJH has joined the channel
[12:07] beejeebus has joined the channel
[12:08] TheJH: I've got a few .js files that require() each other and they work fine in nodejs, but is there a simple way to compile them to one big .js file?
[12:08] muhqu_ has joined the channel
[12:09] TheJH: I'm thinking of something like "wrap the modules, put them in an object with the filenames as keys and let require() fetch them from the object"
[12:14] hwinkel has joined the channel
[12:15] aheckmann has joined the channel
[12:17] pdelgallego has joined the channel
[12:18] royvandermeij has joined the channel
[12:18] graysky has left the channel
[12:20] royvandermeij: nodeunit question
[12:20] royvandermeij: is there a way to test arrays?
[12:20] royvandermeij: as the following equation is false in js  ["a", "b", "c"] == ["a", "b", "c"]
[12:22] kadoppe has joined the channel
[12:25] Gruni|work: Hey hey. Is it possible to set an interval within a var server = net.createServer(function (socket) { ... } ?
[12:25] tiagoa has joined the channel
[12:26] royvandermeij: found it: notStrictEqual
[12:26] shaunau: you could do this too: javascript:alert(["a", "b", "c"].toString() == ["a", "b", "c"].toString())
[12:26] mikegerwitz: TheJH: I use a manual process to combine into a single file that works client-side. https://github.com/mikegerwitz/easejs/blob/master/tools/combine (I didn't want any dependencies; I'm not sure if there's a tool)
[12:27] mikegerwitz: TheJH: Just be aware that you'll need either combine them in a certain order, or you'll need to lazy load them on require(). I chose the former.
[12:27] Croms: How does one find out by command which libraries were installed during Node's instalation?
[12:27] shaunau: i doubt that's a very good way to do it thought :)
[12:27] royvandermeij: shaunau: thanks. just noticed that notStrictEqual isn't working in my case (which is a good thing hehe)
[12:27] TheJH: mikegerwitz: I'll try it, thanks!
[12:28] shaunau: royvandermeij: there is probably a better way than the toString - but i dont know what it is :)
[12:28] royvandermeij: shaunau: prolly just creating a function which returns true when all elements are the same
[12:28] jscheel has joined the channel
[12:28] jscheel has joined the channel
[12:28] shaunau: yah
[12:28] segaout has joined the channel
[12:29] royvandermeij: but for now it does the trick
[12:29] stagas: shaunau: toString won't work correctly [ '1,1', 1 ] becomes '1,1,1'
[12:30] shaunau: stagas: ah ok. :/
[12:30] jetienne has joined the channel
[12:30] shaunau: ok
[12:30] shaunau: another idea, toJSONSting the array and compare that :)
[12:31] shaunau: s/Sting/String
[12:32] Gruni|work: Sorry for interrupting, but is there any chance that I can call an interval within a net.createServer()?
[12:32] stagas: royvandermeij: you're looking for .deepEqual()
[12:33] arpegius has joined the channel
[12:33] MuzzleFork has joined the channel
[12:33] shaunau: stagas: that sounds like a better idea. :)
[12:33] royvandermeij: how the f*** did i miss that one :s
[12:33] royvandermeij: that works perfectly
[12:33] shaunau: hehe
[12:34] royvandermeij: whohoo, auto tests are in the green zone :)
[12:34] shaunau: royvandermeij: you're probably much better off listening to my ideas but then doing somethign totally different :)
[12:34] hij1nx has joined the channel
[12:35] royvandermeij: Hehe
[12:35] royvandermeij: as long as your idea's bring me to the best final result ;-)
[12:35] tiemonster has joined the channel
[12:36] TheJH: Gruni|work: couly you post an example?
[12:36] TheJH: *could
[12:38] shaunau: it's incredible how refreshing it is to use something like node + expressjs after using a much heavier framework for so long.. things seem really simple
[12:39] royvandermeij: if only there is a way to map the validations on sproutcore models and expressjs models :)
[12:39] Gruni|work: TheJH: http://shuttle.grunerd.de/0aa5b641.js
[12:40] ajsie: shaunau: i feel u
[12:40] Gruni|work: I'm trying to learn node.js and therefore I'm just fooling around with a tcp-server.
[12:40] ajsie: using rails/symfony didn't give me the picture of http like using node.js
[12:40] Gruni|work: And I want to send the current date once a second to every connected user
[12:41] fumanchu182 has joined the channel
[12:41] stagas has joined the channel
[12:41] ajsie: royvandermeij: express.js has models?
[12:41] hvgotcodes has joined the channel
[12:41] Gruni|work: If I run setInterval within var server = net.createServer(function (socket) { ... }, nothing happens
[12:41] ajsie: im using SC too .. but the models are already defined on the client side .. so i just push them to couchdb
[12:41] piscisaureus has joined the channel
[12:41] Gruni|work: And if I run it outside, I cant access socket
[12:41] ajsie: and couchdb validates
[12:42] royvandermeij: ajsie: whoops. busted :)
[12:42] ajsie: busted?=)
[12:42] royvandermeij: ajsie: haven't used express yet
[12:42] TheJH: Gruni|work: could you put all sockets in an array that you can access from outside?
[12:42] ajsie: =)
[12:43] royvandermeij: ajsie: but don't you want some more control in server side validation?
[12:43] stalled has joined the channel
[12:43] Gruni|work: TheJH, that sounds like a good idea, I'll try that.
[12:43] ajsie: but you are already doing it on couchdb
[12:43] royvandermeij: (haven't played with couchdb also)
[12:43] ajsie: you should only do it on one place imo
[12:43] TheJH: Gruni|work: remember to throw disconnected clients out of the array!
[12:43] sreeix has joined the channel
[12:43] ajsie: so you have frontend, backend and db .. you must have it on db levle
[12:43] ajsie: level
[12:44] royvandermeij: ajsie: I mostly end up doing it three times
[12:44] ajsie: =)
[12:44] royvandermeij: frontend, backend and db
[12:44] ajsie: not effieent!
[12:44] royvandermeij: tell me about it
[12:44] ajsie: the couchdb validations could be used for frontend
[12:45] ajsie: so you have the same for db and frontend
[12:45] astoon has joined the channel
[12:45] royvandermeij: that is awesome
[12:46] jtsnow has joined the channel
[12:47] shaunau: ajsie: there is sometimes benefit in not going to the DB, as that can be quite expensive on occasion
[12:48] hlindset has joined the channel
[12:48] hlindset has joined the channel
[12:52] ajsie: but the worse part is to have to code the same thing on multiple places
[12:52] ajsie: if the same code could be used on all places you wouldn't mind
[12:52] ajsie: for me its just about the same code everywhere
[12:52] sourcode has joined the channel
[12:52] luke` has joined the channel
[12:53] ajsie: you dont have to validate on db everytime ... just if you have a way to use the same validation code over and over without changing .. a couchdb lib allows you that
[12:54] pauls has joined the channel
[12:54] amacleod has joined the channel
[12:56] caolanm has joined the channel
[12:56] cellis has joined the channel
[12:56] jasong_at_apache has joined the channel
[12:56] cellis: what is the best xml library for nodejs
[12:58] breccan has joined the channel
[13:00] V1: o3 xml from ajax.org
[13:00] shaunau: ajsie: i see, i wasnt aware of the lib you speak of. sounds good though.
[13:01] Sembiance: morning :)
[13:01] tiagoa: morning
[13:02] cellis: i was just getting ready to try node-xml
[13:02] cellis: but i'll check this out
[13:02] cellis: thx
[13:02] arpegius_ has joined the channel
[13:03] Sembiance: ahhh, reading XML with node
[13:03] xandrews has joined the channel
[13:03] robotblake has joined the channel
[13:03] cellis: gotta parse openoffice documents :(
[13:03] shaunau: this might be a dumb question (many of mine are), but is there a particular library anyone can recommend to "clean user input" for preventing xss attacks?
[13:03] bradleymeck: ewww
[13:04] kenbolton has joined the channel
[13:04] v8bot has joined the channel
[13:05] bradleymeck: preventing xss? just never ever let there be html tags / validate your cookies, use a template engine instead.
[13:05] gbot2 has joined the channel
[13:05] bradleymeck: well and check your proxies
[13:06] gbot2 has joined the channel
[13:06] Sembiance: hmmm.. interesting template language http://akdubya.github.com/dustjs/
[13:06] Sembiance: anyone here have a template language they just love to use?
[13:06] fly-away has joined the channel
[13:07] luke`_ has joined the channel
[13:07] shaunau: bradleymeck: ok, thanks.
[13:07] bradleymeck: i like ejs but im a power whore
[13:08] bradleymeck: if it is user generated markdown generally
[13:10] tobym has joined the channel
[13:10] kriszyp has joined the channel
[13:10] rchavik has joined the channel
[13:11] Twelve-60 has joined the channel
[13:14] shaunau: expressjs request params are really cool
[13:14] shaunau: very easy.
[13:14] Sembiance: heh
[13:16] fermion has joined the channel
[13:17] Croms_ has joined the channel
[13:18] jlecker has joined the channel
[13:20] kuebk: damn
[13:20] kuebk: has anyone experienced problems with built in node JSON.stringify?
[13:20] kuebk: I can't parse on browser stringified json on server
[13:21] unomi has joined the channel
[13:22] gkatsev: is the JSON valid?
[13:22] bradleymeck: ^
[13:22] kuebk: sorry
[13:22] eirikurn has joined the channel
[13:22] kuebk: it's the problem in jquery
[13:22] kuebk: :(
[13:22] gkatsev: don't use jQuery?
[13:23] davidsklar has joined the channel
[13:23] kaos12 has joined the channel
[13:24] fmarceau has joined the channel
[13:24] kuebk: i'm using to make jsonp calls
[13:24] kuebk: the node sends escaped double quotes
[13:24] kuebk: but somehow jquery sees the response without escaped double quotes
[13:24] bergie has joined the channel
[13:25] gkatsev: you should be able to get the responseText and try to parse it yourself
[13:25] gkatsev: i.e. using JSON.parse rather than jquery
[13:26] Swimming_bird has joined the channel
[13:26] mAritz: i need people using my module so they can give me feedback about it! someone make me some people please! :D
[13:26] bradleymeck: which what now
[13:26] devdazed has joined the channel
[13:27] kuebk: gkatsev that's what I'm doing
[13:27] kuebk: I want to use browser built in JSON.parse
[13:28] kuebk: but somehow jquery on responseText gives me text without escaped double quotes
[13:28] gkatsev: ah
[13:28] gkatsev: and jQuery's parsing is also failing?
[13:28] gkatsev: kuebk: have you tried doing the XHR manually, to see what you get that way?
[13:29] devdazed has left the channel
[13:29] kuebk: jsonp is not a xhr
[13:29] kuebk: or am i wrong?
[13:29] Sembiance: jQuery eh? I'll stick with YUI and Socket.io :)
[13:30] gkatsev: jsonp is xhr, it's just a bit different.
[13:30] kuebk: hmm
[13:30] postwait has joined the channel
[13:30] matyr has joined the channel
[13:30] tbranyen: jquery uses JSON.parse internally
[13:30] V1: gkatsev: Thats like saying that a gif is a swf, but just a bit different lol
[13:30] tbranyen: fyi
[13:31] gkatsev: lol
[13:31] kuebk: nah
[13:31] kuebk: tbranyen I'm giving the jsonp callback json as string
[13:31] gkatsev: I mean, isn't the only thing that's really needed is the callback added to the url?
[13:32] kuebk: wrong, I meant: I'm giving stringified json to jsonp callback as a string
[13:32] tbranyen: kuebk: json is inherently stringified
[13:32] rfay has joined the channel
[13:33] pc1oad1etter has joined the channel
[13:33] kuebk: tbranyen what I'm doing is
[13:33] gkatsev: just as circles are round by definition.
[13:33] arpegius_ has joined the channel
[13:33] kuebk: getting the data from the backend
[13:33] kuebk: or maybe i'm doing something wrong
[13:33] kuebk: brb
[13:33] gkatsev: `code
[13:33] gbot2: Show some code. Code examples should be complete (sufficient to show the problem) and minimal (as short as possible while remaining complete). See http://www.webdevout.net/test or `paste
[13:33] tbranyen: already sounds wrong
[13:33] arpegius has joined the channel
[13:33] tbranyen: and i haven't heard anything
[13:35] devdazed has joined the channel
[13:37] seivan has joined the channel
[13:38] mhooker has joined the channel
[13:39] jano has joined the channel
[13:41] ceej has joined the channel
[13:42] Gruni|work: TheJH, thank you very much, the array did the trick.
[13:42] Gruni|work: One last question and I'm served: How can i check if a socket is writable or not?
[13:43] Gruni|work: When a client does a "clean" disconnect, everything is fine.
[13:44] Insanity5902 has joined the channel
[13:47] TheJH: mikegerwitz: I'm doing it this way now (combining modules): https://gist.github.com/905634 - it automa(g/t)ically finds the right order
[13:47] mscdex: Gruni|work: check the writable property
[13:47] liquidproof has joined the channel
[13:48] Gruni|work: mscdex: if(socket.writable) <-?
[13:48] mscdex: yep
[13:48] Gruni|work: Okay, merci  :)
[13:48] astropirate has joined the channel
[13:49] sirkitree has joined the channel
[13:51] mikegerwitz: TheJH: Nice dependency trick :) My solution was fine when I had 3 modules, but as it's growing, I may adopt a style similar to yours.
[13:52] kriszyp has joined the channel
[13:53] fadeddata has joined the channel
[14:01] yhahn has joined the channel
[14:01] nefD has joined the channel
[14:03] eb4890_ has joined the channel
[14:03] trotter has joined the channel
[14:04] dberlinger has joined the channel
[14:06] unomi has joined the channel
[14:06] whoops has joined the channel
[14:06] Charuru has joined the channel
[14:07] rchavik has joined the channel
[14:07] galaxywatcher has joined the channel
[14:07] arpegius has joined the channel
[14:09] zcopley has joined the channel
[14:10] mattrobenolt has joined the channel
[14:10] timmywil has joined the channel
[14:10] dcelix has joined the channel
[14:10] bcelenza has joined the channel
[14:11] Vladimir1 has joined the channel
[14:14] bcelenza has joined the channel
[14:15] shiawuen has joined the channel
[14:15] BillyBreen has joined the channel
[14:16] graysky has joined the channel
[14:19] mike5w3c_ has joined the channel
[14:19] Know1edge has joined the channel
[14:19] Aria has joined the channel
[14:23] Emmanuel__ has joined the channel
[14:23] Poetro has joined the channel
[14:23] jimt_ has joined the channel
[14:24] flippyhead has joined the channel
[14:24] eresair has joined the channel
[14:24] unlink has joined the channel
[14:24] unlink has joined the channel
[14:25] Emmanuel__ has joined the channel
[14:25] ph^ has joined the channel
[14:25] mattrobenolt: In Node, can I access a microtime to get higher accuracy than milliseconds provided with new Date().getTime()
[14:27] harth has joined the channel
[14:29] hvgotcodes has joined the channel
[14:30] datapimp has joined the channel
[14:30] losing has joined the channel
[14:31] Ori_P has joined the channel
[14:31] flat has joined the channel
[14:33] balaa has joined the channel
[14:33] arpegius has joined the channel
[14:34] tmzt: anybody konw why mongoose won't find something with an objectid?
[14:35] tmzt: mattrobenolt: try ffi library unless v8 has an extension
[14:35] tmzt: ffi or native c++
[14:35] mattrobenolt: tmzt: I came across https://github.com/wadey/node-microtime
[14:35] rchavik has joined the channel
[14:36] charlenopires has joined the channel
[14:36] mattrobenolt: Just wasn't sure if there was something native because that won't compile for me. :)
[14:37] Draggor: bradleymeck: around?
[14:38] bradleymeck: mmm? at work though
[14:39] flippyhead has joined the channel
[14:39] charlenopires has joined the channel
[14:39] Draggor: inimino was mentioning something about security problems in regards to v8bot that I should ask you about?
[14:39] eee_c has joined the channel
[14:40] wmartin has joined the channel
[14:40] bradleymeck: its a problem w/ v8, prototypes leak between contexts
[14:40] bradleymeck: so i can use those to crawl up fn.caller chains to get to node's require function etc
[14:40] indutny has joined the channel
[14:40] tschundeee has joined the channel
[14:41] lessthanzero has joined the channel
[14:41] bradleymeck: i put a post on the v8-user group a while back to try and get better context security token management
[14:41] bradleymeck: no one responded
[14:41] roger_raymond has joined the channel
[14:41] brianloveswords has joined the channel
[14:42] jakehow has joined the channel
[14:42] ckknight: bradleymeck: well, that'd be solved by strict mode, since caller and callee are off-limits at that point.
[14:42] Draggor: Well that's interesting.  I thought v8bot though is kicking off stuff in a new process.
[14:43] bradleymeck: ckknight not exactly
[14:43] bradleymeck: non-strict mode functions can still grab it
[14:43] ckknight: true
[14:43] ckknight: force everything strict!
[14:43] ckknight: :P
[14:43] bradleymeck: gl w/ that
[14:43] bradleymeck: lol
[14:43] b3f0r3- has joined the channel
[14:44] ckknight: I must go, bbiab
[14:44] ryanfitz has joined the channel
[14:44] Venom_X has joined the channel
[14:44] jeromegn has joined the channel
[14:45] bradleymeck: draggor it might but same issue still there unless you have a "raw" v8 , i forget if -e is truly raw
[14:45] b3f0r3-: is there a script for users to connect on irc
[14:45] roger_raymond has joined the channel
[14:46] Draggor: bradleymeck: I don't quite follow
[14:46] davidwalsh has joined the channel
[14:47] bradleymeck: if node is wrapping the script, i can get the require function. so you need something w/o the v8 extensions / node require function etc
[14:47] Swimming_bird has joined the channel
[14:48] jetienne: in js, a charCode is 8bit ? more ? 
[14:48] bradleymeck: can be more
[14:48] jetienne: bradleymeck: is there a limit ?
[14:48] Draggor: Err, I mean, it looks like it's actually kicking off an entirely new node instance to run scripts
[14:48] Aria has joined the channel
[14:48] davidvanleeuwen has joined the channel
[14:48] bradleymeck: utf8 maxes at 4 right now, but no technical limit
[14:49] ryanfitz has joined the channel
[14:49] jetienne: bradleymeck: ok thanks
[14:49] bradleymeck: draggor the problem is that node is calling it, doesnt matter if it is a new process, the fact that the require function exists in the call chain somewhere means i can get it
[14:50] Draggor: Oooh I understand now.  That's quite a nasty little bug.
[14:50] bradleymeck: it can be fixed w/ contexts getting real security token management rather than the copy hell currently in place
[14:53] gzmask has joined the channel
[14:53] Draggor: Any guess on how hard that is to do?
[14:53] stevereed has joined the channel
[14:53] matschaffer has joined the channel
[14:53] gzmask: any one know how to use ejs on express? I copied the examples into views but getting errors.
[14:54] bradleymeck: draggor w/o v8 team doing it, incredibly, but the alternative is to use a minimal v8 wrapper to execute instead of a full one
[14:55] colinclark has joined the channel
[14:55] sub_pop has joined the channel
[14:55] astoon has joined the channel
[14:57] kevwil has joined the channel
[14:58] sivy has joined the channel
[14:58] jtsnow has joined the channel
[14:58] Swimming_bird has joined the channel
[14:59] siculars has joined the channel
[15:00] bsparks has joined the channel
[15:00] highermath_away has joined the channel
[15:00] highermath_away has joined the channel
[15:01] stonecobra has joined the channel
[15:01] Pilate has joined the channel
[15:01] mraleph: jetienne: String.prototype.charCodeAt returns 16bit code
[15:02] markc has joined the channel
[15:02] astropirate has joined the channel
[15:02] Draggor: bradleymeck: Well, I was thinking about banning all references to require, that in theory should work yeah?
[15:03] bradleymeck: nope saddly
[15:03] Draggor: Oh, i see
[15:03] Draggor: because of going up the chain they never have to directly see it
[15:03] bradleymeck: yea
[15:03] arpegius_ has joined the channel
[15:03] bradleymeck: try out node -e instead of what they are doing
[15:03] eaton has joined the channel
[15:04] \sega has joined the channel
[15:04] tobym has joined the channel
[15:05] bradleymeck: draggor nm its got the require function in it, sec
[15:05] jetienne: mraleph: ok thanks
[15:05] sivy has joined the channel
[15:06] MikhX has joined the channel
[15:07] nciagra has joined the channel
[15:07] nefD has joined the channel
[15:07] Swimming_bird has joined the channel
[15:08] yozgrahame has joined the channel
[15:09] tmzt: gzmask: did you app.set('view engine', 'ejs')
[15:09] gzmask: tmzt: yup
[15:09] delian66 has joined the channel
[15:09] gzmask: I got "ReferenceError: names is not defined" at "ejs/lib/ejs.js:140:12"
[15:10] eirikurn_ has joined the channel
[15:10] Me1000 has joined the channel
[15:10] markc has joined the channel
[15:10] tmzt: I don't use ejs, ask tj when he's around
[15:11] gzmask: http://pastie.org/1763667
[15:12] plyons has joined the channel
[15:14] tmzt: gzmask: how are you passing names? this isn't ruby
[15:14] tmzt: try var options = {names: names}; res.render('index.ejs', options)
[15:14] bcelenza has joined the channel
[15:15] tmzt: or if on pre express 2.0, make options {locals:{names: names}}
[15:16] k1ttty has joined the channel
[15:16] indutny1 has joined the channel
[15:18] dnolen has joined the channel
[15:18] perlmonkey2 has joined the channel
[15:18] warz has joined the channel
[15:18] beawesomeinstead has joined the channel
[15:18] beawesomeinstead has joined the channel
[15:18] Venom_X_ has joined the channel
[15:19] gzmask: in index.js in views?
[15:19] perlmonkey2: With dnode, is there any reason you couldn't write a single page MVC app with the view on the client and all the controllers on the server? Is there something obiously wrong with that pattern?
[15:19] tmzt: none
[15:20] springmeyer has joined the channel
[15:20] tmzt: unles you need to support non js browsers or socket.io fails
[15:20] tmzt: gzmask: yes
[15:20] tmzt: gzmask: on express 2.0 you might need the full path
[15:20] sivy has joined the channel
[15:20] tjholowaychuk has joined the channel
[15:20] pyrony has joined the channel
[15:21] perlmonkey2: tmzt: What about a situation wher eyou have a gridview being scrolled with an event being thrown ever 100ms for a few seconds?
[15:22] softdrink has joined the channel
[15:22] sivy has joined the channel
[15:22] tmzt: dnode is just an rpc mechanism, limited by the transport
[15:23] springmeyer has left the channel
[15:23] tmzt: it would be nice if somebody could implement some of the dojo grid functionality independent of dojo
[15:23] shiawuen has joined the channel
[15:23] perlmonkey2: tmzt: I know. Just trying to find obviously points of failure for using it with View code on the lcient and the controllers on the server in a single page app.
[15:23] perlmonkey2: I'd probably just end up with light weight controller code on the client to handle those special cases.
[15:25] kuhrt has joined the channel
[15:25] gmci has joined the channel
[15:26] bergie has joined the channel
[15:27] tmzt: perlmonkey2: trying to figure out a single page system with db agnostic orm
[15:27] ckknight has joined the channel
[15:27] tmzt: but not for my current project
[15:27] Aria has joined the channel
[15:28] fangel has joined the channel
[15:29] ohtogo has joined the channel
[15:30] willwhite has joined the channel
[15:31] tshpaper has joined the channel
[15:32] perlmonkey2: tmzt: I've got a client who wants a simple cms type site. But I'll probbaly curse them with at least one page which is a single page app. I can't resist doing something awesome like that.
[15:32] tmzt: ah, I see
[15:32] indutny has joined the channel
[15:33] tmzt: as for cms, I did a very basic one with ajax
[15:33] tmzt: also using dnode for something
[15:33] perlmonkey2: It is an awesome solution which I can't find a good problem for.
[15:33] tmzt: github.com/tmzt/nodecms
[15:33] tmzt: those are the best
[15:33] perlmonkey2: oh, you wrote that? awesome
[15:33] perlmonkey2: duh....just matched the nick :P
[15:33] arpegius has joined the channel
[15:33] tmzt: it's basically boilerplate and not updated to express 2.0
[15:34] tmzt: the cms/orm I described will eventually replace it
[15:34] metamind has joined the channel
[15:34] tmzt: oh, it's using sammyjs on the client
[15:34] perlmonkey2: I was going to use django, but at this point it doesn't offer much more than node's libs do.
[15:34] tmzt: hah
[15:34] tmzt: so you have vps style hosting for the client?
[15:35] tmzt: if not I'm working with samcday_away on fastcgi support for node, he wrote the code I've got a few patches against it
[15:35] perlmonkey2: right now they have a vps they're way overpaying for which has their static site.
[15:36] hornairs has joined the channel
[15:36] graysky has left the channel
[15:36] Kingdutch has joined the channel
[15:36] eb4890_ has joined the channel
[15:36] rfay has joined the channel
[15:37] ryanfitz has joined the channel
[15:38] Lorentz has joined the channel
[15:39] stonebranch has joined the channel
[15:39] Charuru: anyone here use handlebars? how do I make handlebars accept undefined values without crashing?
[15:41] tmzt: perlmonkey2: just saying, you can keep node and ditch the vps if you want
[15:41] teemow has joined the channel
[15:41] synkro has joined the channel
[15:42] edw has joined the channel
[15:42] Venom_X has joined the channel
[15:43] stonebranch has joined the channel
[15:43] slaskis has joined the channel
[15:43] baudehlo1 has joined the channel
[15:43] indutny has joined the channel
[15:43] micheil: perlmonkey2: to be honest, I wouldn't exactly be using node for anything that involves a user-login mechanism at the moment, until we have a really good bcrypt library.
[15:44] tmzt: bcrypt?
[15:44] mikl has joined the channel
[15:44] mikl has joined the channel
[15:45] perlmonkey2: tmzt: yeah, might do that.
[15:46] perlmonkey2: micheil: for https?
[15:46] micheil: perlmonkey2: bcrypt is a hashing library
[15:46] tmzt: micheil: I don't know why you can't use sha1 or sha256 and salt if you want to
[15:46] micheil: currently node doesn't exactly have a great user-land module for that.
[15:46] TheJH has left the channel
[15:46] tmzt: it's has the crypto module
[15:46] micheil: sha1 and sha256 and consider bad for using on passwords, considering how fast they are.
[15:46] tmzt: why do you need bcrypt?
[15:47] micheil: http://codahale.com/how-to-safely-store-a-password/
[15:47] perlmonkey2: I sha512 a few thousand times with a recommended sized salt.
[15:47] tmzt: if you have the hashes dictionary/rt is faster
[15:48] ryah_: worrying about brute force attacks is insane
[15:48] micheil: sha's are just checksums, they aren't exactly encryption.
[15:48] dguttman has joined the channel
[15:48] ryah_: (i seem to remember saying that yesterday)
[15:49] perlmonkey2: ryah_: it was two seconds of coding to make my pwd's brute force safe.
[15:49] Ori_P has joined the channel
[15:49] micheil: see: http://en.wikipedia.org/wiki/Cryptographic_hash_function
[15:49] micheil: as to what a hashing function is.
[15:49] micheil: perlmonkey2: and what did that result in?
[15:49] tmzt: this is an interesting perspective, like hashcash
[15:50] tmzt: if the algorithms were in the crypto library they could be used
[15:50] micheil: node can handle many thousands of requests a second, and shasums are very quick to generate, so you're leaving your self wide-open to brute force attacks
[15:50] micheil: there is already a bcrypt library for node, although, it's broken on non-bsd systems
[15:51] jetienne: tmzt: go hashcash, go 
[15:51] indutny1 has joined the channel
[15:51] micheil: ryah_: btw, on crypto, maybe split it into a hashing library and a secure stream library?
[15:51] tmzt: kernel doesn't, why do that?
[15:53] EyePulp has joined the channel
[15:53] tobym has joined the channel
[15:53] perlmonkey2: micheil: so you're claiming that if I use the hmac method in the crypto module with something like sha512, do that a few thousand times properly salted, that I'm not vulnerable to brute force attacks?
[15:53] perlmonkey2: s/not/now/
[15:54] timcosgrove has joined the channel
[15:54] micheil: it always has been, it's not that it now is.
[15:54] micheil: hashing != encryption, it never has.
[15:54] perlmonkey2: yeah, I wouldn't want it encrypted.
[15:54] perlmonkey2: Encrypting pswd is retarded.
[15:54] perlmonkey2: pwd's.
[15:55] tmzt: not really, you just increased the complexity linearly
[15:55] tmzt: by a small amount
[15:55] jetienne: perlmonkey2: and users dont want everybody to know their password... so please encrypt it
[15:55] micheil: actually, you do want to encrypt your passwords, that's the idea behind it, otherwise you may as well store them as plaintext
[15:55] Yuffster_work has joined the channel
[15:55] tmzt: first, the browser isn't encrypting the password to transmit it to you, unless you use tls
[15:55] tmzt: this is about protecting them on the server
[15:56] piscisaureus: mraleph: here?
[15:56] tmzt: and only against somebody coming accross your hash database, which is possible
[15:56] indutny has joined the channel
[15:56] mraleph: piscisaureus: kinda
[15:56] jetienne: tmzt: i heard people are entering server to take data out of it :)
[15:56] piscisaureus: mraleph: you have experience with -flto / -fwhole gcc options?
[15:56] piscisaureus: is there a specific reason why v8 doesn't use it?
[15:57] piscisaureus: *-fwhole-program
[15:57] perlmonkey2: If I encrypt their password and my machine is compromised, they now have everyones' passwords. If I hash them and my machine is compromised, they now need to create a rainbow table for every single user and waste their botnet hashing them individually.
[15:57] micheil: tmzt: also, if your password storage has a time factor in it (like bcrypt does), then it takes longer to check if passwords match
[15:57] tmzt: sure, and cost if you are using aws
[15:57] tmzt: but it's a tradeoff, could be worth it
[15:58] mraleph: no experience.
[15:58] micheil: if you can fire 1000 different password combinations at a node server in 1 second or something like that, then having a latency on the matching will aid you greatly
[15:58] mraleph: I don't think it matters
[15:58] tmzt: didn't know bcrypt was blowfish derived or that md5/sha1 were getting that fast
[15:58] piscisaureus: mraleph: ok
[15:58] perlmonkey2: I'll go with standards. And standards say hash at different levels of complexity for different types of pwd's.
[15:59] jetienne: tmzt: use standard when possible
[15:59] tmzt: micheil: I guess you have to protect against that as well, good crypto is about the system
[15:59] jetienne: ACTION is turning in secu advice giver :)
[15:59] Emmanuel__ has joined the channel
[15:59] tmzt: perlmonkey2: what standards?
[15:59] jetienne: pkcs5 is password generation
[16:00] micheil: perlmonkey2: uhh, hashing isn't what you want. hashing algorithms are quick. seriously quick.
[16:00] jetienne: standard === much less likely to expose your users
[16:00] EyePulp: so how separate are the scopes of the same module imported twice? or is it like python imports, where it avoids a second import?
[16:00] timcosgrove has left the channel
[16:01] perlmonkey2: micheil: okay, take two seconds and implement my agorigthm. See the 50ms time required to complete it. Then tell me it is 'seriously' fast.
[16:01] jetienne: EyePulp: require('blabal') === require('blabal') this is commonjs stuff
[16:01] dmcquay has joined the channel
[16:01] micheil: perlmonkey2: which algorithm, where?
[16:01] perlmonkey2: sha512 2,000 times.
[16:01] daniellindsley has joined the channel
[16:02] jetienne: dont act crypto researchers, use standard when possible
[16:02] EyePulp: jetienne: so the second import is essentially just a pointer to the scope/variables of the first?
[16:02] jetienne: EyePulp: yes.
[16:02] mjr_ has joined the channel
[16:02] gnagno: I am using the redis client for nodejs, a callback is returing me a buffer... can someone please tell me how to deal with buffers?
[16:03] tbranyen: toString?
[16:03] davidwalsh has joined the channel
[16:03] micheil: gnagno: see the documentation on Buffers.
[16:03] steffkes has joined the channel
[16:03] micheil: http://nodejs.org/docs/v0.4.3/api/buffers.html
[16:03] colinclark has joined the channel
[16:04] arpegius_ has joined the channel
[16:04] gnagno: micheil, I am in that page... right now... but something is not clear anyway :)
[16:04] micheil: okay, what's not clear?
[16:04] jetienne: gnagno: or switch to string, it is slower... but known api
[16:05] whippersnapper has joined the channel
[16:05] perlmonkey2: micheil: if you store an encryption key on yourmachine, you just gave up every single persons' pwd the first time you get compromised. And since users are dumb by definition, they'll be mad at you when every single one of their accounts, which obviously use the same password, is now also compromised.
[16:05] whippersnapper: hello?
[16:05] tbranyen: hello?
[16:05] whippersnapper: hi anyone knows how to uninstall nodejs completely from Mac OSX
[16:05] tmzt: ryah_: will buffers and ecmascript buffers be compatible? I'm wondering because the new WebSockets API is using them
[16:05] micheil: perlmonkey2: uhh, you did see that article on bcrypt, right?
[16:06] perlmonkey2: missed that link.
[16:06] micheil: look up bcrypt and the bluefish algorithms
[16:06] gnagno: micheil, I am using redis.lrange, this should return a buffer... anyway if I call toString on it I get cannot convert undefined to string...
[16:06] micheil: uhh, in which case that's not an issue with the docs..
[16:07] micheil: that's an issue with the library.
[16:07] whippersnapper: anyone knows how to uninstall nodejs from OSX?
[16:07] gnagno: micheil, I am trying to understand where the problem lies
[16:07] pquerna: ryah_: ugh, i thought at least one of the openssl bindings was maintained :-/ https://github.com/waveto/node-crypto
[16:08] gzmask: whippersnapper: brew uninstall nodejs
[16:08] perlmonkey2: micheil: not sure how bcrypt obviates the need to keep a key. I thought one way encryptoin was another way to say 'hashing' :P
[16:08] stonecobra: is there a python ctypes equivalent in node land?
[16:08] beawesomeinstead has joined the channel
[16:09] micheil: perlmonkey2: okay, maybe bcrypt is still "hashing" but it's got a time-factor.
[16:09] stonecobra: I loved pquerna's blog post on fixing SSL in python with ctypes, awesome work
[16:09] Aria: Yeah, wow.
[16:09] whippersnapper: is brew something i need to install
[16:09] ryah_: tmzt: what?!
[16:09] ryah_: tmzt: tell me more - link?
[16:09] perlmonkey2: ryah_: do you have a post on why protecting from brute force attacks aren't needed?
[16:09] stonecobra: whippersnapper: brew is handy for OSX package management, akin to fink
[16:09] mikegerwitz: perlmonkey2: It doesn't. It's just slower.
[16:10] pquerna: stonecobra: there was a node-ffi thing at one point
[16:10] kal-EL_ has joined the channel
[16:10] Muon has joined the channel
[16:10] pquerna: stonecobra: https://github.com/rbranson/node-ffi
[16:10] isaacs has joined the channel
[16:10] stonecobra: pquerna: thx
[16:10] tmzt: ryah_: it's on a mailing list, one second
[16:10] derferman has joined the channel
[16:10] perlmonkey2: mikegerwitz: no one is going to break your encryptoin with brute force. But they will get every single one of your users' password (which they use on every one of their 50 accounts) as soon as they compromise your system.
[16:10] ryah_: perlmonkey2: oh, i was just be overly abrassive. i think the bcrypt is a good idea.
[16:11] norviller has joined the channel
[16:11] mikegerwitz: perlmonkey2: Conventional hashing algorithms aren't recommended because of speed. But if you keep your salt secret, that's pretty much the same as using a key. So you're likely fine. On a full compromise, they'd have your encryption key anyway, but they'd be able to immediately edecrypt rather than dealing with trying to brute force
[16:11] pelumini has joined the channel
[16:11] pelumini: hi
[16:12] perlmonkey2: right, so you hash with an expensive algo so that it just isn't worth spending 2 years brute forcing a single users pwd since each salt is unique for a user.
[16:12] mikegerwitz: perlmonkey2: I mostly agree with you. I certainly suggest bcrypt but I don't think you're going to have a problem with your implementation. but I never suggest storing the salt with the hash regardless
[16:12] perlmonkey2: That means a 2TB rainbow table PER USER.
[16:12] mikegerwitz: perlmonkey2: Rainbow tables aren't generally needed. They try the most comon passwords and cahracter combos. But if you hash a hash you eliminate that luxury, unless your system is compromised and they discover your implementation. Or if you have a strong password.
[16:13] Me1000 has joined the channel
[16:13] perlmonkey2: no one can protect a user who can enter 'password' as their password :P
[16:13] mikegerwitz: perlmonkey2: exactly
[16:13] mikegerwitz: perlmonkey2: I had this argument with some security guys in this same channel a few weeks back
[16:13] pelumini: i'll like help with this - on ./configure - cygwin on windows 7 - getting error - ImportError: No module named os
[16:13] isaacs: perlmonkey2: sure you can.  just don't allow any passwords shorter than 24 characters
[16:14] tmzt: ryah_: http://www.ietf.org/mail-archive/web/hybi/current/msg07077.html
[16:14] perlmonkey2: mikegerwitz: but that's my whole point. No one is brute forcing a hashed pwd through the user interface. Only upon a system compromise does your impelmentatoin reallymatter.
[16:14] sdecastelberg has joined the channel
[16:14] mikegerwitz: perlmonkey2: Yep, exactly
[16:14] isaacs: and throw a setTimeout(..., 2000) in your login checking logic.
[16:14] isaacs: perlmonkey2: if your system is compromised, then you're boned anyway
[16:14] perlmonkey2: but with encrypted passwords, a system compromise instantly gives that attacker everyone's passwrods.
[16:14] mikegerwitz: perlmonkey2: Their argment was that on a full system compromise, sha*, md5/etc is useless. Well, yes, *every* algorithm is useless in that case, if they get your key.
[16:14] perlmonkey2: not if you hash.
[16:14] perlmonkey2: if you hash you are not boned.
[16:15] tmzt: isaacs: that only helps for online
[16:15] perlmonkey2: or you are, but your users aren't.
[16:15] isaacs: perlmonkey2: if you can compromise the system, you can alter the code that decrypts the password to also write them to a plaintext file, and then log in later and read it
[16:15] perlmonkey2: You don't want to send out that email to all your users saying all their passwords are belong to the bad guys.
[16:15] mikegerwitz: perlmonkey2: I always prefer hashing because you're protecting your user. Since passwords are shared between websites. Encrypting a password is just insane, so I agreee with you on that. bcrypt just makes life easier because it's slow, so it simplifies your implementation
[16:15] perlmonkey2: isaacs: true. no protecting against that. 
[16:15] isaacs: the only way to prevent password leakage in the event of a system compromise is to never ever let your system be compromised.
[16:15] pelumini: perlmonkey2: hi
[16:16] perlmonkey2: okay, I'm way too off topic :P I concede all future points :P
[16:16] isaacs: or, have your users log in using pub/priv key encryption and other craziness that users of some dinky website are never going to do
[16:17] ryah_: tmzt: i'm missing the bit about buffers - wrong link?
[16:17] tmzt: ryah_: no, ByteArray
[16:17] Know1edge: How do you guys like using mongoDB with node?
[16:17] tmzt: my confusion, but still valid as js has no native Buffer type
[16:18] Know1edge: any best practices for it?
[16:18] ryah_: oh - but this isn't an actual proposal
[16:18] isaacs: perlmonkey2: to protect against that, it has to be encrypted/hashed on the user end before being sent, and even then, if you comp the system, then you can send differetn JS to the web client
[16:18] tmzt: I'm wondering how that would interact if you wanted to use the WebSocket API server side
[16:18] MikhX has joined the channel
[16:18] ryah_: tmzt: afaik no one has proposed a way to do binary over websockets
[16:18] hwinkel1 has joined the channel
[16:18] maeldur has joined the channel
[16:18] ryah_: "officially"
[16:19] ckknight: that seems like an oversight
[16:19] tmzt: they are completely paranoid about a plausible but unlikely attack, this has driven the discussion for the last few months
[16:19] ryah_: it's not an oversight - they've left a byte at the beginning of each message for flags
[16:19] ryah_: so in the future they can support it
[16:19] tmzt: they don't want the browser having much control at all over the content of the stream
[16:20] tmzt: so they will really only support it if the server allows it, and maybe only for non browser clients
[16:20] ryah_: i think the problem is that there isn't an accepted way of doing binary data yet
[16:20] ryah_: although webgl's typed arrays seem to be gaining traction
[16:21] tmzt: it's possible WSS will allow it, not sure if that's a proposal or not
[16:21] tschundeee has joined the channel
[16:21] pelumini has left the channel
[16:21] ryah_: i will likely land typed arrays in v0.5 - hopefully that will through more weight behind them
[16:21] tmzt: typed arrays are realced by ByteArray I think
[16:21] tmzt: er
[16:21] Brak has joined the channel
[16:21] tmzt: they aren't webgl specific anymore at least
[16:22] ryah_: https://www.khronos.org/registry/typedarray/specs/latest/
[16:22] pelumini has joined the channel
[16:22] micheil: tmzt: I'm going to just allow you to send Buffers via websockets
[16:22] pquerna: to the war room
[16:22] micheil: ryah_: ^^
[16:22] micheil: however, as for how the client receives it is another matter.
[16:22] emattias_ has joined the channel
[16:23] indutny1 has joined the channel
[16:23] sourcode has joined the channel
[16:23] isaacs: ryah_: <3 typedarray
[16:23] isaacs: ryah_: it's basically the best of Buffers + ctypes
[16:23] ryah_: one of the main problems with TypedArrays as a general purpose binary API, imo, is that there are methods defined for string encoding/decoding
[16:24] ryah_: which is extremely important for our use cases
[16:24] abraham has joined the channel
[16:24] micheil: tmzt: also, all data over websockets is going to more then likely be encoded with some form of masking.
[16:24] ryah_: er - there are NO methods
[16:24] micheil: so the user still can't control it.
[16:24] tmzt: could a node Buffer wrap it or ByteArray?
[16:24] tanepiper: yea, +1 for typed arrays.  Would be good for my nodejs powered mediaplayer + viz app :D
[16:24] tmzt: is it limited compared to the allocation fuction
[16:24] zpao_ has joined the channel
[16:25] tmzt: micheil: yeah, I'm following the discussion
[16:25] ryah_: string encoding/decoding is tricky and needs to be done in the VM
[16:25] tmzt: 7bit, like PPP
[16:25] creationix has joined the channel
[16:26] ckknight: ryah_: why does it necessarily have to be done in the VM? Surely someone could write a lib (though it might be slow)
[16:26] ryah_: because it will be slow
[16:26] steph021 has joined the channel
[16:27] tmzt: ryah_: I'm wondering how you would support fastcgi in http server, as it is now samcday_away's code basically fakes it though it doesn't need to parse any http headers from the stream
[16:27] ryah_: maybe i'm wrong - but personally i want heavily optimized encoding/decoding
[16:27] ryah_: tmzt: ?
[16:28] ryah_: tmzt: to server a fastcgi app?
[16:28] ryah_: s/r//
[16:28] tmzt: https://github.com/samcday/node-fastcgi-application
[16:28] tmzt: yes, I have tested it on a hosting provider, it's working
[16:29] mike_miller has joined the channel
[16:30] seivan has joined the channel
[16:30] ryah_: tmzt: oh - awesome!
[16:30] mike5w3c has joined the channel
[16:30] tmzt: http://nodetest.gattusosmusic.com/
[16:31] tmzt: node is installed locally in ~ without needing any open ports
[16:31] indutny has joined the channel
[16:31] llkazu has joined the channel
[16:31] jonashuckestein has joined the channel
[16:32] brianloveswords has joined the channel
[16:33] gzmask: anyone know where should the image files be in express?
[16:34] tjholowaychuk: gzmask: public/images
[16:34] gzmask: thanks TJ
[16:34] bradleymeck: do we have a spdy parser lying about?
[16:34] tmzt: gzmask: anywhere you want them, you either have to have app.use(express.static()) or have your proxy server serve them
[16:34] tmzt: tjholowaychuk: is there supposed to be a search path for views in express 2.0?
[16:34] ryah_: tmzt: what's your question?
[16:35] tjholowaychuk: tmzt: there is one only
[16:35] tmzt: ryah_: I'm asking the proper way to integrate this so that it can act as an http server
[16:35] tmzt: and be used in .listen()
[16:35] sreeix has joined the channel
[16:36] zpao__ has joined the channel
[16:36] eb4890_ has joined the channel
[16:37] jtsnow has joined the channel
[16:37] darshanshankar has joined the channel
[16:38] indutny has joined the channel
[16:39] colinclark has joined the channel
[16:40] mattly has joined the channel
[16:41] broofa has joined the channel
[16:42] indutny1 has joined the channel
[16:42] harth has joined the channel
[16:43] wilmoore has joined the channel
[16:44] k1ttty has joined the channel
[16:45] indutny has joined the channel
[16:46] apoc has joined the channel
[16:47] EyePulp: I realize this is a dumb one, but what's the proper pattern in exporting from a module to create a unique and self-contained instance of something ( a Class?) with its own scope, functions and data?  This is probably JS 101, but I'm running into module scoping issues and looking to learn the proper approach. =)
[16:47] ckknight: modules in Node.js are already scoped, and you can treat the module itself as a singleton
[16:47] tbranyen: EyePulp: https://github.com/tbranyen/nodegit/blob/0.0.3/lib/repo.js
[16:48] tbranyen: is how i do stuff
[16:48] tbranyen: probably gonna tweak it a bit to actually use prototypes
[16:49] EyePulp: tbranyen: cool - that's really helpful to see.  
[16:49] sirkitree has joined the channel
[16:49] drspin has joined the channel
[16:49] ckknight: EyePulp: so you want something that generates unique objects, then?
[16:49] EyePulp: tbranyen: you a python guy?
[16:49] tbranyen: yeah i really like whats called the revealing module pattern
[16:49] tbranyen: EyePulp: i do some python
[16:49] tbranyen: mainly JS
[16:49] EyePulp: self =)
[16:49] tbranyen: yea
[16:49] rubydiamond_ has joined the channel
[16:49] EyePulp: ckknight: yessir
[16:50] tbranyen: EyePulp: JS was inspired by the Self programming language
[16:50] rubydiamond_: Hi Friends.. I am going to build a app on Twitter stream API .. should I use node.js 
[16:50] tbranyen: if that adds any more credibility to the term
[16:50] tbranyen: heh
[16:50] rubydiamond_: or Rails or Sinatra
[16:50] micheil: tbranyen: you could not create an object there and use 'this' instead
[16:50] vipaca has joined the channel
[16:50] vipaca has joined the channel
[16:50] tjholowaychuk: rubydiamond_:  node would be good for that
[16:50] tbranyen: micheil: say what
[16:50] rubydiamond_: tjholowaychuk: in what way?
[16:50] tjholowaychuk: rubydiamond_: and if you are familiar with Sinatra, check out Express
[16:50] yozgrahame has joined the channel
[16:50] micheil: this.repo = new git.raw.Repo()
[16:50] ckknight: EyePulp: there are two ways to do that: one is through a factory pattern (which tbranyen's is and I recommend), where you create an object explicitly, stick data on it, and return it. the second is to have a function that you call new with which populates its own this object.
[16:51] raidfive has joined the channel
[16:51] micheil: this.repo.open()
[16:51] micheil: etc
[16:51] sdecastelberg has joined the channel
[16:51] drio_ has joined the channel
[16:51] drio_ has left the channel
[16:51] tbranyen: micheil: well yeah thats why i use a new object literal
[16:51] rubydiamond_: tjholowaychuk: what is that .. that provides edge with node?
[16:51] micheil: so, replace the var self = {} with var self = this
[16:51] pyrony has joined the channel
[16:51] tbranyen: and not this
[16:51] ckknight: new is a horrible wart.
[16:51] ckknight: :P
[16:51] micheil: you'd achieve the same thing
[16:51] arpegius has joined the channel
[16:51] EyePulp: ckknight: any examples of the latter you can point to?  I think I understand what you're saying...
[16:52] ckknight: I'll show simple examples of both ways.
[16:52] tjholowaychuk: rubydiamond_: for the reasons you probably even came into this channel for, it's obviously async, so you can parse a stream as its coming in (your twitter feed) etc
[16:52] EyePulp: ckknight: awesome, thank you.
[16:52] tbranyen: micheil: interesting, is that because the modules close off all instances to their own global scope?
[16:52] ckknight: EyePulp: var Point = function(x, y) { return { x: x, y: y }; }; // factory-style, call with either new Point(1, 2) or Point(1, 2)
[16:52] drspin has left the channel
[16:53] tbranyen: why bother doing var Point?
[16:53] mattrobenolt: Has the functionality of stdin/stdout in a child_process changed since 0.4.1?
[16:53] tbranyen: function Point(x, y)
[16:53] drspin has joined the channel
[16:53] drspin has left the channel
[16:53] drspin has joined the channel
[16:53] ckknight: EyePulp: var Point = function(x, y) { this.x = x; this.y = y; }; // pseudo-java-style, must call with new Point(1, 2); Point(1, 2) will break your app.
[16:53] ckknight: tbranyen: because I don't like the function hoisting.
[16:54] breccan has joined the channel
[16:54] tmzt: rubydiamond_: there's stuff you would have to do in metal on ruby that works in node, because node is mostly the same level as metal, with the frameworks being defined over that
[16:54] rubydiamond_: tjholowaychuk: I still get how async is helping here
[16:54] tbranyen: ckknight: oh never heard of the hoisting being an issue
[16:55] ckknight: tbranyen: it's not an issue if you don't duplicate names ever, but if you do, it's an issue. I just try to be stylistically consistent
[16:55] tjholowaychuk: rubydiamond_: im not going to sell you on it, use it or dont
[16:55] EyePulp: ckknight:  I'm leaning towards the factory function - I use it elsewhere I think
[16:55] tmzt: as for twitter, there are probably evented libraries out there that would make it very easy to do in node
[16:55] ckknight: EyePulp: I strongly recommend it.
[16:55] EyePulp: tbranyen's example is such a pattern, correct?
[16:55] ckknight: correct
[16:55] rubydiamond_: tjholowaychuk: hmm . can you please explain.. how is node useful for this.. I have no clear idea
[16:55] EyePulp: nice - very educational.
[16:56] eee_c has joined the channel
[16:56] ckknight: EyePulp: if you do need prototyping (which new provides automatically), here's how you do it:
[16:56] rubydiamond_: tjholowaychuk: I am 99% decided to use node.js.. but I miss that 1% which I am waiting to know ..
[16:56] tmzt: rubydiamond_: look at the code on nodejs.org
[16:56] ckknight: EyePulp: var Point = function(x, y) { var self = Object.create(Point.prototype); self.x = x; self.y = y; return self; }
[16:56] tjholowaychuk: rubydiamond_: you have to evaluate it for yourself
[16:56] tbranyen: rubydiamond_: if thats your attitude, maybe wait on it? node is bleeding edge, you gotta just go with it
[16:57] ckknight: EyePulp: and if you need an immutable type: var Point = function(x, y) { var self = Object.create(Point.prototype); self.x = x; self.y = y; return Object.freeze(self); }
[16:57] bergie has joined the channel
[16:57] pedrobelo has joined the channel
[16:57] EyePulp: whoa... ckknight you totally lost me. =)
[16:57] jamesarosen has joined the channel
[16:57] rubydiamond_: okay guys.. anyways. so ok I have decided to use node.js .. can you please recommend which node libraries would help me here..
[16:57] davglass has joined the channel
[16:57] mraleph: ckknight: if you want _slow_ immutable data type
[16:58] EyePulp: rubydiamond_: I like "fs" a lot.
[16:58] mraleph: with silent immutability
[16:58] ckknight: mraleph: slow?
[16:58] mraleph: slow
[16:58] tmzt: ckknight: there's another pattern I've seen that does something like {if (typeof(this) == 'function') return new Point(); this.x ...}
[16:58] ckknight: no, if you're in strict mode, it's non-silent
[16:58] mraleph: yeah this is true
[16:58] mraleph: but if you are not 
[16:58] perlmonkey2: rubydiamond_: stay away form Express. It's so powerful you could rewrite Facebook in a few seconds. Might want to try a lib that makes it a little less easy to make webpages in order to keep you job from getting boring.
[16:58] tbranyen: oh sick didn't realize v8 honored strict mode
[16:58] mraleph: not completely yet
[16:58] tbranyen: adding that to my list of things to do
[16:59] tbranyen: mraleph: ah :|
[16:59] brianloveswords has joined the channel
[16:59] davglass has left the channel
[16:59] tmzt: rubydiamond_: this is why https://github.com/technoweenie/twitter-node
[16:59] mraleph: strict mode is under active development.
[16:59] ckknight: EyePulp: okay, Javascript doesn't use classical inheritance (as C++, Java, C# do), it instead uses prototypical inheritance (like Lua and some versions of LISP)
[16:59] mhooker has joined the channel
[16:59] vckt has joined the channel
[16:59] c4milo has joined the channel
[16:59] tbranyen: its funny because lua has no concept of a prototype either
[16:59] tbranyen: you have to emulate it
[16:59] tbranyen: well not either
[16:59] ckknight: I've done a lot of lua programming
[16:59] tmzt: twit.on(('tweet', function(tweet) {
[16:59] tmzt:     sys.puts("@" + tweet.user.screen_name + ": " + tweet.text);
[16:59] tmzt:   })
[16:59] tbranyen: ckknight: yeah i've done a little
[16:59] ckknight: you can map it pretty easily, tbranyen
[17:00] tbranyen: yea
[17:00] boaz has joined the channel
[17:00] ckknight: EyePulp: if you want one object to inherit from another, var parent = { hello: "there" }; var child = Object.create(parent); child.hello === "there"
[17:01] zakabird has joined the channel
[17:01] adambeynon has joined the channel
[17:01] mraleph: tbranyen: if you set __index to be a table (instead of function) it kinda behaves like prototype 
[17:01] bradleymeck: i wish the new operator worked on objects as an object.create proxy... but that would just make new even more confounding
[17:01] tbranyen: mraleph: you need metatables for that no?
[17:01] mraleph: yes.
[17:01] ckknight: EyePulp: and in Javascript, Functions have a prototype property on them which you can add properties to, so: var Point = function(x, y) { var self = Object.create(Point.prototype); self.x = x; self.y = y; return self; }; Point.prototype.getMagnitude = function() { return Math.sqrt(this.x*this.x + this.y*this.y); };
[17:01] micheil: no, the var statement doesn't make any different
[17:01] ezmobius has joined the channel
[17:01] creationix has left the channel
[17:01] mraleph: ... if you set __index in a metatable to be a table ...
[17:01] ckknight: tbranyen: correct
[17:02] micheil: v8: var Foo = function(a){ return {a: a}; }; Foo(1);
[17:02] v8bot: micheil: {a:1}
[17:02] micheil: v8: function Foo(a){ return {a: a}; }; Foo(1);
[17:02] v8bot: micheil: {a:1}
[17:02] ckknight: (lua) setmetatable({}, {__index={ hello = "there" }}).hello == "there"
[17:03] EyePulp: ckknight: soo... why couldn't you just do Point.getMagnitude = function(){ // };
[17:03] micheil: however, if you make use of "this" then, calling just Foo(1) would break, compared with new Foo(1)
[17:03] EyePulp: ckknight:  no access to internal Point scope  (this) ?
[17:03] mraleph: Object.create is also slow btw, if I remember correctly.
[17:03] ckknight: EyePulp: you absolutely could, but because the object you create in the Point function inherits from Point.prototype, it won't exist on the returned object. Imagine Point.getMagnitude as a static method.
[17:03] micheil: seriously, with your Point example, easier to do:
[17:03] criswell has joined the channel
[17:04] PhilK has joined the channel
[17:04] micheil: var Point = function(x, y) { this.x = x; this.y = y; };
[17:04] mraleph: argh. I wanted to say: Object.create also produces slow objects
[17:04] ckknight: micheil: and that fails if you call Point(1, 2)
[17:04] tmzt: v8: var P = function(x,y){if (typeof(this) == 'function') return new P(x,y); this.x=x; this.y=y; this.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}}; var t1 = P(1,2); t1.test(); var t2=new P(3,4); t2.test()
[17:04] v8bot: tmzt: TypeError: Cannot call method 'test' of undefined
[17:04] ckknight: mraleph: any benchmarks I can see?
[17:04] micheil: then Point.prototype.getMagnitude = function() { ... }
[17:04] arpegius has joined the channel
[17:04] deedubs: tjholowaychuk: That SIGUSR2 issue in cluster I mentioned yesterday must have been a pebkac.  I reverted back to that technique and everything seems to work great
[17:04] tjholowaychuk: deedubs: weird
[17:04] tbranyen: micheil: or just this.getMag... why bother bringing it outside the constructor?
[17:05] mraleph: ckknight: well. I can make one for you, if so is your desire. wait a sec.
[17:05] ckknight: mraleph: thank you
[17:05] micheil: tbranyen: you could do this.getMag.. as well.
[17:05] tmzt: v8: var P = function(x,y){if (typeof(this) == 'function') return new P(x,y); this.x=x; this.y=y; this.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}}; var t1 = P(1,2); t1.test();
[17:05] v8bot: tmzt: TypeError: Cannot call method 'test' of undefined
[17:05] deedubs: really want to make cluster-log have an option to use mongo capped collections 
[17:05] micheil: tmzt: try: if(this instanceof P)
[17:05] tmzt: v8: var P = function(x,y){if (typeof(this) == 'function') return new P(x,y); this.x=x; this.y=y; this.prototype.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}}; var t1 = P(1,2); t1.test();
[17:05] v8bot: tmzt: TypeError: Cannot set property 'test' of undefined
[17:05] tmzt: hmm
[17:05] tmzt: micheil: ah, that was it
[17:05] tbranyen: need to set the constructor property
[17:05] tbranyen: or something
[17:06] tjholowaychuk: deedubs: haha we talked about using capped collections, but lpush/ltrim is extremely basic
[17:06] F1LT3R has joined the channel
[17:06] tjholowaychuk: deedubs: and works the same
[17:06] micheil: tbranyen: hmm, I forget what the syntax is for that exactly..
[17:06] tjholowaychuk: (basically)
[17:06] tbranyen: micheil: .prototype.constructor = functionref
[17:06] tmzt: v8: var P = function(x,y){if (!(this) instanceof P) return new P(x,y); this.x=x; this.y=y; this.prototype.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}}; var t1 = P(1,2); t1.test();
[17:06] v8bot: tmzt: TypeError: Cannot set property 'test' of undefined
[17:06] tjholowaychuk: I guess this is where something like keys would come in handy
[17:06] ckknight: instanceof is generally a code smell, since you want to be working against interfaces, not necessarily concrete types.
[17:06] tmzt: v8: var P = function(x,y){if (!(this) instanceof P) return new P(x,y); this.x=x; this.y=y; P.prototype.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}}; var t1 = P(1,2); t1.test();
[17:06] v8bot: tmzt: TypeError: Cannot call method 'test' of undefined
[17:06] tjholowaychuk: deedubs: feel free to fork it and tweak it for mongo
[17:06] micheil: v8: var Point = function(a, b) { this.a = a; this.b = b; }; var p = new Point(1,2); p.constructor
[17:07] v8bot: micheil: function (a, b) { this.a = a; th…
[17:07] micheil: or:
[17:07] micheil: v8: var Point = function Point(a, b) { this.a = a; this.b = b; }; var p = new Point(1,2); p.constructor
[17:07] v8bot: micheil: function Point(a, b) { this.a = …
[17:07] tjholowaychuk: deedubs: or we can abstract those out as options like you said
[17:07] tmzt: tjholowaychuk: hey, can you help with a mongoose issue?
[17:07] hornairs has joined the channel
[17:07] zylo has joined the channel
[17:07] tjholowaychuk: tmzt: not really no haha, I dont use it much
[17:07] micheil: same deal there.
[17:07] tjholowaychuk: sorry
[17:07] ezmobius has joined the channel
[17:07] tmzt: going crzy trying to query with ObjectIds
[17:08] tmzt: which works in mongodb-native-client of course
[17:08] deedubs: tjholowaychuk: yeah when I get a chance I'll be all over it.  cluster-log support multiple app servers?
[17:08] tjholowaychuk: deedubs: for multiple we would need a redis key option, or SELECT a different db
[17:08] isaacs has joined the channel
[17:08] tjholowaychuk: deedubs: other than that, chuck it on a different port and you are good to go
[17:09] micheil: tmzt: if (!(this instanceof ReadStream)) return new ReadStream(path, options);
[17:09] micheil: example.
[17:09] bradleymeck: ryah nice last line on the libol links
[17:09] deedubs: tjholowaychuk: I was thinking of adding host key to the artifact
[17:09] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) return new P(x,y); this.x=x; this.y=y;}; P.prototype.test = function(){console.log('this.x: ', this.x, ' this.y: ', this.y);}; var t1 = P(1,2); t1.test();
[17:09] v8bot: tmzt: "this.x: "
[17:09] tjholowaychuk: deedubs: artifact?
[17:09] deedubs: log data
[17:09] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) return new P(x,y); this.x=x; this.y=y;}; P.prototype.test = function(){console.log('this.x: '+ this.x+ ' this.y: '+ this.y);}; var t1 = P(1,2); t1.test();
[17:09] v8bot: tmzt: "this.x: 1 this.y: 2"
[17:09] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) return new P(x,y); this.x=x; this.y=y;}; P.prototype.test = function(){console.log('this.x: '+ this.x+ ' this.y: '+ this.y);}; var t1 = new P(1,2); t1.test();
[17:09] v8bot: tmzt: "this.x: 1 this.y: 2"
[17:10] tmzt: so it works
[17:10] tjholowaychuk: deedubs: we could also dynamically key it based on the server, might be a nice way to avoid collisions and just automatically work for several
[17:10] tmzt: hmm
[17:10] shiawuen has joined the channel
[17:10] dguttman has joined the channel
[17:10] shiawuen_ has joined the channel
[17:10] dguttman has joined the channel
[17:10] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) var this=Object.create(P); this.x=x; this.y=y;}; P.prototype.test = function(){console.log('this.x: '+ this.x+ ' this.y: '+ this.y);}; var t1 = new P(1,2); t1.test();
[17:10] v8bot: tmzt: SyntaxError: Unexpected token this
[17:11] micheil: tmzt: this is a reserved word, iirc.
[17:11] micheil: you can't create a variable named "this"
[17:12] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = function(){console.log('this.x: '+ this.x+ ' this.y: '+ this.y);}; var t1 = new P(1,2); t1.test();
[17:12] v8bot: tmzt: "this.x: 1 this.y: 2"
[17:12] kriszyp has joined the channel
[17:12] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = function(){console.log('this.x: '+ this.x+ ' this.y: '+ this.y);}; var t1 = P(1,2); t1.test();
[17:12] v8bot: tmzt: TypeError: Object #<Object> has no method 'test'
[17:12] deedubs: tjholowaychuk: Yeah adjust this object https://github.com/LearnBoost/cluster-log/blob/master/lib/cluster-log.js#L59 to include identifying info
[17:13] tmzt: v8: var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; return this;} else {var self=this; this.x=x; this.y=y;}};
[17:13] v8bot: tmzt: undefined
[17:13] mikedeboer has joined the channel
[17:13] tjholowaychuk: deedubs: the "items" key just needs to be altered
[17:13] tjholowaychuk: deedubs: but yeah we can store any data we want for the logs
[17:14] deedubs: tjholowaychuk: I guess that's how you'd do it in redis  had my head in mongo mode
[17:14] tmzt: v8: var test = function(){console.log(x,y);}; var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; self.test=test; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = test;
[17:14] v8bot: tmzt: function (){console.log(x,y);}
[17:14] MikhX has joined the channel
[17:14] tjholowaychuk: deedubs: haha :D
[17:14] tmzt: v8: var test = function(){console.log(x,y);}; var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; self.test=test; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = test; var t1 = P(1,2); t1.test();
[17:14] v8bot: tmzt: TypeError: Object #<Object> has no method 'test'
[17:14] tjholowaychuk: deedubs: I love redis for stuff like this, soooo simple
[17:14] tmzt: v8: var test = function(){console.log(x,y);}; var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; self.test=test; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = test; var t1 = P(1,2); console.log(t1._proto_);
[17:14] v8bot: tmzt: undefined
[17:15] qFox has joined the channel
[17:15] chrisdickinson: kind of a straw poll: how do people feel about this sort of method patching to ensure a closed over reference to self? https://gist.github.com/bea28c2107e3ee5dfb15
[17:15] deedubs: tjholowaychuk: Yeah for sure. I guess I'm just used to running on underpowered VPS's and try to avoid extra single purpose daemons 
[17:15] tjholowaychuk: deedubs: ah i see, still, redis is tiny
[17:15] deedubs: tjholowaychuk: yeah
[17:15] chrisdickinson: (would you get angry seeing it in other people's code? would it be confusing?)
[17:17] ckknight: chrisdickinson: I don't see the point.
[17:17] ckknight: chrisdickinson: why not just do var self = this; at the start of your method?
[17:17] deedubs: tjholowaychuk: Maybe I'll just get over it and leave it well enough alone 
[17:17] mraleph: ckknight: here is a benchmark http://jsperf.com/object-create-vs-constructor
[17:17] mraleph: ckknight: I was slightly wrong in my initial claim. 
[17:18] chrisdickinson: ckknight: it's an alternate way to do that. coming from python it feels more comfortable to me to have `self` passed in as a function argument
[17:18] ckknight: mraleph: your use of the descriptors would make it slower, I'm gonna tweak slightly
[17:18] deedubs: tjholowaychuk: Huge fan of the work your doing on cluster  trying to find somewhere to jump in
[17:18] tmzt: v8: var test = function(){console.log(x,y);}; var P = function(x,y){if (!(this instanceof P)) {var self=Object.create(P); self.x=x; self.y=y; self.test=test; return this;} else {var self=this; this.x=x; this.y=y;}}; P.prototype.test = test; var t1 = P(1,2); console.log(t1.__proto__);
[17:18] v8bot: tmzt: {}
[17:18] ckknight: chrisdickinson: you're just passing in this twice, essentially. I think it's esoteric at best.
[17:18] mraleph: ckknight: Object.create does not produce slow objects unless you pass descriptor with non default values.
[17:18] tjholowaychuk: deedubs: appreciated, I think in a few months we will have tonnns of plugins for people
[17:18] ckknight: mraleph: oh, that's what I was referring to.
[17:19] tmzt: chrisdickinson: is that to walk back to require()?
[17:19] tmzt: chrisdickinson: I want to see really isolated environments in web browsers, including no global scope
[17:20] eb4890_ has joined the channel
[17:20] mraleph: ckknight: that's the reason why Object.freeze makes accesses go slower -> it changes descriptors from default values, to non-default.
[17:20] chrisdickinson: tmzt: it's just an alternate way to close over `this`; like "var self  = this;" or "someClosure.bind(this)"
[17:21] ckknight: mraleph: ah, yeah, I wasn't talking about the speed of Object.freeze, I know that's a non-negligible cost.
[17:21] hij1nx has joined the channel
[17:22] bradleymeck: self is a defined thing in the browser, so you have been warned~ wooo~
[17:22] mraleph: ckknight: also you can see that constructing object with Object.create is considerably slower
[17:23] Aikar: break you mean var self O.o?
[17:23] Aikar: bradleymeck: *
[17:23] micheil: :( out of donuts..
[17:23] bradleymeck: window.self === window!
[17:23] chrisdickinson: bradleymeck: did not know!
[17:23] bradleymeck: fear the insanity of dom
[17:23] cloudhead has joined the channel
[17:23] chrisdickinson: bradleymeck++
[17:23] v8bot:  chrisdickinson has given a beer to bradleymeck. bradleymeck now has 1 beers.
[17:23] chrisdickinson: I've seen it used to close over "this", so it seems pretty safe in that context.
[17:24] Aikar: who the hells idea was that, self is like the defacto name used for closures >_> good idea lets make it risk being global!
[17:24] bradleymeck: yea, just a gotcha if in browser since it wont throw the undefined crap
[17:24] tmzt: bradleymeck: this is why I want to have require environments with no global, no dom, no bom
[17:24] tmzt: unless they are require'd explicitly
[17:24] chrisdickinson: (at the very least, I've got some code that uses my auto-add-self-to-args decorator above, and it works fine in IE7+, FF3 and webkits of all sizes and shapes)
[17:25] tmzt: something like <require src="test.js" domroot="#embeddedwidget1" />
[17:25] aheckmann has joined the channel
[17:25] chrisdickinson: that'd be cool.
[17:25] eee_c has joined the channel
[17:26] chrisdickinson: speaking of ideal worlds, it'd be really nice if they'd add a popup "do you want to allow this request to this site" xdomain XHR thing if ACAO headers haven't been sent, instead of explicitly always disallowing it. (similar to how HTML5 geolocation works.)
[17:27] tmzt: chrisdickinson: problem there is they are protecting the other site
[17:27] tmzt: so making it opt in on the client wouldn't make sense
[17:28] ncb000gt has joined the channel
[17:28] chrisdickinson: tmzt: it seems like they're trying to protect the client from accidentally performing actions on the other site, not the other site itself
[17:28] tmzt: or as the other site, accessing cookies, etc.
[17:29] indutny has joined the channel
[17:29] Aikar: setInterval(function(){ $.ajax('http://bank.com/api/transferfunds.vb?to=123456&amt=10'); });
[17:29] Aikar: of course!
[17:30] newy has joined the channel
[17:30] tbranyen: Aikar: :OO
[17:30] tbranyen: >X_X<
[17:31] tmzt: right, but the browsers already have protections against that
[17:31] tbranyen: Aikar: no timeout for the interval, no insurance that the ajax call was successful, infintely stacking
[17:31] tbranyen: haha
[17:31] tbranyen: thats a beautiful script
[17:31] tmzt: at least mozilla had the ability to check origin at the per function level
[17:31] tmzt: so it you modify it, or use something like that it has your restrictions
[17:31] chrisdickinson: ha! well, that. I mean, it'd be great to have a way to (safely) mash up sites without relying on the target site to provide either ACAO or JSONP.
[17:31] tmzt: the concern, I think, is going through dom and setting onclick and other handlers
[17:31] Aikar: tbranyen: forgot timeout yea, but the point was if ajax did allow xhr that could be doable ,and i also stabbed at how insecure alot of bank websites are :P
[17:31] Aria has joined the channel
[17:32] tmzt: where the origin can't be preserved
[17:32] Aikar: http://, sad languages like VB, and not using nonces
[17:32] max_dev has joined the channel
[17:32] Aikar: my banks passwords are case insensitive :(
[17:32] bradleymeck: lol
[17:33] Aikar: accidently messed up case one day and was like errr how did i get logged in
[17:33] ckknight: mraleph: http://jsperf.com/object-create-vs-constructor/2
[17:33] bradleymeck: https + refer + cookie + nonce + case sensitive password , which of these is hilarious
[17:33] Aikar: refer is useless
[17:33] Aikar: you cant rely on it
[17:34] bradleymeck: true, but ill go for more upset than less
[17:34] Croms has joined the channel
[17:34] micheil: mraleph: is Array.prototype.shift usually fast?
[17:34] tschundeee has joined the channel
[17:34] Aikar: cookie is ok if you encrypt the data stored in the cookie
[17:34] arpegius_ has joined the channel
[17:34] Aikar: and decrypt it based on stuff like IP/UA combination
[17:34] chrisdickinson: the only way I could think to do it is to perform something like: create iframe, request the ability to grant permissions from current domain to iframe domain (user popup), and then iframe domain can make xhr requests to originating site.
[17:35] Aikar: there is a cross domain api doable with iframes
[17:35] Aikar: w/o prompting user
[17:35] micheil: mraleph: like, will it actually reallocate a whole new array, or while it just change a few pointers?
[17:35] Aikar: you can call postMessage on an api
[17:35] Aikar: and receive it on the iframe
[17:35] Aikar: FB uses it
[17:35] chrisdickinson: Aikar: yes, that's how you'd pass the token on
[17:35] mraleph: micheil: it's O(1) if you array is not bigger then 2k entries.
[17:35] mraleph: *your
[17:35] micheil: okay
[17:35] balaa has joined the channel
[17:35] micheil: cool.
[17:35] chrisdickinson: Aikar: but the iframe can't make requests to the parent frame's domain.
[17:35] Aikar: chrisdickinson: it can send messages back
[17:36] Aikar: i think?
[17:36] V1 has joined the channel
[17:36] chrisdickinson: Aikar: yes, but that severally limits the effectiveness of using things like Web Workers
[17:36] Muon has left the channel
[17:36] Aikar: well its just a simple message, route the 'work' to the webworker
[17:36] mraleph: ckknight: yeah system manages to cope with default descriptors, but creating is awfully slow :-)
[17:37] chrisdickinson: Aikar: the original domain has to provide the web worker javascript, though
[17:37] chrisdickinson: if you could pass auth from parent frame to child frame, the child frame could provide web workers that could then make XHR requests to the parent domain
[17:37] Aikar: are webworkers blocked by cross domain?
[17:37] chrisdickinson: Aikar: yep
[17:37] Aikar: damn
[17:38] mraleph: micheil: 1k entries on x64
[17:38] chrisdickinson: They can only be used if they're hosted at the exact same domain.
[17:38] micheil: mraleph: okay, interesting.
[17:38] bcelenza has joined the channel
[17:38] Aikar: so run the webworker in the iframe
[17:39] robertkeizer has joined the channel
[17:39] Aikar: client adds <script> tag that writes an iframe and opens up message system, any work can be sent as a message to the iframe
[17:39] patzak has joined the channel
[17:39] Aikar: then the iframe spawns WW and divies work as needed
[17:39] mraleph: micheil: it depends on the total size of the backing store --- if it larger than (8k - small constant) bytes it goes to large object space and there we can't apply the same trick we use in other spaces to make shift faster. 
[17:40] chrisdickinson: Aikar: that's what I'd like to do, ultimately
[17:40] micheil: okay, hmm, I don't think I'm going to hit that issue
[17:40] chrisdickinson: buuuut, in my case (a spidering service), those web workers can't make XHR requests to the site you're trying to spider.
[17:40] Aikar: and since the client is adding a script tag back to your domain, you can fully control al lthe iframe and message passing code
[17:40] mraleph: total size of the array in bytes is (length + 2)*SizeOfPointer
[17:40] Aikar: chrisdickinson: oh right
[17:40] mraleph: *total size of the array backing store
[17:40] V1: q: if I send a string to a TCP socket, does node automagically convert it to a Buffer? Or is that something that I should take care of?
[17:40] Croms_ has joined the channel
[17:41] chrisdickinson: Aikar: basically it'd be cool if you could make a "web worker" hosting service that could potentially receive the same permissions as any target site
[17:41] coreb has joined the channel
[17:41] chrisdickinson: since web workers are prevented from making changes to the DOM or anything else, it seems like it'd be relatively safe.
[17:41] Aikar: are you trying tp provide this where its no load on your own server
[17:42] losing has joined the channel
[17:42] Aikar: cause you could write a small drop file they need to drop on their site that connects over Websocket, downloads the webworker source (inside the WW) and then eval it.
[17:42] gf3 has joined the channel
[17:42] gf3: tjholowaychuk: holla
[17:42] Aikar: however... firefox has a stupid bug i filed a year ago where WS isnt usable inside of WW :/
[17:42] tjholowaychuk: gf3: yo
[17:42] newy_ has joined the channel
[17:42] chrisdickinson: Aikar: ):
[17:42] coreb: what do you guys usually use node.js for?
[17:43] tmzt: coreb: writing webservers
[17:43] tjholowaychuk: gf3: how do you suppress the irc log output?
[17:43] Aikar: i noticed a big performance increase putting the websocket inside of the webworker on chrome, but it didnt work for FF
[17:43] jmar777 has joined the channel
[17:43] gf3: tjholowaychuk: for Jerk/IRC-js?
[17:43] chrisdickinson: Aikar: were you using socket.io? or plain websockets?
[17:43] Aikar: plain websockets
[17:43] tjholowaychuk: gf3: yeah
[17:43] Aikar: this was before i found node
[17:43] tjholowaychuk: I think that's the one
[17:43] chrisdickinson: ah. there goes my only theory (:
[17:43] Aikar: i wrote the server in PHP lol
[17:44] sdecastelberg has joined the channel
[17:44] V1: Aikar: Did the websocket in work @ FF work, but no performance improvements or did it just stop working
[17:44] gf3: tjholowaychuk: in the options: log: false
[17:44] qFxo has joined the channel
[17:44] tjholowaychuk: gf3: thanks
[17:44] mhooker has joined the channel
[17:45] Aikar: V1: it said variable not defined WebSocket or so
[17:45] gf3: tjholowaychuk: np
[17:45] mjr_ has joined the channel
[17:45] coreb: tmzt: to serve only specific stuff, or to server dynamic sites with template engines and so on?
[17:45] Aikar: so the full window object didnt get copied to webworker
[17:45] tmzt: coreb: anything, if you want template engines use express
[17:45] gf3: tjholowaychuk: any luck on the Stylus or express-resource stuff?
[17:45] V1: Aikar: That's because Firefox doesn't support WebSockets :$? Or did you enable them in the about:config
[17:45] Aikar: this was before they disabled em
[17:45] Aikar: like i said ,a year ago :P
[17:45] tjholowaychuk: gf3: havent had much time yet
[17:45] tmzt: Aikar: I don't think the window object is supposed to be
[17:46] Aikar: well like 8 mo
[17:46] tmzt: there's a worker equivalent
[17:46] tbranyen: V1: websockets were enabled by default for me in 4
[17:46] tbranyen: kind of weird
[17:46] Aikar: not suppose to be fully copied yeah but WebSockets should be exposed inside of a WebWorker
[17:46] gf3: tjholowaychuk: cool, no worries
[17:46] coreb: both chrome and ff disabled websockets?
[17:46] Aikar: not chrome
[17:46] tbranyen: coreb: what no
[17:46] Aikar: chromes smart
[17:46] Aikar: theres nothing wrong with websockets
[17:46] Aikar: mozilla execs are just morons
[17:46] V1: tbranyen: That's odd indeed, but if you already enabled it in FF beta's it would still be enabled in the final release
[17:46] Aikar: and opera too i guess
[17:46] tbranyen: V1: i'm starting to think it might be an arch linux thing
[17:46] tbranyen: since i grabbed it from their repos
[17:46] V1: And IE Aikar  ;)
[17:46] micheil: Aikar: browsers that do not support or enable WebSockets MUST NOT make available the WebSocket object
[17:46] coreb: opers didn't disable?
[17:46] tbranyen: opera totally did too
[17:46] tbranyen: yea
[17:47] Aikar: V1: ie never had it :P
[17:47] indutny1 has joined the channel
[17:47] Aikar: micheil: im talking about BEFORE they disabled it, they supported websocket :P
[17:47] V1: Aikar: That's why they are morons :)
[17:47] sth: no one really cares what opera does though
[17:47] tbranyen: sth: i use opera full time for browsing
[17:47] tbranyen: dev in chrome tho
[17:47] micheil: Aikar: also, it been disabled in a few other browsers too. notedly, the only reason chrome won't disable is because they think they can update their entire userbase overnight
[17:47] sth: I don't know anyone who uses opera fulltime
[17:47] coreb: tmzt: express, a further abstraction over the already abstract node.js? ;)
[17:47] micheil: sth: I do.
[17:47] Aikar: id like to give google credit and say they wont disable it because they know the article is false
[17:48] tbranyen: i really dig how customizable and fast opera is on linux
[17:48] tbranyen: looks pretty good
[17:48] Aikar: and they dont blindly accept false security warnings
[17:48] tjholowaychuk: coreb: it doesnt really abstract... you still use the regular req/res
[17:48] Aikar: unlike google sadly :(
[17:48] tmzt: coreb: a useful abstractions, not sure why node.js isn't abstract
[17:48] tjholowaychuk: just adds more
[17:48] Aikar: err
[17:48] Aikar: unlike mozilla
[17:48] tmzt: er yeah
[17:48] coreb: tmzt: I stated that node.js seems pretty abstract
[17:49] tmzt: does spdy have bidirectional communication?
[17:49] tmzt: it's on it's own port?
[17:49] tbranyen: sth: http://sharefilewith.me/u/816f23.png
[17:49] tmzt: coreb: in what sense? more like barebones, you really do write a webserver
[17:49] stevereed_ has joined the channel
[17:50] coreb: what ides do you guys use, for code completion with javascript and if possible node.js support?
[17:50] tbranyen: ctrl n
[17:50] Aikar: komodo is the only one working on node.js support i believe
[17:50] gf3: heh
[17:50] sdecastelberg has joined the channel
[17:50] Aikar: the current trunk source has some node support
[17:50] gf3: Aikar: NO U
[17:50] sth: that almost looks nice :)
[17:50] tbranyen: sth: haha thanks
[17:50] coreb: Aikar: and that's not komodo edit, I presume
[17:50] pedrobelo has joined the channel
[17:50] Aikar: yes edit
[17:50] Aikar: the free edition :P
[17:50] herbySk has joined the channel
[17:50] coreb: tmzt: the event model abstracts a lot
[17:51] Aikar: but youd have to compile it yourself to get latest trunk
[17:51] coreb: Aikar: sounds nice, tried it?
[17:51] Aikar: nah i gave up after i couldnt get mozilla to compile
[17:51] Aikar: i just use komodo edit 6.1
[17:51] tmzt: opera has an interesting ui now
[17:52] Max-Might has joined the channel
[17:52] tbranyen: tmzt: well i've customized that
[17:52] coreb: tmzt: firefox stole a lot from opera
[17:52] tmzt: coreb: if you want something useful and usable now use express
[17:52] tmzt: I mean the "Secure"
[17:52] tmzt: the logo on the far left, no menu
[17:52] tmzt: (but this is OSX?)
[17:52] Country has joined the channel
[17:52] tbranyen: tmzt: arch linux
[17:53] tmzt: what wm
[17:53] tbranyen: openbox
[17:53] tbranyen: er
[17:53] tbranyen: xfce
[17:53] tbranyen: with openbox as the decorator
[17:53] qFxo has joined the channel
[17:53] bingomanatee has joined the channel
[17:53] stephank has joined the channel
[17:54] harth has joined the channel
[17:54] chester has joined the channel
[17:54] __tosh has joined the channel
[17:54] robertkeizer: Ho hum..
[17:55] robertkeizer: What do people think? https://github.com/robertkeizer/linux-util
[17:55] tmzt: bingomanatee: any idea why ObjectId queries in mongoose won't work?
[17:55] qF0x has joined the channel
[17:55] bingomanatee: tmzt: can you code the context on pastebin?
[17:55] tmzt: or what the syntax is? the problem is I'm storing the objectid of the current user in req.session on redis which is converting it to a string
[17:56] balaa has joined the channel
[17:56] liquidproof has joined the channel
[17:56] _sh0x has joined the channel
[17:56] bingomanatee: yea - in my experience, in mongoose string hashes and objectId objects are interchangable. Pastebin what you have. 
[17:56] newy_ has joined the channel
[17:57] tmzt: https://gist.github.com/906150
[17:57] tbranyen: robertkeizer: that looks p dope
[17:57] tmzt: doc is null but I can find the same thing from mongo cli
[17:57] tbranyen: robertkeizer: i've been slowly replacing my system scripts with node this could make some tasks much easier
[17:57] qFox has joined the channel
[17:57] broofa_ has joined the channel
[17:58] robertkeizer: tbranyen: Great. I'm still working away, only started on it yesterday.
[17:58] robertkeizer: Just wanted to know if there was any other interest in something like this.
[17:59] tmzt: jsshell?
[17:59] tmzt: tab completion and everything
[18:00] tmzt: hey, you could probably rewrite upstart/systemd, any good dbus bindings?
[18:00] tmzt: I assume palm has some
[18:00] hij1nx has joined the channel
[18:01] deepthawtz has joined the channel
[18:01] samuelkadolph has joined the channel
[18:01] tmzt: anybody though of doing a ui similar to flash but with node.js js instead of as3?
[18:01] tmzt: similar to flex I mean
[18:02] tmzt: could be interesting on mobile for cross platform without html
[18:02] eee_c has joined the channel
[18:02] meandi has joined the channel
[18:03] bradleymeck: tmzt there are a couple of started projects out there, but none complete, i lack the time / money to pull out a full on one
[18:03] deedubs: hm fs needs mkdir_p
[18:03] mikedeboer has joined the channel
[18:03] nsfx has joined the channel
[18:03] tmzt: deedubs: fs('path/path/path').mkdirs()
[18:03] tmzt: not a supported syntax of course :)
[18:04] sstephenson: deedubs: i think there's an open pull request for that
[18:05] arpegius has joined the channel
[18:05] sstephenson: https://github.com/joyent/node/pull/846
[18:05] Draggor: what all do I have to remove to get rid of old npm?
[18:05] malkomalko has joined the channel
[18:06] pelumini has joined the channel
[18:06] tjholowaychuk: deedubs: yeah its kinda annoying reinventing that all over, im sure there is a mod tho
[18:07] kriszyp has joined the channel
[18:08] qFox has joined the channel
[18:09] wilmoore has joined the channel
[18:09] V1:  tjholowaychuk cluster doesn't do any exception handling right? Or did i miss that while skimming through the source
[18:10] tjholowaychuk: V1: by default it reports the exception to master, and plugins can report on that, but no the workers simply die
[18:10] Buttons840 has joined the channel
[18:10] dahankzter has joined the channel
[18:10] tjholowaychuk: V1: which is usually fine, but if you register uncaughtException then it wont touch the event
[18:11] V1: hmzz, ok thanks for info tjholowaychuk 
[18:11] mytrile has joined the channel
[18:11] Me1000 has joined the channel
[18:14] tmzt: bingomanatee: I can't find any examples of using objectid with mongoose, $oid doesn't work
[18:14] patcito has joined the channel
[18:15] langworthy has joined the channel
[18:16] johnmclear1 has joined the channel
[18:16] deedubs: sstephenson: Yeah hmm can't say I'm a fan of hiding mkdir_p behind mkdir
[18:16] johnmclear1: Hey, let's say I have a folder http://localhost/secure that I want to secure, I want to authenticate against a mysql database, does anyknow of a good guide or some good terms for me to search for please?  Thanks :)
[18:17] reid has joined the channel
[18:17] deedubs: johnmclear1: connect-auth
[18:17] sstephenson: deedubs: either way, it'd be nice to have in core
[18:17] deedubs: yeah
[18:18] bradleymeck: dlmopen in core would blow my mind... but alas
[18:18] deedubs: johnmclear1: https://github.com/ciaranj/connect-auth/wiki/creating-a-form-based-strategy
[18:18] edw has joined the channel
[18:19] johnmclear1: ta deedubs
[18:19] johnmclear1: will peep it
[18:20] robertkeizer: Ho hum.. writing an interface for sysctl is a pain because of the recursion.. ah well.
[18:21] Buttons840: so i see that hello world is "console.log('Hello World.');"   i'm guessing "console" is just always there, where can i find docs on what other things are "just there" (sorry, not familiar with correct terminology)
[18:23] matschaffer has joined the channel
[18:23] pauls has joined the channel
[18:23] gukov has joined the channel
[18:24] ckknight: Buttons840: the terminology would probably be "available in node.js"
[18:24] djazz has joined the channel
[18:25] manukall has joined the channel
[18:25] robertkeizer: Buttons840: See the "docs" on the main page. The API is very detailed.
[18:25] Buttons840: maybe i should just start by asking if "console" is documented somewhere?
[18:25] Buttons840: i couldn't find the "console" docs
[18:27] nsfx: Is there an explicit include path for include() and require() ?
[18:27] muhqu has joined the channel
[18:27] stagas: Buttons840: console is a firebug thing, so it's here http://getfirebug.com/wiki/index.php/Console_API
[18:27] mcantelon has joined the channel
[18:27] manukall: hey, i'm having trouble getting npm and node to play together. npm install the modules into a directory 'node_modules' inside the current directory,  which is not part of nodes require paths.
[18:27] isaacs: manukall: it is if you're in teh current directory :)
[18:28] isaacs: manukall: you have node 0.4 or higher, yes?
[18:28] djazz has joined the channel
[18:28] manukall: isaacs, if i run node and type require.paths, it's not part of the array returned
[18:28] isaacs: manukall: require.paths is a liar.
[18:28] isaacs: manukall: use require.resolve("the thing you installed")
[18:29] isaacs: manukall: it'll work, i promise :)
[18:29] Buttons840: stagas: ok, i didn't know i was using firebug; i think i must misunderstand what node is, i think of it as a language when maybe it's more of a library?
[18:29] dguttman_ has joined the channel
[18:29] isaacs: require.paths is just the list of paths that EVERY module sees.  module.paths is the list of lookup paths that just this module sees.
[18:29] highermath_away has joined the channel
[18:29] highermath_away has joined the channel
[18:29] isaacs: the new system allows for much better localized deps
[18:29] bingomanatee: tmzt: I barely understand what you are trying to do - and failing - for instance, if I follow you, if I do a "foreign key" kind of thing and embed an object id as a field in the schema, I think you can do a search based on a string value OID. However - please assemble a simple example of what you are talking about. I can't help you with an abstract principle. 
[18:29] tmzt: console also works in node.js
[18:30] sdecastelberg has joined the channel
[18:30] bingomanatee: ACTION <3 console
[18:30] manukall: isaacs, it really does work. embarrasing :)
[18:30] isaacs: :)
[18:30] isaacs: it's ok.  it changed very recently
[18:30] bingomanatee: oh console, my console
[18:30] isaacs: manukall: please play around with the new approach of using local installs, and tell us how it makes you feel.
[18:30] bradleymeck has joined the channel
[18:31] tmzt: bingomanatee: the gist is not enough? https://gist.github.com/906150   the problem is profile._id is a real ObjectId() from mongodb_native, but req.session.user_id is a string
[18:31] tmzt: it won't retrieve a matching (and verified to be there in mongo cli) object in a collection using the string in the query
[18:31] tmzt: it returns null instead (doc: null)
[18:32] bingomanatee: sorry ddnt see that 
[18:32] bingomanatee: one sec
[18:32] tmzt: yes, I can do a search for string and that will work but it won't scale as well because objectid is indexed (or will be)
[18:32] manukall: isaacs, it's the first time for me to try node at all, so i won't be able to tell if it's better than before, but it sounds like a good idea to have all your things in one place. kind of like bundlers gemsets, right?
[18:32] pdelgallego has joined the channel
[18:32] johnmclear1: anyone any recommendation for how to store passwords in a database?
[18:32] tmzt: it's also different between mongodb-native, which my update apis still use, and the other stuff
[18:32] isaacs: manukall: yes, we try to steal just the good parts of every platform.
[18:32] johnmclear1: like has anyone written an easy salt module or something? :)
[18:32] johnmclear1: < trying to take shortcuts :P
[18:32] tmzt: johnmclear1: apparently, bcrypt there was a fun discussion on that this morning
[18:33] bingomanatee: tmnt: I'll need the schema definition for this collection and a dump from the console of a few sections. 
[18:33] tmzt: manukall: it's good to use git submodules
[18:33] isaacs: tmzt: you know that ain't true.
[18:33] rubydiamond_: Buy Balsamiq or no 
[18:33] isaacs: tmzt: it's good until you want to update them.
[18:33] manukall: rvm i was talking about :)
[18:34] isaacs: tmzt: if anyone can tell me a good way to handle that in a non-crap way, i'd be totally indebted to them.
[18:35] robertkeizer: Woot! Now linux.sysctl() works. All indexed arrays.. so getting net.ipv4.conf.all.forwarding is linux.sysctl()['net']['ipv4']['conf']['all']['forwarding']
[18:35] arpegius has joined the channel
[18:35] tmzt: isaacs: git submodule init --update was working, then it broke, then I upgraded git and it worked again
[18:35] tbranyen: robertkeizer: lol
[18:35] tbranyen: thats a mouth full
[18:35] tmzt: there's also a recursive option now
[18:35] mike_miller has joined the channel
[18:35] tbranyen: robertkeizer: maybe use getters for that
[18:35] peterwagenet has joined the channel
[18:35] tbranyen: robertkeizer: linux.sysctl().net.ipv4.conf.all.forwarding
[18:35] isaacs: tmzt: i though ti twas git submodule update --init?
[18:36] Buttons840: in python you can use dir to inspect what is defined in a namespace, anything like that in node/js?
[18:36] peterwagenet: does anyone know how to expand a tilde in a path
[18:36] peterwagenet: from within node
[18:36] peterwagenet: to get the user's home directory
[18:36] robertkeizer: tbrayen: I thought about that.. I'm going to change all the functions I've created to that at some point...
[18:36] tbranyen: Buttons840: console.dir(
[18:36] stevereed has joined the channel
[18:36] Buttons840: console.dir() -> undefined
[18:36] matjas has joined the channel
[18:37] mike5w3c has joined the channel
[18:37] tbranyen: > console.dir({'lol':'hi'})
[18:37] tbranyen: { lol: 'hi' }
[18:37] tbranyen: worksforme wontfix
[18:37] robertkeizer: tbranyen: I was also thinking jquery style selectors.. such as linux.sysctl( ".forwarding") to show all the forwarding options..
[18:37] tbranyen: robertkeizer: neat in theory annoying practically
[18:37] robertkeizer: Yeah.. 
[18:37] tbranyen: since those aren't selectors
[18:38] robertkeizer: And implementing actual selectors is a pain.
[18:38] tbranyen: heh
[18:38] robertkeizer: Could use a regex for that though :) .. regex select what values you want.
[18:38] robertkeizer: Way to complex for general use though..
[18:39] Buttons840: tbranyen: ok, so how would i list console with a dir command?  is there a reference to the global or current namespace?  from my new-comer perspective it seems console comes from firebug (aka, some random unrelated application), are there other random apps which are an important part of node?
[18:39] johnmclear1: npm install bcrypt, that's my work done for today :P awesome! thanks again guys
[18:39] robertkeizer: linux.sysctl( RegExp( "(forwarding|mem)" ) );
[18:39] Buttons840: i mean, in looking for console documentation, and finding nothing in the node docs, looking at firebug never really came to mind
[18:40] Buttons840: i'm just trying to learn how to learn, and right now i don't understand where to find more information
[18:40] robertkeizer: Buttons840: No, read the docs. Console is a global in node.
[18:41] edw: I just wrote a CPS forEach. Is there a library that already contains this sort of thing?
[18:41] robertkeizer: Buttons840: Just like process is.
[18:41] bingomanatee: tmnt: unlike Native, mongoose seems to use strings and objectIds interchangably - so I don't think that is your problem. Is this part of a public git that I can look at?
[18:42] Miljar has left the channel
[18:42] cellis has joined the channel
[18:43] cellis: where does npm install express?
[18:43] Buttons840: robertkeizer: i've done a search for "console" in the "Globals" section of the docs and console.log appears twice in code examples, but there is no mention of what console.log does, or any other its other methods like console.warn
[18:43] isaacs: cellis: npm faq
[18:43] peterwagenet has left the channel
[18:43] isaacs: cellis: what version of npm?
[18:43] cellis: uhh
[18:43] cellis: latest
[18:43] jetienne: i want a tool which relaunch my script everytime a file is modified in a directory. what are the alternatives ?
[18:43] robertkeizer: Buttons840: Try this: var sys=require('sys'); console.log( sys.inspect( console ) );
[18:44] cellis: isaacs: thanks
[18:44] robertkeizer: Buttons840: sys.inspect can inspect anything in node... such as a function which shows you methods and variables that are within.
[18:44] cellis: checking faq
[18:44] isaacs: cellis: npm -v will tell you the version
[18:44] samuelkadolph has left the channel
[18:44] cellis: 0.2.19
[18:44] isaacs: i ask because this changed with the not-quite-fully-released-yet 1.0 version
[18:45] isaacs: 0.2.19 is nowhere near latest.
[18:45] cellis: oh
[18:45] isaacs: 0.3.18 is latest stable, 1.0.1rc1 is the current rc
[18:45] cellis: i guess i should update
[18:45] Croms has joined the channel
[18:45] cellis: ;)
[18:45] piscisaureus: ryah_: are there any node.js example servers that do support preforking right now?
[18:45] robertkeizer: tbrayen: I would implment getters for all the functions in linux-util, but I am not sure how to execute code when that is called.. right now I'm relying on a function being called..
[18:46] baudehlo1: piscisaureus: you mean like multi-node?
[18:46] mattrobenolt has joined the channel
[18:46] piscisaureus: ACTION googles multi-node
[18:47] baudehlo1: but the recommended module is "cluster" - google for "node cluster" instead.
[18:47] evilhackerdude has joined the channel
[18:48] saschagehlich has joined the channel
[18:49] jmar777 has joined the channel
[18:51] MattDiPasquale has joined the channel
[18:51] burny has joined the channel
[18:51] V1: tjholowaychuk: I see that the "plugins" for cluster only receive a reference to the "master" but is there way to get access to the worker object as well? I want the plugin that I'm working on to close the worker on a certain command
[18:51] tjholowaychuk: V1: you have to specify that the plugin will operate in the worker(s), view the stats plugin
[18:51] jelveh has joined the channel
[18:51] V1: tjholowaychuk: tj
[18:52] tjholowaychuk: V1: it can cause undesired results if it were the default
[18:52] tjholowaychuk: s/can/would/
[18:53] tmzt: Buttons840: what? the idea for console comes from firebug
[18:53] tmzt: node.js is a javascript interperter and a small core API built into it
[18:53] ryah_: piscisaureus: yes - see tjholowaychuk's cluster
[18:53] tbranyen: tmzt: what are you talking about bro
[18:54] tmzt: most of which deals with networking, but also filesystem access, standard input/output
[18:54] tbranyen: tmzt: get some sleep :)
[18:54] ryah_: piscisaureus: we *must* supprot it
[18:54] ryah_: even if it means using v8 isolates in windows..
[18:54] piscisaureus: ryah_: I think I will do it differently
[18:54] piscisaureus: use select in a thread
[18:55] tmzt: I thought I was answering a question
[18:55] ryah_: piscisaureus: i don't know... 
[18:55] astropirate has joined the channel
[18:55] bingomanatee has joined the channel
[18:55] piscisaureus: We will also need to support blocking pipe reads because applications might redirect stdio to a blocking handle
[18:56] ryah_: is that even possible in windows?
[18:56] piscisaureus: ryah_: what is?
[18:56] ryah_: redirecting
[18:56] johnmclear1 has left the channel
[18:56] piscisaureus: yeah
[18:57] Epeli has joined the channel
[18:57] piscisaureus: like on linux, e.g. node --help | more
[18:57] Buttons840: tmzt: i see, any suggested sources for learning about these standard javascript modules?
[18:58] eb4890 has joined the channel
[18:58] ryah_: well oio_handle needs to test if it isatty and use the appropritate method
[18:58] ryah_: on linux we have to switch implmentation too
[18:58] tmzt: there's no dir, not sure what kind of introspection support there is on the level you want
[18:58] tmzt: just go to nodejs.org and click v0.4 api docs in the top left
[18:58] baudehlo1: Buttons840: for the core JS API I use: http://www.webreference.com/javascript/reference/core_ref/contents.html
[18:59] MarkMenard has joined the channel
[18:59] baudehlo1: for the node specific stuff, see what tmzt said.
[18:59] ryah_: piscisaureus: that's what this is about: https://github.com/joyent/node/blob/bfa9db9dd6a13af475f256bb1d95118ac38f8590/src/node.js#L200-211
[18:59] Buttons840: tmzt: i'm pretty sure the node does say almost nothing about console, just use it in a few unrelated code examples
[18:59] piscisaureus: ryah_: can we move that part into liboio? seems better to me
[18:59] ryah_: yes, i'd like too
[18:59] tmzt: right, because it's based on firebug, so you read the wiki on that
[18:59] tmzt: if you need something more advanced try sys.inspect
[19:00] jacobolus has joined the channel
[19:00] ryah_: piscisaureus: that reads: use eio thread pool for writing to output if someone redirects to file
[19:00] Max-Might has joined the channel
[19:00] piscisaureus: ryah_: i know
[19:01] Buttons840: what is special about firebug that its modules can be part of node without being documented?
[19:01] piscisaureus: {o i o}
[19:01] piscisaureus: { OiO }
[19:02] ryah_: oIo
[19:02] evilhackerdude: cheers
[19:02] ryah_: now it's getting obscene 
[19:02] bingomanatee: Buttons: in node, we believe that if you have to be told how things work, you're simply not good enough for node. 
[19:02] piscisaureus: hehehe
[19:02] bingomanatee: Node is documented thorugh inference.
[19:03] bingomanatee: And hand signals. 
[19:03] piscisaureus: oÍo
[19:03] ryah_: bingomanatee: not sure if you're joking - but no. we like documentation.
[19:03] evilhackerdude: i want to pipe ipython/irb/etc through websockets to browsers. it already works. it's just that the REPLs know that it's not a real tty connected to them and that causes some strange behaviour. should i spawn the processes via tty.open instead?
[19:04] tmzt: bingomanatee: well, I cleared the collection and it appears to be working
[19:04] bingomanatee: <-- is joking
[19:04] tmzt: but it's definately using a string
[19:04] creationix has joined the channel
[19:04] creationix: hey, what's the status of node on windows
[19:04] bingomanatee: cool. 
[19:04] tmzt: evilhackerdude: and use a pty?
[19:04] creationix: I want to build v0.4.5 for windows, is it hard? are there binaries out there?
[19:05] mscdex: cygwin or mingw?
[19:05] arpegius_ has joined the channel
[19:05] creationix: whichever works better
[19:05] creationix: I did cygwin in the past
[19:05] evilhackerdude: tmzt: don't know what that is. do you mean emulate a pseudo terminal?
[19:06] mikegerwitz: creationix: http://node-js.prcn.co.cc/ has binaries for 0.4.5. I ahven't personally used it, but coworkers do
[19:06] mscdex: iirc node builds on cygwin just fine, for mingw status you'd probably have to ask piscisaureus 
[19:06] stagas: creationix: cygwin will compile just follow the steps on the wiki
[19:06] tk has joined the channel
[19:06] baudehlo1: though presumably cygwin has to use select() and not I/O completion ports?
[19:07] mscdex: ACTION shakes a fist at Windows
[19:07] creationix: performance doesn't matter, this is for bash style scripting
[19:07] creationix: cross platform
[19:07] creationix: I'd rather use node than python since node is part of out platform
[19:07] ryah_: creationix: cygwin is most complete
[19:07] ryah_: creationix: shouldn't be hard to build
[19:07] bingomanatee: Lets just say that the TOTALLY AWESOME features of Mongoose that makes me love it all over again were some of the best parts of it and I just found out about them :D
[19:07] pifantastic_ has joined the channel
[19:08] tmzt: creationix: rob is still independent?
[19:08] creationix: tmzt: rob?
[19:08] SubStack: tbranyen: (from 11 hours ago) 1. you can use npm modules in the browser 2. you can write your browser-side code the node way
[19:08] tmzt: rwhitby
[19:09] creationix: tmzt: yes
[19:09] SubStack: I haven't even used browserify for validation yet
[19:09] flippyhead has joined the channel
[19:09] tmzt: I thought he was working on the same lines
[19:09] tmzt: along the same lines, I mean
[19:09] bradleymeck: creationix if you follow the steps i have 4.3 working, dont think anything would break moving to 4.5
[19:10] creationix: there is no malware in http://node-js.prcn.co.cc/ is there
[19:10] creationix: that would be a lot easier than setting up a windows vm just to build
[19:11] mikegerwitz: creationix: None that we are aware of. I can't say with 100% certainty, but nothing has led us to beleive so in the months they've been using it
[19:12] tbranyen: SubStack: you can use a very small subset of npm modules
[19:12] zcopley: Can someone help me figure out how to get node to see packages installed by npm?
[19:12] maushu has joined the channel
[19:12] tbranyen: also SubStack, no build process either
[19:12] creationix: oh, I still have my XP vm from the last time I built node with cygwin
[19:12] creationix: I'll do that, thanks for the help everyone
[19:12] tbranyen: so that means you're getting hammered with dns requests, unminifed script downloads, etc.
[19:12] tbranyen: unless you have some middleware to take care of that
[19:13] yozgrahame has joined the channel
[19:13] SubStack: what?
[19:13] b_erb has joined the channel
[19:13] zcopley: I'm trying to use xml2js and I can't figure out how to get node to load it via require()
[19:13] b_erb has left the channel
[19:13] jpick has joined the channel
[19:13] SubStack: tbranyen: you're thinking of the stupid way where you make an xhr for every require()
[19:13] tbranyen: SubStack: heh that reply was from 11hours ago, but i'm assuming you were talking about why you would want to share JS between server/client
[19:13] zcopley: npm says it's installed when I do npm ls
[19:13] tbranyen: SubStack: oh i'm thinking of the require.js way heh
[19:13] SubStack: yes, been offline
[19:14] SubStack: also you can throw libraries like jquery up on npm and then bundle them at runtime
[19:14] SubStack: so you don't need to worry about CDNs or copying files around
[19:15] mytrile has joined the channel
[19:16] Draggor: zcopley: https://github.com/isaacs/npm/blob/master/doc/faq.md#readme look at the I installed something globally, but I can't require() it
[19:16] Draggor: and right below it
[19:16] ben_alman has joined the channel
[19:17] dmcquay_ has joined the channel
[19:17] pr2012 has joined the channel
[19:17] dmcquay_ has joined the channel
[19:18] pr2012: anyone have any recommended resources/examples for express2+connect-auth?
[19:19] davidvanleeuwen has joined the channel
[19:19] deedubs: pr2012: its different than express 1?
[19:20] pr2012: appears so, at least m seeing issues upgrading so far
[19:20] piscisaureus: ryah_: on windows, you'd need to tell child_process.spawn that it is spawning node, and you must tell the child process that is was spawned by node. Then we need a lightweight protocol that's applied on top of the child's stdin so the child can distinguish between normal data and DuplicateHandle/WSADuplicateHandle data.
[19:21] Vertice has joined the channel
[19:21] creationix has left the channel
[19:21] pr2012: certainly the /ciaranj/connect-auth examples aren't working with express2+0.4+
[19:21] insin has joined the channel
[19:22] isaacs: Draggor: npm root -g
[19:22] mscdex: node.js rules!
[19:22] maushu: piscisaureus, woah, complicated.
[19:22] isaacs: Draggor: it'll probably tell you that it's not in teh NODE_PATH environ
[19:22] isaacs: Draggor: so fix that :)
[19:23] Draggor: isaacs: say I botched an old npm install, can I just blow away the /usr/local/lib/node/ dir?
[19:23] ryah_: piscisaureus: but even then we can't associate the listenign socket with an iocp
[19:23] deedubs has joined the channel
[19:23] isaacs: Draggor: sure
[19:24] RusAlex has joined the channel
[19:24] isaacs: Draggor: i mean, it's your computer, you can do whatever you want :)
[19:24] dguttman has joined the channel
[19:24] dguttman has joined the channel
[19:24] ZeroCoder has joined the channel
[19:24] isaacs: but yes, that'll remove stuff.  it may be better to install npm and then rm everything it sees
[19:25] MatthewS has joined the channel
[19:26] losing has joined the channel
[19:27] deedubs has joined the channel
[19:27] andi5 has joined the channel
[19:28] kersny has joined the channel
[19:29] kersny has left the channel
[19:29] dylang has joined the channel
[19:29] bentkus has joined the channel
[19:29] nibblebot has joined the channel
[19:30] timcosgrove has joined the channel
[19:31] tprice has joined the channel
[19:31] timcosgrove has left the channel
[19:31] Draggor: isaacs: Am I just failing at reading?  I want to set up npm 1.0, and then have it install all my modules in say $HOME/.node_modules/
[19:32] isaacs: Draggor: 1.0 just takes a prefix, and installs stuff in prefix/lib/node_modules when they're installed globally, or ./node_modules if they're installed locally
[19:33] zcopley: Oh, so I wasn't completely insane http://stackoverflow.com/questions/5047542/node-js-cannot-find-module-xml2js
[19:33] isaacs: Draggor: you can ln -s prefix/lib/node_modules to ~/.node_modules if you really really wanna (the "its your computer dwtfyw" principle) or you can do something like this: http://blog.nodejs.org/2011/04/04/development-environment/
[19:34] Draggor: isaacs: ah cool, so, how do I have npm remove everything?  I want to start fresh T_T
[19:34] isaacs: Draggor: npm ls installed | awk '{print $1}' | xargs npm rm
[19:35] ajsie: cant vowsjs be ported to frontend?
[19:35] isaacs: Draggor: then: curl http://npmjs.org/install.sh | npm_install=rc sh
[19:35] tmzt: isaacs: what does npm link do if you have modules in node_modules in the application directory?
[19:35] ajsie: not feeling good to have to use another bdd for frontend
[19:35] Draggor: isaacs: ls command doesn't take args, should be search now?
[19:35] arpegius_ has joined the channel
[19:37] ncb000gt: pr2012: i haven't used connect-auth with express2, but I can't imagine it'd take a lot of work to get it working correctly
[19:37] ncb000gt: what errors are you seeing?
[19:37] chyoku has joined the channel
[19:39] TooTallNate has joined the channel
[19:43] djazz has left the channel
[19:43] kevwil has joined the channel
[19:46] cronopio has joined the channel
[19:46] cronopio: Hi everyone!!
[19:46] tpryme has joined the channel
[19:47] TooTallNate: hello
[19:47] ajsie: damn
[19:47] ajsie: vows seems to superior to jasmine
[19:47] ajsie: wish it was working on frontend too
[19:47] ajsie: grrrrrrrrr
[19:48] maushu has joined the channel
[19:50] invi has joined the channel
[19:51] invi: hi, wow, lots of peoples and bots
[19:51] bradleymeck: bjork bjork bjork, yes there are lots
[19:51] bentkus: yeah
[19:51] bentkus: node.js is the new ruby
[19:51] tanepiper: anyone know if node-id3 works with node 0.4?
[19:52] invi: badboy_, yeye, seems good stuff, i'm gonna try a bit, lalala
[19:52] invi: ups bentkus 
[19:52] ncb000gt: tanepiper: i'd expect so
[19:53] ncb000gt: i believe it's all JS (so no buffer issues) and makes no http calls afaict.
[19:53] techwraith has joined the channel
[19:53] badboy_: invi: woot? ^^
[19:54] invi: badboy_, sorry, wrong delivery
[19:54] badboy_: =D
[19:54] ncb000gt: invi: node is quite nice :)
[19:54] mscdex: heh
[19:54] reverendal has joined the channel
[19:55] invi: ncb000gt, yes, ECMAScript in both sides sounds cool
[19:56] ncb000gt: invi: less context switch is a great feature :)
[19:56] pedrobelo has joined the channel
[19:56] ryanfitz has joined the channel
[19:58] bentkus: is it actually possible to create multiple threads with node.js?
[19:58] ajsie: bentkus: it should be
[19:58] ajsie: but i dont know how =)
[19:58] highermath_away has joined the channel
[19:58] ckknight: bentkus: a better solution (that removes slow context switching) is multiple processes with communication between. 'cluster' is an example of this
[19:58] meandi2 has joined the channel
[19:59] tmedema has joined the channel
[19:59] bradleymeck: bentkus JS is not designed for threads and child processes often are going to act the same w/ a worker implementation slapped ontop
[19:59] wadey has joined the channel
[19:59] rfay has joined the channel
[20:00] tmedema: Can anyone tell me where to set NODE_ENV as showed in the Express documentation?
[20:00] tmedema: Is it a linux environment variable?
[20:00] hassox has joined the channel
[20:00] harth has joined the channel
[20:00] bradleymeck: an env variable, not necessarily only for linux
[20:01] ljounce has joined the channel
[20:01] tmedema: bradleymeck: I am on ubuntu
[20:01] tmedema: $ NODE_ENV=production node app.js
[20:01] isaacs: tmedema: then yes, it is a linux environment variable
[20:01] isaacs: if you were on a mac, it'd be a mac environment variable ;P
[20:02] bradleymeck: on solaris it would be a solar variable bwahaha... *goes back to work*
[20:02] tmedema: isaacs: heh alright, when I do echo $NODE_ENV it just returns an empty string
[20:02] bradleymeck: did you export it?
[20:03] Slashbunny has joined the channel
[20:03] bradleymeck: otherwise its just for the running command
[20:03] tmedema: bradleymeck: no, but is there no default setting? I don't want to break things!
[20:03] bradleymeck: it will default to production
[20:03] tjholowaychuk: bradleymeck: defaults to dev
[20:03] tmedema: bradleymeck: if it defaults to production, how come it returns an empty string when I do echo $NODE_ENV?
[20:03] bradleymeck: listen to him not me ^
[20:03] bradleymeck: tmedema cause it isnt set
[20:04] tjholowaychuk: tmedema: the environment variable itself does not default, the behavior does (within express)
[20:04] bradleymeck: it wont set it for you
[20:04] tmedema: oh
[20:04] tjholowaychuk: NODE_ENV || 'development' basically
[20:04] tmedema: so I am supposed to set it in the console, not within my application?
[20:04] bradleymeck: in your environment, bash's .profile etc
[20:05] deepthawtz has joined the channel
[20:05] tmedema: right, I don't see the purpose of that, would rather set it in the source as it'd be easier to modify
[20:05] tmedema: but that will do, thanks
[20:05] tjholowaychuk: tmedema: then you are hard-coding your environment
[20:05] tjholowaychuk: kinda defeats the purpose
[20:06] arpegius has joined the channel
[20:06] tjholowaychuk: however feel free to set app.set('env', whatever)
[20:06] eguest309 has joined the channel
[20:06] tjholowaychuk: I just dont recommend it
[20:06] tmedema: alright
[20:07] tmedema: tjholowaychuk: I figured it's the same as in a text file since js files are not compiled 
[20:07] tmedema: (if it
[20:07] burny has joined the channel
[20:07] tmedema: (if it's in some text file hidden I might actually forget about setting it)
[20:08] eb4890 has joined the channel
[20:08] tjholowaychuk: well have your server export NODE_ENV=production
[20:08] tjholowaychuk: and leave your machine as-is
[20:08] tjholowaychuk: pretty simple
[20:08] tjholowaychuk: and have `make test` NODE_ENV=test
[20:09] tmedema: tjholowaychuk: how would you run that export command within node.js?
[20:09] tjholowaychuk: tmedema: you dont, thats the point
[20:09] tmedema: tjholowaychuk: oh I thought that's what you meant with have your server do it
[20:09] tjholowaychuk: tmedema: you dont want app = express.createServer(); app.set('env', 'production'); in your source
[20:10] tjholowaychuk: no no i mean the machine
[20:10] dmcquay has joined the channel
[20:10] tmedema: tjholowaychuk: and what did you mean with make test NODE_ENV=test ?
[20:10] harth has joined the channel
[20:10] tjholowaychuk: tmedema: sometimes you want different settings for when you run tests
[20:11] tjholowaychuk: typical app will have production/development/stage/test
[20:11] tmedema: ah alright, thanks
[20:11] guybrush: hm this blog-entry keeps me pondering http://blog.nodejs.org/2011/04/04/development-environment/ --- isn't /usr/local supposed to be used for selfcompiled stuff?
[20:12] guybrush: i am using /usr/local as my prefix now (for node and npm)
[20:12] eguest309: hello:i am trying to connect to a node server using the socket.io pack..however i dont seem to be able to connect to the node server instance  when i load the page.i put in a method which is supposed to alert me whenever i conect but i get nothing back.any ideas?
[20:12] isaacs: guybrush: same here
[20:12] mikegerwitz: guybrush: /usr/local is for anything that is not part of your distribution
[20:13] jzaefferer has joined the channel
[20:13] isaacs: guybrush: some schools of thought are that /usr/local is for "non-distro system" things.  others feel that /usr/local is for your self-installed things, which is *sort* of the same concept, but not quite.
[20:13] guybrush: isaacs: npm-1.0 is great! took me some time to see de advantages of local installation
[20:13] liar has joined the channel
[20:13] isaacs: guybrush: yeah, it takes a little bit of a brain shift
[20:13] isaacs: but it's nice
[20:13] guybrush: isaacs: right, that is what i use /usr/local for
[20:14] isaacs: guybrush: on some machines, i have my prefix set to ~/local
[20:14] isaacs: guybrush: but on my main single-user primary-development mac, a chown'ed /usr/local is a lot easier
[20:15] isaacs: whatever the case, npm will go wherever node is
[20:15] isaacs: (by default)
[20:15] bradleymeck: eguest309 need more paste of code
[20:15] Me1000 has joined the channel
[20:15] eguest309: okay
[20:15] tmedema: tjholowaychuk: one more thing, why is $ NODE_ENV=production node app.js postfixed with node app.js?
[20:16] tjholowaychuk: tmedema: because you set the variable first, then execute node
[20:16] tjholowaychuk: so internally process.env.NODE_ENV will be "production"
[20:16] tjholowaychuk: its just a string that express happens to look at, nothing special
[20:16] tmedema: tjholowaychuk: oh it's all on one line, I thought it set the variable to "production node app.js" 
[20:16] guybrush: also! i like that: https://github.com/isaacs/node/commit/3fe4afa7f5fb1a52c1a50ef05b47b5935b8149e4
[20:17] tjholowaychuk: tmedema: nope
[20:17] isaacs: guybrush: oh, heh
[20:17] isaacs: i was just playing around with that
[20:17] tmedema: thanks again
[20:17] isaacs: but it kinda works :)
[20:17] guybrush: yes it is awesome :D kind of replaces nvm, nave, ..
[20:18] bradleymeck: as long as you dont make npm somehow require npm (/shakes fist at some easy_install eggs)
[20:18] jetienne: is there a javascript lib for generating a qrcode ?
[20:18] eguest309: http://pastebin.com/bQdXV7TQ
[20:18] bradleymeck: jetienne, you can rip it out of http://www.cipherbrain.be/qrcode/
[20:19] eguest309: when i connect i get an html response but no mention of the messages which i am supposed to get for opening a socekt
[20:19] jetienne: bradleymeck: nice! i will try
[20:20] Jonasbn_ has joined the channel
[20:20] jetheredge has joined the channel
[20:20] jetienne: http://www.d-project.com/qrcode/index.html bradleymeck there is a * ... its meaning gonna remain a mistery :)
[20:22] bradleymeck: jetienne says it doesnt support japanese
[20:23] eguest309: any help
[20:25] ajsie: wow .. 613 members in node.js
[20:26] ajsie: ryan did a very good job 
[20:26] jetienne: bradleymeck: oh )
[20:26] jetienne: :)
[20:27] bradleymeck: eguest309, what is the exact error msg? or is there none, on glance it seems ok
[20:27] mike5w3c has joined the channel
[20:27] ckknight: ajsie: I think most of these people are either plants or bots. It's all a big conspiracy.
[20:27] eguest309: i dont get any response thats my problem. i was thinking that as soon as i create a socket  to the server i should get some response from ther server 
[20:28] ajsie: ckknight: haha 
[20:28] ajsie: good one
[20:28] eguest309: at least a message to the console at leaset
[20:28] ckknight: pretty sure I'm at least 12 bots.
[20:28] ajsie: a big fucking scam
[20:28] ckknight: server-side javascript? that's gotta be a joke.
[20:28] BHSPitMonkay: gf3: could I bother you with a quick question about Jerk? :)
[20:28] ajsie: in his seminars they were all relatives with manuscripts
[20:30] ckknight: I wanna make something cool in node.js, or make a library or something. I'm not sure what, though :P
[20:30] ajsie: ckknight: port vowsjs to frontend
[20:30] ckknight: ajsie: but I've been kinda liking expresso
[20:30] ckknight: :P
[20:30] dmcquay_ has joined the channel
[20:31] real_ate has joined the channel
[20:31] ajsie: ckknight: https://github.com/visionmedia/expresso
[20:31] hij1nx has joined the channel
[20:31] saschagehlich: V1: ping
[20:31] ckknight: it's what I tested http://github.com/ckknight/escort in
[20:31] ajsie: how do you use it?
[20:31] lbl1985 has joined the channel
[20:31] ckknight: ajsie: https://github.com/ckknight/escort/blob/master/test/escort.test.js
[20:31] ckknight: loads up a bunch of tests and runs them all in parallel
[20:31] ajsie: okay
[20:32] V1: saschagehlich: pong
[20:32] saschagehlich: V1: did you ever experience that firefox < 4.0 has problems with socket.io? :(
[20:32] jzaefferer has joined the channel
[20:33] V1: saschagehlich: Not really, what kind of issues? Can you be more specific?
[20:33] unlink has joined the channel
[20:33] unlink has joined the channel
[20:33] tanepiper: oh bahh i'm dumb, id3 probably can't read ogg files
[20:33] saschagehlich: V1: just talked to a user who said his download would stuck at "0%" which means that his firefox did not connect. after updating to 4.0 it worked :/
[20:33] tanepiper: anyone know how i can read ogg metadata?
[20:34] ajsie: ckknight: vows kinda do that too
[20:34] ckknight: did you write vows and thus trying to convert me?
[20:34] ckknight: :P
[20:34] V1: saschagehlich: Did he change between transports? Maybe using xhr-polling in 3.6.x and Flashsocket on 4.0
[20:34] ajsie: no =)
[20:34] ajsie: using it now
[20:35] ajsie: but i dont get the design model
[20:35] ajsie: why code it for only node
[20:35] yozgrahame has joined the channel
[20:35] ajsie: isn't the asynch nature similar the frontend's
[20:35] ajsie: we want same frameworks everywhere!
[20:36] peregrine81 has joined the channel
[20:36] arpegius_ has joined the channel
[20:36] kordless has joined the channel
[20:36] peregrine81: what would cause a socket to not be writeable?
[20:36] BHSPitMonkay: saschagehlich: yeah, firefox and socket.io were always a wonky combo.
[20:36] jetienne: peregrine81: buffer is full
[20:37] peregrine81: what if its NEVER writeable?
[20:37] saschagehlich: V1: don't know whether he changed transports, didn't log it or rather I could not
[20:37] peregrine81: jetienne: as soon as I connect its not writeable
[20:37] jetienne: peregrine81: it is connected ?
[20:38] peregrine81: jetienne: here is my situation, I have a array, socket.on('connect'....I add the current socket to the array
[20:38] jetienne: peregrine81: if it is tcp and connected, it is writable on connect. thank to tcp buffer
[20:38] tmedema: If you use express but have like 20+ custom pages, how do you make sure that these are all handled within their own "section"? eg. handling them in separate files, or should they all be handled in the same single file? that'd get rather big right?
[20:38] jetienne: peregrine81: sorry to help :(
[20:39] V1: saschagehlich: BHSPitMonkay: There are no "known" bugs, except for a onreadystatechange bug
[20:39] peregrine81: jetienne: thanks for the help though. 
[20:40] ckknight: ajsie: well, expresso has some nice testing in the cases where you pass in an httpServer instance.
[20:40] ckknight: ajsie: that wouldn't apply to browsers
[20:42] ckknight: tmedema: you mean 20+ custom actions?
[20:42] locks has joined the channel
[20:43] mattrobenolt: Hey tjholowaychuk, why no way to remove the X-Powered-By header imposed by Express?
[20:43] dmcquay has joined the channel
[20:43] locks: hi, I npm installed underscore and underscore.string, but when I try to require the latter it doesn't find it
[20:43] blkcat: mattrobenolt: just patch it?
[20:43] isaacs: locks: what version of npm?
[20:44] locks: 0.3.18
[20:44] tjholowaychuk: mattrobenolt: res.removeHeader('X-Powered-By') should work
[20:44] locks: node 0.4.5
[20:44] isaacs: locks: oh, i see, $ npm view underscore.string main
[20:44] tjholowaychuk: (if node has removeHeader(), cant remember)
[20:44] isaacs: locks: no main defined in underscore.string
[20:44] mattrobenolt: blkcat: That just complicated setting up on servers using npm.
[20:44] isaacs: locks: bug the folks listed here: $ npm owner ls underscore.string 
[20:45] locks: roger, thanks :)
[20:45] mattrobenolt: tjholowaychuk: It's not a major deal, just curious why that's hardcoded in as "required". Free exposure?
[20:45] blkcat: i'm guessing so, yeah
[20:45] isaacs: locks: looks like they got to it :https://github.com/edtsech/underscore.string/commit/a6ab7746a66a585d70a0c0ee2ef1b889da06ca16
[20:45] tmedema: ckknight: I guess, yes
[20:45] isaacs: locks: so, bug them to publish that :)
[20:45] tjholowaychuk: mattrobenolt: its not hardcoded, its just a default so I can easily curl -X HEAD -i something and see what it was built with
[20:46] tpryme has joined the channel
[20:46] ckknight: tmedema: I actually cover this very issue in a lib I wrote
[20:46] mattrobenolt: tjholowaychuk: https://github.com/visionmedia/express/blob/master/lib/http.js#L64 ?
[20:46] mattrobenolt: That's not hardcoded in?
[20:46] tjholowaychuk: no... you can remove them
[20:46] tmedema: ckknight: oh, what library if  I may ask?
[20:46] ckknight: tmedema: although the API is slightly different (since I'm providing the routing library), check out "Code Structuring" in the readme for https://github.com/ckknight/escort
[20:46] brianloveswords has joined the channel
[20:46] heythisisdave has joined the channel
[20:47] mattrobenolt: tjholowaychuk: I know what you mean, just a semantic on "hardcoded".
[20:47] ckknight: tmedema: you can do it with either my lib (at which point I'll love you forever) or by using the standard connect router.
[20:48] tmedema: ckknight: that's a minor task for so much love, I may have to consider it
[20:48] eguest309: can a node client connect to a server on a port other than 80 without  encyrption?
[20:48] ckknight: tmedema: all you gotta do is promise to give me feedback if you use it
[20:48] peregrine81: so what would cause a socket to be destroyed?
[20:49] ckknight: eguest309: I don't see why not, as long as the scheme is http, the port can be whatever you want.
[20:49] tmedema: ckknight: I just got to read about express, so it will be a while until I actually get to this issue, thanks though
[20:49] eguest309: oaky
[20:49] NuckingFuts has joined the channel
[20:49] Shrink has joined the channel
[20:50] ckknight: tmedema: the generic answer is to have a bunch of files properly structured and in your main js file, do require('./actions/something')(app, otherData, stuff);
[20:51] Stan____ has left the channel
[20:52] sdecastelberg has joined the channel
[20:52] tmedema: ckknight: I see, didn't even know the (...) params after require was possible
[20:53] ckknight: tmedema: yep, you just do module.exports = function(blah) { console.log(blah); };
[20:53] ckknight: then typeof require('./blah') === "function"
[20:53] ckknight: and it is that function which you exported.
[20:53] tmedema: ckknight: makes sense, thanks again
[20:54] tmzt: tjholowaychuk: well this is nice, I finally got the framework to actaully send json in the posts instead of forms, and now req.body is undefined
[20:54] tmzt: Connection	keep-alive
[20:54] tmzt: Content-Type	application/json; charset=UTF-8
[20:55] tjholowaychuk: tmzt: huh?
[20:55] tmzt: I'm using connect 2.0
[20:56] eb4890 has joined the channel
[20:56] tmedema: Is it bad SEO wise to just make any 404 lead to the home page? if a user makes a typo I'd just like him to see my site to be honest
[20:56] tmzt: sorry 1.0/express 2.0
[20:56] tmzt: tmedema: study RESTfulness
[20:56] Aria has joined the channel
[20:57] tmzt: tjholowaychuk: I've got the whole req object dumped
[20:57] tmzt: 'content-type': 'application/json; charset=UTF-8',
[20:57] ckknight: tmedema: here's what you do:
[20:57] peregrine81: is is possible to open many socket connections and a socket server on one server?
[20:57] kordless has joined the channel
[20:57] mc_greeny has joined the channel
[20:57] ckknight: tmedema: make it 404 and (if they're requesting HTML), show a proper 404 page that'll redirect after X seconds using a <meta> tag
[20:58] ckknight: tmedema: but you have to make sure you provide a proper 404 status code.
[20:58] tmzt: tjholowaychuk: I mean am I just missing something or does bodyParser() not support application/json with a charset?
[20:58] tmzt: let me try curl
[20:58] tjholowaychuk: tmzt: should
[20:58] tmedema: tmzt: thanks, ckknight that makes sense, seems like a good solution
[20:59] softdrink: ok. i have changed my mind. i like coffeescript. :)
[20:59] hassox has joined the channel
[20:59] softdrink: *codecodecode*
[20:59] ckknight: tmedema: always make sure to use proper status codes. Your SEO will hurt pretty bad if you return 200s for your not found pages and the like.
[20:59] c4milo: tjholowaychuk: hey, how are you? 
[21:00] ckknight: softdrink: what made you change your mind?
[21:00] tjholowaychuk: c4milo: not to bad
[21:00] c4milo: tjholowaychuk: is there any middleware that assumes the content type based on the extension of the url? 
[21:00] softdrink: ckknight:  pretty solid vim support, and actually trying it out.  hehe
[21:00] c4milo: tjholowaychuk: so users don't have to specify the header 
[21:01] eguest309: i installed nodejs without support for encryption.when i make connections to a port other than 80 it seems to make an encrypted connection which i see in the console
[21:01] tjholowaychuk: c4milo: sets the content-type?
[21:01] jsedgwick has joined the channel
[21:01] eguest309: however i dont have support for encryption
[21:01] tjholowaychuk: c4milo: not tht I know of
[21:02] tjholowaychuk: c4milo: just do res.contentType(path), it will figure it out for you
[21:02] tmzt: tjholowaychuk: I think he means on post
[21:02] c4milo: tjholowaychuk: yes, I meant from a user standpoint 
[21:02] tmzt: just write some middleware to do it
[21:02] tjholowaychuk: oh, you shouldnt really do that
[21:02] tjholowaychuk: you should use the content-type header
[21:02] tmzt: or better, use proper routes
[21:02] softdrink: is there a sexy way to do something like:    if (this.events[name] && this.events[name].length) { loop through this.events[name] } ?
[21:03] tmzt: softdrink: #coffescript
[21:03] c4milo: tjholowaychuk: really? I am looking for ways to make easier for user to use my rest api 
[21:03] tjholowaychuk: GET foo.json makes sense, but POST foo.json is kinda weird
[21:03] c4milo: users
[21:03] softdrink: good point
[21:03] tjholowaychuk: they are there for a reason :p content-type is fine
[21:03] tmzt: I'm using foo.json foo/1.json and supporting restful POST/PUT
[21:03] c4milo: tjholowaychuk: I think twitter uses it 
[21:03] tmzt: and twilio, but they might require Content-type
[21:04] c4milo: tjholowaychuk: in their streaming api 
[21:04] tjholowaychuk: I dunno, I wouldnt do it
[21:04] gilesgoatboy has joined the channel
[21:04] tfe_ has joined the channel
[21:04] tjholowaychuk: seems wonky to me
[21:04] tfe_ has joined the channel
[21:04] tmzt: anyway, I don't have a clue bodyParser isn't working, updating to git
[21:04] brianloveswords has joined the channel
[21:04] tjholowaychuk: tmzt: debug my friend, step through with node's debugger see what is going on
[21:04] tjholowaychuk: could be many things
[21:05] tjholowaychuk: you might not be receiving "data" events etc
[21:05] c4milo: tjholowaychuk: it is user experience, I have been having developers stuck because they forget to specify the Content-Type header when they are using the API 
[21:05] tjholowaychuk: c4milo: well they should know http better than that
[21:05] tmzt:    1aa4957..ba15ca7  master     -> origin/master
[21:05] tmzt:  * [new tag]         1.2.3      -> 1.2.3
[21:05] tmzt: From git://github.com/senchalabs/connect
[21:05] tmzt:  * [new tag]         1.2.2      -> 1.2.2
[21:05] tmzt: ????
[21:05] tjholowaychuk: better than to rely on an extension
[21:05] c4milo: tjholowaychuk: aha true :) 
[21:05] tmzt: that's my connect checkout
[21:06] tmzt: still don't know how to use this debugger, I thought it was something I had to compile in
[21:06] c4milo: tjholowaychuk: but even though I am considering to assume the content-type because there willl be a lot of developer using it and I bet more that one doesn't know well http : 
[21:06] arpegius has joined the channel
[21:06] BHSPitMonkay: Apparently I'm not understanding REPL correctly. What do I have to do to make sure REPL's scope is in tune with the rest of my script's global scope?
[21:07] tjholowaychuk: c4milo: yeah you could easily support both
[21:07] BHSPitMonkay: (All of my global variables are being spat back as undefined in my repl prompt)
[21:07] zpao_ has joined the channel
[21:07] tjholowaychuk: I just personally think its weird
[21:07] ckknight: BHSPitMonkay: your script doesn't pollute the global namespace, it's wrapped in a function to prevent that.
[21:07] edw: BHSPitMonkay: I'm glad you asked, because I have the same problem, but forgot about it.
[21:07] ckknight: BHSPitMonkay: if you need to export something, use exports.blah = mything
[21:07] tim_smart has joined the channel
[21:07] c4milo: tjholowaychuk: me too :) thanks man 
[21:07] tjholowaychuk: thats like responding with json containing a status code, when you could just use status codes
[21:08] BHSPitMonkay: ckknight: perhaps I'm misusing the term global here. I just mean the scope of my script.
[21:08] tmzt: tjholowaychuk: yes, but xhr doesn't handle them very well, especially if you want to 302 on the response
[21:08] ckknight: BHSPitMonkay: you can't stick a repl inside the scope of your script if it's already run.
[21:08] BHSPitMonkay: e.g., var herp = "derp"; repl.start();
[21:08] tmzt: at least not in mozilla, it ignores the incremental status
[21:08] ckknight: oh
[21:08] ckknight: hmm
[21:08] ckknight: yeah, not sure about that.
[21:08] BHSPitMonkay: at that prompt, herp is undefined
[21:08] nsfx has joined the channel
[21:09] BHSPitMonkay: I thought this was the whole point of repl... Isn't what I'm trying to do pretty basic debugging?
[21:09] ckknight: BHSPitMonkay: repl.start() creates its own context, found in repl.start().context
[21:09] ckknight: you can stick what you want in there.
[21:10] BHSPitMonkay: hmm, weird
[21:10] isaacs: pquerna: yo
[21:10] edw: Not weird, just somewhat OCD. In a healthy way.
[21:10] isaacs: pquerna: your thing is on 1.0.1rc6
[21:10] ryanfitz has joined the channel
[21:10] ckknight: it was probably not designed to hook into the current scope, not even sure how you'd manage that properly...
[21:10] BHSPitMonkay: how can there be so many misinformed articles like this one http://blog.osbutler.com/2010/apr/29/node-by-example-repl/
[21:11] BHSPitMonkay: ckknight: I guess I'm just spoiled by in-browser consoles
[21:11] bradleymeck: ckknight debug.h in v8 can do it kinda, but its very very odd
[21:12] robhawkes has joined the channel
[21:12] Croms has joined the channel
[21:12] peregrine81: I keep getting 'TypeError: Second argument should be a buffer' when I first try writing to a socket...
[21:12] peregrine81: after its connected
[21:13] saikat has joined the channel
[21:17] tmzt: can I debug a cluster worker?
[21:17] baudehlo1: tmzt: just run it outside of cluster :)
[21:18] mscdex: peregrine81: can you gist your code?
[21:18] tmedema: I just figured that I probably should have made myself familiar with Connect before reading about Express
[21:18] evilhackerdude: so i thought i finally found a readymade pty for node here http://is.gd/2mYAug - but it turns out it's just piggybacking a python process with the python pty module. NOOO</vader>
[21:18] dnolen has joined the channel
[21:18] mikeal has joined the channel
[21:20] mscdex: evilhackerdude: http://nooooooooooooooo.com/
[21:20] tmzt: oh wow, so I got an internal error
[21:21] brianmario has joined the channel
[21:21] pquerna: isaacs: awesome, thanks!
[21:22] tmedema: mscdex: I like the google ad there,  Vader FX Lichtschwert
[21:22] bingomanatee: ACTION was wondering if anyone in SF (Joyent?) has a good camera and wants to video Node.js meetups - the next one will be taken care of by IGN onsite but we are not that lucky as a rule 
[21:23] mscdex: oh heh, i don't see the google ads
[21:23] mscdex: :)
[21:23] konobi: bingomanatee: drop a line to emily at joyent
[21:24] bingomanatee: will do
[21:24] ckknight: tmedema: that's probably a good idea, if you want to be familiar with the whole thing. Express is just a wrapper around Connect that adds some niceties and extra middleware, afaik.
[21:25] bingomanatee: ACTION <3 <3 express
[21:27] jesusabdullah: isaacs: Have you had people posting recruitment stuff in the nodejs mailing list or something?
[21:27] isaacs: jesusabdullah: yes, and the npm- list as well
[21:28] jesusabdullah: Ah
[21:28] jesusabdullah: Crazy
[21:28] jesusabdullah: I could see it in a discussion list *maybe* but...yeah.
[21:29] jesusabdullah: I lol'd at your tweet btw
[21:29] jesusabdullah: but nobody near me would "get it"
[21:29] jesusabdullah: oh well
[21:31] ckknight: it'd be cool to have a node.js job...
[21:31] ckknight: also, lol at your tweet as well, isaacs
[21:31] isaacs: ckknight: http://jobs.nodejs.org/
[21:32] ckknight: yeah, I know, but I have a grown-up job already.
[21:32] ckknight: also, I feel like I should do something cool with node.js before looking for a job doing it, in order to show it off
[21:33] ckknight: just need to figure out what said "cool thing" would be
[21:33] MikhX has joined the channel
[21:33] bingomanatee: Do you want to hook into a game I'm working on?
[21:33] ckknight: eh, maybe, what's it about?
[21:36] stagas_ has joined the channel
[21:36] gf3: BHSPitMonkay: hey, sorry was AFK
[21:36] gf3: what's up?
[21:38] BHSPitMonkay: gf3: I was being stupid, never mind :)
[21:38] BHSPitMonkay: it works amazingly
[21:38] gf3: BHSPitMonkay: excellent!
[21:38] BHSPitMonkay: although I do have one smaller question now; do you happen to know how to do formatting characters in the messages?
[21:38] BHSPitMonkay: like, for bold
[21:39] gf3: BHSPitMonkay: not off the top of my head
[21:39] evilhackerdude: <3 openpty(), thanks tmzt for pointing me there
[21:39] tjgillies: does brunchwithcoffee have an irc channel?
[21:39] BHSPitMonkay: gf3: alright, I'll tinker with it. thanks :D
[21:40] kersny has joined the channel
[21:40] evilhackerdude: tty.open would work, too, but calling child_process.spawn with { ..., setsid: true } didnt work for me (setsid: Permission denied)
[21:41] techwraith has joined the channel
[21:41] techwraith: So who's going to nodeConf? I want to make sure I meet up with everyone :)
[21:42] tjgillies: techwraith: i wam :)
[21:42] techwraith: tjgillies: awesome!
[21:42] killfill has joined the channel
[21:42] tjgillies: s/wam/am/
[21:43] markwubben has joined the channel
[21:45] tjgillies: i think why javascript is so powerful, is its one of the only languages where the developers really understand the good and bad parts. a lot of other language people are either ignorant, or in denial
[21:47] Aria: ++
[21:48] bradleymeck: the bad parts? ive had many people who claim JS is the bad parts
[21:48] heythisisdave has joined the channel
[21:48] prettyrobots has joined the channel
[21:48] locks: really tjgillies ?
[21:48] techwraith: tjgillies: That's the product of almost 20 years of crappy browsers
[21:48] locks: js has its worker bees, like any other lang
[21:48] locks: how many people do jquery and don't even know what js is
[21:48] techwraith: and now we finally have a way to use js without the crap that is the DOM
[21:48] SubStack: yep!
[21:49] SubStack: and with a proper module system baked in too
[21:49] techwraith: SubStack: yep
[21:49] tjgillies: wow commonjs has only been around since 2009
[21:49] tjgillies: i didn't realize it was so new
[21:51] christophsturm has joined the channel
[21:53] mike_miller has joined the channel
[21:56] gmanika has left the channel
[21:56] sorens3n has joined the channel
[21:57] ph^ has joined the channel
[21:58] tjholowaychuk: wew, saved by the debugger
[21:58] FireFly|n900 has joined the channel
[21:59] SubStack: commonjs seems to mostly be useful as a point of divergence
[21:59] SubStack: since it's not really something you can just use directly
[22:00] bingomanatee: Javascript is powerful because it combines the best features of Java and Script. 
[22:01] bingomanatee: ACTION ducks
[22:01] bradleymeck: indeed the coffee and Shakespeare combination is quite neopolitan.
[22:02] techwraith: :)
[22:02] SubStack: I thought it was chocolate, strawberry, and vanilla
[22:02] SubStack: that would be a good naming convention for some collection of modules
[22:03] KieranYo has joined the channel
[22:04] ljounce has joined the channel
[22:06] rburhum has joined the channel
[22:06] TheFuzzball has joined the channel
[22:08] KieranYo: Hi, does anyone know where I can get the latest version of XCode for Mac OSX 10.5.8?
[22:08] ckknight: KieranYo: I seriously tried getting it, ended up giving up and installing 10.6
[22:08] lianj: lol
[22:09] KieranYo: *sigh*
[22:09] KieranYo: It'll have to wait then
[22:09] ckknight: isn't it only like $10?
[22:10] KieranYo: Sure but it's not in my hand right now :p
[22:10] KieranYo: On the apple store it's £26
[22:11] lianj: burn your macs
[22:11] KieranYo: lianj: are you running linux?
[22:12] lianj: yes, but i had a mac life too :/
[22:13] soniczen has joined the channel
[22:14] harth has joined the channel
[22:14] KieranYo: Which distro are you using?
[22:14] KieranYo: I'm thinking of just running it in a vm
[22:16] mikeal has joined the channel
[22:17] lianj: KieranYo: arch, but ubuntu should get you going aswell and you dont have need an apple account or pay for your build chain
[22:20] pedrobelo has joined the channel
[22:20] secoif has joined the channel
[22:23] sh1mmer has joined the channel
[22:23] Benn has joined the channel
[22:25] SubStack: isaacs: you should `npm publish tap` already so I can start including it as a devDependency
[22:25] burny has joined the channel
[22:25] isaacs: SubStack: it's not ready yet!
[22:25] SubStack: pfft!
[22:25] isaacs: almost
[22:25] isaacs: seriously, this weekend
[22:26] techwraith: What's `npm publish tap`
[22:26] techwraith: ?
[22:26] SubStack: I push untested buggy stuff to npm all the time :p
[22:26] isaacs: techwraith: he's referring to this: https://github.com/isaacs/node-tap
[22:26] samcday: SubStack, Me too! Sometimes I even just publish empty packages with a readme saying "ner ner ner"
[22:26] SubStack: hahaha
[22:26] mattly has joined the channel
[22:26] SubStack: I do that with github but not with npm
[22:26] tlrobinson has joined the channel
[22:27] isaacs: SubStack: i just want to be able to have it support everything in the example package.
[22:27] samcday: But but but! NPM is just like Github isn't it! Package manager === version control system
[22:27] isaacs: and clean up the class heirarchy a bit
[22:27] SubStack: so that you can at least require() the package, but no guarantees past that
[22:27] SubStack: isaacs: ok then, I'll be patient!
[22:27] tlrobinson: isaacs or anyone else, can you point me to an example of tty.open?
[22:27] isaacs: SubStack: also, it'll probably be split up into about 4 different packages.
[22:28] SubStack: 4? that's nothing
[22:28] SubStack: look at the dependency graph for dnode
[22:28] isaacs: SubStack: mix-n-match test factory factory
[22:28] isaacs: puttin the java back in javascript
[22:28] isaacs: oohhhh right
[22:28] samcday: ew :p
[22:28] SubStack: design patterns /o\
[22:29] isaacs: j/k
[22:29] samcday: Is there a decent node.js ssh client lib yet? 
[22:29] isaacs: but, seriously, there's a TapProducer and a TapConsumer, and they don't really need to be in the same package.
[22:29] SubStack: classical design patterns make absolutely no sense in languages with lightweight lambdas
[22:29] isaacs: tlrobinson: i'm not sure why it's trying to setsid
[22:29] isaacs: tlrobinson: it doesn't look like it should be.
[22:29] SubStack: it seems like every single one of those is just a workaround for not having nice closures
[22:29] evilhackerdude: tlrobinson: what do you need tty.open for? i've just looked into it further.
[22:29] m14t has joined the channel
[22:29] isaacs: SubStack++
[22:29] v8bot:  isaacs has given a beer to SubStack. SubStack now has 21 beers.
[22:30] tlrobinson: evilhackerdude: trying to programmatically control an interactive shell
[22:30] SubStack: 3 more and I'll have a case!
[22:30] isaacs: if you have a good language, you don't need design patterns, usually.  still, as a vocabulary tool, it's useful to know them well
[22:30] RichardJ has left the channel
[22:30] isaacs: `v beers
[22:30] v8bot: isaacs:  has 0 beers.
[22:30] isaacs: ACTION sadface
[22:30] dnolen has joined the channel
[22:30] samcday: onoes
[22:30] isaacs: ACTION drank them all
[22:30] samcday: isaacs++
[22:30] v8bot:  samcday has given a beer to isaacs. isaacs now has 13 beers.
[22:30] samcday: o.O
[22:30] isaacs: wait, wtf?
[22:30] techwraith: isaacs++
[22:30] v8bot:  isaacs is getting too many beers.  Don't let isaacs get drunk!
[22:30] SubStack: isaacs++
[22:30] v8bot:  isaacs is getting too many beers.  Don't let isaacs get drunk!
[22:30] SubStack: nice trick
[22:30] techwraith: lol
[22:30] isaacs: `v beers
[22:30] v8bot: isaacs:  has 0 beers.
[22:30] samcday: broken bot is broken :P
[22:30] SubStack: oh hah
[22:30] isaacs: v8bot: you lie
[22:30] v8bot: isaacs: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[22:30] SubStack: `v beers isaacs 
[22:30] v8bot: SubStack: isaacs  has 0 beers.
[22:30] SubStack: `v beers isaacs
[22:30] v8bot: SubStack: isaacs has 13 beers.
[22:30] isaacs: ??
[22:31] samcday: ..?
[22:31] SubStack: trailing space
[22:31] evilhackerdude: tlrobinson: uh, i'm trying to do the same thing.
[22:31] isaacs: oohhhh
[22:31] SubStack: whose bot is that?
[22:31] isaacs: inimino, i think
[22:31] isaacs: inimino: you around?
[22:31] SubStack: inimino: fix your bot!
[22:31] isaacs: v8: new Error().stack
[22:31] v8bot: isaacs: "Error\n    at eval at <anonymous> (evalmachine.<anonymous>:26:5)\n    at evalmachine.<anonymous>:26:9\n    at evalmachine.<anonymous>:30:2\n    at Socket.run (/home/inimino/v8bot/lib/sandbox/shovel.js:76:19)\n    at Socket.emit (events.js:39:17)\n    at Socket._onReadable (net.js:629:51)\n    at IOWatcher.onReadable [as callback] (net.js:156:10)"
[22:31] SubStack: also ++ should be able to take comments
[22:31] isaacs: note the paths
[22:31] SubStack: node.js++ # because it's awesome is why
[22:31] SubStack: like that
[22:32] evilhackerdude: tlrobinson: tty.open didn't work for me so i copied it from tty_posix.js and modified it
[22:32] perezd has joined the channel
[22:32] tlrobinson: yeah it looks like changing setsid to false works
[22:32] SubStack: now then, back to messing with marak's mailer thingy
[22:32] tlrobinson: evilhackerdude isaacs ^
[22:33] Jalava_: i'd like to experiment with imagebased smalltalk like v8 engine host, would node.js be good starting point?
[22:33] isaacs: tlrobinson: were you specifying setsid:true before?
[22:33] isaacs: tlrobinson: setsid requires root perms, iirc
[22:33] Jalava_: i'm a mud junkie but for somereason nobody seems to implement them in anything else than LPC
[22:33] tlrobinson: isaacs: tty.open has setsid:true hard coded
[22:33] evilhackerdude: isaacs: i tried executing my setsid script as root but  setsid still didnt work
[22:33] isaacs: tlrobinson: oh, that's probably lame
[22:34] isaacs: evilhackerdude: what version of node?  that was fixed very recently
[22:34] isaacs: like, 0.4.4 or something
[22:34] evilhackerdude: 0.4.5
[22:34] kriszyp has joined the channel
[22:34] isaacs: oh, ok
[22:34] isaacs: ACTION has never actually used tty.open
[22:34] isaacs: but ryah_ has
[22:35] SubStack: I should hope so!
[22:35] tlrobinson: isaacs ryah_: better to change to setsid:false to surface an options arg on tty.open like spawn has?
[22:35] tlrobinson: *or surface
[22:36] turbofrank has joined the channel
[22:37] ryah_: tlrobinson: yeah, maybe
[22:37] ryah_: tlrobinson: do you get permission denied?
[22:38] evilhackerdude: ^^ i got permission denied when setsid is true. as root.
[22:38] sveisvei has joined the channel
[22:38] tlrobinson: ryah_: "setsid: Operation not permitted"
[22:39] ChrisPartridge has joined the channel
[22:40] tlrobinson: evilhackerdude: what did your solution look like, besides switching setsid
[22:40] tlrobinson: evilhackerdude: (it's still not working for me, if i just do tty.open("bash") i get "bash: no job control in this shell"
[22:41] ryah_: it might have something to do with us using vfork instead fork
[22:41] evilhackerdude: so i just got it working when you asked about tty.open. using the slaveFD stream works for ipython whereas it didnt work using spawn's default FDs
[22:41] ryah_: node_child_process.cc:339
[22:41] ryah_: i can't look into it right now unfortuantely
[22:42] tlrobinson: evilhackerdude: btw I previously got it working using "expect" but that's kind of hacky
[22:42] evilhackerdude: tlrobinson: what's that?
[22:43] MarkMenard has joined the channel
[22:43] tlrobinson: evilhackerdude: a program for scripting interactive programs, it does magic that makes the programs it spawns to use pseudo terminals
[22:43] figital has joined the channel
[22:44] tlrobinson: evilhackerdude: see the second answer here http://stackoverflow.com/questions/5292757/using-ssh-over-node-js
[22:44] Roelven_ has joined the channel
[22:44] tlrobinson: evilhackerdude: https://github.com/FlashFan/NodeSSH
[22:44] SubStack: :o
[22:45] SubStack: oh a client
[22:45] evilhackerdude: ah. i found another "interesting approach" using python before
[22:45] tlrobinson: SubStack: it's just a thin wrapper around the ssh command line program, kind of useless
[22:45] SubStack: yeah :/
[22:46] evilhackerdude: https://github.com/walling/JS-Term/blob/master/pty.js
[22:46] tlrobinson: SubStack: especially since "ssh -tt" does the pseudo terminal magic for you
[22:46] timcosgrove has joined the channel
[22:46] evilhackerdude: it's spawning python, importing their awesome pty module and spawning a shell
[22:46] tlrobinson: evilhackerdude: heh yeah same idea as using expect i think
[22:46] tschundeee has joined the channel
[22:46] SubStack: I've got some bindings around libssh for the server part but it doesn't work past the first connection on account of thread safety
[22:47] tfe_ has joined the channel
[22:47] timcosgrove has left the channel
[22:47] eguest309 has joined the channel
[22:47] tk has joined the channel
[22:48] hassox has joined the channel
[22:48] evilhackerdude: tlrobinson: when i tried spawning bash i got the same error message, but you can ignore the thing about job control judging from what i've found in the interwebz
[22:48] techwraith: Off topic: Does anyone know of any software that will lock your screen if it doesn't detect that you're sitting in front of it (using a webcam) (on a mac)
[22:49] Jalava_: i'm playing with an idea about method for programming lpmud-like gamedriver for node.js. If i'm right I would need two things a) ability to use Live Edit to reload functions for objects b) ability to persist cloned objects so that they would not use replaced code on reload. I'm currently looking at either LiveEdit hacks some have done or some nasty eval stuff. eval is big no no right?
[22:49] isaacs: techwraith: no, but there's a thing that will detect the presence of an ipod or iphone
[22:49] evilhackerdude: techwraith: you're practically forcing others to unlock your mac with a photo :)
[22:49] MatthewS has joined the channel
[22:49] evilhackerdude: isaacs: it ate my 3G's battery.
[22:49] ckknight: Jalava_: eval is a typical no-no, but it can be handy in some cases.
[22:49] isaacs: yeah, and it's just laggy enough to be sUPer annoying
[22:49] ckknight: Jalava_: if you know what you're doing, it's fine.
[22:50] techwraith: I'm not looking for super security (and I actually don't want it to log me back on, I just want it to auto lock when I step away
[22:50] Jalava_: gamedrivers usually work like this: objects are created by loading source code and master object is compiled into memory, all new objects are cloned from that
[22:51] Jalava_: i could keep whole creation moment source code as parameter on new object and persist that with properties, allowing me to eval it back into memory
[22:54] ckknight: I'd suggest rather than using eval, just use proper JSON if possible
[22:54] ckknight: eval would only be necessary if you have data such as functions, which should be code-wise anyway.
[22:56] pedrobelo has joined the channel
[22:57] tlrobinson has joined the channel
[22:57] ckknight: what you could do, Jalava_, is load in your base objects and have your cloned objects just make new empty objects that have the master as its prototype.
[22:57] ckknight: or not, depends on your needs.
[22:57] perezd: is it a bad idea to load balance socket.io connections via nginx?
[22:57] perezd: or is there a good load balancing technique? 
[22:57] MikhX has joined the channel
[22:58] Jalava_: i'm looking back to how lpc does it, I see some similarities with js there, main difference is that in lpc prototypes are files on disk and created with kernel func create_object("/path/to/source.c");
[23:00] ckknight: Jalava_: do those prototypes have functions inside them, or is it primarily just data-driven?
[23:00] Jalava_: each lpc object on gamedrivers usually have their own create method, that initializes stuff, registers objects to heartbeat scheduler etc
[23:00] ji0n has joined the channel
[23:01] Jalava_: hmm, time to install dgd and see how they do serialization, they use human readable format iirc
[23:02] MarkMenard has joined the channel
[23:02] mike_miller has joined the channel
[23:03] evilhackerdude: tlrobinson: i have something which converts ansi escape sequences into colored <span>s, has some bugs but does the job
[23:04] tlrobinson: evilhackerdude: cool. does it also do all the other escape sequences for moving the cursor and stuff? my test is "telnet towel.blinkenlights.nl" :)
[23:04] tlrobinson: or just "top"
[23:04] Jalava_: i watched with envy a presentation about cincoms multiuser collaboration smalltalk devtool, they have possibility to live edit code, even multiple devs on same method at same time, while retaining continuous integration and continuous test suite. But then again it is smalltalk :P
[23:04] jscheel has joined the channel
[23:05] perezd_ has joined the channel
[23:05] fairwinds has joined the channel
[23:05] Spion__ has joined the channel
[23:05] evilhackerdude: tlrobinson: no, just colors and bold so far - but there was another project on github which was really awesome. let me see
[23:05] perezd_: has anyone worked with load balancing socket.io processes on a single machine before?
[23:05] perezd_: looking for some advice
[23:05] tlrobinson: evilhackerdude: https://github.com/paddymul/rxvt-js ?
[23:05] Jalava_: perezd_: haproxy?
[23:06] evilhackerdude: tlrobinson: https://github.com/walling/JS-Term/blob/master/termemul.js
[23:06] perezd: Jalava_: does that work out okay with HTTP 101 upgrades, etc?
[23:06] perezd: also, is there a tutorial I can follow (still learning)
[23:07] NuckingFuts has joined the channel
[23:07] tlrobinson: evilhackerdude: is that your project or someone else?
[23:07] Jalava_: perezd: hmm, not sure, i think it should work. don't know specifics on configuring that
[23:07] Jalava_: but we use it on 3x8 process enviroment for handling web requests and socket.io should work just fine there to
[23:08] Jalava_: as haproxy balances based on open connections iirc
[23:08] perezd: ah okay
[23:08] evilhackerdude: tlrobinson: nope. mine is called multi-repl, private for a little while longer until it works.
[23:08] zpao has joined the channel
[23:10] turbofrank: hey guys, has anyone here fired up the EC2 AMI with node built in?
[23:10] turbofrank: I fired it up earlier today, and it seems like there are several issues with the example chat room
[23:12] ryan[WIN] has joined the channel
[23:14] ckknight: Jalava_: I see no reason why you can't have live editing of Javascript code.
[23:14] ckknight: Jalava_: nothing fundamentally prevents such a thing.
[23:15] tlrobinson: evilhackerdude: so if tty.open were working properly which file descriptors are we supposed to read/write to?
[23:17] heythisisdave has joined the channel
[23:17] Aikar: interesting thread going on -dev if you guys arnt on it yet http://groups.google.com/group/nodejs-dev/browse_thread/thread/646e0842d49c1a55
[23:18] evilhackerdude: tlrobinson: still figuring it out, but this seems to work: https://gist.github.com/906738
[23:18] evilhackerdude: pty.open is tty.open without setsid
[23:18] evilhackerdude: bad naming i guess :)
[23:20] heythisisdave has joined the channel
[23:20] evilhackerdude: the whole thing is most awesome on an ipad... open a url and just code some js, python, ruby, haskell, clojure or whatever :-)
[23:21] turbofrank: wth
[23:21] harth has joined the channel
[23:23] tlrobinson: evilhackerdude: hmm not working for me for login/bash
[23:23] Draggor: unomi: I published 0.0.1 of the bot
[23:23] evilhackerdude: tlrobinson: how about ipython?
[23:24] Draggor: ircbot with plugins is finally released woo
[23:24] evilhackerdude: though bash is working, too
[23:24] tlrobinson: orly
[23:26] evilhackerdude: yarly, though i was getting into an infinite loop before
[23:26] evilhackerdude: tty/pty.open only exports one stream which i use to listen on and write to, guess what.
[23:26] mattly_ has joined the channel
[23:28] omni5cience has joined the channel
[23:30] robhawkes has joined the channel
[23:30] pquerna: isaacs: hey, did that always send auth thing go in? should I open a ticket?
[23:30] isaacs: pquerna: oh, no, i forgot about that.  yes, please add an issue for it
[23:30] pquerna: kk
[23:30] isaacs: don't need tons of details, just so i dont' forget
[23:31] [[zz]] has joined the channel
[23:31] harth has joined the channel
[23:32] pquerna: https://github.com/isaacs/npm/issues/781
[23:32] evilhackerdude: tlrobinson: i'm making my repo public, maybe it;s something else i missed
[23:33] harth has joined the channel
[23:34] timmywil has joined the channel
[23:34] locks has left the channel
[23:36] Arania has joined the channel
[23:42] Arania has left the channel
[23:43] vipaca has joined the channel
[23:43] tschundeee has joined the channel
[23:44] copongcopong has joined the channel
[23:45] rchavik has joined the channel
[23:45] graysky has joined the channel
[23:45] eee_c has joined the channel
[23:45] Jalava_: ckknight: i can't do object dumps though on shutdown to provide image like workspace i think
[23:46] ckknight: Jalava_: why not?
[23:46] Jalava_: can you?
[23:46] ckknight: wait, still referring to the live editing stuff?
[23:46] marcello3d has joined the channel
[23:47] ckknight: what I'd do is keep track of all the edits that are made to specific functions and save those in a DB somewhere
[23:47] Jalava_: yeah, something like that, if i dump all functions in object with properties then i'm fine i think
[23:47] ckknight: when you boot up, re-run them
[23:47] marcello3d: new nithub: http://2.no.de/ :D
[23:47] Jalava_: i'll just eval them on load
[23:47] ckknight: right
[23:47] marcello3d: (and new mongolian: http://search.npmjs.org/#/mongolian :D )
[23:47] Jalava_: though i think then I need to keep functions as strings in as copy in my prototype :P
[23:47] ckknight: marcello3d: this just tells me more people need to use my lib.
[23:48] Jalava_: hmm, time to get some sleep and put some thought into this
[23:48] ckknight: Jalava_: yeah, keep your functions as strings, eval them and stick them on the right place, I'd suggest
[23:48] tfe_ has joined the channel
[23:48] nuba has joined the channel
[23:48] Jalava_: it just feels so.. dirty 
[23:49] marcello3d: ckknight: which one?
[23:49] ckknight: marcello3d: escort. I may have only published it this weekend, mind you.
[23:49] Jalava_: non-persistent functionality otoh could just work by liveediting functions and making quick persist / reload functions / reload properties for all loaded objects
[23:50] marcello3d: how is it better than express?
[23:50] ckknight: marcello3d: check out my github page, I detail why. (and express uses connect.router for its routing, I'm only competing with that)
[23:50] dnolen has joined the channel
[23:50] ckknight: Jalava_: I'd say it'd be better to use prototypical inheritance so that when you edit the master object's functions, all are affected.
[23:50] ckknight: Jalava_: so there would be no real need to "reload", just overwrite.
[23:51] tjholowaychuk: ckknight: what is this?
[23:51] ckknight: https://github.com/ckknight/escort
[23:52] tjholowaychuk: ckknight: it looks pretty much just like connect.router
[23:52] tjholowaychuk: bug uglier
[23:52] tjholowaychuk: but*
[23:52] ckknight: I detail many differences, tjholowaychuk
[23:52] nuba has joined the channel
[23:52] tjholowaychuk: you can do all of that with express
[23:53] tjholowaychuk: mapping params to functions to transform them to numbers, objects etc
[23:53] ckknight: URL generation?
[23:53] marcello3d: ah so you have reverse routing
[23:53] tjholowaychuk: what is "url generation" ?
[23:53] ckknight: given a name of a route and its parameters, generate a URL
[23:53] marcello3d: where are the routes named though
[23:53] marcello3d:         routes.get("/about", function(req, res) {
[23:53] marcello3d:             res.end("You are visiting " + url.about());
[23:53] marcello3d:         })
[23:54] marcello3d: I don't get where url.about() determinedf rom
[23:54] ckknight: marcello3d: on binding, in that case, it guesses you want to name it "about"
[23:54] tjholowaychuk: oh a helper
[23:54] ckknight: but you can name it explicitly.
[23:54] marcello3d: hmmm
[23:54] ckknight: routes.get("aboutPage", "/about", f); url.aboutPage()
[23:54] johans_ has joined the channel
[23:54] marcello3d: not sure I like it
[23:54] marcello3d: what about something like routes.about = ...
[23:54] tjholowaychuk: nice idea, but ugly implementation
[23:55] tjholowaychuk: to rails-ish
[23:55] tjholowaychuk: for me
[23:55] marcello3d: tjholowaychuk: tell us what you really think
[23:55] marcello3d: ;D
[23:55] heythisisdave has joined the channel
[23:55] tjholowaychuk: a side from the url generation thing it looks almost identical to connect.router
[23:55] marcello3d: ckknight: are you using it on real projects?
[23:55] ckknight: rails-ish?
[23:55] tjholowaychuk: but uses {} intead of :
[23:55] ckknight: rails uses :
[23:56] ckknight: and the {} is to provide better converter support with arguments and such
[23:56] tjholowaychuk: the url helper things remind me of rails
[23:56] ckknight: marcello3d: a blog I'm working on
[23:56] ckknight: yes, rails does provide similar
[23:56] tjholowaychuk: they are nice to have but super ugly to use all over
[23:56] ckknight: much of my inspiration comes from werkzeug.routing
[23:56] tjholowaychuk: reality is with a custom app you dont really need that
[23:56] ckknight: tjholowaychuk: not in my practice.
[23:56] johans_: Does Stylus support child selectors: article > div
[23:56] ckknight: yes, you do as far as I'm concerned
[23:56] ckknight: and I detail why
[23:56] tjholowaychuk: johans_: of course
[23:57] tjholowaychuk: ckknight: we have a massive app, and we dont
[23:57] johans_: I keep getting error - think it could be since I'm on cygwin
[23:57] ckknight: massive = how many routes?
[23:57] tjholowaychuk: ckknight: thousands
[23:57] tjholowaychuk: let me grep
[23:57] ckknight: well, in an app that I've worked on which has 700, having the URL generation has been very crucial, especially for deep routes.
[23:58] marcello3d: url generation is nice if you change urls ever
[23:58] tjholowaychuk: yeah
[23:58] marcello3d: or refactor stuff
[23:58] tjholowaychuk: just plan your shit better
[23:58] marcello3d: or you want to catch typos earlier
[23:58] tjholowaychuk: thats the only thing MVC like rails is nice for
[23:58] ckknight: also if you have potentially unsafe slugs in URLs, such as having spaces
[23:58] tjholowaychuk: is if you write a really had api and need to refactor
[23:59] mike_miller has joined the channel
