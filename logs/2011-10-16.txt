[00:00] kurmangazy: you can have closures without prototypes. it's not one or the other.
[00:00] kurmangazy: I mean, you don't need one to have the other.
[00:00] AvianFlu: right
[00:00] Brandon_R: i don't like how js oop feels hacky
[00:01] AvianFlu: that's cause it is
[00:01] Brandon_R: :(
[00:01] AvianFlu: it's a functional language more than object-oriented
[00:01] AvianFlu: but really, prototypes work fine
[00:01] AvianFlu: they're just not classe
[00:01] AvianFlu: s
[00:01] Brandon_R: should js have gone full functional or full oop
[00:01] Brandon_R: or a mix is better?
[00:01] AvianFlu: why would anyone go full anything?
[00:01] harthur has joined the channel
[00:01] AvianFlu: take good ideas and use them until they break
[00:01] Brandon_R: to precent too much context switching
[00:01] AvianFlu: then tell other people how far they can be stretched
[00:01] Brandon_R: prevent*
[00:02] kurmangazy: you can't really have full functional. then there would be no side effects. a program without side effects does nothing.
[00:02] AvianFlu: yeah, that too
[00:02] Brandon_R: what do u mean side effects
[00:02] Brandon_R: bugs?
[00:03] AvianFlu: no, output
[00:03] kurmangazy: no, a fully functional program just computes a result. it can't alter anything.
[00:03] jsurfer has joined the channel
[00:03] tmzt: var  stuff = "nothing"; function() { blah(); blah(); blah(); stuff = "something"; blah(); }(); console.log(stuff);
[00:04] jaminja has joined the channel
[00:04] jaminja has joined the channel
[00:04] tmzt: kurmangazy: php 5.3 does, you can use functions directly in a function call
[00:04] kurmangazy: I don't think JS should have been as functional as scheme or SML. those languages can be difficult
[00:05] catb0t has joined the channel
[00:05] kurmangazy: tmzt: I have tried to use closures in PHP and had it not work. I'm not sure if it was a bug in PHP or if I did something wrong. but I decided not to depend on those features.
[00:06] replore has joined the channel
[00:06] replore_ has joined the channel
[00:07] javier_: someone with experience working with VC++ 2010 Express ??
[00:08] javier_: I think I need to reference, bind, add, or something the node.lib to the addon but the project dependencies are readonly :?
[00:08] kurmangazy: I realized something about OO classes. They're an attempt to add data types to everything. And data types serve no purpose other than to prevent you from doing things.
[00:09] kurmangazy: Weak typing gives you simpler code that's easier to read.
[00:09] Brandon_R: console.log
[00:10] kurmangazy: Because you're not constantly climbing over the barriers put up by types.
[00:10] AvianFlu: kurmangazy++
[00:10] v8bot_:  AvianFlu has given a beer to kurmangazy. kurmangazy now has 1 beers.
[00:10] [[zzz]] has joined the channel
[00:10] kurmangazy: thanks for the beer :)
[00:11] EndangeredMassa has joined the channel
[00:13] javier_: done... I used                #pragma comment( lib, "mylib" )
[00:13] javier_: ok, I got the damn node addon compiled on windows with VC++ 2010 Express
[00:15] TooTallNate has joined the channel
[00:16] javier_: BAMMMMMMMMMMMM
[00:16] javier_: it works ;)
[00:17] javier_: finally I got the damn node addon working on windows hah
[00:17] kurmangazy: that was quick javier
[00:17] piscisaureus: javier_: please share what you did to get it working
[00:18] piscisaureus: javier_: unless you were using cygwin, but I suppose that's not the case
[00:18] javier_: hah I don't think so! it took me 4 hours or something, that's too much to get something this simple just compiled and running
[00:19] javier_: ok, I think I have to take some minutes more to write down the steps
[00:19] kurmangazy: it would have taken me longer, but then, I would have been staring at VC documentation
[00:20] AvianFlu: javier_ bmeck (bradleymeck on irc) will want to hear about that for sure
[00:20] CarterL has joined the channel
[00:21] javier_: well, in fact, didn't know he already have made the windows support for DLLs, early this day I thought I have to patch for myself node
[00:23] javier_: until you pointed me that he did, and by what I see, he have made it work at least a week or 2 weeks ago
[00:23] javier_: may be he had no time to document the process yet
[00:23] AvianFlu: he's a very busy guy
[00:24] kurmangazy: bbl
[00:24] zmbmartin has joined the channel
[00:24] tauren: I often see "module.exports" and just "exports" used, sometimes in the same project. Is one recommended over the other?
[00:24] no0n has joined the channel
[00:24] piscisaureus: javier_: I'd like to just get a high-level overview of the steps you took
[00:24] catb0t has joined the channel
[00:25] piscisaureus: javier_: We still haven't gotten around to figure this out, it would be great if you could help up bootstrap "the" way to build addons on windows.
[00:26] no0n: i was trying to install an app that required node-waf the other day so I installed node from source to the latest unstable version. now npm is broke. i'd like to revert to stable (which is still installed) but calling node always uses the 0.5.10 version. so i deleted /usr/local/bin/node but now i get "no such file found" cause it still looks there for it. /usr/bin has node 0.4.x installed
[00:27] no0n: not sure how to get back
[00:28] javier_: sure, basically I downloaded the fork of mbeck, compiled it, created a dll with VS and pasted the code from the c/c++ addon documentation chapter, compiled it, renamed as .node and thats all, but it has a variety of details to make all that work, so I will take some minutes and post a solution so everyone can get it working
[00:30] no0n: fwiw, sudo make uninstall in src directory spits out: The project was not configured: run "waf configure" first!. tried that but it errord. now sudo make uninstall spits out "error: Could not read the file '/home/noon/node/src/node/wscript'"
[00:30] jmalina has joined the channel
[00:32] mandric has joined the channel
[00:32] ronnieboy has joined the channel
[00:34] DualDetroit: Yo dawgs!
[00:35] DualDetroit: I found the problem! It was my code :p
[00:36] SubStack: hoora
[00:36] SubStack: y
[00:36] tmzt: javier_: compiled it as a dll?
[00:36] langworthy has joined the channel
[00:36] javier_: sure
[00:37] DualDetroit: Does nginx support different server blocks based on the HTTP method?
[00:37] tmzt: if should be able to with conditions of some sort
[00:38] joshkehn has joined the channel
[00:38] tmzt: since REQUEST_METHOD shoudl be a variable
[00:38] DualDetroit: tmzt: That's what I think :p
[00:38] DualDetroit: ACTION can't find anything though :-/
[00:39] DualDetroit: Wait a minute!!!!
[00:39] DualDetroit:  if ($request_method = GET) I think will work
[00:39] DennisRas has joined the channel
[00:39] DualDetroit: nginx rocks :)
[00:40] kerx has joined the channel
[00:40] ronnieboy has joined the channel
[00:41] Sorella has joined the channel
[00:45] jacobolus has joined the channel
[00:45] erichynds has joined the channel
[00:46] zmbmartin has left the channel
[00:48] no0n: hmph, rebuilt from source and reinstalled. works fine. did sudo make uninstall and it uninstalled fine. /usr/bin still contains old ubuntu package installed node stable. but running node -v returns can't find
[00:50] neilk_ has joined the channel
[00:50] neilk_ has joined the channel
[00:50] enmand_ has joined the channel
[00:50] cmeiklejohn has joined the channel
[00:54] JakeyChan has joined the channel
[01:02] neurodrone has joined the channel
[01:03] TRUPPP: hi. i want to use bogart and just want to make sure that instead like with express i dont have to build up directory structure like express builds up for itself. am i right? thank you
[01:03] tmzt: express doesn't build anything
[01:03] tmzt: you can write express in one file if you want
[01:04] TRUPPP: ah okay so its free choice? i always thought, that express needs this structure
[01:04] tmzt: var express=require('express'); var app = express.createServer(); app.get('/test/', function(req,res){res.send("Hi!");}); app.listen(8888);
[01:04] erichynds has joined the channel
[01:05] tmzt: try pasteing that in app.js and run it
[01:05] stagas has joined the channel
[01:06] dthompso99: anyone know if cloud9 in npm is broken? (wrong place to ask, i know)
[01:06] sdwrage has joined the channel
[01:06] Aphelion has joined the channel
[01:07] cody_ has joined the channel
[01:09] dubenstein has joined the channel
[01:10] fzzzy has joined the channel
[01:10] AD7six has joined the channel
[01:11] dubenste1n has joined the channel
[01:13] dubenste1n has joined the channel
[01:13] zmbmartin has joined the channel
[01:14] dubenste1n has joined the channel
[01:15] franciscallo has joined the channel
[01:17] Brandon_R has joined the channel
[01:17] Brandon_R: hgi
[01:18] fzzzy has joined the channel
[01:20] dingomanatee has joined the channel
[01:20] dingomanatee: Hi there
[01:21] dingomanatee: what is the creation profile for an AssertionError in node assert?
[01:21] zmbmartin: can anyone explain to me why --> = registry_form.registry_form.sections[0].fields[0][0].number <-- works in a jade template and I am using i and j and indexes in the loops but as soon as I do --> = registry_form.registry_form.sections[i].fields[j][0].number <-- it no longer works. But if I view i and j it is 0 and 0 respectivly?
[01:22] tmzt: what about =i =j ?
[01:22] tmzt: in the same level of indent
[01:26] pizthewiz has joined the channel
[01:26] roryW has joined the channel
[01:26] ninjapig has joined the channel
[01:27] trotter has joined the channel
[01:27] zmbmartin: tmzt: are you asking what =i and =j show or to try using the = sign in front of them?
[01:28] tmzt: what they show at the same level of idnent
[01:28] tmzt: also what happens, not output at all from the template?
[01:28] tmzt: undefined is handled just fine, it's syntax errors that stop the parsing
[01:28] tmzt: (jade is a little broken in that sense)
[01:29] Kunda has joined the channel
[01:29] zmbmartin: tmzt: as I want them to i = 0 and j = 0 in that seqeunce and trying to use the = in there says syntax error
[01:29] tmzt: what?
[01:29] skyl has joined the channel
[01:30] tmzt: I mean on a line by itself, above that one with the correct indentation
[01:30] tmzt: = i
[01:30] tmzt: = j
[01:30] tmzt: does that give the value you expect
[01:30] tmzt: are i and j passed in the data object or params to the res.view() ?
[01:30] tmzt: are you using express 1.0 or 2.0
[01:31] enmand_ has joined the channel
[01:31] tmzt: jade doesn't automatically get variables that are assigned in the js file
[01:31] tmzt: they have to be passed to it
[01:32] piscisaureus has joined the channel
[01:34] zmbmartin: tmzt: here is a snippet of what I am trying to do --> https://gist.github.com/1290399
[01:35] dubenstein has joined the channel
[01:37] Brandon_R: hey
[01:37] Brandon_R: do you guys think jade and stylus are good?
[01:37] Brandon_R: or there is a better solution out there
[01:37] CarterL has joined the channel
[01:37] Brandon_R: dom
[01:38] kenperkins has joined the channel
[01:38] Wa has joined the channel
[01:39] dubenstein has joined the channel
[01:40] dubenstein has joined the channel
[01:41] zmbmartin: tmzt: anything look off on my gist?
[01:42] Brandon_R: k
[01:46] neoesque has joined the channel
[01:46] n8ji has joined the channel
[01:47] catb0t has joined the channel
[01:49] kriszyp2 has joined the channel
[01:49] chrislorenz has joined the channel
[01:50] cjm has joined the channel
[01:51] gregmoreno has joined the channel
[01:54] catb0t has joined the channel
[01:56] MUILTFN has joined the channel
[01:57] astropirate has joined the channel
[01:57] AphelionZ has joined the channel
[01:59] roryW has left the channel
[01:59] mandric has joined the channel
[02:00] zmbmartin: tmzt: are you still around?
[02:01] ciupaciups has joined the channel
[02:02] digman543 has joined the channel
[02:02] dreamdust has joined the channel
[02:03] Casan has joined the channel
[02:04] shipit has joined the channel
[02:06] goodoo has joined the channel
[02:09] kriszyp has joined the channel
[02:11] Determinist has joined the channel
[02:11] digman543 has joined the channel
[02:17] devongovett has joined the channel
[02:19] chrislorenz has joined the channel
[02:20] airportyh has joined the channel
[02:20] stagas has joined the channel
[02:22] joshkehn has joined the channel
[02:24] avalanche123 has joined the channel
[02:25] joshkehn has left the channel
[02:27] k1ttty has joined the channel
[02:30] bronson has joined the channel
[02:31] JdpB42 has joined the channel
[02:36] EndangeredMassa has left the channel
[02:38] ximus has joined the channel
[02:38] Wizek has joined the channel
[02:39] avalanche123 has joined the channel
[02:40] ximus: Hi, new to node. I get an unexpected output when I read from a file using  require('fs').readFileSync(filename, "utf-8")
[02:40] intel_ix has joined the channel
[02:41] ximus: it returns as a string the first line or so of the file and ends short with (… length:1777)
[02:41] ximus: and the rest of the file is not in the string, any thoughts??
[02:42] intel_ix: How do I increase the max memory of node? I run into out of memory after trying to parse a few books
[02:42] intel_ix: it says "FATAL ERROR: JS Allocation failed - process out of memory"
[02:45] LuckySMack_ has joined the channel
[02:46] mandric has joined the channel
[02:47] andrewff1 has joined the channel
[02:47] tmzt: zmbmartin: sure
[02:47] up_the_irons has joined the channel
[02:48] zmbmartin: tmzt: nevermind I figured it out. Thanks for the help.
[02:48] tmzt: can you add the js part?
[02:48] tmzt: oh ok
[02:48] tmzt: what was it?
[02:48] tmzt: oh, j is not a number
[02:48] tmzt: it's an object
[02:49] zmbmartin: I forgot that not all Objects had a number field so as it was looping when it hit a object without number it borked as undefined.
[02:49] tmzt: no, I mean j is itself one of the objects in .fields
[02:49] tmzt: or is that wrong? I don't know what abstraction jade uses for each
[02:50] tmzt: same as .forEach(obj,idx) ?
[02:50] zmbmartin: no i and j were right it was jut my data that was the problem
[02:51] zmbmartin: if you do - each obj in objs you don't have access to the index but - each odj, i in objs i increments each loop
[02:52] franciscallo has joined the channel
[02:56] issackelly_ has joined the channel
[02:59] githogori has joined the channel
[03:01] deedubs has joined the channel
[03:01] mikeycgto has joined the channel
[03:01] Ax1 has joined the channel
[03:02] up_the_irons has joined the channel
[03:03] Guedes has joined the channel
[03:05] Guedes has left the channel
[03:07] sonnym1 has joined the channel
[03:08] mikolalysenko: Is there a way to log when a garbage collect occurs in node?
[03:09] boltR has joined the channel
[03:09] mikolalysenko: I'm getting these random and dramatic ping spikes in my app, and I wonder if that could be the cause
[03:10] javier_: ok I finished the instructions to build a node.js windows c/c++ addon, since I don't have a blog I'm publishing it as an article on my website, so you can check it out at http://coderesearchlabs.com, under the Articles section
[03:11] k1ttty has joined the channel
[03:11] cmeiklejohn has joined the channel
[03:14] smathy has joined the channel
[03:16] zmbmartin has left the channel
[03:16] dexter_e has joined the channel
[03:17] dshaw_ has joined the channel
[03:18] airportyh: Hello all, I want the most efficient way to create a string of length n containing all spaces
[03:18] airportyh: is this close? Array(this.cols + 1).join(' ')
[03:18] airportyh: or Array(n + 1).join(' ')
[03:19] SubStack: most efficient?
[03:19] airportyh: yeah
[03:19] SubStack: who cares?
[03:19] SubStack: computers are fast now
[03:19] airportyh: :)
[03:19] tmzt: cool hack though
[03:20] airportyh: SubStack: since you are here, I am using node-charm
[03:20] airportyh: and was trying to determine the terminal size
[03:20] SubStack: yep there's something in there to do that
[03:21] airportyh: ended up calling out to the "resize" program and parsing its output
[03:21] airportyh: there is?
[03:21] airportyh: how?
[03:21] towski has joined the channel
[03:22] Danielpk has joined the channel
[03:22] SubStack: oh wait
[03:23] SubStack: haha I meant to implement this but I guess I forgot to
[03:23] airportyh: ha ok
[03:23] airportyh: well how would you have done it?
[03:24] zmbmartin has joined the channel
[03:28] EndangeredMassa has joined the channel
[03:30] stagas has joined the channel
[03:35] k1ttty has joined the channel
[03:37] matyr has joined the channel
[03:37] goodoo has joined the channel
[03:39] Spion_ has joined the channel
[03:40] mikolalysenko: Anyone know how to trace memory allocations in node.js?
[03:40] mikolalysenko: I seem to have a small leak in my server....
[03:41] jackbean has joined the channel
[03:42] yozgrahame has joined the channel
[03:44] javier_: mikolalysenko: mmm no, but you can trace the garbage collecting by using --trace-gc, that might show you when it is cleaning to check again your memory usage
[03:44] mikolalysenko: yeah, I tried that...
[03:44] mikolalysenko: I also tried --log_gc, but that doesn't tell you where the object got created at
[03:44] javier_: in any case I'm not sure if there is no a flag under --v8-options listing that might help you, I don't know v8 enough yet
[03:44] mikolalysenko: I was wondering if there was some (even slow) way to track line numbers with --log_gc
[03:46] javier_: it has something called  --trace_alloc but seems not to be helpful in your case
[03:47] shedinja has joined the channel
[03:49] JakeyChan has joined the channel
[03:49] karmakillernz has joined the channel
[03:50] mikolalysenko: log_gc seems useful, but it is missing line numbers for objects...
[03:55] CrankyMonkey has joined the channel
[03:57] jtsnow has joined the channel
[04:00] Nuck: Just tried to install forever, got npm ERR! Unresolveable cycle detected
[04:00] Nuck: o_O
[04:00] Nuck: On winston, apparently
[04:03] AvianFlu: nuck: forever@0.7.1 just installed for me fine
[04:03] johnnychimpo has joined the channel
[04:04] mikolalysenko: are there any heap profilers for node out there that actually work?
[04:05] Nuck: AvianFlu: Hmmm I had some issues with NPM and Sudo, I'm gonna try reinstalling and trying again
[04:07] mandric has joined the channel
[04:09] isaacs has joined the channel
[04:10] towski has joined the channel
[04:10] dexter_e has joined the channel
[04:15] Nuck: Hup it worked
[04:15] Sorella has joined the channel
[04:16] gavin_huang has joined the channel
[04:19] socketio\test\68 has joined the channel
[04:21] criswell has joined the channel
[04:26] up_the_irons has joined the channel
[04:27] dexter_e has joined the channel
[04:28] skm has joined the channel
[04:29] Jabbers has joined the channel
[04:32] massivebiz has joined the channel
[04:34] chrislorenz has joined the channel
[04:38] langworthy has joined the channel
[04:39] secoif has joined the channel
[04:39] ditesh|cassini has joined the channel
[04:39] cainus: hey all...anyone know how to sort in mongoose?  all I can find are random outdated blogs
[04:40] stagas has joined the channel
[04:43] chrislorenz has joined the channel
[04:45] yozgrahame has joined the channel
[04:45] massivebiz has joined the channel
[04:45] CrankyMonkey1 has joined the channel
[04:48] goodoo_ has joined the channel
[04:51] JSManiacs has joined the channel
[04:52] JSManiacs has left the channel
[04:54] up_the_irons has joined the channel
[04:56] avalanche123 has joined the channel
[04:56] mrryanjohnston has joined the channel
[04:56] infynyxx has joined the channel
[05:01] elliottcable: Nuck › Awake?
[05:02] elliottcable: Nuck › I have good news; I’ve decided to address your concerns by splitting from.js into a series of entirely disconnected modules, if I can.
[05:02] Nuck: elliottcable: Which you prolly can't :P
[05:03] jtsnow has joined the channel
[05:03] confoocious has joined the channel
[05:03] confoocious has joined the channel
[05:03] elliottcable: Nuck › `from-resolver` for the core ResolutionMutator machinery, `from-async` for the actual asynchronous loader, `from-sync` for the synchronous version, `from-wharf` for the imports/exports, `from-magic` for the globals-modification machinery
[05:03] d_low has joined the channel
[05:04] kenperkins has joined the channel
[05:04] elliottcable: `from-compiler` for the for-web compiler, and `from` itself as a meta-module that installs all of the above
[05:04] jetienne has joined the channel
[05:04] Nuck: wow
[05:04] Nuck: elliottcable: I'm impressed
[05:04] Nuck: Beyond impressed
[05:04] elliottcable: Nuck › why’s that?
[05:05] Nuck: elliottcable: The sheer amount of modularity you got
[05:05] elliottcable: … lol, it’s far more than that, bro
[05:05] elliottcable: you should *see* the ResolutionMutator algorithm
[05:05] elliottcable: it really is sheer genius; and yet I’m also yanking it out and completely replacing it
[05:05] nerdy has joined the channel
[05:06] elliottcable: beause at the moment there’s only really a single tree of mutators, and that means anybody extending the system with their own mutators (which is ridiculously easy to do) has to directly modify the mutators that *everybody else uses*
[05:06] elliottcable: after my rewrite, a single file, a single `Acquisition`, or an entire project’s worth of files, can share a unique tree of `ResolutionMutator`s that won’t affect the global package of them that ships with `from-resolver` itself
[05:07] dexter_e: Should models have access to the session object ?
[05:07] elliottcable: dexter_e › er, what?
[05:07] dexter_e: I wonder if in strikt MVC models should see the session 
[05:07] dexter_e: or should controllers only see the session 
[05:08] Nuck: elliottcable: I want you to reread the last two messages as somebody who is just thinking of trying out from.js and tell me whether you'd choose that or require() just by the apparent learning curve.
[05:08] Nuck: ;P
[05:08] joshkehn has joined the channel
[05:08] Nuck: elliottcable: This is what I said about from.js being too complicated
[05:08] elliottcable: lol
[05:09] elliottcable: none of that is really going to be presented to a first-time user.
[05:09] elliottcable: for a first-time user, it boils down to this:
[05:09] dexter_e: perhaps I worded the question wrong
[05:09] Nuck: It's sheer genius, sure, but it's also insanely fucking complicated to anyone new :P
[05:09] elliottcable: || from('percival')
[05:09] elliottcable: ||   // . . .
[05:09] purr: elliottcable: ReferenceError: from is not defined
[05:09] elliottcable: || percival.perceive(something)
[05:09] elliottcable: lol timeoutfail
[05:09] purr: elliottcable: ReferenceError: percival is not defined
[05:10] elliottcable: Nuck › that’s basically most easily solved by good documentation. Documentation that caters well to a first-time visitor as well as someone more interested in exploring all of the power available to them.
[05:10] Nuck: elliottcable: What is this "something"?
[05:10] elliottcable: Nuck › which “something?̦ Hrm?
[05:10] Nuck: elliottcable: perceive(something)
[05:10] elliottcable: anything *shrug*
[05:10] elliottcable: percival is an entirely separate thing of mine
[05:10] elliottcable: was just using it as an example.
[05:11] galaxywatcher has joined the channel
[05:11] Nuck: elliottcable: But what is something for?
[05:11] dexter_e:   Example:     if you want to run a filter between certain action like  deleteResource  ,  the model would have to be queried like  User.hasRole("can_delete)  .  So I wonder if the code that looks at session to see which user is logged in is Ok to put in the model. 
[05:11] elliottcable: the *entire extent* of `from` that a first-timer cares about is this line of code:
[05:11] elliottcable: `from('something')`
[05:11] elliottcable: which in terms of simplicity, is even simpler than `something = require('something').something;`
[05:11] Nuck: elliottcable: Not entirely
[05:12] elliottcable: if I finish lazy-loading to my satisfaction, it will be even easier than that
[05:12] elliottcable: the entire quantity of code required to use `from` will be this:
[05:12] Nuck: elliottcable: It's also less explicity
[05:12] dexter_e: I guess this is more of a system design question, but I wonder if anyone can recommend something for the way its done in node.
[05:12] Nuck: -y
[05:12] elliottcable: || percival.perceive(something)
[05:12] purr: elliottcable: ReferenceError: percival is not defined
[05:12] elliottcable: Nuck › well, you’re either talking to noobs here, or you’re not. If they’re not noobs, then they’re going to use the more-explicit and more-powerful invocation methods.
[05:13] Nuck: elliottcable: Actually, more implied is worse for noobs
[05:13] elliottcable: Nuck › you can’t say “`require` is better because it’s simpler,” and then when I show that `from` is simpler, say “well now `require` is better because it’s less simple”
[05:13] elliottcable: well, in any case, all of that is a discussion for documentation
[05:13] jackbean has joined the channel
[05:13] linkgoron: lol
[05:13] Nuck: elliottcable: No, simplicity is not fewer characters
[05:13] elliottcable: and I am completely open to discussions about which methodology I should expose in the first page of noob-level tutorial, i.e. the getting-started snippet
[05:14] Nuck: elliottcable: How do I make it explicit what variable is being set?
[05:14] joshkehn has left the channel
[05:14] elliottcable: depends on whether you want synchronicity or not.
[05:14] elliottcable: `var foo = from('foo')` at its most basic.
[05:14] elliottcable: if you’re Proper™, and being asynchronous,
[05:15] Nuck: so it's roughly the same as require
[05:15] Nuck: syncily speaking
[05:15] Nuck: elliottcable: Well, startup doesn't need to be async
[05:15] elliottcable: || from('something')(function(something){
[05:15] elliottcable: ||   /* use `something` */ })
[05:15] elliottcable: Nuck › yes, it does.
[05:15] Nuck: And 90% of require calls are on startup
[05:15] purr: elliottcable: ReferenceError: from is not defined
[05:15] Nuck: elliottcable: Why?
[05:15] elliottcable: lazy loading; massively speeds up boot.
[05:16] elliottcable: anyway, I just popped in to let you know I’m splitting it up
[05:16] Nuck: o_O
[05:16] elliottcable: we can argue how much `require()` sucks later
[05:16] elliottcable: time for breakfast!
[05:16] Nuck: elliottcable: Can I wait for an array of things to load?
[05:16] elliottcable: yep
[05:16] elliottcable: you don’t have to wait, though.
[05:16] Nuck: elliottcable: Now *that* is good
[05:16] Nuck: Well, I do wait
[05:16] elliottcable: they’ll all be loaded in parallel, as will the entire tree of dependencies below them.
[05:17] elliottcable: if you use the `from-lazy` features, then it will “short-circut” that to immediately and synchronously load a subtree of dependencies if you reference something before it’s finished loading.
[05:17] Nuck: elliottcable: So it's promise-y?
[05:17] gavin_huang has joined the channel
[05:18] elliottcable: which leads to a bit of duplication (the originally-dispatched filesystem requests will still occur for the now-redundant asynchronous loading), but there’s no way around that; and the performance loss is minimal
[05:18] chjj: node's require is amazing
[05:18] elliottcable: chjj › ಠ_ಠ
[05:18] elliottcable: ಠ_ಠ chjj
[05:18] purr: Let it be known that elliottcable disapproves of chjj.
[05:18] elliottcable: Nuck › nah, you mis-understood
[05:18] chjj: is that what that means?
[05:18] AvianFlu: chjj: elliottcable is a troll, he just really goes through this much trouble to do it
[05:18] Nuck: Node's require *is* amazing.  Relative to CommonJS.
[05:18] elliottcable: Nuck › this isn’t like `foo = from_promis_ey('foo')`, and then `foo` is a “promise”
[05:19] elliottcable: AvianFlu › what? I’m not a troll.
[05:19] Nuck: promise-based require() would be badass tho haha
[05:19] cmeiklejohn has joined the channel
[05:19] chjj: elliottcable: you dont like sync require === troll
[05:19] elliottcable: uh.
[05:19] chjj: numbers dont lie
[05:19] elliottcable: yeah, whatever bro.
[05:19] Nuck: elliottcable is srs bzns.
[05:19] chjj: i didnt know you were a bro
[05:19] Nuck: chjj: Better than a brony.
[05:20] elliottcable: *shrug* your call what you use. You like `require()`, use `require()`. I, personally, think it’s completely and totally against the spirit of node, and it pisses me off to no end, so I’m replacing it for my own use.
[05:20] AvianFlu: is that a young centaur in a polo shirt nuck?
[05:20] chjj: i want quadruple equal to be implemented in v8
[05:20] chjj: so i could say elliottcable ==== troll
[05:20] Nuck: AvianFlu: Nope, just a hipster who watches MLP
[05:20] chjj: because he doesnt like sync require!
[05:20] AvianFlu: sounds like patch time to me
[05:21] elliottcable: chjj › Pretty sure you’re the troll, not me, bro
[05:21] Nuck: typeof elliottcable === 'troll'
[05:21] dexter_e: In strict MVC applied to Node.js  do Models ever access the Session Object ?   Anyone?
[05:21] Nuck: Fix'd.
[05:21] elliottcable: Nuck › if you’re on http://getflow.com/, gimmie your e-mail, and I’ll invite you to the `from`-lists.
[05:21] SubStack: synchronous require is best require
[05:21] Nuck: dexter_e: Strict MVC in Node?
[05:21] Nuck: LOL
[05:21] AvianFlu: SubStack++
[05:21] v8bot_:  AvianFlu has given a beer to SubStack. SubStack now has 8 beers.
[05:22] elliottcable: // ++ SubStack ≥ SubStack++
[05:22] Nuck: elliottcable: Is that some site for a drug that helps with urination o_O
[05:22] dexter_e: Nuck:  Strict MVC in Node.js = LOL ?
[05:22] elliottcable: so many trolls in here tonight, and I’m not one of them.
[05:22] elliottcable: ACTION walks off
[05:22] Nuck: dexter_e: Yup
[05:22] Nuck: elliottcable: haha
[05:22] Nuck: !best sync require
[05:22] purr: SYNCREQUIRE IS BESTREQUIRE
[05:22] AvianFlu: nuck: he started walking away, don't ruin a good thing
[05:23] dexter_e: Nuck: May I ask why ?
[05:23] Nuck: AvianFlu: Hey, I happen to think elliottcable is a pretty cool guy.  He kills aliens and doesn't afraid of anything.
[05:23] chjj: ruby on rails made mvc stupid when they made ruby on rails
[05:24] Nuck: dexter_e: Because MVC is painful and Node is unpainful.
[05:24] Nuck: Roll your own loose MVC :P
[05:24] SubStack: I don't like it when a tool imposes a structure upon my program.
[05:24] chjj: mvc should be a general philosophy, not some ridiculous framework
[05:24] Nuck: SubStack: Precisely.
[05:24] chjj: imo
[05:25] SubStack: I want creative control, you know?
[05:25] dexter_e: chjj: I agree.  So I wonder if you guys recommend having models access the session object.  In a "loose" mvc
[05:25] EndangeredMassa: SubStack: In general, I agree. However, it can be nice to follow a strict structure so that the platform can infer a lot about how it works, requiring less configuration/wiring code.
[05:25] Nuck: dexter_e: No, because sessions are generally in the general vicinity of the model
[05:26] Nuck: EndangeredMassa: ...
[05:26] Nuck: EndangeredMassa: config through .json
[05:26] Nuck: And done.
[05:26] Nuck: Just request from an object
[05:26] chjj: ill die before i give up my ability to configure!
[05:26] Nuck: Include a default config
[05:26] dexter_e: Nuck: What do you mean by "sessions are generally in the general vicinity of the model "
[05:26] dexter_e: pardon, not grocking
[05:26] Nuck: dexter_e: How are sessions implemented?  Usually on a database, as in the model
[05:26] issackelly_ has joined the channel
[05:27] EndangeredMassa: Nuck: Wiring code, then. ASP.NET MVC and Ruby on Rails do this a bit. That's all I meant.
[05:27] SubStack: EndangeredMassa: perhaps but I like it better when new modules arise to tackle small problems
[05:27] xajler has joined the channel
[05:27] Nuck: dexter_e: Honestly, I jsut use Express + Mongoose + connect-mongo for sessions
[05:27] LuckySMack__ has joined the channel
[05:28] Nuck: SubStack: And by "when new modules arise" you mean "when you code modules"
[05:28] SubStack: even if it takes longer, the final product fits in my head all at once a lot more easily
[05:28] dexter_e: Nuck: Thanks. Good point about sessions being in the db
[05:28] Nuck: SubStack: lots of small modules > one behemoth
[05:28] dexter_e: It sounds like everyone does it this way?  Session memory store isn't used eh?
[05:29] Nuck: You can ignore some bits and add others
[05:29] SubStack: Nuck: well I could just as well characterize lots of modules as "aimless wandering" or a "random walk"
[05:29] dexter_e: Express has the session object.
[05:29] chjj: dexter_e: im an advocate of cookie sessions, thats me though
[05:29] SubStack: but I still like that better than trying to up-front the overall design
[05:29] Nuck: dexter_e: memory store doesn't scale to large numbers of users or to multi-server setups
[05:29] Nuck: dexter_e: What's your database?
[05:29] dexter_e: CouchDB
[05:30] Nuck: dexter_e: You can put any storage behind the session object I'd bet
[05:30] SubStack: dexter_e: when sessions are in the database you don't lose all your sessions when your app crashes or gets restarted
[05:30] Nuck: dexter_e: It's fully modular
[05:30] dexter_e: SubStack: good point.
[05:30] SubStack: also this: http://github.com/substack/node-sesame
[05:30] dexter_e: So for even basic middleware like checking user permissions the DB gets a query on every request eh?
[05:30] SubStack: if express sessions start getting too annoying
[05:31] Nuck: dexter_e: https://github.com/tdebarochez/connect-couchdb
[05:31] dexter_e: Substack: Nuck: Thanks!
[05:31] Nuck: dexter_e: middleware providing couch-backed session storage
[05:31] SubStack: dexter_e: in sesame's case the sessions are all in memory and the database is just there to back them up
[05:32] SubStack: not sure how express sessions do it
[05:32] Nuck: dexter_e: This one is built upon express sessions
[05:32] Nuck: SubStack: I believe it's queried
[05:32] Nuck: Might be cached
[05:32] Nuck: Well, I *know* it's queried
[05:32] Nuck: I highly advise using Redis no matter your database
[05:32] dexter_e: But even if sessions are stored in the DB the request must be processed and the SID for that request must be extracted.. Do you keep that code in your model?
[05:32] Nuck: It's awesome.
[05:32] Nuck: dexter_e: huh?
[05:33] Nuck: dexter_e: With connect sessions, it handles it from start to finish
[05:33] dexter_e: Right but you still have to grab the SID to query the DB right?
[05:33] Nuck: dexter_e: It'll set a cookie with the SID in it, then extract on each request
[05:33] Nuck: And then it'll look it up
[05:33] dexter_e: Nuck: right, so is your model extracting the SID ?
[05:33] Nuck: And set it on req.session
[05:33] Nuck: dexter_e: What do you mean?
[05:34] Nuck: dexter_e: Connect will do the database management for the sessions db
[05:34] Nuck: There is no model, no magic
[05:34] Nuck: Just a simple storage system
[05:34] dexter_e: I see
[05:34] krazyj has joined the channel
[05:34] krazyj has left the channel
[05:34] yuwang has joined the channel
[05:35] Nuck: I still recommend Redis, but that's just because it's teh awesomes.
[05:35] dexter_e: Does Redis do MultiVersionConcurency ?
[05:35] dexter_e: and conflict management?
[05:36] ninjapig has joined the channel
[05:36] ninjapig has joined the channel
[05:37] Nuck: dexter_e: Dunno, it's just Really Fucking Basic™
[05:37] Nuck: dexter_e: It is a key-balue store in-memory
[05:37] dexter_e: sweet
[05:38] dexter_e: Nuck: connect-couchdb looks awesome too, thanks for that!
[05:38] Nuck: With HDD storage for persistence, but that's set up separate
[05:38] Nuck: dexter_e: No problem :)
[05:38] Nuck: I'm a Mongo user, but I'm using Redis for sessions
[05:40] dexter_e: node-sesame looks sweet too I wonder if it will take couchDB too
[05:42] dexter_e: Anything with harmony proxies intimidates me though 
[05:42] dexter_e: I may be unworthy
[05:43] shipit_ has joined the channel
[05:47] kab3wm has joined the channel
[05:48] elliottcable: Hadn’t somebody written a native extension for the old `promise.wait` functionality?
[05:48] elliottcable: basically, something to synch the JS reactor loop and *block* until an asynchronous event ocurred?
[05:48] elliottcable: I cao do it myself, but I don’t want to duplicate effort
[05:49] yuwang has joined the channel
[05:53] Emmanuel_ has joined the channel
[05:54] mmalecki has joined the channel
[05:55] stagas has joined the channel
[05:55] gavin_huang has left the channel
[05:58] fangel has joined the channel
[05:58] EhevuTov has joined the channel
[06:00] elliottcable: SubStack › you’d probably know the answer to that
[06:01] SubStack: pretty sure there is something like that on npm
[06:01] SubStack: I can't remember what it was called though
[06:01] isaacs: Fiber
[06:01] isaacs: s
[06:02] isaacs: you want marcell's fibers utility
[06:02] elliottcable: ah, you’re awake isaacs
[06:02] TomY has joined the channel
[06:02] elliottcable: was there anything else you needed before you can merge the changes I made into master?
[06:03] isaacs: i'd like to get ben or ryan to review it as well
[06:03] elliottcable: isaacs › good by me. Who’s ben?
[06:03] isaacs: ben == bnoordhuis
[06:03] elliottcable: ah
[06:03] elliottcable: he already said “DO NOT WANT” regarding looking at it
[06:04] isaacs: haha
[06:04] elliottcable: I gather he finds `Context`s scary
[06:04] elliottcable: ryah might, but he’s busy
[06:04] isaacs: herby would be good, too
[06:04] elliottcable: herby looked
[06:04] isaacs: yeah, ryah's a busy man
[06:04] elliottcable: his only worry was “Is this okay by v8?”
[06:04] elliottcable: which I settled
[06:04] isaacs: kewl
[06:04] elliottcable: does he frequent IRC?
[06:04] isaacs: yeah, i saw that
[06:04] isaacs: ry?  or herby?
[06:04] elliottcable: herby, lol
[06:04] isaacs: i've seen him, but not that often
[06:05] elliottcable: I kind of wish ryah would sign Node over to you or bnoord or somebody
[06:05] elliottcable: so he could entirely focus on libuv
[06:05] SubStack: I wonder if the 0.5.x node api will have a nice way to stop streams
[06:05] elliottcable: libuv is … godly-awesome, and I’m going to have serious need of it in about two or three months coming, hereh
[06:05] elliottcable: so, selfishly, I want him to have as much time to focus on it and make it as awesome as possible by then ;D
[06:05] SubStack: stop .pipe() I mean
[06:05] SubStack: without ending
[06:05] elliottcable: SubStack › write it?
[06:05] SubStack: elliottcable: I did
[06:05] elliottcable: I can’t imagine it being that difficult. Hm.
[06:05] elliottcable: SubStack › ah? link?
[06:06] SubStack: https://github.com/substack/node-pipestop
[06:06] elliottcable: hahahaha
[06:06] elliottcable: “node-pipestop”
[06:06] elliottcable: now there’s a man who backs his words up with code.
[06:06] elliottcable: ++ SubStack
[06:06] purr: Let it be known that elliottcable loves SubStack.
[06:07] elliottcable: SubStack › I love the API. Very slick, three methods, with each returning the previous.
[06:08] SubStack: well pretty much the problem is that there's no way to call the cleanup code inside of Stream.prototype.pipe without sending an "end" event
[06:08] Aria has joined the channel
[06:08] SubStack: and I ran into a case where I want all the backpressure goodness of pipe() but I also needed to stop listening without killing the stream
[06:08] smtlaissezfaire has joined the channel
[06:09] SubStack: a bit too much of a niche case maybe
[06:09] maletor has joined the channel
[06:09] SubStack: it's for bouncy so I can take the socket and pipe() it along until the next request comes in for the case of connection: keep-alive
[06:11] elliottcable: SubStack › yeah, I get it;
[06:11] elliottcable: SubStack › that seems like a common enough use case to belong in core
[06:11] elliottcable: or, that’s a lie
[06:11] elliottcable: that seems an *intuitive* enough use case, to belong in core.
[06:11] SubStack: maybe there could be an .unpipe(stream)
[06:12] Mokona has joined the channel
[06:12] elliottcable: isaacs › node fibers look very neat; they don’t seem to be full fibers, but I’m pretty sure I can do exactly what I need to do with this without writing extra C++ code.
[06:12] SubStack: .pipe() already keeps track of the pipe count so the machinery to implement it is already there
[06:12] purr has joined the channel
[06:13] isaacs: SubStack: i think we're going to need to do that in core, as well.
[06:13] isaacs: if http.IncomingMessage and http.OutgoingMessage are going to .pipe() to their underlying socket
[06:13] SubStack: I could make a patch if you want
[06:13] isaacs: nah, let's see if it's needed
[06:13] isaacs: .
[06:13] SubStack: k
[06:14] necrodearia has joined the channel
[06:14] AvianFlu: SubStack, you can do .pipe(destination, {end: false}), can't you?
[06:14] SubStack: you can
[06:15] SubStack: but then I would still have to send 'end' events down the wire
[06:15] SubStack: or um
[06:15] SubStack: yeah that wouldn't even do what I want
[06:15] SubStack: which is to unbind all the listeners
[06:15] k1ttty has joined the channel
[06:16] djbell has joined the channel
[06:17] SubStack: exposing this somehow would be boss: https://github.com/joyent/node/blob/master/lib/stream.js#L133-L151
[06:17] SubStack: which is what pipestop does
[06:18] justinTNT has joined the channel
[06:21] lv has joined the channel
[06:22] lv: how to run the sample code available at http://socket.io/#home   ?
[06:23] elliottcable: Damnit, nah
[06:23] elliottcable: isaacs › it looks like node-fibers may be unhelpful to me; it only blocks “inside of the fiber.” I need to block the entire node thread, for the people *calling* me, who themselves will probably not be using fibers.
[06:23] isaacs: elliottcable: that is evil.
[06:23] elliottcable: isaacs › I can probably write an extension to do this fairly easily, it’s not like it’s a complex task on the surface
[06:23] elliottcable: isaacs › yes, I know
[06:23] elliottcable: isaacs › well, synchronous require is evil.
[06:24] elliottcable: so, fight fire with fire.
[06:24] isaacs: elliottcable: sync require is a start-time thing.  it's not evile.
[06:24] elliottcable: then doing what I’m about to do at start-time isn’t evil either ;D
[06:24] isaacs: elliottcable: having multiple threads of js execution, without fair warning and outside of your sandbox, is evil.
[06:25] elliottcable: all I’m doing is allowing asynchronous acquisition and initialization to exist “below the stack” wherein some person did a synchronous-acquisition request.
[06:25] elliottcable: either A) we block everything for their sake,
[06:25] elliottcable: or B) *everything anywhere below him* has to also be synchronous.
[06:26] skyl has joined the channel
[06:26] isaacs: A seems like a fine choice, no?
[06:26] isaacs: just don't do that if it's bad to do that.
[06:26] justinTNT: why doesn't connect.static return 404 for missing files?
[06:28] Daegalus has joined the channel
[06:29] intel_ix has left the channel
[06:29] diogogmt has joined the channel
[06:31] elliottcable: isaacs › yes, A is exactly the goal :3
[06:31] elliottcable: isaacs › but “just don}t do that if it’s bad to do that” isn’t really an option.
[06:31] isaacs: that's what we do in node today
[06:31] isaacs: you get one js thread, everything waits for require()
[06:31] elliottcable: isaacs › as evidenced by the horde of people jumping on the SYNCREQUIRE IS BESTREQUIRE bandwagon in here a few hours ago, users *don’t really understand* the repurcussions of their synchronous requires
[06:31] elliottcable: isaacs › and thus we have to cater to users who are going to request synchronous initialization when that isn’t possible
[06:31] isaacs: elliottcable: i understand the repercussions of sync require.
[06:32] elliottcable: to do that … we’re just going to have to A), regardless of whether A) is evil or not /=
[06:32] isaacs: we used to have require.async.
[06:32] elliottcable: yah, I know :3
[06:32] isaacs: and toyed with an async define(), and a few other patterns.
[06:32] elliottcable: mmhmm, I remember
[06:32] isaacs: they are all shit in serverside code.
[06:32] elliottcable: I was watching, idly, the entire time. Been away from Node for a while, but I’ve always kept an eye on what y’all are trying to do to “solve” the asynchronous initialization problem in an inherently synchronous language.
[06:32] isaacs: and for client-side code, you need to have it all cached up front anyway
[06:33] isaacs: the language isnt' the problem.
[06:33] isaacs: the problem is that async require is too complicated.
[06:33] elliottcable: oh, it certainly is.
[06:33] elliottcable: A truely asynchronous language has no issue with any of this.
[06:33] elliottcable: I should know, I designed the first one. ;D
[06:33] isaacs: elliottcable: and you are probably also a significant chunk of its userbase.
[06:33] elliottcable: absolutely
[06:33] isaacs: and you don't see this as a problem...?
[06:33] elliottcable: anyway, let’s see what I can do with fibers
[06:34] elliottcable: isaacs › that’s only because it’s not complete as of yet. I’m not personally working on it, others have taken up that torch.
[06:34] elliottcable: Currently too buried in the necessities of “fixing Node” for my purposes
[06:34] isaacs: elliottcable: so.  in the meantime.
[06:34] isaacs: i don't believe that the language is the problem.
[06:34] isaacs: or that js needs to be somehow "more async"
[06:34] elliottcable: I absolutely do *not* think it should be.
[06:34] elliottcable: It’s a synchronous language, and one I love. That’s just the way it is.
[06:35] isaacs: from a language pov, yui3's add/use, or amd, or require.async, are fine.
[06:35] elliottcable: In a synchronous language, if you want to do asynchronous stuff … you go to threads/fibers, or a reactor loop, or similar.
[06:35] dgathright has joined the channel
[06:35] isaacs: in an async language, you don't have to worry about such things, because you're not using it.
[06:35] isaacs: it's the haskell problem.
[06:36] elliottcable: isaacs › so, regarding my plans; you mentioned something about having multiplepaths of JS execution; can you cover that a bit more?
[06:36] SubStack: I like it when asynchronous code stands out.
[06:37] isaacs: to paraphrase mark mayo, the history of computer science fuckups has been largely dominated by attempts to make network operations and local operations look the same.
[06:37] rendar has joined the channel
[06:37] AvianFlu: isaacs++
[06:37] v8bot_:  AvianFlu has given a beer to isaacs. isaacs now has 6 beers.
[06:38] isaacs: whehter it's fibers, nfs, or whatever, when you make your network operations look like local operations, it's a source of frequent and surprising pain.
[06:38] gf3: mmm pain
[06:38] isaacs: from the pov of a server under load, the file system may as well be the network.  you have to treat it as a "long time", because it is.
[06:38] lv: hwo to run the sample code available at http://socket.io/#home         ?
[06:39] isaacs: from the pov of a server just starting up, however, the file system can be treated as a local data store, because you've only got one request blocking on it.
[06:39] isaacs: (the request of the sysadmin to start the server, that is()
[06:39] EhevuTov: lv, you need to install Node.js and the npm package manager and then read this: http://socket.io/#how-to-use
[06:39] elliottcable: isaacs › yes, yes, yes
[06:39] elliottcable: but then you end up with things like rails’ boot-time.
[06:39] isaacs: elliottcable: so, when i say that the language isn't the problem, what i really am saying is, if you are covering up the discrepancies with the language, then you're part of the problem.
[06:40] isaacs: also!
[06:40] elliottcable: asynchronous initialization is *necessary* for some things; and even for those which it isn’t, asynchronous-acquisition allows for massive-parallelization of the acquisitions themselves
[06:40] isaacs: making async look sync is not *all that much worse* than making sync look async!
[06:40] isaacs: this is what erlang does that makes me go batty
[06:40] elliottcable: agreed, 100%
[06:40] elliottcable: my issue here isn’t with that
[06:40] isaacs: elliottcable: solving the wrong problem, man.
[06:40] elliottcable: That’s what I *already do*.
[06:40] isaacs: you can block for TEN SECONDS at startup time, and it's *fine*
[06:41] isaacs: like, serving no requests, etc.
[06:41] SubStack: I agree from experience
[06:41] elliottcable: er, not sure what your definition of fine is.
[06:41] isaacs: 10, 9, 8, .... 
[06:41] AvianFlu: as do I
[06:41] elliottcable: that’s fine for production, sure.
[06:41] isaacs: 10 seconds.
[06:41] elliottcable: not for development.
[06:41] SubStack: but I'm trying to think of some concrete examples to demonstrate this
[06:41] isaacs: elliottcable: in development you can block for 1 second on each request.
[06:41] isaacs: but even waiting 10 seconds isn't so bad in dev.
[06:41] SubStack: implicit green thread models for instance don't lock up the server
[06:42] SubStack: but they can be surprising
[06:42] elliottcable: surprising == bad
[06:42] isaacs: however, adding latency of even 100ms in production on each request, is completely intolerable
[06:42] elliottcable: isaacs › of course, but how does this affect that?
[06:42] isaacs: especially if doing so blocks the whole server.
[06:42] elliottcable: this is *purely* a discussion of boot-time semantics
[06:42] isaacs: elliottcable: what i'm saying is, yes, i get it, you can't block once the server is up.  but who gives a crap about boot time?
[06:42] SubStack: maybe that's the biggest benefit: that node programs can only ever do exactly 1 thing at once
[06:42] lv: <EhevuTov>  My NPM and Socket.io are installed at root folder. After installing them, i tested chat application from https://github.com/ry/node_chat, this one is working. after that i took server and client code from http://socket.io/#home. when i run  $ node server.js i got   "info  - socket.io started". when i lauched it in browser "Welcome to socket.io." is displayed,  but not expected out come, any idea? how to test tehse? any other f
[06:42] isaacs: you'll be booted *faster* if you do it sync than async!
[06:42] elliottcable: Obviously not you :D
[06:42] elliottcable: but I do.
[06:43] elliottcable: how is that, isaacs?
[06:43] isaacs: elliottcable: because you've only got one hard drive.
[06:43] elliottcable: er, that’s assuming that the only initialization you do *is* loading more modules, and that’s absolutely not true
[06:43] elliottcable: at least, not in the cases I work with
[06:43] isaacs: elliottcable: what are you doing on every boot that can't be cached?
[06:44] elliottcable: remember, you have to differentiate “synch acquisition versus asynch acquisition” and “synch initialization versus asynch initialization”
[06:44] elliottcable: anyway, I have to get back to actually dev’ing
[06:44] elliottcable: but you were right about the multiple-threads-of-JS thing
[06:44] isaacs: i've written a bunch of node programs, many of them in production, and many platforms before node, and i have never encountered the problem youer' describing.
[06:44] EhevuTov: lv, it sounds like your node.js is working. You're probably just having a socket.io issue now. I bet your ip address in your client-side socket.io initialization is wrong
[06:44] elliottcable: I can probably do something with v8 contexts, since everything I do is already completely separate contexts, but I’m still not sure how thread-safe v8 is … will need to investigate
[06:44] dreamdust has left the channel
[06:45] SubStack: browserify could really benefit from better caching
[06:45] SubStack: meh
[06:45] gf3: elliottcable: I feel like you're in every channel on IRC… ever
[06:45] elliottcable: and probably better off in general not to do that at all, and just say “synchronicity is out, unless you want to be a colossal ass to everybody ‘below’ you on the stack”
[06:45] isaacs: so far, every time i've thought that i needed parallelization at boot time, what i actually needed was better caching.
[06:46] elliottcable: gf3 › /whois elliottcable
[06:46] gf3: elliottcable: just as I suspected
[06:46] elliottcable: isaacs › basically, this sort of speaks to what we were discussing earlier about MVC:
[06:47] elliottcable: isaacs › if you go with caching, you’re basically forcing a particular model upon the programmer. Yes, modular separation, and the identical-ness of a given module to all those using it, is a nice idea, and probably what you damn-well *should* be doing 90% of the time
[06:47] elliottcable: just like MVC separation is what you should be doing 90% of the time.
[06:47] elliottcable: but I’ve thought about that for, well, since the *original* raging `require()` debates back in 2009
[06:47] isaacs: elliottcable: show me what you can't ship with require()
[06:47] elliottcable: and decided that caching is not the solution, at least, not at the framework-level. The module author should be doing that, if it’s appropriate for their module.
[06:48] elliottcable: isaacs › ask me later, I’ll try to post some examples.
[06:48] isaacs: k
[06:48] elliottcable: isaacs › now that I‘ve answered my “can I block Node” question, I’m about to walk off :x
[06:48] isaacs: feel free to post them whenever and tell ircretary to tell me about them
[06:48] isaacs: i'm genuinely curious
[06:49] elliottcable: isaacs › basically, no API I’ve ever created is your bog-standard `module.exports.<this> = <that>`, or even as simple as `Someconstructor; Someconstructor.prototype.<this> = <that>`
[06:49] TomY has joined the channel
[06:49] isaacs: elliottcable: perhaps you should try writing simpler apis
[06:49] elliottcable: hah
[06:49] elliottcable: perhaps I should :D
[06:50] elliottcable: anyway, I’m off. isaacs: hit me later if ryah or bnoord wants to talk to me about that pureeq!
[06:50] sdwrage has joined the channel
[06:50] isaacs: have fun
[06:50] SubStack: most of my modules have a single export and it's a function
[06:51] loob2 has joined the channel
[06:52] versicolor has joined the channel
[06:56] kenperkins has joined the channel
[06:57] lv: <EhevuTov>  can you suggest me where i t went wrong in my code http://pastebin.com/Y7YXgXBF   ?
[06:58] Aria: lv: Is there an error there? What doesn't it do that you expect it to do?
[07:00] matyr has joined the channel
[07:00] DennisRasmussen has joined the channel
[07:01] mikolalysenko: what is the best way to do heap profiling in node right now?
[07:01] n8ji has joined the channel
[07:01] skm has joined the channel
[07:01] mikolalysenko: specifically I just want to log all the memory allocations by line/filename
[07:01] lv: <Aria> <EhevuTov> suggested : check your server-side socket.io IP address to make sure it's what it should be. Then check your client-side code IP address and make sure it's pointing to your server socket.io correctly , But both IPs are same.
[07:02] lv: <Aira>  when i run  $ node server.js i got   "info  - socket.io started". when i lauched it in browser "Welcome to socket.io." is displayed,  but not expected out come, any idea? how to test tehse? any other files required?
[07:02] Aria: What IS the expected outcome?
[07:02] EhevuTov: lv you should put your <script> stuff between your <head></head>
[07:02] aliem has joined the channel
[07:02] Aria: EhevuTov: No, you shouldn't.
[07:03] EhevuTov: Aria, why not?
[07:03] Aria: EhevuTov: Only things that are synchronously required for the page to operate belong there.
[07:03] Aria: It blocks the entire page loading until that script loads. It serializes loads.
[07:03] EhevuTov: Aria, well, he has to load the module first correctly
[07:04] Aria: Nothing about that script requires it to load in the head.
[07:04] Aria: Most scripts belong at the foot of <body>.
[07:04] EhevuTov: lv, you know the output goes to your console.log right? It's not going to show up in your HTML
[07:05] lv: <EhevuTov> yes but it is not deing displayed.
[07:05] Aria: Hence my question asking about what expected behavior is.
[07:06] EhevuTov: Aria, I'm pretty sure he's expecting a simple request response and then vice versa
[07:06] EhevuTov: he's just trying to get socket.io working
[07:07] lv: <Aria>  my: hello: 'world'  shoub be displayed
[07:07] Aria: Where are you expecting it to be displayed, lv?
[07:07] lv: on server side console.
[07:08] Aria: Why there?
[07:09] Casan has joined the channel
[07:09] magnetik has joined the channel
[07:10] tshpaper has joined the channel
[07:11] EhevuTov: he's wanting both a server-side and a client-side input/output
[07:11] Druid_ has joined the channel
[07:12] Aria: EhevuTov: I'd rather let him explain what his wants or expectations are. What people actually expect and what you expect them to expect are often different.
[07:12] lv: <Aria> as console.log(data) is there in server code, as well in client code. the code i took from  http://socket.io/#home
[07:12] Aria: Right. But the hello world is emitted in the server and arrives at the client.
[07:12] SoulRaven has joined the channel
[07:12] Aria: So you're not going to find hello world on the server. Look in the _client's_ console.
[07:13] lv: <Aria> in my system it is not being displayed.
[07:13] EhevuTov: lv, just to confirm, you're using a developer console in your browser right?
[07:14] lv: <EhevuTov> i didnät get you now
[07:14] Aria: What browser are you using?
[07:15] lv: <Aria> Mozilla
[07:15] Aria: Okay. Do you have the javascript console open?
[07:15] Aria: Or firebug's console view?
[07:16] lv: no, i am running it from Terminal.
[07:16] dnyy has joined the channel
[07:18] ryanrolds: What we've got here is a failure to communicate.
[07:19] ryanrolds: lv: You're running the browser from the terminal or node?
[07:19] Aria: You're running the client code in a terminal?
[07:19] linkgoron: que GnR?
[07:19] ryanrolds: Aria: Yeah, this is getting a bit confusing.
[07:20] lv: <ryanrolds>  what i mean terminal is just ubunto console
[07:21] ryanrolds: How are you trying to use the run the client code? Most people run it a browser like Firefox or Chrome.
[07:21] lv: <ryanrolds>  i am not runing it from terminal, just opend it expicitly
[07:22] lv: <ryanrolds>i just given a path in Moxila-Firefox http://localhost:8080/
[07:22] ErikCorryV8 has joined the channel
[07:23] lv: <ryanrolds> then how to run client code?, its an html file.
[07:23] ryanrolds: The javascript loaded by the browser should run.
[07:24] ryanrolds: Have you worked with Javascript before?
[07:25] lv: <ryanrolds> yes in 2 proj in Windows
[07:25] lv: <ryanrolds> not i Ubuntu, i am using Ubuntu for NodeJS
[07:26] ryanrolds: The HTML file can have <script></script> elements that contain or include external JavaScript.
[07:28] mikolalysenko: Is there a way to track heap allocations in node.js/v8?
[07:28] HT has joined the channel
[07:28] mikolalysenko: I've been trying all night and am frankly at a loss...
[07:29] mikolalysenko: I tried using v8-profiler, and ended up patching it to get it to work on the latest version
[07:29] mikolalysenko: but the output it gives isn't much better than what you get with --log_gc
[07:29] n8ji_ has joined the channel
[07:30] mikolalysenko: I specifically want to try to find the line of code at which each allocation took place, much like valgrind's track-origins feature
[07:30] nroot7 has joined the channel
[07:31] nroot7: The module documentation for node.js says that calls to require are cached. It will return the exact same object across multiple calls to require
[07:32] nroot7: Then what is the correct way to create multiple connection objects to server using simple-xmpp as it starts with xmpp = require('simple-xmpp')
[07:33] EhevuTov: lv, do you have any error messages?
[07:35] replore has joined the channel
[07:35] replore_ has joined the channel
[07:35] Morkel has joined the channel
[07:37] Margle has joined the channel
[07:37] lv: <EhevuTov> the same output as before, even after including   <script type="text/javascript">   </script>
[07:37] EhevuTov: lv, so you are getting error messages? What are they?
[07:37] deoxxa: lv: don't prefix <name> before what you type, it makes it look like a quote
[07:38] lv: ok
[07:38] ryanrolds: nroot7: Are you wanting to create one connection and use it several times?
[07:40] deoxxa: nroot7: that's most likely returning an instance of the function; you can probably do `var x1 = new xmpp(), x2 = new xmpp();'
[07:40] lv: its not an error message, in the browser i get only 'Welcome to socket.io.' in the console i get  "info  - socket.io started" nothing else
[07:40] deoxxa: (though i'm not familiar with the package in question)
[07:40] ryanrolds: deoxxa, I think you have it.
[07:40] deoxxa: lv: can you pastebin some code?
[07:40] herbySk has joined the channel
[07:40] SamuraiJack has joined the channel
[07:41] nroot7: ryanrolds: I want to make multiple client connections
[07:41] DeltachaosDeskto has joined the channel
[07:42] DeltachaosDeskto: hi @all
[07:42] mmalecki has joined the channel
[07:42] nroot7: deoxxa: var v = new xmpp(); returns error
[07:42] ryanrolds: nroot7: Then deoxxa has it right. var conn1 = new require('SomeInterface')(); should work.
[07:42] lv: here it is http://pastebin.com/4bMSRZFj
[07:42] EhevuTov: lv, you don't have any HTML or code that would write "Welcome to socket.io" in your browser, right?
[07:43] EhevuTov: ?yet you're seeing it
[07:43] lv: yes, it is not there, even though i am getting it
[07:43] ryanrolds: nroot7: In the module setup a constructor to make the connection.
[07:44] EhevuTov: lv, I don't think you've loaded the right <script src=?> file
[07:44] EhevuTov: the socket.io file for the client side should be socket.io.js
[07:45] nroot7: ryanrolds: ya right now I need something like express.createServer([args]); to let me create multiple connections
[07:45] lv: i chaged it, while  doing trials, can you suggest the right one?
[07:46] deoxxa: lv: the problem is the socket.io include
[07:46] ryanrolds: nroot7: Then just have the function that call a constructor and returns it.
[07:46] deoxxa: one second
[07:47] EhevuTov: lv, for me, I think it's: /usr/local/lib/node_modules/socket.io/lib/socket.io.js
[07:47] deoxxa: you want to do <script type="text/javascript" src="http://localhost:8080/socket.io/socket.io.js"></script>, lv
[07:47] __doc__ has joined the channel
[07:47] EhevuTov: deoxxa, I don't think he's running a web server to host the socket.io. It looks like it's just a socket.io server
[07:48] deoxxa: socket.io is a web server
[07:48] deoxxa: well, it creates one if it needs one, i mean
[07:48] ninjapig has joined the channel
[07:48] ninjapig has joined the channel
[07:49] EhevuTov: hrm, I'll have to double check. If you're referring to the examples, it uses express to web serve; at least from my experience
[07:49] deoxxa: io.listen(port) is roughly the same as io.listen(require("http").createServer().listen(port))
[07:49] EhevuTov: ah, interesting
[07:49] ryanrolds: EhevuTov: That is my experience too. I wasn't ware that socket.io hosted it client code without Express.
[07:49] deoxxa: you can also pass an express instance into .listen()
[07:49] ryanrolds: *hosted it's
[07:50] deoxxa: or anything that has the right methods on it, i suppose
[07:50] ryanrolds: Right, but when you pass it to express it also binds additional routes to serve the client code is my understanding how how it works.
[07:50] andrewreedy has joined the channel
[07:50] deoxxa: ryanrolds: it takes over /socket.io, yes
[07:50] k1ttty has joined the channel
[07:51] ryanrolds: Does socket.io normally serve the client libraries without express?
[07:51] deoxxa: yep
[07:51] deoxxa: that's how we're using it at work
[07:51] deoxxa: no express necessary
[07:51] EhevuTov: how would you do that?
[07:51] ryanrolds: Oh, learn something new everyday. 
[07:51] deoxxa: it's not actually binding it on express, but rather intercepting it on the http.Server instance afaik
[07:51] CIA-48: node: 03koichik 07 * rcdec7e3 10/ doc/api/tls.markdown : docs: improvement tls example - http://git.io/hy5RFg
[07:52] andrewreedy: Has anyone dealt with socket.io and antivirus blocking websockets?
[07:52] EhevuTov: deoxxa, actually it looks like there might be an example on their site
[07:53] deoxxa: andrewreedy: no, but i've dealt with a stupid corporate firewall - forcing it to polling mode sorted it out pretty quick
[07:53] lv: neither this <script type="text/javascript" src="http://localhost:8080/socket.io/socket.io.js"></script>, nor this  /usr/local/lib/node_modules/socket.io/lib/socket.io.js changing  any out come.
[07:54] deoxxa: lv: what do you get when you open http://localhost:8080/socket.io/socket.io.js in your browser?
[07:54] andrewreedy: do you force it for all cases or just when it doesnt get fast response 
[07:54] n8ji has joined the channel
[07:54] deoxxa: andrewreedy: for this one customer, all cases, unfortunately
[07:54] ryanrolds: deoxxa: I get the feeling he hasn't worked with browser side JS before.
[07:54] secoif: Hey guys, is there something like console.log that will also print out all prototype properties ?
[07:54] lv: same out put as  before: Welcome to socket.io.
[07:55] deoxxa: hrm :/
[07:55] ryanrolds: lv: You're using Firefox right? Do you have Firebug installed?
[07:56] EhevuTov: deoxxa, yeah, I'd have to see example on how to serve files straight out of socket.io I guess
[07:56] EhevuTov: lv, that means that your library isn't loading properly, then
[07:56] lv: sorry for previous what do you get when you open http://localhost:8080/socket.io/socket.io.js in your browser? it opens the file.
[07:56] deoxxa: what file exactly?
[07:56] EhevuTov: you need to find where the socket.io.js file is located and make sure you link to it
[07:56] deoxxa: like, what do you see>?
[07:57] lv: this file is Socket.io.js; /*! Socket.IO.js build:0.8.5, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */  /**  * socket.io  * Copyright(c) 2011 LearnBoost <dev@learnboost.com>  * MIT Licensed  */
[07:57] EhevuTov: lv, do a find /usr -name "socket.io.js" on your console and figure out where that file is
[07:57] EhevuTov: hrm
[07:58] EhevuTov: well, then <script src=/socket.io.socket.io.js> is right
[07:58] EhevuTov: er, /socket.io/socket.io.js
[07:59] lv: find /usr -name "socket.io.js" not giving any search result
[08:00] lv: arya@ubuntu:~$ find /usr -name "socket.io.js" arya@ubuntu:~$ find /usr -name socket.io.js arya@ubuntu:~$ find /usr -name Socket.io.js arya@ubuntu:~$ 
[08:01] stagas has joined the channel
[08:02] whitman has joined the channel
[08:04] lv: EhevuTov the find command not producing any result.
[08:06] EhevuTov: weird
[08:06] magnetik has joined the channel
[08:06] EhevuTov: lv, I'm at a loss. I don't know what the problem is
[08:07] lv: but there is a file in /node_modules/socket.io/lib/socket.io.js
[08:07] jackbean has joined the channel
[08:10] arcanis has joined the channel
[08:11] mmalecki has joined the channel
[08:12] deoxxa: lv: that's a different file, follow the tutorial without skipping anything and you'll be fine
[08:12] deoxxa: the socket.io.js that goes into the browser is actually the socket.io client
[08:12] necrodearia has joined the channel
[08:14] Drakonite has joined the channel
[08:15] lv has joined the channel
[08:17] confoocious has joined the channel
[08:18] pekim has joined the channel
[08:20] Jon__ has joined the channel
[08:21] lv: whith out changing code from http://client socket.io is also not workin.
[08:21] tdegrunt has joined the channel
[08:22] lv: whith out changing client   code from http://socket.io is also not working.
[08:26] wolftankk has joined the channel
[08:31] stagas has joined the channel
[08:32] johnnychimpo has joined the channel
[08:33] thalll has joined the channel
[08:35] __tosh has joined the channel
[08:36] mmalecki has joined the channel
[08:38] eddyb has joined the channel
[08:39] eddyb: it seems there aren't any packages of node.js for opensuse other than 0.4 http://software.opensuse.org/search?baseproject=openSUSE%3A11.4&exclude_debug=true&include_home=true&q=nodejs
[08:39] metellus has joined the channel
[08:39] deoxxa: i think there's a strict policy of maintaining one package version per user
[08:39] deoxxa: so that sounds about right
[08:41] eddyb: deoxxa: you can have how many versions you want
[08:41] deoxxa: (i was taking a stab at opensuse)
[08:41] TomY has joined the channel
[08:44] stonebranch has joined the channel
[08:44] cognominal has joined the channel
[08:45] outbounder has joined the channel
[08:48] Cromulent has joined the channel
[08:49] DeltachaosDeskto: what themplate engine are you using?
[08:50] mc_greeny has joined the channel
[08:52] FireCat has joined the channel
[08:55] wgo has joined the channel
[08:55] d0k has joined the channel
[08:56] eddyb: ok, I can fork the package and use the new version
[08:59] n8ji has joined the channel
[09:00] mmalecki has joined the channel
[09:01] eddyb: hmm, so I can be safe, should I always place event listeners (like, on('error', ...);) before connecting to a socket?
[09:02] FireCat has joined the channel
[09:04] mmalecki has joined the channel
[09:04] wgo has joined the channel
[09:06] vns has joined the channel
[09:06] tlynn has joined the channel
[09:06] Ang3 has joined the channel
[09:11] n8ji has joined the channel
[09:11] matyr has joined the channel
[09:21] TomY has joined the channel
[09:21] stagas has joined the channel
[09:21] Qbix2 has joined the channel
[09:23] nroot7 has joined the channel
[09:25] jbpros has joined the channel
[09:25] arcanis has joined the channel
[09:27] nroot7: I am trying to solve this for some hours now, but cant.
[09:27] nroot7: This file https://github.com/arunoda/node-simple-xmpp/blob/master/lib/simple-xmpp.js
[09:28] nroot7: creates SimpleXMPP object and assigns it to exports
[09:28] skoom has joined the channel
[09:29] nroot7: Once I get the xmpp object by doing require('simple-xmpp'), how can I create multiple instances of it
[09:29] eddyb: nroot7: that's not how OOP in javascript works
[09:29] eddyb: I mean, you're doing it wrong
[09:30] eddyb: SimpleXMPP.prototype.func = function() {....}; after the constructor, not this.func = function(){....}; inside the constructor
[09:30] eddyb: also, exports.SimpleXMPP = SimpleXMPP; at the end of the file
[09:31] eddyb: not module.exports = new SimpleXMPP(); before the actual class
[09:31] nroot7: eddya, are you talking about the code in simple-xmpp.js file
[09:31] nroot7: I am not the author of that file
[09:31] nroot7: Just trying to use it
[09:31] eddyb: nroot7: that file is a fail
[09:32] eddyb: if you want something good, fork it and apply what I said
[09:32] nroot7: I should probably export SimpleXMPP
[09:32] mmalecki has joined the channel
[09:33] nroot7: So in the end I can do things like new SimpleXMPP()
[09:33] Margle has joined the channel
[09:33] Cromulent has joined the channel
[09:34] mraleph has joined the channel
[09:36] FireCat has joined the channel
[09:38] LuckySMack_ has joined the channel
[09:38] lioku has joined the channel
[09:39] lioku has left the channel
[09:42] shedinja_ has joined the channel
[09:44] neynenmo has joined the channel
[09:45] shanez has joined the channel
[09:47] mmalecki has joined the channel
[09:48] eddyb: YES
[09:48] eddyb: https://build.opensuse.org/package/show?package=nodejs&project=home%3Aeddybb%3Anodejs
[09:48] eddyb: it built
[09:48] ryanmcgrath has joined the channel
[09:48] avih has joined the channel
[09:50] japj: eddyb: I see both the 0.4.12 tar and the 0.5.9 tar files are in the sources?
[09:50] japj: eddyb: https://build.opensuse.org/package/files?package=nodejs&project=home%3Aeddybb%3Anodejs
[09:51] shanez has left the channel
[09:52] eddyb: because I can't delete the old one
[09:52] eddyb: "File removal failed because this was no POST request. This probably happened because you were logged out in between. Please try again."
[09:52] eddyb: I'm assuming temporary bug
[09:53] japj: eddyb: which version of v8 is it building against? (it is using a shared version of v8, not the one bundled with node)
[09:53] eddyb: there a version of v8 in the same project
[09:54] eddyb: https://build.opensuse.org/package/files?package=v8&project=home%3Aeddybb%3Anodejs
[09:54] eddyb: I can always up the version on that
[09:54] githogori has joined the channel
[09:54] eddyb: I've reused the most up-to-date project I could find
[09:54] superjudge has joined the channel
[09:54] simenbrekken has joined the channel
[09:56] bencc has joined the channel
[09:57] superjudge has left the channel
[09:57] japj: eddyb: nodejs master tree is currently at v8 3.7.0 and 3.6.5 added the new incremental garbage collector
[09:57] HT has joined the channel
[09:57] japj: eddyb: but the opensuse build system is a very interesting thing ;)
[09:57] mmalecki has joined the channel
[09:58] eddyb: japj: indeed it is
[09:58] eddyb: you can add custom build targets, too, I think
[09:58] mmalecki: hm. why should I use path.resolve instead of path.join on Windows?
[09:59] eddyb: actually, let me change my project so any distro can use it
[10:01] japj: mmalecki: resolve and join seem completely different beasts? http://nodejs.org/docs/v0.5.9/api/path.html#path.join
[10:01] mmalecki: japj: I know, but somewhere I've seen that we should use path.resolve on windows
[10:01] japj: instead of join?
[10:02] mmalecki: yeah
[10:02] mmalecki: I just don't remember where ;/
[10:03] Ginlock has joined the channel
[10:03] shoerain has joined the channel
[10:03] eddyb: japj: I'll build without shared v8 and cares
[10:03] eddyb: japj: https://build.opensuse.org/package/live_build_log?arch=x86_64&package=nodejs&project=home%3Aeddybb%3Anodejs&repository=openSUSE_11.4
[10:04] eddyb: enjoy F5ing it from time to time
[10:04] japj: mmalecki: https://github.com/isaacs/npm/issues/1426 ?
[10:04] mmalecki: yes, thank you!
[10:04] japj: eddyb: well, I am on a windows machine atm, so I won't F5 ;)
[10:04] japj: mmalecki: google is your friend ;)
[10:05] mmalecki: japj: well, I've grepped node wiki :p
[10:05] japj: mmalecki: I started searching the mailinglists, but that resulted in 0 hits
[10:06] N0va` has joined the channel
[10:06] mmalecki: k, I've done some changes
[10:07] mmalecki: all test paths should be resolved now
[10:07] mmalecki: I'll review and push it
[10:07] japj: wildcard support? 
[10:07] mmalecki: japj: not yet, sorry :(
[10:07] mmalecki: japj: but it'll be done :)
[10:08] tauren: I need to call a callback function once a bunch of async file writes have been completed. I'm calling the file writes in a loop. How would I do this? Here's some sample code: https://gist.github.com/1290730
[10:08] japj: mmalecki: k, what module were you talking about then?
[10:09] japj: mmalecki: btw, are the person formally known as DrMcKay?
[10:10] eddyb: japj: the node I built initially works
[10:10] siddMahen has joined the channel
[10:10] japj: ouch.. 9998 nodejs github followers
[10:12] yuwang has joined the channel
[10:12] tauren: I'm considering using a counter to keep track of how many callbacks have completed. would that be a good solution?
[10:12] m4rcs: when i run npm on my project folder i get: pm WARN async@0.1.12 package.json: bugs['web'] should probably be bugs['url'] what does that mean and how do I fix that?
[10:13] githogori has joined the channel
[10:13] japj: m4rcs: you can't fix that yourself, the async author needs to push a new update to npm
[10:13] m4rcs: ah ok
[10:13] siddMahen: Hey, just curious, why isn't it possible to require() a module in a vm.runInThisContext function?
[10:13] SubStack: because it is possible
[10:13] SubStack: you just need to pass in require to the context
[10:14] eddyb: japj: https://build.opensuse.org/project/show?project=home%3Aeddybb%3Anodejs
[10:14] eddyb: nodejs and npm
[10:14] eddyb: like fucking clockwork
[10:14] siddMahen: ahh thanks :)
[10:15] DennisRasmussen has joined the channel
[10:15] japj: eddyb: it seems it's not building on other platforms due to unresolved items?
[10:15] eddyb: beats me
[10:16] eddyb: https://build.opensuse.org/package/view_file?file=nodejs.spec&package=nodejs&project=home%3Aeddybb%3Anodejs&srcmd5=33050ced06ad36d3603fc64a9cf79ca2
[10:16] eddyb: must be some differently named packages
[10:17] japj: eddyb: btw, npm is at version 1.0.99 already ;)
[10:17] japj: eddyb: welcome to the world of package naming conventions
[10:17] githogori has joined the channel
[10:18] eddyb: japj: bleah
[10:18] eddyb: I only needed 0.5 for zlib and buffers
[10:19] andrewfff has joined the channel
[10:19] TheJH has joined the channel
[10:21] LuckySMack_ has left the channel
[10:22] elliottcable: tauren? Really?
[10:22] elliottcable: please tell me that’s not a WoW reference, and I’m just making unfounded assumptions … 
[10:22] japj: lol, I was thinking ... Horde??
[10:22] tauren: nope. that's my real name... everyone asks me that
[10:22] elliottcable: 63 S 432 35 -!-  ircname  : Tauren Mills
[10:22] elliottcable: ick
[10:23] tauren: hey now...
[10:23] elliottcable: http://www.quora.com/Tauren-Mills
[10:23] elliottcable: is that you?
[10:23] tauren: yup
[10:23] elliottcable: Please don’t take offense if I forever assume that it’s a psuedonym.
[10:23] elliottcable: :x
[10:24] tauren: my parents were hippies... what can i say. and i was born in 1969, so I don't think WoW was around yet...
[10:24] siddMahen: SubStack: Also, would it be possible in any way to enumerate through all the variables in a scope?
[10:24] tauren: ;)
[10:24] SubStack: Object.keys(context)
[10:25] SubStack: oh you want the outside scope?
[10:25] SubStack: ACTION has no idea
[10:25] tauren: btw, i solved my problem using recursion. duh, I should go to bed.
[10:26] jetienne has joined the channel
[10:27] versicolor has joined the channel
[10:27] mmalecki has joined the channel
[10:27] siddMahen: yeah
[10:30] mmalecki: japj: hey, mind pasting the log from testing my 0.6-compatibility branch?
[10:30] TomY has joined the channel
[10:31] mmalecki: japj: I want to check if this path.resolve changes anything at all
[10:31] ryanmcgrath has joined the channel
[10:31] TheJH: siddMahen, you want to enumerate the variables in a scope?
[10:31] TheJH: siddMahen, if code preprocessing out of the question or would that work for you?
[10:31] TheJH: s/if/is/
[10:32] mmalecki: japj: I haven't pushed path.resolve changes yet, so just pull 0.6-compatibility
[10:35] mmalecki: japj: when you're done, try 0.6-compatibility-windows branch
[10:35] mmalecki: and paste the log as well
[10:36] mmalecki: this branch contains those path.resolve fixes
[10:36] mmalecki: japj: sorry for abusing yoy, I have no windows machine here
[10:36] eddyb: hmm
[10:36] mmalecki: s/yoy/you/
[10:37] eddyb: how can I use the new zlib module as deflate() and inflate() ?
[10:41] gavin_huang has joined the channel
[10:43] eddyb: can I have sync inflate() and deflate()?
[10:44] tobias has joined the channel
[10:46] adambeynon has joined the channel
[10:50] fg3 has joined the channel
[10:52] JakeyChan has joined the channel
[10:57] meandi has joined the channel
[11:00] joshkehn has joined the channel
[11:00] markwubben has joined the channel
[11:06] mmalecki has joined the channel
[11:07] gut4 has joined the channel
[11:07] boltR has joined the channel
[11:07] jomoho has joined the channel
[11:08] replore has joined the channel
[11:08] replore_ has joined the channel
[11:14] cjm has joined the channel
[11:14] okuryu has joined the channel
[11:15] cjm has joined the channel
[11:15] skm has joined the channel
[11:15] ryanmcgrath_ has joined the channel
[11:16] djbell has joined the channel
[11:20] antonjb has joined the channel
[11:21] EvRide1 has joined the channel
[11:21] gut4 has joined the channel
[11:21] adrianmg has joined the channel
[11:22] adrianmg has left the channel
[11:23] DPG has joined the channel
[11:23] DPG: somebody here who can help me fixing a websocket instant-disconnect?
[11:24] antonjb: can someone tell me how you set the NODE_PATH? I've installed express via npm but I'm getting the error "ReferenceError: express is not defined"
[11:24] eddyb: antonjb: did you do var express = require('express');?
[11:25] DPG: i think he forgot the ''
[11:25] antonjb: var app = require('express').createServer();
[11:25] DPG: hmm
[11:25] DPG: should work
[11:25] eddyb: antonjb: there's no way you can get that error
[11:25] eddyb: with that code
[11:25] antonjb: I don't think it knows where node_modules is
[11:26] DPG: anton any other node_modules working?
[11:26] eddyb: antonjb: that error means some code is using express as an object, but express is not set to anything
[11:26] antonjb: which from what I've searched on google seems to be related to NODE_PATH, I installed via homebrew and it told me to set that
[11:26] DPG: eddy maybe a error in the require function?
[11:26] eddyb: who knows
[11:26] okuryu has joined the channel
[11:26] antonjb: I've installed Jade but not used it
[11:27] antonjb: I'm only really trying to get Jade for static site creation
[11:28] DPG: sure express is installed?
[11:28] DPG: try npm update express
[11:28] antonjb: it shows up in npm ls
[11:28] antonjb: but I will try that
[11:29] DPG: http://stackoverflow.com/questions/5892997/set-node-js-repl-module-paths
[11:29] DPG: should be your problem anton
[11:30] DPG: somebody can help me fixing a websocket intant-disconnect?
[11:31] antonjb: I'll check that out DPG
[11:31] DPG: my problem?
[11:31] DPG: or the link? 
[11:31] antonjb: sorry I meant the stackoverflow. I've only just installed node/npm so I wouldn't even know where to start with yours
[11:32] DPG: np =)
[11:32] DPG: could somebody else help me? :/
[11:33] tlrobinson_ has joined the channel
[11:35] confoocious has joined the channel
[11:36] fg3 has joined the channel
[11:38] _jhs has joined the channel
[11:38] DPG: nobody is able to help me fixing a websocket disconnect? :(
[11:41] antonjb: this doesn't help but your link fixed my issue. Thanks
[11:41] tlynn has joined the channel
[11:42] DPG: np
[11:42] augustl: DPG: perhaps someone can, if you ask your question
[11:48] pickels has joined the channel
[11:51] ktos has joined the channel
[11:52] alessioalex has joined the channel
[11:53] `3rdEden has joined the channel
[11:54] siddMahen: Are non child_process.fork() methods of IPC eventually going to be added to core?
[11:56] admin-_ has joined the channel
[11:56] metellus has joined the channel
[11:56] m4rcs: Is ist somehow possible to reattach a spawned childprocess via PID?
[11:57] Morkel has joined the channel
[11:59] ktos has joined the channel
[12:02] topaxi has joined the channel
[12:04] siddMahen: not that I know of, no
[12:05] gkmngrgn has joined the channel
[12:06] ryanmcgrath_ has joined the channel
[12:09] skm has joined the channel
[12:11] tlynn_ has joined the channel
[12:16] magnetik has joined the channel
[12:20] pid_ has joined the channel
[12:27] ken-ignite has joined the channel
[12:29] ryanmcgrath_ has joined the channel
[12:30] tnlogy has joined the channel
[12:30] tnlogy: hi, I'm trying the session support, but req.session is just undefined. is this a known bug or am I just unlucky?
[12:30] tnlogy: in expressjs :)
[12:31] uchuff has joined the channel
[12:32] tnlogy: or hmm, it only happens when I try to use app.use(authentication) where I check if I'm logged in.
[12:34] zmbmartin has joined the channel
[12:34] tnlogy: seems like it doesn't work when using the next() function, or well, can't figure it out :)
[12:34] piscisaureus has joined the channel
[12:35] eddyb has left the channel
[12:37] TomY has joined the channel
[12:38] piscisaureus_ has joined the channel
[12:40] liar has joined the channel
[12:40] ninjapig has joined the channel
[12:40] ninjapig has joined the channel
[12:43] ej_ has joined the channel
[12:44] yuwang_ has joined the channel
[12:44] tnlogy: ok, nobody knows, thanks anyway :)
[12:44] erichynds has joined the channel
[12:45] Ax1 has joined the channel
[12:46] avih has joined the channel
[12:49] githogori has joined the channel
[12:49] joshkehn has left the channel
[12:50] ph^ has joined the channel
[12:51] ryanmcgrath_ has joined the channel
[12:51] avih has joined the channel
[12:53] __tosh has joined the channel
[12:54] bnoordhuis has joined the channel
[12:59] avih has joined the channel
[13:00] Kunda has joined the channel
[13:01] siddMahen has left the channel
[13:02] skm has joined the channel
[13:05] storrgie has joined the channel
[13:06] Drakonite has joined the channel
[13:06] Margle has joined the channel
[13:07] avih has joined the channel
[13:09] wgo has joined the channel
[13:10] pekim_ has joined the channel
[13:11] mandric has joined the channel
[13:14] enmand_ has joined the channel
[13:18] herbySk has joined the channel
[13:19] schwab has joined the channel
[13:23] Brandon_R has joined the channel
[13:29] cjroebuck has joined the channel
[13:30] Margle has joined the channel
[13:31] dexter_e has joined the channel
[13:33] matyr has joined the channel
[13:33] localhost has joined the channel
[13:33] pkrumins: launching testling tomorrow
[13:34] pkrumins: super excited
[13:34] pkrumins: the future is here 
[13:34] pkrumins: sneak preview: http://browserling.com:9088/
[13:34] pkrumins: this is gonna go to testling.com
[13:34] mendel_ has joined the channel
[13:35] mendel_: he guys, could it be that I break node-formidable when I'm adding something to the request object (middleware in express-js)
[13:36] mendel_: I'm adding a user object to the request object, when I do that node-formidable can't process my posted file
[13:37] gavin_huang has joined the channel
[13:40] robhawkes has joined the channel
[13:41] Brandon_R: what is browserling?
[13:42] mikeal has joined the channel
[13:42] pkrumins: cross-browser testing tool!
[13:42] pkrumins: in your browser!
[13:42] pkrumins: made by me and substack!
[13:44] jarek has joined the channel
[13:44] jarek has joined the channel
[13:44] Brandon_R: nice
[13:44] nuba: pkrumins: had a blast with the pricing drawings :)
[13:44] gavin_huang has joined the channel
[13:44] Brandon_R: what does it do?
[13:45] pkrumins: browserling runs browsers in your browser
[13:45] jarek: Hi
[13:45] pkrumins: testling runs tests in all browsers behind the scenes, then reports you back test results
[13:45] jarek: how can I get the path to user's home dir?
[13:45] jarek: is process.env.HOME a proper way to do this?
[13:46] jarek: HOME environmental variable  might not be set on some OSes, right?
[13:46] madsleejensen has joined the channel
[13:47] evil-twin has joined the channel
[13:49] k1ttty has joined the channel
[13:51] Migaaresno has joined the channel
[13:53] gartenstuhl has joined the channel
[13:53] OneOfOne: jarek: it's set on all the *nix's I've ever used
[13:54] Xano has joined the channel
[13:54] jarek: OneOfOne: but what about Windows?
[13:54] OneOfOne: hmm according to http://wilsonmar.com/1envvars.htm it's HOMEPATH on windows, check that page
[13:55] BillyBreen has joined the channel
[13:55] jtsnow has joined the channel
[13:56] OneOfOne: jarek: something like : var home = process.env.HOME || process.env.HOMEPATH *should in theory* be enough
[13:57] jarek: OneOfOne: ok, thanks
[13:58] m4rcs: when I'm wanting to call a function of a module in the same module. How do I call it?
[13:59] bnoordhuis: m4rcs: exports.yourfunction()
[14:00] JakeyChan has joined the channel
[14:01] m4rcs: thx bnoordhuis
[14:03] storrgie has joined the channel
[14:03] Dreamer3 has joined the channel
[14:04] `3rdEden has joined the channel
[14:06] Jabbers has left the channel
[14:08] neurodrone has joined the channel
[14:10] javier_ has joined the channel
[14:11] scott_gonzalez has joined the channel
[14:11] javier_: piscisaureus_: I have finished last night the instructions on how to build a node.js c/c++ addon on windows, and since I don't have a blog, I released it as an article in my web: http://coderesearchlabs.com
[14:11] adambeynon has joined the channel
[14:11] mmalecki has joined the channel
[14:11] Cromulent has joined the channel
[14:12] thinkt4nk has joined the channel
[14:14] piscisaureus_: javier_: ah, nice, thanx
[14:14] piscisaureus_: javier_: I think we'll have to make it easier - thanks for the handles :-)
[14:14] magnetik has joined the channel
[14:16] stagas has joined the channel
[14:16] maushu has joined the channel
[14:16] fairwinds has joined the channel
[14:16] ultramagnus has joined the channel
[14:20] schwab has joined the channel
[14:20] wmage has joined the channel
[14:22] igl has joined the channel
[14:22] joshkehn has joined the channel
[14:25] DPG has joined the channel
[14:25] DPG: can somebody help me?
[14:25] DPG: var	properties = new Array();properties["DEBUG"] = true;properties["port"] = 8080;
[14:26] DPG: for(i=0;i<properties.length;i++){console.log(properties[i]);}
[14:26] DPG: why it don't log anything?
[14:26] mikeal has joined the channel
[14:26] massivebiz has joined the channel
[14:28] DPG: ohh fixed it :>
[14:28] DPG: problem solved :D
[14:29] DPG: bye =)
[14:32] aconbere has joined the channel
[14:41] stagas has joined the channel
[14:41] MUILTFN has joined the channel
[14:41] Dreamer3 has joined the channel
[14:43] Wizek has joined the channel
[14:45] stagas has left the channel
[14:45] stagas has joined the channel
[14:45] Swizec_ has joined the channel
[14:46] JakeyChan has joined the channel
[14:48] pHcF has joined the channel
[14:49] akujin has joined the channel
[14:52] adnasa has joined the channel
[14:53] Aria has joined the channel
[14:55] joshkehn has joined the channel
[14:56] joshkehn has left the channel
[14:56] adnasa has joined the channel
[14:56] digitarald has joined the channel
[14:58] Aria has joined the channel
[14:59] digitarald has joined the channel
[15:00] e6nian has joined the channel
[15:03] m4rcs: https://gist.github.com/1290996 why does Line 10 everytime return false?
[15:06] ronnieboy has joined the channel
[15:07] AAA_awright: m4rcs: Where does it return anything?
[15:08] outbounder has joined the channel
[15:08] m4rcs: nevermind i'm using the log module from npm this works fine
[15:09] linkgoron has joined the channel
[15:11] elliottcable: is there a way to increase the size of the callstack?
[15:12] elliottcable: what is the default?
[15:13] AphelionZ has joined the channel
[15:13] githogori has joined the channel
[15:13] joshkehn has joined the channel
[15:13] joshkehn has left the channel
[15:14] AAA_awright: elliottcable: If you're overflowing the call stack you're doing it wrong
[15:14] AAA_awright: Use more process.nextTick
[15:15] gut4 has joined the channel
[15:15] joshonth_ has joined the channel
[15:16] neynenmo has joined the channel
[15:17] ^robertj has joined the channel
[15:18] ^robertj: does node support compression over websockets?
[15:18] ^robertj: err sorry got my names crossed too early in the am
[15:18] ^robertj: ACTION heads head in shame and heads over to socket.io
[15:18] elliottcable: AAA_awright › this particular code has to work both synchronously and asynchronously
[15:19] JakeyChan has joined the channel
[15:19] elliottcable: can’t do a for-loop, forces synchronicity; can’t do gratuitious nextTick’ing, as that forces asynchronicity
[15:19] elliottcable: heh :3
[15:19] Ang3 has joined the channel
[15:19] elliottcable: iterating things via tail recursion, but under certain cases it can’t tail-recurse, which eventually adds up to a stack overflow
[15:19] elliottcable: ocassionally, anyway
[15:19] AAA_awright: A for loop doesn't force synchronous or recursion
[15:20] elliottcable: uh, what?
[15:20] elliottcable: … obviously, it does force synchronicity.
[15:20] AAA_awright: It's not blocking if that's what you mean
[15:20] AAA_awright: What blocking functions are you calling?
[15:20] elliottcable: if you need to preform asynchronous tasks on each element in series, it has to be via recursion.
[15:20] elliottcable: I’m not.
[15:21] elliottcable: ACTION has no idea what you’re talking about
[15:21] AAA_awright: like fs.readFileSync?
[15:21] AAA_awright: The blocking functions, the *Sync ones
[15:21] AAA_awright: (and require)
[15:21] aeo has joined the channel
[15:21] elliottcable: no, it’s neither, directly.
[15:21] elliottcable: the *code* is very abstract.
[15:21] bencc has left the channel
[15:22] elliottcable: but it has to support both synchronous operations (that is, if it’s being called from an environment where the code expects to be returned to so it can continue processing *during this same tick*)
[15:22] elliottcable: and asynchronous operations (if it’s being called from an environment where the former is not true, but where the operations being preformed themselves now must be asynchronous, and must be in order)
[15:23] elliottcable: anyway. don’t worry about it; I was running my code in the wrong interpreter (my system 4.x instead of the custom-built 5.x), and I’m not getting stack overflows with the latest.
[15:23] AAA_awright: Alright, but is it blocking or not?
[15:23] AAA_awright: That's what really matters
[15:23] elliottcable: what do you mean, by “is it blocking?”
[15:24] AAA_awright: You should know what that means... Does it block execution waiting on I/O when you call it?
[15:25] Ang3: o/
[15:25] elliottcable: … I could swear I just covered this.
[15:25] tommyvyo has joined the channel
[15:25] elliottcable: *my algorithm does not determine that*. The operations passed in by the API consumer does.
[15:25] elliottcable: but it *has to support both*.
[15:25] Qbix2 has joined the channel
[15:25] schwab has joined the channel
[15:25] elliottcable: how is that not clear after the, uh, four-ish times that I’ve said it?
[15:25] elliottcable: forget it, my issue is fixed. Back to the codeshop with me :3
[15:26] boehm has joined the channel
[15:26] AAA_awright: Does your code use any blocking I/O
[15:26] elliottcable: … My code uses blocking I/O if blocking I/O is passed in.
[15:26] elliottcable: My code does not use blocking I/O if non-blocking I/O is passed in.
[15:26] elliottcable: there, *five* times now.
[15:26] AAA_awright: That's not the same as synchronous
[15:27] elliottcable: in this case, it *is*
[15:27] MonsieurLu has joined the channel
[15:27] elliottcable: bro, whatever. I gotta get back to coding. Pointless to argue it.
[15:27] criswell has joined the channel
[15:27] AAA_awright: It sounds like you need to re-think some code
[15:28] elliottcable: It sounds like my code is fine, and you don’t remotely understand what it does.
[15:29] elliottcable: ACTION doesn’t take well to being told his code needs to be re-thought by someone who can’t even seem to understand the simplest summary of its operation
[15:29] MonsieurLu has left the channel
[15:30] idea-squirrel has joined the channel
[15:31] AAA_awright: elliottcable: If you're overflowing the stack, or executing blocking I/O functions at runtime (after you've left startup), you're doing it wrong. Period. You should be able to assume that after startup, you're not going to receive any blocking I/O callbacks and thus you should be able to ignore the syncronous case, only writing for the async case.
[15:31] elliottcable: *That does not mean that I am doing it wrong*, as you would *know* if you’d read anything I said.
[15:31] elliottcable: That means the *API consumer* is doing it wrong.
[15:31] elliottcable: I still have to support it.
[15:31] AAA_awright: That's their problem
[15:31] AAA_awright: No, you shouldn't have to
[15:31] elliottcable: not to mention that this IS STARTUP CODE.
[15:31] Ax1 has joined the channel
[15:31] elliottcable: yes, I should
[15:31] AAA_awright: Well then say that
[15:32] elliottcable: I just went through a huge argument in this same channel, this morning,
[15:32] elliottcable: with all of the people who insisted they wouldn’t use things like this if they were asynchronous
[15:32] chance- has joined the channel
[15:32] elliottcable: (it’s code acquisition / initialization systems)
[15:32] elliottcable: “well then say that?” My bad.
[15:32] elliottcable: Sorry for not knowing that the magic words to make you stop assuming you knew more than me about my own code and the quality of my design were ‘This is code that may be executed at startup-time.’
[15:33] elliottcable: Next time, I’ll remember that.
[15:33] elliottcable: ಠ_ಠ AAA_awright
[15:33] purr: Let it be known that elliottcable disapproves of AAA_awright.
[15:33] jetienne has joined the channel
[15:33] chance-: Anyone happen to know if it's possible to have multiple account types with mongoose-auth / everyauth?
[15:33] hotch has joined the channel
[15:34] AAA_awright: elliottcable: You're asking for design advice, what am I supposed to suggest without knowing anything else?
[15:34] chance-: i kinda asked before but at the time wasn't too excited about everyauth's opinionated nature… after getting about a third of the way through with wiring up connect-auth, i decided i'd prefer opinionatedness over re-inventing the wheel
[15:34] elliottcable: AAA_awright › I wasn’t asking for design advice. I was asking how to change the stack-size. You offered design advice unasked.
[15:34] elliottcable: AAA_awright › anyway, sorry for going off the handle.
[15:35] elliottcable: AAA_awright › had a lot of unwelcome shite from #Node.js today, and for that matter, over the last week or so.
[15:35] smtlaissezfaire has joined the channel
[15:35] elliottcable: AAA_awright › have a little less tolerance than I probably should, at the particular moment.
[15:35] elliottcable: ++ AAA_awright
[15:35] purr: Let it be known that elliottcable is indifferent to AAA_awright.
[15:35] kenperkins has joined the channel
[15:36] chance-: lol
[15:36] AAA_awright: Well what you're describing does sound a bit suspicious
[15:37] elliottcable: eh, too complex to get into specifics. require() replacement, the code in question is a portion that is not hardcoded to be either asynchronous or synchronous; it’s handed operations to preform by other portions of the library, which themselves are asked to be asynchronous or synchronous by the API consumer
[15:37] elliottcable: and that’s a bit of a simplication anyway
[15:38] joshkehn has joined the channel
[15:39] Aria: Sounds like it needs to be reified into a stub that can be grabbed synchronously, and then do the rest async if it has async code.
[15:39] Aria: Basically a maybe-future.
[15:40] Spion has joined the channel
[15:40] elliottcable: that’s exactly what it’s trying to avoid.
[15:40] AAA_awright: A lib similar to RequireJS? My first thought was this was an application (though it shouldn't matter)
[15:40] elliottcable: the point is to allow truely asynchronous loading if A) the API consumer wants it, and B) synchronicity hasn’t been forced upon us by something higher in the stack demanding immediate results
[15:41] elliottcable: AAA_awright › something like that, but with different goals and areas of interest.
[15:41] Aria: Hm.
[15:41] elliottcable: requireJS tries to *duplicate* require() semantics, but extend the functionality to the web and similar
[15:41] kriszyp has joined the channel
[15:41] elliottcable: whereas this is a complete replacement for require(), with the intention of trashing all of the require() semantics and never, ever touching them again with a ten foot pole
[15:41] dexter_e has joined the channel
[15:42] knoppix has joined the channel
[15:42] elliottcable: that’s all long-since done (back during Node v0.1.18 or sth); just working on some asynch/synch agnosticity code right now
[15:42] knoppix: does it work yet?
[15:42] elliottcable: mmm, quite well
[15:43] elliottcable: the only issue is that it’s Seriously Asynchronous.
[15:43] elliottcable: and as people were talking about earlier this morning, quite a lot of people want nothing whatsoever to do with asynchronous loading.
[15:43] elliottcable: so, re-writing large swathes of it to transparently synchronicity where necessary due to someone higher up the stack.
[15:44] elliottcable: (synchronicityify? synchronicify? syncrify. lol)
[15:44] jtsnow has joined the channel
[15:44] goodoo has joined the channel
[15:46] chanced: bah, there has to be a way to do this and i'm just not seeing it
[15:46] chanced: gr
[15:46] AAA_awright: The only way I see it being useful is if, somehow, a database will affect which modules you load at startup. A case which I'm doing and I still don't see that as very useful, since the overhead is actually connecting to the database and fetching the records.
[15:47] anton000 has joined the channel
[15:47] anton000 has left the channel
[15:49] adambeynon has joined the channel
[15:49] gartenst_ has joined the channel
[15:50] knoppix: I think you are a robot
[15:50] AAA_awright: chanced: Do you have a link or something?
[15:50] elliottcable: AAA_awright › that’s not at all the point, heh
[15:51] enmand_ has joined the channel
[15:51] elliottcable: but that’s a completely unrelated discussion, and one I’m already going to have to write up a document summarizing, since everyone seems to be completely blind to the point of an asynchronous loader
[15:51] AAA_awright: elliottcable: Do you have a link I can read, maybe?
[15:51] elliottcable: so I’ll just link you that when I write it, instead of trying to explain it right now
[15:53] elliottcable: long stories made short, it’s A) ideology (“asynchronous *always*”), B) boot-time (parallelization for very large systems with many many recursive dependencies), and C) deferring (lazy-loading when libraries are actually used)
[15:53] max_dev has joined the channel
[15:53] elliottcable: there’s also the D) of asynchronous initialization, but that’s not really applicable here, because that *forces* asynchronous loading (i.e. all of the “fallback to synchronous if necessary” stuff Can’t Work™ in that case)
[15:53] AvianFlu: AAA_awright, basically elliottcable convinced himself that the require cache was just a bedtime story from isaacs
[15:54] elliottcable: more on all that later. AAA_awright, if I don’t forget, I’ll link you when I’ve written it up.
[15:54] elliottcable: AAA_awright › Dude, quit yer trolling. Getting tired of it.
[15:54] AAA_awright: elliottcable: Cool
[15:54] elliottcable: er, sorry
[15:54] elliottcable: AvianFlu ›*
[15:55] piscisaureus has joined the channel
[15:56] mmalecki: travis-ci is cool!
[15:56] knoppix: AAA_awright: a link to what ?
[15:57] AAA_awright: knoppix: To the library in question
[15:57] mmalecki: what would you guys want to see in a library for function handling?
[15:57] maletor has joined the channel
[15:57] mmalecki: I have this already: https://github.com/mmalecki/node-functions
[15:57] mmalecki: (just a one function, saving 2 loc)
[15:57] elliottcable: AvianFlu › Oh, you wanted a link to the code?
[15:58] elliottcable: well, let’s see.
[15:58] elliottcable: first off, there’s the original discussions from back in 2009, early 2010
[15:58] knoppix: AAA_awright: I think you are a robot
[15:58] elliottcable: the most relevant of those would be my final message to the CommonJS list summarizing everything going on at the time:
[15:58] AAA_awright: knoppix: Uh
[15:58] AAA_awright: Cool story bro?
[15:59] AAA_awright: knoppix: Are you chanced?
[15:59] elliottcable: AAA_awright › http://groups.google.com/group/commonjs/msg/acd13d5e98d7baa0
[16:00] elliottcable: then there’s the philosophy and goals behind my current `require()` replacement, an older iteration of which was documented here:
[16:00] elliottcable: AAA_awright › https://github.com/elliottcable/from/blob/Master/lib/from.js#L1-210
[16:01] elliottcable: finally, there’s the current codebase that I’m writing right now; it’s as-of-yet-undocumented (except by the out-of-date documentation for the previous iteration, which I just linked) and badly in need of modularization into subsections, which is under progress today: https://github.com/elliottcable/from/blob/Fixins/lib/from-new.js
[16:01] javier_: mmalecki: what do you mean for function handling?
[16:01] javier_: btw, I updated my article a little more with hints for Visual C++ so the addon building gets easier: http://coderesearchlabs.com/articles/BNWCA.pdf
[16:01] elliottcable: AAA_awright › unfortunately, none of the above even *begins* to talk about the arguments for/against asynchronous loading.
[16:01] galaxywatcher_ has joined the channel
[16:01] mmalecki: javier_: hard to describe. you know, neat things that save you few lines of code
[16:02] elliottcable: AAA_awright › I made the oversight when originally designing the system of assuming that anyone sane would of *course* want asynch loading, and didn’t even bother to consider the possibility that somebody might not be able to see off the top of their head why it’s “better.”
[16:02] elliottcable: ACTION silly face
[16:02] mmalecki: javier_: like this: https://github.com/mmalecki/node-functions/blob/master/lib/functions.js#L8
[16:02] elliottcable: AAA_awright › so, when I finish my rewrite, the next job is going to be more modern documentation, including rationale behind the asynchronous features and fallbacks to synchrononicity where the API consumer requests it.
[16:03] elliottcable: mmalecki › what do you mean?
[16:03] elliottcable: mmalecki › I’m looking at the code, but don’t quite get it.
[16:03] mmalecki: elliottcable: it creates a function which always returns given value
[16:03] elliottcable: ah, given that example … perhaps you should provide some APIs for basic common stuff like currying?
[16:03] markwubb_ has joined the channel
[16:03] elliottcable: is that the sort of lines you’re thinking along?
[16:03] mmalecki: elliottcable: yeah, I will
[16:04] elliottcable: a really useful one that I brought from Ruby, and take into every single library I write with me,
[16:04] elliottcable: is good ’ol Object#tap
[16:04] mmalecki: I want general library for doing things with functions
[16:04] elliottcable: but that require squatting on Object.prototype, which you may not like
[16:04] mmalecki: we've had some Scala at the conference and I found it kind of neat
[16:04] chance- has joined the channel
[16:06] AAA_awright: I've had no problem using module.exports.prototype
[16:06] TheJH has joined the channel
[16:06] lmorchard has joined the channel
[16:06] elliottcable: TheJH › I was talking with you about `Context`s and the VM module the other day, yes?
[16:06] Nietecht has joined the channel
[16:06] TheJH: hello elliottcable 
[16:06] AvianFlu: AAA_awright, neither have most people
[16:06] elliottcable: TheJH › would you mind taking a look at the final state of the pull request, seeing if everything seems kosher to your eye?
[16:08] TheJH: elliottcable, you mean #1801?
[16:08] elliottcable: mmhmm
[16:08] elliottcable: isaacs wanted some more eyes on it before he rebases onto master.
[16:08] magnetik_ has joined the channel
[16:09] elliottcable: 63 ſ 665 36 < Aria> Yeah. awright's got a good head on his shoulders. Has some AMAZING ideas for build systems.
[16:09] elliottcable: 63 ſ 665 48 < Aria> Like that might not actually add another pile of suck to the world.
[16:09] elliottcable: AAA_awright › if you have some time later today, I’d love to hear those.
[16:09] elliottcable: AAA_awright › they might be relevant to another of my projets.
[16:10] TheJH: elliottcable, that's a C++-land thing, and I'm not really good at that
[16:10] elliottcable: pro-jets. They’re cooler than amateur-jets.
[16:10] elliottcable: TheJH › *nods*. Thought I’d ask, anyway.
[16:10] AAA_awright: I'm glad I've still got Aria with me on this, that makes at least two people in this world who think current build systems suck
[16:10] AAA_awright: :p
[16:10] elliottcable: three*
[16:11] elliottcable: AAA_awright › https://github.com/elliottcable/Paws.c#readme
[16:11] elliottcable: read the last section, “Makefile”
[16:11] AAA_awright: Aria elliottcable: http://bzfx.net/guru/
[16:11] wookiehangover has joined the channel
[16:11] elliottcable: RDF?
[16:11] elliottcable: I’m so hurt
[16:11] AAA_awright: It's not what you think
[16:12] AAA_awright: I should do a better job of describing what it does instead of going by example
[16:12] mikeal has joined the channel
[16:12] elliottcable: … lol
[16:12] chance- has joined the channel
[16:12] AAA_awright: And in particular get rid of that awful RDF/XML syntax
[16:12] elliottcable: well, best of luck.
[16:12] elliottcable: for now, I’ll stick to my:
[16:12] elliottcable: C99() { eval local last="\$$#"; last=${last##*/}; $CC -std=c99 -pedantic-errors -Wall -O0 -o "${last%.*}.o" "$@" }
[16:12] pongwon has joined the channel
[16:14] matyr has joined the channel
[16:14] AAA_awright: elliottcable: Lemme know when you want to hear the theory behind that, I could describe it right now
[16:14] elliottcable: AAA_awright › I *really* need to focus on the modifications I’m making to from.js, because the arguments earlier this morning, and just now, have already derailed me enough for the day
[16:17] knoppix: AAA_awright: textual descriptions are daunting
[16:17] AAA_awright: I think I can break it down pretty well, I've had to do it enough times now
[16:18] Aria: Yeah, RDF/XML needs to die in a fire, so people can see RDF for what it is.
[16:19] AAA_awright: I only have it because that's what DoaP uses
[16:21] cthulhu_lovecraf has joined the channel
[16:25] Morkel has joined the channel
[16:26] jarek has joined the channel
[16:28] arcanis: do you know a node library which is able to parse the find --exec option ?
[16:29] Swizec has joined the channel
[16:29] arcanis: e.g. --exec cat -e {} \; --print will give two options : --exec with "cat -e {}" and --print
[16:30] d4rk1ink_ has joined the channel
[16:31] tommyvyo has joined the channel
[16:32] TechCel has joined the channel
[16:34] tuhoojabotti: http://www.tuhoojabotti.com/r/panoramas/saaksi_sunset_CHQ.jpg What do you think?
[16:34] Aria: Pretty but irrelevant?
[16:35] hydrozen has joined the channel
[16:38] mandric has joined the channel
[16:38] fzzzy has joined the channel
[16:39] jtsnow has joined the channel
[16:43] outbounder has joined the channel
[16:43] ayaz has joined the channel
[16:47] brianseeders has joined the channel
[16:47] replore_ has joined the channel
[16:47] replore has joined the channel
[16:48] gartenstuhl has joined the channel
[16:48] andrewreedy has joined the channel
[16:49] jtsnow has joined the channel
[16:49] towski has joined the channel
[16:49] dexter_e has joined the channel
[16:50] stagas has joined the channel
[16:52] Sorella has joined the channel
[16:53] zmbmartin has joined the channel
[16:56] stonebranch has joined the channel
[16:56] jakehow has joined the channel
[16:57] devongovett has joined the channel
[16:58] jtsnow has joined the channel
[16:59] Squeese has joined the channel
[16:59] andrewfff2 has joined the channel
[17:00] harthur has joined the channel
[17:00] enmand_ has joined the channel
[17:01] elliottcable: Wasn’t there a way to grab a stacktrace without throwing an error?
[17:01] elliottcable: saw the technique just the other day in some code I was perusing, but I can’t remember what it was.
[17:01] arcanis: hi, I've just made this tool. Do you think it could be useful ? https://github.com/arcanin/node-puddi
[17:02] ^robertj: how can I encode plain txt to html so that < gets turned into &lt;
[17:02] elliottcable: oh, that was easy. `new Error().stack.split('\n').length`
[17:02] elliottcable: >> new Error().stack.split('\n').length
[17:02] purr: elliottcable: (number) 10
[17:02] xerox: arcanis: what does that get you that npm modules don't
[17:02] elliottcable: arcanis › doesn’t seem that we need a new dependancy management system do we?
[17:02] arcanis: xerox, it's not a package manager
[17:03] arcanis: elliottcable, don't know, I did not found simple way to make what I want
[17:03] xerox: idgi
[17:04] arcanis: I will use it for managing dependencies in a single application (it's more like modules, not packages)
[17:04] elliottcable: you mean, so you can avoid doing `require('sub-piece')` inside the application’s files themselves?
[17:04] elliottcable: I can’t decide if I love or hate that idea.
[17:05] dthompso99 has left the channel
[17:05] langworthy has joined the channel
[17:05] arcanis: elliottcable, I've made it for my own purpose, originally, and the example in the readme is my own project
[17:06] arcanis: I needed to share code between server and client
[17:06] arcanis: but require() does not work client-side, and I don't want really like runtime libraries
[17:06] `3rdEden has joined the channel
[17:07] arcanis: so I've thought about preprocessing, but I needed to sort my files according dependencies
[17:07] elliottcable: lol
[17:07] arcanis: and so puddi is born ...
[17:07] neynenmo has joined the channel
[17:07] elliottcable: first off, go look at requireJS and browserify and, er, doesn’t SubStack have another one?
[17:07] elliottcable: and if you don’t like those, wait for me to finish from.
[17:07] elliottcable: ^‿^
[17:08] cjm has joined the channel
[17:09] agnat has joined the channel
[17:09] TheJH: arcanis, I think substacks browserify is pretty cool. it even works with js-only npm packages out-of-the-box, I think :)
[17:09] jbpros has joined the channel
[17:10] arcanis: I've seen requireJS, yes, but I really don't like the syntax, and it's a runtime library
[17:11] arcanis: I didn't know browserify :)
[17:12] marcello3d has joined the channel
[17:12] TheJH: arcanis, browserify bundles the dependencies into one file and sends that to the client, so you have a synchronous require()
[17:13] arcanis: but I'm language-agnostic \o\ (even if it's useless in the majority of languages. sigh.)
[17:13] Vertice has joined the channel
[17:13] tuhoojabotti: Aria: Totally irrelevant.
[17:13] arcanis: TheJH, yep, I'm reading the readme
[17:14] jtsnow has joined the channel
[17:14] _th_n_ has joined the channel
[17:15] elliottcable: Hm. I can *create* an `Array` of particular length using `new Array` … I wonder if I can extend one quickly, in a similar way.
[17:16] TheJH: elliottcable, errm, how do you mean that?
[17:16] TheJH: elliottcable, `array.push(element)` is too slow for you?
[17:16] cafesofie has joined the channel
[17:16] elliottcable: heh, it’s too much text.
[17:16] syrio has joined the channel
[17:16] elliottcable: ’s for a oneliner.
[17:16] elliottcable: not really very important, just idly wondering.
[17:17] elliottcable: pondering a quick way to pad a string out to N characters. 
[17:17] TheJH: elliottcable, maybe `str[n] = void 0`?
[17:17] elliottcable: JS strings are immutable.
[17:17] elliottcable: OH
[17:17] TheJH: ah, right
[17:18] elliottcable: but that gives me an idea
[17:18] jarek has joined the channel
[17:18] McMAGIC--Copy has joined the channel
[17:18] elliottcable: >> (var a="abc".split(''))[10]='';a.join('')
[17:18] purr: elliottcable: SyntaxError: Unexpected token var
[17:18] elliottcable: >> (a="abc".split(''))[10]='';a.join('')
[17:18] purr: elliottcable: (string) 'abc'
[17:18] elliottcable: damn.
[17:18] elliottcable: >> (a="abc".split(''))[10]='|';a.length
[17:18] purr: elliottcable: (number) 11
[17:19] elliottcable: >> (a="abc".split(''))[10]='|';a.join('')
[17:19] purr: elliottcable: (string) 'abc|'
[17:19] elliottcable: hrm.
[17:19] elliottcable: >> (a="abc".split(''))[10]='|';a.join(' ')
[17:19] purr: elliottcable: (string) 'a b c        |'
[17:19] elliottcable: but unhelpful, because it adds extra spaces to the existing characters
[17:19] TheJH: >> for(var a="abc";!a[10];a+=" ");a
[17:19] purr: TheJH: (string) 'abc        '
[17:19] elliottcable: yeah, but that uses a forloop
[17:19] elliottcable: which is exactly what I’m trying to avoid :D
[17:20] TheJH: :D
[17:20] elliottcable: ACTION shrugs
[17:20] ngs has joined the channel
[17:20] elliottcable: doesn’t really matter. Was worth a try, though.
[17:20] TheJH: IDEA!
[17:20] TheJH: i think i know
[17:20] arcanis: elliottcable, 
[17:20] arcanis: >> (a = "abc".split(/$/))[10] = '\0'; a.join(' ');
[17:20] purr: arcanis: (string) 'abc          \u0000'
[17:21] arcanis: hmm ...
[17:21] arcanis: >> (a = "abc".split(/$/))[10] = ''; a.join(' ');
[17:21] elliottcable: ACTION eyebrow
[17:21] purr: arcanis: (string) 'abc          '
[17:21] TheJH: >> var a="hello";a+=new Array(10-a.length).join(" "); a
[17:21] purr: TheJH: (string) 'hello    '
[17:21] TheJH: >> var a="hello";a+=new Array(20-a.length).join(" "); a
[17:21] purr: TheJH: (string) 'hello              '
[17:21] elliottcable: yeah again, doing math
[17:21] ashb: >> "abc" + (((a=[''])[10]=''),a.join(' '))
[17:21] purr: ashb: (string) 'abc          '
[17:21] elliottcable: was looking for a quick’n’hacky way to do it without math
[17:22] elliottcable: bahaha JavaScript golfing. Eek.
[17:22] arcanis: >> (function (x, y) { (a = x.split(/$/))[y - x.length] = ''; return a.join(' '); })("abc", 10).length
[17:22] ashb: you started it
[17:22] purr: arcanis: (number) 10
[17:22] adambeynon has joined the channel
[17:22] elliottcable: ashb › :D
[17:22] arcanis: >> (function (x, y) { (a = x.split(/$/))[y - x.length] = ''; return a.join(' '); })("abc", 10)
[17:22] purr: arcanis: (string) 'abc       '
[17:24] elliottcable: require('path').dirname('/ab/cd')
[17:24] purr: elliottcable: '/ab'
[17:24] ngs has left the channel
[17:24] zmbmartin has joined the channel
[17:24] kurmangazy has joined the channel
[17:25] gut4 has joined the channel
[17:25] elliottcable: >> 'abc          '.length
[17:25] purr: elliottcable: (number) 13
[17:25] elliottcable: ugh )=
[17:26] arcanis: >> (function (x, y) { (a = x.split(/$/))[y] = ''; return a.join(' ').substr(0, y); })("abc", 10).length
[17:26] purr: arcanis: (number) 10
[17:26] arcanis: very dirty
[17:26] arcanis: but no maths
[17:26] elliottcable: lmao
[17:26] elliottcable: substr to y
[17:26] elliottcable: creative.
[17:27] elliottcable: don’t need the function either
[17:27] fairwinds has joined the channel
[17:27] elliottcable: which lets me wrap it into my one-liner
[17:27] elliottcable: >> (a="abc".split(''))[10]='';a.join(' ').substr(0,10)
[17:27] purr: elliottcable: (string) 'a b c     '
[17:28] arcanis: >> (a=["abc"])[10]='';a.join(' ').substr(0,10).length
[17:28] purr: arcanis: (number) 10
[17:28] elliottcable: >> ("abc"+new Array(50).join(' ')).substr(0, 10)
[17:28] purr: elliottcable: (string) 'abc       '
[17:29] elliottcable: ([][10]='')
[17:29] elliottcable: >> ([][10]='')
[17:29] purr: elliottcable: (string) ''
[17:29] elliottcable: buhrg.
[17:29] elliottcable: ACTION wishes for JS #tap
[17:29] Ginlock has joined the channel
[17:30] elliottcable: >> ("abc"+new Array(50).join(' ')).substr(0, 10)
[17:30] purr: elliottcable: (string) 'abc       '
[17:30] elliottcable: >> "abc"+new Array(50).join(' ').substr(0, 10)
[17:30] purr: elliottcable: (string) 'abc          '
[17:30] elliottcable: saw that coming, but still ugh
[17:32] jetienne has joined the channel
[17:32] Migaaresno: >> ("abc        ")
[17:32] purr: Migaaresno: (string) 'abc        '
[17:32] elliottcable: Migaaresno has solved my problem.
[17:32] elliottcable: lol
[17:33] elliottcable: >> "abc".substr(0, 10)
[17:33] purr: elliottcable: (string) 'abc'
[17:33] V1 has joined the channel
[17:33] elliottcable: … was worth a try
[17:33] mmalecki: `3rdEden: hey, you're talking at web-5.org, right?
[17:33] `3rdEden: yup
[17:34] MrWarGames has joined the channel
[17:34] mmalecki: `3rdEden: I was wondering if they refund expenses
[17:34] V1 has joined the channel
[17:34] V1: mmalecki yup
[17:34] andrewreedy has joined the channel
[17:34] V1: and DOH fucking connection drops
[17:34] TheJH: >> var s="   ";(s+"          ").substring(0,10) // why not just like this?
[17:34] purr: TheJH: (string) '          '
[17:34] mmalecki: cool! then I'm in :)
[17:34] MrWarGames has joined the channel
[17:34] `3rdEden: awesome :)
[17:35] TheJH: >> var s="abc";(s+"          ").substring(0,10) // why not just like this?
[17:35] purr: TheJH: (string) 'abc       '
[17:35] mmalecki: I'll talk about client-side rendering
[17:35] kloeri has joined the channel
[17:35] elliottcable: TheJH › easier to change a 40 to a 50 in the code, than add 10 more spaces. heh.
[17:35] TheJH: elliottcable, true :D
[17:35] mmalecki: elliottcable: what do you want?
[17:36] elliottcable: meh, all turned out to be pointless anyway, because I’m an idiot.
[17:36] V1 has joined the channel
[17:36] V1: ARGGGH
[17:36] elliottcable: forgot about the unprintable characters in the string, so substr() length ≠ padded length in any case.
[17:36] TheJH: elliottcable, code golf is never pointless :)
[17:36] adambeynon has joined the channel
[17:36] `3rdEden: mmalecki sounds awesome :)
[17:36] `3rdEden: jetienne is also speaking mmalecki
[17:37] elliottcable: Why do I only ever want Chick-fil-a on *Sundays*?
[17:37] perezd has joined the channel
[17:37] syrio has left the channel
[17:37] mmalecki: `3rdEden: cool! looks like we're going to have a bit of node.js conference ;)
[17:37] TheJH: actually, we could probably set up a code golfing site...
[17:37] `3rdEden: mmalecki ;)
[17:37] TheJH: MooGoo, are you here?
[17:38] mmalecki: TheJH: 140byt.es
[17:38] jetienne: `3rdEden: we will meet at last :)
[17:38] elliottcable: wasn’t there already Twitter-code-golfing for JS?
[17:38] elliottcable: and some site that aggregated it?
[17:38] mmalecki: #140bytes, iirc
[17:38] elliottcable: I quit Twitter recently, so idfc, but
[17:38] elliottcable: I never found JS-golfing remotely as much fun as Ruby golfing.
[17:38] TheJH: mmalecki, does that one automatically validate and rank submissions? :D
[17:38] isaacs_home has joined the channel
[17:38] elliottcable: since it’s much less metaprogrammable, and even the closure syntax is ridiculously long, it just becomes boring
[17:38] casper_ has joined the channel
[17:39] hydrozen has joined the channel
[17:40] fg3 has joined the channel
[17:40] pizthewiz has joined the channel
[17:40] `3rdEden: jetienne yup!
[17:41] asobrasil has joined the channel
[17:43] jtsnow has joined the channel
[17:43] Margle has joined the channel
[17:43] isaacs_home: elliottcable: you mean metaprogrammable in the lisp sense or the ruby sense?
[17:43] Frippe has joined the channel
[17:43] isaacs_home: elliottcable: and i take it that "it" == "javascript"?
[17:43] isaacs_home: or paws?
[17:43] yozgrahame has joined the channel
[17:43] isaacs_home: (sorry, coming in halfway)
[17:44] mmalecki: TheJH: I don't think so
[17:44] magnetik has joined the channel
[17:44] mmalecki: isaacs_home: yo, got a minute?
[17:45] isaacs_home: mmalecki: what's up?
[17:45] mmalecki: isaacs_home: why should we use path.resolve instead if path.join on windows?
[17:45] mmalecki: s/if/of/
[17:45] isaacs_home: mmalecki: because it's smarter.
[17:46] isaacs_home: mmalecki: path.resolve is windows-aware
[17:46] mmalecki: isaacs_home: path.join isn't?
[17:47] isaacs_home: not if you've got a bunch of stuff with .. and whatnot
[17:47] TheJH: isaacs_home, what does that mean? backslash support? case-insensitivity support?
[17:47] isaacs_home: nono, they're both just string mungers
[17:47] elliottcable: isaacs_home › more in the Ruby sense, though there’s little enough of either in JavaScript
[17:47] elliottcable: especially when considering something you’ve gotta fit in N characters.
[17:47] isaacs_home: but the issue shows up because windows paths are absolute if they start with [A-Z]:\ or \\
[17:47] dgathright has joined the channel
[17:47] elliottcable: isaacs_home › also, wait, you know Paws? o_O
[17:47] isaacs_home: elliottcable: i know of paws
[17:47] elliottcable: isaacs_home › and we were talking about golfing JS
[17:48] isaacs_home: elliottcable: oh, ok
[17:48] mmalecki: isaacs_home: actually, try `cd /` on your windows
[17:48] elliottcable: isaacs_home › then I mentioned that I only really enjoyed golfing in Ruby; it lends itself quite a bit to the art.
[17:48] isaacs_home: mmalecki: you'll end up at the root of your drive
[17:48] mmalecki: ah, but it still isn't absolute
[17:48] isaacs_home: mmalecki: C:\ IS absolute
[17:49] isaacs_home: there's a lot of node code that tests path.charAt(0) === "/" to decide whether or not it's absolute, too
[17:49] isaacs_home: that's a problem on windows
[17:49] isaacs_home: made for several bugs in npm
[17:49] mmalecki: isaacs_home: but '/' depends on current drive, so it isn't that absolute
[17:49] isaacs_home: mmalecki: windows has multiple cwd's
[17:49] isaacs_home: mmalecki: one per drive
[17:50] mmalecki: oh.
[17:50] isaacs_home: cd Z:\foo\bar won't actualy change the cwd if you're on the C: drive
[17:50] isaacs_home: but! if you then type "Z:", you'll be in Z:\foo\bar
[17:50] isaacs_home: it's crazy.
[17:50] elliottcable: require('path').dirname('/ab/cd')
[17:50] purr: elliottcable: '/ab'
[17:50] mmalecki: yeah.
[17:50] Frippe has joined the channel
[17:50] elliottcable: really, isaacs_home?
[17:50] elliottcable: holy crap.
[17:50] elliottcable: that’s actually sort of awesome.
[17:50] isaacs_home: and \\unc\path is always absolute
[17:50] isaacs_home: and driveless
[17:51] jarek__ has joined the channel
[17:51] elliottcable: that’d be a neat addition to UNIX: a WD setting specific to a particular folder
[17:51] elliottcable: sort of like a chroot-cwd
[17:51] isaacs_home: elliottcable: no, it's a huge awful complication
[17:51] elliottcable: bahaha
[17:51] elliottcable: I said “neat”
[17:51] elliottcable: not “a good idea”
[17:51] elliottcable: ;D
[17:51] isaacs_home: elliottcable: haha
[17:51] isaacs_home: fair enough :)
[17:52] TomY has joined the channel
[17:52] mmalecki: so, when talking about neat unix additions
[17:52] elliottcable: careful lest you believe everything elliottcable thinks is neat as *also* something that elliottcable thinks is remotely a pragmatic or ‘good’ idea.
[17:52] mmalecki: https://github.com/fpletz/kernelroll
[17:52] elliottcable: mmalecki › ohjes…
[17:52] kloeri has joined the channel
[17:52] elliottcable: mmalecki › I was about to say that I can’t believe that that’s a real thing,
[17:52] elliottcable: and then I realized I can completely  believe that that’s a real thing.
[17:53] mmalecki: somebody needs to make one for osx
[17:54] Frippe_ has joined the channel
[17:54] elliottcable: screw that, just patch iTunes.
[17:54] mmalecki: lol
[17:54] kurmangazy: did you see that Dennis Ritchie just died?
[17:55] meandi2 has joined the channel
[17:55] mmalecki: just?
[17:55] mmalecki: it was like, 3 days ago
[17:55] kurmangazy: well, a few days ago
[17:55] elliottcable: I still think someone should put it in the /topic for a few weeks.
[17:55] kurmangazy: I know. but he probably did more for the world than Steve Jobs. and barely anyone noticed.
[17:55] elliottcable: http://j.mp/rip-dmr, for anybody who hasn’t seen it
[17:55] elliottcable: kurmangazy › barely anyone? Everyone I know noticed … even non-programmers.
[17:56] Frippe__ has joined the channel
[17:56] elliottcable: Jesus, one of my non-programmer girlfriends (photographer and philosophy major) heard about it.
[17:56] kurmangazy: elliottcable: oh, really? well. it didn't get as much attention in the media.
[17:56] elliottcable: she was like “Did you hear about that computer guy who died?”
[17:56] elliottcable: and I made assumptions and was like “Yeah, I wonder if I should even bother hoping for an iPhone now”
[17:56] isaacs_home: kurmangazy: he did a lot that lives below the surface of what most people see of technology
[17:56] elliottcable: and she goes “No, not the Apple guy, the programming guy”
[17:57] kurmangazy: hehe
[17:57] mehlah has joined the channel
[17:57] isaacs_home: he basically invented portable software, but that's not something most people *see*
[17:57] kurmangazy: isaacs_home: right
[17:57] elliottcable: well, it is, I suppose
[17:57] isaacs_home: jobs affected things that more people touch and feel
[17:57] mmalecki: I wonder what would be happening right now
[17:57] elliottcable: they see it in every piece of software they use that uses anything open-source
[17:57] mmalecki: if he didn't invent C, of course
[17:57] isaacs_home: elliottcable: not just open source.
[17:57] elliottcable: because I doubt we’d have nearly as much of an open-source community in general if it weren’t so easy to write portable software.
[17:57] AaronMT has joined the channel
[17:57] kurmangazy: I think Steve Jobs's genius is way overrated.
[17:57] isaacs_home: elliottcable: you use C to program most hardware, the machines that build the hardware, the closed source stuff, etc.
[17:58] elliottcable: isaacs_home › yes, I know, but I’m saying the biggest impact of portable software as a whole was open-source software as a whole.
[17:58] elliottcable: the other stuff could Still Happen™, but open-source would be nearly impossible.
[17:58] mmalecki: plus, publishing perforated cards is *hard*
[17:58] elliottcable: mmalecki › laughed hard. out loud.
[17:58] elliottcable: CardHub?
[17:58] isaacs_home: elliottcable: i disagree.  portability was an issue LONG before open source was ever a thing
[17:58] kloeri has joined the channel
[17:58] mmalecki: oh yes
[17:58] elliottcable: brb preparing a site for next April Fools
[17:58] elliottcable: PerforationHub.
[17:58] mmalecki: haha, do it!
[17:58] isaacs_home: elliottcable: it meant that you could write software for more than one machine.
[17:58] elliottcable: mail them in, make forks, get copies mailed to you.
[17:59] dubenstein has joined the channel
[17:59] elliottcable: anybody know where I can get a cheap card punch printer?
[17:59] kurmangazy: it's so ironic that now everybody is programming in javascript.
[17:59] elliottcable: something with a serial interface I could actually find a way to jack into a remotely modern computer?
[17:59] elliottcable: I could run a system daemon to talk to it, then a Node website that uses it to print copies of things
[17:59] OneOfOne: random question, is it somehow possible to use event emitter over tcp sockets?
[17:59] elliottcable: then I could make daily runs to the post office.
[17:59] mmalecki: OneOfOne: hook.io
[18:00] isaacs_home: just about every single piece of technology more complicated than a toaster (and a lot of toasters, too) are affected by Ritchie's contributions to technology
[18:00] elliottcable: that statement is under-vague
[18:00] mmalecki: isaacs_home: actually, think of what makes tosters.
[18:00] OneOfOne: mmalecki: thank you :)
[18:00] isaacs_home: mmalecki: exactly!
[18:00] elliottcable: because you already mentioned robotic assembly systems and whatnot, so even things *much* less complex than a toaster would be
[18:00] elliottcable: oh lol mmalecki beat me to it
[18:00] isaacs_home: if you want to see a pre-C machine, you have to go to a museum.
[18:01] isaacs_home: or pick up an abacus :)
[18:01] elliottcable: ACTION makes a regex with ≥99 parenthesized submatches, just to fuck with String#replace
[18:02] matyr has joined the channel
[18:02] mmalecki: isaacs_home: abacus made before '80s, I suppose
[18:02] jmoyers has joined the channel
[18:02] elliottcable: What’s the most arguments (named, actual arugments; not varargs) you’ve ever seen to a single function, in any language?
[18:02] elliottcable: ↑ random poll of #Node.js
[18:03] isaacs_home: in fact, though, the transition from machine-dependent software to portable software seems so obvious and inevitable in retrospect, maybe it's just one of those things that was going to happen, and ritchie was the first to notice.
[18:03] mmalecki: elliottcable: the daily wtf has some nice examples
[18:03] elliottcable: isaacs_home › that’s usually the case, IME.
[18:03] isaacs_home: we're all giving him credit for this revolution, but that's a bit like giving gutenberg credit for printing.
[18:03] elliottcable: if you have an idea, and don’t do it, someone else will.
[18:03] isaacs_home: not that doing it isn't worthy of credit.
[18:03] elliottcable: I’m not so sure that you can’t still give him credit.
[18:03] isaacs_home: yeah
[18:03] kurmangazy: that is true, elliottcable 
[18:03] elliottcable: If you don’t give people credit for ideas if the ideas are *likely* …
[18:03] isaacs_home: actually doing something is what makes it actually happen :)
[18:03] elliottcable: then suddenly, of what worth are ideas at all?
[18:03] elliottcable: yeah, isaacs_home
[18:03] elliottcable: 99% perspiration and all that.
[18:04] elliottcable: basically “standing on the shoulders of giants” in this industry
[18:04] elliottcable: is a whole lot more about “standing on the sweaty armpits of giants”
[18:04] elliottcable: … that was supposed to be a reference to 99% perspiration/1% inspiration, but I think it ended up sounding more like a commentary on geek’s body odor
[18:04] elliottcable: ACTION sighs
[18:04] elliottcable: </elliottcable attempting to be insightful>
[18:04] elliottcable: <elliottcable actually working>
[18:05] kurmangazy: if it hadn't been for Steve Jobs, I wouldn't have had this iPad. Oh, wait. I don't have an iPad.
[18:05] elliottcable: I *seriously* love my iPad.
[18:05] elliottcable: Jobs *was* responsible for great things, truely great things.
[18:05] erichynds has joined the channel
[18:05] elliottcable: he may be no ritchie, but then again, who of us *is*?
[18:06] kurmangazy: I've never touched an iPad, so I don't know how great they are.
[18:07] kurmangazy: My heroes are people like Linus Torvalds, that created things that I can easily afford.
[18:07] elliottcable: heh.
[18:08] elliottcable: here’s hoping some of Jobs’ priorities leak back to the open-source community.
[18:08] elliottcable: … eventually. /=
[18:08] mmalecki: well, Apple open-sources quite big part of OS X
[18:08] kurmangazy: I think his philosophy was diametrically opposed to open source.
[18:08] mmalecki: kernel, many drivers and lower level things
[18:09] kurmangazy: You're not even supposed to open up your Mac and look inside.
[18:09] elliottcable: yes, but those aren’t the parts that are Jobs.
[18:09] elliottcable: oh gods, I didn’t mean to start an Apple-vs-everything-else argument.
[18:09] mmalecki: elliottcable: you didn't, people are sane here
[18:09] kurmangazy: sorry, I think I might have brought it up.
[18:10] elliottcable: ACTION pats kurmangazy
[18:10] elliottcable: mmalecki › people other than me, at least.
[18:10] kurmangazy: I was really surprised, though, that OSX included a unix shell and such, since earlier Macs were all about simplicity taken to extremes.
[18:10] jesusabdullah: iPads are kinda neat. It's not really something I want, but there are a lot of good ideas there, and the ux design work is really good
[18:10] jesusabdullah: y'know, like most of Apple's stuff
[18:11] elliottcable: Hah! Best debugging output ever. http://ell.io/amXI
[18:11] kurmangazy: Mac mice have one button. Unix mice have three.
[18:11] elliottcable: ++ jesusabdullah
[18:11] purr: Let it be known that elliottcable loves jesusabdullah.
[18:11] jesusabdullah: My problem is that I want to "get work done" and that means basically having linux
[18:11] jesusabdullah: because I know how to drive this thing
[18:11] mmalecki: elliottcable: hey, what's that?
[18:11] jesusabdullah: It's like automatic vs. manual transmissions
[18:11] mmalecki: elliottcable: some lib?
[18:11] mmalecki: jesusabdullah++
[18:11] v8bot_:  mmalecki has given a beer to jesusabdullah. jesusabdullah now has 5 beers.
[18:11] elliottcable: mmalecki › the debugging output from the path-resolution portion of my `require()`-replacement
[18:11] jtsnow has joined the channel
[18:12] elliottcable: mmalecki › `++ jesusabdullah ≥ jesusabdullah++`
[18:12] mmalecki: elliottcable: nice!
[18:12] elliottcable: everybody knows precement > postcrement! ;D
[18:12] mmalecki: you mean, it's faster?
[18:12] jesusabdullah: except you're replacing require?
[18:12] jesusabdullah: but elliottcable I like my require!
[18:12] elliottcable: mmalecki › that, and purr ≥ v8bot_ :3
[18:12] elliottcable: jesusabdullah › lol. That’s fine, nobody but me will use this.
[18:12] mmalecki: hm. maybe kohai should handler ++nick...
[18:12] elliottcable: jesusabdullah › but you have to admit the debugging output is pwetty. ;D
[18:12] jesusabdullah: Oh yeah, totally
[18:13] elliottcable: mmalecki › please don’t, I don’t want to collide
[18:13] mmalecki: elliottcable: np
[18:13] elliottcable: mmalecki › purr eats up “++ a phrase”, “-- a phrase”, “<3 a phrase”, and “ಠ_ಠ a phrase”
[18:13] elliottcable: basically as synonyms, except with ++/-- you can reset your opinion.
[18:13] AvianFlu: kohai isn't in this room anyway
[18:13] elliottcable: mmalecki › oh, where is he?
[18:13] mmalecki: AvianFlu: did you redeploy her?
[18:14] mmalecki: also, is it her?
[18:14] mmalecki: or him? or it?
[18:14] kurmangazy: Have you seen the people that claim that "i += 1" is somehow better style than "i++"?
[18:14] AvianFlu: I tend to say "him" but it's a bot
[18:14] elliottcable: to be clear, purr isn’t my bot; it’s admin’d by a guy named devyn (not in here), and the original version was written by eboyjr (in here)
[18:14] AvianFlu: five hook.io processes don't really have a gender
[18:14] elliottcable: kurmangazy › I can actually get behind that, in some ways.
[18:14] jesusabdullah: elliottcable: I tried to write a module loader for matlab yesterday https://gist.github.com/1289223#file_require.m
[18:14] mmalecki: AvianFlu: that's cruel.
[18:14] kkszysiu has joined the channel
[18:14] elliottcable: jesusabdullah › baahahrahghrg*coughs*
[18:14] dexter_e has joined the channel
[18:14] jesusabdullah: There's a blog post that goes with it too
[18:15] mmalecki: elliottcable: and *she* is in #nodejitsu
[18:15] kurmangazy: elliottcable: you like the long form better?
[18:15] elliottcable: oh, I’m banned from that channel anyway
[18:15] uchuff has joined the channel
[18:15] mmalecki: haha, why?
[18:15] elliottcable: still never figured out why
[18:15] AvianFlu: you're not banned, you just can't talk
[18:15] elliottcable: kurmangazy › I don’t personally, I can just see why
[18:15] elliottcable: AvianFlu › same diff, broski
[18:16] versicolor has joined the channel
[18:16] elliottcable: mmalecki › no idea. I think they’re trolling me, except I don’t even know what the channel is about, nor have I been there since the first time I joined, so *shrug*
[18:16] mmalecki: lol
[18:16] AvianFlu: when you talk, you fill up the screen with lots of comments about how things that don't need fixing need fixing, and when people disagree, you insult them
[18:16] elliottcable: I’m banned on half of Freenode.
[18:16] elliottcable: and I’m in the other half.
[18:16] kurmangazy: elliottcable: I like simplicity. it's clear that with "i++" you're only adding 1 and not some other number
[18:16] elliottcable: /whois elliottcable
[18:16] AvianFlu: since we try to run support from #nodejitsu, that's non-productive
[18:17] elliottcable: AvianFlu › dude, fuck right off, ’kay?
[18:17] elliottcable: kurmangazy › makes sense, as well
[18:17] elliottcable: kurmangazy › I like i++, personally
[18:17] mmalecki: hm. I think that's why.
[18:17] elliottcable: kurmangazy › just pointing out that I *understand* the reasoning behind those who prefer `i += 1`
[18:17] jesusabdullah: whoa
[18:17] jesusabdullah: chillax people
[18:17] jesusabdullah: ಠ_ಠ
[18:18] kurmangazy: elliottcable: I'm not sure that I've heard the reasons.
[18:18] elliottcable: kurmangazy › basically, it’s coming from a mindset where “i++” is all about its side effects.
[18:18] elliottcable: i.e. the text’s semantic meaning boils down to ‘We want side effects here’
[18:18] elliottcable: and anywhere you *don’t* want the side-effects, it’s more semantic to use the explicit `i += `
[18:18] willwhite has joined the channel
[18:19] elliottcable: I just use ++i everywhere.
[18:19] kurmangazy: elliottcable: I don't follow. don't they both have the side effect of incrementing i?
[18:19] kkszysiu_ has joined the channel
[18:19] elliottcable: mmalecki › oh, regarding that screenshot:
[18:20] elliottcable: || console.error( (s=new Error().stack.split('\n').length + 10 +
[18:20] elliottcable: ||                             $.reduce(function(acc,_,i,a){return acc+(i==a.length-1?'├─':'│ ')+'\033['+(36-i)+'m'},'')+
[18:20] elliottcable: ||                             '┐'+$[-1].mutator.tag+": ")+new Array(30-s.replace(/\033\[\d+m/g,'').length).join(' ')+
[18:20] smtlaissezfaire has joined the channel
[18:20] elliottcable: ||                           '▌\033[0m'+untestedPaths.first.path.replace(query, "\033[35m"+query+"\033[0m"))
[18:20] purr: elliottcable: ReferenceError: $ is not defined
[18:20] elliottcable: mmalecki › so no, there’s not a specific lib for that output; it’s just hacked together while I’m debugging/introspecting this complex algorithm.
[18:21] TheFuzzball has joined the channel
[18:22] kurmangazy: does anybody have an opinion on what's the best XML module for node.js (SAX)?
[18:22] japj:  /dev/null?
[18:22] elliottcable: hm, is there a set of expat bindings for Node?
[18:22] japj: ;)
[18:22] kurmangazy: there are several expat bindings
[18:22] TooTallNate has joined the channel
[18:23] elliottcable: several. hah. of course.
[18:23] elliottcable: mraleph › around?
[18:24] TheFuzzball has joined the channel
[18:25] cjm has left the channel
[18:25] jtsnow has joined the channel
[18:26] simenbrekken has joined the channel
[18:27] tlynn has joined the channel
[18:28] TheJH: kurmangazy, "sax" maybe?
[18:28] TheJH: !@kurmangazy npm info sax
[18:28] jhbot: kurmangazy, sax by Isaac Z. Schlueter, version 0.2.5: An evented streaming XML parser in JavaScript
[18:28] kurmangazy: elliottcable: do you think a simple expat binding is the way to go? there are SAX APIs that are based on various different libs
[18:29] TheJH: kurmangazy, you might also be interested in my library that runs on top of it and gives you an object stream
[18:29] TheJH: !@kurmangazy npm info halfstream-xml
[18:29] jhbot: kurmangazy, couldn't find that package
[18:29] TheJH: !@kurmangazy npm info halfstreamxml
[18:29] jhbot: kurmangazy, halfstreamxml by Jann Horn, version 0.1.2-1: converts a stream of XML to a stream of objects
[18:29] kurmangazy: I'll take a look TheJH 
[18:30] kurmangazy: that's not a bad approach, but I've taken a different approach
[18:30] elliottcable: kurmangazy › not sure.
[18:31] elliottcable: I haven’t done XML parsing in JS yet.
[18:31] elliottcable: I’m not sure what’d feel most “right.”
[18:32] kurmangazy: TheJH: I've looked at sax-js. It's entirely in javascript, right?
[18:32] langworthy has joined the channel
[18:32] TheJH: kurmangazy, true
[18:32] perezd has joined the channel
[18:32] TheFuzzball has joined the channel
[18:32] kurmangazy: I think I tested sax-js and it ate a lot of memory and was slow
[18:33] TheJH: kurmangazy, when did you test it? there was a huge speed improvement at June 10, 2011
[18:33] TheJH: kurmangazy, https://github.com/isaacs/sax-js/pull/25
[18:33] TheJH: ACTION wrote the patch :)
[18:34] cha0s has joined the channel
[18:34] cha0s has joined the channel
[18:34] kurmangazy: TheJH: ah. I see you've done a lot of work in this area. I created my own approach. I'd like if you took a look
[18:34] kurmangazy: I'm just trying to find the right XML lib to base it on
[18:35] kurmangazy: I think a native-code parser would be a good thing
[18:36] kurmangazy: is node-expat well done, do you think?
[18:37] elliottcable: well if it’s a one-to-one mapping, there’s no real “well-done”-ness to it.
[18:37] elliottcable: and expat is probably never a particularly *bad* idea, if you’re trying to build a new API
[18:37] kurmangazy: elliottcable: as long as it works
[18:37] elliottcable: might not be the absolute best one, though.
[18:37] d0k_ has joined the channel
[18:38] kurmangazy: libxmljs has a parsing function that is blocking, so that's clearly a bad idea
[18:38] gut4 has joined the channel
[18:40] kurmangazy: how do I tell node-waf what the node path is?
[18:40] mraleph: elliottcable: yes
[18:40] mraleph: elliottcable: how can I help?
[18:40] elliottcable: mraleph › wrapped up that pullrequest, could you sanity-check it?
[18:41] elliottcable: mraleph › isaacs_home wants more eyes on it before he merges, and I figure you’re the best pair of eyes I can get :D
[18:41] elliottcable: mraleph › https://github.com/joyent/node/pull/1801
[18:41] Frippe has joined the channel
[18:41] Renegade001 has joined the channel
[18:42] isaacs has joined the channel
[18:43] linkgoron has joined the channel
[18:44] micahjohnston has joined the channel
[18:45] AvianFlu: hey, node passed 10,000 github watchers!
[18:45] AvianFlu: http://nodejs-vs-ror.nodejitsu.com/
[18:45] japj: yes it did ;)
[18:45] Swizec has joined the channel
[18:45] japj: didnt you see my tweet when we had 9998?
[18:46] japj: we even had 10004 for a short while I think
[18:47] AvianFlu: nice
[18:48] kurmangazy: is there a reason to prefer a pure-js XML parser like sax-js?
[18:48] mraleph: elliottcable: looks fine
[18:48] mraleph: elliottcable: those parts that are v8 api related
[18:49] mraleph: elliottcable: did not check anything else.
[18:49] elliottcable: mraleph › thanks!
[18:49] elliottcable: kurmangazy › working web-side
[18:49] elliottcable: kurmangazy › but that’s of debatable purpose.
[18:49] kurmangazy: it looks like sax-js makes good use of the node.js apis, which is good.
[18:49] elliottcable: 600 watchers.
[18:49] tilgovi has joined the channel
[18:49] tilgovi has joined the channel
[18:49] linkgoron has joined the channel
[18:50] elliottcable: are there really 600 people left in the world who *aren’t* watching Node?
[18:50] elliottcable: :3
[18:50] kurmangazy: elliottcable: does sax-js work in the browser?
[18:50] odyniec_ has joined the channel
[18:50] elliottcable: kurmangazy › *shrug*, no idea
[18:50] elliottcable: but I can’t imagine any other reason for doing it in pure JS.
[18:50] elliottcable: unless it’s some sort of ideological thing?
[18:50] patcito has joined the channel
[18:50] CarterL has joined the channel
[18:50] elliottcable: maybe it’s for learning purposes.
[18:51] d4rk1ink_: im having trouble installing npm on ubuntu 11.04
[18:51] elliottcable: so people who don’t know lower-level languages can explore and learn how XML parsers work?
[18:51] V1 has joined the channel
[18:51] AvianFlu: what kind of trouble, d4rk1ink_ ?
[18:51] isaacs: kurmangazy: yes, it does work in the browser.
[18:51] kurmangazy: elliottcable: I guess if it could be done without sacrificing performance, pure js would have architectural benefits
[18:51] isaacs: kurmangazy: but there are other tools in the browser for working with xml, too
[18:51] isaacs: elliottcable: sax-js is pretty fast, and does not require compilation.
[18:51] isaacs: elliottcable: that's a pretty big win
[18:52] elliottcable: hm
[18:52] elliottcable: is it?
[18:52] d4rk1ink_: AvianFlu: the docs aren't installing, resulting in npm giving me an error whenever invoked
[18:52] kurmangazy: isaacs: that's cool. maybe I will bind my API to sax-js, just for the sake of showing it to people
[18:52] isaacs: also, doing it in js makes it much more easy to find and correct problems, add features, etc.
[18:52] elliottcable: a little upfront time to compile it, for a crapton of runtime performance benifit, seems like a win to me
[18:52] d4rk1ink_: isaacs: i read your comments on some github issues mentioning this issue should be fixed
[18:52] isaacs: elliottcable: sax-js is more than fast enough.
[18:52] evilxy has left the channel
[18:52] `3rdEden has joined the channel
[18:52] elliottcable: isaacs › probably ^‿^
[18:52] d4rk1ink_: but I've tried with the latest and still no go
[18:52] isaacs: elliottcable: building a dom is the hard part.  if you do that in C, it's still pretty slow.
[18:53] elliottcable: isaacs › then again, that also depends on whether you consider JavaScript easier to debug/maintain than <insert bound language here>
[18:53] kurmangazy: isaacs: building the DOM isn't necessary
[18:53] isaacs: elliottcable: evented state-machine style parsing is very fast.
[18:53] mmalecki: `3rdEden: I've never spoke at any conference and it might sound stupid, but how long talk should I have?
[18:53] mmalecki: s/spoke/spoken/
[18:53] isaacs: and the dom is only slow because it's a stupid api
[18:53] isaacs: way too much baggage that's almost never used.
[18:53] elliottcable: mmalecki › you’re doing a talk?
[18:53] elliottcable: the DOM is terrible /=
[18:53] isaacs: just adding .parent ref and .children array would be enough for almost any purpose.
[18:53] mmalecki: elliottcable: yeah, web-5.org
[18:53] isaacs: .innerHTML etc is all nonsense
[18:53] elliottcable: yaaahp.
[18:53] mmalecki: isaacs++
[18:53] v8bot_:  mmalecki has given a beer to isaacs. isaacs now has 7 beers.
[18:54] chrislorenz has joined the channel
[18:54] elliottcable: sun, grapes, and web-5, heh
[18:54] elliottcable: aw, france
[18:54] kurmangazy: building the entire DOM tree is just a waste of memory
[18:54] elliottcable: ++ isaacs
[18:54] purr: Let it be known that elliottcable loves isaacs.
[18:54] `3rdEden: mmalecki: it depends on deep you will dive in your topic
[18:54] Raul_ has joined the channel
[18:54] `3rdEden: and I set talk at web-5.org for 45min
[18:55] Cromulent has joined the channel
[18:55] Frippe has joined the channel
[18:55] `3rdEden: so I get about 40 min to chat, and 5 min for q&a
[18:55] Frippe has joined the channel
[18:55] mmalecki: `3rdEden: so, let it be 45 minutes
[18:55] JmZ_ has joined the channel
[18:55] mmalecki: also, I think I'll roll out some cool presentation framework
[18:56] mmalecki: like html5slides, but better
[18:56] mmalecki: you know, repl available and things
[18:56] elliottcable: My presentation framework:
[18:56] elliottcable: opening windows
[18:56] mmalecki: `3rdEden: you may want to use it for socket.io talk
[18:56] elliottcable: dragging them out of the way and opening another window
[18:56] d4rk1ink_: npm install error: https://gist.github.com/4350b893e628df29f818
[18:56] japj: mmalecki: that web-5.org website behaves ... strange
[18:56] mmalecki: japj: I know
[18:56] mmalecki: japj: happens only on chrome
[18:57] `3rdEden: works fine here =/
[18:57] `3rdEden: in chrome
[18:57] japj: ah. how fun
[18:57] elliottcable: d4rk1ink_ › try without SSH?
[18:57] mmalecki: meh. it just still refreshes
[18:57] elliottcable: SSL*
[18:57] elliottcable: d4rk1ink_ › `node cli.js install http://github.com/isaacs/ronnjs/tarball/master`
[18:57] elliottcable: just a random thought.
[18:58] japj: mmalecki: april next year?
[18:58] mmalecki: japj: yeah
[18:58] `3rdEden: mmalecki the biggest downside is you can't easily upload them to slideshare etc
[18:59] d4rk1ink_: elliottcable: https://gist.github.com/f9097c0f4cbca12e5a67
[18:59] mmalecki: `3rdEden: I wouldn't upload it there anyway
[18:59] mmalecki: it's flash
[18:59] d4rk1ink_: new fail
[18:59] Wizek has joined the channel
[18:59] `3rdEden: mmalecki it's html5
[18:59] evilxy has joined the channel
[18:59] mmalecki: `3rdEden: oh?
[18:59] `3rdEden: YARLY
[18:59] enmand_ has joined the channel
[18:59] Nuck: slideshare is flash iirc
[18:59] `3rdEden: http://www.slideshare.net/html5
[18:59] `3rdEden: Nuck LIES.
[18:59] mmalecki: `3rdEden: I will make mine a gh-pages anyway
[19:00] `3rdEden: =p
[19:00] d4rk1ink_: the bash script fails for me, so I'm cloning and then sudo make install
[19:00] evilxy has left the channel
[19:00] mmalecki: nice, I thought it's flash-only
[19:00] evilxy has joined the channel
[19:00] `3rdEden: (they changed like a couple of days ago :p)
[19:00] Nuck: mmalecki: same :P
[19:00] Nuck: `3rdEden: ahhhhh
[19:00] Morkel has joined the channel
[19:01] EhevuTov has joined the channel
[19:01] boltR has joined the channel
[19:01] elliottcable: d4rk1ink_ › then I honestly have no idea. I’m no NPM master.
[19:01] stonebranch has joined the channel
[19:02] d4rk1ink_: elliottcable: no problem, i appreciate the help
[19:02] evilxy has joined the channel
[19:03] beve: tomtom ?
[19:03] hellp has joined the channel
[19:03] isaacs: d4rk1ink_: the curl | sh install shouldn't be requiring that
[19:03] isaacs: d4rk1ink_: make is trying to rebuild all the docs lately, though.  not sure why.
[19:04] isaacs: d4rk1ink_: node cli.js install -gf npm <-- that should work, in the source code folder, without requiring ronn for anything
[19:05] isaacs: nodeup 5 will be starting shortly
[19:05] kerx has joined the channel
[19:05] Nuck: isaacs: Livestreamed?
[19:05] isaacs: join #nodeup
[19:05] Nuck: isaacs: Linky?
[19:05] isaacs: yes
[19:05] aaronmcadam has joined the channel
[19:05] madsleejensen has joined the channel
[19:06] kloeri_ has joined the channel
[19:07] isaacs: http://www.ustream.tv/channel/nodeup
[19:07] isaacs: \
[19:07] cjm has joined the channel
[19:08] Kunda has joined the channel
[19:09] fmeyer has joined the channel
[19:09] d4rk1ink__ has joined the channel
[19:09] japj: rogue podcast coming up again?
[19:09] m4rcs: https://gist.github.com/1291278 I'm trying to send simple messages from one node program to an other on the same maschine, but I have problems with receiving them
[19:09] dhasenan_ has joined the channel
[19:09] d4rk1ink__: isaacs: sorry, disconnected
[19:09] m4rcs: Can somebody give me a hint?
[19:09] d4rk1ink__: isaacs: im getting the same "npm ERR! Error: SSL Error: CERT_NOT_YET_VALID"
[19:10] d4rk1ink__: running that command
[19:10] mmalecki: meh, flash -.-
[19:10] TheJH: d4rk1ink__, is your system clock at the right date?
[19:10] d4rk1ink__: perhaps not, 
[19:11] d4rk1ink__: TheJH: good call, changing, retrying
[19:11] TheJH: d4rk1ink__, validity starts at 05.09.11
[19:13] d4rk1ink__: TheJH: yeah, I resurrected an ubuntu VM that I had never fully set up
[19:13] ph^ has joined the channel
[19:13] aaronmcadam: all I get is ads for that nodeup link :(
[19:13] kurmangazy: isaacs: in sax-js, when does enend() get called? at the end of the document?
[19:13] kurmangazy: isaacs: I mean onend()...
[19:13] isaacs: kurmangazy: yes.
[19:14] kurmangazy: isaacs: thanks
[19:14] d4rk1ink__: isaacs: thanks, that worked
[19:14] d4rk1ink__: TheJH++ thanks to you as well
[19:14] _xy_ has joined the channel
[19:14] isaacs: d4rk1ink__: i need to figure out why make is thinking it needs to rebuild the docs.
[19:14] xy_ has joined the channel
[19:14] isaacs: d4rk1ink__: not right this second though.  for now, i'm just not using make in that script, which is less than ideal, imo
[19:15] d4rk1ink__: well at least it's there
[19:15] d4rk1ink__: also I've experienced the doc build hanging indefinitely, FWIW
[19:16] Lingerance: m4rcs: You're probably better off using UNIX sockets or named pipes (FIFO)
[19:18] criswell has joined the channel
[19:18] m4rcs: do you have any docs for that?
[19:19] Lingerance: http://stackoverflow.com/questions/7045614/can-node-js-listen-on-unix-socket
[19:20] versicolor has joined the channel
[19:20] m4rcs: ok nice I'll take a look at it
[19:21] isaacs: SubStack: come to #nodeup once you're done assembling coffee
[19:21] matt_c has joined the channel
[19:21] d4rk1ink__: node is much more fun than golang
[19:22] jhbot: #nodeup starts soon!
[19:22] Wizek has joined the channel
[19:22] dnyy has joined the channel
[19:23] tuhoojabotti: Good night.
[19:23] jhbot: #nodeup starts soon!
[19:23] tuhoojabotti: ugh
[19:23] Lingerance: What is nodeup?
[19:23] Frippe has joined the channel
[19:24] jhbot: #nodeup starts soon!
[19:24] mmalecki: lol
[19:25] MooGoo: jhbot u killed my father
[19:25] jhbot: #nodeup starts soon!
[19:25] MooGoo: bastard
[19:25] mmalecki: lulz
[19:26] dubenstein has joined the channel
[19:26] jhbot: MooGoo, MUHAHAAAAA!!!
[19:26] MooGoo: all nodejs bots are inherently evil
[19:26] jhbot: #nodeup starts soon!
[19:26] TheJH: MooGoo, what about yours? :D
[19:27] jhbot: #nodeup starts soon!
[19:27] catb0t has joined the channel
[19:27] MooGoo: .insult
[19:27] catb0t: MooGoo was totally pwned by n00bs!! LOL!! n00b!
[19:27] TheJH: :D
[19:27] MooGoo: maybe catb0t is just stupid
[19:27] tuhoojabotti: .insult
[19:27] catb0t: tuhoojabotti uses an HD radio.
[19:28] tuhoojabotti: lol
[19:28] TheJH: .insult someone else
[19:28] catb0t: someone else, you're not a big fish.  You're not even a fish.
[19:28] MooGoo: cool story catb0t
[19:28] jhbot: #nodeup starts soon!
[19:28] kurmangazy: isaacs: onend() doesn't seem to be getting called. do I need to close the stream or something?
[19:28] TheJH: .insult !npm info npm
[19:28] catb0t: !npm info npm loves to suck 36 cocks
[19:28] jhbot: npm by Isaac Z. Schlueter, version 1.0.99: A package manager for node
[19:28] isaacs: kurmangazy: yes, you need to call .end() at some point
[19:28] tony_ has joined the channel
[19:28] TheJH: .insult .insult !npm info npm
[19:28] catb0t: .insult !npm info npm is a RUINED WOMAN
[19:28] TheJH: :(
[19:29] isaacs: kurmangazy: if you use the stream interface, then you should be able to just do input.pipe(saxStream)
[19:29] TheJH: .insult /test
[19:29] catb0t: /test has had his sofa set on fire by black people
[19:29] kurmangazy: isaacs: thanks
[19:29] mmalecki: haha
[19:29] jhbot: #nodeup starts soon!
[19:29] jhbot has joined the channel
[19:30] MooGoo: http://bigmooworld.com:4800/chess/hobbes/svg
[19:30] MooGoo: does that look right
[19:30] Lingerance: Yes
[19:30] MooGoo: what browser?
[19:31] mmalecki: yes
[19:31] dhasenan_: Looks fine in chrome
[19:31] mmalecki: chrome 16 dev
[19:31] Lingerance: Quassel-IRC's web-preview, which is webkit based.
[19:31] Ax1 has joined the channel
[19:31] guillermo has joined the channel
[19:31] MooGoo: chromium for me seems to not render the pieces
[19:31] MooGoo: but chrome does
[19:31] MooGoo: so I guess its a bug
[19:31] TheFuzzball has joined the channel
[19:31] Lingerance: Also Firefox something
[19:31] esundahl has joined the channel
[19:31] thepatr1ck has joined the channel
[19:32] Brandon_R has joined the channel
[19:32] Brandon_R: Hello guys
[19:32] Lingerance: FF 7 apparently
[19:33] chjj: node finally 10k watchers
[19:33] decaf has joined the channel
[19:34] deedubs has joined the channel
[19:35] brianseeders has joined the channel
[19:35] EhevuTov has joined the channel
[19:36] jbpros has joined the channel
[19:36] Brandon_R: hey guys
[19:36] Brandon_R: how many concurrent connections can socket.io handle out of the box with no tuning?
[19:37] MooGoo: 3 or 4
[19:37] schwab has joined the channel
[19:37] spathi^ has joined the channel
[19:37] TheJH: MooGoo, errm, what?
[19:38] MooGoo: maybe 5
[19:39] Brandon_R: nice
[19:39] MooGoo: yea its optimized
[19:39] stonebranch has joined the channel
[19:40] Brandon_R: So
[19:40] Brandon_R: what you guys working on?
[19:40] Brandon_R: Anything cool?
[19:41] mmalecki: no, just boring stuff. cool things are too mainstream.
[19:41] Brandon_R: What are you guy's inspiration for colors?
[19:41] Lingerance: Exalted character management stuff
[19:41] Brandon_R: Like where do you pick your colors from?
[19:41] Brandon_R: http://colorapi.com/?
[19:41] MooGoo: straight from the rainbow
[19:42] Brandon_R: <3
[19:42] Brandon_R: http://i.imgur.com/YVxVR.png
[19:42] ninjapig has joined the channel
[19:42] ninjapig has joined the channel
[19:42] m4rcs: Thanks Lingerance that's what was looking fo
[19:42] m4rcs: r
[19:42] kurmangazy: isaacs: your sax-js interface is as good as any... someone should create an expat binding that uses your interface
[19:46] pizthewiz has joined the channel
[19:47] TheFuzzb_ has joined the channel
[19:48] Brandon_R: hi
[19:48] Brandon_R: thejh what's up
[19:48] TheJH: hello Brandon_R
[19:48] erictherobot has joined the channel
[19:48] Aria has joined the channel
[19:49] Brandon_R: not much
[19:49] Brandon_R: am i bothering you?
[19:49] mikeal has joined the channel
[19:50] TheJH: Brandon_R, only half of my brain available now because I'm listening to #nodeup
[19:50] Brandon_R: oh
[19:50] Brandon_R: link
[19:50] Brandon_R: any videos of nodejsconf or other node.js screencasts?
[19:50] TheJH: Brandon_R, http://www.ustream.tv/channel/nodeup and #nodeup
[19:51] stagas has joined the channel
[19:51] Brandon_R: is it a video or just talking
[19:52] Wizek has joined the channel
[19:52] jtsnow has joined the channel
[19:53] japj: podcast, just talking
[19:53] saesh has joined the channel
[19:53] mmalecki: fuck it, I'm building my own /dev/null and shit
[19:53] japj: lol
[19:54] mmalecki: I can't make it block test output and not block reporter
[19:54] Brandon_R: omg
[19:55] Brandon_R: how do i register with ustream
[19:55] Brandon_R: that captcha is annoying
[19:55] Brandon_R: i'm missing nodeup
[19:55] mmalecki: you don't have to register.
[19:55] Renegade001 has joined the channel
[19:56] Brandon_R: i want to chat
[19:56] TheJH: Brandon_R, join #nodeup
[19:57] cjm: yep, nodeup is live, http://www.ustream.tv/channel/nodeup and join #nodeup
[19:57] cjm: q&a later on
[19:59] smathy has joined the channel
[20:00] tekky has joined the channel
[20:00] Brandon_R: is nodeup liveZ?
[20:00] Brandon_R: where can i ask questions to get it answered on the talk
[20:01] cjm: yep, just join #nodeup here on freenode
[20:02] Mokona has joined the channel
[20:06] mikeal has joined the channel
[20:07] d4rk1ink has joined the channel
[20:08] magnetik: Can someone give me a clue about what the problem is : http://pastebin.com/2NzLwA1p ?
[20:11] gartenst_ has joined the channel
[20:12] eboyjr has left the channel
[20:12] abraxas has joined the channel
[20:12] eboyjr has joined the channel
[20:13] bengrue has joined the channel
[20:14] rjack has joined the channel
[20:14] d4rk1ink__: has anyone worked with TameJS?
[20:14] d4rk1ink__: i like the flow a lot better than Step, but I'm not sold on Tame just yet
[20:18] dshaw_ has joined the channel
[20:18] neurodrone has joined the channel
[20:18] dubenstein has joined the channel
[20:18] issackelly_ has joined the channel
[20:19] smtlaissezfaire has joined the channel
[20:22] rjack has joined the channel
[20:22] matyr has joined the channel
[20:23] bnoordhuis has joined the channel
[20:23] dubenstein has joined the channel
[20:25] Ax1 has joined the channel
[20:26] JmZ_ has joined the channel
[20:26] Brian` has joined the channel
[20:27] dubenstein has joined the channel
[20:32] matyr has joined the channel
[20:32] martin_sunset has joined the channel
[20:34] vns has joined the channel
[20:35] Aria: magnetik: process.binding('net') doesn't exist. Are you following an ancient example or something?
[20:36] mAritz has joined the channel
[20:36] Corren has joined the channel
[20:36] Brandon_R has joined the channel
[20:36] Corren: o/
[20:36] seebees has left the channel
[20:36] magnetik: Aria, thanks for your answer, yep I'm using the library "webworkers"
[20:37] magnetik: using this : https://github.com/antoniogarrote/rdfstore-js
[20:38] Brandon_R: what if rapunzel was black
[20:38] Brandon_R: have you guys ever seen a black programmer?
[20:39] tbranyen: i've seen a blackhat programmer
[20:39] tbranyen: if thats what you're asking
[20:39] Brandon_R: no
[20:39] Brandon_R: black
[20:39] Brandon_R: like skin
[20:39] tbranyen: i don't think we're supposed to be talking about this
[20:39] jesusabdullah: Umm, yes?
[20:40] issackelly_ has joined the channel
[20:41] Corren: whoa, what did i walk into
[20:41] Aria: Yes, but there is a huge racial mismatch at work. There've been lots of theories, but in the USA at least, our idea of racial equality is still mostly dream.
[20:41] tbranyen: wretched hive of scum and villainy
[20:42] Renegade001_ has joined the channel
[20:42] Brandon_R: what?
[20:42] jesusabdullah: and you can see that nobody's comfortable discussing this because we like to think that programming is a meritocracy
[20:42] Brandon_R: i was just asking a question lol
[20:42] Brandon_R: i didn't mean anything by it
[20:42] jesusabdullah: if you can hack you can work, right? but demographics don't really support an equal playing field
[20:42] magnetik: Aria, should I look for a replacement of process.binding('net') or just let this code down ?
[20:43] Aria: magnetik: Looking now. Which node version are you using?
[20:43] magnetik: latest unstable
[20:44] jackbean_ has joined the channel
[20:44] Xano_ has joined the channel
[20:45] Aria: Oh, well then.
[20:45] Aria: Any reason you chose unstable?
[20:45] magnetik: using some certificate related things that are only available in unstable 
[20:45] tylerstalder has joined the channel
[20:45] Aria: Fun! I do believe you'll have to port webworker to the newest release.
[20:46] Aria: It twiddles the low-level private API, which has been replaced in node 0.5
[20:46] bnoordhuis: https://github.com/joyent/node/watchers <- we passed 10K watchers today
[20:46] Aria: Wow.
[20:46] magnetik: humm okay
[20:46] magnetik: i'll look for it, thanks :)
[20:46] martin_sunset has joined the channel
[20:47] Aria: I'd put in an issue with pgreiss
[20:47] Aria: See if he's looked at the porting.
[20:47] Aria: (or why it needs the private API at all)
[20:48] magnetik: Ok, I was on node-webworkers github atm
[20:48] magnetik: I fill in an issue report
[20:48] Aria: Actually, looking at his code .. it looks like the netBinding object he gets isn't used.
[20:48] Aria: try removing the reference to it.
[20:49] Epeli has joined the channel
[20:51] vidi has joined the channel
[20:51] dgathright has joined the channel
[20:52] outbounder has joined the channel
[20:53] nerdy has joined the channel
[20:53] vidi has joined the channel
[20:53] fangel has joined the channel
[20:54] magnetik: Aria, I've another error but it's not related to it
[20:54] magnetik: thanks
[20:55] willwhite has joined the channel
[20:55] magnetik: Its "Error: require.paths is removed." related, so I need to change webworker yeah :(
[20:56] karboh has joined the channel
[20:56] Aria: yeah, that one's easy.
[20:56] Aria: But there's more.
[20:57] Aria: (remove the require.paths line, but below where it says "ws/...." change it to "./ws/....."
[20:57] Aria: )
[20:57] cjheath has joined the channel
[20:57] digman543 has joined the channel
[20:58] Aria: Of course, much of what you want to do may be accomplished with http://nodejs.org/docs/v0.5.9/api/child_processes.html#child_process.fork
[20:59] alejandromg has joined the channel
[20:59] magnetik: I'm kinda lost, but I'll look for it
[20:59] magnetik: (node is new f or me)
[20:59] Aria: what are you trying to do?
[20:59] JmZ_ has joined the channel
[21:00] magnetik: I'm trying to make rdfstore to work
[21:00] magnetik: because I need to manipulate RDF files with node
[21:02] Aria: Aah.
[21:02] pitlimit has joined the channel
[21:02] pitlimit: I've begun to use node_hbase to access an hbase database. However, I notice that node_hbase uses GET requests to access the database.... is there a way to directly access the DB?
[21:03] deedubs_ has joined the channel
[21:03] innociv has joined the channel
[21:05] innociv: Node keeps ceasing to function without giving any error output.  It is running, but when you try to connect to socket.io in a browser it just hangs indefinitely.   I have it running in putty and normally it'd keep giving heartbeat updates, but those stop and then putty connection times out from being idle.
[21:06] necrodearia has joined the channel
[21:06] JmZ_ has joined the channel
[21:07] dimroc has joined the channel
[21:13] Frippe_ has joined the channel
[21:13] paulwe has joined the channel
[21:14] TomY has joined the channel
[21:14] tlynn has joined the channel
[21:15] joshkehn has joined the channel
[21:15] joshkehn has left the channel
[21:15] verdoc has joined the channel
[21:15] boltR has joined the channel
[21:16] blup has joined the channel
[21:16] TheFuzzball has joined the channel
[21:20] dgathright has joined the channel
[21:21] V1 has joined the channel
[21:21] guillermo has joined the channel
[21:23] zeade has joined the channel
[21:23] towski has joined the channel
[21:24] CarterL has joined the channel
[21:25] necrodearia has joined the channel
[21:25] necrodearia has joined the channel
[21:25] jtrudeau has joined the channel
[21:25] djcoin has joined the channel
[21:26] fairwinds has joined the channel
[21:28] fairwinds_ has joined the channel
[21:28] mmalecki has joined the channel
[21:29] sdwrage has joined the channel
[21:31] diogogmt has joined the channel
[21:33] Bonuspunkt has joined the channel
[21:33] pickels has joined the channel
[21:37] Frippe has joined the channel
[21:38] Bonuspunk has joined the channel
[21:40] murilobr has joined the channel
[21:41] diogogmt: Is it possible to use JSDOM outside node
[21:41] diogogmt: lets say on a webworker
[21:41] diogogmt: so I can have access to the DOM object
[21:42] diogogmt: so I can parse html, create element, etc
[21:44] yept has joined the channel
[21:46] caffine has joined the channel
[21:49] AaronMT has joined the channel
[21:49] Aria: It'd probably need some tweaks.
[21:50] Aria: But I'd give it a tentative yes
[21:50] piscisaureus has joined the channel
[21:50] zmbmartin has joined the channel
[21:52] diogogmt: Aria: do you have any suggestions?
[21:53] Aria: You'd probably want to use something like browserify to pack it all up into a single blob of javascript.
[21:53] Aria: HTML parser and all.
[21:53] Aria: What's the task at hand?
[21:53] amoxibos has joined the channel
[21:54] SubStack: ACTION is intrigued
[21:54] SubStack: diogogmt: are you writing unit tests by any chance?
[21:55] diogogmt: SubStack: so far I'm just gettin started, trying to get working and run a few examples
[21:55] dthompso99 has joined the channel
[21:55] diogogmt: Aria: I'm making a request and receiving some html code, I need to parse it in the worker and send it back to the main page
[21:56] SubStack: do you need jsdom for anything in particular?
[21:56] SubStack: or just an html tree
[21:56] SubStack: also check this out: http://browserling.com:9088/
[21:56] DarkGrey has joined the channel
[21:56] SubStack: launching tomorrow probably!
[21:58] diogogmt: I need to access the document object, so I can navigate through the elements
[21:58] diogogmt: but any other tool that privdes functionality to navigates through the elemtens id fine too
[21:59] dnyy has joined the channel
[21:59] diogogmt: did you develop browserling? looks like a nice idea
[22:00] Aria: You should be able to run jsdom entirely aside of the regular DOM without webworkers, too.
[22:00] tuhoojabotti: SubStack: 1 developer is 20$/mo and 200 mins?
[22:00] Aria: But I haven't tried it.
[22:00] tuhoojabotti: 15 developer accounts would be 300$ and 3000 minutes, which seems better than small team :D
[22:00] abraxas has joined the channel
[22:02] Jorge has joined the channel
[22:02] Jorge: Hi !
[22:02] SubStack: tuhoojabotti: well those minutes are just for our existing browserling dev plans
[22:03] tuhoojabotti: Well, good night
[22:03] SubStack: diogogmt: yep
[22:03] SubStack: with pkrumins 
[22:03] yeahiii has joined the channel
[22:04] SubStack: we'll probably add more features for the team plans later
[22:04] yeahiii has left the channel
[22:06] EvRide has joined the channel
[22:09] TomY has joined the channel
[22:09] jldbasa has joined the channel
[22:12] chilts: so there seems to be lots of XML parser libraries, anyone recommend one they liked?
[22:12] chilts: I presume I'll use one based on libxml2 or expat
[22:12] TheJH: chilts, maybe isaacs sax?
[22:12] TheJH: !@chilts npm info sax
[22:12] jhbot: chilts, sax by Isaac Z. Schlueter, version 0.2.5: An evented streaming XML parser in JavaScript
[22:12] TheJH: chilts, you might also be interested in my halfstreamxml library that runs on top of it
[22:12] replore has joined the channel
[22:12] replore_ has joined the channel
[22:12] TheJH: !npm info halfstreamxml
[22:12] jhbot: halfstreamxml by Jann Horn, version 0.1.2-1: converts a stream of XML to a stream of objects
[22:13] chilts: ok, I'll go take a look
[22:13] chilts: not sure I need to stream when each element arrives - may just decode the whole lot once it's here
[22:13] chilts: though I guess streaming is a more node-like way
[22:17] cjheath has joined the channel
[22:20] ninjapig has joined the channel
[22:20] schwab has joined the channel
[22:26] mmalecki has joined the channel
[22:26] chilts: it seems that node-xml2js is based on sax, so am using that - works great :)
[22:27] Brandon_R has joined the channel
[22:27] Brandon_R: hey guys
[22:27] gopelaez has joined the channel
[22:28] Brandon_R: http://www.stormfront.org/forum/t34113/
[22:28] Brandon_R: http://www.shoemoney.com/2008/11/03/where-are-all-the-black-tech-entrepreneurs/
[22:28] Jorge: cant install nodejs on win7, build fails
[22:28] isaacs has joined the channel
[22:28] cliffano has joined the channel
[22:29] mmalecki: Brandon_R: excuse me?
[22:29] Brandon_R: i am doing research
[22:29] TheJH: Jorge, uhm, there's a prebuilt exe file
[22:29] Brandon_R: programming/tech demographics
[22:29] TheJH: "black tech"?
[22:30] mmalecki: yeah, well, I guess I don't care enough
[22:30] jhbot: I am black tech. :)
[22:30] Brandon_R: like African Americans
[22:30] kurmangazy: slavery has a long shadow
[22:30] cognominal has joined the channel
[22:34] toby1 has joined the channel
[22:34] vicapow has joined the channel
[22:35] brianseeders has joined the channel
[22:35] Nuck: You know what'd be cool?  An interface lib for CLI that provided simple UI elements like progess bars and inputs which would be like `var bar = new UI.Progress([0,0],[UI.width, 2]); bar.update(0.5);`
[22:35] Nuck: Written in pure JS
[22:36] Brandon_R: that would be awesome
[22:36] Brandon_R: or better yet
[22:36] Brandon_R: a gui version of node :)
[22:36] Nuck: haha
[22:36] d4rk1ink__: isaacs: i should probably search first, but... is there a way to force an install through over a dependency? 
[22:36] Nuck: I just want CLI UI
[22:36] Nuck: And then bounding boxes
[22:36] TheJH: uh, wtf? unicode smileys? 
[22:36] Brandon_R: since it uses v8, why not webkit and webgl
[22:36] jhbot: �
[22:37] TheJH: :(
[22:37] Brandon_R: :)
[22:37] kurmangazy: maybe X11 could be rewritten in node
[22:38] Nuck: People have made WMs in Node
[22:38] Brandon_R: what's a wm
[22:38] Nuck: But I just want something like jQuery UI for CLI
[22:38] Nuck: Brandon_R: Window Manager
[22:38] Brandon_R: oh
[22:38] Brandon_R: or a tilemanager
[22:38] TheJH: Brandon_R, was the smiley I wrote a smiley or a question mark for you?
[22:38] Bo3Bo3 has joined the channel
[22:38] Brandon_R: it was a questionmark
[22:39] Brandon_R: in a diamond
[22:39] TheJH: :(
[22:39] Brandon_R: that's a smiley in of itself lol
[22:39] Nuck: TheJH: The first one was good
[22:39] Nuck: Second one nope
[22:39] chjj: nwm - should be like the awesome wm of javascript instead of lua
[22:39] Brandon_R: lua on psp
[22:39] kurmangazy: does node have any use outside of servers open to the internet?
[22:39] Nuck:  showed up awesomely on iPhone
[22:39] Nuck: kurmangazy: Oh, *tons*
[22:39] Nuck: async IO
[22:39] TheJH: Nuck, :)
[22:39] Nuck: 
[22:40] TheJH: kurmangazy, there's ncp which is cp, but faster
[22:40] jarek has joined the channel
[22:40] Bo3Bo3: 4 http://weddingwarehouse.com/ 13 Weddings and wedding planning at the Wedding Warehouse Bridal Resource Center. 9Find wedding dresses and gowns,7 bridal beauty, 11photographers, disc 3Come and See OffeR
[22:40] jarek: Hi
[22:40] jarek has joined the channel
[22:40] Aria: kurmangazy: Servers not open to the internet, personal assistance daemons, general IO-related programming...
[22:40] TheJH: 
[22:40] Nuck: wat
[22:40] kurmangazy: how exactly does it help? low latency?
[22:40] jarek: why 'delete someArray[3]' removes the item from array instead of setting it to undefined
[22:40] Nuck: damn that was a fast kill
[22:40] jarek: ?
[22:40] kurmangazy: other than being in a "friendly" programming language
[22:41] TheJH: jarek, it doesn't remove it from the array
[22:41] digitarald has joined the channel
[22:41] chjj: that spam looked beautiful with my color scheme
[22:41] TheJH: jarek, e.g. the array looks like ['a', 'b', 'c', <unset>, 'e']
[22:41] jarek: TheJH: delete in Node.js seems to be behaving like Array.splice()
[22:41] Nuck: chjj: haha they spammed it in #freenode too
[22:41] Nuck: So it got them instantly killed
[22:41] deedubs has joined the channel
[22:42] TheJH: jarek, yup, console prints it that way, but it's a lie
[22:42] TheJH: A LIE! 
[22:42] chjj: yeah, everyone ends up doing delete then
[22:42] bajeczka has joined the channel
[22:43] avih has joined the channel
[22:43] jarek: I was checking it with console.log...
[22:43] jarek: no, wait... I just checked in repl and I get the same results
[22:43] jarek: > var a = ['one', 'two', 'three']
[22:43] bajeczka has left the channel
[22:43] TheJH: 
[22:43] jarek: > delete a[1]
[22:43] chjj: repl is broken
[22:44] jarek: > a
[22:44] jarek: >> [ 'one', 'three' ]
[22:44] purr: jarek: (object) ['one', 'three']
[22:44] TheJH: jarek, now check what a[1] and a[2] are
[22:44] chjj: ITS BROKEN!
[22:44] Nuck: TheJH:  SO THERE
[22:44] Nuck: (twas a bunch of flags)
[22:44] kurmangazy: so, other than enabling massive concurrency, what are the benefits of node?
[22:44] TheJH: >> var a=[ "one", "three"]; delete a[1]; a[1]
[22:44] purr: TheJH: undefined
[22:44] TheJH: jarek, ^
[22:44] chjj: kurmangazy: nothing, stop asking
[22:45] Brandon_R: here''s a woper
[22:45] TheJH: >> var a=[ "one", "two", "three"]; delete a[1]; a[1]
[22:45] purr: TheJH: undefined
[22:45] Nuck: kurmangazy: it's motherfucking js in the cli
[22:45] Brandon_R:            2545
[22:45] jarek: > > typeof a[1]
[22:45] dreamdust has joined the channel
[22:45] Nuck: Need I say more?
[22:45] jarek: > undefined
[22:45] avih has joined the channel
[22:45] chjj: kurmangazy: what kind of answer are you looking for?
[22:45] TheJH: Nuck, seems like you didn't set your font to utf8?
[22:45] TheJH: Nuck, what does this look like? äöüß
[22:46] Nuck: TheJH: Nope, thats from Colloquy Mobile with the Emoji keyboard :P
[22:46] kurmangazy: chjj: I'm just curious. It seems like a very special-purpose thing, but yet it's becoming so amazingly popular
[22:46] Nuck: TheJH: aouB on all clients 
[22:46] Nuck: (with accents and whatnot)
[22:46] TheJH: Nuck, ah, ok
[22:46] jarek: is there a better replacement to console.log()?
[22:47] TheJH: jarek, no, you just have to know how delete behaves
[22:47] jarek: I mean something like console.dir() from WebKit inspector where you can expend trees
[22:47] chjj: kurmangazy: it does what it does, if you want to use it, use it, some people like it, some dont, dont expect it to be the answer to every problem
[22:47] ryanrolds: kurmangazy: Have you tried working with Node? Or watched Ryan's lecture to that PHP group?
[22:47] kurmangazy: Not many people get to write servers that will be used by tens of thousands of users, so I'm wondering what else it's good for
[22:47] skm has joined the channel
[22:47] Nuck: kurmangazy: It's not just tens of thousands, the async IO is still beneficial no matter what
[22:47] TheJH: kurmangazy, ncp is faster than cp :)
[22:47] kurmangazy: ryanrolds: which PHP group? I saw Ryan's lecture at Yahoo
[22:48] Nuck: TheJH: Why do you keep talking about CP?  That's creepy, you pedo.
[22:48] neilk_ has joined the channel
[22:48] fuzzyone has joined the channel
[22:48] fuzzyone has joined the channel
[22:48] Brian` has joined the channel
[22:48] kurmangazy: I think Ryan and node are awesome
[22:48] TheJH: Nuck, huh?
[22:48] chjj: kurmangazy: as people are mentioning it, its still better than php in every aspect, for example, its not only good for one edge case
[22:48] Nuck: TheJH: CP = child porn, just for future reference :P
[22:48] ryanrolds: kurmangazy: The one on the Node.js home page.
[22:48] Nuck: Too many people don't realize this and start talking about CP like it's some everyday thing
[22:48] ryanrolds: kurmangazy: http://www.youtube.com/watch?feature=player_embedded&v=jo_B4LTHi3I
[22:48] chjj: example #3212 of nuck saying something weird ^
[22:48] kurmangazy: thanks
[22:48] Nuck: As if it doesn't mean anything else to us
[22:49] TheJH: Nuck, meh
[22:49] avih has joined the channel
[22:49] ryanrolds: Could you imagine the concurrency you would get if you served CP with Node?
[22:49] Nuck: Can Node work over Tor?
[22:49] Nuck: >_>
[22:49] Brandon_R: lmfao
[22:49] kurmangazy: nuck: lol.. I bet it's a great boon to child porn sites
[22:49] Brandon_R: did u guys hear saseme street got hacjed
[22:49] Brandon_R: and the hacker put up porn on it
[22:49] ryanrolds: nuba: I don't see why not. Try it.
[22:49] Nuck: Brandon_R: Mmmm sesame seeds
[22:50] ryanrolds: *Nuck
[22:50] Nuck: mmmm sashimi street
[22:50] ambroff has joined the channel
[22:50] chjj: thats ok, i didnt go to the sesame street website when i was a kid, actually i dont think there was one back then
[22:50] Nuck: kurmangazy: Prolly is
[22:50] Nuck: chjj: Was there even public internet?
[22:51] chjj: Nuck: it depends on what age i was watching sesame street, i cant remember now
[22:51] dreamdust has joined the channel
[22:51] tommyvyo has joined the channel
[22:51] kurmangazy: oh, ncp... just read about it. why does it beat cp -r? does cp -r fork a bunch of processes?
[22:51] Nuck: I was watching it creepily at 12 :P
[22:51] Nuck: But not, sesame street?
[22:51] Nuck: Never really watched it as a kid :/
[22:51] mandric has joined the channel
[22:52] jarek: when Node.js is going to support 'let' variables?
[22:52] chjj: when v8 implements them
[22:52] jarek: afaik they are already sealed for ES6
[22:52] bajeczka_ has joined the channel
[22:52] chjj: wanna know the dumbest thing about that?
[22:52] chjj: let blocks
[22:53] esundahl has joined the channel
[22:53] chjj: we already have totally useless blocks that do nothing, and we could have had them do something, but instead we got special "let blocks"
[22:53] chjj: DUMB
[22:53] Nuck: Wtf are let blocks?
[22:53] Nuck: chjj: Example plox?
[22:54] chjj: theyre stupid blocks that make no sense
[22:54] chjj: they look like let ... {} or something
[22:54] jarek: I guess you meant that: https://developer.mozilla.org/en/New_in_JavaScript_1.7#Block_scope_with_let_(Merge_into_let_Statement)
[22:54] chjj: i cant remember now, i repress dumbness
[22:54] kurmangazy: I wanted to write a server a while back to handle autocompletion in the shell. I'm sure node.js would work really well for that.
[22:54] hotch has joined the channel
[22:55] chjj: that
[22:55] chjj: let (x = x + 20) { }
[22:55] chjj: stupid
[22:55] chjj: stupid
[22:55] chjj: could have used a regular block statement without adding bloat to the language
[22:55] chjj: and it wouldve done the same damn thing
[22:56] jarek: chjj: that's nothing compared to the other bloat that is added in EC6 :P
[22:56] chjj: :(
[22:56] jarek: do you like classes?
[22:56] chjj: not in prototype languages
[22:56] TheJH: I guess more features means more ways to minify code, so I guess I'll like them :D
[22:56] Nuck: Fuck ES6
[22:56] Nuck: Seriously
[22:57] jarek: we definitely don't need classes in JS, just give us a way to access and modify __proto__
[22:57] chjj: TheJH: "minify" kind of ironic
[22:57] TheJH: chjj, hmm?
[22:57] chjj: ironic that bloat === minimal
[22:57] Nuck: The more bloat on the language the less on the code
[22:57] TheJH: chjj, useless features might help make code smaller
[22:58] Nuck: tis why ruby ahs shorter programs than C
[22:58] chjj: TheJH: i dont doubt it
[22:58] chjj: TheJH: im just saying, its ironic
[22:58] TheJH: chjj, it's just balancing. :D
[22:58] Nuck: Exactly
[22:58] arcanin has joined the channel
[22:58] Nuck: Every decision is a tradeoff
[22:58] skyl has joined the channel
[22:58] Nuck: And JS just switched tradeoffs with ES6
[22:58] Nuck: And I don't like it
[23:00] chjj: the only reason let is there is because people whine that its too "hard" to have all your variables in function scope
[23:01] chjj: because theyre used to writing terribly cluttered code
[23:02] chjj: i like it, it forces you to write more functions
[23:02] chjj: makes things more intelligible
[23:02] fairwinds has joined the channel
[23:03] TheJH: I sometimes write (function(){...})() just for making scopes
[23:03] TheJH: does that mean my functions are too fat? :D
[23:03] chjj: yeah, its necessary sometimes
[23:03] chjj: i dont know
[23:03] chjj: i havent seen your functions
[23:03] DualDetroit has joined the channel
[23:04] chjj: go look at jquery for example
[23:04] chjj: its the perfect example of the kind of code im talking about
[23:04] v8bot_ has joined the channel
[23:04] DualDetroit: OH, OH, OH YOU KNOW IT HOMEBOYS!!!!!! Dual Detroit be in da house break down the node like 10,000 pounds of code!
[23:04] chjj: GIANT functions with a million variables declared
[23:04] DualDetroit: chjj: That's bad because?
[23:05] Aria: Ever debugged the guts of jQuery?
[23:05] chjj: DualDetroit: why wouldnt it be bad? 
[23:05] chjj: DualDetroit: its horribly unorganized and poorly thought out
[23:05] chjj: DualDetroit: its just run-on code
[23:05] Aria: Pro: easier to navigate by search. Con: Harder to navigate otherwise.
[23:05] DualDetroit: chjj: :(
[23:05] chjj: DualDetroit: arbitrarily written
[23:05] DualDetroit: chjj: So soup essentially?
[23:05] TheJH: super-fat functions have smaller size
[23:05] chjj: DualDetroit: sure
[23:05] TheJH: and jquery is optimized for small minified size, I think
[23:05] thalll has joined the channel
[23:05] DualDetroit: chjj: Is it redundant in a lot of places? (not DRY)
[23:06] deedubs has joined the channel
[23:06] chjj: is what redundant?
[23:06] DualDetroit: jquery
[23:06] chjj: i dont know, i cant cram such a mess into my brain
[23:06] Nuck: chjj: It's like a fucking tumor
[23:07] rayfinkle has joined the channel
[23:07] xeodox has joined the channel
[23:07] Nuck: OMGOMGOMGOMGOMGOMG iOS 5 has position: fixed :D
[23:07] rayfinkle: anyone familiar with inireader? having a really hard time getting it to set defaults on read
[23:08] xeodox: Does anyone know how to turn template into a string? res.render('my template',{..} ) …but turn it into a string?
[23:08] chjj: Nuck: about time
[23:08] chjj: Nuck: was sick of stupid mobile browsers ruining the web by supporting it horribly
[23:09] Nuck: chjj: Agreed
[23:09] xerox: they still do :P
[23:09] DualDetroit: Nuck: FUCKING A!!!!!!!!!!!!!!!!
[23:09] Nuck: I'm gonna use position: fixed
[23:09] Nuck: DualDetroit: o_O
[23:09] Nuck: wat
[23:09] DualDetroit: Nuck: What took them so long?
[23:09] chapel: xerox: use the template library directly and render it that way
[23:09] AAA_awright: For what?
[23:09] DualDetroit: Nuck: position: fixed!!!!!!!!!!!!!!!!!
[23:09] chjj: now they just need to fix the icb
[23:09] AAA_awright: There's not very many use cases for position:fixed
[23:10] Nuck: AAA_awright: position: fixed in iOS
[23:10] chjj: but no one will because everyone follows apple's stupidity
[23:10] Nuck: AAA_awright: Oh there are *tons*
[23:10] Nuck: Wow
[23:10] AAA_awright: I use two
[23:10] Nuck: I can't belive you just said that.
[23:10] AAA_awright: 1. 2.
[23:10] igl has joined the channel
[23:10] DualDetroit: How the fuck do you do a non-retarded overlay without position: fixed?
[23:11] AAA_awright: You don't
[23:11] chrislorenz has joined the channel
[23:11] Nuck: overlays are all the more important on mobile
[23:11] AAA_awright: And anyways I thought their web browser was the "full" Safari
[23:11] Nuck: AAA_awright: no, it's forked from it
[23:11] Nuck: Long ago
[23:11] chjj: mobile browsers are notorious for not supporting fixed positioning
[23:11] AAA_awright: I've come across that problem for both use cases, though
[23:12] TheJH: ACTION should make a de-rager module for his bot which can detect stuff like "fuck", "retarded", uppercase letters and some more and give the speaker some good advice
[23:12] chjj: some dont support it at all, some treat it like absolute positioning, and some support it but dont redraw it when scrolling
[23:12] xerox: one very nice thing is that the new mobile safari supports Reader
[23:12] xerox: it's so so so nice.
[23:12] TheJH: which would probably enflame the debate even more...
[23:12] TheJH: sounds good
[23:12] Nuck: woah
[23:12] Nuck: Fixed + zoom
[23:12] Nuck: Freaky
[23:12] AAA_awright: What's Reader?
[23:12] xerox: AAA_awright: it makes things readable
[23:12] AAA_awright: I see
[23:13] xerox: probably the best feature of all the browsers of all time
[23:13] xerox: let me see if I have a screenshot around
[23:13] Nuck: nope, that's user scripts
[23:13] Nuck: If not, I can take one real fast
[23:13] DualDetroit: TheJH: I have a Dual Detroit bot that MCs in the channel.
[23:14] pvgrif has joined the channel
[23:14] xerox: Nuck: yeah I deleted it
[23:14] xerox: don't have the force of will to open the ipad and dropbox it again
[23:14] TheJH: DualDetroit, "MCs"?
[23:15] pvgrif: can someone please help me out? im getting this error after running make make -j2 "Build failed:  -> task failed (err #1):  	{task: cxx node_zlib.cc -> node_zlib_5.o} "
[23:15] pvgrif: any clue what might have gone wrong?
[23:16] SargoDarya has joined the channel
[23:16] DualDetroit: TheJH: You know... GET DOWN MOTOWN MOTHAS, DUAL_DETROIT IS IN DA HOUSE. I got a database degree from the 313! My keyboards are large; my software is in charge.
[23:16] TheJH: pvgrif, please gist the entire log or so
[23:16] Nuck: DualDetroit: "and I am one NERDY ASS MOTHERFUCKEEEEEEEER"
[23:16] nerdy has joined the channel
[23:17] Nuck: …
[23:17] Nuck: Anyways, reader pic: http://db.tt/y7XQmGjn
[23:17] tmm1 has joined the channel
[23:17] DualDetroit: Guess where I am now: 989
[23:18] DualDetroit: The best area code in the world.
[23:18] pvgrif: TheJH: http://pastebin.com/K9BLt2DB
[23:18] Nuck: ACTION is in 209
[23:18] smtlaissezfaire has joined the channel
[23:18] xerox: Nuck: what is that O_o
[23:18] Nuck: xerox: hmmm?
[23:18] xerox: oh, a landscape iPhone?
[23:18] Nuck: xerox: Yup
[23:18] xerox: ah, it's different on mac and ipad
[23:18] zmbmartin has joined the channel
[23:19] Nuck: xerox: Yeah, it's overlayed
[23:19] Nuck: I know
[23:19] pvgrif: TheJH: i could paste the whole thing if its necessary but the thing comes before it is somethiing that it compiled succesfully
[23:19] xerox: and no rugged background
[23:19] TheJH: pvgrif, hmm,  what os/distribution are you using?
[23:19] pHcF has joined the channel
[23:19] chjj: speaking of mobile browsers, is there any other good mobile browser emulator besides opera mobile, opera mobile is dying on me in my windows vm
[23:19] pvgrif: TheJH: fedora
[23:19] Nuck: xerox: You sure?  It's *Really* subtle on the iPhone
[23:19] Nuck: It just shows up more on here
[23:20] Nuck: chjj: I just have an Android simulator and a Chrome extension
[23:20] xerox: Nuck: let me se
[23:20] xerox: *see
[23:20] chjj: Nuck: oh? where?
[23:20] Nuck: chjj: Android Emulator is in the Android SDK
[23:20] chance- has joined the channel
[23:20] Nuck: Has the full OS
[23:20] Nuck: including Android's brower
[23:20] chjj: Nuck: ah, cool
[23:20] Nuck: You can also get the Firefox mobile for desktop IIRC
[23:20] DualDetroit: Madonna is so sexy. I have been wwwwwwwwwwwwnking to Lucky Star all day.
[23:21] Nuck: Which shoudl work on any OS
[23:21] chjj: Nuck: really? never saw that
[23:21] DualDetroit: Which means getting behind on coding :<
[23:21] Nuck: chjj: And then Ripple Mobile Environment Emulator
[23:21] chjj: Nuck: i like to keep all browsers that arent chrome in my windows vm
[23:21] TheJH: pvgrif, maybe "sudo yum install zlib-devel" fixes it
[23:21] chjj: Nuck: all the mess is in there, for testing designs
[23:21] Nuck: chjj: http://www.mozilla.org/en-US/mobile/ Dev tools, bottom right
[23:21] pvgrif: TheJH: thanks i ll try it
[23:22] chjj: Nuck: ah, cant believe i didnt see this before
[23:22] kurmangazy: so basically, the benefits of node servers, besides concurrency, is that it handles streaming better and has lower latency?
[23:22] Nuck: DualDetroit: Madonna is ugggggllyyyyyy
[23:22] linkgoron has joined the channel
[23:22] Nuck: chjj: Yeah, I've picked up a few tricks.  I also test directly on my iPhone using weinre
[23:23] chjj: ACTION doesn't own an iphone.
[23:23] xerox: Nuck AAA_awright http://db.tt/5jflgybw
[23:23] Nuck: chjj: Weinre is cross-platform
[23:23] Nuck: It's just a remote debugger
[23:23] pvgrif: TheJH: worked wonders, thanks :)
[23:24] chjj: Nuck: i see, i just meant, i will never been testing designs on real mobile hardware
[23:25] Nuck: chjj: No Android phone or anything?
[23:25] chjj: Nuck: nope, i dont like smart phones or mobile devices
[23:25] Nuck: weinre is the WebKit debugger on top of a remote socket connection
[23:25] AAA_awright: Shouldn't the webpage CSS already do that?
[23:25] Nuck: AAA_awright: Do what?
[23:26] AAA_awright: The single-column thing
[23:26] AAA_awright: Also, I don't own any Apple products either, though I have access to an iPad
[23:26] Nuck: AAA_awright: What single-column thing?
[23:26] xerox: well try it
[23:26] Nuck: AAA_awright: Wait, you mean the cool Reader mode?
[23:26] Nuck: It's more than that, it removes ads, etc.
[23:26] Nuck: And just grabs content and title
[23:26] Nuck: puts it into a beautiful font
[23:26] ninjapig has joined the channel
[23:26] ninjapig has joined the channel
[23:27] Nuck: And lets you pick the font size
[23:27] Nuck: And just read
[23:27] r04r has joined the channel
[23:27] Nuck: I've had iOS 5 since it first came out and dear god I've gotten a *lot* of use from Reader
[23:27] xerox: it's great because one can escape 12pt hell with one click/touch
[23:27] AAA_awright: Beautiful font uhhuh
[23:27] xerox: Palatino 16pt, by default
[23:28] boltR has joined the channel
[23:28] Nuck: I lowered the font size
[23:28] pvgrif: TheJH: do you know what might have gone wrong with a similar but different error related to platform_linux_5.o?
[23:28] DualDetroit: Nuck: FUCK FUCK FUCK FUCKING ***** HAS SEIZURE ****
[23:28] chjj: Nuck is such an apple fan
[23:28] TheJH: pvgrif, no idea
[23:29] Nuck: DualDetroit: She's an old hag and she's fugly anyways
[23:29] Nuck: chjj: I am, yeah
[23:29] DualDetroit: ACTION DRENCHES nuck with GASOLINE THEN RUNS TO GET MATCHES
[23:29] Nuck: ACTION hugs DualDetroit to get the gas on him too ;3
[23:29] chjj: steve jobs dies, the entire world goes nuts, dennis ritchie dies - i dont think i even saw anything on tv about him, then again i dont watch much tv
[23:30] Nuck: chjj: It's layers, mate
[23:30] Nuck: Dennis Ritchie was behind the curtain
[23:30] DualDetroit: Nuck: I wank to Madonna every day, and I will be gay until she fucks me.
[23:30] Nuck: Steve Jobs in front of it
[23:30] kurmangazy: chjj: right! I totally agree
[23:30] chjj: the people who actually matter go silently i guess
[23:30] Nuck: yup
[23:30] rayfinkle: is there a packaged ini parser for node?
[23:30] DualDetroit: Steve Jobs mattered
[23:30] Nuck: chjj: A user doesn't care about TCP/IP, they care about HTTP
[23:30] rayfinkle: can't find one other then 3rd parties
[23:31] chjj: DualDetroit: not even close to the amount dennis ritchie mattered
[23:31] DualDetroit: How is Dennis Ritchie more influential than Steve Jobs?
[23:31] Nuck: DualDetroit: The guy invented C
[23:31] chjj: influential? is that some kind of buzzword today?
[23:31] Nuck: And helped invent UNIX IIRC
[23:31] chjj: im talking about what he did and didnt contribute to the world
[23:31] jhbot has joined the channel
[23:32] DualDetroit: Anybody can invent something. We had fucking steam engines in ancient Greece. Steve Jobs *got society to embrace the new technology*.
[23:32] Nuck: chjj: There was an article last night on HN about this exact topic >_>
[23:32] TheJH: THIS IS A SCREAMING TEST
[23:32] jhbot: hey TheJH, why the rage? that's bad for your health, you know. on the other hand, it might be fun. go on :)
[23:32] TheJH: ^ keep that message or emove it?
[23:32] TheJH: *remove
[23:32] pvgrif: TheJH: could you please check it out, its the last build step http://pastebin.com/UhDaQjBg
[23:32] DualDetroit: I LOVE FUCKING MADONNA
[23:32] jhbot: hey DualDetroit, why the rage? that's bad for your health, you know. on the other hand, it might be fun. go on :)
[23:32] r04r has joined the channel
[23:32] DualDetroit: jhbot: bot fail
[23:32] chjj: DualDetroit: i wouldnt have left it to steve jobs to invent c and unix, wed probably be moving back into the caves right now if that happened
[23:32] TheJH: DualDetroit, :(
[23:32] kurmangazy: Nuck: yeah, but Steve Jobs took unix and made it cool by putting it in a mac!
[23:33] DualDetroit: ACTION fucks Madonna every night to Like a Virgin.
[23:33] kurmangazy: Dennis Ritchie never would have made unix cool
[23:33] DualDetroit: It doesn't respond to /me?
[23:33] chjj: DualDetroit: lets not overglamorize what steve jobs did, he was good at what he did, but he took brilliant mens' ideas and repackaged them for the masses
[23:33] Nuck: https://plus.google.com/112218872649456413744/posts/dfydM2Cnepe
[23:33] DualDetroit: kurmangazy: Exactly my point, relaly.
[23:33] Nuck: that's the article
[23:33] Nuck: Amazing article
[23:33] issackelly_ has joined the channel
[23:34] DualDetroit: chjj: Which is necessary to move society forward.
[23:34] smathy has joined the channel
[23:34] Nuck: chjj, DualDetroit: Read that link
[23:34] DualDetroit: And really hard to do
[23:34] Nuck: Then continue arguing
[23:34] Nuck: :)
[23:34] DualDetroit: Okay
[23:34] chjj: DualDetroit: maybe, i wont say that he didnt contribute anything
[23:34] Nuck: You'll both see eachother's points of view
[23:34] Nuck: And see that you're both slightly wrong
[23:34] DualDetroit: :p
[23:34] kurmangazy: I didn't need Steve Jobs to get me to use unix, actually
[23:35] DualDetroit: ACTION goes back to fantasizing about humping Madonna.
[23:35] Nuck: DualDetroit: You must be really into flappy saggy things then :)
[23:35] DualDetroit: Nuck: Madonna has really sharp teeth.
[23:36] chjj: whatever, im sorry the guy died, and i wouldnt say he did contribute because he did, but im just frustrated no one acknowledged dennis ritchie
[23:36] kurmangazy: and sharp tits
[23:36] Nuck: DualDetroit: And you like a biter?
[23:36] chjj: didnt*
[23:36] Nuck: kurmangazy: Seriously
[23:36] DualDetroit: Nuck: Yes, I want her teeth marks all over my body.
[23:36] jarek: is there anything wrong in using null?
[23:36] Nuck: To quote that article, "Steve's influence was at a layer that most people could see, while Dennis' was much deeper."
[23:36] n8ji has joined the channel
[23:37] jarek: I was reading some Dart reviews recently and there was a lot whining about null being present in Dart
[23:37] kurmangazy: nuck: what article?
[23:37] TheJH: jarek, not in general
[23:37] Nuck: kurmangazy: The Google+ posting
[23:37] kurmangazy: how do I read it?
[23:37] DualDetroit: ACTION will get Madonna to fuck him once his Twisted web services takes off.
[23:37] diogogmt has joined the channel
[23:37] Nuck: kurmangazy: https://plus.google.com/112218872649456413744/posts/dfydM2Cnepe
[23:38] Nuck: loltwisted
[23:38] chjj: Nuck: about the HN article you mentioned, well its hard to ignore the fact that they both died within a week of each other, its hard not to compare the amount of attention each one got
[23:38] jhbot has joined the channel
[23:38] DualDetroit: Hopefully she likes 20 year olds
[23:38] Nuck: DualDetroit: As in, Twisted?  From Python?
[23:38] chjj: Nuck: im sure this conversation is happening all over the interwebs among nerds
[23:38] DualDetroit: Nuck: Yeah, but I'm using some node.js too
[23:38] cjroebuc_ has joined the channel
[23:38] Nuck: DualDetroit: LOL Twisted is a piece of shit
[23:38] Nuck: The biggest Piece of Shit ever
[23:38] DualDetroit: Nuck: Why?
[23:38] DualDetroit: LOL
[23:38] chjj: DualDetroit: because nuck doesnt like it
[23:39] Nuck: chjj: It is, hence thart article :P
[23:39] rchavik has joined the channel
[23:39] Nuck: No, twisted is (1) bloated (2) not elegant (3) Python (which doesn't handle evented syntax well)
[23:39] pvgrif: can someone please help me out with this error during compilation? http://pastebin.com/WYuDKNvc
[23:39] igl: evented syntax haha
[23:40] chjj: its like nuck likes setting the stage for a huge argument over nothing ;p
[23:40] jarek: Nuck: well, it's called Twisted after all
[23:40] Nuck: jarek: Obviously earned that name :P
[23:41] Nuck: lack of full functions inline = fail
[23:41] Nuck: And last I checked, Python only had lambdas
[23:41] DualDetroit: Nuck: I agree with you on that point.
[23:42] DualDetroit: ACTION got so pissed that he could only to expressions inline.
[23:42] DennisRasmussen has joined the channel
[23:44] IrishGringo2 has joined the channel
[23:46] MattAdams has joined the channel
[23:47] aroman has joined the channel
[23:48] aroman: what template languages/systems do node guys like to use?
[23:48] abraxas has joined the channel
[23:49] LuckySMack_ has joined the channel
[23:49] Nuck: aroman: I use Handlebars
[23:50] towski has joined the channel
[23:51] MattAdams: Was the querystring module renamed to qs?
[23:52] aroman: Nuck: how does it compare to mustache?
[23:52] Nuck: aroman: Very similar, just more powerful
[23:52] Nuck: http://www.handlebarsjs.com/
[23:52] aroman: yeah that's what I'm looking at
[23:53] aroman: can it work with *raw* json?
[23:53] Nuck: aroman: huh?
[23:53] Nuck: aroman: No, use JSON.parse()
[23:53] aroman: like, I would like to be able to take stuff from SocketIO and stick it directly into the page
[23:53] aroman: i.e without having to iterate over it and use jQuery to manipulate the dom
[23:53] Nuck: aroman: Uh, Socket.IO passes objects
[23:54] aroman: o.o
[23:54] aroman: oh right
[23:54] Nuck: aroman: So you could prolly just render it in Handlebars using the object and a template, then split that into a DOM node
[23:54] Nuck: s/split/spit/
[23:55] bwinton has joined the channel
[23:55] aroman: Nuck: which is basically the same thing I could do with Mustache?
[23:56] scott_gonzalez has joined the channel
[23:56] Nuck: aroman: Yup, Handlebars is fully comparible with Mustache
[23:56] Nuck: *compatible
[23:56] Nuck: aroman: "Mustache templates are compatible with Handlebars, so you can take a Mustache template, import it into Handlebars, and start taking advantage of the extra Handlebars features."
[23:56] aroman: heh, "fully comparable"
[23:57] Nuck: aroman: I'm gonna use that as a description of things now
[23:57] aroman: :P
[23:57] sdwrage has joined the channel
[23:58] aroman: Nuck: so if I understand this correctly, handlebars is like mustache with additional syntax support/features?
[23:58] Nuck: aroman: Ayup
[23:58] aroman: oh sweet
[23:58] Nuck: And a proper JS implementation
[23:58] aroman: so I guess I have no excuse not to use handlebars :)
[23:58] Nuck: aroman: Dot-notation :P
[23:58] Nuck: For one
[23:58] aroman: going from SocketIO -> DOM is going to be wayyy nicer than iterating over Javascript objects and using $.append() :P
[23:59] Nuck: yeah
[23:59] Nuck: Agreed
[23:59] zmbmartin has joined the channel
