[00:00] echosystm: hm
[00:00] torvalamo: NemesisD, not sure how that qualifies as you needing to call exit from the exit event
[00:00] [[zz]] has joined the channel
[00:00] NemesisD: torvalamo: i don't and do not want to
[00:00] torvalamo: then don't :p
[00:00] NemesisD: i wont!
[00:00] torvalamo: great
[00:00] NemesisD: but i need to know how to set up my exit status without explicitly calling exit
[00:01] NemesisD: reason being some libraries this project depends on suck and don't provide me the necessary callbacks to determine when they are done working
[00:01] devrim has joined the channel
[00:02] echosystm: hmmm, i seem to have the same problem tanepiper
[00:02] echosystm: files stop above 680kb or so
[00:02] echosystm: gah!
[00:02] NemesisD: i want to do something like process.on("exit", function() { this.exitStatus = 1; });
[00:03] isaacs: mscdex: what was the resolution for that mkdir 0777 issue?  i'm bumping into it now as well.
[00:03] tanepiper: echosystm: yea, it's an issue with the SSL dual stream stuff, but i;ve already moved onto 0.3.x in prep for 0.4
[00:04] echosystm: tanepiper: it could be because connect will try to use sendfile()
[00:04] echosystm: i think that isnt compatible with ssl
[00:04] dgathright has joined the channel
[00:04] mscdex: isaacs: https://gist.github.com/794254
[00:04] isaacs: mscdex: ok
[00:04] isaacs: mscdex: patch sent ot the list?
[00:05] isaacs: (for now i can just mkdir+chmod)
[00:05] mscdex: isaacs: sent it to ryan's email
[00:05] isaacs: kk, awesome
[00:05] torvalamo: NemesisD, call process.reallyExit(code)
[00:06] torvalamo: that skips the emitting of the event
[00:06] torvalamo: and can be called from inside the event
[00:06] torvalamo: though i suspect that is a nasty hack
[00:06] tjholowaychuk: echosystm: connect does not use sendfile()
[00:06] isaacs: yes, reallyExit is not a gread thing to do
[00:06] tjholowaychuk: if you were referring to the connect framework
[00:06] hornairs has joined the channel
[00:07] NemesisD: torvalamo: so is this whole project. i want to slap the guy i forked this from
[00:07] cronopio has joined the channel
[00:07] torvalamo: great, go for it
[00:07] tilgovi has joined the channel
[00:07] isaacs: torvalamo, NemesisD: though, that's fine, really.  the exit listener is about to call reallyExit anyway
[00:07] torvalamo: that's what i was thinking
[00:07] torvalamo: src\node.js:735 for the code btw
[00:08] torvalamo: 0.2.6
[00:09] tanepiper: tjholowaychuk: any eta on when it'll be able to use https server?
[00:09] NemesisD: woo thanks guys
[00:09] tjholowaychuk: tanepiper: shortly after 0.4.0 is out hopefully
[00:09] tjholowaychuk: I will have tons to do though
[00:09] zzak: NemesisD: sup bro :)
[00:09] echosystm: tjholowaychuk: what is the issue with ssl at the moment?
[00:10] tjholowaychuk: echosystm: I have not tried it with 0.3.x
[00:10] echosystm: i mean with 0.2.6
[00:11] tjholowaychuk: did ssl in general even work back then? we are just using stunnel right now
[00:11] echosystm: it seems to be
[00:11] NemesisD: zzak: raging
[00:11] torvalamo: back then?
[00:12] torvalamo: :/
[00:12] davidc_ has joined the channel
[00:12] tanepiper: tjholowaychuk: any idea on the api for it, i.e. connect.createSecureServer ?  i can maybe have a bash at starting it, as i need to start looking at SSL implementation in our app shortly
[00:12] zzak: NemesisD: :( i found a hack around that interval issue i was having!
[00:13] tjholowaychuk: tanepiper: yeah tough call, will have to be something like that
[00:13] pquerna: piscisaureus: ping
[00:13] bpedro has joined the channel
[00:13] tjholowaychuk: since createServer() accepts a bunch of middleware
[00:13] tjholowaychuk: but i was never a fan of that anyway
[00:13] nichdiekuh has joined the channel
[00:13] piscisaureus: pquerna: pong
[00:14] tanepiper: cool, i'll pull a copy and see if i can provide some patches to start off with
[00:14] tjholowaychuk: createServer({ options }) would be better IMO
[00:14] tjholowaychuk: or connect.createServer(layer, layer, layer).secure({ options }).listen()
[00:14] NemesisD: zzak: cool. hit me up on gtalk so we aren't bothering these fine folks
[00:15] nichdiekuh has joined the channel
[00:15] zzak: wizard
[00:15] tanepiper: that would at least be non-breaking :)
[00:15] tjholowaychuk: but node's api is not progressive (AFAIK) you have to pass it to createServer()
[00:15] tjholowaychuk: or copy whatever it is doing internally there
[00:15] mirkok has joined the channel
[00:15] m64253 has joined the channel
[00:16] tjholowaychuk: ah it has setOptions
[00:16] tjholowaychuk: that will work then
[00:19] torvalamo: NemesisD, do note that reallyExit will cancel any additional exit listeners that haven't been called yet, if you have several assigned
[00:19] NemesisD: that'll have to work
[00:20] aconbere has joined the channel
[00:22] charlenopires has joined the channel
[00:22] torvalamo: if you need that, then your only option is to rewrite src/node.js process.exit definition to fit your needs
[00:22] torvalamo: :P
[00:23] nejucomo has joined the channel
[00:23] pzich has joined the channel
[00:26] tanepiper: can anyone on 0.3.6 check to see if process.addListener('uncaughtException' has been removed?
[00:27] Coal has joined the channel
[00:27] tanepiper: i'm throwing a test exception and it doesn't seem to be getting caught in this, i just get the usual stack trace
[00:29] torvalamo: doesn't seem to be removed (node.cc around line 1600+)
[00:30] torvalamo: as mentioned i can't compile it so i can't test
[00:30] gregotri has joined the channel
[00:30] gregotri: hello
[00:30] shiawuen has joined the channel
[00:30] gregotri: i need help with setting vmware+node.js on mac os x
[00:31] gregotri: i installed x-window-less debian
[00:31] gregotri: on vwmare
[00:31] Frush3 has joined the channel
[00:32] zzak: tanepiper: i think its under here: https://github.com/ry/node/blob/master/lib/events.js#L70
[00:32] torvalamo: tanepiper, i think it would have said so in the changelog if uncaught was removed
[00:32] torvalamo: it's a commonly used feature
[00:33] gregotri: i can ssh to vmware machine, i can start nginx on vmware and reach nginx on host (it displays page that server is running)
[00:33] spetrea_ has joined the channel
[00:33] gregotri: but node example.js isn't available on host
[00:34] jpld has joined the channel
[00:34] torvalamo: run 'node example.js' in the console
[00:34] tanepiper: torvalamo: yea, but in 0.3.6 httpClient.setTimeout was removed by accident and i noticed that too :)
[00:34] tanepiper: regressions bugs will happen, which is why i'd like a sanity check
[00:34] torvalamo: removing uncaught can not be by accident, it has about 50 lines of code relating to it
[00:36] torvalamo: well it can
[00:36] matt_c has joined the channel
[00:36] torvalamo: but the person doing it would have to be blind
[00:37] tanepiper: you know what, it might be the cli lib I am using
[00:37] tanepiper: i moved the exception to a different part, and now it's throwing it differently, as a cli error
[00:38] jimt has joined the channel
[00:38] tanepiper: hmm, https://github.com/chriso/cli/blob/master/cli.js#L84
[00:38] ryah_: tanepiper: it did not get removed
[00:38] ericnakagawa has joined the channel
[00:38] tanepiper: however i haven't enabled that plugin
[00:39] clarkfischer has joined the channel
[00:39] gregotri: torvalamo: Server running at http://127.0.0.1:8124/
[00:40] torvalamo: open that
[00:40] pieterv has joined the channel
[00:40] ryah_: and there are tests for uncaughtException
[00:40] willwhite has joined the channel
[00:40] gregotri: ifconfig shows than vmware machine has addres 172.16.189.128. When i run nginx, this address is reachable from host
[00:41] gregotri: i can open that in vmware because debian is installed without x.org
[00:41] ryah_: mscdex: i dont want to reset the umask
[00:42] ryah_: mscdex: i think the umask is expected to be applied
[00:42] ryah_: but thanks for looking into that
[00:42] tanepiper: ryah_: yea, it seems cli for some reason it catching it, even though i haven;t enabled it to
[00:42] gregotri: ok, elinks opened it and displays 'Hello World'
[00:42] mw has joined the channel
[00:42] tanepiper: and even when i specifically disable it
[00:42] opengeard has joined the channel
[00:44] asimismo has joined the channel
[00:45] ryanfitz has joined the channel
[00:45] asimismo: I'm sure I'm visiting a well-trod path, but I'm a bit new so please forgive me, but... What's the state of XML parsing in node? Is there a favored (and actively maintained) module?
[00:46] Aikar: lol ryah_, the fix for test-cli-eval was just not passing the parent object like I did. going to make a test case for this and resend pull req, I redid my fork so the other pull req died.
[00:46] brainproxy: ryah_: so 'data' events are guaranteed to fire in the order representing the beginning -> end structure of the resource they represent, e.g. for a post/put request?
[00:47] mscdex: ryah_: what about calling chmod afterwards instead then?
[00:47] mscdex: ryah_: or will that not work?
[00:48] astoon has joined the channel
[00:49] evl has joined the channel
[00:49] gregotri: have to go
[00:49] gregotri: cya
[00:49] gregotri has left the channel
[00:50] ryah_: brainproxy: yes
[00:50] ryah_: mscdex: no - people should know what umask does
[00:51] hunterloftis: Anybody here using requireJS right now?
[00:52] tanepiper: hunterloftis: yes
[00:52] hunterloftis: tanepiper: How do you solve the problem of traditional libraries? ex: knockoutJS requires jquery.tmpl, which requires jquery
[00:52] hunterloftis: tanepiper: So if I just load them all with a require([...]), knockoutJS will error out because jquery.tmpl doesn't exist
[00:52] tanepiper: hunterloftis: either just hard code those libs in, or do multiple require callbacks
[00:53] m64253 has joined the channel
[00:53] hunterloftis: tanepiper: ok cool, I'm doing nested requires right now, which seemed ghetto, just checking
[00:53] prettyrobots has joined the channel
[00:53] tanepiper: had major issues with ExtJS because of it, it wouldn't always load first
[00:54] prettyrobots: Is there some way to launch an interactive shell in node?
[00:54] tanepiper: i only use it to load specific types now, and include my lib files as <script> tags
[00:54] prettyrobots: Say, launch MySQL prompt from node, and have it be interactive.
[00:54] prettyrobots: ?
[00:54] hunterloftis: tanepiper: that might be what we end up doing
[00:54] hunterloftis: tanepiper: I don't like workarounds and shit like that
[00:54] stepheneb has joined the channel
[00:55] tanepiper: yea it's not idea, but there is no way to guarentee execution time unfortunatly
[00:55] hunterloftis: tanepiper: right, unless every script is written in the RequireJS module pattern
[00:56] hunterloftis: And I'm not about to wrap every script we use
[00:58] piscisaureus: ryah_: ping
[01:02] ryah_: piscisaureus: pong
[01:03] piscisaureus: ryah_: what do you want to do about all those ifdefs?
[01:03] piscisaureus: ... or you don't know yet ?
[01:04] ryah_: piscisaureus: i want to but them in the OS module, or something
[01:04] ryah_: i'll take a look at it
[01:06] piscisaureus: ryah_: think about how it should look after moving the « retry after again » stuff moves to c
[01:08] piscisaureus: *EAGAIN
[01:09] brapse has joined the channel
[01:09] JusticeFries_ has joined the channel
[01:12] ryah_: piscisaureus: we might as well leave it for v0.4 
[01:12] ryah_: i think we should try to do iocp in v0.5
[01:12] ryah_: and just blow out node_net.cc completely
[01:13] Yuffster_work has joined the channel
[01:13] allengeorge has joined the channel
[01:13] piscisaureus: ryah_: getting ambitious :-)
[01:13] eirikur has joined the channel
[01:14] thorsteinsson has joined the channel
[01:14] mscdex: websockets draft 04 seems to be pretty reasonable
[01:15] mscdex: much more sane than 76
[01:15] asimismo: No answer above, so let me ask another way. Is anybody doing XML parsing (specifically, converting arbitrary XML to JSON) with a module they can recommend?
[01:15] piscisaureus: ryah_: I'm kinda looking forward to it. Will 0.5 work start immediately after 0.4 is released or will you keep improving 0.4 for a while?
[01:16] piscisaureus: isaacs: can I hack that patch of yours a little?
[01:16] isaacs: piscisaureus: of course
[01:16] mscdex: asimismo: i've used libxmljs in the past
[01:16] richcollins has joined the channel
[01:17] piscisaureus: i want to add some windows-friendly key bindings. And that delete-backword-word code should move to a function
[01:18] zentoooo has joined the channel
[01:18] sprout has joined the channel
[01:19] hobodave has joined the channel
[01:21] asimismo: mscdex: Thanks. I was a little worried because activity seems so low with libxmljs. And there seem to be memory leaks remaining...
[01:21] xla has joined the channel
[01:21] asimismo: (That's from my reading, not personal experience with libxmljs)
[01:22] rburhum has joined the channel
[01:22] tjholowaychuk: asimismo: it used to work for me (months ago)
[01:22] tjholowaychuk: but lately explodes
[01:22] admc has joined the channel
[01:23] prettyrobots: Is there a way to launch a shell form Node.js?
[01:23] prettyrobots: Like launch interactive MySQL from Node.js?
[01:23] scheibo has joined the channel
[01:24] mike5w3c: http://stackoverflow.com/questions/4778897/loading-euc-jp-and-other-japanese-text-encodings-in-node-js
[01:25] Lorentz: I know that pain
[01:25] Lorentz: I work with euc-kr.
[01:25] torvalamo: use buffer
[01:26] torvalamo: and doesnt utf8 include japanese?
[01:26] isaacs: piscisaureus: i agree.
[01:26] torvalamo: i thought only chinese was left out
[01:26] isaacs: piscisaureus: make it windows friendly.
[01:27] isaacs: piscisaureus: also, those [a-z] regexps are rather chauvinistic
[01:27] piscisaureus: isaacs: should be much like your magic iterm bindings
[01:27] isaacs: piscisaureus: no love for the utfs :)
[01:27] torvalamo: \w?
[01:27] piscisaureus: isaacs: that's true. But cannot really test with my chinese keyboard
[01:28] isaacs: i think what we really need is something that says, "is the string magical?  no?  ok, then just treat it as a stream of dumb characters"
[01:28] isaacs: prettyrobots: yeah, just pass in { customFds : [0, 1, 2] } as your config object
[01:28] piscisaureus: isaacs: yeah. But it doesn't really matter as long as we don't add key bindings for those magic keys
[01:29] isaacs: prettyrobots: to be proper, you should use process.binding("stdio").stdinFD, ...stdoutFD, and ...stderrFD
[01:29] prettyrobots: isaacs: Ah. Brilliant. Duh. Duh.
[01:29] nichdiekuh has joined the channel
[01:30] isaacs: piscisaureus: i think what we have now only sets the key obj when it's a-z
[01:30] isaacs: piscisaureus: it'd be nice to get meta-¢ or something
[01:30] piscisaureus: isaacs: that's true., but it always emits a character
[01:30] piscisaureus: isaacs: hehe
[01:30] piscisaureus: for what?
[01:30] isaacs: piscisaureus: no, it doesn't emit a char
[01:30] isaacs: it just doesn't do anything
[01:30] piscisaureus: it should!
[01:31] isaacs: meta-4 does nothing
[01:31] piscisaureus: oh. yeah. but that is because there is no 'char' associated to it
[01:31] isaacs: right
[01:31] joelklabo has joined the channel
[01:31] piscisaureus: but if you have a 字 key on your keyboard it will still work
[01:32] piscisaureus: you just can't add a key binding for meta+shift+字 right now
[01:32] astoon has joined the channel
[01:32] isaacs: but yeah, it handles that properly
[01:32] isaacs: with my patch, you can even paste in "¢¢¢¢¢" and get a string printed out
[01:32] piscisaureus: exactly
[01:32] isaacs: matching the shift key might be tricky
[01:32] zzak: ひらがな　even
[01:32] djanowski has joined the channel
[01:33] isaacs: > var ひらがな = 8
[01:33] isaacs: > ひらがな
[01:33] isaacs: 8
[01:33] zzak: :)
[01:33] isaacs: v8: function ひらがな () { return "ひらがな" } ; ひらがな()
[01:33] v8bot: isaacs: "ひらがな"
[01:34] piscisaureus: I didn't even know that that was supposed to work :-)
[01:34] jesusabdullah: Oh aren't you fancy with your outrageous characters
[01:34] piscisaureus: sounds like a lot of fun, this new 'one-character concise programming'  paradigm
[01:34] jesusabdullah: hah
[01:35] torvalamo: i just see black boxes
[01:35] piscisaureus: if we translate all function names to chinese, nobody will complain about the verbose-ness of async programming any more
[01:35] torvalamo: i feel like it's being censored
[01:35] torvalamo: censored four letter words!
[01:38] piscisaureus: 过程.stdin.对（'数据'，function（错误，导致) {
[01:38] piscisaureus:   if (错误) throw 错误;
[01:38] piscisaureus:   console.log("got data: " + 导致.toString());
[01:38] piscisaureus: });
[01:38] cgiffard has joined the channel
[01:38] tjholowaychuk: wow
[01:38] tjholowaychuk: lol
[01:38] chapel: v8: console.log("got data: " + 导致.toString());
[01:38] v8bot: chapel: ReferenceError: 导致 is not defined
[01:39] chapel: cool
[01:39] piscisaureus: that is not valid node btw
[01:39] torvalamo: node doesn't like subtitles
[01:39] piscisaureus: almost tho
[01:39] torvalamo: made in america
[01:39] chapel: heh
[01:40] chapel: imagine using other languages to obscure your code
[01:40] chapel: haha
[01:40] shiawuen: node doesn't support utf characters?
[01:40] amerine has joined the channel
[01:40] xonecas has joined the channel
[01:40] torvalamo: it supports what v8 supports
[01:40] cgiffard: does anyone have any experience using other character encodings apart from UTF-8 and ascii?
[01:40] zzak: > var isaacs = アイザックス
[01:40] zzak: > isaacs
[01:40] chapel: v8: var 导致 = "导致";console.log("got data: " + 导致.toString());
[01:40] v8bot: chapel: CONSOLE: ["got data: 导致"], OUTPUT: undefined
[01:41] chapel: hmm
[01:41] torvalamo: python lets you write utf8-code
[01:41] torvalamo: i haven't seen anything outlandish yet though
[01:41] torvalamo: just some arabic examples i think
[01:41] cgiffard: I wasn't referring to the code myself, more the data being dealt with
[01:41] zzak: v8: console.log('アイザックス')
[01:41] v8bot: zzak: CONSOLE: ["アイザックス"], OUTPUT: undefined
[01:41] tmpvar has joined the channel
[01:41] cgiffard: I was trying to scrape some japanese websites, in EUC-JP
[01:41] cgiffard: doesn't like it at all
[01:42] Lorentz: v8: console.log('베리에블')
[01:42] v8bot: Lorentz: CONSOLE: ["베리에블"], OUTPUT: undefined
[01:42] Lorentz: It's probably utf-8, hrm
[01:42] chapel: works for me :)
[01:42] torvalamo: node doesn't recognize anything other than ascii and utf8, so if you're using strings at all, it's not going to work
[01:42] Lorentz: Even if I find a way to grab euc-kr somewhere, I suspect it changes to utf
[01:42] tmcw has joined the channel
[01:43] cgiffard: yeah, it mangled the encoding
[01:43] torvalamo: maybe it works using ascii
[01:43] torvalamo: or maybe not
[01:43] cgiffard: I tried setting it to ascii
[01:43] cgiffard: and then telling my Terminal.app to interpret the text as EUC-JP
[01:43] cgiffard: doesn't work
[01:43] cgiffard: tried binary as well, thinking it wouldn't change it
[01:43] torvalamo: binary is deprecated
[01:43] cgiffard: but it seems that at any point if you do a string operation, node interprets it and mangles it
[01:43] torvalamo: use buffer
[01:44] cgiffard: yeah I was thinking that buffers were the only way
[01:44] cgiffard: but its annoying to have to program every string operation as a buffer
[01:44] richcollins has joined the channel
[01:44] piscisaureus: ☕++
[01:44] torvalamo: you can slice and dice buffers now
[01:44] piscisaureus: no cigar
[01:44] torvalamo: test++
[01:44] v8bot:  torvalamo has given a beer to test. test now has 2 beers.
[01:44] torvalamo: is test even here?
[01:44] cgiffard: oh ok, since what version?
[01:45] torvalamo: not sure
[01:45] torvalamo: probably 3 something
[01:45] torvalamo: haven't checked 2.6
[01:45] cgiffard: ah, so not stable. Thanks though - I'll look into it
[01:45] chapel: http://imgur.com/lMeyE.png
[01:46] torvalamo: 0.2.6 supports slicing buffers
[01:46] torvalamo: according to docs at least
[01:47] cgiffard: ok, I'll look into it
[01:47] cgiffard: thanks
[01:48] zzak: v8: console.log(”anthy quotations”)
[01:48] v8bot: zzak: SyntaxError: Unexpected token ILLEGAL
[01:48] tapwater has joined the channel
[01:48] cgiffard: according to even the 3.6 docs, http://nodejs.org/docs/v0.3.6/api/buffers.html buffers aren't nice to other encodings
[01:48] cgiffard: has anyone used them for non ascii/utf-8?
[01:49] chapel: v8: v8: console.log(”anthy quotations”);
[01:49] v8bot: chapel: SyntaxError: Unexpected token ILLEGAL
[01:49] torvalamo: that's because encodings usually are variable byte length
[01:49] chapel: v8: console.log('anthy quotations')
[01:49] v8bot: chapel: CONSOLE: ["anthy quotations"], OUTPUT: undefined
[01:49] rjrodger has joined the channel
[01:49] zzak: v8: var ありがとう = "thank you"
[01:49] v8bot: zzak: undefined
[01:49] torvalamo: buffers work fine on a byte per byte basis though, i'd imagine utf16 would be a walk in the park
[01:49] zzak: v8: ありがとう
[01:49] v8bot: zzak: ReferenceError: ありがとう is not defined
[01:49] echosystm: are there any problems with SSL in 0.2.6?
[01:50] chapel: 8: var ありがとう = "thank you"
[01:50] echosystm: is it production ready?
[01:50] chapel: v8: var ありがとう = "thank you"
[01:50] v8bot: chapel: undefined
[01:50] pzich has joined the channel
[01:50] torvalamo: echosystm, i think ssl won't work correctly until 0.4.0
[01:50] echosystm: i see
[01:50] echosystm: how far away is that, roughly?
[01:50] torvalamo: it's rewritten for 0.3
[01:51] torvalamo: so whenever 0.3.x is stable i suppose 0.4 will be released
[01:51] aheckmann has joined the channel
[01:51] echosystm: ah, ok
[01:51] torvalamo: it seems like it's going to be a while
[01:52] mjr_: If you check the IRC logs for today, ryah_ made a pretty bold claim about when 0.4 would be ready.
[01:52] mjr_: Unless I misread it.
[01:52] echosystm: what was that?
[01:52] techwraith has joined the channel
[01:52] isaacs: mjr_: you do not misread!!
[01:52] isaacs: 0.4 is coming!
[01:52] torvalamo: today?!!?
[01:52] torvalamo: wow
[01:52] torvalamo: that is awesome
[01:52] torvalamo: :P
[01:53] torvalamo: ok maybe not
[01:53] isaacs: torvalamo: no, not today
[01:53] bradleymeck has joined the channel
[01:53] isaacs: but soon!!
[01:53] torvalamo: i kid i kid
[01:53] isaacs: it is coming!!! get ready!!!
[01:53] torvalamo: ACTION ducks
[01:53] piscisaureus: ryah_: cloexec patch :-(
[01:53] isaacs: Yes!! there will be ducks!! and geese! and patridges in pear trees!!
[01:53] mjr_: Evet: ryah_: when will you release 0.4?
[01:53] mjr_: ryah_: Evet: before feb 5
[01:54] torvalamo: what about sparrows? i want sparrows
[01:54] mjr_: I just want good client/server HTTPS.
[01:54] chapel: same mjr_
[01:55] skm has joined the channel
[01:55] Evet: mjr_: what about nginx?
[01:56] zzak: v8: var ありがとう = "ありがとう means thanks"; ありがとう;
[01:56] v8bot: zzak: "ありがとう means thanks"
[01:56] torvalamo: domo arigato
[01:56] cainus: hey all... can anyone tell me if fs.rename() can be used for a simple file move?
[01:56] zzak: encoding is a b word 
[01:57] torvalamo: cainus, that is the unix way
[01:57] mjr_: Evet: nginx?
[01:57] ossareh has joined the channel
[01:57] isaacs: cainus: yes, that is what a "simple file move" is: a "rename"
[01:58] cainus: cool thanks
[01:58] Evet: mjr_: internally, nginx is an excellent event-based i/o framework
[01:58] isaacs: cainus: `man rename`
[01:58] isaacs: cainus: maybe `man 2 rename`
[01:58] mjr_: Evet: oh, you mean I could use nginx for HTTPS instead of node?
[01:58] bgilbert has joined the channel
[01:59] isaacs: the awesome thing about node's fs module is that the functions are described in such detail in the standard posix man pages.
[01:59] isaacs: just have to mentally translate the C to JS
[02:00] torvalamo: to be fair, the posix docs don't really help remove the nerd stamp from *nix
[02:00] Evet: mjr_: its theorically possible to embed v8 parser into nginx, and port node.js api
[02:00] isaacs: Evet: didn't someone do a v8 nginx module?
[02:00] mjr_: Evet: oh yeah, I'm sure that is theoretically possible.
[02:00] isaacs: i seem to remember reading something about something like that
[02:01] Evet: isaacs: its just an http module
[02:01] torvalamo: everything is possible, the question is do you have the time?
[02:01] mjr_: But I like that node is part of this larger node ecosystem with modules, tests, and lots of users to exercise everything.
[02:01] piscisaureus: isaasc: ...
[02:01] Evet: in fact, nginx is a tcp framework
[02:01] piscisaureus: isaacs: does delete word right behave funny for you too?
[02:01] isaacs: lemme see, hold on...
[02:02] piscisaureus: isaacs: for me, it deletes not only the forward word but also everyting left of the cursor
[02:02] isaacs: piscisaureus: what's the code for that?
[02:02] isaacs: meta-w?
[02:02] isaacs: ctrl-w?
[02:02] Aikar: ryah_: https://github.com/ry/node/pull/582
[02:02] piscisaureus: meta-d or 
[02:02] xonecas: watachi wa sean des, dozo yoritsumo
[02:02] isaacs: piscisaureus: yeah, that's broken.
[02:03] isaacs: piscisaureus: i never ever use that, didn't notice it
[02:03] isaacs: meta-d deletes everything from ^ to cursor
[02:03] piscisaureus: isaacs: I never use it with node because the key combo is so weird
[02:03] isaacs: yah
[02:03] isaacs: just not part of my muscle memory, either
[02:03] piscisaureus: heh
[02:03] isaacs: i do meta-right,meta-backspace
[02:04] isaacs: that's automatic
[02:04] mjr_: I use meta-d all day long.
[02:05] mjr_: with meta-f and meta-b, you can delete words quickly and never lift the meta key.
[02:05] cainus: anyone know why there's a path.join(), but no path.split()?
[02:05] evl has joined the channel
[02:05] xonecas: cainus: use the string slipt() method
[02:05] cainus: with what delimiter?
[02:05] piscisaureus: isaacs: funny. it's mostly ctrl+stuff on windows
[02:06] xonecas: ('/')
[02:06] cainus: xonecas: that seems system specific
[02:06] Evet: mjr_: and nginx can provide great networking and windows support to nodejs
[02:06] xonecas: its web specific :-)
[02:06] cainus: my file system's not on the web ;)
[02:06] Aikar: cainus: path.replace("\\","/").split("/") ?
[02:06] xonecas: damn, is it a windows machine?
[02:07] Lorentz: v8: console.log('서울');
[02:07] v8bot: Lorentz: CONSOLE: ["서울"], OUTPUT: undefined
[02:07] Lorentz: Yep, converts to utf
[02:07] cainus: xonecas: I think the point of path.join() is that you don't know in advance ;)
[02:07] isaacs: mjr_: yeah, i do the same thing, but with meta-arrows, and meta-backspace
[02:08] isaacs: i can do that all with my right hand.
[02:08] mjr_: oh, interesting.
[02:08] cainus: Aikar: yeah I guess \ isn't legal in *nix names either right?  that should be good...
[02:08] mjr_: That's why I use meta-backspace so seldom is because meta-f, b, and d are all close on the left.
[02:08] Lorentz: I think \ is legal
[02:08] Lorentz: Just not /
[02:09] cainus: ahh alright... too bad there wasn't just a path.DELIMITER 
[02:09] torvalamo: echosystm
[02:09] torvalamo: [22:36] Evet: ryah_: when will you release 0.4?
[02:09] torvalamo: [22:36] ryah_: Evet: before feb 5
[02:09] xonecas: cainus: I guess in this case you should check for what delimiter is being used: indexOf('\') > -1 || indexOf('/') > -1
[02:10] cainus: probably just gonna check os.isWindows()
[02:10] echosystm: thanks torvalamo 
[02:11] mtodd has joined the channel
[02:11] torvalamo: i don't believe it until i see it
[02:11] Fandekasp has joined the channel
[02:12] ryanfitz has joined the channel
[02:12] torvalamo: xonecas: ~indexOf('\') || ~indexOf('/')
[02:12] torvalamo: use the sexy operator
[02:12] torvalamo: probably made for that exact purpose
[02:13] hornairs has joined the channel
[02:14] Me1000 has joined the channel
[02:14] xonecas: torvalamo: please explain? you got me confused
[02:15] torvalamo: the tilde operator
[02:15] xonecas: v8bot: !!-1
[02:15] v8bot: xonecas: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[02:15] torvalamo: v8: !!-1
[02:15] v8bot: torvalamo: true
[02:15] torvalamo: v8: !!0
[02:15] v8bot: torvalamo: false
[02:15] torvalamo: v8: !!1
[02:15] v8bot: torvalamo: true
[02:15] torvalamo: v8: ~-1
[02:15] v8bot: torvalamo: 0
[02:15] torvalamo: v8: ~0
[02:15] v8bot: torvalamo: -1
[02:15] torvalamo: v8: ~1
[02:15] v8bot: torvalamo: -2
[02:15] springmeyer has joined the channel
[02:15] zzak: v8bot++
[02:15] v8bot:  zzak has given a beer to v8bot. v8bot now has 12 beers.
[02:15] torvalamo: v8: !!~-1
[02:15] v8bot: torvalamo: false
[02:15] torvalamo: v8: !!~0
[02:15] v8bot: torvalamo: true
[02:15] torvalamo: v8: !!~1
[02:15] v8bot: torvalamo: true
[02:15] torvalamo: that.
[02:16] zzak: v8: !!~(true)
[02:16] v8bot: zzak: true
[02:16] zzak: v8: !!~(false)
[02:16] v8bot: zzak: true
[02:16] xonecas: I feel a litle blunt, but I don't understand the usage
[02:16] torvalamo: functions that return -1 for false
[02:16] xonecas: oh I see
[02:16] torvalamo: instead of 0
[02:16] Fuld: node.js powered search engine: http://www.prodigylink.com/searchparty
[02:17] Lorentz: v8: !!!!!!!!!!!!!!!~-1
[02:17] v8bot: Lorentz: true
[02:17] xonecas: torvalamo: thanks for that :-)
[02:17] isaacs: npm 0.2.16 released.  nothing terribly exciting, but if i told you that your bug was fixed in the next version, it's probably fixed now.
[02:17] isaacs: sudo stuff not landed yet.
[02:17] isaacs: still broken
[02:17] xonecas: isaacs: do you know if your talk at nodeconf will be recorded and made available online?
[02:17] torvalamo: xonecas: just preaching the squiggle way.
[02:18] isaacs: xonecas: yeah, but i'm thinking of changing it.  flow control is dumb.
[02:18] xonecas: torvalamo: keep it up. I love to learn new stuff
[02:18] isaacs: people just get upset about it
[02:18] xonecas: eheh
[02:18] isaacs: it'd be better to talk about npm, i think
[02:18] arpegius has joined the channel
[02:18] ericnakagawa has joined the channel
[02:18] isaacs: that's kind of a node type topic, right?
[02:19] torvalamo: that's what you're known for... oh ok bye :P
[02:21] xonecas: npm is an awesome tool, more exposure of it would help node developers I think
[02:21] torvalamo: he left
[02:21] JimBastard has joined the channel
[02:22] xonecas: indeed :-(
[02:22] JimBastard: tanepiper: hey man
[02:22] JimBastard: http://twitter.com/nodemodules
[02:22] torvalamo: so will I, but if he comes back, tell him to include some examples on how to submit stuff with it... i think it would help the noobs
[02:22] markstory has joined the channel
[02:23] torvalamo: though it would possibly get filled up with random mediocre crap
[02:23] torvalamo: so it's a balance act
[02:24] xonecas: maybe some examples of the basic module syntax, how to use the exports object and so on?
[02:26] JimBastard: tanepiper: just wondering why it said unknown version
[02:27] ShizWeaK_: xonecas: docs here https://github.com/isaacs/npm/tree/master/doc
[02:29] xonecas: ShizWeaK_: thanks :-)
[02:30] Fuld: node.js powered search engine is done: http://www.prodigylink.com/searchparty
[02:31] sprout has joined the channel
[02:31] whyme has joined the channel
[02:31] aphelion: Fuld: source or it didn't happen
[02:31] Fuld: Seriously, is anyone working on a node.js-powered search?
[02:32] Fuld: aphelion: Yeah what I made is just a meta-search to spread DuckDuckGo :)
[02:35] shiawuen: what is DuckDuckGo different with other search engine?
[02:35] JusticeFries has joined the channel
[02:36] banjiewen has joined the channel
[02:36] xonecas: Fuld: how does node can improve web search?
[02:37] mtodd has joined the channel
[02:38] Fuld: xonecas: Horizontal specialization.
[02:38] hornairs has joined the channel
[02:38] derferman has joined the channel
[02:38] Aikar: wat
[02:38] Aria has joined the channel
[02:39] Aikar: i dont see how node helps me type 'g <search term>' into my browsers address bar any faster
[02:39] aphelion: xonecas: maybe not search, but crawling... using jsdom to post-process a page for verification purposes, such as what i'm currently writing. i need to ensure that user X's site is doing something on Y subset of pages that results in code being loaded from our servers and JS state being set.
[02:40] aphelion: but it's not as simple as grepping the page for some string :/
[02:40] xonecas: aphelion: good point :-)
[02:40] mattly has joined the channel
[02:43] aphelion: (because they can both use a document.write api and an async api, or potentially write their own damn code for it)
[02:43] aphelion: </grumble>
[02:44] heavysixer has joined the channel
[02:44] asimismo has joined the channel
[02:45] luke` has joined the channel
[02:45] Ond has joined the channel
[02:47] possibilities has joined the channel
[02:51] mgutz has joined the channel
[02:52] dthompson has joined the channel
[02:52] devrim has joined the channel
[02:52] chapel: http://thechangelog.com/post/2910383164/webdis-a-redis-http-interface-with-json-output << interesting
[02:52] kiddphunk has left the channel
[02:53] chapel: has anyone made a node.js based redis clone or similar in memory fast db?
[02:53] saikat has joined the channel
[02:56] shiawuen has left the channel
[02:57] shiawuen has joined the channel
[02:57] astoon has joined the channel
[02:58] Fuld: chapel: Would be interesting
[02:58] Fuld: Because you have the JSON object :)
[03:02] shiawuen has joined the channel
[03:03] Fuld: Diaspora died :(
[03:03] Fuld: No one cared about owning their likes.
[03:03] jesusabdullah: Well
[03:03] jesusabdullah: the problem with diaspora was that it was a Known Shitpile on release
[03:03] jesusabdullah: Unfortunately
[03:03] Fuld: ACTION is working on a social network in node.js
[03:03] strmpnk has joined the channel
[03:03] jesusabdullah: Not that I can verify that, but word got around pretty quick
[03:04] Fuld: Like, insecure code?
[03:04] Lorentz: Know what I would like? A nice nodejs based project management app.
[03:04] Fuld: Lorentz: I'll write that down for tomorrow
[03:05] jesusabdullah: Fuld: Yeah, mostly. Also heard it wasn.'t all that innovative in terms of What It Could Do.
[03:05] tmzt: Fuld: how do you match up people based on criteria?
[03:05] Fuld: ACTION will be coding on the plane tomorrow
[03:05] Qbix1 has joined the channel
[03:05] jesusabdullah: Fuld: I wasn't really too interested, though
[03:05] CIA-99: node: 03Ryan Dahl 07master * r068b733 10/ (9 files in 4 dirs): 
[03:05] CIA-99: node: Land Cantrill's DTrace patch
[03:05] CIA-99: node: only works on solaris - http://bit.ly/hboukj
[03:05] tmzt: not OSX?
[03:06] Fuld: tmzt, what we're trying to innovate is contextual suggestions for status updates
[03:06] chapel: diaspora was doa, think about it, it was just a reaction to fb and their privacy failures, but diaspora did nothing but complicate the process and not deliver anything new
[03:06] chapel: people aren't going to want a fb clone
[03:06] tmzt: this new chat thing mentioned on SAI today sound interesting
[03:06] chapel: with better privacy
[03:06] piscisaureus: ryah: https://github.com/piscisaureus/node/commit/c4e78dd544324823056f81b003ae914e7a1efbfa.patch
[03:07] Fuld: And unlike Facebook, people be able to express both sides of the opinion spectrum with a thumbs down button
[03:07] tmzt: essentially it picks the chat room for you
[03:07] chapel: Fuld: expect lots of negativity :)
[03:07] chapel: tmzt: what chat thing?
[03:07] Fuld: chapel, of course
[03:07] piscisaureus: ryah_: ^ getting real pissed now 
[03:07] tmzt: that's the problem, I can't remember the name :)
[03:08] Fuld: Another thing we're doing differently is giving people a nice drag & drop interface to divy up their network in warrens.
[03:09] chapel: good luck Fuld
[03:09] Fuld: So mom and dad don't see someone post on your wall about that frat party.
[03:09] piscisaureus: isaacs: oh it is so nice to hack on readline. It's like a sandbox for geeks.
[03:09] tmm1 has joined the channel
[03:09] Fuld: chapel, yeah Facebook is kind of a juggernaut.
[03:09] chapel: I wouldn't worry about taking on fb
[03:09] chapel: build a niche
[03:10] chapel: then move on from there
[03:10] Fuld: yup
[03:10] Fuld: Collegeonly did well with that approach
[03:10] chapel: building a better fb is only going to cause fb to buy you or add your features
[03:10] tmm1: ryah_: ping
[03:10] Fuld: The latter :D
[03:10] chapel: yeah
[03:10] chapel: most likely
[03:11] tmzt: http://feedproxy.google.com/~r/Venturebeat/~3/u090m1XelkY/
[03:11] Fuld: Is there a social network for programmers?
[03:11] Fuld: github is to code-centric
[03:11] tmm1: ryah_: how do you feel about http://pastie.org/1494861. it allows stopping and resuming the parser at the header/body boundary. not as generic as your new resumable api, but its the only usecase i care about and a trivial patch
[03:12] CarterA has joined the channel
[03:13] JusticeFries has joined the channel
[03:13] chapel: bah, no android support
[03:13] chapel: it can die for all I care
[03:13] jchamb2010 has joined the channel
[03:14] jchamb2010: hi
[03:15] CarterA: Finally got Node.js integrated intro my server's stack:  http://c.zcr.me/IOYP+
[03:16] haxorjim has joined the channel
[03:20] Yuffster has joined the channel
[03:21] noahcampbell has joined the channel
[03:21] losing_ has joined the channel
[03:21] losing has joined the channel
[03:23] bingomanatee: Has anyone done a map reduce using christkov node mongodb ?
[03:24] Evet has joined the channel
[03:25] tmpvar: CarterA, nice!
[03:25] tmpvar: less php more node! :)
[03:25] CarterA: Yeah! One more app left using PHP+MySQL, then I'm done.
[03:29] Lorentz: So much hate on php
[03:30] CarterA: I don't hate it. I just like Node better.
[03:31] gf3 has joined the channel
[03:34] ryanfitz has joined the channel
[03:34] Fuld: Is there a way to load up a .html with metasyntactical variables and then fill them in with node.js on request? i.e., without coding this module myself
[03:35] ChrisPartridge: Fuld: templating engine?
[03:36] Fuld: Maybe. I want it very simple
[03:37] ChrisPartridge: Fuld: I'm using http://jade-lang.com/
[03:37] Fuld: I would pass it a JSON object with the strings to fill in and it would spit out the result by matching them to the variables in the html
[03:37] ChrisPartridge: Also check out haml, sure there are plenty of others out there too
[03:38] tim_smart: dtrace patch :o
[03:39] Fuld: Interesting, but they're trying to do too much for what I want to do here
[03:39] Ond: EjS?
[03:40] ChrisPartridge: Fuld: perhaps https://github.com/kof/node-jqtpl or https://github.com/visionmedia/ejs
[03:41] Fuld: ejs looks like it lets you embed JS in the html
[03:41] Fuld: Hmm, perfect :)
[03:42] prettyrobots has joined the channel
[03:43] joelklabo: i am using request to save to couchdb and I am trying to access the id of the saved document. I have tried body.id, and it is undefined, even though console.log(body) shows the successful save, with the id. am i going about this wrong?
[03:44] jpld has joined the channel
[03:48] Fuld: joelklabo, what does console.log(body.id) say?
[03:48] joelklabo: undefined
[03:48] Fuld: joelklabo: I'm assuming this is async, so you need t get body.id after you get a callback (when couchdb is done)
[03:49] Fuld: Otherwise you are trying to access it before the save is done
[03:49] Fuld: disclaimer: this is pure speculation as I'm a node newbie
[03:49] joelklabo: yeah, that's what i am doing. console.log(body) is this: {"ok":true,"id":"8c4101d9d7eb9a2b920ec35eb301a2d8","rev":"1-8f757a3b7bd9c7add5734f34970d781a"}\ 
[03:49] Qbix1 has joined the channel
[03:49] joelklabo: so it's done
[03:51] joelklabo: seems like it should be very simple...
[03:53] Fuld: joelklabo, what is body exactly then? A string?
[03:54] joelklabo: yeah, I think it is what i pasted above. although i obviously don't know exactly what is going on 
[03:55] Fuld: joelklabo, maybe you need to do: var obj = eval("(" + body + ')');
[03:55] Fuld: Not very safe, but you can probably trust couch ;p
[03:56] Fuld: If it's a string, you need to get it parsed into an object
[03:56] joelklabo: ahh, i think your right.
[03:56] joelklabo: its just a string, i need to 'objectify' it
[03:56] Fuld: Yeah. Someone else here probably knows how to best do that.
[03:57] joelklabo: JSON.parse(body) i think...
[03:57] Fuld: Yeah
[03:57] joelklabo: Thanks
[03:57] Fuld: y/w ;)
[03:59] asimismo has joined the channel
[04:01] Utkarsh has joined the channel
[04:02] benwilber has joined the channel
[04:02] benwilber: js api is ugly
[04:04] benwilber: and by that I mean, it's evolved in a way that's not very clean.  For instance, contracts have changed, deprecated properties are marked 'deprecated', but still in use in the codebase
[04:04] SubStack: contracts?
[04:04] SubStack: promises, you mean?
[04:04] tmpvar: callsites?
[04:04] benwilber: no
[04:05] benwilber: varargs
[04:05] SubStack: what
[04:05] SubStack: just [].slice.call(arguments)
[04:05] benwilber: so much code is wasted just trying to figure out what arguments were passed, and in what order
[04:05] SubStack: pow, a real array
[04:05] shaver: need to standardize destructuring
[04:05] benwilber: right, but formality breeds adoption.  Not this ad-hoc stuff
[04:06] benwilber: Really needs to JSDocing
[04:06] chrisdickinson: or for real fun: function args() { return Array.prototype.slice.call(arguments.callee.caller.arguments); }
[04:06] benwilber: I am very interested in taking this on
[04:06] chrisdickinson: v8: var args = function() { return Array.prototype.slice.call(arguments.callee.caller.arguments); }; (function() { return args(); })(1,2,3,4);
[04:06] v8bot: chrisdickinson: [1, 2, 3, 4]
[04:06] Fuld: benwilber, we'd love to have you.
[04:07] benwilber: Thanks Fuld,  I am inspired  by Google's close attention to contracts
[04:07] benwilber: NOT something I've ever seen in JS
[04:07] Fuld: We don't want node.js to be another PHP, full of hacks and lacking support for things as basic as like utf-8.
[04:08] benwilber: I'm talking about Google's Closure Library
[04:08] Fuld: mmm
[04:08] dug__ has joined the channel
[04:09] tmpvar: benwilber, i'd have to agree.. but this isn't really a node problem specifically
[04:09] benwilber: It's not unreasonable to have optional args in JS.  Just don't say var func = function() { ...spend 25 lines parsing arguments ...}
[04:09] tmpvar: js tends to be a bit unwieldy, due to its flexible nature
[04:10] shaver: benwilber: have you seen the spread/rest proposal for ES Harmony?
[04:10] benwilber: Right, but seriously, Node.js has SO much potential.  It really should be more formal than it is.
[04:10] evl has joined the channel
[04:10] benwilber: I realize it's still just hackery, for the most part.
[04:11] tmpvar: benwilber, there are efforts to standardize and make it perfect, but it is still young and quite the moving target
[04:11] benwilber: shaver: no
[04:13] shaver: benwilber: http://wiki.ecmascript.org/doku.php?id=harmony:rest_parameters
[04:13] benwilber: tmpvar: That is a bit a limiter, I understand.  I've got a fork now on github: github/benwilber/node that I'll be trying to JSdoc etc.  Hopefully this can move forward.
[04:13] tmpvar: benwilber, are you subscribed to the mailing list?
[04:13] benwilber: I also need to get closure-compiler to work with commonjs module loading.  I'm working on that separately.
[04:14] benwilber: yeah
[04:14] benwilber: just posted this (griped) a bit ago
[04:14] tmpvar: ah, email is the devil while hacking ;)
[04:14] tmpvar: but i see Micheil pointed you in the right direction
[04:15] chrisdickinson: *cough* also kwargs: https://gist.github.com/a5d293dfe1ec2168a6f0
[04:16] chrisdickinson: ACTION realizes that the above is evil.
[04:17] tmpvar: heh
[04:17] tmpvar: not as evil as email
[04:17] Fuld: benwilber: I am using node.js in production
[04:17] w0rse_ has joined the channel
[04:18] tmpvar: I can't until we mock people for not using node in production ;)
[04:18] benwilber: Code links from Micheil.   Not really what I was looking for.  Docs are only marginally different that good code.
[04:18] tmpvar: s/until/wait until/
[04:18] piscisaureus: chrisdickinson: that code has me puzzled. what does it do?
[04:18] benwilber: *Good Links*
[04:19] chrisdickinson: piscisaureus: the first function returns the calling function's arguments as an array
[04:19] chrisdickinson: the second function returns them as an option mapped to the calling function's parameters
[04:21] Bosmon: It's fine... I'd much prefer something that *worked* rather than something that was "formal" :)
[04:21] Bosmon: Polish can come in time
[04:21] cagdas has joined the channel
[04:22] piscisaureus: chrisdickingson: ah. thnx. I don't really see why it is useful, but is is truly a mind-twister :-)
[04:22] chrisdickinson: piscisaureus: no prob :) it's... kind of a thing i trot out whenever a pythonista complains about the lack of keyword arguments in javascript
[04:22] chrisdickinson: (which, don't get me wrong, i love keyword arguments.)
[04:23] chrisdickinson: (and also python.)
[04:23] Bosmon: I thought there wasn't a commitment to support "callee" and "caller" in future versions of JS?
[04:23] chrisdickinson: Bosmon: no, they're ripping 'em out and tossing 'em like bad garbage
[04:23] piscisaureus: chrisdickinson: yeah i can see that. usually in js you would just stuff an object in there
[04:23] Bosmon: They strike me as downright unpleasant features :P
[04:23] Twelve-60` has joined the channel
[04:23] zikes has joined the channel
[04:24] shaver: we'll get spread and rest before we lose callee and arguments
[04:24] shaver: caller is already poisoned in strict mode
[04:24] Bosmon: Excellent
[04:24] chrisdickinson: Bosmon: to be honest, i hope they figure out some way to denote "arguments.callee". It's a fairly useful construct when you're within an otherwise completely anonymous function.
[04:24] piscisaureus: callee as well, which makes me said
[04:24] shaver: chrisdickinson: it will likely be spelled "this function
[04:24] shaver: "
[04:24] Bosmon: I want to see new, this and prototype poisoned as well :)
[04:24] shaver: f = this function;
[04:24] shaver: though you can also just name the function
[04:24] shaver: you have some refactoring overhead in that case
[04:24] piscisaureus: *sad
[04:25] chrisdickinson: shaver: cool -- that's not a bad syntax.
[04:25] dnolen has joined the channel
[04:25] chrisdickinson: i'm thinking like, setTimeout(function() { if(this happened) { } else { setTimeout(arguments.callee); } })
[04:25] Bosmon: I'm perfectly happy to give things names if I need
[04:25] joelklabo: I am getting a typeError when using request: http://pastebin.com/Nqn5snfz, anyone seen that?
[04:25] shaver: chrisdickinson: sure
[04:26] shaver: setTimeout(function this_timeout() { if (smth) { } else { setTimeout(this_timeout); } })
[04:26] chrisdickinson: (i mean, yeah, setInterval would work too. but i like having anonymous closures)
[04:26] shaver: of course, you could setInterval
[04:26] shaver: right
[04:26] piscisaureus: the sad thing is that the named function trick doesn't work in ie :-(
[04:26] tmzt: is that supposed to call itself?
[04:26] Bosmon: What do you mean, goldfish?
[04:26] shaver: IE has bugs, it's true
[04:26] shaver: tmzt: yes
[04:26] shaver: tmzt: named functions have their name in scope
[04:26] tmzt: why?
[04:27] shaver: because that's what brendan decided in 1994
[04:27] shaver: not sure how to answer that question, really
[04:27] shaver: (1995)
[04:27] tmzt: no why is it supposed to call itself
[04:27] chrisdickinson: tmzt: it calls itself until ... something happened to make it not call itself.
[04:27] shaver: right
[04:27] chrisdickinson: think of it as like "polling for something to be ready"
[04:27] tmzt: but without another timeout
[04:27] shaver: it's too bad setInterval doesn't let you pass the function
[04:28] evl has joined the channel
[04:28] chrisdickinson: shaver: var interval = setInterval(function() { if(something happened) { clearInterval(interval); } })
[04:28] shaver: sure
[04:28] tmzt: it looks like it would be an infinite loop just implemented with recursion so I dont get it (unless the condition was met of course)
[04:28] shaver: but you need some external pollution, or closuretrucks
[04:28] shaver: tricks
[04:28] shaver: tmzt: not really recursion, but yes
[04:28] chrisdickinson: tmzt: it actually doesn't recurse. it says "hey giant event loop in the sky, i'm ready to come home!"
[04:29] tmzt: okay
[04:29] tilgovi has joined the channel
[04:29] shaver: tmzt: but the setTimeout means that you yield to the hosting app (node event loop, browser UI, etc.) between checks of the condition
[04:29] chrisdickinson: and the next time the event loop swoops through on its chariot of fire, it executes the function again.
[04:29] Bosmon: piscis - which ie feature were you referring to
[04:29] chrisdickinson: ^^ what shaver said :)
[04:29] chrisdickinson: basically, like, if you're waiting on a file to be done... that's one way to do it. (a dumb way.)
[04:30] chrisdickinson: *done reading, for example
[04:30] yhahn has joined the channel
[04:30] tmzt: I missed the second setTimout on the callee variant, nevermind
[04:31] piscisaureus: Bosmon: you can do this: setTimeout(function hello() { /* hello is only available here and it equals arguments.callee */ })
[04:31] piscisaureus: that is a good alternative to arguments.callee
[04:31] chrisdickinson: but yeah -- i like arguments.callee. named functions -- "function <name>() {}" kind of irk me. partially because of how they behave differently from "var f = function() {}" statements
[04:31] piscisaureus: but it doesn't work on IE
[04:32] Bosmon: Ah, that is interesting
[04:32] Bosmon: It would never have occured to me to try :)
[04:32] shaver: works in IE9!
[04:32] chrisdickinson: and hopefully there's a bit in ES5 harmony that standardizes Date.parse.
[04:32] shaver: there's ISO format in ES5, I thought
[04:32] chrisdickinson: Chrome does well with it, Safari blows chunks at it.
[04:33] Bosmon: I am massively excited by upcoming "Proxies"....
[04:33] Bosmon: Dull name, great feature :P
[04:33] shaver: proxies are so helpful
[04:33] Bosmon: They will enable a whole new way of coding
[04:33] chrisdickinson: v8: new Date(Date.parse((new Date()).toJSON()))
[04:33] v8bot: chrisdickinson: "Mon Jan 24 2011 23:33:52 GMT-0500 (EST)"
[04:34] chrisdickinson: and for fun, try the same code in the safari console.
[04:34] piscisaureus: although i agree with that, we'll have to wait until 2020 something before that is widely available
[04:34] chrisdickinson: it can't parse it's own JSON serialization!
[04:34] Fuld: Bosmon: Why?
[04:34] piscisaureus: proxies I mean
[04:34] Bosmon: I can't believe people even *try* to use the JS build-in Date :)
[04:34] Bosmon: it is just so outrageously broken in so many ways
[04:34] Aria: It so is.
[04:35] Bosmon: The only possible use it has is getting the current timestamp.... after that you can throw this piece of crud away
[04:35] Bosmon: Proxies will let us create new views on *state*
[04:35] Bosmon: The one thing that made me most frustrated about C++ is that it didn't let you overload the "." operator
[04:35] brianmario has joined the channel
[04:35] chrisdickinson: Bosmon: you can't even get the timestamp out of a JSON serialized date in safari.
[04:36] Bosmon: Unclear why it didn't.....
[04:37] Bosmon: Dates should be stored in some recognisable format... like ISO 8601
[04:37] ryah_: piscisaureus: sorry about brekaing your build
[04:37] nejucomo has joined the channel
[04:37] piscisaureus: ryah_: np. 
[04:38] piscisaureus: i never really get angy. yes, we should have buildbot.
[04:38] ryah_: piscisaureus: are you passing more tests than cygwin these days?
[04:38] CIA-99: node: 03Bert Belder 07master * rf9fea12 10/ src/node_file.cc : Fix windows build - http://bit.ly/hqbbFk
[04:38] piscisaureus: ryah: nope. 
[04:38] hunterloftis has joined the channel
[04:38] ryah_: piscisaureus: cygwin is like -15 ?
[04:38] piscisaureus: ryah: mine is like -40 or so
[04:39] piscisaureus: ryah: without openssl, that is
[04:39] ryah_: what's the bulk of those coming from?
[04:39] ryah_: or is it just everything?
[04:39] ryah_: ACTION should boot into windows again
[04:39] ryah_: :~(
[04:39] piscisaureus: ehm. path slash differences. openssl. symlinks, lstat, umask
[04:39] piscisaureus: process.env
[04:40] piscisaureus: unsupported stuff mostly
[04:40] w0rse has joined the channel
[04:40] dthompson has joined the channel
[04:40] piscisaureus: ryah_: oh and a major part is because some exec() stuff doesn't work because 'pwd' for example doesn't work and /tmp is not a valid dir
[04:41] piscisaureus: that is basically tests that should be fixed
[04:41] ryah_: hm
[04:41] ryah_: okay
[04:41] modular has joined the channel
[04:41] piscisaureus: ryah_: but I like to implement features, not fix test :-) so occasionally I fix one.
[04:41] statim has joined the channel
[04:42] piscisaureus: ryah_: but the good news is that it is much faster and more stable than cygwin. I did a big database conversion with it (using node-mysql) that always died on cygwin in strange ways but the mingw build worked like a charm
[04:42] w0rse_ has joined the channel
[04:43] ryah_: good
[04:43] ryah_: i hope marc has a good answer to your test program
[04:43] piscisaureus: Bosmon: I don't work on the cygwin build. 
[04:43] ryah_: instead of insults
[04:43] piscisaureus: ryah_: yeah me too. well his first reaction was kinda promising 
[04:43] opus_ has joined the channel
[04:44] Bosmon: ok
[04:44] piscisaureus: ryah_: but I went great lengths already trying to convince him that you *really* can't call read() on a socket on windows, but with no effect
[04:44] Fuld: lol: http://danieldickey.com/wp-content/uploads/2010/09/history-facebook-updates.jpg
[04:45] Fuld: The Titantic makes me think of my thread-per-client web service. :)
[04:46] CIA-99: node: 03isaacs 07master * r430a7f1 10/ (lib/readline.js lib/tty_posix.js): Support pastes and meta-backspace - http://bit.ly/e2UzML
[04:46] CIA-99: node: 03Bert Belder 07master * r07f3274 10/ lib/readline.js : 
[04:46] CIA-99: node: Readline: fixes, more key bindings
[04:46] CIA-99: node: - Made backward/forward more convenient
[04:50] ryah_: http://codereview.chromium.org/6248013/diff/14001/src/messages.js
[04:50] ryah_: ^--- ES5 is retarded
[04:51] piscisaureus: ryah_: file permissions is really the only application of octal numbers I ever encountered in my life
[04:53] piscisaureus: you should just make it a string and parse it with parseInt(x, 8)
[04:53] ryah_: :(
[04:53] langworthy has joined the channel
[04:54] piscisaureus: Five Stages Of Grief: Denial and Isolation, Anger, Bargaining, Depression, Acceptance.
[04:56] Me1000 has joined the channel
[04:57] crodas has joined the channel
[04:58] pquerna: thats too bad. on octal
[04:58] ezmobius has joined the channel
[05:00] piscisaureus: ACTION goes to bed. soon. is the plan
[05:01] JusticeFries has left the channel
[05:03] CIA-99: node: 03Ryan Dahl 07master * r4c5e570 10/ (100 files in 13 dirs): Upgrade V8 to 3.0.10 - http://bit.ly/f3vTMV
[05:03] iszak has joined the channel
[05:03] zzak: grief leads to anger, anger leads to hate, hate leads to suffering
[05:03] iszak: SOAP client in node.js?
[05:04] iszak: I see.
[05:04] hij1nx has joined the channel
[05:05] ryah_: node's xml parsing capabilities are not very good
[05:05] saschagehlich has joined the channel
[05:05] SubStack: does any language have good xml parsers?
[05:05] iszak: dang.
[05:05] SubStack: doesn't xml lend itself to shit parsers for being so unnecessarily complicated?
[05:06] Bosmon: Yes, it does
[05:06] iszak: Would want XML parser to be more lower level too I'd say.
[05:06] skm has joined the channel
[05:07] SubStack: too bad there's so much xml sitting around being used for data instead of presentation markup
[05:07] iszak: So what do people think about node.js vs v8cgi?
[05:09] hornairs has joined the channel
[05:10] techwraith has joined the channel
[05:12] mynyml has joined the channel
[05:13] brapse: mynyml: wtf
[05:13] piscisaureus: ryah_: https://gist.github.com/794543
[05:13] piscisaureus: ^ make test output
[05:13] cloudhead has joined the channel
[05:14] mike5w3c_ has joined the channel
[05:14] ryah_: some of these are probably pretty easy to fix
[05:14] ryah_: i should boot in and give it a shot
[05:14] piscisaureus: yeah
[05:15] isaacs has joined the channel
[05:15] piscisaureus: some of them are hard to fix, though :-)
[05:17] mynyml: brapse: wtf
[05:17] iszak: piscisaureus, what's this?
[05:18] brapse: mynyml: #rubyonrails is => that way
[05:18] mynyml: lol
[05:18] mynyml: node+cs > ruby
[05:18] iszak: node + counter strike?
[05:18] piscisaureus: iszak: we're porting node to my microwave oven. some tests still fail sadly
[05:18] slickplaid: counterstrike ftw!
[05:18] zzak: is libxmljs any good?
[05:18] mynyml: computer sciene?
[05:18] mynyml: *science
[05:19] iszak: piscisaureus, your microwave oven must be good.
[05:19] saschagehlich has joined the channel
[05:19] Bosmon: Pah, his oven doesn't even do IP :P
[05:19] mynyml: brapse: #python is => that way ;)
[05:20] iszak: should I setup a cron to pull node.js and update every day?
[05:20] noahcampbell has joined the channel
[05:21] zzak: sounds like a recipe for disaster
[05:21] piscisaureus: Bosmon: ip works but openssl doesn't. If I enable it my turkey comes out all scrambled.
[05:21] iszak: I like the sound of that!
[05:21] Bosmon: hahahaha
[05:21] Bosmon: If only you were a Vegetarian
[05:21] Bosmon: Like all the other quiche-eaters :P
[05:22] Aikar: ryah_: https://github.com/ry/node/pull/582
[05:22] wkmanire has joined the channel
[05:22] mynyml: cloudhead: wtf
[05:22] wkmanire: Howdy folks.
[05:25] iszak: yay installing npm trunk and node.js drunk
[05:25] isaacs: iszak: i seem to remember you doing that while drunk some other time.
[05:25] isaacs: iszak: or i just have deja vu
[05:25] iszak: or maybe I did and I forgot.
[05:25] isaacs: haha
[05:25] iszak: npm.. no I don't think so, I've resented it.
[05:25] isaacs: is ee
[05:26] wkmanire: Drunk administration can only lead to one thing... sober troubleshooting.
[05:26] Lorentz: Oh hell yes set up a redmine site that hooks to my github project(s)
[05:26] iszak: isaacs, no offense, I just want things baked in.
[05:26] warz has joined the channel
[05:26] iszak: like v8cgi without the slowness.
[05:26] isaacs: iszak: what's "baked in"?
[05:26] willwhite has left the channel
[05:26] isaacs: iszak: like require("http") is baked in?
[05:26] iszak: not /everything/ though, and I understand it will never happen.
[05:27] iszak: no like require("db").MySQL
[05:27] iszak: but like I said - it's cool, I accept it won't happen so I've got to use npm.
[05:27] isaacs: iszak: there are plans to allow you to compile in modules into one exe
[05:27] iszak: why an exe? we don't all live in Windows!
[05:27] iszak: But that is pretty cool.
[05:27] isaacs: exe is shorthand for executable
[05:27] isaacs: one big binary
[05:27] iszak: Oh right, I thought you specifically meant .exe's for windows.
[05:28] iszak: that's quite cool.
[05:28] isaacs: yeh
[05:28] isaacs: no, not windows
[05:28] isaacs: no <3 for windows here.
[05:28] isaacs: that's piscisaureus's area
[05:28] Lorentz: Nobody likes windows anyway
[05:28] Aikar: isaacs: that would rock hardcore if you could package all npm libs as a single pack
[05:28] Lorentz: They just tolerate it.
[05:28] iszak: I like Windows.
[05:29] wkmanire: isaacs: My boss uses windows only. He asked me to send him an update on the project so I e-mailed him a file named TODO.
[05:29] iszak: To some extent mostly because of the programs that's being run on mostly.
[05:29] wkmanire: isaacs: He was unable to open it, so he called me in to rename it TODO.txt....
[05:29] iszak: LOL
[05:29] wkmanire: This was earlier today.
[05:29] isaacs: Aikar: npm ls | awk -F@ '{print $1}' | uniq | xargs npm install 
[05:29] isaacs:  
[05:29] iszak: wkmanire++
[05:29] v8bot:  iszak has given a beer to wkmanire. wkmanire now has 1 beers.
[05:29] wkmanire: :)
[05:29] Aikar: isaacs: lol...
[05:29] Aikar: i meant installed ones
[05:30] Aikar: like package em up for easy deploy
[05:30] CIA-99: node: 03Aikar 07master * r6c795a4 10/ (5 files in 5 dirs): (log message trimmed)
[05:30] CIA-99: node: Adding support for require-like initialization of node,
[05:30] CIA-99: node: so `node foo`
[05:30] isaacs: Aikar: oh, you mean, like "what do i have installed, please snapshot that"
[05:30] ryah_: Aikar: thank you! and welcome to the authors file :)
[05:30] isaacs: Aikar: yeah, that's sort of planned.
[05:30] Aikar: thanks ryah_ :)
[05:30] Aikar: isaacs: the symlinks of npm mods is killing my IDE :( had to resort to a normal editor lol
[05:30] isaacs: Aikar: eeexxxxcellent
[05:30] isaacs: Aikar: my plan is working
[05:31] Aikar: >_>
[05:31] isaacs: soon everyone will be using proper editors
[05:31] isaacs: like vim and textmate
[05:31] iszak: isaacs, running npm should be okay right? not /installing/ it right?
[05:31] isaacs: iszak: installing npm is fine
[05:31] SubStack: editorS‽
[05:31] isaacs: iszak: or running it
[05:31] SubStack: heretic!
[05:31] iszak: isaacs, sorry I meant as su
[05:31] SubStack: I don't care what you believe, so long as you only believe in exactly one editor!
[05:31] isaacs: iszak: oh, whatever, i don't really care.  just be careful what you install.
[05:32] iszak: well it's just it gives the warning on something like npm ls, perhaps only on make?
[05:32] isaacs: iszak: whenever you run npm as root, today, it warns
[05:32] ryah_: force push
[05:32] isaacs: sudon't!
[05:32] ryah_: sorry
[05:32] iszak: but I cba typing sudo -u iszak
[05:32] CIA-99: node: 03Daniel Ray Ennis 07master * rfffcb3f 10/ (5 files in 5 dirs): (log message trimmed)
[05:32] CIA-99: node: Adding support for require-like initialization of node,
[05:32] CIA-99: node: so `node foo`
[05:32] iszak: I'm always in as root.
[05:32] isaacs: iszak: you log in as root?
[05:32] isaacs: to your machine?
[05:32] iszak: yes
[05:33] iszak: I like the power.
[05:33] Lorentz: That is a very bad idea
[05:33] isaacs: iszak: !!!?!!!?!
[05:33] wkmanire: if npm doesn't want to be sudo'd then it shouldn't try to access folders that require root permissions...
[05:33] iszak: What's so wrong with that.
[05:33] iszak: on a shared server sure, but it's not.
[05:33] Utkarsh_ has joined the channel
[05:33] wkmanire: At least the README aughta give you isntructions. Create this group, give it permissions to this folder etc....
[05:33] CIA-99: node: 03Daniel Ennis 07master * r52f9318 10/ (5 files in 5 dirs): (log message trimmed)
[05:33] CIA-99: node: Adding support for require-like initialization of node,
[05:33] CIA-99: node: so `node foo`
[05:33] isaacs: iszak: programs you run can change your /etc/hosts to point paypal.com to a phishing site.
[05:33] wkmanire: instruction*
[05:33] isaacs: without prompting your  for a password, ever
[05:34] iszak: isaacs, yes I understand the implications.
[05:34] iszak: but bad permissions could do that same.
[05:34] isaacs: iszak: not bad permissions on /usr/local
[05:34] iszak: I chowned it, dw.
[05:34] isaacs: iszak: /System and /etc and /usr/bin and /usr/lib are all root-owned on my machine for that reason
[05:35] iszak: anyhow, any chance npm will list what node.js version it's compatible with?
[05:35] brapse: mynyml: get sc2 and play with me and cloudhead.
[05:35] ashb has joined the channel
[05:35] isaacs: iszak: it does
[05:35] iszak: @version ?
[05:35] iszak: or does it automatically filter out incompatible ones?
[05:35] isaacs: iszak: engines
[05:36] isaacs: yeah
[05:36] iszak: oh right, got it.
[05:36] iszak: anyway to over ride it?
[05:36] isaacs: iszak: um... no?
[05:36] isaacs: iszak: what are you trying to do?
[05:36] iszak: Can you add an option for it?
[05:36] isaacs: the engines filter is there because it doesn't work on other versions of node.
[05:37] gkatsev has joined the channel
[05:37] iszak: Yes I understand that.
[05:37] isaacs: iszak: so.. what are you trying to do?
[05:37] iszak: But I would like to be able to get a specific version
[05:37] isaacs: even if you're using a version of node that doens't support it?
[05:37] iszak: and how fine grain is the filter is it based on the major, minor or mini?
[05:37] isaacs: *that it doesn't support
[05:37] iszak: isaacs, correct.
[05:38] ryah_: here's a question. how do we do strict mode in node?
[05:38] isaacs: iszak: ok, that's a bad idea.
[05:38] isaacs: ryah_: we don't?
[05:38] isaacs: is it better somehow?
[05:38] aki_ has joined the channel
[05:38] iszak: isaacs, I know I understand the implications, but I would still like a feature like that.
[05:38] isaacs: ryah_: if you do "use strict"; in a module, won't it put that module into strict mode?  becuase it's in a closure already?
[05:38] ryah_: isaacs: the initial version just landed in V8 v3.0.10 
[05:38] isaacs: ok
[05:38] Aikar: isaacs: i usually dont run bad programs :p
[05:38] ryah_: isaacs: i think you need "use strict" as the first line
[05:38] Aikar: so program isnt gonna modify my hosts!
[05:39] isaacs: Aikar: there are also accidents that can be made.
[05:39] isaacs: one time i mv'ed / into my home directory
[05:39] isaacs: as root
[05:39] isaacs: that was fun
[05:39] Aikar: lol
[05:39] iszak: isaacs, lets say there's a module I want to use - but it's not compatible with my version, I may want to port it to my version.
[05:39] Aikar: i noticed rm -rf actually blocks / by default
[05:39] iszak: but currently I have no means to find it via npm.
[05:39] isaacs: iszak: ok, download the code, edit the package.json, fix the bugs, and send a pull req to the author
[05:39] shiawuen: sudo rm -rf / ?
[05:40] Aikar: ryah_: lol node . also works for finding index.js in current dir
[05:40] Cygwin4node has joined the channel
[05:40] iszak: isaacs, but it'd be so much easier in npm, it may also work in later versions BUT it hasn't been tested.
[05:40] Cygwin4node: Hi All 
[05:40] iszak: I mean how hard would it be to add an option like -v 0.2.*
[05:40] ryah_: Cygwin4node: hi
[05:40] isaacs: iszak: it's not that it'd be hard, it's that it's silly
[05:40] isaacs: the package author says "this doesn't work in earlier versions"
[05:40] isaacs: if you're going to make it wokr, you probbaly want the code itself anyay
[05:41] isaacs: so you may as well just git clone it or whatever.
[05:41] iszak: isaacs, so add a warning, but it shouldn't be restricted "because you say so"
[05:41] Cygwin4node: Rya I hope all the well , I need some help installing node in cygin ... 
[05:41] isaacs: iszak: removing that filtering would make things tricky in the dependency resolution dance
[05:41] iszak: not to remove it
[05:41] ryah_: okay people: http://2.bp.blogspot.com/_1KnyCCObihA/TTolXBfhfPI/AAAAAAAAAAM/2WKIapMeyok/s1600/GSOC_2011_300x200px_URL.png
[05:41] Cygwin4node: err#2 libv8.a
[05:41] iszak: isaacs, still have the filter on by default, but allow to override it.
[05:42] iszak: so most people (unless they specifically look for it) will only get versions compatible with their node.js version.
[05:42] mynyml: brapse: sc2?
[05:43] isaacs: iszak: so, would you have it specify the effective node version (to be used instead of process.version), or a flag to turn off version checking altogether
[05:43] isaacs: ?
[05:44] isaacs: ryah_: when is node going to have that 0.3.10 version of v8 with the use strict?
[05:44] isaacs: er, 3.0.10
[05:44] jakehow has joined the channel
[05:44] wkmanire has joined the channel
[05:44] wkmanire: wow, that was strange.
[05:44] Cygwin4node: I have tried the export SHELL= ... and ai m still getting the same error, how do I proceed from here 
[05:44] Aikar: he just pushed 3.0.10 into node
[05:44] tilgovi has joined the channel
[05:44] Aikar: like an hour ago
[05:44] isaacs: oic
[05:45] wkmanire: screen just flipped out and left garbage all over my display. I killed it, but irssi was still updating in the region I had it in. keyboard was completely unresponsive.
[05:45] isaacs: Cygwin4node: have you gone thorugh the cygwin instructions?
[05:45] iszak: isaacs, well both would be ideal BUT you could in theory make it so your could do -v * which wouldn't restrict the version.
[05:45] ryah_: isaacs: 
[05:45] ryah_: ./node -e process.versions.v8
[05:45] ryah_: 3.0.10
[05:45] Cygwin4node: am I in the right place to ask those questions? Sorry cause I am new to all this :)
[05:45] ryah_: Cygwin4node: yes
[05:45] iszak: ryah_, how'd you manage that? D:
[05:46] Cygwin4node: yes I did 
[05:46] benburkert has joined the channel
[05:46] Cygwin4node: thanks for helping :) 
[05:46] ryah_: Cygwin4node: which version are you trying to compile
[05:47] isaacs: Cygwin4node: can you post teh full output of the error message that youer' seeing on http://gist.github.com or http://pastie.org and then paste the link here?
[05:47] ryah_: Cygwin4node: hint - v0.2.6 is the only one that works :)
[05:47] Cygwin4node: the latest stable 
[05:47] mscdex: ACTION is delving back into the oscar protocol
[05:47] isaacs: copy and paste, so we can see it.
[05:47] Cygwin4node: ok 
[05:47] mscdex: i forgot how much i disliked this protocol until now
[05:47] isaacs: Cygwin4node: there are a few cases where python gets broken adn the build process fails all over the place.
[05:47] mscdex: :)
[05:47] iszak: isaacs, so what do you think of the idea?
[05:48] Bosmon: 0.3.1 works too
[05:48] piscisaureu_ has joined the channel
[05:48] isaacs: iszak: well, specifying a version of node to pretend to be certainly will not take a range.
[05:48] mscdex: i think all i have left to do is chat and file transfer...
[05:48] isaacs: it'll have to be a specific version
[05:48] isaacs: because it's comparing to ranges, and i'm not gonna change how that works.  too fundamental and painful to touch.
[05:48] iszak: isaacs, would about simply "0.2" as opposed to "0.2.6" or w/e?
[05:49] isaacs: iszak: "0.2" is a range.
[05:49] iszak: can't you make it work for a range?
[05:49] isaacs: iszak: it's "<=0.2.0 <0.3.0"
[05:49] mscdex: it's ridiculous how convoluted AOL made their chat and file transfer mechanisms
[05:49] iszak: isaacs, yes I know, but surely you can make it work with a range?
[05:49] tmzt: mscdex: fdofiles
[05:49] isaacs: iszak: think about it.  does "0.2" satisfy ">=0.2.1 <0.2.5 || 0.2.4-10"?
[05:49] mscdex: tmzt: eh?
[05:49] isaacs: iszak: a version either satisfies a range, or doesn't.
[05:50] tmzt: how far back on aol?
[05:50] Cygwin4node: so i repeat the steps with 0.2.6 ? how to I remove the previous version with git 
[05:50] Cygwin4node: ?
[05:50] iszak: isaacs, I understand what a range is, but I'm talking about implementing it.
[05:50] mscdex: tmzt: i'm referring to AIM/ICQ
[05:50] tmzt: ah, oscar then
[05:50] mscdex: yes
[05:50] mscdex: their binary protocol
[05:50] tmzt: they support xmpp now though
[05:50] isaacs: iszak: what i'm saying is, foo says that it works on node ">=0.2.1 <0.2.5 || 0.2.4-10".  You do --node-version=0.2
[05:50] isaacs: iszak: so should i let you install it, or not?
[05:50] iszak: OH right.
[05:51] mscdex: tmzt: i read they disabled xmpp support some time back
[05:51] piscisaureu_ has joined the channel
[05:51] Aikar: i wish github would fix their markdown implementation on readme files
[05:51] tmzt: oh, too bad
[05:51] isaacs: iszak: you'd have to supply a single exact version of node to pretend to be
[05:51] iszak: isaacs, yes you should because it satisfies the 0.2 major version.
[05:51] isaacs: iszak: orly?
[05:51] mscdex: it didn't last long is all i know
[05:51] tilgovi: woohoo. I have a simple, stupid paxos-kinda thing with mad continuation passing
[05:51] tilgovi: gonna see if I can strap it onto dnode
[05:51] isaacs: iszak: what if it's "0.2" comparing with "0.2.5 || 0.3.1"?
[05:51] Aikar: is html supported as readme.html to auto display on project?
[05:51] iszak: isaacs, I don't understand?
[05:51] isaacs: iszak: what if it's "0.2.1 - 0.2.5" comparing against "0.2"?
[05:52] tmzt: using python to install a js runtime
[05:52] SubStack: woot, continuations
[05:52] tmzt: waf is cool though
[05:52] isaacs: iszak: is it testing for *any* overlap?  or enough overlap?  or one being contained in the other?
[05:52] isaacs: iszak: the logic for comparing one range to another is not implemented.
[05:52] Aikar: tmzt: yeah when i started at this new job and was getting coworker with root to get node setup
[05:52] iszak: isaacs, yes I know.
[05:52] tmzt: Aikar: I think html is detected in markdown
[05:52] tmzt: maybe just try it
[05:52] Aikar: he was like 'wait, need to install python to compile C++ code to run js code?'
[05:52] isaacs: iszak: you'd specify a specific version of node, or a flag to disable engines comparison, or leave it as-is.
[05:52] Cygwin4node: here is a link to the error i am getting http://pastie.org/1495150
[05:53] isaacs: iszak: the third option is pretty easy :0
[05:53] isaacs: (for me)
[05:53] iszak: I don't understand why you can't specify a range.
[05:53] isaacs: the other two are fairly easy.  but i'm sort of less scared of the first one.
[05:53] isaacs: iszak: because it's compared against a range.
[05:54] Bosmon: Cygwin4node: That looks like the error you would get from a recent version of node
[05:54] iszak: I still don't understand.
[05:54] isaacs: iszak: npm install foo --node-version=">0.2.4 <0.2.7-2"
[05:54] Bosmon: Are you sure you did your checkout correctly?
[05:54] Bosmon: You can try versions 0.2.6 or 0.3.1, both of those work
[05:54] Cygwin4node: I think , 
[05:54] Cygwin4node: what is the correct way of doing the checkout ?
[05:54] Aikar: welp night guys, thanks ryah_ i gotta stop staying up till 1am on worknights ><
[05:54] iszak: isaacs, and why is that a problem?
[05:55] iszak: god I'm so confused.
[05:55] isaacs: iszak: foo has {engines:{"node":"0.2.0 || 0.2.4 || <0.3.6 >0.2.6"}}
[05:55] iszak: oh I see
[05:55] isaacs: iszak: ranges don't satisfy ranges.
[05:55] isaacs: versions satisfy ranges
[05:55] iszak: No I don't understand, let me use npm some more and get back to you.
[05:55] saikat has joined the channel
[05:55] isaacs: Yes, of course, you could easily consider a range as a section of version-space, and then see if the two sections of version-space have any overlap
[05:55] Bosmon: Cygwin4node: "git checkout v0.3.1"
[05:55] isaacs: since it's just a vectro
[05:55] isaacs: *vector
[05:56] isaacs: the problem there becomes that you might install two things that could never be installed together, and it'll never work.
[05:56] Cygwin4node: ok will try that can i do it without removeing the previous version? if i have to remove it how do it do that ? thanks :) 
[05:57] Cygwin4node: i have v0.3.6
[05:57] Bosmon: Cygwin4node - type that from the git working copy directory, it will just fix it up in place
[05:57] iszak: isaacs, I'm not talking about specify a version range in the package.json, you know that right?
[05:57] Cygwin4node: ok trying 
[05:57] isaacs: Cygwin4node: rebaseall
[05:57] Bosmon: Presumably you checkout out node using git
[05:57] Bosmon: isaacs: he has the *other* problem :p
[05:57] isaacs: orly?
[05:57] ezmobius has joined the channel
[05:58] isaacs: Bosmon: looks like python is complainging about "os"
[05:58] Bosmon: isaacs: This is the fault that came in with the v8 tree in node 0.3.2 on cygwin
[05:58] isaacs: ah, i see
[05:59] isaacs: Cygwin4node: don't worry about removing the exisitng version.  you'll just install over it.
[05:59] isaacs: it's fine
[05:59] Cygwin4node: virus found! 
[05:59] isaacs: Cygwin4node: whu?
[05:59] isaacs: is node a virus now?
[05:59] charliesome has joined the channel
[05:59] Cygwin4node: node\test\pummel\test-net-throttle.js   
[05:59] iszak: Cygwin4node, do you have norton? lol
[05:59] ChrisPartridge: ACTION laughs
[06:00] Bosmon: hahaha
[06:00] Cygwin4node: norton nooooo 
[06:00] Cygwin4node: avg FREE 
[06:00] aki_: Hey all, Im trying to setup nodejs with Cygwin on Win7 64bit but I cant make Cygwin to install gcc-g++ The error says: gcc-g++.sh exit code 126 same for the core package. Any ide why this happens?
[06:00] Bosmon: u can't hack :P
[06:00] admc has joined the channel
[06:00] charliesome: i came in here with issues building node on cygwin but looking at all these issues others are having i'm wondering if i shouldn't just use a linux vm :\
[06:00] Bosmon: aki_ now *that* sounds like the rebaseall problem :)
[06:01] iszak: I would just use a linux VM personally.
[06:01] Cygwin4node: exploit script , this is what it is waying
[06:01] Cygwin4node: saying 
[06:01] zzak: iszak++
[06:01] v8bot:  zzak has given a beer to iszak. iszak now has 2 beers.
[06:01] charliesome: I've got the "Build failed: -> task failed (err #2): {task: libv8.a SConstruct -> libv8.a}" problem, and it keeps happening even after setting my $SHELL to /bin/bash
[06:01] Bosmon: charliesome: It's not *that* bad :P
[06:01] iszak: when did I get a beer last time? my god I must've been drunk.
[06:01] Bosmon: charliesome: You need to go back to node 0.3.1 or earlier
[06:02] ChrisPartridge: iszak: stop hogging all the beers!
[06:02] iszak: Cygwin4node, what version of node are you using?
[06:02] aki_: Thanks Bosmon, any suggestions how to fix it?
[06:02] charliesome: Bosmon, does node 0.3.1 support multipart.js?
[06:02] iszak: ChrisPartridge, I try not to.
[06:03] Bosmon: oh wow... all of github is gone :P
[06:03] Cygwin4node: iszak: v0.3.1
[06:03] void_ has joined the channel
[06:03] iszak: Cygwin4node, what version of windows?
[06:03] Cygwin4node: win7 
[06:03] charliesome: Bosmon, I swear they go down every second day
[06:03] Cygwin4node: 32bit
[06:03] iszak: Cygwin4node, right well I've definitely install Node.js (0.3.something) on Windows 7 64-bit
[06:03] zzak: scheduled maintenance
[06:04] Bosmon: I've successfully built 0.3.1 on Win7 64-bit and XP
[06:04] iszak: Cygwin4node, what's the error?
[06:04] Bosmon: 0.3.2 and later fail on all versions
[06:04] torgeir_ has joined the channel
[06:06] abraham has joined the channel
[06:06] haxorjim has joined the channel
[06:07] maru_cc_ has joined the channel
[06:07] brainproxy: GitHub go bye bye :/
[06:07] formido has joined the channel
[06:08] Lorentz: Perfect excuse to not work!
[06:08] yx has joined the channel
[06:08] Coal has joined the channel
[06:08] Cygwin4node: I did make clean ... make ; Still getting same error 
[06:09] Cygwin4node: iszak: error here http://pastie.org/1495150
[06:11] zzak: Cygwin4node: http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/17887
[06:11] charliesome: github come back :(
[06:12] Fuld: Use code.google.com
[06:12] zzak: haha
[06:12] Fuld: Use http://www.github.com/images/error/angry_unicorn.png
[06:13] Cygwin4node: zzak: thanks :)  I think I will stick with my linux box for now 
[06:13] Fuld: Twitter says: Scheduled maintenance for github.com tonight at 22:00 PST - Site and Git may be unavailable during 20 minute window 
[06:13] Cygwin4node: I will use node on windows when it is ready ... or when i have time to look more into the python code 
[06:14] tilgovi: nice thing about downtime with github is you can still branch ;)
[06:14] andrzejsliwa has joined the channel
[06:14] zzak: Cygwin4node++
[06:14] v8bot:  zzak has given a beer to Cygwin4node. Cygwin4node now has 1 beers.
[06:14] tilgovi: I almost take that for granted.
[06:14] Cygwin4node: thank you guys for your help ... Do you think there is somthing else i can try with cygwin before giving up on it for now ?
[06:14] zzak: ruby ;)
[06:14] Cygwin4node: zzak ;) thanks :P
[06:15] iszak: Cygwin4node, try the stable version of node, then the latest 0.3.6 then check in cygwin if there's a newer version of python / you installed the right python.
[06:15] charliesome: charliesome++
[06:15] v8bot: charliesome: Don't cheat!  You can't give a beer to yourself.
[06:16] Cygwin4node: iszak++
[06:16] v8bot:  Cygwin4node has given a beer to iszak. iszak now has 3 beers.
[06:16] charliesome: v8bot++
[06:16] v8bot:  charliesome has given a beer to v8bot. v8bot now has 13 beers.
[06:16] charliesome: v8bot--
[06:16] v8bot:  v8bot is getting too many beers.  Don't let v8bot get drunk!
[06:16] joelklabo has joined the channel
[06:17] zzak: v8 for(i=0; i>10; i++){console.log("zzak++")}
[06:17] v8bot: zzak: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[06:17] zzak: :/
[06:17] Cygwin4node: for(i=0;i<1000;i++){hahahaha you were faster i am still writing it } 
[06:18] iszak: enoughu with the beers or we're all going to get drunk!
[06:18] jesusabdullah: whoaa nelly!
[06:19] Cygwin4node: v8: console.log("testing");
[06:19] v8bot: Cygwin4node: CONSOLE: ["testing"], OUTPUT: undefined
[06:19] Cygwin4node: cool I love that 
[06:19] ryah_:  /names
[06:19] Aikar: github down? cant push
[06:19] zzak: lol
[06:19] Aikar: says no supported auth methods
[06:20] jesusabdullah: > function Dave() { return 'THE BEST '+Dave(); }
[06:20] zzak: Cygwin4node: see, no need to worry about windows woes. just PM the v8bot for endless fun
[06:20] Cygwin4node: lol 
[06:20] ipmb has joined the channel
[06:21] mscdex: Aikar: github is down
[06:21] Cygwin4node: guys maybe you have answered this before many time. What's the best mysql library for node?
[06:21] mscdex: Cygwin4node: node-mysql for async
[06:21] Aikar: bleh, ill push in morning, night all
[06:21] jesusabdullah: Gnight
[06:21] Cygwin4node: mscdex: thanks 
[06:21] mscdex: github is only supposed to be down for 20 minutes
[06:21] mscdex: heh
[06:22] Cygwin4node: does v8 code in here support events ?
[06:22] echosystm: has anyone used node-sqlite?
[06:22] ipmb: Hi, I'm just learning node and trying to setup a proxy with node-http-proxy. How would I read the response the remote server tries to send back to the client?
[06:22] mscdex: Cygwin4node: the v8bot in here is strictly v8 with a couple exceptions
[06:22] jesusabdullah: Not directly, but pkrumins has done a lot of hacking on it. Why?
[06:22] mscdex: oh
[06:22] mscdex: :S
[06:23] Cygwin4node: can I write something to look for a string when a chat post is received  ?
[06:24] Guest31915: v8: "\r\nhi"
[06:24] v8bot: Guest31915: "\r\nhi"
[06:25] keks has joined the channel
[06:26] herbySk has joined the channel
[06:27] Cygwin4node: v8: testvar=0
[06:27] v8bot: Cygwin4node: 0
[06:28] Cygwin4node: v8: testvar = testvar + 4;
[06:28] v8bot: Cygwin4node: ReferenceError: testvar is not defined
[06:29] keks: short term memory...
[06:29] Cygwin4node: v8: testvar=function() {console.log("testvar was called")}
[06:29] v8bot: Cygwin4node: function () {console.log("testvar was called")}
[06:29] Cygwin4node: testvar()
[06:29] Cygwin4node: v8:testvar();
[06:29] v8bot: Cygwin4node: ReferenceError: testvar is not defined
[06:29] Cygwin4node: yep 
[06:30] shiawuen: v8: require
[06:30] v8bot: shiawuen: ReferenceError: require is not defined
[06:30] Cygwin4node: so we can not create global variable in here ?
[06:30] Aria: Nope.
[06:30] shiawuen: oh…not node
[06:30] Aria: Right.
[06:31] shiawuen: v8: this
[06:31] v8bot: shiawuen: {}
[06:32] tmzt: v8bot: global
[06:32] v8bot: tmzt: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[06:32] tmzt: v8bot: v8: global
[06:32] v8bot: tmzt: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[06:32] Cygwin4node: so in node if i want to count the number of connection ... I just create a global var outside and just increment it on every connection ... 
[06:32] shiawuen: v8: this.prototype
[06:32] v8bot: shiawuen: undefined
[06:33] shaver: v8: this
[06:33] v8bot: shaver: {}
[06:33] tmzt: no love irrsi
[06:33] Cygwin4node: `v commands
[06:33] v8bot: Cygwin4node: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[06:33] tmzt: v8: global
[06:33] v8bot: tmzt: ReferenceError: global is not defined
[06:33] Bosmon: v8: this.__proto__
[06:33] Cygwin4node: beers
[06:33] v8bot: Bosmon: {}
[06:33] tmzt: hah /msg works
[06:33] Cygwin4node: v8:beers
[06:33] v8bot: Cygwin4node: ReferenceError: beers is not defined
[06:34] Cygwin4node: `v beers
[06:34] v8bot: Cygwin4node:  has 0 beers.
[06:34] Bosmon: v8: this.__proto__.__proto__
[06:34] v8bot: Bosmon: {}
[06:34] Bosmon: hm :P
[06:34] tmzt: v8: this.name
[06:34] v8bot: tmzt: undefined
[06:34] Guest31915: v8: JSON.stringify(this.__proto__.__proto__)
[06:34] v8bot: Guest31915: "{}"
[06:35] Bosmon: Circularly linked......
[06:35] tmzt: v8: arguments
[06:35] v8bot: tmzt: ReferenceError: arguments is not defined
[06:35] shiawuen: mission hacking v8bot
[06:35] Cygwin4node: v8: this.newname="myname"
[06:35] v8bot: Cygwin4node: "myname"
[06:35] tmzt: so what is this an eval context?
[06:35] Cygwin4node: this
[06:35] tmzt: v8: this.newname
[06:35] v8bot: tmzt: undefined
[06:35] Cygwin4node: v8:this
[06:35] v8bot: Cygwin4node: {}
[06:36] Bosmon: v8: this.constructor
[06:36] v8bot: Bosmon: function Object() { [native code] }
[06:36] Bosmon: ha!!
[06:36] tmzt: v8: this.newname = "myname"; this.newname
[06:36] v8bot: tmzt: "myname"
[06:37] shiawuen: v8: this.constructor.prototype
[06:37] v8bot: shiawuen: {}
[06:37] tmzt: v8: this.newname = "myname"; this.newname; this
[06:37] v8bot: tmzt: {}
[06:37] Cygwin4node: v8:this.parent
[06:37] v8bot: Cygwin4node: undefined
[06:37] Cygwin4node: v8:this.parentNode
[06:37] v8bot: Cygwin4node: undefined
[06:37] tmzt: v8: this.newname = "myname"; this.newname; this.getOwnProperties()
[06:37] v8bot: tmzt: TypeError: Object #<an Object> has no method 'getOwnProperties'
[06:38] Bosmon: v8: var i = 0; i++ + ++i;
[06:38] v8bot: Bosmon: 2
[06:38] zzak: v8: undefined = false;
[06:38] v8bot: zzak: false
[06:38] zzak: v8: undefined = true;
[06:38] v8bot: zzak: true
[06:38] tmzt: v8: console
[06:38] v8bot: tmzt: {"output": [], "log": function (){ Array.prototype.push.apply(sandbox.console.output, Array.prototype.slice.call(arguments, 0)) }}
[06:38] Bosmon: v8: var i = 0; i+++++i;
[06:38] v8bot: Bosmon: SyntaxError: Unexpected token ++
[06:39] tmzt: weird
[06:39] Bosmon: You made it mad
[06:39] tmzt: that should be a post then a pre
[06:40] tmzt: v8: this.__prototype__ = console.log; this.log
[06:40] v8bot: tmzt: undefined
[06:40] tmzt: v8: this.__proto__.log = console.log; this.log
[06:40] v8bot: tmzt: function (){ Array.prototype.push.apply(sandbox.console.output, Array.prototype.slice.call(arguments, 0)) }
[06:40] tmzt: v8: this.__proto__.log = console.log; this.log('test')
[06:40] v8bot: tmzt: CONSOLE: ["test"], OUTPUT: undefined
[06:41] tmzt: v8: console
[06:41] v8bot: tmzt: {"output": [], "log": function (){ Array.prototype.push.apply(sandbox.console.output, Array.prototype.slice.call(arguments, 0)) }}
[06:41] wkmanire has joined the channel
[06:41] tmzt: anyway
[06:41] wkmanire: Should crypto.Hmac be undefined?
[06:41] tmzt: so its a new Object()
[06:42] zomgbie has joined the channel
[06:45] wkmanire has left the channel
[06:46] iszak: Cygwin4node, solved the problem?
[06:49] OndpuO has joined the channel
[06:49] jimt has joined the channel
[06:49] yozgrahame has joined the channel
[06:54] tomhsx has joined the channel
[06:54] jimt has joined the channel
[06:55] dgathright has joined the channel
[06:55] eSumit has joined the channel
[06:55] eSumit: Guys 
[06:55] eSumit: I am a newbie in Node.Js
[06:55] Bosmon: Welcome :)
[06:56] eSumit: By Using this Node.Js Library - I need to write one Http Proxy Server
[06:56] eSumit: Is there any tutorial -- which can provide kind of jump start ?
[06:56] tk has joined the channel
[06:58] Aria: A trivial HTTP proxy is what, 8 lines?
[06:58] Aria: Though there's of course plenty of gotchas in the protocol.
[06:59] eSumit: Its a kind -- receive Http request -- perform some checks -- and forward those to other Http Server
[06:59] jimt_ has joined the channel
[06:59] ph^ has joined the channel
[07:00] tc77 has joined the channel
[07:01] mlins has joined the channel
[07:01] cwo has joined the channel
[07:01] Aria: That's one kind. Though you have to have ram or disk to buffer if you're going to receive it all before sending on.
[07:01] eSumit: Yes
[07:04] eSumit: Its a kind of Proxy - Http - Relay
[07:05] Cygwin4node: iszak, No I was having dinner 
[07:05] Cygwin4node: :) 
[07:06] eSumit: It would be running on a device, which will recevie Http Request from a External Browser, It does some buisness logic on received Http Request and then forward it to another Device (e.g; Andriod Mobile)
[07:06] Bosmon: Node.js is so great - it will allow you to eat 5 dinners with only 1 mouth
[07:06] Bosmon: All through the magic of ASSYNCCHROWNY
[07:06] Cygwin4node: lol 
[07:08] Cygwin4node: v8: document
[07:08] v8bot: Cygwin4node: ReferenceError: document is not defined
[07:08] Cygwin4node: v8: obj
[07:08] v8bot: Cygwin4node: ReferenceError: obj is not defined
[07:08] Cygwin4node: v8:function
[07:08] v8bot: Cygwin4node: SyntaxError: Unexpected end of input
[07:09] Cygwin4node: v8:new
[07:09] v8bot: Cygwin4node: SyntaxError: Unexpected end of input
[07:09] whyme: Cygwin4node: do't you have a node reply to play with?
[07:09] eSumit: Why  only 5 dinners ?
[07:10] eSumit: not 55 ?
[07:10] Cygwin4node: whyme 
[07:10] Cygwin4node: I do , testing within this chat sandbox for my object  
[07:11] whyme: well you can dig the source here: https://github.com/eisd/v8bot
[07:11] evl has joined the channel
[07:12] tilgovi: is there a reason to prefer "function MyClass()" to "var MyClass = function()" or vice versa?
[07:12] ipmb: how could I read the server response object here before/when it gets returned to the client? https://github.com/nodejitsu/node-http-proxy/blob/master/demo.js#L83-89
[07:12] shiawuen: one get hoisted to top, one dont
[07:13] jdalton has joined the channel
[07:13] jdalton has left the channel
[07:13] tilgovi: shiawuen: ah. righto.
[07:13] Cygwin4node: v8: setTimeout(function(){console.log("done")},10000);
[07:13] v8bot: Cygwin4node: ReferenceError: setTimeout is not defined
[07:13] whyme: v8: function Foo(){}; Foo.name
[07:13] v8bot: whyme: "Foo"
[07:13] shiawuen: v8bot++--
[07:14] whyme: v8: var Foo = function(){}; Foo.name
[07:14] v8bot: whyme: ""
[07:14] tmzt: hmm
[07:14] ipmb: I've tried listening to "end" but it doesn't seem like it ever fires
[07:14] tmzt: is that right?
[07:14] Cygwin4node: whyme: do't you have a node reply to play with?   ;) lol
[07:15] mape: /ignore -regexp -pattern "v8:" * MSG
[07:15] SwiftLayer has joined the channel
[07:15] keks: v8: "v8:"
[07:15] v8bot: keks: "v8:"
[07:15] keks: ah, damn
[07:15] whyme: Cygwin4node: I'm showing tilgovi the difference of named and anonymous function :)
[07:16] asimismo has joined the channel
[07:16] tmzt: v8: function() this
[07:16] v8bot: tmzt: SyntaxError: Unexpected token (
[07:16] tmzt: v8: (function() this)
[07:16] v8bot: tmzt: SyntaxError: Unexpected token this
[07:16] tilgovi: whyme: that's a handy difference, too.
[07:16] tmzt: have to have a body
[07:18] deepthawtz has joined the channel
[07:20] mikeal has joined the channel
[07:21] mikedeboer has joined the channel
[07:22] shiawuen has left the channel
[07:22] shiawuen has joined the channel
[07:22] hij1nx has joined the channel
[07:22] m64253 has joined the channel
[07:23] nejucomo has joined the channel
[07:27] felixge has joined the channel
[07:27] felixge has joined the channel
[07:27] torgeir has joined the channel
[07:28] warz has joined the channel
[07:29] qFox has joined the channel
[07:31] keks has joined the channel
[07:31] kiddphunk has joined the channel
[07:32] ChrisPartridge has joined the channel
[07:33] masahiroh has joined the channel
[07:38] benburkert has joined the channel
[07:38] mikeal has joined the channel
[07:39] adambeynon has joined the channel
[07:43] zentoooo has joined the channel
[07:46] shiawuen has left the channel
[07:47] shiawuen has joined the channel
[07:49] zomgbie has joined the channel
[07:49] muhqu has joined the channel
[07:54] evl has joined the channel
[07:54] evl has joined the channel
[07:56] jimt has joined the channel
[07:57] ph^ has joined the channel
[07:58] pengo has joined the channel
[07:59] matjas has joined the channel
[08:01] ivanfi has joined the channel
[08:01] jimt_ has joined the channel
[08:02] luke` has joined the channel
[08:03] sriley has joined the channel
[08:05] mirkok_ has joined the channel
[08:06] mirkok_ has joined the channel
[08:06] mirkok has joined the channel
[08:06] SamuraiJack has joined the channel
[08:07] mirkok has joined the channel
[08:07] mirkok has joined the channel
[08:07] lumino has joined the channel
[08:09] jdalton has joined the channel
[08:09] jdalton has left the channel
[08:09] mraleph has joined the channel
[08:09] mAritz has joined the channel
[08:11] brianmario has joined the channel
[08:13] shaunau has joined the channel
[08:13] fangel has joined the channel
[08:16] Jonasbn_ has joined the channel
[08:18] adambeynon has joined the channel
[08:18] dguttman has joined the channel
[08:20] teemow has joined the channel
[08:21] Gruni has joined the channel
[08:23] jimt has joined the channel
[08:23] MrTopf has joined the channel
[08:23] peol has joined the channel
[08:23] peol has joined the channel
[08:26] mikedeboer has joined the channel
[08:26] Twelve-60 has joined the channel
[08:29] slash has joined the channel
[08:32] liar has joined the channel
[08:32] JimBastard has joined the channel
[08:33] skampler has joined the channel
[08:33] JimBastard: are any of the Feisty Studios guys around?
[08:33] JimBastard: *burp*
[08:33] JimBastard: good morning
[08:34] q_no has joined the channel
[08:36] jimt_ has joined the channel
[08:36] [AD]Turbo has joined the channel
[08:37] [AD]Turbo: hi there
[08:37] altamic has joined the channel
[08:37] MikhX has joined the channel
[08:38] herbySk has joined the channel
[08:41] Twelve-60` has joined the channel
[08:44] kubrow has joined the channel
[08:45] tanepiper: http://google-opensource.blogspot.com/2011/01/google-summer-of-code-announced-at-lca.html
[08:45] tanepiper: lets get some poor students to fix something :D
[08:45] Druid_ has joined the channel
[08:46] Lorentz: Hmm, didn't go to LCA this year
[08:46] jesusabdullah: Oh goodness
[08:46] tim_smart: Anyone know any decent cli IM clients?
[08:46] liar has joined the channel
[08:46] jesusabdullah: I was scrolled up and didn't know it
[08:46] tim_smart: finch is kinda average.
[08:46] jesusabdullah: was wondering why it was so quiet!
[08:47] Lorentz: If anyone here can go to LCA, go, well, next year anyway. It's worth it.
[08:48] jesusabdullah: LCA?
[08:49] Lorentz: Linux.conf.au
[08:49] jesusabdullah: ah
[08:49] jesusabdullah: That's really far away
[08:49] jesusabdullah: and I don't see myself moving much closer :/
[08:50] jesusabdullah: Might try Cali for a few years though
[08:51] tim_smart: aspell says wanderring is a spelling error
[08:51] tim_smart: Err wrong chat
[08:51] tim_smart: Man I'm good at irc
[08:51] jesusabdullah: Well
[08:51] jesusabdullah: it kinda is
[08:51] jesusabdullah: wandering
[08:51] jesusabdullah: silly goose
[08:52] tim_smart: jesusabdullah: Yeah someone tried to correct my correct spelling.
[08:53] DracoBlue has joined the channel
[08:53] jesusabdullah: tsk tsk
[08:53] jesusabdullah: Shame on them!
[08:53] jimt has joined the channel
[08:55] torgeir has joined the channel
[08:55] torgeir has left the channel
[08:56] romainhuet has joined the channel
[08:56] JimBastard: why is git telling me my remote is up to date, when i know its not
[08:56] JimBastard: w t f
[08:56] JimBastard: git log dont lie
[08:56] tim_smart: JimBastard: branches?
[08:57] ROBOd has joined the channel
[08:57] JimBastard: tim_smart: yeah i was not in a branch
[08:57] SubStack: JimBastard: you are up rather early or late!
[08:57] JimBastard: no matter how many times i push charlie it wasnt working
[08:57] JimBastard: working now
[08:57] JimBastard: lol SubStack  yeah
[08:57] JimBastard: i just broke most of our tests with one commit
[08:58] JimBastard: https://github.com/indexzero/resourcer/commit/c47d84414c0c00e696b61c5cd9f7b5abbeb0db71
[08:58] JimBastard: :-D
[08:58] tim_smart: Awesome. Too good.
[08:58] tim_smart: The tests were "OMFG TOO MUCH AWESOME"
[08:58] tim_smart: Then broke.
[08:58] JimBastard: we might have to release broodmother soon if these node host guys pick up any steam
[08:58] JimBastard: broodmother is OMFGTMA for sure
[08:59] SubStack: JimBastard is too good for tests
[08:59] JimBastard: SOA up the @$$
[08:59] JimBastard: i cant even count how many combined vows make up our stack
[08:59] JimBastard: it has to be thousands
[08:59] tim_smart: SubStack: But he is so good that he writes them.
[08:59] SubStack: instead we code to the JimBastard
[09:00] JimBastard: OBEY
[09:00] JimBastard: >.<
[09:00] JimBastard: it is late
[09:00] SubStack: I just had a double mocha earlier and a large americano
[09:00] SubStack: going to hack up a few libs tonight
[09:01] SubStack: like dnode-auth so I don't have to write this auth cookie stuff again
[09:01] JimBastard: here is a sad repo: https://github.com/Marak/JSONloops
[09:01] JimBastard: no low latency audio pipes for node yet
[09:01] SubStack: hahaha sweet
[09:02] SubStack: you can always write directly to /dev/sdp
[09:02] SubStack: *dsp
[09:02] JimBastard: i made sure to update kid and play today with the latest node apis
[09:02] JimBastard: important stuff
[09:02] SubStack: one time I wrote a perl script that plays mary had a little lamb using raw bytes
[09:02] SubStack: because that's just how I roll
[09:02] JimBastard: thats pretty leet
[09:02] eikke has joined the channel
[09:02] JimBastard: i should try that
[09:02] SubStack: one sec I'll dig it up
[09:02] tim_smart: I sing binary.
[09:02] JimBastard: I sing binary, in octal. 
[09:03] SubStack: http://www.perlmonks.org/?node_id=571140 
[09:03] zomgbie has joined the channel
[09:03] matjas has joined the channel
[09:04] tim_smart: JimBastard: Binary solo http://www.youtube.com/watch?v=WGoi1MSGu64
[09:04] JimBastard: tim_smart: is that you?
[09:04] JimBastard: :-D
[09:04] SubStack: JimBastard: perl -e'%c=map{[a..z]->[log($_)/log(2)*8-48],$_}map 2**($_/8),6*8..8*8; print((((chr)x($_/16)).("\x00"x(256-$_)/16))x128)for map{$c{$_},0}"jklkjjj0kkk0j0g0g00jklkjjjjkkjkl"=~/./g'>>/dev/dsp
[09:04] JimBastard: SubStack: ohh i was reading
[09:04] JimBastard: crazyness
[09:05] JimBastard: i get -bash: /dev/dsp: Permission denied 
[09:05] SubStack: man, a `beep` lib for node would rock
[09:05] JimBastard: but im on macos
[09:05] SubStack: :(
[09:05] stagas has joined the channel
[09:05] SubStack: sudo !! it
[09:05] JimBastard: i did
[09:06] JimBastard: twice to be sure
[09:06] JimBastard: should i restart my computer?
[09:06] JimBastard: brb
[09:06] aklt has joined the channel
[09:08] tim_smart: JimBastard: I don't think Mac has a /dev/dsp
[09:08] tim_smart: Ubuntu doesn't anyway...
[09:08] JimBastard: aye
[09:08] JimBastard: i dunno
[09:08] mscdex: i have /dev/dsp on ubuntu
[09:09] TurboAWAY has joined the channel
[09:09] mraleph has joined the channel
[09:09] tim_smart: mscdex: Are you using pulseaudio/alsa?
[09:09] mscdex: alsa
[09:09] tim_smart: Actually, my sound is kinda wierd. Had to do some strange stuff to get it to work.
[09:10] mscdex: tim_smart: btw, soon there will be a node cli im client!
[09:10] mscdex: :p
[09:10] tim_smart: mscdex: MSN, XMPP and AIM?
[09:10] tim_smart: :p
[09:11] tim_smart: You could do bindings to libpurple
[09:11] mscdex: well, at least AIM and ICQ soon
[09:11] mscdex: one protocol at a time ;-)
[09:11] mscdex: xmpp is already done by someone else
[09:11] DracoBlue has left the channel
[09:12] DracoBlue has joined the channel
[09:12] tim_smart: mscdex: Will it have vim bindings <3
[09:12] mscdex: i don't touch vim or emacs
[09:12] mscdex: heh
[09:13] tim_smart: Sad face.
[09:13] mscdex: too much of a traumatizing experience when i had to use them back in college
[09:13] mscdex: ;-)
[09:13] mscdex: give me nano/pico any day though
[09:14] stepheneb_ has joined the channel
[09:14] tim_smart: Hmm. Hopefully you don't do any heavy editting in those things.
[09:14] mscdex: for quick edits anyway
[09:14] mscdex: i do most of my editing with notepad++ or gedit, depending on the platform
[09:14] tim_smart: editing*
[09:14] tim_smart: OK. It seems e-texteditor is free for linux now (textmate clone)
[09:15] tim_smart: But textmate is like soooo last year.
[09:15] mscdex: i do as little as possible on the mac mini i use for testing
[09:15] CrazyGoogle_ has joined the channel
[09:15] tim_smart:  /girly voice
[09:15] mscdex: heh
[09:17] astoon has joined the channel
[09:17] yorick has joined the channel
[09:17] q_no has joined the channel
[09:17] nichdiekuh has joined the channel
[09:18] tim_smart: Hmm all these invoicing servers are all annoying me. There is like one thing missing on all of them that I need. Might be time to implement one in node.
[09:19] tim_smart: Not sure what node is like at generating PDF's.
[09:19] tim_smart: services*
[09:19] mscdex: i think there is at least one pdf module
[09:19] gattuso has joined the channel
[09:19] mscdex: not sure what the status is on it though
[09:20] nichdiekuh has joined the channel
[09:20] torgeir has joined the channel
[09:23] JimBastard: how do i access the string of a RegExp object without the / /
[09:23] JimBastard: like i have var x = new RegExp(/something/),test(value)
[09:23] mscdex: .source ?
[09:24] tim_smart: JimBastard: new RegExp takes only strings.
[09:24] mscdex: yeah
[09:24] JimBastard: i think that did it mscdex 
[09:24] tanepiper: tim_smart: count me in on helping with that (pdf stuff) - i need to be able to generate reports in our app
[09:24] JimBastard: thanks mysterious man!
[09:24] codetonowhere has joined the channel
[09:25] fly-away has joined the channel
[09:25] JimBastard: tanepiper: ive got some pdf js code wrapped up in a node api
[09:25] JimBastard: its pretty basic, but it kinda works
[09:25] tim_smart: tanepiper: I think piping to a command line tool might be the best option.
[09:25] JimBastard: there might be updates upstream too 
[09:25] tim_smart: JimBastard: I checked yours, good for simple stuff I guess.
[09:26] JimBastard: tim_smart: im not using it anywhere
[09:26] JimBastard: :p
[09:26] JimBastard: the browser version scares me
[09:26] teemow has joined the channel
[09:27] tanepiper: oh in browser :D
[09:27] Country has joined the channel
[09:27] tanepiper: crazy
[09:27] tim_smart: A lot of browser ecmascript scares me.
[09:27] virtuo has joined the channel
[09:28] JimBastard: i think i might be losing it. how do you coherse a string "true" into true
[09:28] tim_smart: Until strict mode is implemented in several browsers anyway..
[09:28] tim_smart: JimBastard: Kinda like eval?
[09:28] tim_smart: With JSON.parse maybe?
[09:28] JimBastard: i was hoping for something like Number()
[09:28] mscdex: s/eval/evil/ :p
[09:28] JimBastard: yeah
[09:28] JimBastard: == "true"
[09:28] JimBastard: WOOOO
[09:28] JimBastard: fuck it
[09:28] tanepiper: i'd like a nice wrapper than i can just pump json to, like { headers: ['foo', 'bar'], data: [ [ 'baz', 'moo' ], [ 'bing', 'bong'] ] } and it auto-tables it into a nice pdf
[09:29] JimBastard: yo mscdex , we should make a markov bot that takes in the top 20 node.js users
[09:29] JimBastard: and just call it "nodeadvicebot"
[09:29] JimBastard: mrnode
[09:31] nook has joined the channel
[09:34] kristsk has joined the channel
[09:34] gregotri has joined the channel
[09:34] gregotri: hello
[09:34] gregotri: i need help with node.js inside vmware+debian
[09:34] gregotri: it's not reachable from host
[09:35] mscdex: time to port tcpdf to js!
[09:35] mscdex: :p
[09:35] Lorentz: gregotri: Is it only node.js that's not visible, or is it the same for any other service you're running?
[09:37] gregotri: Lorentz: i can reach nginx server from host
[09:37] gregotri: on normal :80
[09:37] gregotri: i can also ssh to vmware machine
[09:37] Lorentz: Perhaps nginx is listening on all interfaces, while nodejs is set up to listen to just localhost?
[09:37] Utkarsh__ has joined the channel
[09:38] tanepiper: JimBastard: do it!  Every IRC channel needs a markov chain bot
[09:39] gregotri: I use example from http://nodejs.org/: .listen(8124, "127.0.0.1");
[09:39] gregotri: don't know about interfaces
[09:39] Lorentz: 127.0.0.1 part would mean it's listening to only localhost.
[09:39] Lorentz: Try removing it.
[09:39] jimt_ has joined the channel
[09:40] TomY has joined the channel
[09:41] admc has joined the channel
[09:41] tlrobinson: so who wants to add node support to my long stack traces implementation? https://github.com/tlrobinson/long-stack-traces
[09:41] zomgbie has joined the channel
[09:41] tlrobinson: it's kind of a big hack but it seems to work ok
[09:42] gregotri: Lorentz: what should i remove? >>> .listen(8124, "127.0.0.1");
[09:42] whyme: gregotri: remove "127.0.0.1"
[09:42] Lorentz: gregotri: Try just .listen(8124);
[09:44] gregotri: works :)
[09:45] gregotri: thanks
[09:45] Lorentz: No probs
[09:46] tlrobinson: ryah_: what ever happened to the long stack traces / EventSource stuff anyway?
[09:47] wvsu-tech has joined the channel
[09:47] wvsu-tech: hi everyone
[09:47] Lorentz: Hello
[09:48] wvsu-tech: wanna ask some question regarding my node installation
[09:48] wvsu-tech: im currently in the part where im executing the make command
[09:48] tlrobinson_ has joined the channel
[09:49] micheil: tlrobinson_: evenin'
[09:49] wvsu-tech: im having error like Build failed: ->task failed (err #2): bla bla..
[09:49] bpedro has joined the channel
[09:49] tlrobinson_: micheil: hey
[09:49] echosystm has joined the channel
[09:49] wvsu-tech: i've already tried the command export SHELL=/bin/bash
[09:49] micheil: wvsu-tech: please create a gist.github.com of the entire error message / build log, include the ./configure results
[09:49] glenngillen has joined the channel
[09:49] micheil: and what your platform is
[09:50] glenngillen has left the channel
[09:50] xla has joined the channel
[09:50] wvsu-tech: im installing node in windows platform
[09:50] bzinger has joined the channel
[09:52] tux21b has joined the channel
[09:52] pgte has joined the channel
[09:52] matjas has joined the channel
[09:52] [ADTurbo]: are there some examples/tutorials on how to write a node module, in order to communicate with a blocking (i.e. classic C socket server) server?
[09:53] echosystm: whats the best way to upgrade to a new build without borking npm ?
[09:53] echosystm: should i just... install it over the top? :/
[09:54] zemanel has joined the channel
[09:54] mscdex: [ADTurbo]: it shouldn't matter if the server is blocking or not, sockets in node are async
[09:54] shiawuen: echosystm: dont install /usr/local/lib ?
[09:55] echosystm: npm has hooked itself into the node bin folder here
[09:55] ttpva has joined the channel
[09:55] echosystm: not just lib
[09:55] [ADTurbo]: mscdex, ok but how can write an interace module for that C socket server?
[09:55] echosystm: actually, theres stuff everywhere from npm
[09:56] [ADTurbo]: database module (e.g. mongodb module) are really complicated, and I wanna just to know what are the practice for this kind of task
[09:56] mnbvasd: [ADTurbo]: if you look at the c source, it demonstrates how...
[09:56] mscdex: [ADTurbo]: i'm not sure what you mean. you are communicating with the C socket server through TCP right?
[09:56] [ADTurbo]: yes, the socket server is pure POSIX C, TCP
[09:56] w0rse has joined the channel
[09:57] mscdex: [ADTurbo]: then it's just a matter of using the built-in net module in node
[09:57] echosystm: [ADTurbo]: everything you need is here: http://nodejs.org/docs/v0.3.6/api/net.html
[09:58] echosystm: (assuming you are using 3.6)
[09:58] mnbvasd: echosystm: the 2.6 stuff is linked from the front page of the main site.
[09:58] [ADTurbo]: I was looking at db modules, they always use a sort of queue in order to optimize calls towards the db (blocking) server
[09:59] shaunau has joined the channel
[09:59] [ADTurbo]: and such modules use nodejs.net api
[09:59] sh1mmer has joined the channel
[09:59] mscdex: [ADTurbo]: which?
[09:59] mraleph has joined the channel
[09:59] [ADTurbo]: e.g. https://github.com/creationix/postgres-js/blob/master/lib/postgres-pure.js
[10:00] altamic has joined the channel
[10:01] mscdex: [ADTurbo]: the queue array used in that file is not what you think it is. it's just an array that's storing buffers until a complete message is made
[10:02] mscdex: unless you mean query_queue
[10:02] mytrile has joined the channel
[10:02] [ADTurbo]: i was referring to query_queue
[10:02] wvsu-dev has joined the channel
[10:03] JimBastard: it feels so wrong to return callback(null, {})
[10:03] JimBastard: or whatever
[10:03] JimBastard: makes people think that return goes somewhere
[10:03] JimBastard: i dont see a better way of doing it though without going to two lines
[10:04] JimBastard:             if(err){               return response.send(500, {'Content-Type': 'text/html'}, JSON.stringify(err));             } 
[10:04] SubStack: return! I hardly ever use that except for maps
[10:04] SubStack: async all the way
[10:04] wvsu-dev: HELP! HUhu..Im having trouble install node in Windows platform..
[10:04] mscdex: [ADTurbo]: i don't know, maybe it's either something specific to postgres or they don't want to run more than one query at a time
[10:05] mscdex: [ADTurbo]: but the remote site being blocking or non-blocking doesn't matter
[10:05] [ADTurbo]: ok thx
[10:05] wvsu-dev: make command returns Build failed: ->task failed (err #2) : {task: libv8.a SConstruct -> libv8.a}
[10:06] SubStack: wvsu-dev: some people have gotten node to build on cygwin, try that
[10:07] wvsu-dev: im currently doing that on cygwin
[10:07] stagas has joined the channel
[10:08] wvsu-dev: SubStack: im on the part where im trying to run the make command as stated in this page: https://github.com/ry/node/wiki/Building-node.js-on-Cygwin-%28Windows%29
[10:08] SubStack: ACTION doesn't have windows
[10:09] wvsu-dev: weee
[10:09] wvsu-dev: huhu
[10:09] wvsu-dev: has anyone knows how to solve this make command error?
[10:10] kubrow_ has joined the channel
[10:10] stagas: wvsu-dev: git checkout v0.3.1
[10:10] tanepiper: micheil: what's yer idea? :)
[10:10] MattJ has joined the channel
[10:11] wvsu-dev: stagas: tnx..I'll try that one..:D
[10:12] shaunau: wvsu-dev it tells you how to fix the error..
[10:12] shaunau: export SHELL=/bin/bash
[10:13] wvsu-dev: shaunau: i've already tried export SHELL=/bin/bash but the error still comes out
[10:13] kubrow has joined the channel
[10:14] shaunau: wvsu-dev: so, echo $SHELL displays the right path?
[10:15] jankoprowski has joined the channel
[10:15] tlrobinson_: why doesn't global === (function() { return this; })() ?
[10:15] wvsu-dev: shaunau: ummm...i've did't tried to echo $SHELL yet..
[10:16] shaunau: maybe try: make clean && ./configure && make
[10:16] AAA_awright_ has joined the channel
[10:17] wvsu-dev: im currently trying the suggestion of stagas to checkout v0.3.1 and i'm still not getting some error
[10:17] shaunau: wvsu-dev - prob better off installing linux :)
[10:17] wvsu-dev: i'm still waiting for the make process to complete
[10:17] shaunau: wvsu-dev: oh ok. cool. :)
[10:18] wvsu-dev: haha...I'm convenient in using windows platform..maybe another time..
[10:19] shaunau: regading the mail list and suggestiond for Community TLC - it would be nice if there was some binaries of nodejs for various platforms, precompiled with npm and some of the better frameworks.
[10:20] micheil: shaunau: not going to be offiicially sanctioned by core. 
[10:20] mnbvasd: shaunau: node 2.0 something is in debian testing.
[10:20] cognominal has joined the channel
[10:20] shaunau: so basically people wanting to try nodejs could just grab a "stable build" and build some nice demo apps. etc
[10:20] micheil: node hasn't even reached 1.0, btw.
[10:20] micheil: we're at 0.2 and 0.3 at the moment
[10:20] mnbvasd: well 0.2.0 something ;P
[10:21] mnbvasd: ACTION grumbles about crappy versioning ;)
[10:21] shaunau: micheil - yeah i know its very young still. just thinking it would be good to have an easy way to grab a build and mess about
[10:21] mnbvasd: why arn't they just numbered from the git hashes?
[10:21] mnbvasd: ;)
[10:22] shaunau: micheil - just thinking along the lines of  a tar of ~/local/nodejs or whatever..
[10:22] farhadi has joined the channel
[10:23] torvalamo has joined the channel
[10:23] micheil: every platform is different.
[10:23] forzan has joined the channel
[10:24] shaunau: its a pain in the arse to haev to install dev tools on os x just to get node installed
[10:24] torvalamo: don't they install by default?
[10:24] wvsu-dev: stagas: tnx for the suggestion...i've executed the make command successfully...best regards..:D
[10:25] stagas: wvsu-dev: :)
[10:25] markwubben has joined the channel
[10:25] shaunau: i ws thinking - an oxs-nodejs2.6_npm_connect_express_mongonative.tar, same for linux(ubuntu or whatever the cool kids are using these days)
[10:25] ChrisPartridge has joined the channel
[10:26] shaunau: one for cygwin. that would cover many of the common users
[10:29] matjas has joined the channel
[10:30] mnbvasd: I thinka cygwin one would be the most useful.
[10:31] shaunau: or just boycott windows altogether.. :D they can use virtualbox
[10:31] mnbvasd: I've never heard linux/osx users ahving issues.
[10:31] eric has joined the channel
[10:31] shaunau: mnbvasd: its not about issues. more just convenience and packaged stuff that you know is compatible.
[10:32] shaunau: eg) i wanted to use something but it was incompatible with 2.6 so i upped to 3.6.
[10:32] Guest6064: after installing node.js on windows using cygwin, whenever I connect the server with Google Chrome, net::ERR_CONNECTION_RESET message pops up, and node.js is crashed. What shall I do?
[10:32] shaunau: anyway.. just a suggestion.
[10:33] Lorentz: I think more than packaging it like that, it'll be better to clean up compiling/installation so package managers can get it at easily.
[10:33] Lorentz: There was a package maintainer here some time back, who was confused on what was going on with the installation process.
[10:33] farhadi has left the channel
[10:33] [ADTurbo]: I have to send (via TCP) two javascript numbers (the socket server expects 2 double); have I to create a buffer buf = new Buffer(16) (16 = 2 double) ?
[10:33] Lorentz: Or at least, the part on how to configure prefixes for lib32/64 properly, etc.
[10:34] shaunau: Lorentz: yeah possibly.. i'm just thinking of the new guy who's heard node is cool.. wants to take a look real quick.
[10:34] micheil: there is actually work being done on an official windows build of node, at the moment
[10:34] shaunau: just trying to lower the bar, i guess.
[10:37] bpedro has joined the channel
[10:40] k04n has joined the channel
[10:42] Utkarsh__ has joined the channel
[10:43] hellp has joined the channel
[10:46] torvalamo has joined the channel
[10:54] common has joined the channel
[10:56] tk has joined the channel
[10:56] bpedro has joined the channel
[10:57] torgeir has joined the channel
[10:59] hosh_work has joined the channel
[10:59] tlrobinson_: muhaha, works in node now too https://github.com/tlrobinson/long-stack-traces
[10:59] tlrobinson_: sort of
[10:59] tlrobinson_: only wraps setTimeout at the moment, the rest shouldn't be hard to do something like what fiberize does
[11:08] evl has joined the channel
[11:08] Coal has joined the channel
[11:08] romainhuet_ has joined the channel
[11:09] evl has joined the channel
[11:10] echosystm: anyone know what v8::Value subclass you use for null? :/
[11:11] micheil: tlrobinson_: whats the overhead cost?
[11:11] micheil: that's one of those issues I always had about that sort of stuff
[11:12] dgathright has joined the channel
[11:12] tlrobinson_: micheil: a function call or two per event. the idea is you'd enable it during developement/debugging
[11:12] micheil: okay
[11:14] mike5w3c_ has joined the channel
[11:14] micheil: I think your line number counts are out by 1
[11:14] tlrobinson_: micheil: huh
[11:14] zemanel: hi
[11:15] zemanel: anyone proficient with coffeescript around?
[11:15] micheil: tlrobinson_: or at least the example results in the README don't match example.html
[11:15] micheil: zemanel: try #coffeescript
[11:15] zemanel: no replies
[11:15] micheil: probably ask your question, don't ask to ask
[11:15] tlrobinson_: micheil: oh i might have edited example.html after writing the README or something. the line numbers come from V8, i don't have control over them
[11:16] micheil: okay
[11:16] micheil: in which case, this does look very cool indeed, if it doesn't add much overhead
[11:16] micheil: tlrobinson_: is there an easy way for them to always be disabled in browsers where this extension doesn't work
[11:17] tlrobinson_: mostly i just like doing really weird things with javascript. ideally this would be built into Node/Chrome
[11:17] micheil: ie, non-v8
[11:17] micheil: tlrobinson_: you probably agree with tobey tailor on things :D
[11:17] micheil: rather, tobias schneider
[11:18] tlrobinson_: sure, it could just feature detect Error.stackTraceLimit or something
[11:20] tlrobinson_: micheil: he did gordon, rihgt?
[11:20] igorGoldny has joined the channel
[11:20] micheil: yeah
[11:20] micheil: not your mothers javascript
[11:20] micheil: def.js
[11:21] matclayton has joined the channel
[11:24] tanepiper: micheil: support sent on the mailing list :)
[11:24] tlrobinson has joined the channel
[11:25] iFire has joined the channel
[11:27] davidc_ has joined the channel
[11:27] [ADTurbo]: net.createConnection gives with an PERM error, like this: http://pastebin.com/HyjUxWuf
[11:27] djanowski has joined the channel
[11:28] zomgbie has joined the channel
[11:29] pengo has joined the channel
[11:29] micheil: you're trying to bind to a privledged port with an unpriviledged user
[11:30] micheil: [ADTurbo]
[11:31] micheil: or your trying to write to a file descriptor that you don't have permission to write to.
[11:32] svens_ has joined the channel
[11:32] svens_ has left the channel
[11:34] zorzar has joined the channel
[11:35] stephank has joined the channel
[11:38] tg has joined the channel
[11:43] m64253_ has joined the channel
[11:45] pdelgallego_ has joined the channel
[11:45] pdelgallego has joined the channel
[11:45] torgeir has joined the channel
[11:45] arnorhs has joined the channel
[11:49] romeo_ordos has joined the channel
[11:49] romeo_ordos has left the channel
[11:50] saschagehlich has joined the channel
[11:53] mikedeboer has joined the channel
[11:55] matjas has joined the channel
[12:00] jetienne has joined the channel
[12:00] x_or has joined the channel
[12:01] fermion has joined the channel
[12:02] torgeir has joined the channel
[12:05] Fullmoon has joined the channel
[12:09] matjas has joined the channel
[12:11] jimt_ has joined the channel
[12:13] gnab has joined the channel
[12:13] djanowski has joined the channel
[12:17] dguttman has joined the channel
[12:19] eee_c has joined the channel
[12:22] Draggor has joined the channel
[12:26] CrazyGoogle__ has joined the channel
[12:28] dguttman has joined the channel
[12:39] pietern has joined the channel
[12:44] dguttman has joined the channel
[12:44] ph^ has joined the channel
[12:45] bradleymeck has joined the channel
[12:46] clarkfischer has joined the channel
[12:48] okuryu has joined the channel
[12:48] torgeir has joined the channel
[12:49] fairwinds has joined the channel
[12:51] [[zzz]] has joined the channel
[12:52] dnolen has joined the channel
[13:00] stepheneb has joined the channel
[13:01] djanowski: i wonder if it's possible to define an accessor for array-like access? myobject[0] ?
[13:02] kristsk: afaik no
[13:03] djanowski: too bad
[13:03] kristsk: yeah
[13:06] vyvea has joined the channel
[13:08] Jonasbn_ has joined the channel
[13:09] bradleymeck: djanowski proxies allow it but are only supported by extensions
[13:09] bpedro has joined the channel
[13:10] djanowski: bradleymeck: ok, good to know. thanks a lot
[13:11] kennon has joined the channel
[13:12] xla has joined the channel
[13:14] chrischris has joined the channel
[13:16] davglass has joined the channel
[13:21] aheckmann has joined the channel
[13:23] shaunau has joined the channel
[13:23] diaswrd has joined the channel
[13:25] perlmonkey2 has joined the channel
[13:27] phed__ has joined the channel
[13:27] phed__: gwad - but i was going to ask a simple question
[13:29] kennon has joined the channel
[13:30] sbellity has joined the channel
[13:30] phed__: but, has anyone ever "mixed" twisted and node.js? eg i was thinking of having some services on a twisted-server, but isn't there something with clientside javascript not liking to talk to different ports etc
[13:31] Lorentz_ has joined the channel
[13:33] Utkarsh has joined the channel
[13:34] herbySk has joined the channel
[13:35] arpegius has joined the channel
[13:37] ChrisPartridge has joined the channel
[13:39] [[zz]] has joined the channel
[13:39] mytrile has joined the channel
[13:39] colinclark has joined the channel
[13:40] zzak has joined the channel
[13:41] MattJ has joined the channel
[13:44] mw has joined the channel
[13:45] Ori_P has joined the channel
[13:46] pHcF has joined the channel
[13:46] chrischris has joined the channel
[13:48] broofa has joined the channel
[13:50] fumanchu182 has joined the channel
[13:50] Kyso has joined the channel
[13:52] tokumine has joined the channel
[13:52] evl has joined the channel
[13:53] xla has joined the channel
[13:54] evl has joined the channel
[13:58] [AD]Turbo has joined the channel
[14:01] [ADTurbo] has joined the channel
[14:02] sivy has joined the channel
[14:04] tapwater has joined the channel
[14:05] bpedro has joined the channel
[14:07] rao45 has joined the channel
[14:10] skm has joined the channel
[14:13] backthatzachup_ has joined the channel
[14:13] jlecker has joined the channel
[14:13] [AD]Turbo has joined the channel
[14:14] caolanm has joined the channel
[14:17] jmar777 has joined the channel
[14:18] danyork: Someone I know was having a hard time understanding event-driven programming, so I wrote up this: http://code.danyork.com/2011/01/25/node-js-doctors-offices-and-fast-food-restaurants-understanding-event-driven-programming/
[14:19] stride has joined the channel
[14:19] theAttention has left the channel
[14:22] piscisaureus has joined the channel
[14:22] Utkarsh has joined the channel
[14:23] cognominal has joined the channel
[14:23] evl has joined the channel
[14:23] evl has joined the channel
[14:24] synoptasg has joined the channel
[14:24] CrabDude has joined the channel
[14:24] ivanfi1 has joined the channel
[14:24] bingomanatee has joined the channel
[14:24] killfill has joined the channel
[14:26] trotter has joined the channel
[14:26] malkomalko has joined the channel
[14:27] trotter has joined the channel
[14:28] Lorentz: danyork: Will read
[14:29] mraleph: danyork: "microseconds matter" and "JavaScript" do not add up in my model of the world.
[14:30] evl has joined the channel
[14:31] bingomanatee: Hi there - having trouble getting map/reduce to work on mongodb + node - anyone have a successful snippet of M/R code I could see?
[14:31] unomi has joined the channel
[14:31] cognominal has joined the channel
[14:33] saschagehlich has left the channel
[14:34] russ_nyc has joined the channel
[14:34] gattuso has joined the channel
[14:35] evl has joined the channel
[14:35] jherdman has joined the channel
[14:36] danyork: mraleph: Ha! :-)
[14:37] stride has joined the channel
[14:39] andrzejsliwa has joined the channel
[14:39] torgeir has joined the channel
[14:40] xSmurf: hey guys, nowhere in the doc does it mention the return type of url.parse if you pass it an invalid url...
[14:40] hornairs has joined the channel
[14:41] xSmurf: ah that's cause it never "fails'
[14:41] xSmurf: fail
[14:41] prettyrobots has joined the channel
[14:43] Lorentz: danyork: Nice one, think it's much more easily understandable for those who don't quite yet it.
[14:43] Lorentz: But yeah, those microseconds
[14:43] xSmurf: url.parse should probably fail if you pass it something that doesn't comply with the uri scheme rfc...
[14:44] danyork: Lorentz: Thanks ...  credit is really to Tim Caswell on that podcast for coming up with the doctor's office analogy.... I just wrote it down and fleshed out the text a bit.
[14:44] stagas: xSmurf: you can check against the resulting object if the url is parsed
[14:45] danyork: Lorentz: :-)  Alright... so maybe "microseconds" isn't the right time measurement to use.  I was just trying to make the point that while the time involved for I/O may be tiny, it adds up.
[14:47] amacleod has joined the channel
[14:48] mynyml has joined the channel
[14:48] cronopio has joined the channel
[14:49] slaskis has joined the channel
[14:50] slaskis: i have an express app that when i pass an error into the next() function just refuses to go to my app.error() handler but just throws the error immediately, anyone knows why? 
[14:50] hornairs has joined the channel
[14:50] slaskis: i have several other apps that doesn't behave like this
[14:50] prettyrobots has joined the channel
[14:51] d0k has joined the channel
[14:52] Utkarsh has joined the channel
[14:52] djanowski has joined the channel
[14:54] davidsklar has joined the channel
[14:54] cronopio has joined the channel
[14:54] pgte has joined the channel
[14:55] pgte: ACTION New to mongoose, I have a question:
[14:56] pgte: when updating a document, Model.update(id, doc, fn) does not seam to exist
[14:57] pgte: I can only get update to work by finding, setting each property, and then saving.
[14:57] pgte: does any one know what I'm talking about?
[14:57] comster has joined the channel
[14:58] Aikar: anyone know why the native .forEach is slower than for(var i ; i < length; i++) {} ? seems silly to implement a feature that exists already :(
[14:58] davglass has joined the channel
[14:58] [AD]Turbo: I have to send (via TCP) two javascript numbers (the socket server expects 2 double); have I to create a buffer buf = new Buffer(16) (16 = 2 double) ? but then I don't know how to put these two numers inside a Buffer
[14:58] micheil: I think because of the function invocation overhead
[14:58] micheil: Aikar: ^^
[14:58] mraleph: Aikar: if you take a look into array.js in V8 sources you will notice that "native forEach" is implemented in JavaScript.
[14:58] Aikar: micheil: nah, changing my code to use a utils.forEach still provided a performance improvement
[14:59] micheil: also, for(){} can probably be much more easily compiled down to machine code
[14:59] micheil: Aikar: also, I was in a way getting at what mraleph said, he just said it more elegantly and knowledgeably.
[14:59] Aikar: seems like they could do some kind of preprocessor magic on a.forEach to translate to for(i)
[14:59] SubStack: but I like it when free variables are closed over the loop block
[15:00] mraleph: also forEach does some check that you usually do in a simple for loop
[15:00] mraleph: Aikar: yeah that is possible.
[15:00] mraleph: in theory
[15:00] mraleph: in practice I doubt it worth anything
[15:00] SubStack: well they are different
[15:02] bingomanatee: anyone have a reccomendation for a stopword dictionary?
[15:02] mraleph: argh. I am speaking gibberish... the previous message should read:  also forEach does some checks that are not present in a simple for loop
[15:02] bingomanatee: a.k.a. hidden properties?
[15:03] mraleph: ACTION thinks that the world should have adopted Russian instead of English as a universal language...
[15:03] mraleph: well you can take a look. for each index in checks whether index is actually "in" array.
[15:04] mraleph: and also function call is not cheap.
[15:04] dug__ has joined the channel
[15:04] franck34: who want to make a bind of libnids for node ?
[15:04] mraleph: not cheap = costs something
[15:05] mraleph: but yeah in theory compiler could inline forEach and then inline function that is called from forEach etc. etc. 
[15:06] mraleph: tracing compiler should perform such kind of optimization for free. but such tracing compilers are nowhere to be seen. *sigh* 
[15:06] nonnikcam has joined the channel
[15:06] gnab has left the channel
[15:07] bradleymeck has joined the channel
[15:07] Ori_P has joined the channel
[15:07] hellp has joined the channel
[15:10] mraleph: but in any case if you are writing a performance critical code in JavaScript and you use high-order functions here and there... then you are making a mistake.
[15:12] eee_c has joined the channel
[15:12] flazz: is it possible, on the same port to serve websockets and have express serve http?
[15:12] ericnakagawa has joined the channel
[15:15] bingomanatee: what do you mean by "high order functions"?
[15:16] MikeyB has joined the channel
[15:16] torvalamo has joined the channel
[15:18] stride has joined the channel
[15:18] bradleymeck: flazz yes
[15:18] zomgbie has joined the channel
[15:19] flazz: bradleymeck: can you point me in the right direction?
[15:19] mraleph: bingomanatee: functions that operate on functions
[15:20] bradleymeck: just wrap a websocket server around your http server, should work off the bat flazz, node-websocket-server and socket.io both can do it
[15:20] mraleph: higher order function
[15:20] mraleph: bingomanatee: http://en.wikipedia.org/wiki/Higher-order_function
[15:20] bradleymeck: mraleph is there any thoughts on setting configurable false for built-in functions?
[15:20] paulrobinson has joined the channel
[15:20] montylounge has joined the channel
[15:20] jmar777: mraleph: aren't async functions always higher order?
[15:20] jmar777: mraleph: due to the callback?
[15:21] mraleph: jmar777: yep. so you should not spread performance critical part across several chained functions. keep it tight.
[15:21] jmar777: mraleph: and yes, completely not your point...
[15:22] mraleph: bradleymeck: what do you mean? do you want to freeze builtins?
[15:22] bradleymeck: jmar, yes but many times people use higher order functions they are using sync stuff (ie [...].map(...),which is slow compared to loop rolling). Even then, if you can get away with sync computation and it wont block long enough to cause issues it will be slightly faster than queueing an event/tick, but may be less maintainable
[15:22] ajashton has joined the channel
[15:23] bradleymeck: mraleph, just want guarantees that the builtin has not be overridden i guess
[15:23] jmar777: mraleph, bradleymeck: right - so basically don't code asynchronously, or, more specifically, with higher order functions, unless you're actually doing blocking operations
[15:24] flazz: bradleymeck: thanks!
[15:24] bingomanatee: mraleph - if you say that high order functions in production is a mistake, isn't node a mistake since almost all node takes functions as input in the form of callbacks?
[15:24] Kingdutch has joined the channel
[15:24] possibilities has joined the channel
[15:24] mraleph: standard does not give such guarantees if I remember correctly. I think people extend prototypes of builtin things all the time
[15:25] bradleymeck: ah
[15:25] losing has joined the channel
[15:25] mraleph: bingomanatee: no. I don't say this.
[15:26] bradleymeck: bingomanatee, the point is not to abuse higher order, use them when they do give you gains (such as when you are waiting on an async operation), using them just because they are there will be slower than writing normal functions
[15:26] bradleymeck: like every topic, you need balance :/
[15:26] figital has joined the channel
[15:27] yhahn has joined the channel
[15:27] mraleph: bingomanatee: I say that if you have array of length 1000000000 and you do something like a = a.map(foo) in a loop then you are screwed.
[15:27] bradleymeck: bubble map!
[15:27] mraleph: abstractions are not cheap. they always cost something.
[15:28] mnbvasd: wju?
[15:28] mnbvasd: why?
[15:28] bradleymeck: because we can only optimize compilation so much with dynamic typing
[15:28] stepheneb has joined the channel
[15:28] mraleph: because compiler is usually not smart enough. because we are living in a non ideal world.
[15:28] mnbvasd: ACTION shrugs
[15:29] mraleph: what I am saying is that people should either understand the cost of abstractions they are dealing with
[15:29] mraleph: or you should not care at all about the difference between forEach and for-loop and write code as you like.
[15:30] bradleymeck: if i had all the time in the world to trace all possible type permutations a function will recieve and had enough memory to deal with that, it *may* not cost me anything, it *may* be faster
[15:30] mnbvasd: ah, currently I don't understand.
[15:30] possibil_ has joined the channel
[15:30] mnbvasd: if I was using js to process many million records, I'd really not care about the speed.
[15:31] iszak has joined the channel
[15:31] mraleph: I think I am missing my own point.
[15:31] mraleph: ah. whatever.
[15:31] bradleymeck: lol
[15:31] jmar777: mraleph: lol - i found it interesting, none-the-less
[15:31] losing_ has joined the channel
[15:31] bradleymeck: mraleph i understand you at least?
[15:32] mraleph: i think so
[15:32] mraleph: in any case compilers will continue to improve nothing is set in stone
[15:32] prettyrobots has joined the channel
[15:32] shaver: .map and .forEach should be able to be within epsilon of a for loop, given tracing at least
[15:33] mraleph: yep
[15:33] Me1000 has joined the channel
[15:33] mnbvasd: mraleph: I did too.
[15:33] mnbvasd: )fpimd ot omtrestomg/
[15:33] shaver: so you really just want to listen to the profiler
[15:33] mraleph: yep. if you care.
[15:33] brianc: [AD]Turbo: you still around?
[15:34] mraleph: the problem with profiling is that people tend to micro-optimize without actually profiling stuff
[15:34] prettyrobots has joined the channel
[15:34] mraleph: and when you through node.js app as whole into profiler you see a lot of noise
[15:35] mraleph: GC, V8 internals, networking, data marshaling between C++ and JS.
[15:35] jmar777: i guess memory is also a potential concern - depending on how much is in scope, the closure itself (spread across 20k concurrent processes, to hyperbolize) could be spendy
[15:35] shaver: that's the problem with *not* profiling, not the problem with profiling!
[15:35] mnbvasd: mraleph: nah, the problem is that people don't profile, they just try to optimise ignorantly.. the may reduce the time it takes to run a slow piece of code by several orders of magnitude, but the code only runs for 0.00001% of the programs lifetime, however optimising code that runs for 90% of it's lifetime by just 10% makes a huge difference.
[15:35] JimBastard has joined the channel
[15:36] bradleymeck: shaver ideally yes, but dynamic types and the fact you can override host object prototypes of .map and .each will blow that away
[15:36] matt_c has joined the channel
[15:36] shaver: amdahl can kick your ass
[15:36] shaver: bradleymeck: no, tracing boils that away to a hoistable guard
[15:36] gattuso has joined the channel
[15:36] mnbvasd: all the background stuff matters with profiling.
[15:36] mraleph: even without tracing you can handle that.
[15:36] shaver: (just as it does with for loops, really)
[15:36] mnbvasd: you want to be kind to your vm.
[15:36] bradleymeck: shaver you cant hoist away prototype changes
[15:36] mnbvasd: such as sending larger or smaller packets to your network code.
[15:37] mnbvasd: ACTION has to actually do a bit of work now :(
[15:37] shaver: you mean changes within the loop?
[15:37] bradleymeck: unless you want a double adder style solution which keeps a duplicate
[15:37] shaver: if not, you guard on prototype-inclusive shape at the top of the loop
[15:37] bradleymeck: shaver i mean if i use Array.prototype.map = function map(){...lame...}
[15:37] shaver: sure
[15:37] shaver: tracing is runtime analysis, not static
[15:37] banjiewen has joined the channel
[15:38] shaver: we see through such functions
[15:38] shaver: (and some important builtins, like apply and call today; map and other extras in the future)
[15:38] bradleymeck: perhaps but i have never seen those optimizations live in js engines
[15:38] shaver: ?
[15:38] shaver: they're live in FF3.5
[15:38] shaver: not for map, but for other such cases
[15:39] shaver: like if you redefine call/apply, it's correct
[15:39] shaver: if you don't, you get inlining across it
[15:39] bradleymeck: i was talking a generic trace for higher order functions, doing it on a per case basis im sure exists
[15:39] shaver: the only per-case issues are because of implementation in native code rather than script, where the tracer can't see
[15:40] shaver: (without Dynamo-like x86 interpretation and tracing, no thanks)
[15:40] mraleph: tracing should handle this for free... at least on paper :-)
[15:40] shaver: we don't hoist guards aggressively in FF4, but we have the code to do LICM etc. -- just not enough time to bake it before FF4, we'll get it next round
[15:41] bradleymeck: i understand what you are saying, im just saying its not what is should/could be if it is on per case (ie only applies to some functions), basically what mraleph just said
[15:41] shaver: it applies to all scripted functrions
[15:41] shaver: functions
[15:41] bradleymeck: but not map?
[15:41] shaver: and some non-scripted functions
[15:41] shaver: not yet map
[15:42] shaver: you're always going to have optimization holes in some builtins or host objects
[15:42] shaver: like, nobody traces through setInterval or similar, though it's possible
[15:42] shaver: the set of host object invocation paths grows all the time
[15:42] jpld has joined the channel
[15:42] shaver: self-hosting helps, we'll move more towards that, but it requires proxies and other scaffolding
[15:42] shaver: (that's one reason we did proxies, though, to put more code where the JITs can see it)
[15:43] shaver: (script <-> C thunking is expensive)
[15:43] shaver: dammit, now I want to go hack on the tracer some more
[15:43] noahcampbell has joined the channel
[15:43] shaver: (most large-scale scripts are bound on property access/cache effects and GC behaviour these days, we find, but there are plans there for sure)
[15:44] blueadept has joined the channel
[15:44] bradleymeck: hehe
[15:45] shaver: naturally-written JS should be as fast as naturally-written Java
[15:45] ericnakagawa has joined the channel
[15:45] shaver: with faster startup
[15:45] shaver: any time that's not the case, it's a bug :-)
[15:46] eikke: shaver: that's bold
[15:46] shaver: if you're not going to do bold work, why bother?
[15:46] bradleymeck: thats a big bug for almost everything
[15:46] eikke: shaver: true ;)
[15:46] shaver: bradleymeck: not for everything, it turns out
[15:46] Iszak_ has joined the channel
[15:47] Iszak has joined the channel
[15:47] bradleymeck: oh? must be falling out of tune with cross language benches :O
[15:47] eikke: shaver: I'm still not convinced you can get around the benefits of what strict static typing gives you
[15:47] JimBastard: bradleymeck: HUNGRY NOTATION 
[15:47] bradleymeck: aaah
[15:47] Gruni has joined the channel
[15:48] ericnakagawa has joined the channel
[15:48] shaver: eikke: your typing needs to be consistent at runtime, but it doesn't need to be declared that way
[15:48] shaver: and if it's a workload that java can do, it's obviously not dynamic at runtime!
[15:48] mraleph: bradleymeck: I did not say on "per case" basis. I say that tracing is general enough to handle this cases for free, where for free means without introducing any special cases
[15:48] shiawuen has joined the channel
[15:48] eikke: shaver: then you're most likely not writing 'natural JS'
[15:49] bradleymeck: fs.write(str$FileName,str_buff_stringlike$Data,str$Encoding)
[15:49] shaver: most of the JS in the world is extremely type-stable at runtime
[15:49] bradleymeck: darn forgot to include optional
[15:49] shaver: more so, in fact, than many of the benchmarks :-)
[15:49] bradleymeck: shaver havent had the chance to work on a JS compiler so i havent profiled that enough
[15:50] shaver: there's data on this, but it's not mine to share :-/
[15:50] eikke: shaver: true... it always struck me I use many more 'dynamic typing' tricks when writing Python than when writing JS
[15:50] Yuffster has joined the channel
[15:50] shaver: eikke: using them outside the amdahl-hot part of your program is fine
[15:51] shaver: pretty much by definition, if it doesn't happen in a loop it's not important to steady-state throughput of the app
[15:51] eikke: using a broad definition of loop
[15:52] shaver: sure, some are turned inside out around an event loop
[15:52] eikke: yup :)
[15:52] shaver: though those tend to be straight-line bodies that are very easy to analyze aggressively
[15:52] mraleph: shaver: tracing through C event loop does not seem to be the easies way to do
[15:52] shaver: it's iteration-over-heterogeneous-arrays-with-holes and such that trip up JS engines
[15:52] shaver: mraleph: no, should implement the event loop in JS over time
[15:53] mraleph: yeah. 
[15:53] shaver: but it's design-easy enough to treat the repeated script invocation as a loop
[15:53] shaver: (and in terms of "get app to steady state performance", I like the JSVMs' odds over the JVMs even today!)
[15:54] shaver: that said
[15:54] shaver: it's conceptually pretty easy to treat script entry as a loop head
[15:54] shaver: and the return as a function call to a big native followed by loop back-edge
[15:54] shiawuen has joined the channel
[15:55] MikeyB: Does anyone know a good flat file database that can be used with nodejs?
[15:55] shaver: you have to flush everything, and you can't hoist as aggressively, but you get pretty close
[15:55] chapel: MikeyB: node-chaos
[15:56] MikeyB: Thanks I will check it out.
[15:56] mraleph: if different callbacks are executed in a sequence and they share some state through local variables then tracing of this sort want give you that much... static type propagation seems to be more beneficial.
[15:59] shaver: static type *propagation* works well together with runtime type *determination*
[16:00] mraleph: true
[16:00] shaver: and most type flow is conceptually quite static
[16:00] tiemonster has joined the channel
[16:00] shaver: (once you can see through functions)
[16:01] tiemonster: Who has survived the harrowing journey of compiling Node on cygwin and would like to lend assistance?
[16:01] mraleph: well I call it no-bullshit hypothesis: 
[16:01] piscisaureus has joined the channel
[16:01] torvalamo: tiemonster, memememe
[16:01] mraleph: normally programmer do not write bullshit that mutates type state of the program in an irregular way :-) 
[16:01] tiemonster: torvalamo: seen this one? {task: cc ares_strdup.c -> ares_strdup_1.o}
[16:02] aklt has joined the channel
[16:02] tiemonster: task failed (err #1)
[16:02] torvalamo: which node version
[16:02] bradleymeck: mraleph, you wouldn't like some things ive written
[16:02] tiemonster: latest git
[16:02] torvalamo: oh it's not compilable
[16:02] tiemonster: awesome
[16:02] mraleph: bradleymeck: is it so irregular?
[16:02] tiemonster: we're trying to work on the setenv/unsetenv calls
[16:02] sonnym has joined the channel
[16:02] torvalamo: i think you'd need to go back to 0.3.4, but to be safe, go to 0.2.6
[16:03] bradleymeck: mraleph sometimes i use runtime codegen :/ to give me aspect oriented things and templates for output
[16:03] torvalamo: i've only had 0.2.6 compile for me
[16:03] tiemonster: torvalamo: will it be recent enough to work on porting those API calls?
[16:03] torvalamo: no idea
[16:03] tiemonster: lol
[16:03] piscisaureus has left the channel
[16:03] zomgbie has joined the channel
[16:04] piscisaureus has joined the channel
[16:04] bradleymeck: so i guess if the tracer could determine the somewhat predictable Function() calls im doing it would be fine
[16:04] mraleph: you can see through runtime codegen in runtime
[16:04] torvalamo: maybe you can get 0.2.6 and use the code in question from master
[16:04] m64253 has joined the channel
[16:04] torvalamo: just to compile it i mean
[16:04] mraleph: you don't need to be a tracer to survive that
[16:04] mraleph: tracer is not the only solution around :-)
[16:05] tiemonster: torvalamo: let's see if I can even compile it first. ;-)
[16:05] mraleph: but probably shaver will disagree :-)
[16:05] shaver: no, not at all
[16:05] bradleymeck: i don't know these things, i just know i generate types that are used to construct objects so i thought type irregularity would occur
[16:05] shaver: I am all about the hybrid
[16:05] bradleymeck: all good things are hybrid pretty much
[16:05] tiemonster: we may need to adopt a different feature if this continues to be an issue :-(
[16:05] mraleph: \o/
[16:05] bradleymeck: all being everything not js engines
[16:05] torvalamo: you're the windows guy?
[16:06] shaver: bradleymeck: there's a "your mom" joke in there somewhere
[16:06] bradleymeck: hehe
[16:06] jherdman has joined the channel
[16:07] bradleymeck: i wish i was paid to work on a js engine lol
[16:08] shaver: we're hiring :-)
[16:08] mraleph: we're hiring :-) [as well]
[16:08] eikke: even tried to hire me one day :P
[16:08] shaver: yeah, but we talk about our optimization plans in public, so you don't have to keep quiet about the cool work you're doing until Sundar gets on stage :-)
[16:08] bradleymeck: lol i doubt i could fit the bill to be hired, just a lot of rambling and reading
[16:09] tjholowaychuk has joined the channel
[16:10] farhadi has joined the channel
[16:10] piscisaureus: tiemonster: if you want to work on that, don't use cygwin
[16:10] piscisaureus: setenv/unsetenv works for cygwin
[16:11] shaver: mraleph: thanks for the fast-dtoa stuff, btw
[16:11] shaver: mraleph: I wasn't looking forward to having someone implement that paper as well
[16:11] piscisaureus: tiemonster: you need this, then: https://github.com/ry/node/wiki/Building-node.js-on-mingw
[16:11] tiemonster: awe crap
[16:11] tiemonster: ok
[16:12] prettyrobots has joined the channel
[16:14] mraleph: shaver: rofl
[16:14] mraleph: shaver: I will pass your thanks to Florian
[16:15] fangel has joined the channel
[16:15] claudiu__ has joined the channel
[16:15] MrTopf has joined the channel
[16:18] jakehow has joined the channel
[16:19] asimismo has joined the channel
[16:19] dug__ has left the channel
[16:20] Aikar: boss threw me on a node project my first week here lol
[16:20] torvalamo: will someone make a decimal/decNumber binding/interface/module for node? i tried figuring out how to connect the c library to node, but this c++ stuff is over my head
[16:20] Aikar: but hes same boss as last job so he knows me well and know im working with it alot
[16:20] BillyBreen has joined the channel
[16:22] tjholowaychuk: torvalamo: a guy I work with had started bindings for gmp
[16:22] tjholowaychuk: torvalamo: havent tried it personally: https://github.com/aheckmann/node-gmp
[16:22] torvalamo: hm
[16:23] torvalamo: NOTE: This project has been discontinued b/c gmp aborts() under many circumstance and will crash node along with it.
[16:23] torvalamo: promising
[16:23] tjholowaychuk: haha
[16:23] tjholowaychuk: yeah
[16:23] aheckmann: yup
[16:23] aheckmann: abandoned
[16:23] aheckmann: gmp fails
[16:23] tjholowaychuk: boo gmp
[16:23] aheckmann: yup
[16:24] torvalamo: i was thinking of implementing the whole decNumber in pure js, but a few things are annoying, like getting frexp() reliably
[16:24] gkatsev: clearly you need to rewrite gmp to not suck. And then add node bindnigs.
[16:24] aheckmann: clearly not
[16:24] bradleymeck: aheckmann does it just do it when types dont match or just randomly?
[16:24] gkatsev: :P
[16:24] dmcquay has joined the channel
[16:24] aheckmann: well it's not random
[16:24] aheckmann: but
[16:25] keks: hi, can anyone tell me how to write binary stuff on stdout without breaking it? fs.write(process.stdout,... always errors with bad encoding...
[16:25] aheckmann: there are a bunch of different scenarios that can cause it
[16:25] aheckmann: and their solution is to abort()
[16:25] jbpros_ has joined the channel
[16:25] aheckmann: which they are not willing to change
[16:25] aheckmann: its super fast tho
[16:25] tjholowaychuk: you tried catching SIGABRT right? (still kinda funky)
[16:26] tjholowaychuk: dont knwo what you would do with that after
[16:26] tjholowaychuk: haha
[16:26] aheckmann: i suppose there's probably some hack that can be done to run it in a seperate child process or something but thats kind of lame
[16:26] tiemonster: aheckmann: what would be the solution to this?
[16:26] kennon has left the channel
[16:26] aheckmann: tj no i didn't after several people recommended not doing it b/c it's not "safe"
[16:26] aheckmann: tiemonster: use a different lib
[16:26] tjholowaychuk: ah
[16:26] tiemonster: hmm
[16:26] aheckmann: bcmath or something i dunno
[16:26] aheckmann: haven't gone back for a while
[16:27] aheckmann: don't remember the other optinos
[16:27] aheckmann: gmp was supposed to be the "best"
[16:27] torvalamo: it's not life or death that there's a decimal class in node, but it would help... for now i can do the math in the db engine
[16:27] aheckmann: i do think node needs this sort of support tho
[16:27] aheckmann: floats kinda suck for financials etc
[16:27] torvalamo: no shit
[16:27] aheckmann: haha
[16:27] torvalamo: i think it's illegal to make a financial app with float
[16:27] torvalamo: at least it should be
[16:27] tiemonster: I think you're right
[16:28] aheckmann: my motivation was first that
[16:28] tiemonster: but would you make a financial app on Node?
[16:28] aheckmann: doing it in js is soooooooooooooooooooooooooo slow
[16:28] torvalamo: tiemonster, accounting app with multiple users
[16:28] torvalamo: fun fun fun
[16:28] aheckmann: bignums that is
[16:28] tjholowaychuk: aheckmann: if you undef WANT_ASSERT
[16:28] Ori_P has joined the channel
[16:28] tjholowaychuk: it should be fine and not abort
[16:28] tjholowaychuk: just looked at the source
[16:28] tjholowaychuk: the only thing calling abort() is __gmp_assert_fail() which is conditional based on that macro
[16:29] aheckmann: tjholowaychuck: i don't remember
[16:29] torvalamo: aheckmann, how slow
[16:29] tjholowaychuk: did you get a funky message like "GNU MP assertion failed" ?
[16:29] tjholowaychuk: if not then its probably fucked haha
[16:29] aheckmann: no
[16:29] tjholowaychuk: damn
[16:29] aheckmann: but
[16:29] aheckmann: it's been months
[16:29] aheckmann: torvalamo if i recall
[16:30] aheckmann: running an example in js took several minutes
[16:30] aheckmann: in gmp
[16:30] torvalamo: ooh
[16:30] aheckmann: it took < 1 second
[16:30] torvalamo: that's unacceptable :p
[16:30] aheckmann: its was a reaaaaaaallly big number haha
[16:30] torvalamo: we're not in the 60s after all
[16:30] aheckmann: :)
[16:30] cagdas has joined the channel
[16:31] torvalamo: well decNumber doesn't abort
[16:31] mynyml has joined the channel
[16:31] torvalamo: :P
[16:31] Qbix1 has joined the channel
[16:31] danielrm_ has joined the channel
[16:31] Vertice has joined the channel
[16:32] torvalamo: gmp looks like it's limitless, is that right?
[16:32] torvalamo: as in it could take any length and precision
[16:32] danielrmz has joined the channel
[16:33] torvalamo: i doubt that's necessary for finance :p
[16:33] astoon has joined the channel
[16:34] torvalamo: unless you're enron
[16:35] tiemonster: or Zimbabwe
[16:36] sprout has joined the channel
[16:36] tiemonster: man, writing a financial program for a Zimbabwean company must suck
[16:36] aheckmann: http://gmplib.org:8000/gmp-4.3/file/2fab0bbcffb4/mpz/realloc.c#l39
[16:36] aheckmann: http://gmplib.org:8000/gmp-4.3/file/2fab0bbcffb4/mpz/realloc.c#l47
[16:36] balaa has joined the channel
[16:36] aheckmann: http://gmplib.org:8000/gmp-4.3/file/2fab0bbcffb4/mpz/realloc2.c#l38
[16:36] aheckmann: :(
[16:37] torvalamo: tiemonster, not really.. they don't have computers
[16:37] torvalamo: but they use a lot of books
[16:37] torvalamo: :p
[16:37] andrzejsliwa has joined the channel
[16:37] hornairs has joined the channel
[16:38] stride has joined the channel
[16:38] torvalamo: what's with the space in "abort ()"? what kind of pretentious crap is that? :p
[16:38] tiemonster: aheckmann: how could you handle those conditions gracefully? set it to an arbitrary value (NaN)?
[16:38] tjholowaychuk: torvalamo: gah! haha
[16:38] aheckmann: tiemonster: i'm a total newb
[16:38] tjholowaychuk: i searched for abort()
[16:38] aheckmann: with c++
[16:39] tjholowaychuk: which was why I did not find abort ()
[16:39] torvalamo: ha
[16:39] mnbvasd: torvalamo: lol
[16:39] aheckmann: :)
[16:39] tjholowaychuk: assholes
[16:39] aheckmann: hahaa
[16:39] sbellity has left the channel
[16:39] ivanfi1 has left the channel
[16:39] aheckmann: tiemonster: i'd prefer to return some sort of error code back to js land
[16:39] eikke: tjholowaychuk: sometimes 'abort' is a macro, and some people tend to use spaces when calling a macro
[16:40] mnbvasd: who cares?
[16:40] tjholowaychuk: kinda lame for something that "might" be a macro
[16:40] mnbvasd: if it works and is valid syntax?
[16:40] mnbvasd: just consistent?
[16:40] danielrmz has joined the channel
[16:40] ROBOTARMY has joined the channel
[16:40] tjholowaychuk: looks like jQuery style to me haha
[16:40] tjholowaychuk: foo (    im , cool        )
[16:40] aheckmann: :D
[16:41] torvalamo: iLoveCamelCase_underscoredInterfaceForNoApparentReason
[16:41] torvalamo: .java
[16:41] eikke: aheckmann: depending on the way things work, you might need to allocate memory to be able to pass through exception information, or handle the error later on, etc, which will be impossible anyway
[16:41] Qbix1: Hey guys
[16:41] eikke: aheckmann: it's one of the main decissions to be made when writing a library: abort on OOM or return eg NULL
[16:41] Qbix1: Question: I want to use Node.js for my website, but it will have a heavy load
[16:41] Qbix1: Are there any known memory leaks in Node?
[16:42] aheckmann: eikke intereting
[16:42] slaskis: tjholowaychuk: in an express app, if an error is passed into next() should it not go to the app.error() route?
[16:42] Qbix1: What about the stop-the-world gc of V8? I am a little concerned about pauses
[16:42] Qbix1: Basically how ready is Node for always-on use in websites?
[16:42] Qbix1: Can it run for a year?
[16:42] eikke: aheckmann: this is one of the reasons in unix Xorg will never use glib, since glib aborts on alloc errors, which makes sense in desktop apps, but the x server does want to attempt to recover
[16:42] slaskis: it used to, but now it just seems to throw anything i pass into next()
[16:42] tjholowaychuk: slaskis: yeah error handling routes should get it (app.error() or any middleware with 4 args)
[16:42] torvalamo: Qbix1, depends on your code
[16:43] tjholowaychuk: slaskis: 2.0.0-pre?
[16:43] Qbix1: tovalamo: so you are saying, that if my code properly deletes unused variables, that somehow Node will be stable enough to never leak memory?
[16:43] Qbix1: what about the gc pauses though
[16:43] chapel: Qbix1: definitely depends on the code
[16:43] slaskis: tjholowaychuk: no, stable
[16:43] tjholowaychuk: slaskis: k, hmm
[16:43] eikke: aheckmann: in most non-embedded real-world apps abort on alloc failure makes sense though, since most of the time it's hard, if not impossible, to recover anyway, and that way you dont have to check for null pointers after alloc :P
[16:43] chapel: but it could run indefinitely if you did it right
[16:43] bingomanatee: hey TJ
[16:43] torvalamo: let the gc handle the gc
[16:43] torvalamo: if it leaks it will be fixed
[16:43] chapel: Qbix1: there aren't gc pauses
[16:43] tjholowaychuk: bingomanatee: hey hey
[16:44] aheckmann: eikke: good to know
[16:44] chapel: unless you are doing something odd
[16:44] bingomanatee: Gonna get noogle up today, god willing. 
[16:44] shaver: everyone gets GC pauses on the right (wrong) workloads
[16:44] hornairs has joined the channel
[16:44] tjholowaychuk: :D
[16:44] torvalamo: insh'allah
[16:44] jamund has joined the channel
[16:44] Qbix1: how are there no gc pauses? that's nice
[16:44] shaver: unless you do concurrent GC, which I don't know of anyone doing with JS
[16:44] Qbix1: but I thought that's what stop-the-world meant
[16:44] tjholowaychuk: slaskis: if you can gist me the middleware setup i might be able to help
[16:45] chapel: Qbix1: what kind of website are you trying to create?
[16:45] slaskis: tjholowaychuk: could it be different if i have a route like: app.get("/",loadthing,function(req,res,next){}) and in the loading route middleware i call next() with an error?
[16:45] tjholowaychuk: slaskis: its a little messed how i have to do it. technically the error() calls should be last, however I defer them until listen() (or listenFD())
[16:45] tjholowaychuk: that should be fine
[16:45] lukegalea has joined the channel
[16:45] tk has joined the channel
[16:45] tiemonster: compiling on windows really sucks
[16:46] chapel: eh, dont use windows :P
[16:46] strmpnk has joined the channel
[16:46] mnbvasd: well don't do it then
[16:46] slaskis: tjholowaychuk: sure, just give me a sec
[16:46] eikke: tiemonster: unless you're in some fancy bloated IDE, pretty much, yes
[16:46] tiemonster: then what else can we help out with?
[16:46] tiemonster: we have two weeks to submit a patch
[16:47] torvalamo: Qbix1, the gc is fast enough that your users won't notice anything that they wouldn't possibly notice as if there was just another user ahead of them in the request queue
[16:48] torvalamo: ie. nothing
[16:48] shaver: yeah, and all systems have to free memory
[16:48] shaver: so there's no free lunch
[16:48] wink_: Qbix1: more importantly, if gc pauses are noticeable enough in your application to be a problem, you've got worse scaling issues to solve than dealing with a gc thats likely going to take as long as your average one way latency to the user
[16:48] shaver: just how it's amortized, and how efficient the memory footprint is (cache, fragmentation, etc.)
[16:49] tiemonster: piscisaureus: Error 1 on http_parser_2.o :-(
[16:49] slaskis: tjholowaychuk: i think i just figured out why it doesn't work. i'm using a connect server with vhosts to handle my servers, might be that listen doesnt get called properly then?
[16:49] torvalamo: and i suppose it's simply BECAUSE that it is stop-the-world gc that it does it fast enough that you won't notice
[16:49] tjholowaychuk: slaskis: ah! that could be it
[16:49] slaskis: because running the server without the vhost thing seems to pass errors
[16:49] tjholowaychuk: good call, shit
[16:49] tjholowaychuk: hmmm
[16:49] mraleph: shaver: we want to try, I heard that you also want to try doing concurrent GC.
[16:49] shaver: well
[16:50] shaver: we're going to do parallel-over-compartment GC
[16:50] shaver: we're not going to do GC parallel with the mutator any time soon
[16:50] tjholowaychuk: slaskis: maybe when vhost "mounts" a server it can fire an event so we can hook in
[16:50] shaver: which is what I understand "concurrent GC" to mean, generally
[16:50] shaver: but I do not have a fancy CS degree, so I could be talking out of my hindquarters :-P
[16:50] slaskis: tjholowaychuk: like a emit("mount") or something?
[16:50] podman has joined the channel
[16:50] podman: hi
[16:51] piscisaureus: tiemonster: full error message?
[16:51] mraleph: shaver: speaking of degrees I am applied mathematician, pleased to meet you :-)
[16:51] shaver: heh
[16:51] tiemonster: piscisaureus: http://pastie.org/1496487
[16:51] piscisaureus: tiemonster, if you want to do something else, that's ok with me. But I'm not the one to make the call, you should talk to ryah_ when he is around.
[16:52] podman: anyone have much experience with node-mongodb-native? I'm running into issues where requests to node will just hang forever if there is a find called on a collection
[16:52] eikke: mraleph: dropout, pleased to meet you as well :P
[16:52] stride has joined the channel
[16:52] tiemonster: piscisaureus: not sure yet. we're one week in and can't even compile on Windows yet. :-(
[16:52] piscisaureus: tiemonster: this is latest master?
[16:52] benburkert has joined the channel
[16:52] cripsy has joined the channel
[16:53] mraleph: shaver: well. yeah making fully concurrent GC for V8 would be huuuuge pain. because everything was written with an single-thread assumption in mind. 
[16:53] podman: should the driver automatically reconnect on lost connections?
[16:53] tiemonster: piscisaureus: yep
[16:53] podman: or should i just wrap every call to the database in a DB.open ?
[16:53] shaver: mraleph: yeah, and we're clawing our way back to coarser-grained threading as well
[16:53] mraleph: shaver: but interleaving mutator and collector is possible 
[16:53] shaver: even with our headstart on threadcrap, it would be a nightmare
[16:53] shaver: yes
[16:54] shaver: incremental collection per allocation
[16:54] amerine has joined the channel
[16:54] mraleph: "incremental" is the right CS word
[16:54] mraleph: yep
[16:54] shaver: JSC does finalization at allocation time, for example
[16:54] shaver: I guess you need some barriers-of-unknown-cost to do that with copying, if your increments are very small
[16:55] mraleph: well copying is hard. you need read barriers.
[16:55] piscisaureus: tiemonster: you did ./configure --without-ssl again after installing mingw?
[16:55] mraleph: and you need read-barriers for roots. too much pain.
[16:55] tiemonster: piscisaureus: yep
[16:55] drewolson has joined the channel
[16:56] mraleph: or you need to copy roots in one go --- which is also pain
[16:56] tiemonster: let me try the whole thing again
[16:56] eee_c has joined the channel
[16:56] mraleph: world is pain.
[16:56] drewolson: hey all, i seem to be having problems installing base64 via npm on the newest stable node. has anyone else seen this?
[16:56] eikke: drewolson: yup, some time ago
[16:57] drewolson: eikee: were you able to get around the issues? i'm trying to install zombie which depends on base64
[16:57] eikke: drewolson: iirc there's a patch in the issue tracker, if not the fix is simple, node api change
[16:57] davidsklar1 has joined the channel
[16:57] mraleph: let azul have their zeropause gc --- browsers don't need realtime :-)
[16:57] eikke: drewolson: i managed to get base64 etc installed, but zombie itself didnt work :P
[16:57] eresair has joined the channel
[16:58] slaskis: tjholowaychuk: how about the app.mounted() hook?
[16:58] tanepiper: isn't app.mounted removed already?
[16:58] tjholowaychuk: its not removed
[16:58] tjholowaychuk: but i undocumented it because app mounting is really lame
[16:59] shaver: mraleph: yeah, and browsers can't bear the throughput costs required for zeropause, I suspect
[16:59] slaskis: tjholowaychuk: wait, that wont work with connect
[16:59] piscisaureus: tiemonster: I don't know, it looks good except for the error. But i don't now what error 1 means :-/ Normally you would get an error message of some sort. Maybe it just does not find gcc.exe
[16:59] mraleph: shaver: you said that you are moving to coarser-grained threading, does it mean that currently you have fine-grained threading? like several threads in JS code in the same time?
[16:59] slaskis: not that i have to use connect, just trying to lean that one down
[16:59] slloyd has left the channel
[16:59] tjholowaychuk: one sec ill patch
[16:59] tiemonster: piscisaureus: but it compiled everything before it...
[16:59] shaver: mraleph: we can have several threads in JS operating on the same object graph, even
[16:59] JimBastard has joined the channel
[16:59] daniellindsley has joined the channel
[16:59] noahcampbell has joined the channel
[17:00] piscisaureus: yah but maybe that was using g++?
[17:00] shaver: mraleph: though not in FF4, there they have to rendezvous at the "compartment" (roughly "domain") granularity
[17:00] piscisaureus: tiemonster: I have 5 minutes left.
[17:00] piscisaureus: what happens when you run 'gcc' just like that from the bash shell?\
[17:00] tiemonster: piscisaureus: no problem
[17:00] slloyd has joined the channel
[17:00] mraleph: shaver: interesting.
[17:00] piscisaureus: gpp?
[17:01] stride has joined the channel
[17:01] piscisaureus: cpp i mean
[17:01] slaskis: hah, an easy workaround is instead of vhost("example.com",require("a/server")) i just vhost("example.com",require("a/server").registerErrorHandlers())
[17:01] stephank has joined the channel
[17:01] tjholowaychuk: slaskis: haha yeah that will work for now
[17:01] shaver: mraleph: brendan did some (maybe patented? don't recall) work in late 90's to avoid locking costs for unshared objects, via GC rendezvous
[17:01] slaskis: love that you keep every method chainable
[17:01] tiemonster: piscisaureus: http://pastie.org/1496521
[17:02] shaver: mraleph: we did it for server embeddings at Netscape
[17:02] tiemonster: cpp hangs
[17:02] ph^ has joined the channel
[17:02] shaver: mraleph: never widely used in Firefox, except by extensions that risk crashing due to un-thread-safe native code (outside JS engine proper) 
[17:02] piscisaureus: no it's waiting for input on stdin :-)
[17:02] tiemonster: exactly
[17:03] piscisaureus: so it's working 
[17:03] tiemonster: yes
[17:03] mraleph: shaver: yeah. threading is so much simplier if you have only one thread :-) 
[17:03] shaver: quite
[17:03] ROBOTARMY has joined the channel
[17:03] shaver: until you need to do fast worker dispatch :-)
[17:03] eikke: mraleph: or 0 shm
[17:03] piscisaureus: tiemonster: what if cd to the 'build' directory and then paste the entire command to bash?
[17:03] shaver: but those messsages tend to be small, and you can hide the latency in a lot of places
[17:04] slaskis: tjholowaychuk: wow, that error thing has kept me debugging for about 5 hours, glad it's found now
[17:04] tjholowaychuk: slaskis: thanks for letting me know, i totally did not catch that
[17:04] tjholowaychuk: makes prefect sense
[17:04] piscisaureus: tiemonster: so
[17:04] piscisaureus: cd build
[17:04] piscisaureus: C:\MinGW\bin\gcc.exe -D_GNU_SOURCE -DHAVE_CONFIG_H=1 -m32 -g -O3 -DCARES_STATICLIB=1 -DEV_FORK_ENABLE=0 -DEV_EMBED_ENABLE=0 -DEV_MULTIPLICITY=0 -DX_STACKSIZE=65536 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DEV_MULTIPLICITY=0 -DFD_SETSIZE=1024 -DHAVE_FDATASYNC=0 -DPLATFORM="win32" -Wno-unused-parameter -D_FORTIFY_SOURCE=2 -DNDEBUG -Idefault\deps\http_parser -I..\deps\http_parser ..\deps\http_pars
[17:04] zomgbie has joined the channel
[17:04] piscisaureus: er\http_parser.c -c -o default\deps\http_parser\http_parser_2.o
[17:05] slaskis: tjholowaychuk: improving the lovely piece of machinery that is connect and express one patch at a time ;)
[17:05] m0rganic1 has joined the channel
[17:05] tjholowaychuk: yup lol
[17:05] davidsklar1 has joined the channel
[17:05] mraleph: if you can design a protocol around ownership passing then you can pass messages with near 0 overhead between isolated "workers". but I am not sure anybody did that.
[17:06] shaver: yeah, I don't know of any
[17:06] tk has joined the channel
[17:06] shaver: probably someone did it with CORBA or Java RMI or something equally distasteful
[17:06] tiemonster: piscisaureus: I'd have to go find the command line in the makefile. make trucates the command.
[17:07] eikke: shaver: haha
[17:07] briznad has joined the channel
[17:08] mraleph: shaver: I am looking forward for V8 Isolates landing on bleeding_edge. It would be interesting to see what kind of protocols people will adopt for them. 
[17:08] shaver: huh
[17:08] piscisaureus: tiemonster: ok. gotta go. I'm not re sure that is the problem
[17:08] shaver: where can I read about those?
[17:08] tiemonster: piscisaureus: ok. thanks anyways.
[17:09] mraleph: shaver: well it's nothing special just several V8 VMs in the same process.
[17:09] shaver: oh
[17:09] shaver: well that'll be very pleasing to node
[17:09] shaver: are they totally distinct?
[17:09] mraleph: shaver: yeah. that's why they are called Isolates.
[17:09] jakehow has joined the channel
[17:09] vineyard has joined the channel
[17:09] stride has joined the channel
[17:09] shaver: and do you provide any wrappers for communicating between them if the embedding so desires?
[17:10] shaver: (we use something based on proxies, basically just shortcutting the API<->API JS-engine-as-host-object stuff)
[17:10] mraleph: currently one can have only single V8 per-process. I don't think that we have anything in place currently. But I don't follow this closely. The effort is public though so you can check API. 
[17:10] bradleymeck: ryah has noted that he does not want multiple v8's in a single node process currently (basically anything that may allow shared memory it looks like)
[17:11] banjiewen has joined the channel
[17:11] eikke: mraleph: any specific use cases for that work?
[17:11] jimt has joined the channel
[17:11] mraleph: bradleymeck: even if ryah does not want that he can't prevent people from making addon that will invoke V8 API for Isolates creation :-)
[17:12] ryanfitz has joined the channel
[17:12] mraleph: http://code.google.com/p/v8/source/browse#svn%2Fbranches%2Fexperimental%2Fisolates
[17:12] cagdas has joined the channel
[17:13] airhorns has joined the channel
[17:13] bradleymeck: eikke, nothing really over child processes except auto suicide and possibility of sharing memory easily
[17:13] mraleph: eikke: IMHO proper support for Web Workers is the motivation behind isolates. But I am not sure
[17:14] mraleph: bradleymeck: I would not say "easily" :-) not in pure JS at least.
[17:14] eikke: ah, workers makes sense idd
[17:14] mike5w3c_ has joined the channel
[17:14] langworthy has joined the channel
[17:15] aconbere has joined the channel
[17:16] dgathright has joined the channel
[17:17] malkomalko has joined the channel
[17:18] malkomalko: anybody use any postgres drivers here with expresso?  We're having problems with the tests not closing
[17:18] pair has joined the channel
[17:18] bingomanatee: are you manulally closing the conn to your database?
[17:19] astoon has joined the channel
[17:19] kunley has joined the channel
[17:19] kunley: hi
[17:19] malkomalko: we're trying to yes
[17:19] malkomalko: we've been at straws for the last hour
[17:19] malkomalko: very simple case, if we take the same code out of the test and just run a regular node script, it returns fine and closes
[17:20] bingomanatee: havent used postgres per se but I found using the mongo drivers that unless you manually closed your database conn your scripts would hang open.
[17:20] strmpnk_ has joined the channel
[17:20] tjholowaychuk: yeah.. node cant just assume when you want something closed
[17:20] kunley: question about expresso testing: how it is supposed to work? On my machine it kinda hangs, displaying test results only after Ctrl-C. If tests are not passed it displays the outcome but still hangs.
[17:21] kunley: Do i only have this behaviour?
[17:21] evl has joined the channel
[17:21] tjholowaychuk: haha
[17:21] evl has joined the channel
[17:21] tjholowaychuk: depending on what you are testing you need to clearInterval()s, close connections etc
[17:21] devrim: hi guys - im going to create a shell command executing web server (and very new to node) should i choose express or connect ?
[17:21] tjholowaychuk: this is NOT a fault of expresso
[17:22] tjholowaychuk: it cannot assume these things for you
[17:22] GasbaKid has joined the channel
[17:22] tjholowaychuk: devrim: for something that small it doesnt matter, plain node, connect, express
[17:22] kunley: I'm not saying this is the fault, but didn't find any indication that it's the expected result.
[17:22] tjholowaychuk: its not
[17:22] tjholowaychuk: you just have to close things
[17:22] JimBastard: kunley: the author of expresso is a meth head, i'd avoid it at all costs
[17:23] devrim: tjholowaychuk: thx - no performance improvements on express or anything i'd miss?
[17:23] JimBastard: :-D
[17:23] tjholowaychuk: hahahaha
[17:23] JimBastard: im just kidding tjholowaychuk is alright
[17:23] devrim: it's going to get 1000 reqs/sec
[17:23] tjholowaychuk: devrim: they can all handle well over that
[17:23] devrim: zipping, unzipping, copying moving stuff around
[17:23] kunley: ok then, i just jumped into testing a default app created by express.
[17:23] malkomalko: yah, but if a pg driver gives me an .end, and I call that after my test is complete in the callback, it should close and move on correct?
[17:24] malkomalko: I understand that it can't just guess :)
[17:24] chapel: hey JimBastard, how are things?
[17:24] chapel: I heard nodester (aka nodefu) got hacked and changed names again?
[17:24] tjholowaychuk: malkomalko: yeah if the event loop is not active it should be fine
[17:25] tjholowaychuk: kunley: the default generated app should not hang though for $ expresso
[17:25] tjholowaychuk: I just tried, and it's fine for me
[17:25] malkomalko: gist incoming
[17:25] malkomalko: one sec
[17:25] jbpros_ has joined the channel
[17:26] tjholowaychuk: JimBastard: you have the exact same issues with vows lol so shush
[17:26] kunley: tj: well then will check further. Anyway thanks for the hind with closing stuff. And JimB ye didn't catch me on yer joke bait ;)
[17:26] malkomalko: I don't like vows
[17:27] tjholowaychuk: its great if you want to have a callback per assertion
[17:27] malkomalko: https://gist.github.com/3068f103ee62f667bab4
[17:27] malkomalko: I just don't like the interface, I feel like vows gets in my way
[17:27] malkomalko: so there's a basic test that hangs after the assertion
[17:27] pair: Hey all.  I am trying to write a giant data array to a file. The array contains around 840,000 entities and they are written to the file, but I am not getting any response returned.
[17:27] malkomalko: if you take the same code out, stick it in a js file, and run it, it returns properly without hanging
[17:28] technoweenie has joined the channel
[17:28] tjholowaychuk: malkomalko: hmm not sure off hand, it looks fine, although assert is not passed to the function anymore (depending on what version you are running)
[17:28] bmavity has joined the channel
[17:28] malkomalko: so, either I'm missing something, or something sucks
[17:28] broofa has joined the channel
[17:29] tjholowaychuk: and that callback is getting fired for sure?
[17:29] malkomalko: yup
[17:29] tjholowaychuk: im going to be rewitting expresso some time to use expect() instead, I can do better reporting with that and prevent all kinds of funky race conditions like double callbacks etc
[17:29] malkomalko: in the console.log's we get the err, and we see undefined for the result
[17:29] tjholowaychuk: hmMmM
[17:29] malkomalko: in both casses
[17:30] gnrfan has joined the channel
[17:30] malkomalko: we tried running it in parallel with a teardown to close the pg connection, but it still just hangs
[17:30] tjholowaychuk: malkomalko: if you remove assert.eql(obj.index, result.index); does it exit?
[17:30] malkomalko: serially I mean
[17:31] malkomalko: the thing is, if the test passes, if we put in some object to hardcode it, it exits and passes fine
[17:31] malkomalko: and yes, it exits then as well
[17:31] tjholowaychuk: hmm the failed assertion would be preventing the connection from closing then
[17:31] tjholowaychuk: that is the problem with this stuff
[17:32] tjholowaychuk:  you almost need to "register" things that are active, so that when expresso reaches some failed assertions it can react
[17:32] tjholowaychuk: but that also complicates things more
[17:33] herbySk has joined the channel
[17:33] malkomalko: hrmmrmm
[17:33] Ori_P has joined the channel
[17:34] eee_c has joined the channel
[17:35] luke` has joined the channel
[17:36] tk has joined the channel
[17:36] djanowski has joined the channel
[17:36] malkomalko: is there any paradigm to look for an error and then callback something else cleanly?
[17:37] tjholowaychuk: malkomalko: for example with assert.response() I assume every assertion is root-level so I simply ++pending and --pending || server.close()
[17:37] sprout has joined the channel
[17:37] brianc: malkomalko: which driver?
[17:37] tjholowaychuk: but I cant do that with everything obviously
[17:37] dguttman has joined the channel
[17:37] malkomalko: yours
[17:38] malkomalko: :D
[17:38] malkomalko: I think you two should fight it out
[17:38] brianc: k looking at it now
[17:39] pair: malkomalko: we are trying to write large amounts of data held in memory to a file. We can write all the data, but when the data is larger than 800,000 or so elements, node hangs EVEN THOUGH all the elements get written. If we reduce it to 800,000 elements, it returns every time.
[17:40] yozgrahame has joined the channel
[17:40] Ori_P has joined the channel
[17:42] cronopio_ has joined the channel
[17:42] dgathright has joined the channel
[17:43] mikeal: ryah_: did you submit a talk to this yet?
[17:43] mikeal: http://www.oscon.com/oscon2011/public/cfp/144
[17:43] brianc: malkomalko: still looking at this...
[17:43] brianc: you're saying if the test fails then pg.end never gets hit?
[17:44] kunley: tj: aaah got it. So expresso test hangs after putting session mware onto the stack.
[17:44] malkomalko: yes
[17:44] malkomalko: it basically hangs
[17:44] brianc: malkomalko: assert.eql will throw an exception which will mean pg.end will never get called
[17:44] tjholowaychuk: kunley: ah, yes, if you use the MemoryStore
[17:45] tjholowaychuk: you need to do var MemoryStore = express.session.MemoryStore; var store = new MemoryStore({ reapInterval: -1 })
[17:45] tjholowaychuk: and pass that to session()
[17:45] tjholowaychuk: to get rid of the setInterval()
[17:45] pt_tr_ has joined the channel
[17:45] brianc: malkomalko: I believe there is a "beforeExit" event in expresso
[17:45] malkomalko: I tried a pg.end in uncaughtException
[17:45] brianc: tjholowaychuk: is that "beforeExit" event still there?
[17:46] evl has joined the channel
[17:46] tjholowaychuk: yeah, but it proxies exit()
[17:46] tjholowaychuk: so it is no use in that case
[17:46] brianc: malkomalko: the assert.eql exception is actually CAUGHT though so uncaughtException probably wont work
[17:46] tjholowaychuk: I used to exit on the first exception
[17:46] kunley: k thx guys for the quick explanation! Best to know directly from the author :]
[17:46] tjholowaychuk: kunley: sorry its a bit confusing, but I promise it does make sense haha
[17:47] cronopio_: ryah_: holly shit!, I've been waiting for this => Alguien sabe porque me sale este error, si NO estoy  creado varios elementos con el mismo ID 
[17:47] cronopio_: Tried to register widget with id==BtnLogin but that id is already registered
[17:47] tjholowaychuk: I suppose I could check NODE_ENV=test, and disable the interval
[17:47] cronopio_: http://localhost:3000/dojo-toolkit/dojo/dojo.js
[17:47] cronopio_: Line 29
[17:47] cronopio_: fuck
[17:47] evl has joined the channel
[17:47] brianc: malkomalko: what I did when testing node-postgres was to keep a sort of sink of events. so you give it an "expect this many" and then you increment the expectation count. when the count is hit you can call pg.end
[17:47] cronopio_: ryah_: holly shit!, I've been waiting for this => https://github.com/ry/node/commit/068b733583a4f0781a8418ddf42f7912e3dd53a6
[17:47] kunley: no tj it actually makes sense as memory store would introduce new 'process' wchch hangs. Fine for me.
[17:48] hellp has joined the channel
[17:49] tjholowaychuk: brianc: yeah that is what i do with assert.response() as well
[17:49] asimismo has joined the channel
[17:50] Shahid_ has joined the channel
[17:50] brianc: malkomalko: there's a kinda tricky chicken before the egg problem you run into when testing async things that "okay after everything, no matter what, you have to do this thing"
[17:50] danyork has joined the channel
[17:50] brianc: malkomalko: because you never know when 'after everthing' is 
[17:50] tjholowaychuk: yup
[17:51] isaacs has joined the channel
[17:51] tjholowaychuk: i provide timeouts in some cases
[17:51] malkomalko: yah we were looking at your test code brianc
[17:51] tjholowaychuk: you almost need to try/catch that block haha
[17:51] malkomalko: I think we actually grabbed your sink code and it still didn't work
[17:51] tjholowaychuk: well no
[17:51] tjholowaychuk: haha
[17:51] tjholowaychuk: fuck
[17:52] Shahid_: HI everyone
[17:52] isaacs: ello Shahid_ 
[17:52] Ori_P has joined the channel
[17:52] brianc: malkomalko: yah my little bastardized test framework isn't very clean. i need to split out 'sink' into it's own file and so on
[17:52] Shahid_: i trying to understand these lines
[17:52] Shahid_: var fu = require("./fu"),     sys = require("sys"),     url = require("url"),     qs = require("querystring");
[17:52] brianc: malkomalko: but using the "sink" you could do something like this...*forking your gist & updating*
[17:52] Shahid_: what its mean by require("sys")
[17:53] kristsk: #include <stdio.h>
[17:53] malkomalko: so maybe we need to think about a good little utility separate from testing frameworks that other frameworks can use for this sort of thing
[17:53] ROBOTARMY has joined the channel
[17:53] brianc: https://gist.github.com/395f2b51b05b680b76e1
[17:54] brianc: malkomalko: yah "sink" could be helpful. the api isn't exactly super well thought out because I just made it for my own purposes but it could come in handy.  If you want I can rip it out into it's own npm package later tonight
[17:54] tjholowaychuk: malkomalko: I plan on eventually re-writting expresso, and separating the code cov stuff out, with html coverage reporting, expect() etc
[17:54] chapel: Shahid_: require('something') means it is being included
[17:55] tjholowaychuk: but to many deps gets annoying to maintain
[17:55] chapel: it is akin to #include <stdio.h> like kristsk said
[17:55] Shahid_: got it
[17:55] evl has joined the channel
[17:55] evl has joined the channel
[17:55] malkomalko: I want to say that we tried this method brianc, we can just grab your Sink method and try this?
[17:55] Shahid_: thanks
[17:55] chapel: :)
[17:55] sveimac has joined the channel
[17:56] brianc: malkomalko: https://gist.github.com/795306
[17:56] malkomalko: do you need those asserts directly in that function?
[17:56] beawesomeinstead has joined the channel
[17:57] Shahid_: any body help me to understand sample chat program on nodejs.org, i understand little bit client.js but i cant figure out how the server accept connection from client and how its received messages from clients and send it back to all clients 
[17:57] w0rse_ has joined the channel
[17:57] brianc: in the "kill" function? Don't need them, can just throw an exception instead. 
[17:58] Shahid_: in client.js when user press join button its shows the chat window and then use ajax 
[17:58] brianc: and the other assert.equal(internalCount, expected) is probably an impossible case in node's single-threaded environment 
[17:58] Shahid_: to connect the server 
[17:58] binarypie has joined the channel
[17:58] dguttman has joined the channel
[17:58] Shahid_: but at server side i cant understand which method or function is responsible to listen any message from anyone
[17:58] brianc: malkomalko: like I said I put it together as fast as I could - it works - but it might not be incredibly well suited for sharing. so i can package it up, document the api, etc, later tonight if you'd like
[17:58] Coal has joined the channel
[17:59] dguttman has joined the channel
[17:59] malkomalko: there's no rush
[17:59] malkomalko: This type of testing is always a sore spot for me with node, not any library particularly 
[17:59] tk has joined the channel
[17:59] tjholowaychuk: malkomalko: yeah it takes some good practice to cover your bases well
[18:00] tjholowaychuk: when i get around to that rewrite I will see what I can do
[18:00] malkomalko: there's got to be some api out there just waiting to be written that handles this thing nicely.. guess we'll find it
[18:01] m0rganic1 has left the channel
[18:01] farhadi has left the channel
[18:01] tjholowaychuk: a lot of it is a mentality thing, people are like ok, im writing my app, i want this db connection to stay open. and the when they write the tests they expect it to just close on its own haha
[18:01] brianc: malkomalko: I thought about having pg emit an 'idle' event when all the clients in the pool were returned and not executing queries so you could do pg.on('idle', pg.end.bind(pg))
[18:02] hunterloftis has joined the channel
[18:02] malkomalko: exactly
[18:03] brianc: malkomalko: still get into situations where you have idle connections between tests and will close down the pool to early
[18:03] warz has joined the channel
[18:03] warz: ot
[18:03] brianc: malkomalko: i'll let my brain chew on it today a bit. i'm at work right now so I can't really go nuts
[18:03] hobodave has joined the channel
[18:04] malkomalko: also tjholowaychuk, slightly off topic, but with express 1.03 the default jade template engine doesn't work to work with partials
[18:04] malkomalko: it looks for erb
[18:05] malkomalko: that's not right actually, meaning you have to give the full path with the extension for the first partial
[18:05] tjholowaychuk: woah..
[18:05] tjholowaychuk: that does not sound right
[18:05] tjholowaychuk: the tests all pass
[18:05] tjholowaychuk: the parent view either needs an extension or app.set('view engine', 'jade')
[18:05] tjholowaychuk: otherwise it cant guess
[18:06] malkomalko: yup, with app.set('view engine', 'jade')
[18:06] tjholowaychuk: durr
[18:06] tjholowaychuk: sounds buggy, which is odd I have a lot of tests related to that
[18:06] malkomalko: the first time it see's a partial in a layout, it actually demands the extension for some reason
[18:06] malkomalko: all other partials after that doesn't need an extension
[18:07] tjholowaychuk: specifically the layout?
[18:07] malkomalko: I replicated it on multiple machines
[18:07] tjholowaychuk: I might not have tests for partials in a layout
[18:07] malkomalko: that's where I saw it yes
[18:07] tjholowaychuk: I will look into it
[18:09] evl has joined the channel
[18:09] evl has joined the channel
[18:10] tekky has joined the channel
[18:10] perlmonkey2 has joined the channel
[18:12] malkomalko: doesn't look like it's working brianc
[18:12] tfe_ has joined the channel
[18:12] malkomalko: oh well :)
[18:12] kristsk: fragtime! 
[18:12] kristsk: bye
[18:13] statim has joined the channel
[18:13] saschagehlich has joined the channel
[18:13] isaacs: ryah_: hey, how would you feel about a patch to support "0755" as a mode value instead of a number?
[18:13] sudoer has joined the channel
[18:13] isaacs: ryah_: ie, if the mode is a string, then do parseInt(mode, 8)
[18:14] isaacs: ryah_: since our language overlords, in their infinite wisdom, removed one of the best features of this lovely languge.
[18:14] bingomanatee has joined the channel
[18:15] tjholowaychuk: malkomalko: these both pass https://github.com/visionmedia/express/commit/59d18d245f8dc13bee5f541e7bab9360d2d68a43
[18:15] tjholowaychuk: :s something else must be going on, or some other variation
[18:16] langworthy has joined the channel
[18:17] bingomanatee: ping ryah_
[18:18] malkomalko: aight, I'll see if I can get it documented exactly
[18:18] ryah_: isaacs: ok
[18:18] ryah_: isaacs: on umask too
[18:18] astoon has joined the channel
[18:18] isaacs: yep
[18:18] ryah_: bingomanatee: yes?
[18:18] isaacs: and mkdir and a few others
[18:19] bingomanatee: ryah_ and isaacs: the PHP meetup guy in SF woudl like to know if you can commit to speaking and if so what date in late February would be best for you?
[18:19] tk has joined the channel
[18:20] bingomanatee: I promise it will be cool - the meetup group has already expressed strong interest in the topic and I am sure it will be well attended. 
[18:20] mjr_ has joined the channel
[18:20] springmeyer has joined the channel
[18:21] djanowski: tjholowaychuk: ping
[18:21] tjholowaychuk: djanowski: pong
[18:21] djanowski: tjholowaychuk: hey there. is express compatible with 0.3?
[18:21] tjholowaychuk: djanowski: not quite yet, will be working on that soonish
[18:22] tjholowaychuk: since 0.4.0 is right around the corner
[18:22] soveran has joined the channel
[18:22] q_no has joined the channel
[18:22] mjr_: djanowski: what are you guys using node for?
[18:23] ryah_: bingomanatee: will discuss on email
[18:23] bingomanatee: Hey TJ - feel like coming down to SF and presenting on express to the PHP meetup group?
[18:23] djanowski: tjholowaychuk: ok, i think the parsing of params as an array is broken (just in case you hadn't noticed yet)
[18:23] jherdman has joined the channel
[18:23] bingomanatee: sweet
[18:23] tjholowaychuk: djanowski: yup im aware of that one
[18:23] tjholowaychuk: bingomanatee: nope lol
[18:23] bingomanatee: okie
[18:23] djanowski: tjholowaychuk: cool, great. thanks!
[18:23] tjholowaychuk: US customs sucks
[18:23] tjholowaychuk: I dont like the US haha
[18:23] bingomanatee: its a sensual experience not to be missed. 
[18:23] tjholowaychuk: Canada FTW
[18:23] aurynn: I like Canada.
[18:23] djanowski: mjr_: currently using it for zombie.js to test a javascript library
[18:24] aurynn: I may be biased by living here, though
[18:24] konobi: ditto
[18:24] bingomanatee: Hey - its not easy bludgening the rest of the world into submission. 
[18:24] tjholowaychuk: :)
[18:24] bingomanatee: You want to give it a try - be my guest! We'll back off --
[18:25] bingomanatee: we have probems of our own to deal with. Have you SEEN "Jersey"?
[18:25] tjholowaychuk: bingomanatee: i dont think they would appretiate me bashing php either
[18:25] tjholowaychuk: there would be plenty of that
[18:25] tjholowaychuk: lol
[18:25] bingomanatee: oh - I think it would be cool. 
[18:26] bingomanatee: They need a little kick in the ass. 
[18:28] CrabDude has joined the channel
[18:28] bradleymeck has joined the channel
[18:29] isaacs: ryah_: for process.umask, is it cool if the parseInt happens in JS, and leave the binding as-is?
[18:29] bingomanatee: A lot of people in the PHP meetup use a variety of frameworks - I mean before we kill them we need to at least give them a chance to convert. 
[18:30] tjholowaychuk: bingomanatee: I would do it if it was in canada haha
[18:30] tjholowaychuk: well, if i did not have to fly
[18:30] bingomanatee: scared to fly?
[18:31] tjholowaychuk: no its just annoying
[18:31] tjholowaychuk: i was just in sfo a few days ago the US is so scared of everything it takes so long
[18:31] tjholowaychuk: and i get interrogated every time lol
[18:32] bingomanatee: Yeah. Its a drag. 
[18:32] bingomanatee: But it keeps the rhinoceroces off the airplane. 
[18:33] mraleph: the world will open all borders eventually. 
[18:33] mjr_: tjholowaychuk: you were in SF?  Did you invoke a node meetup?
[18:33] mraleph: hope this happens before alien invasion.
[18:33] tjholowaychuk: mjr_: nah we went to lake tahoe for the week :D
[18:33] mjr_: mraleph: I sure hope so.  We need you to come to the US and teach us about the dark mysteries of V8.
[18:34] mraleph: mraleph: I need someone to teach me about that as well :-)
[18:34] mjr_: ha
[18:34] bingomanatee: The aliens are already here. 
[18:34] mraleph: I am talking to myself
[18:34] bingomanatee: Have you seen "Jersey Shore"? 
[18:34] bingomanatee: They are so apathetic they even forget to wear skin colored makeup sometimes. 
[18:35] HAITI has joined the channel
[18:35] bingomanatee: Well I'll see if the Node.js.sfbay crew want to do a retreat in Vancouver :D
[18:37] tjholowaychuk: i still have to ferry to van
[18:37] tjholowaychuk: haha
[18:37] tjholowaychuk: BOO
[18:37] tjholowaychuk: lol
[18:37] tjholowaychuk: jk
[18:38] ericnakagawa has joined the channel
[18:38] hunterloftis: tjholowaychuk: The :javascript jade filter - is that what you'd use to embed a server-side JS object into client-side JS?
[18:38] niklasfi has joined the channel
[18:39] tjholowaychuk: hunterloftis: it doesnt really do much anymore its just basically script type="text/javascript"
[18:39] joelklabo has joined the channel
[18:39] tjholowaychuk: not sure why I have it still actually
[18:39] hunterloftis: tjholowaychuk: Gotcha, then I'll come up with some kind of a helper to drop a JSON object into my script.
[18:40] tjholowaychuk: you can do script\n  | var myStuff = #{JSON.stringify(myStuff)}
[18:41] hunterloftis: tjholowaychuk: Ah nice, I didn't realize the #{ } syntax would work in a | block
[18:41] Evet: which reverse proxy between socket.io websocket and node.js?
[18:41] tjholowaychuk: yup!
[18:41] tjholowaychuk: keep in mind #{} escapes, !{} does not
[18:41] softdrink has joined the channel
[18:42] hunterloftis: ok good to know
[18:42] isaacs: ryah_: https://gist.github.com/raw/795379/247577a15e74355a189b33cca0eb5659bda0c839/0001-Support-octal-strings-for-modes.patch
[18:45] tk has joined the channel
[18:45] niklasfi: i would like to propose a minor change to fs in order to be able to add a position to the options of fs.createWriteStream (and fs.createReadStream). i have changed my fs.js file in the way that intend it to be. do i have to re-compile for my changes to take effect? is this kind of addition wanted? and thirdly where would i submit my patch?
[18:45] jherdman has joined the channel
[18:46] eee_c has joined the channel
[18:46] bingomanatee: is there any healthier way to uninstall node other than wholesale deletion of directories?
[18:46] fly-away has joined the channel
[18:46] mjr_: Is there any healthier activity on the computer for both the body and the soul than the wholesale deletion of directories?
[18:46] mjr_: It's so cleansing.
[18:46] niklasfi: * dont take this serious* why would you even want to uninstall node?  ;)
[18:47] garrensmith has joined the channel
[18:47] mjr_: niklasfi: you have to recompile if you change something in lib
[18:47] james has joined the channel
[18:47] bingomanatee: for a clean install of a new version
[18:47] ossareh has joined the channel
[18:47] MrTopf has joined the channel
[18:47] matclayton has left the channel
[18:47] torgeir_ has joined the channel
[18:47] mjr_: niklasfi: post a gist of your patch to the nodejs-dev list.
[18:47] peol has joined the channel
[18:47] peol has joined the channel
[18:48] sveimac has joined the channel
[18:48] mjr_: I thought they already had positions, but if they don't, then that sounds useful.
[18:49] niklasfi: mir_ i just read the fs.js file but i was not able to find anything that takes position into account
[18:49] garrensmith: hi all
[18:49] niklasfi: mir_: it is alyways set to 'null' i am refering to line 968 here
[18:50] admc has joined the channel
[18:50] saschagehlich: ryah_: how can I check whether a file descriptor is still available / valid?
[18:50] garrensmith: tjholowaychuk: any specific thing I need to do to test express with expresso. I cant get my test to send the body to the route?
[18:51] niklasfi: mir_ is it normal that make test returns errors though the lib files are unchanged?
[18:51] mjr_: niklasfi: sorry, don't have time to look at fs right now.
[18:51] mjr_: niklasfi: but tests at master don't necessarily always pass
[18:52] niklasfi: mjr: ok..
[18:52] mjr_: You should try with a clean checkout first though and make sure you didn't make any new tests fail.
[18:52] mjr_: The tests usually pass though.
[18:53] bingomanatee: ACTION basks in the cleansing fire
[18:53] Coal has joined the channel
[18:55] pifantastic has joined the channel
[18:58] tokumine has joined the channel
[18:58] saschagehlich: https://gist.github.com/ae428f56d65c7228a1b9 << can somebody help me out here?
[19:01] frodenius: saschagehlich㇀ clear the interval after closing the file
[19:02] jamesarosen has joined the channel
[19:02] clarkfischer has joined the channel
[19:02] eee_c1 has joined the channel
[19:03] farhadi has joined the channel
[19:03] ossareh has joined the channel
[19:03] garrensmith: should a session last past more than one request?
[19:04] stride: yeah
[19:04] saschagehlich: okay well my actual problem is that I'm doing a file download with node - but I want to stop the download when my socket.io client is gone. the problem: when I kill the HTTP-Connection and close the file descriptor it happens that there is still data coming from the http connection and it tries to write to the file descriptor. which causes a EBADF - Bad File Descriptor
[19:05] Aikar: how come when i add a github submodule to my git repo, its not targetting the right branch (looks like HEAD?) and submodule update doesnt bring down the latest changes of the submodule
[19:05] codelotus has joined the channel
[19:05] stride: can't you check if the stream is writeable before pushing stuff into the file saschagehlich?
[19:05] saschagehlich: well how can I check whether the stream is writable?
[19:05] DracoBlue has left the channel
[19:05] muk_mb has joined the channel
[19:05] Aikar: i tried git submodule add -f -b master http://github.com/blah libs/blah    and it says master branch already exists
[19:06] stagas: saschagehlich: did you try: if (fd) fs.writeSync..
[19:06] stride: saschagehlich: it should have a .writeable (.writable in some older version) property
[19:06] saschagehlich: yes but a file descriptor is just a number so this is always true
[19:06] dgathright has joined the channel
[19:07] piscisaureu_ has joined the channel
[19:07] clarkfischer: Aikar: You shouldn't need to specify the master branch....
[19:08] springify has joined the channel
[19:08] clarkfischer: Also git sometimes is weird about flag order, try git submodule add -b master -f git://github.com/user/repo.git lib/repo
[19:08] stagas: if (fd) try { fs.writeSync } catch(e) { delete fd }
[19:09] piscisaureu_ has joined the channel
[19:09] bmavity has joined the channel
[19:09] Aikar: clarkfischer: #git told me told modules were designed to save the exact commit you added it on, and submodule update doesnt keep the submodule up to date
[19:09] saschagehlich: stride: fd.writeable / fd.writable are both always undefined
[19:09] Aikar: told me submodules*
[19:10] stride: saschagehlich: don't you have a stream object somewhere?
[19:10] clarkfischer: Aikar: This is true, but the master branch is default, and implied if you don't specify
[19:10] clarkfischer: Aikar: You can always cd into the dir, and `git pull` to get the latest....
[19:11] springif` has joined the channel
[19:11] saschagehlich: stride: give me a second, I'll try it with a writablestream
[19:12] jpld has joined the channel
[19:12] jherdman has joined the channel
[19:13] Aikar: clarkfischer: yeah thats what i had to do (had to switch to master first)
[19:13] Aikar: clarkfischer: i was just expecting it to work like svn externals
[19:14] yozgrahame has joined the channel
[19:14] yozgrahame has joined the channel
[19:16] jherdman has joined the channel
[19:16] saschagehlich: stride: okay, seems to work. I'll have a look how it works in production
[19:17] masahiroh has joined the channel
[19:17] tonyskn has joined the channel
[19:19] slaskis: is it a known issue that if i require("a") from 'b' and require("b") from 'a' that it doesn't work?
[19:19] fairwinds: hi. anyone aware of country states module for node, need something for ajax lookup for client select widgets
[19:20] frodenius: slaskis㇀ well what do you expect? 
[19:20] farhadi has joined the channel
[19:20] Coal has joined the channel
[19:20] jamesarosen has joined the channel
[19:20] slaskis: frodenius: well, i only get an {} when i expect the function that i've exported in the other file
[19:21] frodenius: have you exported it before calling require('b') ?
[19:21] stride: slaskis: I don't really see why that would not work
[19:21] stride: slaskis: have you tried to require a inside be within a process.nextTick?
[19:22] slaskis: stride: no, i havn't tried that.
[19:23] charlenopires has joined the channel
[19:23] tlrobinson_ has joined the channel
[19:24] clarkfischer: slaskis: Both of these modules work independently?
[19:24] tiemonster: ryah_: are you still around?
[19:25] Aikar: skohorn: i dont know if its known but it is a very annoying bug
[19:25] slaskis: clarkfischer: yeah, i use both in other modules
[19:25] slaskis: stride: it works now that i lazy load that module
[19:25] Aikar: i might look into fixing it tonight/later this week
[19:25] Aikar: if i can.. :/
[19:26] Aikar: actually i think it is fixable
[19:27] farhadi has joined the channel
[19:27] garrensmith: anyone used cloudant with cradle?
[19:28] philipharrison has joined the channel
[19:28] mscdex: fairwinds: maybe the GeoWorldMap database files from here might help?: http://www.geobytes.com/FreeServices.htm
[19:29] fairwinds: mscdex: thanks, will check it out
[19:29] tk has joined the channel
[19:33] tk has joined the channel
[19:34] hornairs has joined the channel
[19:34] mscdex: fairwinds: alternatively there is http://download.geonames.org/export/dump/ and for zipcode data: http://download.geonames.org/export/zip/
[19:35] garrensmith: tanepiper: do you use cradle for your couchdb?
[19:35] tanepiper: garrensmith: yes
[19:36] Aikar: slaskis: haha...
[19:36] garrensmith: tanepiper: I want to connect to cloudant, the url I am given required basic auth, Do I just put the whole url in the connection string? I'm getting a cant find domain error?
[19:36] Aikar: slaskis: the change i made to node last night that ryan accepted actually fixed the issue
[19:37] Sami_ZzZ has joined the channel
[19:37] pengo has joined the channel
[19:37] Aikar: well partially
[19:37] Aikar: the references are correct, but if a includes b and b includes a, b cant use a's exports until after b has finished loading so a can finish loading completely
[19:38] Aikar: before my patch a was loaded twice
[19:38] Coal has joined the channel
[19:39] pt_tr has joined the channel
[19:39] vasihappyface has joined the channel
[19:39] Aikar: before: https://gist.github.com/795490   after patch (latest master) https://gist.github.com/795494
[19:40] fairwinds: mscdex: k, cool. downloading some stuff now.
[19:40] vasihappyface: please help! i'm having problems when i try to build node.js : build faild: task failed (err #2): {task: libv8.a SConstruct -> libv8.a}
[19:41] tek has joined the channel
[19:41] tiemonster: vasihappyface: yeah - hit that earlier
[19:42] tiemonster: are you building on windows?
[19:42] vasihappyface: yes
[19:42] vasihappyface: win 7
[19:42] sechrist has joined the channel
[19:42] tiemonster: on cygwin?
[19:42] vasihappyface: yes
[19:42] tiemonster: ugh
[19:43] tiemonster: I had to close all of my cygwin windows, find ash.exe, run it, and then run `rebaseall -v`
[19:43] Gregor: I can't help you with Windows, but I can help to point out that the line you've pasted is entirely useless, as all it informs us of is that it didn't compile.
[19:44] tiemonster: Gregor: that's about all the detail it gives
[19:44] Gregor: Oh really? Awesome :P
[19:44] tiemonster: yeah
[19:44] herbySk has joined the channel
[19:44] Gregor: Well then, proceed with your terrible build system :P
[19:44] tiemonster: there must be some way to set the verbosity
[19:44] TheEmpath: go node!
[19:44] tiemonster: it's definitely less verbose than on Linux
[19:45] Max-Might has joined the channel
[19:45] vasihappyface: i've tried the rebase thing and did'nt work
[19:45] ryah_: i think we should drop the querystring module
[19:45] ryah_: objections?
[19:45] ryah_: you have 30 seconds.
[19:45] tiemonster: vasihappyface: do you have all the build dependencies installed?
[19:45] ryah_: done.
[19:45] tiemonster: ryah_: hey!
[19:46] bradleymeck: ryah_ drop it, its an outlier
[19:46] cronopio_: wtf?
[19:46] stagas: no don't
[19:46] bradleymeck: throw it into path or something
[19:46] vasihappyface: i think so ... yes i used a tutorial to install it so i think it's ok
[19:46] vasihappyface: https://github.com/ry/node/wiki/Building-node.js-on-Cygwin-(Windows)
[19:46] piscisaureus: url.parse(urlStr, parseQueryString=false)
[19:46] tiemonster: ryah_: our software engineering class has been tasked with contributing to an open source project, and we want to adopt Node
[19:47] jamesarosen has joined the channel
[19:47] tiemonster: any ideas for a good bug/feature to adopt?
[19:47] philipharrison has joined the channel
[19:47] tiemonster: we were going to do the Win32 setenv/unsetenv but can't get it to compile on windows
[19:47] keks: only dead bugs are good bugs.
[19:47] ryah_: tiemonster: yes, you could do some win32 stuff
[19:47] tiemonster: lol
[19:47] ryah_: piscisaureus: you there?
[19:48] piscisaureus: ryah_: umm so so
[19:48] piscisaureus: ryah_: what's up
[19:48] tiemonster: ryah_: couldn't get the mingw method working
[19:48] ryah_: piscisaureus: do you have any features you'd like tiemonster's class to fix for mingw?
[19:48] ryah_: tiemonster: it works
[19:49] piscisaureus: ryah_: yeah I spoke to tiemonster already, but node won't compile for him
[19:49] tiemonster: could be Windows 7 issues. I may try XP later.
[19:49] farhadi has joined the channel
[19:49] brapse has joined the channel
[19:49] ryah_: tiemonster: you could fix the build :)
[19:49] piscisaureus: tiemonster: windows 7 wfm
[19:49] tekky has joined the channel
[19:49] ryah_: how about that for a project?
[19:49] piscisaureus: would be useful :-)
[19:49] torgeir_ has left the channel
[19:49] tiemonster: ryah_: we have two weeks
[19:50] tiemonster: :-)
[19:50] ryah_: tiemonster: fix the build, fix some tests
[19:50] Fullmoon has joined the channel
[19:50] bradleymeck: give me chroot!
[19:50] tiemonster: tests would probably be good
[19:50] tiemonster: what "build" are you referring to?
[19:51] piscisaureus: tiemonster: I don't mind. go figure out what went wrong with your build, because I have no clue
[19:51] tiemonster: lol
[19:51] piscisaureus: `make` fails, right?
[19:51] cronopio_: ryah_: Great for de dtrace providers!!
[19:51] piscisaureus: make it work :-)
[19:51] tiemonster: piscisaureus: yeah - but rerunning the command that it failed on works fine
[19:51] dgathright has joined the channel
[19:51] piscisaureus: so now it builds fine?
[19:51] tiemonster: nope
[19:52] tiemonster: but the command it chokes on works fine
[19:52] soveran has left the channel
[19:52] tanepiper: garrensmith: take out the http
[19:52] piscisaureus: so now there is something else that fails?
[19:52] piscisaureus: what's that?
[19:52] tiemonster: no - it's failing on the same thing
[19:52] tiemonster: but if I copy that command and run it independently, it works fine
[19:52] tiemonster: that .o
[19:53] piscisaureus: oh. probably a python issue then
[19:53] piscisaureus: using pything 2.7>
[19:53] garrensmith: tanepiper:  thanks, but now how do I do the auth, in the option object?
[19:53] tiemonster: 2.7.1 installed
[19:54] piscisaureus: try getting rid of cygwin as well if you can miss it (not if you really need it for other stuff)
[19:54] piscisaureus: 2.7.anything is ok
[19:54] tiemonster: cygwin is gone
[19:54] tiemonster: as far as I can tell
[19:55] piscisaureus: hmm. I don't know then
[19:55] piscisaureus: but if you're a CS student you should be able to figure it out, heh
[19:55] vasihappyface: sorry i was trying something ... i think i'll try a virtual box :D
[19:55] tiemonster: piscisaureus: :-)
[19:56] piscisaureus: it would be really helpful to us, actually. we want the build process to be smooth and flawless
[19:56] vasihappyface: thx anyway 
[19:56] farhadi has joined the channel
[19:56] piscisaureus: maybe it's "c:\users\too deep path with spaces"
[19:56] piscisaureus: maybe u need to run in elevated mode
[19:57] k04n has joined the channel
[19:57] mscdex: maybe cygwin sucks
[19:57] mscdex: :p
[19:58] tekky has joined the channel
[19:58] ryanfitz has joined the channel
[19:58] tanepiper: garrensmith: not options, there is a seperate auth hash
[19:58] piscisaureus: tiemonster: if you find a good way to compile & link with openssl you get extra credit :-)
[19:58] tiemonster: lol
[19:58] tiemonster: piscisaureus: I have increased verbosity using -d on make, and might have a useful stacktrace for you
[19:58] tanepiper: garrensmith: like this, https://gist.github.com/951579c5f9b5e8b74583
[19:59] danoyoung has joined the channel
[20:00] teddy__ has joined the channel
[20:00] tiemonster: piscisaureus: http://pastie.org/1497081 (look at line 27)
[20:00] pdelgallego has joined the channel
[20:00] dandean has joined the channel
[20:00] piscisaureus: tiemonster: you have msvc installed I guess?
[20:00] asimismo: Anybody here using Eclipse for developing node apps? How about with embedded an npm repo embedded in your app?
[20:01] tiemonster: piscisaureus: should I?
[20:01] bingomanatee: ACTION prefers Komodo
[20:01] piscisaureus: tiemonster: no. 
[20:01] jtrally: asimismo: you should use vi and like it :)
[20:01] tiemonster: piscisaureus: I do not
[20:01] asimismo: jtrally: Whatever
[20:01] dguttman_ has joined the channel
[20:02] piscisaureus: tiemonster: the v8 build system thinks you have it, therefore it tries to use a microsoft toolchain instead of the mingw one
[20:02] tiemonster: jtrally: we were forced to use vi our first semester :-P
[20:02] asimismo: Eclipse is my OS!
[20:02] tiemonster: piscisaureus: ideas on how to fix it?
[20:02] asimismo: Besides, I type Dvorak, so keys change position.
[20:03] piscisaureus: tiemonster: there is not a really good solution for that. even mraleph didn't come up with something elegant :p
[20:03] evl has joined the channel
[20:03] piscisaureus: but probably you have some env vars or registry keys garbage left over from an earlier msvc install
[20:03] tiemonster: I have the visual C++ redistributable, whatever that is
[20:04] MattJ has joined the channel
[20:04] piscisaureus: that doesn't matter
[20:05] tiemonster: this computer has never had visual studio on it, to my knowledge
[20:05] farhadi has joined the channel
[20:05] pifantastic_ has joined the channel
[20:06] tiemonster: piscisaureus: looks like it may be bundled with office 2010 pro
[20:06] tiemonster: I'll try again on a clean XP install tomorrow
[20:06] asimismo: Specifically, when using Eclipse for javascript with embedded NPM the links can create cycles that Eclipse blindly follows. Wondered if anywone had a workaround.
[20:06] piscisaureus: ok
[20:07] sveimac has joined the channel
[20:08] charlenopires_ has joined the channel
[20:08] isaacs: asimismo: http://stackoverflow.com/questions/968643/eclipse-ignore-entire-directories/972450#972450
[20:08] isaacs: asimismo: make eclipse ignore .npm directory, and you should be fine
[20:08] mikeal has joined the channel
[20:09] isaacs: asimismo: http://robmayhew.com/eclipse-ignore-folder/
[20:09] isaacs: that may help, too
[20:09] asimismo: isaacs: Yeah, reading that now
[20:09] isaacs: really, though, an IDE that doesn't grok cyclical symlinks is just so badly broken.  this is a bug in Eclipse
[20:11] mraleph has joined the channel
[20:12] charlenopires has joined the channel
[20:12] keks: hi, I'm pretty new to node, is there a good way of reading/writing binary files? readFile and writeFiles didn't work as they use strings not buffers. C style read loops also don't seem apropriate. any hints?
[20:13] isaacs: keks: fs.writeFile and fs.readFile use buffers...
[20:13] isaacs: keks: what version of node are you using?
[20:13] keks: 0.3.6
[20:13] isaacs: keks: yeah, you should get a buffer from readFile
[20:13] isaacs: keks: also, you can use the fs.createReadStream and fs.createWriteStream to stream through the file in chunks
[20:13] keks: isaacs: hm, what about that encoding stuff?
[20:13] isaacs: keks: just don't specify an encoding
[20:13] isaacs: and it won't try to decode it.
[20:14] asimismo: isaacs: Not sure if I agree. I've not heard of other examples of cyclical syntax trees. The JavaScript support in Eclipse was originally built for web development, where you wouldn't typically see symlinks like this, no?
[20:14] keks: isaacs: well i tried to read the file, aes encrypt it, decrypt it and write it back. that messed up the binary data
[20:14] HAITI has left the channel
[20:15] asimismo: isaacs: Thanks for the tips. I hadn't run across a couple of those solutions (I'd been trying to ignore dirs in the build path). Will let you know how it goes.
[20:15] garrensmith: tanepiper: thanks all sorted
[20:15] airhorns has joined the channel
[20:15] bingomanatee: isaacs: if I wanted to filter array notation in express is there a good starting place to work from in the codebase?
[20:15] keks: isaacs: then i left out the encryption login and just read and wrote back to a another file and that still messed up the bnary stuff
[20:15] tanepiper: garrensmith: cool
[20:15] isaacs: asimismo: but node isn't web development ;)  wasn't eclipse originally built for java?  some systems use symlinks there, i thought
[20:15] isaacs: or at least, super deep folders.
[20:15] bingomanatee: sorry - specifically : post body array notation as in my form field is named foo[bar]
[20:15] isaacs: bingomanatee: ask tj
[20:15] pdelgallego_ has joined the channel
[20:15] bingomanatee: thx
[20:16] yozgrahame has joined the channel
[20:16] eee_c has joined the channel
[20:16] tjholowaychuk: bingomanatee: sorry whats this?
[20:16] tg has joined the channel
[20:17] tjholowaychuk: bingomanatee: if you use 2.x it will be fine
[20:17] farhadi has joined the channel
[20:17] bingomanatee: Yeah but I upgraded to 3.x on my deployment server and when I try to nave back it crashes 
[20:17] bingomanatee: so I am kind of stuck - at lesat today. 
[20:17] asimismo: isaacs: I've never seen symlinks used in Java code like that. But the AST builder for JavaScript isn't the same one Eclipse would use in any case.
[20:17] tjholowaychuk: install from source or us 'n' or nvm
[20:18] bingomanatee: can I use NVM to revert a node version?
[20:18] mechanate has joined the channel
[20:18] bingomanatee: or install one?
[20:18] asimismo: Eclipse is not monolithic--the JavaScript support is written by a completely different set of folks. Also, it's on a yearly major release cycle every June, so Node use in Eclipse may not be as mature as would be hoped.
[20:19] tjholowaychuk: bingomanatee: https://github.com/visionmedia/n
[20:19] mechanate: hey I am trying to install on cygwin and I'm getting a keyerror: 'os' in the v8 SContruct any ideas?
[20:19] bingomanatee: sweet I will try 
[20:19] Athox has joined the channel
[20:20] mechanate: basically the same error as this http://pastie.org/pastes/1495150
[20:20] rjrodger has joined the channel
[20:20] CIA-99: node: 03Ryan Dahl 07master * r72dd877 10/ test/message/undefined_reference_in_new_context.out : Fix undefined_reference_in_new_context - http://bit.ly/edahkf
[20:20] CIA-99: node: 03Ryan Dahl 07master * r39ff40e 10/ lib/http.js : 
[20:20] CIA-99: node: Use old http.Client
[20:20] CIA-99: node: This is meant as a path for upgrading to the new http.request() API.
[20:20] ryah_: ^-- this should fix http client problems in v0.3.6
[20:21] ryah_: please test, i'll release a new version today
[20:22] farhadi has joined the channel
[20:24] isaacs: keks: works for me. https://gist.github.com/795574
[20:24] bingomanatee: tjholowaychuk: btw am trying to roll out my general purpose code from noogle into an independant mvc project on git. 
[20:24] jesusabdullah: New API?!
[20:24] isaacs: keks: maybe you're doing something odd with the aes stuff
[20:24] jesusabdullah: Why new api?
[20:24] jesusabdullah: You're going to break SO MUCH CODE
[20:24] bingomanatee: One of the things I am trying to puzzle out is how to do compoennts with multiple possible root folders for views. 
[20:24] MikhX has joined the channel
[20:24] bingomanatee: any thoughts?
[20:25] keks: isaacs: yeah, I feel like the stuff might not be encrypted when he starts decrypting it, they don't use callbacks. I'll look for good examples for how to use them.
[20:25] necromancer has joined the channel
[20:25] bingomanatee: ACTION 's code is already breaking in 0.3.x because the post notation interpretation has changed.
[20:25] necromancer has left the channel
[20:26] aklt has joined the channel
[20:26] Athox: postnowhat?
[20:26] tjholowaychuk: querystring parser
[20:26] Athox: then say that
[20:26] Athox: :P
[20:26] jesusabdullah: I thought querystring changed ages ago
[20:27] jamesarosen has joined the channel
[20:27] Athox: btw
[20:27] Athox: 'already 0.3.x' isn't an already
[20:27] Athox: that should be expected
[20:27] Athox: note the leading 0
[20:27] Athox: nobody's safe until 1
[20:28] pzich has joined the channel
[20:28] evl has joined the channel
[20:28] x_or has joined the channel
[20:28] ddollar has joined the channel
[20:29] montylounge has joined the channel
[20:29] darklajid: Okay, I'm most probably doing something stupid, but - what? I try to use felixge's node-mysql to insert, among others, a date. It's a .query("Insert ... Set ..", [paramshere]); type thing and it works fine - unless I try to insert new Date() (as a timestamp).
[20:30] CIA-99: node: 03Ryan Dahl 07master * r9221b14 10/ (68 files in 10 dirs): Upgrade V8 to 3.0.11 - http://bit.ly/fCLBOq
[20:30] Athox: does it support date objects?
[20:31] darklajid: I'm not sure. I tried to pass the string representation as well, but although the insert succeeds (no error) the column on the server uses the default value (0000-00-00 00:00:00)
[20:32] mraleph: ryah_: updating to 3.0.11 is not the right thing to do
[20:32] ryah_: mraleph: :)
[20:32] mraleph: ryah_: we reverted that from Chromium trunk. 
[20:32] ryah_: mraleph: sigh
[20:32] mraleph: ryah_: there were some nasty crashes.
[20:33] ryah_: force update
[20:33] evl has joined the channel
[20:33] stepheneb_ has joined the channel
[20:33] ryah_: that is, i force reset 9221b14
[20:33] Athox: darklajid, so let me get this straight.. if you pass a string to a date column, no error, but bad representation.. and if you pass a date object, it gives an error?
[20:34] darklajid: Athox: Yep.
[20:34] darklajid: I can "solve" it for my use case by rewriting the query to use the mysql now() method. I'm just curious..
[20:34] pzich has joined the channel
[20:34] Athox: that only works if the timezone is the same on the database server as the application server
[20:35] springmeyer_ has joined the channel
[20:35] bingomanatee: does anyone here pass Mongo ID's through URLs? do you encode them when embedding them inside URLs?
[20:35] darklajid: Right, which is no issue for this "doing first steps in node" app here :)
[20:35] Athox: aha
[20:35] andrzejsliwa has joined the channel
[20:35] JimBastard has joined the channel
[20:35] svenlito has joined the channel
[20:36] Athox: felix will probably pop up in here in a few hours
[20:36] Athox: so you can ask him then
[20:36] Athox: at least he did last night
[20:36] darklajid: Thought he's in my timezone (DE). In a few hours would be _late_ :) But thanks
[20:38] statim has joined the channel
[20:38] Athox: [23:11] felixge
[20:38] Athox: that's UTC
[20:38] darklajid: Thanks. Let's see. I work around it for now, but I'd love to understand what I did wrong..
[20:39] pengwynn has joined the channel
[20:40] JimBastard: anyone know how many organizations there are on github
[20:40] dgathright_ has joined the channel
[20:40] bingomanatee: I have a noogle link that looks like this in my local ubuntu stack: http://localhost:3000/pages/4d3d337f23fa10f00e000001
[20:41] mikedeboer has joined the channel
[20:41] bingomanatee: but on my linode stack it looks like this: http://narrative.io:3000/pages/M?2%C3%B2?%C2%B7%C2%8AD%EF%BF%BD%EF%BF%BD
[20:42] bingomanatee: I am using node v.0.2.6 in both cases - has something changed in express that would explain this?
[20:42] bingomanatee: the id in question is a serialized mongodb id object
[20:43] wilmoore has joined the channel
[20:43] tjholowaychuk: uhh
[20:43] tjholowaychuk: lol
[20:43] tjholowaychuk: hm
[20:43] tjholowaychuk: did you toHexString() or whatever
[20:43] bingomanatee: CHRISTKOVVVVVVVVVVVVVV!
[20:44] bingomanatee: no just echoed. implicit toString. 
[20:44] bingomanatee: <%- page._id %>
[20:44] tjholowaychuk: I dont think they toString() properly
[20:44] tjholowaychuk: cant remember
[20:45] bingomanatee: to the source code!
[20:45] pzich has joined the channel
[20:45] tjholowaychuk: no reason to <%- though use <%=
[20:45] node-faq has joined the channel
[20:45] tjholowaychuk: mongodb native needs some love
[20:46] isaacs: keks: seems like there is a bit of an issue with the Cipher/Decipher stuff
[20:46] isaacs: keks: it works properly if you encrypt it to hex
[20:46] mnbvasd: isaacs: but... ?
[20:46] bmizerany has joined the channel
[20:47] keks: isaacs: oh, okay thank you. that's unfortunate because I want to store it to couchdb. maybe I'll bz2 it or so...
[20:48] isaacs: keks: yeah
[20:48] isaacs: it's definitely an issue with the crypto stuff, not with fs.
[20:48] isaacs: afaict
[20:49] clarkfischer: How can I wait for the DOM to be completely loaded in JSDOM?
[20:49] keks: thank you
[20:50] keks: isaacs: btw are you still working on fuse? maybe I'll find to to help, but I'm not very experienced with libev
[20:50] isaacs: keks: i've taken a bit of a break from it
[20:50] isaacs: been working on making npm sudo-friendly
[20:50] isaacs: and safer
[20:51] Coal has joined the channel
[20:51] danyork: isaacs: what makes npm so UN-friendly to sudo?  (I've seen the warnings)
[20:51] evl has joined the channel
[20:51] evl has joined the channel
[20:51] isaacs: danyork: it doesn't downgrade permissions before runinng package installation scripts
[20:52] danyork: Ahhh... so packages could install anything anywhere...
[20:52] isaacs: { "name" : "pwner", "version":"1.2.3", "scripts" : { "test"  : "echo 'pwned' && rm -rf /" }}
[20:52] danyork: Oops
[20:52] isaacs: yep
[20:52] isaacs: sudo npm test pwner
[20:52] isaacs: whoops
[20:52] danyork: No thank you!  ;-)
[20:53] danyork: ACTION now understands WHY those warnings are there!
[20:53] isaacs: so, the solution there is to run scripts as the "nobody" user, and be meticulous about the permissions on everything
[20:53] mnbvasd: you have to understand the issues with all software.
[20:54] danyork: isaacs: makes sense
[20:54] springif` has joined the channel
[20:54] augustl: what do people use for unit testing in commonjs these days? No DSLs please ;)
[20:54] mnbvasd: what are you going to do? make the targets owned by nobody, then re-chown them after install?
[20:55] Athox: nodeunit
[20:55] tekky has joined the channel
[20:56] augustl: "Easy unit testing in node.js and the browser", hmm I don't need to run commonjs code in a browser.
[20:56] cagdas has joined the channel
[20:56] tanepiper: http://ariya.blogspot.com/2011/01/phantomjs-minimalistic-headless-webkit.html  :o
[20:58] herbySk has joined the channel
[20:58] evl has joined the channel
[20:58] pieterv has joined the channel
[20:59] mnbvasd: shiny
[20:59] ryah_: very neat
[21:00] heavysixer has joined the channel
[21:01] clarkfischer: Man, jsdom breaks my day once again....
[21:01] skm has joined the channel
[21:01] CIA-99: node: 03Ryan Dahl 07master * r8bd7e4f 10/ wscript : Preprocess out assert() - http://bit.ly/gOxKQR
[21:01] CIA-99: node: 03Carter Allen 07master * r5ad93ab 10/ (6 files): Fix tests when spaces are in path - http://bit.ly/gKqnTp
[21:01] desaiu has joined the channel
[21:01] tlrobinson_ has joined the channel
[21:03] sh1mmer has joined the channel
[21:04] zomgbie has joined the channel
[21:04] rjrodger_ has joined the channel
[21:06] springmeyer_ has joined the channel
[21:07] jesusabdullah: man phantomjs looks sweet
[21:07] Country has joined the channel
[21:09] desaiu has joined the channel
[21:10] dmcquay has joined the channel
[21:10] mdoan has joined the channel
[21:11] aklt_ has joined the channel
[21:11] balaa has joined the channel
[21:12] sechrist: jesusabdullah: this seems similar to zombie and tobi
[21:12] sechrist: toby*
[21:12] tjholowaychuk: sechrist: not really, that thing uses webkit to render etc
[21:13] tjholowaychuk: webkit without the UI
[21:13] sechrist: ohhh
[21:13] ryah has joined the channel
[21:13] sechrist: can I dump a rendered frame?
[21:13] tjholowaychuk: i haven't tried it
[21:13] tjholowaychuk: but looks like it
[21:14] sechrist: oh snap
[21:14] sh1mmer has joined the channel
[21:15] sechrist: "Renders the web page to an image buffer and save it as the specified file."
[21:15] sechrist: nice
[21:19] isaacs: ryah: getting a syntax error in src/node.js
[21:19] isaacs: ryah: line 233, process.assert(...) is getting truncated to just process.;
[21:20] statim1 has joined the channel
[21:20] isaacs: ryah: same in module.js
[21:21] isaacs: ryah: but yes, the http woes are gone.
[21:21] MadonnaCoder has joined the channel
[21:21] bingomanatee: is christkov ever on IRC?
[21:21] tmzt: looking at Backend again (on hn) it looked way too heavy last time
[21:22] tmzt: I think backend events with dnode plus a fixed jeditable would be perfect
[21:23] hornairs has joined the channel
[21:24] rjrodger_: Hi, I've written a module for Amazon SimpleDB: npm install simpledb
[21:24] tjholowaychuk: Backend?
[21:24] andrzejsliwa has joined the channel
[21:25] Me1000 has joined the channel
[21:25] rjrodger_: Would be grateful for feedback - thanks!
[21:25] sriley_ has joined the channel
[21:25] jpld has joined the channel
[21:26] brianc: malkomalko: did you get the testing sorted out?
[21:26] webr3 has joined the channel
[21:27] tlrobinson_ has joined the channel
[21:28] losing has joined the channel
[21:28] misham has joined the channel
[21:29] rjrodger_: Docs at http://github.com/rjrodger/simpledb
[21:30] malkomalko: nope, it isn't working
[21:30] malkomalko: we've been trying
[21:30] msekimura has joined the channel
[21:31] sudoer has joined the channel
[21:31] losing has joined the channel
[21:32] brianc: pg keeps just hanging open?
[21:32] sudoer has joined the channel
[21:32] malkomalko: yah, that Sink method is unreliable, everyone once in a while it will fail and hang
[21:32] furdun has joined the channel
[21:32] brianc: what version of pg & what version of node? I can look at the gist again for you 
[21:34] Athox: substr or substring for arguments (1)? which is faster?
[21:34] Athox: ie. get the full string except first char
[21:34] malkomalko: on this machine it's a slightly older version of node (0.2.3) but we saw the same thing on 0.2.6
[21:34] malkomalko: and 8.4.2 of pg
[21:34] skm has joined the channel
[21:34] malkomalko: we're thinking about running 1 integration test :)
[21:34] brianc: what about of the node-postgres module?
[21:34] malkomalko: your latest from npm
[21:34] brianc: okay
[21:35] brianc: one thing I did w the integration tests in node-postgres was ran them 1 file per process
[21:35] montylounge has joined the channel
[21:35] markwubben has joined the channel
[21:35] brianc: expresso pulls all your files in and runs them
[21:35] brianc: which is groovy
[21:36] malkomalko: I think expresso could use a beforeEach hook
[21:36] brianc: until you have 100 different queries that need to run async doing different crud operations
[21:36] tjholowaychuk: malkomalko: yeah it could do with a lot of things haha
[21:36] tjholowaychuk: its just tough when its parallel, its not always going to work how you think it might
[21:36] jpld has joined the channel
[21:37] malkomalko: I know tj, I'm just running my mouth lol
[21:37] malkomalko: we're trying all types of weird shit lol
[21:37] brianc: malkomalko: have you tried the "one test scenario per file?" 
[21:38] malkomalko: I think that's going to be the way to do it for integrations
[21:38] brianc: in the end that was the _only_ sane way to really put node-postgres through it's integration tests
[21:38] malkomalko: then there's no need for any Sink's
[21:38] amacleod has joined the channel
[21:38] Athox: what was that online benchmark site?
[21:38] mikeal: i really wish I had more time to work on http://search.npmjs.org/ at the moment
[21:39] darklajid: sechrist: Hmpf. node-inspector doesn't connect/shows up empty..
[21:39] sechrist: :(
[21:39] sechrist: iirc it only worked on node3
[21:39] sechrist: are you on node3?
[21:40] darklajid: Uhm. Actually I didn't meant to address you personally. That was a fluke :)
[21:40] darklajid: Yep
[21:40] brianc: malkomalko: I'm interested in a case where the sink didn't work reliably. it never fails in my tests
[21:40] darklajid: 0.3.6
[21:41] brianc: granted the "sink" object itself isn't tested as I slammed it together as a byproduct of writing the tests - however, if the tests pass and they rely on the sink that kinda tests it as well
[21:43] brianc: malkomalko: another thing you could do is set "pg.defaults.poolSize" to 1 in your tests. Then you can just call "client#end" on whichever client reference you have and since the pool will only contain a single client once you terminate it's connection the process will exit
[21:43] statim has joined the channel
[21:43] dguttman has joined the channel
[21:43] malkomalko: hmm, that's interesting!
[21:43] flazz has left the channel
[21:44] dguttman has joined the channel
[21:45] CarterA has joined the channel
[21:50] x_or has joined the channel
[21:51] mnbvasd: is there a way to find the path to a module that's been loaded?
[21:52] bingomanatee: NOOGLE
[21:52] bingomanatee: IS 
[21:52] bingomanatee: ALIVE!
[21:52] bingomanatee: http://narrative.io:3000/
[21:52] eee_c has joined the channel
[21:52] bingomanatee: still indexing some of the older pages. 
[21:52] CarterA: Wow. Just updatd my copy of the node source, cleaned, configured and built, and now every test fails. All of them.
[21:53] bingomanatee: no - the tests succeed. its the node thats failing :D
[21:53] isaacs: mnbvasd: require.resolve("foo")
[21:53] isaacs: mnbvasd: or you can check out module.filename
[21:53] isaacs: or __filename
[21:53] Ond has joined the channel
[21:54] tjholowaychuk: bingomanatee: neat :)
[21:54] CarterA: bingomanatee: saywhat?
[21:54] isaacs: ryah: seems like the offending commit is 8bd7e4f
[21:54] mnbvasd: isaacs: cool ta :)
[21:55] isaacs: mnbvasd: np
[21:55] CarterA: Oh thank god it wasn't me that broke it. =p
[21:55] bingomanatee: Yeah baby! I DID A THING IN NODE THAT EVENTUALLY WORKED!
[21:56] bingomanatee: MOSTLY!
[21:56] benburkert has joined the channel
[21:57] sh1mmer has joined the channel
[21:57] pdelgallego has joined the channel
[21:58] tanepiper: bingomanatee: awesome :)  you got it released
[21:59] tanepiper: one suggestion - might be cool to <a name> lines when you click on them so it scrolls to them
[21:59] tanepiper: the boldness is not bold enough and easy to miss
[22:00] bingomanatee: that would be cool. 
[22:00] bingomanatee: The indexing loop broke - fixing that now. 
[22:00] jesusabdullah: haha---MOSTLY
[22:00] jesusabdullah: What is this?
[22:00] sriley: noooo use an id for inter-page links using names on empty anchors is very 1995
[22:00] bingomanatee: Its a search engine - I have indexed all the old IRC logs
[22:00] tanepiper: jesusabdullah: searchable #node.js logs 
[22:00] jesusabdullah: Ah, rad
[22:01] tanepiper: http://narrative.io:3000/search/jesusabdullah
[22:01] jesusabdullah: bingomanatee: radtastic!
[22:01] matt_c_ has joined the channel
[22:02] farhadi has joined the channel
[22:02] jesusabdullah: Alright, time to venture out into the world! D:
[22:02] Athox: nooglicious
[22:02] jesusabdullah: Took ages just to get the car to start again :S
[22:02] jesusabdullah: Fucking cold climes
[22:02] Me1000 has joined the channel
[22:02] Athox: you mustnt go into the world
[22:02] bingomanatee: So lets keep it clean kids. 
[22:02] Athox: there are people
[22:02] bingomanatee: I have better things to do than write an f*bomb filter. 
[22:02] jesusabdullah: Also, shit I gotta do
[22:03] Athox: who's offended by the f-bomb when they have internet access?
[22:03] TooTallNate has joined the channel
[22:03] bingomanatee: I fucking am!
[22:03] Athox: so you're on aol, you say? :p
[22:03] tanepiper: bingomanatee: you should definetly post it to the nodejs list
[22:04] bingomanatee: the what now?
[22:04] jesusabdullah: I was just thinking: If you did a search for my name on the #fedora channel logs, half of the handfull of entries would be, "jesusabdullah: This is a FAMILY channel!."
[22:04] darklajid: Hmm.. I don't get how I read things from a db in a non-blocking fashion I guess.. Are there reasonable tutorials for simple db based "models"?
[22:04] jesusabdullah: Not that I TRY to be offensive, of course.
[22:04] admc has joined the channel
[22:05] bingomanatee: though i have to say the "fuck" search results are highly entertaining
[22:05] tanepiper: bingomanatee: mailing list on google groups.  i'm definetly going to tweet this too :)
[22:06] tanepiper: you should run an index on it as well, spit out a list of the most use swearwords on #node.js :D
[22:06] bingomanatee: knock yourself out. 
[22:07] Coal has joined the channel
[22:07] bingomanatee: Anyone have a good list of swears I could use?
[22:08] Athox: to search for, or for personal utterance?
[22:08] bingomanatee: or do I have to go to GeorgeCarlin.com
[22:08] Ond: "windows" 
[22:08] bingomanatee: See tanepiper's suggestion
[22:08] tanepiper: bingomanatee: http://monkeyfilter.com/link.php/11611
[22:08] tanepiper: that's the BBC list
[22:09] bingomanatee: "Jew" is a swear word?
[22:09] tanepiper: you can probably filter out the racist words and just go for the swear words
[22:09] Athox: of course it is
[22:09] bingomanatee: Perhaps in the verb form :D
[22:09] tanepiper: i suppose on the context it can be offensive
[22:09] Athox: nobody want to be associated with the jews
[22:09] Ond: Natalie Portman enough said
[22:09] bingomanatee: ACTION is Jewish.
[22:10] Athox: rest my case
[22:10] bingomanatee: Did I mention I'm throwing a pay gate on noogle? :D
[22:10] mnbvasd: been working on an interface to child_process to spawn off js modules...
[22:10] tanepiper: this is the funnier list: http://www.psyked.co.uk/bbc-swear.txt
[22:10] mnbvasd: kinda like dnode... https://gist.github.com/795780
[22:10] mnbvasd: if anyone is intrested.
[22:10] bingomanatee: That's the one.
[22:11] desaiu has joined the channel
[22:11] Athox: $cum is a bad word? i would think one would prefer scum over a variable named cum
[22:11] Athox: maybe that's just me
[22:11] mnbvasd: lol
[22:12] tanepiper: Athox: BBC is a public service broadcaster, they try to filter out as much as what *could* be found offensive
[22:12] Athox: haha.. near the bottom of that list:
[22:12] Athox: Xpert Eleven
[22:13] Athox: it's a (i assume competing) fantasy football game
[22:13] sechrist: Anybody in here looking for a job in the valley? My company is looking for a principal webapp person
[22:13] pdelgallego_ has joined the channel
[22:14] tanepiper: Athox: yea, i think their sports forums get the most traffic
[22:14] Ori_P has joined the channel
[22:14] Athox: yeah but it's going a bit far to filter out competition
[22:14] Athox: that's just fascism
[22:14] tanepiper: so bingomanatee are you going to os this?
[22:14] bingomanatee: seachrist - which valley?
[22:15] bingomanatee: os?
[22:15] tanepiper: open source
[22:15] Athox: it's a verb!
[22:15] bingomanatee: it is open source - its on my bingomanatee on git. 
[22:15] pHcF has joined the channel
[22:15] bingomanatee: seachrist: i'm in SF and looking for a gig. 
[22:15] ph^ has joined the channel
[22:15] tanepiper: https://github.com/bingomanatee ?
[22:16] bingomanatee: https://github.com/bignomanatee/noogle
[22:16] bingomanatee: Have fun screwing with it. 
[22:16] bingomanatee: It only works in node v. 0.2.6 and requires mongodb 1.6 x +
[22:17] aklt_: ryah: Hi! I stumbled on some bugs in node_crypto.cc and wondered if there were any plans for this file?
[22:17] bingomanatee: I'll document it more fully. 
[22:17] bingomanatee: I am also copying the general resources of noogle back to my MVC repo. 
[22:17] pr2012 has joined the channel
[22:17] Athox: aklt_, which version of node
[22:17] tanepiper: ahh, i don't run mongodb or node 0.2 :(
[22:17] aklt_: Athox: tried with 2.5 and 3.3 I think it was.
[22:18] bingomanatee: mongodb is an easy apt-get install. 
[22:18] tanepiper: and my home server is crappy, it won't do virtualsation
[22:18] tanepiper: it's just an atom processor
[22:18] Athox: aklt_, crypto and tls/ssl was rewritten for some .3.something
[22:18] tanepiper: i'm running @nodemodules off it just now, and my irc sessions
[22:18] bingomanatee: I put node up on a linode. 
[22:18] bingomanatee: noogle.
[22:18] aklt_: Athox: Whee, did not know that. Am pulling the latest code now!
[22:18] fission6 has joined the channel
[22:19] fission6: i am having trouble with http.request when options = {host:localhost:8000, ...} and i put in a port
[22:20] pr2012: Anyone know if the V8 "Object.freeze()" exception is resolvable in node 2.6 or does one need 3+?
[22:20] sveisvei has joined the channel
[22:20] skm has joined the channel
[22:20] Athox: that would be a v8 problem, not a node problem
[22:21] pr2012: is it possible to use a v8 version other then what is distributed with each build?
[22:21] Athox: yes
[22:21] tjholowaychuk has joined the channel
[22:21] Athox: you may wanna check the v8 changelog to see if it has been fixed
[22:22] darklajid: Paradigm trouble: While I can work with this event loop stuff quite well, how do you handle databases? I want to pass a list of things to jade: locals: my_retreive_entities_from_db(). But how? Even the mysql api doesn't block (good, I guess) and I don't know how to "return" it. What's the idiomatic way to do this?
[22:22] pr2012: yeah it was fixed in r5350
[22:23] sriley_ has joined the channel
[22:23] bradleymeck: darklajid, load it before you use jade then pass it to jade in the locals
[22:23] sechrist: bingomanatee: silicon valley
[22:23] Evet_ has joined the channel
[22:23] tg has joined the channel
[22:23] sechrist: we're in santa clara
[22:23] bingomanatee: Yeah I am there 
[22:24] bingomanatee: what do you guys do?
[22:24] sechrist: i'll go pm with you
[22:24] bingomanatee: thwet
[22:24] darklajid: bradleymeck: "Load it before": How? I'm still missing the "Hey, mysql. This is my query." - "Here are the results, dude" connection.
[22:24] xla has joined the channel
[22:24] Athox: speaking of twitter, where's announcer and frankie?
[22:24] Athox: did you kick them out while i was gone?
[22:24] darklajid: Is there a simple CRUD application that does something similar?
[22:24] Athox: did maushu go into hiding?
[22:25] bradleymeck: prolly, i know frankie is down since im lazy
[22:25] bradleymeck: twitter freaks out if he stays up too long and drops the communication to him
[22:26] matt_c has joined the channel
[22:26] fission6: anyone have issues with options host : localhost:8000, its choking for http.request(options)
[22:26] torvalamo: {host: 'localhost', port: 8000} ?
[22:27] aklt has joined the channel
[22:28] fission6: right but when i pass in host: localhost:8000 it chokes
[22:28] matt_c_ has joined the channel
[22:28] fission6: yoru way works fine torvalamo but i think localhost:8000 is the header i need
[22:28] fission6: for host
[22:29] ericnakagawa has joined the channel
[22:29] aklt: Argh, darn laptop gets too hot.
[22:29] charlenopires has joined the channel
[22:29] torvalamo: fission6, port shouldn't be in host header
[22:29] tokumine has joined the channel
[22:29] fission6: firefox does it
[22:30] torvalamo: well they're not normal
[22:31] torvalamo: actually port is acceptable
[22:31] tjholowaychuk: the spec states the portno is included
[22:31] torvalamo: so nvm
[22:31] jacobolus has joined the channel
[22:31] torvalamo: did you just...? are we equal at googling?
[22:32] fission6: http module is choking when host:localhost:8000
[22:32] tjholowaychuk: didnt google
[22:32] tjholowaychuk: lol
[22:32] torvalamo: fission6, pastebin your code
[22:34] fission6: torvalamo: http://dpaste.com/353482/
[22:35] torvalamo: those options aren't headers directly
[22:35] benburkert has joined the channel
[22:35] torvalamo: right now it's doing host + port, making it localhost:8000:8000
[22:35] torvalamo: which is obviously wrong
[22:36] torvalamo: the headers are set in the headers option
[22:36] GasbaKid has joined the channel
[22:37] torvalamo: for instance {host: 'localhost', port: 8000, headers: {host: 'localhost:8000'}}
[22:37] pr2012: express + v8 v3.01 +node 2.6 = fail
[22:37] torvalamo: but i would imagine something as basic as the host header would be generated automatically
[22:38] mnbvasd: are you even meant to include a port no in the http protocol? or is it just used for the url to decode to send the host and path to in he protocol and chose the port to connect to?
[22:39] fission6: torvalamo: so what are you suggesting
[22:39] torvalamo: mnbvasd it's used in the http response to let the browser create a correct url to display with the resource
[22:39] mnbvasd: $ nc -l 127.0.0.1 8888
[22:39] mnbvasd: GET / HTTP/1.1
[22:39] mnbvasd: Host: 127.0.0.1:8888
[22:39] mnbvasd: ok, fair enough ;)
[22:40] torvalamo: it's also probably helpful for proxies
[22:40] mnbvasd: true
[22:40] fission6: torvalamo: so what you suggesting for me
[22:40] torvalamo: sec
[22:41] torvalamo: http://dpaste.com/353500/
[22:42] killfill has joined the channel
[22:44] softdrink: woot. finally. a promising job candidate
[22:45] fission6: torvalamo: how are the headers generated, i want the host header to say something else
[22:46] torvalamo: look at the source
[22:46] torvalamo: also like i said, you can use the headers option
[22:47] aklt: Latest git seems broken, does anyone know if the crypto updates made it into stable node?
[22:48] torvalamo: no
[22:48] torvalamo: 0.2.x hasn't got the rewrite
[22:48] torvalamo: it comes in 0.4.x
[22:48] torvalamo: stable i mean
[22:49] mnbvasd: is there a way in node to block by choice, waiting for a specific event?
[22:49] aklt: torvalamo: Ok, that is good to know.  I am not sure what is going on with 0.3.7, but something is broken,... I think I'll wait a bit then :-)
[22:49] malkomalko has joined the channel
[22:49] torvalamo: 0.3 is experimental
[22:50] malkomalko has joined the channel
[22:50] aklt: torvalamo: Yeah, I know
[22:51] aklt: Is there an es
[22:51] aklt: Sorry, wrong channel :-)
[22:51] malkomalko: brianc... I rigged up a system using one integration test and async.parallel that makes me happy
[22:51] piscisaureus has joined the channel
[22:52] rburhum has joined the channel
[22:52] malkomalko: avoids callback spaghetti, and it gives me the ability to name my Object keys like I would name my test
[22:53] farhadi has left the channel
[22:54] broofa_ has joined the channel
[22:56] brianc: AlexMax: awesomeness
[22:56] brianc: malkomalko: awesomeness
[22:57] brianc: sorry wrong tab-completion 
[22:57] brianc: malkomalko: if you hit any snags w/ node-postgres file an issue on github, i try to fix them within 24 hours
[22:58] brianc: malkomalko: or better yet a pull request. ;)
[22:58] killfill has joined the channel
[22:58] AlexMax: brianc: WHO DARES DISTURB ME FROM MY SLUMBER
[22:58] brianc: AlexMax: lol
[22:58] brianc: i actually did laugh out loud
[22:59] AlexMax: i'm not angry.  It's good to be reminded of sanity after dealing with writing a C# module for DotNetNuke...without having known C# or DotNetNuke module design as of last week.
[22:59] davidwalsh has joined the channel
[23:00] brianc: i just fixed a bug in a 13,352 line code behind file in a winforms application here at work
[23:00] brianc: legacy applications = not so fun
[23:02] darklajid: brianc: If you're doing the node-postgres stuff: Can you help me understand using models in node? Since I cannot "load and wait", what's the 'right' way to do it? How do you load all products/items/whatever?
[23:02] Remoun has joined the channel
[23:03] brianc: darklajid: by loading models I assume you're referencing an orm?
[23:03] ericnakagawa has joined the channel
[23:03] darklajid: brianc: No, at least not yet.
[23:03] brianc: darklajid: any one in particular or just a make-believe one?
[23:03] darklajid: (and I'm looking at mysql for now, but should be ~the same~..)
[23:03] brianc: let's pretend it's "active_record-esque"
[23:04] brianc: User.findById(3, function(err, user) { /*callback*/ });
[23:04] malkomalko: awesome brian
[23:04] malkomalko: we're creating an orm around your driver
[23:04] malkomalko: in house, and then probably release it
[23:04] darklajid: brianc: So - should I look into that then? :) For now I just looked into client libraries and tried to change a stupid sample (that just used a predefined array as backing store) to load from a db - and fail to understand the steps to make this work with non-blocking io
[23:05] brianc: malkomalko: oooohh open source? awesome. Would recommend also checking out interface to node-mysql by felixge. I tried to maintain very similar interface so hopefully there could be reuse in that situation
[23:05] brianc: darklajid: if you wanted to load a collection of sub-objects off the user object that method would also require a callback so you could NOT do this: userInstance.friends
[23:06] mraleph: pr2012: what's your problem with object.freeze?
[23:06] ROBOTARMY has joined the channel
[23:06] brianc: darklajid: you'd have to do something like: userInstance.get('friends', function(err, callback) { });
[23:06] pr2012: known bug with v8
[23:06] darklajid: What I want to do is pass a list/array of items to jade. It seems that this is not possible the way I expected.
[23:06] pr2012: fixed in 2.5
[23:07] pr2012: *2.4
[23:07] pr2012: "2010-09-01: Version 2.4.0
[23:07] pr2012:         Fixed bug in Object.freeze and Object.seal when Array.prototype or
[23:07] pr2012: 	Object.prototype are changed (issue 842).
[23:07] pr2012: "
[23:07] mraleph: I yeah. I though ryah pulled my fix in to 2.6 branch
[23:07] mraleph: thought
[23:07] malkomalko: ok brianc I'll check out the node-mysql interface
[23:07] darklajid: brianc: Hmm.. Thanks for letting me pick your brain. I think I got an idea now..
[23:07] malkomalko: as far as I know, there are no real good orms for postgres are there?
[23:08] mraleph: ups... wrong issue :-)
[23:08] tim_smart: Anyone familiar with node-mysql here?
[23:08] brianc: malkomalko: I don't know of any widely used ORMs in node. I think getty has one
[23:08] tim_smart: Just curious to how it returns results from SELECT
[23:08] darklajid: tim_smart: That's exactly where I fail right now :)
[23:09] malkomalko: we'll be building in some things to deal with legacy databases
[23:09] malkomalko: so mapping old table names to ones you want, old field names to fields that make sense
[23:09] brianc: malkomalko: don't know if it uses postgres. I thought about retrofitting node-postgres into some existing ORMs but haven't been able to get a good idea of any which are widely used or if there's a need
[23:09] khismetix_ has joined the channel
[23:10] pr2012: Easy fix to rebuild with v8 2.4. However prior to that I updated express and now have some versioning issue with connect. Fun fun.
[23:10] hunterloftis: Has anybody used connect-form or formidable with <input type="file" multiple> yet?
[23:10] khismetix_: Anyone seen comparisons between Node.js and netty ?
[23:10] brianc: malkomalko: yah I think that legacy database support is mucho imporanto because lots of people are moving to node from another system and saying "no, now you re-design your database to fit w/ this orm or you cannot use it" might not fly
[23:10] malkomalko: yup, so we'll see where it goes
[23:10] malkomalko: I really like mongo's query api
[23:10] tim_smart: darklajid: OK. I might just install mysql server and try it out.
[23:10] malkomalko: things like { "field": { "$in": [1,2,3] }}
[23:11] MikhX has joined the channel
[23:11] dmcquay has joined the channel
[23:11] malkomalko: or maybe just Model.find({ "field.in": [1,2,3] })
[23:11] pr2012: there are a few gotchas with mongos query api that drive me nuts. For instance, no way to only return nested documents
[23:12] malkomalko: yes there is
[23:12] malkomalko: but you always get back the parent doc id
[23:12] darklajid: tim_smart: Maybe you figure it out faster and can help me out.. :)
[23:13] pr2012: is that changed? pretty sure I read it was impossible right now in their docs.
[23:13] sonnym has joined the channel
[23:13] malkomalko: you can select fields
[23:14] asimismo: isaacs: Report: I've had pretty good success adding **/.npm/* to my exclusions for my Eclipse project. Hopefully that'll solve the majority of the problems.
[23:14] isaacs: kew
[23:14] isaacs: kewl
[23:14] mike5w3c_ has joined the channel
[23:15] asimismo: Has anyone had success using namespaces with libxmljs? The github site points to http://libxmljs.squishtech.com/ for docs but there doesn't seem to be a site up there.
[23:15] bronson has joined the channel
[23:16] malkomalko: speaking of which, anybody run into a problem with express not compiling your less files at a certain point?
[23:17] tjholowaychuk: malkomalko: might be a bit of a race condition, ive heard a few people mention that (with sass too)
[23:17] tjholowaychuk: but I have not had that issue
[23:19] hornairs has joined the channel
[23:20] malkomalko: ok, might just take the compiler out and compile manually I guess
[23:21] asimismo: Specifically, I'm trying to query a libxmljs document that has namespaces declared and every query results in undefined. Do the namespace declarations have to be part of my xpath?
[23:21] hunterloftis: malkomalko: If you're using @imports we've noticed that we have to forceCompile: true... but that works fine in dev mode
[23:21] malkomalko: no imports here, just something simple
[23:21] bingomanatee: Anyone interested in a starcraft lan party this weekend?
[23:22] w0rse has joined the channel
[23:22] mikedeboer has joined the channel
[23:22] hunterloftis: The node-formidable github page uses a multiple file select as an example, but copying and pasting the example, while successful, only sends one file (for me)
[23:23] [[zz]] has joined the channel
[23:24] malkomalko: alright headed home, thanks for the help today
[23:24] tim_smart: darklajid: https://gist.github.com/0a4426c32aba98e7f404
[23:26] tanepiper: anyone know of a portable svn client?  i really don't want to install tortoise on my machine
[23:27] jesusabdullah: No :(
[23:27] jesusabdullah: Why do you need an svn client?
[23:27] tanepiper: infact, scratch that i'll just do it on my vm
[23:27] tanepiper: indeed, but i do
[23:28] Qbix1: wait
[23:28] Qbix1: does Node.js come with JSON.stringify
[23:28] tanepiper: Qbix1: V8 does
[23:28] tanepiper: so yes
[23:28] jesusabdullah: Last I checked!
[23:28] Qbix1: V8 does?
[23:28] Qbix1: v8> JSON.stringify({})
[23:28] v8bot: Qbix1: "{}"
[23:28] Qbix1: hmmm
[23:28] softdrink: sooooo who wants to pay me to work on my app full time? anyone? heh
[23:29] Qbix1: you right
[23:29] mnbvasd: is there a way to trigger a new tick in node? I want to wait for and call a signal, and until that signal has been called I don't want to exit a new object?
[23:29] Qbix1: what is the point of triggering a new tick?
[23:29] mnbvasd: I'm waiting for some IO.
[23:30] hunterloftis_ has joined the channel
[23:30] mnbvasd: the object builds itself based on that, and things reliant on the object can't use it until it's built.
[23:30] darklajid: tim_smart: Ah yes. That works. I'm just wrestling (still) to make that work with jade for me here.. Thanks though
[23:31] tjholowaychuk: darklajid: what are doing?
[23:31] cloudhead has joined the channel
[23:33] tmm1: ryah: ping
[23:33] ryah: tmm1: can you email me? im not really here
[23:33] tmm1: ryah: sure
[23:33] darklajid: tjholowaychuk: Probably stupid things.. :) I try to make my first steps and look at the most basic interaction I could think of right now: Submit feedback to a site, render it. aka guestbook/comment style
[23:33] jmmills has joined the channel
[23:34] tjholowaychuk: darklajid: any specific issues?
[23:34] jmmills: Can anyone think of a "complex" project that I could look at to give me an example on how to structure a project that uses both joose classes w/ unit tests and a test runner
[23:34] darklajid: tjholowaychuk: Created a module "comments.js", exporting a function "all" that selects all db entries (inserting by standard http post works already). Now I try to render that in jade, by calling that function to render a <ul>
[23:35] jmmills: joose seems appealing to me for it's declarative syntax
[23:35] darklajid: tjholowaychuk: The issue is that I see that the db query works (console.log(query_results) is hit, shows all entries), but jade just gives me an empty <ul> so far...
[23:35] tjholowaychuk: darklajid: jade renders sync, it has no notion of promises etc so it has no way of knowing it is supposed to be waiting
[23:36] darklajid: tjholowaychuk: So this cannot work at all? http://pastebin.com/BuWxkjYz
[23:37] darklajid: tjholowaychuk: So I need to populate that view stuff _before_ hitting jade?
[23:37] tjholowaychuk: darklajid: not with async code ATM no
[23:37] tjholowaychuk: https://github.com/visionmedia/express/issues#issue/512
[23:37] tjholowaychuk: view that issue
[23:37] sudoer has joined the channel
[23:38] w0rse_ has joined the channel
[23:38] tjholowaychuk: jade has no way to know, oh this function is going to be waiting around for things, to jade it just looks like a regular function
[23:38] tjholowaychuk: we need promises (or similar)
[23:38] tjholowaychuk: which is still kinda meh
[23:39] darklajid: tjholowaychuk: Ahhhhh! Enlightment!
[23:40] hunterloftis_: darklajid: I found it pretty easy to just do that sorta thing before rendering.
[23:40] hunterloftis_: darklajid: Get the data together, then pack it off to the template.
[23:40] khismetix has joined the channel
[23:40] hunterloftis_: And generally trying to minimize the "coding" we do in jade. It's not php, we don't have to do that ;)
[23:40] tlrobinson_ has joined the channel
[23:41] khismetix: Can someone explain how node.js might offer better performance than, say a web server which uses non blocking i/o ?
[23:41] darklajid: tjholowaychuk: Thanks a lot. I was utterly confused and just did stupid trial and error. Understanding your point allowed me to fix the problem easily, by just wrapping the .render() call inside of the select_stuff_from_db thing instead of the other way around (trying to do async db selects in the view). Which - at this point - makes a lot more sense anyway
[23:41] tmzt: it be pretty awesome if jade could generate jquery code that runs on page load for async stuff
[23:41] tmzt: of course jade having an actual parser/tree might be a prerequisite
[23:41] bingomanatee: wouldn't remote libraries be more scalable?
[23:41] darklajid: hunterloftis_: See above: I was just too braindead to see that (and since I got no error whatsover I was quite lost). Agreed.
[23:41] tmzt: I find this jekyll thing fascinating, I'd like to see what a combination of static and dynamically rendered content could be used for
[23:42] warz has joined the channel
[23:42] dguttman_ has joined the channel
[23:42] tmzt: tanepiper: cygwin's should work nicely
[23:44] tmzt: anybody know anything better/lighter than jeditable?
[23:44] tmzt: I don't need each edit field posting on it's own
[23:46] jpiche has joined the channel
[23:48] benburkert has joined the channel
[23:49] torvalamo: hm.. v8 has locale functions but doesn't give a crap about it. issue reported back in 2008, it hasn't even been touched, still marked as new :P
[23:49] Aikar: locale functions as in language stuff?
[23:49] briznad has joined the channel
[23:49] torvalamo: more like date formats and alphabet order and decimal symbol and stuff
[23:50] pr2012: anyone run into: "Cannot call method 'concat' of undefined
[23:50] pr2012:     at Object.<anonymous> (/usr/local/lib/node/.npm/express-contrib/0.3.3/package/lib/express-contrib/namespace.js:48:24)
[23:50] pr2012: "
[23:50] mw has joined the channel
[23:50] Aikar: pr2012: w/e you passed it is undefined
[23:50] pr2012: I cleaned out npm and reinstalled connect/express/express-contrib, but still get it
[23:51] pr2012: its not me, its in express 
[23:51] torvalamo: var num = 123.456; num.toLocaleString(); <- should return '123,456' here (notice comma instead of point)
[23:52] torvalamo: i wonder if firefox got it right
[23:52] pr2012: someone else had it in google groups and claims its a versioning issue, but after cleaning out all packages from npm and reinstalling, I still see it
[23:53] broofa has joined the channel
[23:53] Aikar: pr2012: that function could be taking input from you
[23:53] Aikar: then expecting the var to be something
[23:53] pr2012: its on require
[23:54] Aikar: hmm
[23:54] Aikar: express.router.methods.concat
[23:55] colinclark has joined the channel
[23:55] tjholowaychuk: ?
[23:55] admc: Anyone know what I should do about the following error:
[23:55] admc: client error Error: ENOTFOUND, Domain name not found
[23:56] admc: from:           var c = http.createClient(uri.port || 80, uri.hostname);
[23:57] dguttman has joined the channel
