[00:02] Dreamer3 has joined the channel
[00:02] atmos has joined the channel
[00:03] pdelgallego_ has joined the channel
[00:04] altamic has joined the channel
[00:07] mbrochh has joined the channel
[00:07] mbrochh has joined the channel
[00:08] dthompson has joined the channel
[00:10] SubStack: browserify can now render jade browser-side
[00:11] zemanel has joined the channel
[00:12] zzak: grats
[00:13] Jamool_ has joined the channel
[00:13] ChrisPartridge: You guys seen https://github.com/philogb/v8-gl ?
[00:14] yozgrahame: ChrisPartridge: it's 2 years old - am guessing made obsolete by webgl
[00:15] Dreamer3 has joined the channel
[00:15] Bosmon has joined the channel
[00:16] noahcampbell has joined the channel
[00:16] thnkfst has joined the channel
[00:16] steveo_ has joined the channel
[00:16] ChrisPartridge: yozgrahame: oops wrong link, https://github.com/senchalabs/philogl/
[00:17] yozgrahame: oh yes, it's yummy
[00:17] devrim has joined the channel
[00:17] Dreamer3 has joined the channel
[00:18] gravyrobber has joined the channel
[00:19] Dreamer3 has joined the channel
[00:21] strmpnk has joined the channel
[00:22] SubStack: check it: https://github.com/substack/node-browserify/blob/master/examples/npm-jade/index.html 
[00:22] colinclark has joined the channel
[00:22] perezd has joined the channel
[00:22] raidfive has joined the channel
[00:22] ChrisPartridge: ACTION checking
[00:22] isaacs: SubStack: hawt.
[00:23] ChrisPartridge: vewwy nice
[00:23] SubStack: and this is all it takes server-side: https://github.com/substack/node-browserify/blob/master/examples/npm-jade/server.js 
[00:23] SubStack: also you can .bundle() if you hate middleware
[00:23] ChrisPartridge: who hates middleware?
[00:24] Throlkim has joined the channel
[00:24] Dreamer3 has joined the channel
[00:24] nejucomo has joined the channel
[00:24] SubStack: well I hate middleware when I want to do terrible, hackish things sometimes
[00:24] zzak: substack +1
[00:25] SubStack: jade was a trickier edge case on account of all the files it uses for rendering
[00:26] SubStack: it also has dotfiles in the npm package with binary data that crashed everything
[00:26] ChrisPartridge: SubStack: So this compiles all the JS requied for jade, for example, and sends it all down in the request?
[00:26] isaacs: wowzers, really?
[00:26] vyvea has joined the channel
[00:26] SubStack: isaacs: well by 'crashed' here I mean it threw an exception when I tried to bundle it all together into the same file
[00:26] SubStack: ChrisPartridge: yep, everything gets bundled into a single file
[00:26] isaacs: i see
[00:27] blueadept has joined the channel
[00:27] atmos: does anyone know of any streaming http client examples in 0.4.x ?
[00:27] ChrisPartridge: SubStack: no issues with debugging? 
[00:27] atmos: my on data callback keeps getting back portions of json and i need to concat multiple callbacks or something
[00:28] findipin has joined the channel
[00:28] findipin: hi
[00:28] SubStack: ChrisPartridge: oh sure the line numbers are all screwy since it's all the same file
[00:28] SubStack: but you can debug on the node side of things
[00:29] joehewitt has joined the channel
[00:29] findipin: yo joe
[00:29] SubStack: write all your tests in node and then bundle everything up and hope that it works browser-side too
[00:29] SubStack: I can more properly address that last part with my startup for monies
[00:30] SubStack: but more importantly, now some of npm is available to the browser hooray
[00:30] isaacs: neato
[00:30] Evet has joined the channel
[00:30] ChrisPartridge: SubStack: very cool, so i guess the package isnt actually required in npm, but the package just requires the package.json that npm relies on?
[00:30] SubStack: ChrisPartridge: yeah that's how it is now that shims went away
[00:31] SubStack: before I was using the npm api
[00:31] CIA-39: node: 03Ryan Dahl 07master * re5a4722 10/ src/node_version.h : Now working on v0.4.2 - http://bit.ly/i1ApZw
[00:31] CIA-39: node: 03isaacs 07master * r0aa1a8a 10/ (6 files in 4 dirs): Closes GH-695 Add 'hex' encoding to Buffer - http://bit.ly/hJRXAO
[00:31] CIA-39: node: 03Ryan Dahl 07master * r7dad30a 10/ (12 files in 6 dirs): 
[00:31] CIA-39: node: Merge branch 'v0.4'
[00:31] CIA-39: node: Conflicts:
[00:31] CIA-39: node:  src/node_version.h - http://bit.ly/hBtJ0r
[00:31] randallagordon_ has joined the channel
[00:32] sivy has joined the channel
[00:32] Metapony has joined the channel
[00:32] isaacs: w00t!
[00:33] clarkfischer has joined the channel
[00:33] findipin: nice 
[00:33] Dreamer3 has joined the channel
[00:33] SubStack: it's a bit surprising how much people bring up sharing code between the server and browser as a reason for using node given the state of libraries that make this goal possible
[00:34] langworthy has joined the channel
[00:35] ChrisPartridge: SubStack: well i think you
[00:35] hemo has joined the channel
[00:35] maushu_: SubStack, it's a nice feature, but not the must-have.
[00:35] ChrisPartridge: 've nailed the implementation
[00:36] ajcates has joined the channel
[00:36] maushu_: SubStack, heck, I implemented a customized html scrapper that I can use in node.js and in a chrome extension.
[00:36] SubStack: maushu_: nice
[00:36] bwinton has joined the channel
[00:36] findipin: i just like the low level exposed to javascript ;)
[00:36] SubStack: what I mean is more about using the *exact* same code
[00:37] SubStack: since if that's not easy then people won't do it as much
[00:37] maushu_: It is, I just need to mantain the core code and the "plugins" (basically, ajax or the node.js http client)
[00:37] maushu_: Well, you just need to keep the core code and the interfaces seperated.
[00:38] maushu_: And reuse the core.
[00:38] wink_ has joined the channel
[00:38] shaver: I like being able to write libraries that work in both, for things like stemming or data traversal
[00:38] shaver: and it makes it easier to test those things where I can simulate being on the other side of the wire
[00:39] CIA-39: node: 03Ryan Dahl 07v0.4 * r340291c 10/ lib/tls.js : Add extra debug print statement to tls.js - http://bit.ly/euUUYO
[00:39] CIA-39: node: 03Ryan Dahl 07v0.4 * r45adc90 10/ (3 files in 2 dirs): ry/node -> joyent/node - http://bit.ly/i2HL1d
[00:39] SubStack: shaver: that is a big reason why I wrote browserify
[00:39] SubStack: so I can use my traverse and hashish modules browser-side without having to maintain two copies
[00:39] SubStack: each, I mean
[00:39] shaver: yeah
[00:40] hober has joined the channel
[00:40] Dreamer3 has joined the channel
[00:42] pt_tr has left the channel
[00:45] stalled has joined the channel
[00:46] ChrisPartridge: SubStack: so I guess your working on the graphic for the blog post now? those npm graphs are getting tiring to look at ;)
[00:46] maushu_: Is it possible to get stdin per character?
[00:47] maushu_: Nevermind, found the tty module.
[00:48] tladuke has left the channel
[00:48] hij1nx has joined the channel
[00:48] SubStack: ChrisPartridge: hah not yet, I've got some other stuff I need to finish
[00:49] maushu_: >_>
[00:49] micheil has joined the channel
[00:50] maushu_: There is always ncurses.
[00:51] findipin: SubStack: what are you ultimately building? just curious...
[00:51] micheil: ryah, isaacs: was the git-remote change mentioned on the mailing list?
[00:51] ryah: micheil: no, still in the process of doing it
[00:51] SubStack: findipin: I'm using browserify to wrap client-side dnode automatically so I don't have to maintain two versions of the protocol decoder
[00:52] stewars has joined the channel
[00:52] SubStack: nor the dependent modules like traverse
[00:52] micheil: ryah: okay; cause I was just like "wtf why isn't ry/node pulling"
[00:53] ryah: micheil: what's your origin set to?
[00:53] Coal has joined the channel
[00:53] micheil: wass ry/node, is now joyent/node
[00:53] breakpointer has joined the channel
[00:53] ryah: just curious if it works for the http protocol
[00:53] ryah: micheil: http or git?
[00:53] micheil: I use git://
[00:54] micheil: I think http also failed
[00:54] ryah: ah, i think people using http get reidrected
[00:54] ChrisPartridge: creationix: ping
[00:55] altamic has joined the channel
[00:55] altamic has joined the channel
[00:55] Jamool has joined the channel
[00:56] Evet_ has joined the channel
[00:57] breakpointer: Hi, I have a quick question... if I run the test suite and a test fails. What would be my next step? I just checked out v0.4.1 and built and installed it... here's the error http://pastebin.com/7UPwH1xA 
[00:57] breakpointer: I'd like to get to the bottom of it, as node has worked fine a few days ago
[00:58] ryah: breakpointer: we know that test is breaking
[00:58] breakpointer: oh, phew...
[00:58] breakpointer: I looked in the issues and didn't see it. sorry to bother
[00:59] breakpointer: So, ryah should I roll back to an earlier version?
[01:00] breakpointer: the example code is giving an error too.
[01:01] ryah: breakpointer: which example?
[01:01] breakpointer: the one on the home page
[01:01] ryah: more specificly
[01:02] Me1000 has joined the channel
[01:03] postwait has joined the channel
[01:03] breakpointer: ryah sorry, my bad. I'm not sure why it was erroring out before... seems fine now. 
[01:04] breakpointer: it was throwing an error on this code http://pastebin.com/cj5KKZt5 so I ran the tests, got a failure... thought they were connected
[01:05] dnolen has joined the channel
[01:05] Tprice has joined the channel
[01:05] CIA-39: node: 03Ryan Dahl 07master * rb309192 10/ src/node.cc : Use default backend for __sun (event ports) - http://bit.ly/fxAW45
[01:07] Evet has joined the channel
[01:07] heavysixer_ has joined the channel
[01:08] micheil: isaacs: what was that, erm, hack to the module system that you showed me yesterday?
[01:08] isaacs: micheil: don't do it.
[01:08] isaacs: micheil: i'ts not fun.  don't do it.
[01:08] micheil: for local testing?
[01:09] heavysixer has joined the channel
[01:09] lukegalea_ has joined the channel
[01:09] lukegalea_: hey! anyone using node-canvas to do server side graphing?
[01:09] Jamool has joined the channel
[01:10] softdrink has joined the channel
[01:11] lukegalea_: or... any users of DrawBack out there?
[01:12] AAA_awright has joined the channel
[01:13] poincare101 has left the channel
[01:14] Geig3r has joined the channel
[01:14] altamic has joined the channel
[01:14] altamic has joined the channel
[01:15] arpegius has joined the channel
[01:16] dancor has joined the channel
[01:17] zemanel has left the channel
[01:18] jakehow has joined the channel
[01:18] sprout has joined the channel
[01:21] ajnasz has joined the channel
[01:22] bwinton has joined the channel
[01:24] johnnywengluu: which is the best async library for node.js?
[01:24] spaceinvader: async library?
[01:25] spaceinvader: like everything in node.js is async
[01:25] nejucomo has joined the channel
[01:28] blueadept: quick issue, i'm upgrading from v0.3.0-pre. i did distclean, ./configure, make make install, but when check my version, it says im still using v0.3.0 and not the new version 4
[01:28] blueadept: i figured the files would overwrite
[01:29] mike5w3c has joined the channel
[01:30] bingomanatee has joined the channel
[01:30] bingomanatee: Hey there
[01:30] ryah: blueadept: they would if you install to the same location
[01:30] bingomanatee: Anyone in the Bay Area doing anything with Node + Mongo / Mongoose? 
[01:31] bingomanatee: I'm presenting on the Mongo DB meetup and as I've been overworked the last month I'm afraid my talk might be a bit thin 
[01:31] ajpiaNOU has joined the channel
[01:31] bingomanatee: Ryah: good job at the PHP meet - the guys I talked to liked the presentation. 
[01:31] emerleite has joined the channel
[01:32] iszak: node.js preaching to PHP'ers?
[01:32] micheil: bingomanatee: learnboost?
[01:32] bingomanatee: Yeah they already presented - I'll probably knock on their door if no users volunteer
[01:33] ChrisPartridge: johnnywengluu: I'm using async.js but use what ever your comfortable with
[01:33] bingomanatee: But its always better hearing from someone who uses a given technology than to hear from someone who makes it. 
[01:33] emerleite: Hi, I've looking for a solution to use socket.io with express/connect session but all I read at doesn't work
[01:33] bingomanatee: (usually)
[01:33] johnnywengluu: ChrisPartridge: just checked it out .. seems very powerful .. and it works on the browser too 
[01:33] emerleite: Any new ideas?
[01:33] ChrisPartridge: johnnywengluu: Yes, SubStack has a nice library too, can't remember name of it though, check his github page
[01:33] blueadept: ryah: another weird thing is when i make uninstall, node remains installed
[01:34] johnnywengluu: ChrisPartridge: will do
[01:34] ryah: blueadept: `which node`
[01:34] blueadept: v 3
[01:34] bingomanatee: ???
[01:34] bingomanatee: who@first.com
[01:34] johnnywengluu: a farfetched question: will Node.js be ported to the browser side? eg. then I can make HTTP/S calls from the browser with the same API
[01:34] SubStack: mine is called seq
[01:35] ChrisPartridge: knew it was 3 letters
[01:35] SubStack: johnnywengluu: getting there
[01:35] bingomanatee: Johnny - you might look to dNode as a "for now" solution to getting node "In" the browser
[01:36] bingomanatee:  cee Substack :D
[01:36] SubStack: browserify I was thinking
[01:36] SubStack: could just write a compatability layer for builtins/
[01:36] SubStack: oh snap, also for net
[01:36] SubStack: on top of websockets
[01:36] dgathright has joined the channel
[01:36] SubStack: even though it would only work with the server as the host and ports are tricky
[01:36] bingomanatee: Once SubStack stops working on his "Browser" :D
[01:37] SubStack: bingomanatee: I mean this: http://github.com/substack/node-browserify 
[01:37] bingomanatee: Ah yes that
[01:37] bingomanatee: definttely a step in the right direction
[01:37] SubStack: I'm using browserify to generate the client source in my dev build of dnode
[01:37] bingomanatee: the Mozilla people are trying to get modules and require() into the JavaScript standard
[01:38] SubStack: I don't like waiting
[01:39] bingomanatee: A perl programmer told me a long time ago that the most important personality for a programmer was impaitence.
[01:39] bingomanatee: ^^ trait
[01:39] mbrochh has joined the channel
[01:39] mbrochh has joined the channel
[01:40] dipser has joined the channel
[01:40] SubStack: perl has three: impatience, hubris, and laziness
[01:41] findipin: bye
[01:42] ryah: god i hate openssl
[01:42] Coal has joined the channel
[01:42] bingomanatee: Ask Aria to make a better one. 
[01:43] SubStack: ryah: likewise!
[01:44] altamic has joined the channel
[01:44] altamic has joined the channel
[01:44] jtsnow_ has joined the channel
[01:45] atmos: is there a way in commonjs to find all the shit that a required file exported?
[01:45] Ond: Couldn't you just stringify the result of require(module) ? 
[01:45] mjr_: atmos: you mean without actually requiring it?
[01:46] mjr_: Otherwise, yeah, just inspect the return value of require, Object.keys() it, or whatever.
[01:46] atmos: i basically wanna require("foo") and create a new object if it has shit matching a certain pattern
[01:46] dve has left the channel
[01:47] atmos: keys doesn't seem to exist
[01:47] tmpvar has joined the channel
[01:47] sprout has joined the channel
[01:47] doubletap has joined the channel
[01:48] Ond: Object.keys(require(module)) 
[01:48] Ond: Doesn't work?
[01:48] luke` has joined the channel
[01:48] mjr_: if (Object.keys(require("foo")).some(function (key) { return key === "pattern" });
[01:48] wang has joined the channel
[01:48] mjr_: er, close to that
[01:48] atmos: perfect, thanks
[01:48] atmos: i was trying require("foo").keys()
[01:50] mynyml_ has joined the channel
[01:50] mynyml has joined the channel
[01:51] atmos: is there an easy way to create a constant from a string ?
[01:51] atmos: eval or somethign ?
[01:51] elliottc1ble has joined the channel
[01:51] SubStack: there are better ways
[01:51] dguttman has joined the channel
[01:51] lukegalea_ has joined the channel
[01:51] atmos: anything i should be googling for ?
[01:52] SubStack: v8: var constants = { FOO : 42, BAR : 66 }; constants['FOO']
[01:52] v8bot: SubStack: 42
[01:52] dguttman has joined the channel
[01:52] eric_f has joined the channel
[01:53] atmos: basically i'm looping over a folder full of plugins and I want to look for exports that match /\w+Plugin/ and create a new plugin if one exists
[01:53] ivan has joined the channel
[01:53] atmos: so i think that example isn't what i'm looking for
[01:53] mjr_: atmos: you can also do this: var varname = "foo", obj = {}; obj[varname] = 123; obj.foo;
[01:53] atmos: i basically want the equivalent of rails constantize
[01:54] zentoooo has joined the channel
[01:54] amerine_ has joined the channel
[01:57] lakin has joined the channel
[01:58] clarkfischer: atmos, variables are properties of an object
[01:58] clarkfischer: if you've parsed a script and are looking for a class/variable defined in it
[01:58] clarkfischer: global['myClass'] === myClass
[01:58] MikhX has joined the channel
[01:59] MiiCode2_ has joined the channel
[01:59] warz has joined the channel
[02:01] deepthawtz has joined the channel
[02:01] jtsnow has joined the channel
[02:01] altamic has joined the channel
[02:01] altamic has joined the channel
[02:01] SubStack: atmos: all capital letter exports?
[02:02] steveo_: anybody got node running on OpenBSD?
[02:02] steveo_: i can't get it to compile
[02:04] bingomanatee has joined the channel
[02:05] abraham has joined the channel
[02:06] bentruyman has joined the channel
[02:06] ChrisPartridge: steveo_: whats it failing on?
[02:07] steveo_: i'll try again and check
[02:07] bwinton has joined the channel
[02:08] steveo_: task: libv8.a SConstruct -> libv8.a
[02:09] miccolis has joined the channel
[02:09] mike5w3c has joined the channel
[02:12] ChrisPartridge: steveo_: what version of gcc?
[02:12] steveo_: 4.2.1
[02:12] hij1nx has joined the channel
[02:15] xandrews has joined the channel
[02:15] SubStack: free joyent food, registered
[02:16] tmpvar has joined the channel
[02:18] lukegalea_ has joined the channel
[02:18] Utkarsh_ has joined the channel
[02:18] ChrisPartridge: steveo_: trying to build 0.4.1 ?
[02:18] steveo_: yeah
[02:19] ryah: i think you'll need to do a little work to get it to run on openbsd
[02:19] ryah: but since you're running openbsd you must be used to that
[02:19] atmos: mjr_: ok yeah, i was being retart
[02:19] steveo_: what sorts of work?
[02:19] ryah: left as an exercise
[02:19] atmos: thanks everyone :)
[02:19] ryah: namely port v8 to openbsd
[02:19] ChrisPartridge: steveo_: this from ryah may help: http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/10822
[02:21] pyrony has joined the channel
[02:21] jakehow has joined the channel
[02:21] dgathright has joined the channel
[02:22] Aria has joined the channel
[02:24] perezd has joined the channel
[02:25] BillyBreen has joined the channel
[02:25] sleeplessinc has joined the channel
[02:25] eaton has joined the channel
[02:27] davidascher has joined the channel
[02:27] softdrink has joined the channel
[02:27] eyesUnclouded has joined the channel
[02:28] steveo_: hmm, not really
[02:30] altamic has joined the channel
[02:30] charlenopires has joined the channel
[02:31] xandrews has joined the channel
[02:32] stagas has joined the channel
[02:32] steveo_: i'm not sure what that guy was trying to install it on
[02:32] sprout has joined the channel
[02:32] steveo_: doesn't seem to be openbsd though
[02:32] steveo_: does v8 not run on openbsd?
[02:33] ryah: steveo_: no
[02:33] abraham has joined the channel
[02:33] steveo_: why not?
[02:33] msch has joined the channel
[02:33] ryah: because on one uses openbsd :)
[02:34] steveo_: does it run on freebsd?
[02:35] spaceinvader: O
[02:35] ryah: probably not
[02:35] spaceinvader: openbsd is amazing for firewalling and routing and that kind of shit
[02:35] spaceinvader: pf is miles better than iptables
[02:35] ryah: steveo_: it's not hard to port it
[02:36] steveo_: really?
[02:36] ryah: yep
[02:36] steveo_: and how would I go about doing that?
[02:37] steveo_: ACTION needs a nudge in the right direction
[02:37] gravyrobber has joined the channel
[02:37] ryah: deps/v8/src/platform-*
[02:37] ryah: cd deps/v8; python tools/test.py
[02:37] ryah: ^- nudge
[02:38] steveo_: hah thanks
[02:40] micheil has joined the channel
[02:43] fR_: hi everyone. is there a way to make changes to 'core' libraries like http.js without recompiling node every time?
[02:44] emerleite has left the channel
[02:44] Determinist has joined the channel
[02:46] Aria: fR_: Sure. Just name them some thing else and require them.
[02:46] ryah: fR_: i recompile every time
[02:50] fR_: okay... was basically wondering if there was any magic to have it load external files, or anything else I should know about.
[02:50] davidascher has joined the channel
[02:50] lukegalea_ has joined the channel
[02:52] Treffynnon has joined the channel
[02:52] dguttman_ has joined the channel
[02:52] steveo_: deps/tools/test.py seems to not work
[02:53] vilsonvieira has joined the channel
[02:58] colinsullivan: Does anyone have experience with dnode?  I am not seeing how I can get the sessionid for a request from the browser
[02:59] johnnywengluu: when im making a HTTP request to an url with this query parameter ?key="https://me.yahoo.com/a/xt4hQ7QYssA8hymJKv8MeVQQKGhq_1jwvas-#a6e6f" it chops it off to ?key="https://me.yahoo.com/a/xt4hQ7QYssA8hymJKv8MeVQQKGhq_1jwvas-
[02:59] johnnywengluu: is there a way to encode that string to something so it doesn't get chop off?
[03:00] tim_smart: SubStack: ping
[03:01] coltrane has joined the channel
[03:01] lukegalea_ has joined the channel
[03:02] mike5w3c_ has joined the channel
[03:02] abrahamwilliams has joined the channel
[03:04] micheil: ryah: ping
[03:04] blueadept has left the channel
[03:04] creativeembassy has joined the channel
[03:14] Virtuo has joined the channel
[03:16] mack has joined the channel
[03:16] jimt_ has joined the channel
[03:17] possibilities has joined the channel
[03:17] mack: Hi there, I'm having trouble getting an npm module working. I've installed it with success 'npm install chain-gang,' however my app says Error: Cannot find module 'chain-gang' 
[03:17] mack: It's pointing to the correct directory as well.
[03:18] ChrisPartridge: mack: did you require('chain-gang') ?
[03:18] mack: Ye
[03:18] mack: Yes
[03:18] mack: var chain = require('chain-gang');
[03:19] MrSmurf has joined the channel
[03:22] lukegalea_ has joined the channel
[03:22] mack: ChrisPartridge: Any ideas?
[03:22] jtsnow has joined the channel
[03:25] arrty has joined the channel
[03:27] ChrisPartridge: mack: Sounds like an issue with the paths
[03:28] Hello71 has joined the channel
[03:29] Twyndyllyngs has joined the channel
[03:31] swistak has joined the channel
[03:31] bentruyman has joined the channel
[03:33] baoist has joined the channel
[03:34] lukegalea_ has joined the channel
[03:36] langworthy has joined the channel
[03:36] masahiroh has joined the channel
[03:37] devdazed has joined the channel
[03:37] devdazed has left the channel
[03:41] Hello71 has joined the channel
[03:41] zemanel has joined the channel
[03:42] steveo_: how do I compile just the v8 code
[03:42] steveo_: in deps
[03:44] Hello71 has joined the channel
[03:44] Hello71 has joined the channel
[03:45] lukegalea_ has joined the channel
[03:45] wilmoore has joined the channel
[03:46] zemanel: stop! node.js based github gist webdav server. carry on ...
[03:48] dustinwhittle has joined the channel
[03:50] Jaye has joined the channel
[03:51] Jaye has left the channel
[03:51] devdazed has joined the channel
[03:52] perlmonkey2: Does this seem correct? I'm seeing jade rendered forms responding about 25% as fast as the same pages rendered as hard coded strings.
[03:52] perlmonkey2: Using 4.1
[03:52] bingomanatee: Hi there
[03:52] bingomanatee: anyone doing anything intersting with mongoDB + node in teh SF area?
[03:52] eric_f has joined the channel
[03:53] comster: LA
[03:53] redmind has joined the channel
[03:54] devdazed has left the channel
[03:54] iszak: bingomanatee, didn't you ask that already?
[03:54] bingomanatee: and it didn't work obviously :D
[03:54] bingomanatee: not everyone lives on this channel 24 / 7 
[03:54] iszak: why are you asking again?
[03:54] iszak: I attempt to.
[03:55] bingomanatee: hows that working for you?
[03:55] iszak: quite well.
[03:55] iszak: I have IRC at home, work and on my mobile.
[03:55] iszak: bingomanatee, so what's your talk on?
[03:55] comster: what mobile app/site?
[03:55] iszak: comster, AndroIRC
[03:55] bingomanatee: My boss occastionally requires me to pay attention to my work. 
[03:56] iszak: bingomanatee, so does mine.
[03:56] bingomanatee: I'm going to do a "Making of" Noogle - however due to my work schedule I'm not as far along as I'd hoped so Its going to be shorter than I'd planned. 
[03:56] bingomanatee: So I'm looking for filler. 
[03:56] iszak: define: noogle?
[03:57] losing has joined the channel
[03:57] bingomanatee: http://narrative.io:3000/
[03:57] iszak: bingomanatee, tell me what do you like about mongoDB?
[03:57] bingomanatee: You'd know that by now if you paid more attention to the channel :D
[03:57] pauls: are you guys fighting? it's hard to tell
[03:58] iszak: bingomanatee, I don't pay attention 24/7 and noogle needs refinement
[03:58] bingomanatee: The fact that you don't ever have to optimize joins , care about data types, and you can shard or replicate your data in a matter of hours. 
[03:58] iszak: you also don't have ACID
[03:58] iszak: WOO NOO ACID
[03:58] bingomanatee: Yes - there is an unreleased version with much more features (login, nick tracking/use aggregation, indexed node documenation) its just not stable yet.
[03:59] bingomanatee: I actually feel that overwriting data in any data repository is a bad pracctice. 
[03:59] bingomanatee: so I don't care about ACID. 
[03:59] konobi: bingomanatee: and lose/corrupt all your data
[03:59] bingomanatee: You have replication to take care of that - and its not really as much of a problem anymore 
[04:00] bingomanatee: Earlier versions of Mongo were a little unstable but thre has been a HUGE amount of development and usae since then. 
[04:00] perlmonkey2: "don't ever have to optimize joins"....hahahahahaha. Yeah, because you are stuck in the incredibly sucky world of not having table joins.
[04:00] iszak: another mongodb bandwagoner.
[04:00] bingomanatee: There is some truth to that. 
[04:00] bingomanatee: I didn't say "Mongo is the solution to every data problem ever conceieved." I said I like it. 
[04:01] pauls: bingomanatee++ 
[04:01] v8bot:  pauls has given a beer to bingomanatee. bingomanatee now has 1 beers.
[04:01] perlmonkey2: Yeah, I love Mongo.
[04:01] perlmonkey2: Just saying NoSQL has some real challenges. 
[04:01] iszak: I like rmdb.
[04:01] iszak: or whatever it is.
[04:01] admc has joined the channel
[04:01] bingomanatee: And because it is already built around JSON and I use node which uses JSON it requires the least amount of work to permute the data I use into the repository. 
[04:01] JulioBarros has joined the channel
[04:01] bingomanatee: Yes - and SQL also has challenges. 
[04:02] perlmonkey2: I like it because it has a great ORM. 
[04:02] iszak: is there any converters from MongoDB to MySQL/SQL?
[04:02] paulrobinson has joined the channel
[04:02] bingomanatee: SQL is the bottleneck of ALMOST EVERY MODERN APPLICATION. 
[04:02] perlmonkey2: wha?
[04:02] perlmonkey2: bs
[04:02] perlmonkey2: I call bs
[04:02] pauls: @iszak you can use mongohub
[04:02] iszak: perlmonkey2++
[04:02] v8bot:  iszak has given a beer to perlmonkey2. perlmonkey2 now has 1 beers.
[04:02] iszak: pauls, just incase I want to press esc on mongodb.
[04:02] dguttman has joined the channel
[04:03] bingomanatee: I'm not goi9ng to argue this. 
[04:03] iszak: best not.
[04:03] bingomanatee: A lot of smarter people than me have already made this point. 
[04:04] iszak: is that your final answer?
[04:04] perlmonkey2: And I post this while having a love affair with Mongo (or really just Mongoose): http://www.youtube.com/watch?v=b2F-DItXtZs
[04:04] bingomanatee: I only say this from having worked in Live Nation, StumbleUpon, Clean Power Finance, Gamespot, Cisco, Varian, and Intel and seen what really large successful companies are really concerned about and it is almost always how can we improve our databases so thar our applications are performant. 
[04:05] fR_: so... http.js says that parser.onIncoming will be called later on if an upgrade header is received... but its not clear to me that this ever actually happens. https://github.com/joyent/node/blob/master/lib/http.js#L85
[04:05] EyePulp has joined the channel
[04:05] iszak: perlmonkey2, love that video.
[04:06] perlmonkey2: /dev/null is web scale!
[04:06] perlmonkey2: iszak: instant classic.
[04:06] iszak: pretty much
[04:08] dnyy has joined the channel
[04:10] chapel has joined the channel
[04:10] iszak: perlmonkey2, even though I've seen it before, worth watching it again.
[04:11] perlmonkey2: iszak: yeah, I just finished it again. Laughed just as hard.
[04:11] iszak: it's so true though.
[04:12] jimt has joined the channel
[04:12] iszak: unless you have a specific use case for MongoDB I'd stick with RDBMS.
[04:12] fR_: hmm, so is the idea that onHeadersComplete will be called as soon as Upgrade is received, then after that you need to do your own parsing from the raw socket of the remaining headers/data? maybe the comments are just outdated
[04:14] perlmonkey2: iszak: it is certainly easier to design your db with an relational db. And when you're running some mapreduce on an N^2 query, you'll be praying that blazing speed was just a little bit faster.
[04:15] bingomanatee: I do love the YouTube - It does bring some good poiints up but there are counterpoints as well. 
[04:15] Adman65 has joined the channel
[04:15] Viriix has joined the channel
[04:15] bingomanatee: Anyway I didn't come on this channel to tell people what repository to use. I also think CouchDB is a great noSQL system and has a lot of good scaling features too - I'm not interested in selling Mongo. I was looking for someone who uses it and wants to present on itl 
[04:16] bingomanatee: So yes, you can make a site using RDBMS and become wealthy and old using SQL so if you are happy fine. 
[04:17] emmanuel has joined the channel
[04:18] lukegalea_ has joined the channel
[04:18] chapel: I think peoples issue with the whole nosql position is that people advocate it for everything
[04:18] creativeembassy_ has joined the channel
[04:19] dguttman has joined the channel
[04:20] alex1 has joined the channel
[04:20] fR_: if this is correct... do I then need to create a new parser in my agent's 'upgrade' event handler?
[04:21] possibilities has joined the channel
[04:22] chrischris has joined the channel
[04:24] fR_: i'm trying to use websockets, which sends additional HTTP headers after the 'Upgrade' header... but it looks like node's parser will bail (and trigger onHeadersComplete) as soon as it sees that. 
[04:25] zorzar has joined the channel
[04:30] bingomanatee: chapel: and people sold on RDBMS don't make the same mistake?
[04:30] chapel: well, of course they tend to use it for everything
[04:30] chapel: its like with anything
[04:30] chapel: I think node.js could/should be used for everything
[04:31] bingomanatee: Neither side is absolutely right in its position. However most Mongo people know and understand RDBMS 's strengths and weaknesses
[04:31] chapel: but obviously there are things that are better for different problems
[04:31] bingomanatee: whereas the RDBMS critics as a rule have not done their diligence with Mongo or NoSQL as a rule. 
[04:31] chapel: I guess its just there are more rdbms people than there are nosql people
[04:31] chapel: so its okay to scoff at them
[04:32] perlmonkey2: Well what are the bonuses of nosql?  Rapid prototyping and 'web scale'. Right?
[04:32] bingomanatee: I think its okay to say "I spent years using your system, then found something that met my needs better" 
[04:32] bingomanatee: Because a NoSQL database saves to dev/null faster than RDBMS
[04:32] amerine has joined the channel
[04:32] lukegalea_ has joined the channel
[04:32] fR_: guys, your drivel is drowning out real conversation about node.
[04:33] bingomanatee: There are no benefits to NoSQL. Don't use it. Its not stable and is not mature technology. 
[04:36] ryah: fR_: no doesn't bail after the upgrade header - it bails after the headers are complete
[04:36] ryah: fR_: if you can demonstrate it acting differently though, i'd be interested to see it
[04:36] fR_: oh.. okay i must've misread something....
[04:36] fR_: it wasnt clear that in the 'upgraded' event i could get a copy of the parsed headers, did I miss that too?
[04:37] ryah: fR_: i believe you get the request object, req.headers
[04:38] fR_: ahh yep, thanks. sorry about my confusion. 
[04:41] pyrony has joined the channel
[04:45] jacobolus has joined the channel
[04:47] lukegalea_ has joined the channel
[04:49] adrian_berg has joined the channel
[04:49] Me1000 has joined the channel
[04:49] PyroPete1 has joined the channel
[04:50] confoocious has joined the channel
[04:57] lukegalea_ has joined the channel
[04:58] dancor has joined the channel
[04:59] dguttman has joined the channel
[05:01] ajnasz has joined the channel
[05:02] cloudhea1: can someone explain to me why this doesn't work? https://gist.github.com/841788
[05:03] cloudhead: why does is `data` undefined in `this.run()` ?
[05:04] cloudhead: -does
[05:06] fR_: ryah: is the callback passed into http.request() ever supposed to be called in the case of an Upgrade header?
[05:06] pair has joined the channel
[05:07] micheil has joined the channel
[05:07] dguttman_ has joined the channel
[05:07] ryah: fR_: hm - im not sure
[05:07] ryah: fR_: not sure we've defined that for http.request
[05:07] dguttman has joined the channel
[05:07] ryah: for http.Client it's emitted on the response object, i think
[05:08] fR_: well it does take a callback arg, and if there's no upgrade it is called
[05:08] nornagon_ has joined the channel
[05:09] nornagon_: what's the best way to detect when a client closes a request?
[05:09] nornagon_: currently i'm doing req.socket.on('end')
[05:09] nornagon_: but comparing with tcpdump, that doesn't seem to get fired when the FIN is sent
[05:10] fR_: so either there's a bug or the behavior should be made more clear. i
[05:10] ryah: nornagon_: that should correspond to it
[05:10] creativeembassy has joined the channel
[05:11] ryah: fR_: yeah - i think the behavior should be made more clear
[05:11] nornagon_: hm, it does seem to eventually get fired
[05:11] ChrisPartridge: cloudhead: because this.data doesn't existing inside the run() methods scope?
[05:11] nornagon_: but a *long* time after I see the FIN appear
[05:11] nornagon_: like, 60 seconds
[05:11] ChrisPartridge: s/existing/exist
[05:11] ryah: nornagon_: req.on('aborted') exists
[05:12] adrian_berg: process.stdin.resume(); tells node to do what?
[05:12] adrian_berg: process.stdin.on says to start listening to stdin? 
[05:12] nornagon_: i might try that.
[05:13] adrian_berg: process.stdin.on('data', function(chunk){ process.stdout.write('data: ' + chunk); }); 
[05:13] nornagon_: nope, that doesn't seem to get through either :S
[05:13] ryah: :/
[05:13] adrian_berg: ...confuses me, though that's not hard to do
[05:13] nornagon_: i wonder if it's nginx's fault
[05:13] ryah: if node is recving FIN it should close the socket
[05:13] ryah: what about req.socket.on('close') ?
[05:14] nornagon_: oh, weird. When I use curl to connect and ^C it, it happens immediately
[05:14] adrian_berg: is 'data' what is being stored in process.stdin.on('data'...){}
[05:14] fR_: ryah: okay. so I think that comment should be removed (line 85)... and then right below it i'd add something like: } else if (agent.listeners('response').length) { throw 'callback not fired when upgrade header received'; }
[05:14] adrian_berg: the user's input
[05:14] ryah: fR_: can you open a github issue - i can't work on it right now
[05:15] fR_: sure.
[05:15] cloudhead: ChrisPartridge: why not though?
[05:16] ChrisPartridge: cloudhead: because when this.run() gets called, the inner functions scope changes
[05:16] dgathright has joined the channel
[05:16] ChrisPartridge: (i think)
[05:16] cloudhead: ChrisPartridge: to what?
[05:16] cloudhead: ChrisPartridge: any idea how I can get something like that to work?
[05:17] cloudhead: I don't understand why the methods can't access the same `this` as the caller
[05:17] Yuffster_work has joined the channel
[05:17] cloudhead: like in normal javascript
[05:17] pkrumins: is there a way to install older npm?
[05:17] pkrumins: i cant get dnode working with npm 0.3.7
[05:18] pkrumins: but on our servers it works with 0.2.8, so i want that :)
[05:18] perlmonkey2 has left the channel
[05:19] yhahn has joined the channel
[05:20] ChrisPartridge: cloudhead: try something like this https://gist.github.com/841803
[05:22] ChrisPartridge: cloudhead: There are some great articles on howtonode.org, a series called "Learning Javascript with Object Graphs" - three parts, I found this really useful in grasping the concepts
[05:22] dipser has joined the channel
[05:22] adrian_berg: can someone give me some instructions on how to understand stdin?
[05:22] adrian_berg: http://pastie.org/private/qwqwrgv0gwm3o28jsckkq
[05:23] eyesUnclouded has joined the channel
[05:23] adrian_berg: thinking if i can find where it's defined in the source code, i might be able to understand slightly better
[05:23] cloudhead: ChrisPartridge: hmm yea closure scope seems to work
[05:23] nornagon_: ryah: ah, my fault, not yours-- the client i'm using holds the connection open for pipelining :)
[05:23] cloudhead: ChrisPartridge: well, the issue is it's not behaving like javascript
[05:24] nornagon_: ryah: but is req.on('aborted') different to/better than req.socket.on('end') (or close?)
[05:24] adrian_berg: i understand you all have more important things to worry about right now, so i'll try to be patient
[05:24] tilgovi has joined the channel
[05:25] kollektiv has joined the channel
[05:25] kollektiv has joined the channel
[05:25] adrian_berg: i think it's specified somewhere in libeio
[05:25] ryah: nornagon_: tbh i forget (even though i only wrote that 2 weeks ago)
[05:25] nornagon_: haha :D
[05:26] nornagon_: hey, that's weird. I do res.writeHead(200, {connection: 'close'}), but the header never shows up in the output.
[05:29] nornagon_: it just sends ConnectionL keep-alive instead
[05:29] nornagon_: s/L/:
[05:32] flippyhead has joined the channel
[05:32] nornagon_: ragh
[05:32] nornagon_: that is nginx's doing
[05:34] Fullmoon has joined the channel
[05:36] lukegalea_ has joined the channel
[05:42] ryah: yeah, odn't test servers through a proxy :)
[05:42] yhahn has left the channel
[05:43] shaver: test what you ship!
[05:43] Twelve-60 has joined the channel
[05:45] rfay has joined the channel
[05:45] possibilities has joined the channel
[05:47] Twelve-60` has joined the channel
[05:49] luke`_ has joined the channel
[05:50] steveo_: ryah: I got it to install on openbsd, found a few bugs in v8 that were causing my problems
[05:50] steveo_: does node maintain that or just pull a new v8 from google every once in awhile
[05:50] steveo_: aka, who should I tell about these fixes
[05:50] Twelve-60 has joined the channel
[05:51] lukegalea_ has joined the channel
[05:52] mnot: hmm, http://search.npmjs.org/ seems to have fallen behind...
[05:53] ryah: steveo_: please ssne them to v8
[05:53] ryah: then we'll pull from them
[05:53] steveo_: ok cool
[05:53] steveo_: thanks
[05:54] steveo_: ACTION has had enough c++, back to javascript
[05:55] pquerna: https://www.cloudkick.com/blog/2011/feb/23/outage-postmortem/
[05:56] adrian_berg: I'm not seeing 'sys' anywhere in the node.js documentation
[05:56] adrian_berg: http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/ mentions doing var sys = require('sys'); sys.puts('hello world');
[05:57] adrian_berg: that works just fine, but i can't find that anywhere in the node docs
[05:57] iszak: adrian_berg, it's an old post no doubt, node.js has undergone some API changes.
[05:57] langworthy has joined the channel
[05:58] adrian_berg: iszak: but it's still present and works, i'm guessing to maintain backwards compatibility
[05:58] wadey has joined the channel
[05:58] iszak: quite possibly yes.
[05:58] adrian_berg: is process.stdin process.stdout the recommended methods for handling i/o now?
[05:58] iszak: I would say so, yes.
[06:00] adrian_berg: iszak: do you have time to explain this to me? http://pastie.org/1601072
[06:00] adrian_berg: what are bufferSize, fd, type, allowHalfOpen, etc.?
[06:00] ryah: pquerna: bad day?
[06:02] iszak: adrian_berg, I honestly have no idea.
[06:04] iszak: I never really liked nettutsplus
[06:04] thnkfst has joined the channel
[06:04] jamescarr has joined the channel
[06:05] jamescarr: iszak?
[06:05] dthompson has joined the channel
[06:05] iszak: jamescarr, yes?
[06:06] jamescarr: I'm trying to do an npm bundle and nothing seems to be happening... 
[06:06] iszak: that's a different iszak
[06:06] jamescarr: oh :-P
[06:06] iszak: isaac or so
[06:06] jamescarr: I autocompleted ;)
[06:07] iszak: it happens.
[06:08] iszak: I should become an expert in npm and then get all these support requests.
[06:08] admc has joined the channel
[06:11] lukegalea_ has joined the channel
[06:14] bentruyman has joined the channel
[06:15] Twelve-60 has joined the channel
[06:20] jamescarr has joined the channel
[06:20] jamescarr: what's the hip couch library these days?
[06:21] derferman has joined the channel
[06:22] lukegalea_ has joined the channel
[06:24] w0rse_ has joined the channel
[06:26] arlolra has joined the channel
[06:28] arlolra: someone might want to change that chanserv msg to joyent/node/wiki
[06:29] meso has joined the channel
[06:29] Validatorian has joined the channel
[06:33] defunkt has joined the channel
[06:34] lukegalea_ has joined the channel
[06:35] Schrieks has joined the channel
[06:35] tmpvar has joined the channel
[06:35] devinus has joined the channel
[06:37] Schrieks: hey. when I run the command     node example.js     in windows, the cmd window just says "..." and doesn't actually run (or complete its startup or whatnot) and I have to Ctrl-C to get out of it. Anyone know what I'm doing wrong, or how to get it to operate as expected on Windows?
[06:37] elmer1 has joined the channel
[06:38] dewey_ has joined the channel
[06:39] Adman65 has joined the channel
[06:40] pquerna: ryah: worst
[06:43] shaver: ryah: http://blog.mozilla.com/respindola/2011/02/04/clang-results/
[06:44] mikeal has joined the channel
[06:46] mjr_: I'm going to miss the Joyent no.de announcement event by a mere week.
[06:46] mjr_: Tragic.
[06:47] jamescarr: any recommendation for client side js libraries for ipad dev?
[06:47] jamescarr: throwing a prototype together for a friend to allow for course creation
[06:47] Schrieks: does anyone here run node on windows?
[06:48] davidascher has joined the channel
[06:49] Evet: what do you use to manage multiple web-sites?
[06:50] mnbvasd: Schrieks: most people try to avoid it.
[06:51] Schrieks: mnbvasd, that's fair. have you ever seen the elipses issue i mentioned above?
[06:51] beawesomeinstead has joined the channel
[06:51] lukegalea_ has joined the channel
[06:51] Schrieks: i don't know that it's a windows-specific issue, or if it's something in node that i'm doing wrong.
[06:52] springmeyer has left the channel
[06:52] mnbvasd: elipses?
[06:53] Schrieks: yes
[06:53] Schrieks: when i enter    node example.js    it goes to the next line and shows elipses
[06:54] Schrieks: it appears to be in a multiline command entering mode
[06:54] Schrieks: but i don't know
[06:54] void_ has joined the channel
[06:54] msch has joined the channel
[06:55] Schrieks: Like if I enter  Math.round(  and press enter, it does the epipses and allows me to complete the command
[06:55] Schrieks: and when i do, it evaluates it
[06:55] mnbvasd: erm, if I just run node, and it goes to repl.. then I do something like: a= and hit enter.
[06:55] mnbvasd: yeah, that's probably falling back into repl mode?
[06:57] kawaz_air has joined the channel
[06:58] Schrieks: hmmm. not working for me...
[06:58] kawaz_work has joined the channel
[06:58] Schrieks: "By executing node without any arguments from the command-line you will be dropped into the REPL. It has simplistic emacs line-editing."
[06:58] Schrieks: for some reason, it's dropping me into repl even though I did give node an argument :/
[06:59] mnbvasd: yeah, some demos I've seen put you in repl
[06:59] m4noo has joined the channel
[07:02] Schrieks: well, i think i have inched closer to the root issue. when i just run  the command    node    without any args, I get this
[07:02] Schrieks: > node ReferenceError: node is not defined     at [object Context]:1:1
[07:02] mjr_: have you seen Inception?
[07:02] Schrieks: and if i do      nore blah    (yes, intentional misspelling) then it goes into repl
[07:02] mjr_: I think this is like that.
[07:02] bingomanatee_ has joined the channel
[07:03] mjr_: Try hitting return,  then control-d
[07:03] Schrieks: i have to figure out why it doesn't know wtf node is. :/
[07:03] mjr_: You are already in node
[07:03] mjr_: Get yourself back to bash.
[07:03] mjr_: And start again.
[07:03] Schrieks: well, that's part of the issue... no bash as such, i believe. i'm on windows.
[07:04] mjr_: oh lord
[07:04] Schrieks: heh
[07:04] mjr_: Well, cygwin uses bash, no?
[07:04] dgathright has joined the channel
[07:05] Schrieks: I expect yes, but it's not apparent.
[07:05] SamuraiJack has joined the channel
[07:06] namelessnotion_ has joined the channel
[07:06] Schrieks: ah ha.
[07:06] Schrieks: as you said, i was already IN node...
[07:07] Schrieks: so it didn't accept commands that began with "node" ... I knew it wasn't valid js since node isn't a keyword or operator in js, but I was following the example docs, just expecting it would work.
[07:07] Schrieks: anyway, thanks :)
[07:10] lukegalea_ has joined the channel
[07:13] luke` has joined the channel
[07:13] FireFly|n900 has joined the channel
[07:15] stonebranch has joined the channel
[07:21] gggg has joined the channel
[07:22] isaacs has joined the channel
[07:23] razvandimescu has joined the channel
[07:23] muhqu has joined the channel
[07:23] tmzt: jamescarr: zepto probably, also brunch which has it included
[07:24] jamescarr: thanks... was trying sencha...
[07:26] daglees has joined the channel
[07:26] lukegalea_ has joined the channel
[07:27] Neil_ has joined the channel
[07:28] gggg has joined the channel
[07:30] mraleph has joined the channel
[07:32] stonecobra has joined the channel
[07:37] SubStack: tim_smart: pong!
[07:37] SubStack: colinsullivan: you can do conn.id in dnode to get a unique identifier for clients
[07:38] melgray has joined the channel
[07:39] tmzt: SubStack: you have jade in the browser?
[07:39] tmzt: template instantiation in reponse to json data would work
[07:39] tmzt: ?
[07:39] lukegalea_ has joined the channel
[07:41] SubStack: yep!
[07:41] muhqu_ has joined the channel
[07:41] SubStack: nah that's lame
[07:42] SubStack: wrapping around the installed copy of jade at runtime is much cooler
[07:43] muhqu__ has joined the channel
[07:43] tmzt: hmm?
[07:44] tmzt: no, I mean the browser client script gets the json and applies a template to it
[07:44] tmzt: if it could be treated like a fragment is in jquery that would be even better
[07:44] ChrisPartridge has joined the channel
[07:44] Throlkim has joined the channel
[07:45] jamescarr: man... Ext's api is a little sick sometimes
[07:46] tmzt: so $.jade('.outer\r\t.inner1 #{inner1}\r\t.inner2 #{inner2}
[07:46] tmzt: returns a jQuery() object
[07:47] tmzt: I guess it would need options though, then just pass the json result as a local
[07:48] tmzt: does -each work?
[07:52] emattias has joined the channel
[07:53] Emmanuel: ok, this is driving me crazy
[07:53] Emmanuel: I'm trying to use Mongoose/mongodb
[07:53] Emmanuel: how can I even try that the thing is actually connected to the databse ?
[07:53] ivanfi has joined the channel
[07:53] Emmanuel: I tried the simplest example, none of them works
[07:55] Emmanuel: this : http://pastebin.com/vFAJ4Sg4 yells for "undefined is not a function" (problem line 28)
[07:55] Emmanuel: (this is kind of directly paste from the Mongoose website
[07:55] Emmanuel: (sorry, line 15)
[07:58] sriley has joined the channel
[07:58] robtmr has joined the channel
[07:59] groom has joined the channel
[08:00] tk has joined the channel
[08:01] arlolra: what version of node are you using?
[08:01] Pat has joined the channel
[08:01] ttpva has joined the channel
[08:02] arlolra: Emmanuel: ^
[08:02] Emmanuel: latest
[08:02] arlolra: in the repl
[08:02] Emmanuel: wait :)
[08:02] pau|c has joined the channel
[08:02] arlolra: if you console.log("hello")
[08:02] Emmanuel: 0.4.0
[08:02] arlolra: what happens?
[08:02] Emmanuel: it works
[08:03] Emmanuel: actually I'm wrong
[08:03] Emmanuel: problem is with line :
[08:03] masahiroh has joined the channel
[08:03] Emmanuel: var user = new User({email: 'AVENUE@Q.COM'});
[08:03] Emmanuel: apparently, "User" is not a function
[08:03] arlolra: that's not line 15
[08:03] Emmanuel: (yes, I'm confused)
[08:03] Emmanuel: (because I stripped the code for pastebin :/)
[08:03] zylo has joined the channel
[08:04] Emmanuel: I'll update it with a much simpler case
[08:04] Utkarsh has joined the channel
[08:04] arlolra: should it be new UserSchema
[08:05] arlolra: and not new User
[08:05] Emmanuel: am I that stupid ?
[08:05] Emmanuel: pfiu :)
[08:05] Emmanuel: nope :)
[08:06] arlolra: yeah
[08:06] Emmanuel: from what I understood
[08:06] arlolra: no no
[08:06] arlolra: it shouldn't 
[08:06] arlolra: i am wrong
[08:06] Emmanuel: I "define" the model with var User = mongoose.model('User', UserSchema);
[08:06] Emmanuel: and then I should be able to instantiate the thing with new User(xx)
[08:08] arlolra: hmm, not sure
[08:08] arlolra: i don't have either of these installed
[08:09] robtmr: v8: typeof NaN === 'number'
[08:09] v8bot: robtmr: true
[08:10] sveimac has joined the channel
[08:10] robtmr: lol
[08:12] emattias has joined the channel
[08:14] arlolra: Emmanuel: read accessing a model here: https://github.com/LearnBoost/mongoose
[08:14] Emmanuel: thanks !
[08:15] nivoc has joined the channel
[08:15] arlolra: define
[08:15] arlolra: then access
[08:16] floby has joined the channel
[08:16] arlolra: mongoose.model('BlogPost', BlogPost);
[08:16] arlolra: var myModel = mongoose.model('ModelName');
[08:16] crodas has joined the channel
[08:17] arlolra: d'you get it?
[08:18] emattias_ has joined the channel
[08:19] bilalhusain_ has joined the channel
[08:20] bilalhusain_: anyone tried brunch?
[08:20] Emmanuel: arlolra: I'm on it
[08:20] w0rse has joined the channel
[08:20] pibi has left the channel
[08:21] bilalhusain_: i am getting segfault when i run brunch new app
[08:21] emattias has joined the channel
[08:21] yozgrahame has joined the channel
[08:21] lukegalea_ has joined the channel
[08:22] bilalhusain_: no logs, no extra info just Segfault after "Brunch: created brunch directory layout"
[08:22] Emmanuel: arlolra: same effect :/
[08:22] arlolra: can you pastebin what you have now?
[08:24] arlolra: http://pastebin.com/dkCgkva6
[08:24] Emmanuel: arlolra: found it !
[08:24] arlolra: works?
[08:24] Emmanuel: (gimme 2 sec :)
[08:25] Emmanuel: it works, yes
[08:25] Emmanuel: (slow pastebin connection)
[08:25] Emmanuel: http://pastebin.com/CqxfDW6q
[08:25] Emmanuel: so
[08:25] Jonasbn_ has joined the channel
[08:26] Emmanuel: apparently you have to mongoose.model('NameOfTheModel', SchemaOfTheModel);
[08:26] arlolra: yup
[08:26] Emmanuel: then you can var MyModel = mongoose.model('NameOfTheModel');
[08:26] arlolra: exactly
[08:26] gozala has joined the channel
[08:26] Emmanuel: and finally instantiate var MyThing = new MyModel(xxx);
[08:27] Emmanuel: I shouldn't have trusted the mongoose website :)
[08:27] venom00ut has joined the channel
[08:27] arlolra: lesson learnt
[08:27] arlolra: enjoy
[08:27] Emmanuel: ahah
[08:27] Emmanuel: thanks for your help !
[08:27] arlolra: np
[08:28] nook has joined the channel
[08:28] mAritz has joined the channel
[08:30] CrazyGoogle has joined the channel
[08:31] Throlkim has joined the channel
[08:31] dancor has joined the channel
[08:33] bilalhusain has joined the channel
[08:33] kal-EL_ has joined the channel
[08:33] amerine has joined the channel
[08:33] mraleph has joined the channel
[08:34] bilalhusain has joined the channel
[08:34] SubStack: tmzt: why jquery?
[08:34] Druid_ has joined the channel
[08:34] SubStack: oh hah my client was scrolled up
[08:34] SubStack: ACTION was out biking
[08:36] admc1 has joined the channel
[08:37] msucan has joined the channel
[08:38] zylo has joined the channel
[08:38] w0rse has joined the channel
[08:38] [AD]Turbo has joined the channel
[08:39] sveimac has joined the channel
[08:40] tmzt: SubStack: I'm using jquery for the ajax parts, dnode was too slow and in this case unnecessary overhead
[08:41] SubStack: I mean why jquery for templating
[08:41] tmzt: I'm rapid prototyping, the synatax is much smaller/faster to write
[08:42] tmzt: I'm hoping to use a much smaller replacement later, but jq is fine at this stage
[08:42] tmzt: no, jade for templating
[08:42] SubStack: I mean why $.jade()
[08:42] tmzt: I want to use the same templates server and client side for partials
[08:43] SubStack: instead of $().html(jade())
[08:43] tmzt: you're syntax is fine, that's just a nice to have, and I can write it myself wrapping yourstuff
[08:43] SubStack: k
[08:43] tmzt: ah, I was hoping to keep the uninstantiated template, but it doesn't matter
[08:43] tmzt: it wouldn't work anyway
[08:43] jetheredge has joined the channel
[08:44] tmzt: oh $(jade()) would work fine
[08:44] Jamool_ has joined the channel
[08:44] tmzt: I just want to have the createElement done for me (or .innerHTML +=)
[08:45] MikhX has joined the channel
[08:45] SubStack: oh that makes sense
[08:46] mnot: isaacs: is search.npmjs.org having problems?
[08:46] SubStack: perhaps var $jade = function (code) { return $('<div>').html(jade(code)) }
[08:46] lukegalea_ has joined the channel
[08:46] isaacs: mnot: not sure.  that's mikeal's thing
[08:46] SubStack: lots of ways to go with that, and now you can just require() them!
[08:46] mnot: isaacs: ah, sorry, thx
[08:47] mr_daniel has joined the channel
[08:47] dgathright has joined the channel
[08:48] [ADTurbo] has joined the channel
[08:49] jamescarr: oh geez
[08:49] jamescarr: asked an admin if he could grant table creation to a user role for me...
[08:50] jamescarr: somehow that tore the mysql server apart. On the production site
[08:51] aabt has joined the channel
[08:53] jetienne has joined the channel
[08:56] jetienne: q. is there a way to reload the core modules without recompiling node itself ?
[09:01] ryah: jetienne: you need to restar tthe process
[09:01] emmanuel_ has joined the channel
[09:01] andrewfff has joined the channel
[09:02] w0rse has joined the channel
[09:03] jetienne: ryah: ok
[09:03] sholmes has joined the channel
[09:05] nivoc has joined the channel
[09:06] jetienne: ryah: on a different subject, im playing with node_module, suppose a module is in /module/path and install 3 dependancies, where should they be installed ? in /module/path/node_modules ? in /module/node_modules ? elsewhhere ?
[09:06] darkredandyellow has joined the channel
[09:07] lukegalea_ has joined the channel
[09:07] jetienne: i got doubts because if /module/path/index.js does a require(), /module/path/node_module wont be searched, correct ?
[09:08] jetienne: incorrect on a second read, going to fetch coffe. morning is hard for brain
[09:13] tc77 has joined the channel
[09:15] joecorcoran has joined the channel
[09:16] clarkfischer has joined the channel
[09:17] aklt has joined the channel
[09:19] mickael_ has joined the channel
[09:21] ryah: jetienne: either of those work
[09:21] ryah: the /module/path/node_modules has priority
[09:21] jetienne: ok
[09:22] tmzt: so I have a certain path in express that gets stuck in an infinite loop but there's no logic to trap that exact path
[09:22] ryah: jetienne: what's your opinion on node_modules ?
[09:22] ryah: tmzt: hm
[09:23] tmzt: anyway to get a stack trace? I'm using cluster
[09:23] Neil_ has joined the channel
[09:23] lukegalea_ has joined the channel
[09:24] jetienne: ryah: i dont get it fully. but it has a advantage in my view. each directory can have its own dependancies. like projectA can use expressv11 and projectV can use expressv22
[09:24] jetienne: ryah: but the depth of the scan up to the root seems too deep for me. i guess you cache the negative result
[09:25] alex1 has joined the channel
[09:26] pyrony has joined the channel
[09:27] q_no has joined the channel
[09:27] gozala has joined the channel
[09:28] tmzt: ryah: more than that, there is no output from the request at all, it's not logged on stderr and nothing from console.log prints
[09:28] tmzt: but it does if the request completes (not that url)
[09:28] narayan82 has joined the channel
[09:29] Remoun has joined the channel
[09:31] stagas has joined the channel
[09:32] tbassetto has joined the channel
[09:33] jankoprowski has joined the channel
[09:33] sveimac has joined the channel
[09:37] pdelgallego has joined the channel
[09:37] tmzt: this is better, it does it without the node instance running :)
[09:38] cloudhead: what's the easiest way to check if a file/dir is writable?
[09:39] isaacs: cloudhead: stat it, and then check the mode
[09:39] tmzt: weirdness, so clearing the firefox session also fixed it
[09:39] tmzt: but restarting nginx did not
[09:39] cloudhead: isaacs: but will that take into account the process uid?
[09:40] isaacs: cloudhead: well, ok, here's an isWritable function, just a sec...
[09:40] lukegalea_ has joined the channel
[09:40] cloudhead: isaacs: hehe, ok
[09:40] cloudhead: isaacs: this would be really useful in core
[09:41] stonebranch has joined the channel
[09:42] pkrumins: isaacs: i had to install an older npm today, and the instruction on github page didn't work. It said 'git checkout origin/0.2'. So when I tried 'git checkout origin/0.2.8-1' it didn't work. Then I tried just 'git checkout v0.2.8-1' and it worked!
[09:43] torvalamo has joined the channel
[09:44] isaacs: cloudhead: https://gist.github.com/1ee7af2f60de94e91e6f
[09:45] isaacs: pkrumins: you have to pull the origin branches first.
[09:45] isaacs: pkrumins: origin/0.2 is a branch.  if you'd done git fetch -a, or set up git to pull branches, then it'd work
[09:45] pkrumins: isaacs: oh, the instructions didn't say that.
[09:46] pkrumins: got it
[09:46] isaacs: pkrumins: https://github.com/isaacs/npm/tree/0.2
[09:46] pkrumins: aha!
[09:46] cloudhead: isaacs: thanks duder
[09:46] isaacs: pkrumins: normally clone pulls those, i thought
[09:46] SubStack: as soon as I get the new dnode stuff out we can switch over to the latest stable everything
[09:46] isaacs: ok, bedtime.  good night node
[09:46] SubStack: but ssh-server is more pressing
[09:47] d0k has joined the channel
[09:47] masahiroh has joined the channel
[09:50] jetienne: raa almost
[09:50] jetienne: http://search.npmjs.org <- anybody knows if the code for this server is published somewhere ? (as isaacs just left)
[09:51] squeeks: jetienne: iirc it's on isaac's github somewhere
[09:52] xla has joined the channel
[09:53] jetienne: https://github.com/isaacs/npmjs.org got it. search.* is not in there. but i will get more info with this one already
[09:54] mape: https://github.com/mikeal/npmjs.org
[09:57] Bosmon has joined the channel
[09:57] jetienne: , '|| n.match(/[\\/\\(\\)&\\?#\\|<>@:%\\s\\\\]/)' <- yummy :)
[09:57] jetienne: mape: yours is != from isaacs one ?
[09:57] mape: jetienne: ?
[09:57] mape: it fetches from the live feed
[09:59] lukegalea_ has joined the channel
[09:59] unomi has joined the channel
[09:59] jetienne: mape: you mean search.* is using normal npmjs.org rest API to get the results ?
[09:59] stonebranch has joined the channel
[09:59] mape: mine does yeah, through jsonp
[10:00] jetienne: mape: like search.npmjs.org download the whole json and handle it on the server ?
[10:00] jetienne: mape: ok
[10:00] mape: oh, no npm.mape.me
[10:00] mape: sorry, early here, search.npm* uses couch api I belive
[10:00] mape: and json out to the client
[10:01] jetienne: btw the big json is not even cached by the server ...
[10:03] mbrochh]2 has joined the channel
[10:03] xla has joined the channel
[10:04] jetienne: time curl -s http://registry.npmjs.org > /dev/null
[10:04] jetienne: real	0m6.180s
[10:06] msch_ has joined the channel
[10:08] romainhuet has joined the channel
[10:10] dewey_ has joined the channel
[10:11] dewey__ has joined the channel
[10:14] saikat has joined the channel
[10:15] msch has joined the channel
[10:15] pyrony has joined the channel
[10:17] papandreou has joined the channel
[10:18] msch_ has joined the channel
[10:18] sriley has joined the channel
[10:19] sveimac has joined the channel
[10:19] lukegalea_ has joined the channel
[10:20] dguttman_ has joined the channel
[10:20] mbrochh has joined the channel
[10:22] mike5w3c has joined the channel
[10:23] Twelve-60` has joined the channel
[10:23] __tosh has joined the channel
[10:23] dve has joined the channel
[10:28] nornagon_ has joined the channel
[10:29] msch has joined the channel
[10:32] sivy_ has joined the channel
[10:32] SvenDowideit_ has joined the channel
[10:33] pyrotechnick has joined the channel
[10:34] pyrotechnick: evening lads
[10:34] lukegalea_ has joined the channel
[10:34] squeeks: morning.
[10:34] pyrotechnick: how are we all?
[10:34] pyrotechnick: how's the great update to 0.4 coming along?
[10:35] msch has joined the channel
[10:37] Sorella has joined the channel
[10:40] mickael_ has joined the channel
[10:40] mickael_: hello ppl :)
[10:40] pyrotechnick: sup
[10:41] mickael_: got a problem with node, I hope this is the appropriate place to ask for help
[10:42] sth: sure
[10:42] mickael_: i am on windows, compiling with either cygwin or minGW, everything is fine until i try to load a *.node module
[10:42] mickael_: i got TypeError: Object #<EventEmitter> has no method 'dlopen'
[10:42] mickael_: maybe a noobish question but i could not work it out 
[10:42] xla has joined the channel
[10:43] sth: *.node module?
[10:43] pyrotechnick: save yourself the trouble: http://www.virtualbox.org/ http://www.ubuntu.com/
[10:43] mickael_: yeah
[10:43] tim_smart has joined the channel
[10:43] mickael_: i can load any *.js file
[10:43] mickael_: but if i try to load ../lib/o3-win32.node
[10:43] jetienne: mickael_: if you rename is in .js, it works ?
[10:43] sth: mickael_: I can't say I've ever tried running node on linux.
[10:43] mickael_: it will fail
[10:43] sth: s/linux/windows/
[10:45] mraleph has joined the channel
[10:45] mickael_: nop the *.node files are not JS
[10:45] mickael_: renaming wont help :(
[10:45] mickael_: i believe they are dynamic libraries
[10:46] mickael_: it seems the function dlopen() is not present in node 
[10:46] devinus has joined the channel
[10:47] jetienne: mickael_: ah ok miscommunication. i misunderstood
[10:47] ziro` has joined the channel
[10:48] jetienne: mickael_: i dont know windows. btw beside the religious war, it is true than node is run a lot more on linux/mac than on window. so you run in more bugs if you use windows
[10:48] mickael_: i understand, I am using it with ubuntu as well, but for production only
[10:49] mickael_: though i am developing under windows
[10:49] Sorella: Perhaps you need some dynamic library to load .node modules, and node will disable support to it if you don't have that library to link at compile time? But just guessing, I don't know the inner workings of Node, nor have tried to run it on Windows.
[10:49] Sorella: ...I wonder why someone would choose doing development on Windows rather than Unix. It seems less practical to me.
[10:49] sveimac_ has joined the channel
[10:49] Sorella: *nix, even
[10:49] jetienne has left the channel
[10:50] mnot: mickael_: is search.npmjs.org yours?
[10:50] jetienne has joined the channel
[10:50] squeeks: mnot: no its isaacs
[10:50] mickael_: no its not haha
[10:50] SubStack: mikeal wrote search.npmjs.org
[10:50] mickael_: hm
[10:51] mnot: ah, nevermind then
[10:51] markwubben has joined the channel
[10:52] mcahornsirup has joined the channel
[10:52] mbrochh]2 has joined the channel
[10:53] mickael_: sorella, most problably something like that, but when the config runs, ldl is there, so I dunno whats going on, I was trying to find if it was included in make as well
[10:53] mickael_: i develop on windows coz thats what i am using.. i never tried unix i dont think i will start using it just for node
[10:54] mickael_: i will just run a VM with ubuntu if i cant work it out but its a waste since we can build it for win32
[10:54] lukegalea_ has joined the channel
[10:54] jetienne: mickael_: this is cool. i try not to engage in OS biggotry
[10:55] mickael_: nor do i
[10:56] ngs has joined the channel
[10:56] jetienne: mickael_: i know people on pacific time worked on window compilation. so maybe later
[10:57] sriley: developing in a headless vm is pretty nice thing to do anyway, keeps all the cruft in one place and lets you just copy the vm around if you need to move to another computer etc
[10:57] jetienne: mickael_: or the mailing list
[10:57] mickael_: true 
[10:57] CrazyGoogle has joined the channel
[10:57] mickael_: but how big is your VMs ?
[10:58] mbrochh has joined the channel
[10:58] sriley: about 1gb
[10:58] insin: I tried using a VirtualBox with Ubuntu Server, but it's just a hassle getting things in and out of it if you're not used to Linux. I gave up poking the samba.conf with a stick when the latest version started working for me in Cygwin.
[10:59] sriley: its actually fairly simple to get things in and out, just install ssh on the vm and access it via sshfs
[10:59] insin: (That, and the wife was getting pissed off with me leaving the spare machine I also stuck Ubuntu on plugged into our only monitor when she wanted to use the net :))
[10:59] Kami_ has joined the channel
[10:59] mickael_: i would like to work with linux, even with a VM, but here i have few projects going on, and it will be quite complicated to switch between them
[10:59] dve: Where does 'require' come from?
[10:59] mickael_: insin were you able to load *.node module files?
[10:59] dve: is it a node.js thing?
[10:59] insin: I was trying to use bridged networking mode and Samba, didn't know about sshfs :/
[11:00] jetienne: dve: commonjs thing. not specific to node
[11:00] dve: so where is it documented?
[11:00] sriley: samba also works but take longer to get it installed and set up
[11:00] jetienne: http://www.commonjs.org/ there :)
[11:01] insin: mickael_: I haven't tried - are there some which come with it I could have a go at? I've installed npm, but not grabbed any packages yet
[11:02] jetienne: http://wiki.commonjs.org/wiki/Modules/1.1#Sample_Code <- dve even closer :)
[11:02] fly-away has joined the channel
[11:03] Gruni has joined the channel
[11:04] mickael_: insin, you can try node-o3-fastxml
[11:04] dve: jetienne: thanks :)
[11:06] m4noo has left the channel
[11:06] insin: Is it supposed to be possible to do the equivalent of window["someVar"] = "someValue" in a module to programmatically add a variable to the scope? this.someVar = "someValue" works in the REPL, but I need to be able to do it in a loop rather than hardcoding tons of this.'s
[11:07] jetienne: http://networkimprov.github.com/node-doc-api/all.html#global <- insin 
[11:07] jetienne: insin: "global" is kinda the "window" in the browser
[11:07] dve: jetienne: does require return any extra info about the module.. e.g its full path?
[11:07] lukus has joined the channel
[11:08] ming_ has joined the channel
[11:08] Coal has joined the channel
[11:08] jetienne: dve: require() return a js object. the one exported in the .js. no meta data, like fullpath, that i know of
[11:08] micheil: jetienne: ?
[11:08] SubStack: insin: there's probably a much better way to do whatever it is that you're trying to do
[11:08] pyrotechnick has joined the channel
[11:08] SubStack: globals are bad
[11:09] jetienne: http://networkimprov.github.com/node-doc-api/all.html#require.resolve <- insin this may help get the fullpath tho
[11:09] micheil: jetienne: could you add that as a bug to http://github.com/votizen/node/issues?
[11:09] jetienne: micheil: whati whato ?
[11:09] jetienne: micheil: i dont understand what are you talking about
[11:09] insin: I only really want them at module-level in this case, though
[11:09] micheil: if you've got issues with the documentation, either patch them or add them as issues to votizen/node/issues on github
[11:09] insin: it's that or with() :/
[11:09] pyrotechnick: SubStack: have you patched optimist for new npm or you want me to?
[11:10] micheil: votizen's node fork is where the documentation is being worked on
[11:10] SubStack: pyrotechnick: it has a main
[11:10] dve: so how does node know the path to the actual source file?
[11:10] dve: just through global PATHS?
[11:10] jetienne: micheil: ah ok. you are telling me this because i use another url for the doc ?
[11:10] pyrotechnick: is it published?
[11:11] pomodoro has joined the channel
[11:11] micheil: jetienne: well, with the global description, if you think it needs improvement, make it known
[11:11] SubStack: pyrotechnick: seems so
[11:11] mickaelz has joined the channel
[11:11] micheil: ACTION is pretty much documentation lead atm
[11:11] mickaelz: oki much better
[11:12] torvalamo has joined the channel
[11:13] fermion has joined the channel
[11:13] insin: Hrm, it only seems to be a problem if you want to pass "this" to a function in another module
[11:13] jetienne: micheil: i wasnt aware of that. ok feedback: the text of the docs 0.4.* are good according to me. but the navigation in it is not so good
[11:13] mike5w3c_ has joined the channel
[11:14] micheil: jetienne: design is being worked on later, as there's a new content format coming
[11:14] micheil: and a new generator for the content
[11:14] jetienne: arg
[11:14] pyrotechnick has joined the channel
[11:14] jetienne: micheil: will it be exportable in portable/standard format too ?
[11:15] SubStack: insin: .bind()
[11:15] neshaug_ has joined the channel
[11:15] SubStack: insin: .call() and .apply() too
[11:15] micheil: jetienne: yes. We will have a json format and a html format
[11:15] SubStack: whatever you wrote, delete it and use those :p
[11:15] jetienne: micheil: cool
[11:16] micheil: (it will be quite easy to take it to say pdf or another format later too)
[11:16] micheil: jetienne: can you email me; micheil@votizen.com; and tell me to remind you about documentation? (if you're interested in it)
[11:17] insin: It's so I can do stuff like this without needing the with(): https://github.com/insin/DOMBuilder/blob/master/demo.js - in the browser, I can take window and add things to it with a method. In node, this happens: http://dpaste.com/444292/
[11:19] jetienne: micheil: sent
[11:19] micheil: cheers
[11:19] micheil: I'll be back later, gotta work on some ideas I have.
[11:19] micheil: (hence the reason I'm in the office at 3am.)
[11:19] jetienne: :)
[11:20] sveimac has joined the channel
[11:20] fermion has joined the channel
[11:21] jetienne: insin: i think substack meant something like. var m = require('othermodule'); m.superfunction().bind(this);
[11:21] Neil_ has joined the channel
[11:23] SubStack: with, ick
[11:23] SubStack: how does javascript have with() but not Function.prototype.curry...
[11:24] jetienne: SubStack: netscape managers :)
[11:24] jetienne: this is what crowford says in his talks
[11:28] malkomalko has joined the channel
[11:29] FireFly|n900 has joined the channel
[11:30] Neil___ has joined the channel
[11:32] dve has left the channel
[11:32] pyrotechnick has joined the channel
[11:33] dve_ has joined the channel
[11:35] dve has joined the channel
[11:35] dgathright_ has joined the channel
[11:36] Neil_ has joined the channel
[11:40] insin: Ah, it just seems to be that the REPL does things differently
[11:40] insin: sweeet
[11:42] mlncn has joined the channel
[11:43] zomgbie has joined the channel
[11:43] lukegalea_ has joined the channel
[11:43] modular has joined the channel
[11:43] insin: is there something else in a module's scope chain which is checked for variable references before the global object?
[11:45] jetienne: in fact global is checked last
[11:45] jetienne: it goes from the most local to the most global
[11:45] insin: what's the next one down from global, and can it be accessed programmatically?
[11:46] insin: (in the context of a module)
[11:47] SubStack: why do that when you can just make an object?
[11:47] MrTopf has joined the channel
[11:48] insin: Just trying to find out if it's possible - I already have an object which I could just reference with a shorter name, but for my purposes I need to be as concise as the environment will allow me to be (global will be the very last resort)
[11:49] flow3r has joined the channel
[11:50] sveimac has joined the channel
[11:50] mike5w3c has joined the channel
[11:51] Throlkim has joined the channel
[11:52] zomgbie has joined the channel
[11:53] daveluke has joined the channel
[11:53] mickaelz has joined the channel
[11:54] lukegalea_ has joined the channel
[11:55] Neil_ has joined the channel
[12:03] maushu has joined the channel
[12:04] pietern has joined the channel
[12:04] okuryu has joined the channel
[12:04] lukegalea_ has joined the channel
[12:10] Neil_ has joined the channel
[12:11] mike5w3c_ has joined the channel
[12:14] eee_c has joined the channel
[12:14] jetienne: insin: it is possible to abuse js like a mad man... not that it is a good idea :)
[12:15] lukegalea_ has joined the channel
[12:15] Neil_ has joined the channel
[12:19] SubStack: insin: are you writing a minifier?
[12:20] sveimac_ has joined the channel
[12:23] zemanel has joined the channel
[12:24] Neil___ has joined the channel
[12:29] lukegalea_ has joined the channel
[12:30] Neil_ has joined the channel
[12:30] elmer1 has joined the channel
[12:31] sth: anyone remember the js benchmark site?
[12:32] sth: which allows you to test js benchmarks live?
[12:33] insin: jsperf?
[12:34] sth: probably
[12:34] vyvea has joined the channel
[12:35] mraleph: benchmarks are evil
[12:35] unomi has joined the channel
[12:36] pastak has joined the channel
[12:36] sth: insin: thanks
[12:36] pdelgallego has joined the channel
[12:38] dve_ has joined the channel
[12:38] stewars has joined the channel
[12:39] broofa has joined the channel
[12:43] therrg has joined the channel
[12:47] nivoc1 has joined the channel
[12:48] Neil_ has joined the channel
[12:50] lukegalea_ has joined the channel
[12:51] sveimac has joined the channel
[12:51] asabil has joined the channel
[12:51] asabil: hi all
[12:52] everton has joined the channel
[12:52] asabil: Does anybody knows how to use DBrefs with mongoose ?
[12:53] herbySk has joined the channel
[13:07] elmer1 has joined the channel
[13:07] yawn_ has joined the channel
[13:09] lukegalea_ has joined the channel
[13:10] kwik101 has joined the channel
[13:10] iszak has joined the channel
[13:10] iszak has joined the channel
[13:10] floby has joined the channel
[13:11] nornagon_ has joined the channel
[13:11] bradleymeck has joined the channel
[13:13] eyesUnclouded has joined the channel
[13:16] miccolis has joined the channel
[13:18] fairwinds has joined the channel
[13:19] zomgbie has joined the channel
[13:21] sveimac has joined the channel
[13:23] FireFly|n900 has joined the channel
[13:25] Sami_ZzZ has joined the channel
[13:26] xandrews has joined the channel
[13:26] mscdex: node.js rules!
[13:29] lukegalea_ has joined the channel
[13:30] davidsklar has joined the channel
[13:31] ianward has joined the channel
[13:34] nivoc1: mscdex: are you sure?
[13:35] nornagon_: is there any reason that a reverse proxying nginx might prevent a closed connection on the client side from closing a connection to the upstream server ... but only when using HTTPS?
[13:36] c4milo has joined the channel
[13:37] mscdex: ircretary: tell nivoc1 i'm sure node.js rules!
[13:37] ircretary: mscdex: I'll be sure to tell nivoc1
[13:40] hij1nx has joined the channel
[13:41] heavysixer has joined the channel
[13:43] pastak has joined the channel
[13:44] pdelgallego has joined the channel
[13:45] Poetro has joined the channel
[13:45] elmer1 has joined the channel
[13:47] jmar777 has joined the channel
[13:48] perlmonkey2 has joined the channel
[13:48] lgl has joined the channel
[13:49] lgl: Sorry if this is unrelated, but does anybody know whether it's possible to use mongodb's regular query syntax in Mongoose?
[13:50] beta_ has joined the channel
[13:50] erwe: how do I redirect all 404 errors to a 404.jade?
[13:51] pyrotechnick: erwe: in what framework?
[13:51] sveimac has joined the channel
[13:52] erwe: expressjs
[13:52] erwe: pyrotechnick: ^
[13:52] lukegalea_ has joined the channel
[13:52] vyvea has joined the channel
[13:53] pyrotechnick: erwe: RTFM - http://expressjs.com/guide.html
[13:53] pyrotechnick: search for 404
[13:53] pyrotechnick: it's under "Error Handling"
[13:53] radwa has joined the channel
[13:53] arpegius has joined the channel
[13:53] erwe: got it
[13:53] erwe: ty
[13:54] lgl: erwe: You'd have to define an error class of your own, then register an error handler like so: app.error(function(err, req, res, next) { if(err instanceof 404Error) res.render('404') })
[13:54] charlenopires has joined the channel
[13:54] lgl: erwe: I defined a general HTTPError prototype, which takes code and message, and then I check the code in the error handler, which works for me.
[13:55] erwe: mmm ok
[13:55] radwa: Does anyone know of a node.js email library for node 0.4.1?
[13:55] lgl: radwa: You've got all kinds of modules over here, incl e-mail: https://github.com/joyent/node/wiki/modules
[13:55] mscdex: radwa: sending ore receiving?
[13:56] mscdex: s/ore/or
[13:56] radwa: sending mail
[13:56] Poetro has joined the channel
[13:56] mscdex: radwa: https://github.com/eleith/emailjs
[13:56] fumanchu182 has joined the channel
[13:57] Sami_ZzZ has joined the channel
[13:57] pdelgallego_ has joined the channel
[13:57] elmer1 has joined the channel
[13:57] mike5w3c: http://labs.qt.nokia.com/2011/02/24/qt-people-our-javascript-platform-is-burning-rubber/
[13:57] radwa: mscdex: i try it but it didn't work except for gmail
[13:58] mscdex: radwa: then your next best bet is to check one of the forks of node-smtp-client: https://github.com/miksago/node-smtp-client/network
[13:59] radwa: mscdex: i need it to support TLS/STARTTLS
[13:59] micheil: yeah, don't directly use node-smtp-client, it's kinda shit and old
[13:59] micheil: but the forks are pretty damn good
[13:59] jlecker has joined the channel
[14:00] rfay has joined the channel
[14:00] mscdex: mike5w3c: but no qt gui bindings!
[14:00] mscdex: :p
[14:00] mike5w3c: hmm
[14:00] elmer2 has joined the channel
[14:00] mike5w3c: yeah, clearly some work still to do there
[14:01] mscdex: but it is neat to see a big projet like that to use v8
[14:01] tanepiper: radwa: https://github.com/eleith/emailjs
[14:01] tanepiper: like that?
[14:03] radwa: tanepiper: i try it but i have to use specific smtp server not gmail
[14:03] pyrotechnick has joined the channel
[14:04] tanepiper: it just uses gmail as an example
[14:04] tanepiper: by the looks of it it should support any ssl-based smtp server
[14:05] radwa: tanepiper: yes and this my problem, the smtp server don't support ssl
[14:06] mscdex: you don't have to use ssl ..
[14:06] elmer1 has joined the channel
[14:06] tanepiper: yea, secure is optional
[14:07] puyopo has joined the channel
[14:08] FireFly|n900 has joined the channel
[14:10] apoc: grml this charset stuff is a total desaster
[14:10] apoc: does nodjs http internally convert iso charset to utf?
[14:11] creativeembassy has joined the channel
[14:11] radwa: tanepiper: i try it but it give me error { code: 4, error: undefined }
[14:12] pyrotechnick: wats the best option parser for node
[14:12] pyrotechnick: the most popular?
[14:13] chrischris has joined the channel
[14:14] adambeynon has joined the channel
[14:14] daveluke has joined the channel
[14:15] radwa: pyrotechnick:node-formidable – A node.js module for parsing form data, especially file uploads.
[14:16] pyrotechnick: option parser lol
[14:16] pyrotechnick: for command line
[14:16] pyrotechnick: args
[14:16] pyrotechnick: command line arguments
[14:16] void__ has joined the channel
[14:17] stewars has joined the channel
[14:19] everton has left the channel
[14:19] radwa: I still have problem in sending mail
[14:19] squeeks: how many times did you use the word "v14gr4" ?
[14:20] radwa: I need node library that support TLS/STARTTLS for node 0.4.1 
[14:22] vipaca has joined the channel
[14:22] vipaca has joined the channel
[14:22] sveimac_ has joined the channel
[14:23] jmar777: is there ever a difference between doing func.apply(singleArg) and func.call(singleArg), or does it only matter when you have multiple args?
[14:25] Plouj: does anyone know if I have to make a copy of data in socket.on('data', function(data){}); if I want to keep accessing it on future iterations or if I can just keep a reference to it?
[14:25] jetienne: rewriting mkdir_p.... fun fun
[14:28] amacleod has joined the channel
[14:28] TomsB has joined the channel
[14:29] jherdman has joined the channel
[14:30] zylo has joined the channel
[14:30] lukegalea_ has joined the channel
[14:31] jetienne: how the filename are handled in windows ? node make them appears as if it was unix ?
[14:31] TomsB: My code setup is like this: gameconainer = {games:{}, players: {}}; (that's in index.js). Game = {} and Player = {}, each in seperate file. I include them both in index file. I have function like Player.createGame(){var g = new Game(); } Surely, it stops with error.
[14:31] Me1000 has joined the channel
[14:31] TomsB: What would be the right setup for this?
[14:32] TomsB: Include game.js in both - index and player.js ??
[14:32] TomsB: It's a good practice??
[14:32] jetienne: TomsB: put your code in gist
[14:32] TomsB: gist?
[14:33] TomsB: ok
[14:33] TomsB: *oh
[14:33] jdub has joined the channel
[14:34] pyrotechnick has joined the channel
[14:35] dnolen has joined the channel
[14:36] TomsB: jetienne: https://gist.github.com/842222
[14:37] Plouj: anyone know where in the socket.io code I can find the message buffering logic?
[14:37] jetienne: TomsB: add the error that you see
[14:37] TomsB: Game is not defined
[14:37] TomsB: on that line
[14:37] jetienne: TomsB: please add the whole trace to the gist
[14:38] vyvea has joined the channel
[14:38] TomsB: I have simplified gist code...
[14:38] pyrotechnick: problems with npm at the moment?
[14:38] jakeskik has joined the channel
[14:39] TomsB: jetienne: Added fill trace
[14:39] TomsB: *full
[14:39] TomsB: Line numbers do not match but that's irrelevant.
[14:39] orls has joined the channel
[14:40] xandrews has joined the channel
[14:41] jetienne: TomsB: ok with the info i got, you seems to misunderstand the scope of require()
[14:41] TomsB: no, I know the scope
[14:41] TomsB: My question is - how to organise this, taht it;s available
[14:41] void__ has joined the channel
[14:41] jetienne: TomsB: you need a var Game = require('game'); in uno_player.js
[14:41] TomsB: What's the best practice to do this what I want to do...
[14:42] jetienne: TomsB: and know less, you will learn more :)
[14:42] TomsB: That's what I thought.
[14:42] jetienne: ok you know too much :)
[14:42] TomsB: What do you mean by that?
[14:42] trotter has joined the channel
[14:43] bwinton has joined the channel
[14:43] mickaelz has joined the channel
[14:46] devdazed has joined the channel
[14:46] mscdex: heh i thought about writing an uno game awhile back
[14:46] TomsB: What did stop ya?
[14:46] mscdex: even had the graphics done
[14:47] mscdex: just never had the time to actually implement it
[14:47] TomsB: I have graphics ready, lobby ready. Now creating new game and playing mehanics remins.
[14:47] mscdex: i started working on other modules :)
[14:47] TomsB: :)
[14:47] strmpnk has joined the channel
[14:48] vilsonvieira has joined the channel
[14:49] hallo has joined the channel
[14:50] mscdex: jmar777: apply accepts an array for function arguments (ex: apply(this, [foo1, foo2, foo3])) whereas call uses individual arguments supplied to call (ex: call(this, foo1, foo2, foo3))
[14:50] kwik101 has joined the channel
[14:51] eee_c has joined the channel
[14:51] mickaelz has joined the channel
[14:51] mscdex: jmar777: call and apply are slower than direct invocation though
[14:51] jmar777: mscdex: right, thanks. i was just curious if there was ever a difference though when you only use the first ("this") argument
[14:52] wdperson has joined the channel
[14:52] jmar777: mscdex: i think functionally they're the same in that case, but i was wondering if there was anything under the covers happening that made one preferable.
[14:52] sveimac has joined the channel
[14:53] trotter has joined the channel
[14:53] Plouj: are there any tricks/abstractions that I can use to read variable-length encoded data from a Socket?
[14:53] jmar777: mscdex: from what I've observed, doing func.call(this, arg1, arg2, arg3) is generally faster than doing func.apply(this, [arg1, arg2, arg3]), but don't know if that holds true for no additional args
[14:53] mscdex: jmar777: for no arguments, i doubt there's much of a difference
[14:53] Plouj: I'm trying to write code that buffers data until enough is read, but the logic is getting out of hand
[14:54] mscdex: i dunno... if anything it seems like apply should be faster since it doesn't have to access the `arguments` variable
[14:54] jmar777: Plouj: I do similar operations using custom EventEmitters. I usually give it a "feed" property, and then have it emit a "data" event when it has enough
[14:54] jmar777: Plouj: so on the writing side, you just have myBuffer.feed(newStuff)
[14:54] jmar777: Plouj: and on the reading side, you just have myBuffer.on('data', function() {}). seems to work pretty well and provides a nice level of abstraction
[14:55] jmar777: Plouj: sorry, "feed" property === "feed" method
[14:55] jetienne: houray i got mkdir_p
[14:55] mscdex: Plouj: how are you buffering data now?
[14:56] modular has joined the channel
[14:56] bradleymeck has joined the channel
[14:58] jano has joined the channel
[15:01] aabt has joined the channel
[15:04] tanepiper: Anyone used formidable with express route middlewares?
[15:04] Plouj: mscdex: I need to buffer until the other end sends me enough data. I'm currently trying to buffer (code not runnable yet) in a global (to the Socket) Buffer object.
[15:05] aphelion has joined the channel
[15:07] bradleymeck: in 0.4.x is there a way to accept a tls negotiation easily as the server instead of client?
[15:07] lukegalea_ has joined the channel
[15:07] EyePulp has joined the channel
[15:07] Plouj: right now I have this code, which is incomplete, but it's already nasty: http://fpaste.org/jH4S/
[15:07] mscdex: Plouj: you could create an array of buffers
[15:07] mscdex: just append them as they come in
[15:07] mscdex: append to the array
[15:08] Plouj: well, that's just a detail
[15:08] Plouj: but I'm not sure if I have to copy the buffer, or if I can just keep a reference to it
[15:09] Weltraumschaf has joined the channel
[15:09] bradleymeck: plouj keep them unless they are being modified elsewhere
[15:09] mscdex: i'm not sure with the new "fast buffers", but i know with the old buffers if you kept even a reference to a slice of a buffer, the entire buffer couldn't be GC'ed until all slice references were gone
[15:10] boaz has joined the channel
[15:10] JulioBarros has joined the channel
[15:10] beawesomeinstead has joined the channel
[15:10] Plouj: bradleymeck: so it's OK to assume that Node won't modify them? I know I won't
[15:10] Weltraumschaf: is there build in functionality for loading a file with json into an object? Or s.th. for converting a read Buffer into JSON?
[15:11] groom: jsdom question: jsdom uses jquery-latest. is there a way to define the jquery version that jsdom requires?
[15:11] bradleymeck: node wont modify them unless a user does
[15:11] gf3 has joined the channel
[15:12] mscdex: Weltraumschaf: sure, just convert the buffer to a string and load that into JSON.parse()
[15:12] Evet_ has joined the channel
[15:12] coltrane has joined the channel
[15:12] mxcreator has joined the channel
[15:13] dustinwhittle has joined the channel
[15:13] Weltraumschaf: mscdex: thx
[15:15] warz has joined the channel
[15:17] EyePulp: yo ho ho
[15:18] eaton has joined the channel
[15:18] bradleymeck: felixge, looking into semi-coloned multiple statement queries, do you know of any flaws w/ CLIENT_MULTI_STATEMENTS?
[15:19] Evet has joined the channel
[15:19] micheil: ircretary: tell isaacs could you modify votizen-logger's package to include me in the maintainers list?
[15:19] ircretary: micheil: I'll be sure to tell isaacs
[15:19] tanepiper: man i love obscure bugs in my nodejs code o_o
[15:19] tanepiper: makes me want to burst a blood vessel
[15:20] dve_ has joined the channel
[15:21] softdrink has joined the channel
[15:21] cilantro has joined the channel
[15:21] nkj has joined the channel
[15:21] Weltraumschaf: smcdex: is JSON part of CommonJS. Didn't found it in http://nodejs.org/docs/v0.4.1/api/index.html
[15:21] EyePulp: tanepiper: debugging is part of the bleeding edge excitement!
[15:21] micheil: tanepiper: man, I love writing a package and then having a co-worker publish it and then having me not able to edit it >_>
[15:22] tanepiper: EyePulp: well the problem is i don't know if it's express or formidable messing up here :(
[15:23] tanepiper: so far my tests tell me nothing :(
[15:24] sveimac has joined the channel
[15:24] jmar777: where's the source for the EventEmitter constructor? not in events.js or node.js
[15:25] technoweenie has joined the channel
[15:25] technoweenie has joined the channel
[15:25] mxcreator: hello, maybe somebody could help me installing node.js under windows 7: I followed the instructions and after the command "git checkout v0.4.1" I am trying to "./configure". then an error: "could not configure a cxx compiler!" 
[15:26] micheil: EventEmitter constructor's source is in src/events.cc
[15:26] micheil: erm
[15:26] jmar777: micheil: thx
[15:26] micheil: src/node_events.cc
[15:26] micheil: but there isn't anything there really
[15:26] micheil: jmar777: why do you need to know?
[15:28] micheil: Weltraumschaf: JSON is a standard format, json.org defines it.
[15:28] jmar777: micheil: just getting some weird errors. thought it had to do to having a custom EventEmitter register listeners to its own events from within the constructor, but looks like that may not really be the cause
[15:28] micheil: can you show me the error's you're getting? (create a gist.github.com of them)
[15:28] jmar777: micheil: something, somewhere, is just printing "undefined" to the log, and a request is failing lol
[15:28] Weltraumschaf: micheil: I know that. But where comes JSON.parse() from?
[15:28] NuckingFuts has joined the channel
[15:29] jmar777: micheil: i may be swallowing a more informative message somewhere, just trying to figure out where
[15:29] micheil: Weltraumschaf: JSON.parse and JSON.stringify are defined in ECMA262
[15:29] eric_f has joined the channel
[15:29] micheil: jmar777: well, generally if there's a problem, logs help.
[15:29] NuckingFuts: micheil: ... Are you...? Miksago? 8D *the* Miksago?
[15:29] NuckingFuts: You are my hero.
[15:29] NuckingFuts: ACTION humps leg
[15:30] micheil: NuckingFuts: yes, I am @miksago, why?
[15:30] niklasfi has joined the channel
[15:30] Weltraumschaf: michaeil: thx, thats what i wanted to now.
[15:30] jmar777: micheil: which logs are you referring to?
[15:30] Weltraumschaf: +k
[15:30] nook has joined the channel
[15:30] micheil: from where ever that error is being reported (generally stderr)
[15:30] jmar777: micheil: you saying make my own, or is there a logs file somewhere that i tragically haven't discovered yet?
[15:31] niklasfi: how do i make node only listen to 127.0.0.1:port and not any external requests?
[15:31] micheil: node myscript.js
[15:31] micheil: if there's an error that'll print heaps of stuff in the terminal window you executed that from
[15:31] jmar777: micheil: right. that's where i'm just getting the "undefined"
[15:31] micheil: niklasfi: how are you currently setting it up to listen?
[15:31] NuckingFuts: micheil: I know you for MiddleMan.js :P
[15:32] niklasfi: micheil: http.createServer().listen(80)
[15:32] micheil: NuckingFuts: okay, that's a long way back; c'mon give us a first name?
[15:32] micheil: niklasfi: okay, so, http.Server.listen takes a second argument, host
[15:32] jmar777: niklasfi: use .listen(80, '127.0.0.1')
[15:32] jmar777: ^^
[15:32] niklasfi: cool
[15:33] micheil: so by default: http.createServer().listen(80, "0.0.0.0")
[15:33] jlecker has joined the channel
[15:33] NuckingFuts: micheil: What I mean is, I know you for making that godly result lol that managed to revolutionize scripting on dA.
[15:33] flippyhead has joined the channel
[15:33] micheil: any net.Server has that functionality
[15:33] micheil: NuckingFuts: you're kidding, did it revolutionize scripting on dA?
[15:34] NuckingFuts: We went from extreme hackery to wonderful simplicity thanks to that one script :D
[15:34] micheil: NuckingFuts: it was just a bit of fun
[15:34] micheil: NuckingFuts: also, notice the similarities between middleman and node.js?
[15:34] micheil: (the whole event's pattern)
[15:35] NuckingFuts: micheil: It really revolutionized things.  The two most-used scripts (90% of all dAmn regulars have them I'd say) - SuperdAmn & dAmnGoodies - are both MiddleMan-based
[15:35] BillyBreen has joined the channel
[15:35] micheil: oh, wow
[15:35] micheil: I hardly visit deviantART these days.. 
[15:36] NuckingFuts: Yeah, electricnet made SuperdAmn, Sam made dAmnGoodies.  The list of "things you need" on dAmn now consists of those two scripts plus Greasemonkey :P
[15:36] sirkitree has joined the channel
[15:36] christophsturm has joined the channel
[15:37] christophsturm: can nvm install the latest git version of node, or does it only support releases?
[15:37] dguttman has joined the channel
[15:38] micheil: NuckingFuts: sam had the initial ideas for MiddleMan, I just made a few changes to be honest
[15:39] pandeiro has joined the channel
[15:40] niklasfi has left the channel
[15:40] NuckingFuts: micheil: Well, either way, it's a beautiful piece of work :D
[15:40] lakin has joined the channel
[15:41] NuckingFuts: Sam's tried to make a similar sort of thing, which is supposted to be capable of binding events for any function, but the syntax is awkward, and I can't figure out how to use it lol
[15:42] Neil_ has joined the channel
[15:42] dachary has joined the channel
[15:43] NuckingFuts: It's like 'Whenever.bind(foo,'bar')(function(){ });' which sucks massively, since most of the stuff on dAmn is in object prototypes and load orders can break that :/
[15:43] NuckingFuts: Not to mention the split of function name from path.to part
[15:43] micheil: NuckingFuts: I wouldn't use the word bind, as it's a reserved word
[15:43] ncb000gt has joined the channel
[15:43] micheil: Function.bind is present in ES5
[15:44] NuckingFuts: micheil: I don't think it is bind, but it's still a rather awkward syntax :/
[15:44] micheil: hmm
[15:45] paulrobinson has joined the channel
[15:45] pifantastic has joined the channel
[15:45] paulrobinson has left the channel
[15:46] NuckingFuts: micheil: This ungodly chunk of code: https://github.com/SamM/dAmn_Styler/blob/master/whenever.js
[15:46] micheil: NuckingFuts: minds you, my code back then was kinda shit
[15:46] blowery: micheil: that's true of any code by anyone :)
[15:46] blowery: all code from the past looks like shit
[15:47] Yuffster has joined the channel
[15:47] micheil: NuckingFuts: I may be tempted to write an update to Middleman if I ever get the time and remember about it.
[15:47] NuckingFuts: It's quite hideous, and I think the 'this['__orig_'+action](a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[9],a[10]);' is probably better done as "this['__orig_'+action].apply(this,arguments)" :P
[15:48] micheil: NuckingFuts: uhh.. yeah, I'm not going to slag off another programmers code, but it could definitely be done more elegantly
[15:48] NuckingFuts: micheil: I think electricnet extended it a bit for SuperdAmn, but beyond that, I think it's still the same ol' superdAmn
[15:49] micheil: NuckingFuts: heh, I was actually just talking to him
[15:49] NuckingFuts: micheil: Really?
[15:50] NuckingFuts: And by 'same ol' superdAmn', I meant 'same ol MiddleMan'
[15:50] fission6 has joined the channel
[15:50] fission6: did the repo move? i just tried to pull?
[15:50] kevwil has joined the channel
[15:50] tmzt: so I need some suggestions, I want to upload to results of editing a contenteditable div and possibly use jsdom to convert it into a semi-semantic data structure
[15:50] tmzt: though there are other ways I could do it
[15:51] tmzt: the fields will be determined by classes, like microformats are done
[15:51] micheil: NuckingFuts: yeah, I'm friends with Andy off deviantART
[15:51] fission6: can someone verify if the repo moved from ry/node
[15:52] micheil: fission6: yes, it has moved to joyent/node
[15:52] fission6: ok
[15:52] fission6: thanks micheil 
[15:52] ekes has joined the channel
[15:53] tmzt: micheil: json is also defined in an RFC, if you prefer ietf, whether it's a std or not yet I don't know
[15:53] alex1 has joined the channel
[15:53] micheil: tmzt: it's standard enough
[15:54] squeeks: if it's in an RFC that doesn't have "draft" in the title, it's as concrete as it needs to be
[15:54] jmar777: micheil: found my problem, had to do with misusing the constructor.super_ property on a subclass. ended up throwing me into an infinite loop
[15:54] tmzt: right
[15:54] pifantastic has joined the channel
[15:55] er1c_ has joined the channel
[15:55] tmzt: funny that jsdom depends on server side jq, and sub is working on browser side node
[15:55] tmzt: when will the recursion end?
[15:55] jmar777: tmzt: well, once i can run jsdom in node in my browser... NEVER
[15:56] micheil: NuckingFuts: totally untested, but this should work: https://gist.github.com/842329
[15:56] tmzt: I guess I'm going to be putting require to work soon, I've loved having only one client.js for this whole site but the editor is going to be huge
[15:56] tmzt: and it makes sense to require it when the editor pane is loaded
[15:57] jano has joined the channel
[15:57] raidfive has joined the channel
[15:59] michaelowens has joined the channel
[15:59] michaelowens: Hiya
[16:00] ncb000gt: hey
[16:00] michaelowens: Could someone give me a hand with require / global vars / export? I'm trying to access an object out of the file it was required in, but I can't seem to get it to work.
[16:01] Me1000 has joined the channel
[16:01] ncb000gt: michaelowens: do you have a gist?
[16:01] Weltraumschaf: cool, there is an assertion module :)
[16:01] jmar777: michaelowens: in module1.js, do exports.foo = "hello";
[16:01] michaelowens: ncb000gt: no sorry
[16:02] micheil: NuckingFuts: actually, that was totally broken, here's an update: https://gist.github.com/842329
[16:02] ncb000gt: michaelowens: could you make one?
[16:02] jmar777: michaelowens: in module2.js, do: console.log(require('./module1.js').foo)
[16:02] michaelowens: jmar777: Thanks, it's not the complete way I'm trying to get it to work though
[16:02] michaelowens: I'll show the files, one second.
[16:02] jmar777: michaelowens: k. just figured it was a newbie exports/require question :p
[16:03] michaelowens: jmar777: It probably is :p But I might be approaching it wrong
[16:03] michaelowens: https://gist.github.com/842344
[16:04] stewars has joined the channel
[16:04] michaelowens: As you can see I'm busy with IRC. I connect to the server and each channel has it's own Channel object.
[16:04] michaelowens: Now the problem is, I need to be able to access the IRC commands in the channel object.. Like for joining, and sending data
[16:04] xSmurf has joined the channel
[16:05] technoweenie has joined the channel
[16:06] michaelowens: I started of by sending "this" as an parameter to Channel(), but figured that would be outdated when the irc object changes (connection changes, channels change, etc)
[16:06] micheil: michaelowens: not at all.
[16:06] q_no has joined the channel
[16:06] micheil: you can pass references as much as you like
[16:07] micheil: this is kinda magic.
[16:07] ncb000gt: michaelowens: objects are pass-by-reference
[16:07] michaelowens: Oh I see, so passing "this" as parameter would be just a reference and be up to date?
[16:07] micheil: yes
[16:07] micheil: or should be
[16:07] ncb000gt: ^^
[16:07] michaelowens: Alright! Thanks, I'm going to have a look at it then
[16:09] elmer1 has joined the channel
[16:09] JulioBarros has joined the channel
[16:10] eyesUnclouded has joined the channel
[16:12] michaelowens: Great! Works, thanks micheil, ncb000gt and jmar777 :)
[16:12] ncb000gt: michaelowens: glad it works :)
[16:13] beawesomeinstead has joined the channel
[16:13] beawesomeinstead has joined the channel
[16:14] Venom_X has joined the channel
[16:15] jherdman has joined the channel
[16:17] jetienne: yeah i get to code rm_rf.... seriously we need libs modules... i get to write mkdir_p rm_rf and a http client... how many of us already did this ? is there any implementation which is not badly bugged ?
[16:17] ncb000gt: jetienne: rimraf
[16:17] jetienne: ncb000gt: ?
[16:17] ncb000gt: jetienne: rm -rf is rimraf
[16:18] ncb000gt: npm install rimraf
[16:18] ncb000gt: and, an httpclient? that's built into node
[16:18] dachary has left the channel
[16:19] ncb000gt: jetienne: https://github.com/isaacs/rimraf
[16:19] dmcquay has joined the channel
[16:19] briznad has joined the channel
[16:19] ncb000gt: jetienne: http://nodejs.org/docs/v0.4.1/api/http.html#http.request
[16:19] luke` has joined the channel
[16:19] jakehow has joined the channel
[16:19] Twelve-60 has joined the channel
[16:20] ncb000gt: jetienne: https://github.com/isaacs/npm/blob/master/lib/utils/mkdir-p.js
[16:20] jetienne: ncb000gt: https://github.com/isaacs/rimraf/blob/master/rimraf.js#L74-81 thanks!
[16:20] jetienne: ncb000gt: which one is not buggy ?
[16:20] michaelowens has left the channel
[16:20] ncb000gt: jetienne: i'm suing rimraf to remove directories in projects
[16:20] ncb000gt: haven't noticed any problems
[16:21] ncb000gt: I haven't used the mkdir code isaac wrote (rolled my own a long time ago), but i'd trust it over mine :)
[16:22] dthompson has joined the channel
[16:22] dthompson has joined the channel
[16:24] w0rse has joined the channel
[16:25] jetienne: ncb000gt: on a 330line source, 120line is about stuff which are already coded in most language. rm_rf, http get, mkdir_p, existSync
[16:25] tim_smart: SubStack: ping
[16:25] jetienne: one is not tho, which is tar :)
[16:26] snearch has joined the channel
[16:26] noahcampbell has joined the channel
[16:26] lukegalea_ has joined the channel
[16:26] pyrony has joined the channel
[16:27] killfill has joined the channel
[16:29] gravyrobber has joined the channel
[16:31] dthompson has joined the channel
[16:32] viewsrc has joined the channel
[16:32] bentruyman has joined the channel
[16:34] devrim has joined the channel
[16:34] [AD]Turbo has joined the channel
[16:34] rjack: what's the preferred way to build node, traditional, cmake or irrilevant?
[16:34] gr-eg has joined the channel
[16:34] dthompson has joined the channel
[16:34] gr-eg has left the channel
[16:35] tjholowaychuk has joined the channel
[16:35] gr-eg has joined the channel
[16:37] sleeplessinc_ has joined the channel
[16:37] sivy: anyone tried doing node-based SSIs yet?
[16:38] sprout has joined the channel
[16:38] dthompson has joined the channel
[16:38] gr-eg: noob question, if i've installed a package (express) via npm, how do i use it in my app? var express = require('express') cant find it
[16:39] jetienne: gr-eg: then npm installation failed for some reasons. require('express') should work
[16:39] tanepiper: did you sudo install it?
[16:40] daveluke has joined the channel
[16:41] gr-eg: hmm no sudo
[16:41] strmpnk has joined the channel
[16:41] gr-eg: npm seemed to give output like express was installed correctly
[16:42] squeeks: what npm/node version?
[16:42] Plouj: so, how do I create a custom EventEmitter?
[16:42] gr-eg: node 0.4.0, npm 0.3.7
[16:42] killfill has joined the channel
[16:42] lukegalea_ has joined the channel
[16:42] jmar777: Plouj: function MyEmitter() { events.EventEmitter.call(this); }
[16:43] tjholowaychuk: jmar777: you dont even need the 'super' call anymore
[16:43] jmar777: Plouj: next line: require('sys').inherits(MyEmitter, events.EventEmitter)
[16:43] tjholowaychuk: i think it confused people so they just do this.events = this.events || {}; now
[16:43] squeeks: gr-eg: either your NODE_PATH hasn't been updated in your shell config, or your node/npm installation is borked
[16:43] ceej has joined the channel
[16:43] vilsonvieira has joined the channel
[16:43] jmar777: tjholowaychuk: is that just a special case with EventEmitters then?
[16:44] tjholowaychuk: jmar777: yup
[16:44] jmar777: tjholowaychuk: since the constructor doesn't do much?
[16:44] jmar777: tjholowaychuk: sweet, didn't know. Plouj so, i guess just do the sys.inherits/util.inherits
[16:44] jmar777: tjholowaychuk: is that as of 0.4.x?
[16:44] tjholowaychuk: jmar777: nope, been a while
[16:45] Plouj: umm
[16:45] tjholowaychuk: I dont personally like it
[16:45] tjholowaychuk: but hey
[16:45] Plouj: I'm not familiar with JS OOP
[16:45] Plouj: what do I need to know about it?
[16:45] gr-eg: squeeks: how can i check my node path? it seems ok in .bashrc
[16:45] jmar777: tjholowaychuk: same. kind of magical. ryah usually hates magic too
[16:46] jmar777: Plouj: in most cases, calling the "super" constructor from your own constructor makes sure that any code in the super constructor is executed
[16:46] squeeks: gr-eg: if you've put it into your .bashrc, then, hrm, I dunno what next. I usually crack the shits and completely remove my npm/node install and start again which works.
[16:46] gr-eg: hmm ok i'll give that a shot thx
[16:46] jmar777: Plouj: and then the sys.inherits (or util.inherits if you're in a newer version of node) causes all the methods on the super's prototype to be copied to the sub's prototype
[16:46] drudge: what was that node library for simulating web requests
[16:47] drudge: like mechanize in ruby
[16:48] tjholowaychuk: tobi / zombie maybe?
[16:48] tjholowaychuk: nots ure
[16:48] jmar777: Plouj: technically inherits sets your prototype to an instance of the super type.has similar effect. just make sure to call it before adding your own stuff to the child types prototype
[16:49] jspiros has joined the channel
[16:51] Druid_ has joined the channel
[16:51] simb has joined the channel
[16:55] BillyBreen has joined the channel
[16:56] lgl: tjholowaychuk: Is it possible to use mongodb queries to query mongoose? E.g. { field: { $exists: true } }
[16:56] tjholowaychuk: lgl: should be able to
[16:57] jmar777: tjholowaychuk: you're the man. i like the types of commits i'm seeing now (https://github.com/visionmedia/connect/commits/master). smells close :)
[16:57] chrischris has joined the channel
[16:57] tjholowaychuk: jmar777: very close :) just gotta do some more test cov, and refactor the session api a bit
[16:57] tjholowaychuk: and finish docs
[16:57] nu- has joined the channel
[16:57] jmar777: tjholowaychuk++
[16:57] v8bot:  jmar777 has given a beer to tjholowaychuk. tjholowaychuk now has 18 beers.
[16:58] tjholowaychuk: jmar777: https://github.com/senchalabs/connect/pull/205
[16:58] tjholowaychuk: its pretty large haha
[16:58] lgl: tjholowaychuk: thanks. I can't really get my head around how the queries works in 1.0...
[16:58] tanepiper: tjholowaychuk: have you ever seen any issues with doing an async request in a express route middleware and the request being messed up>
[16:58] pifantastic_ has joined the channel
[16:58] tjholowaychuk: tanepiper: should be fine as long as you hold on to the req/res
[16:58] tanepiper: how can i ensure that?  i'm not ovewriting it in any way.  lemme show ya
[16:59] tjholowaychuk: tanepiper: things are really fucked if you end() twice etc
[16:59] baoist has joined the channel
[16:59] amerine has joined the channel
[17:00] tanepiper: https://gist.github.com/180b8283f1d21a3f1e5f
[17:00] broofa has joined the channel
[17:00] tanepiper: so routes sets up the post route to do check_permissions first, then if the permission if valid call next() and pass the req to formidable
[17:00] mikeal has joined the channel
[17:00] tanepiper: if i don't do the check and just call next, it works fine
[17:00] tjholowaychuk: cant read :)
[17:00] tanepiper: it's just javascript :p
[17:01] tjholowaychuk: CS is hard to read
[17:01] tjholowaychuk: lol
[17:01] tjholowaychuk: but anyway
[17:01] tjholowaychuk: just be careful not to send() twice
[17:01] tjholowaychuk: becaues it calls end()
[17:01] altamic has joined the channel
[17:01] tanepiper: well the route middleware doesn't do anything with req or res
[17:02] tanepiper: atm anyway, basically i use request lib to make a call to a url and get back a {permission: 'can_upload'} object
[17:02] felixge has joined the channel
[17:02] felixge has joined the channel
[17:02] tanepiper: this is the trace i get: https://gist.github.com/f975d2ac93edc061220b   basically it could be formiable, but i'm trying to rule out express
[17:03] tjholowaychuk: yeah that is formidable
[17:03] tjholowaychuk: you can tell by the stack trace
[17:03] lukegalea_ has joined the channel
[17:03] tjholowaychuk: just look at /usr/local/lib/node/.npm/formidable/0.9.11/package/lib/formidable/incoming_form.js:123
[17:03] tjholowaychuk: and you will see it
[17:03] tjholowaychuk: but it could be several things
[17:04] tanepiper: yea i did, but i was getting some weird results from my tests that were not conclusive :)  I just wanted to make sure i wasn't doing something stupid in express
[17:04] tjholowaychuk: the request events may not be paused, so if you have some async middleware you HAVE to pause the events
[17:04] tjholowaychuk: its not an express thing
[17:04] tjholowaychuk: its just
[17:04] viewsrc_ has joined the channel
[17:04] tjholowaychuk: life with node
[17:04] davglass has joined the channel
[17:04] tanepiper: right, gotcha - ok, well if i can rule express out that means i know where to focus
[17:05] tjholowaychuk: for example our session middleware in connect, since we get() the session, we pause the events so that when we finally get the session and next() we can resume()
[17:05] tjholowaychuk: otherwise they are lost
[17:06] ajcates has joined the channel
[17:06] stewars has joined the channel
[17:06] tanepiper: so i'll probably have to attach formidable to the app and carry it through each middleware so i can call pause on the parser
[17:07] tjholowaychuk: it would be nice if routes became more than just middleware
[17:07] tjholowaychuk: and became real end-points so that a bunch of async stuff could happen before hitting them but not necessarily in sequence
[17:07] tjholowaychuk: it's not an easy problem to solve elegantly
[17:08] tjholowaychuk: realistically you want to parse the data as it comes in, not wait for 5 middleware to finish and then start but hey
[17:08] killfill has joined the channel
[17:09] aho has joined the channel
[17:10] tanepiper: well i need to in this case, because i want to check permissions first
[17:10] tanepiper: if the user doesn't have permission to upload, it's rejected
[17:10] tjholowaychuk: yeah exactly
[17:10] tanepiper: which was confusing me since i don't explicity call parse until within the next route
[17:11] ajashton has joined the channel
[17:11] tjholowaychuk: yeah
[17:11] tjholowaychuk: but 'data' events have been firing while you do other async stuff
[17:11] tjholowaychuk: node doesnt make it super easy to buffer them in memory until later
[17:11] tjholowaychuk: technically you dont want to
[17:11] tjholowaychuk: but we kinda have to
[17:14] dve_: SubStack: in dnode I should be able to hook into the underlying socket.io events yes?
[17:14] dve_: io.on('connection',casdsdfs)
[17:14] erabuj has joined the channel
[17:14] killfill has joined the channel
[17:15] ajnasz has joined the channel
[17:15] davglass has joined the channel
[17:15] gf3 has joined the channel
[17:15] sivy: ryah: i'm seeing something weird in dgram.js, in sendto
[17:16] qFox has joined the channel
[17:16] sivy: far as i can tell, i'm setting up the call correctly, but it's telling me "bad file descriptor" at the start of socket.sendto
[17:16] davglass_ has joined the channel
[17:16] floby has joined the channel
[17:17] sivy: https://gist.github.com/842482
[17:19] eee_c has joined the channel
[17:19] tanepiper: tjholowaychuk: thanks!  That fixed it perfectly looking at connect-session
[17:20] tanepiper: maybe worth exposing that utils lib better :)
[17:21] pyrony has joined the channel
[17:21] lukegalea_ has joined the channel
[17:21] technowe_ has joined the channel
[17:22] tjholowaychuk: tanepiper: better meaning?
[17:22] tanepiper: well i don't think i'll be the last person with similar issues - maybe worth throwing in docs somewhere?  Unless i missed that it is?
[17:23] tjholowaychuk: yeah
[17:23] tjholowaychuk: im rewritting all the docs
[17:23] tjholowaychuk: they blow
[17:23] tjholowaychuk: the whole lib blows
[17:23] tjholowaychuk: haha
[17:24] tjholowaychuk: it'll get there
[17:24] wadey has joined the channel
[17:24] ryanfitz has joined the channel
[17:24] tjholowaychuk: im also allowing connect() as a synonym for connect.createServer()
[17:24] krazyjakee has joined the channel
[17:24] krazyjakee: hi all
[17:25] tanepiper: yea, dunno if you saw me say before but if you had a roadmap of what you want to achive maybe some of us can help :)
[17:25] krazyjakee: is there a channel for socket.io?
[17:25] bingomanatee has joined the channel
[17:25] tanepiper: for example i dont know how many of those issues are currently valid, or just need totally re-written for node 0.4
[17:25] tjholowaychuk: tanepiper: not much left to do
[17:25] zylo has joined the channel
[17:25] tanepiper: well that sound promising :)
[17:25] tjholowaychuk: ill have to scan through the issues and see what is still valid
[17:27] jetienne: ryah: node -e require('qs') doesnt seems to honor node_modules properly. Error: Cannot find module 'qs' ...  BUT, in the same directory, node-repl and plain node does find the module
[17:27] eresair has joined the channel
[17:28] jetienne: ryah: and in this case, 'qs' is in ./node_modules/qs
[17:28] krazyjakee: anyone wanna test-drive my mmorpg?
[17:30] technowe_ has joined the channel
[17:30] jpick has joined the channel
[17:30] jamesarosen has joined the channel
[17:32] krazyjakee has left the channel
[17:32] jasong_at_apache has joined the channel
[17:32] niklasfi has joined the channel
[17:34] simb: Ok, I had found a really simple Socket.IO chat demo. It just took a username and then had a common room or all to talk in. I have searched hi and lo and I can't find it again. Anybody know what I am talking about?
[17:34] simb: its not the node one.
[17:34] krazyjakee has joined the channel
[17:34] simb: it had a mostly white background.
[17:35] sprout has joined the channel
[17:36] lukegalea_ has joined the channel
[17:36] therrg has joined the channel
[17:37] EyePulp: simb: there's a pretty simple one that ships with the socket.io codebase as an example
[17:37] Me1000 has joined the channel
[17:38] overra has joined the channel
[17:39] krazyjakee: oh well, if you want to see the project it's here: http://wiki.mystalia.org/index.php/Main_Page
[17:39] kkaefer has joined the channel
[17:39] kkaefer has joined the channel
[17:39] jimt has joined the channel
[17:39] siculars has joined the channel
[17:42] halfhalo_ has joined the channel
[17:42] dve has joined the channel
[17:42] doubletap has joined the channel
[17:43] micheil: ryah: how is one meant to set keep-alive on the http.client now?
[17:43] jmar777: krazyjakee: don't have time to dig in further, but fwiw, it looks awesome (checked out the map editor video...)
[17:43] krazyjakee: ok cool thanks
[17:43] doubletap has left the channel
[17:43] halfhalo has joined the channel
[17:44] jmar777: krazyjakee: looks like a lot of work has gone into it - felt it at least needed a comment :)
[17:44] derferman has joined the channel
[17:44] halfhalo_ has joined the channel
[17:44] halfhalo_ has joined the channel
[17:45] halfhalo_ has joined the channel
[17:45] krazyjakee: only about a quarter way through :P I've never programmed a game before and the AI is tough
[17:45] q_no has joined the channel
[17:46] hij1nx has joined the channel
[17:48] jano has joined the channel
[17:49] adam_ has joined the channel
[17:49] krazyjakee has left the channel
[17:50] losing has joined the channel
[17:51] lukegalea_ has joined the channel
[17:51] bingomanatee: Any Mongoose people around?
[17:52] mjijackson has joined the channel
[17:52] bingomanatee: tjholowaychuk: ping
[17:53] eee_c has joined the channel
[17:54] springmeyer has joined the channel
[17:54] simb: bingomanatee: I am not a mongoose person but I used it in an app a couple months ago :)
[17:54] randallagordon has joined the channel
[17:54] ako has joined the channel
[17:55] bingomanatee: okay - question: can you leave some of your schema undefined, and will mongoose leave the undefined properties alone or cauterize them?
[17:55] pengwynn has joined the channel
[17:55] Throlkim has joined the channel
[17:56] simb: not sure. I think I defined all my properties
[17:56] isaacs has joined the channel
[17:57] isaacs: micheil: `npm help owner`
[17:58] micheil: isaacs: okay
[17:58] daveluke: if i do setTimeout in the server js, does that pause the entire process?
[17:58] isaacs: (i did just add you, though)
[17:58] isaacs: but for next time
[17:58] yozgrahame has joined the channel
[17:58] tjholowaychuk: daveluke: nope
[17:58] micheil: isaacs: okay
[17:58] micheil: isaacs: cheers
[17:58] isaacs: jetienne: all the npmjs.org code is here now: https://github.com/isaacs/npmjs.org
[17:58] micheil: morning tj
[17:59] tjholowaychuk: morning
[17:59] daveluke: tjholowaychuk, i am making a quiz game.. the server provides the question and then i need it to send a signal to the clients when time is up... can i just do a setTimeout there?
[18:00] tjholowaychuk: daveluke: sure, no harm in that
[18:00] jetienne: isaacs: website of the search.npmjs.org too ? i didnt find it
[18:00] isaacs: jetienne: it's in the "www" folder
[18:00] daveluke: ok
[18:00] davglass has joined the channel
[18:00] jetienne: isaacs: ok i will look, again
[18:00] jetienne: isaacs:
[18:00] isaacs: jetienne: https://github.com/isaacs/npmjs.org/tree/master/www
[18:01] micheil: tjholowaychuk: any thoughts on creating things similar to DOM trees?
[18:01] isaacs: jetienne: it's a couchapp
[18:01] tjholowaychuk: micheil: for what?
[18:01] micheil: tjholowaychuk: for the new node-doc parser
[18:01] jetienne: isaacs: ok i guess i will have to learn couch :)
[18:01] kevwil has joined the channel
[18:02] bluesnoop has joined the channel
[18:03] tjholowaychuk: micheil: just recurse and have a node per leaf
[18:03] davidascher has joined the channel
[18:04] sriley has left the channel
[18:04] micheil: hmm..
[18:04] saikat has joined the channel
[18:05] possibilities has joined the channel
[18:05] tbranyen: waf is literally the worst
[18:06] tbranyen: i want to build and link an existing project that uses waf to my nodejs module and it seems impossible
[18:07] micheil: ircretary: tell isaacs `npm owner add tim-smart facebook-graph-client` doesn't work, complaining that the user doesn't exist
[18:07] fumanchu182 has joined the channel
[18:07] axeljohnsson has joined the channel
[18:07] perlmonkey2 has joined the channel
[18:07] micheil: ircretary: tell isaacs https://gist.github.com/842578
[18:08] jmar777: micheil: would it work with tim-smart in quotes?
[18:08] micheil: no
[18:09] perezd has joined the channel
[18:09] jetienne: micheil: escaping with %hexa ?
[18:09] micheil: nup
[18:09] jetienne: i got issue with one of my package name with a '-' too
[18:09] tbranyen: has nobody else had to integrate a static lib build using waf :(
[18:09] patcito has joined the channel
[18:09] micheil: I think it may be case senstive
[18:10] erabuj: hi
[18:11] erabuj: i'm running a node.js server and every time i download a file (ok, from localhost ;) ) the node process takes nearly 100% of the cpu
[18:11] erabuj: what can i do to figure out where the problem is?
[18:11] ncb000gt: tbranyen: a c/c++ module i assume
[18:11] tbranyen: ncb000gt: yea
[18:11] ncb000gt: tbranyen: yes
[18:12] bradleymeck: felixge about?
[18:12] tbranyen: ncb000gt: the static lib i'm compiling uses waf as the build system
[18:12] tbranyen: i'd like to link locally using uselib_local
[18:12] tbranyen: taskgen seems to have no notion of waf
[18:13] derferman has joined the channel
[18:13] ncb000gt: tbranyen: ohh sorry, i missread your question, i haven't done that
[18:13] tbranyen: yea :-/
[18:13] tbranyen: not much info online
[18:13] ncb000gt: hmm, that sucks
[18:15] krazyjakee has joined the channel
[18:15] erabuj: can anyone help me ?
[18:16] dgathright has joined the channel
[18:17] dguttman has joined the channel
[18:18] altamic_ has joined the channel
[18:18] altamic_ has joined the channel
[18:18] pdelgallego has joined the channel
[18:18] derferman has joined the channel
[18:18] bingomanatee: erabuj: how big are your files?
[18:19] erabuj: 500- 1000 MB
[18:19] bingomanatee: If you are sending out gigabyte files you are going to see a big hit to your pipe
[18:20] tanepiper: tjholowaychuk: whats the difference between resume() and end() in that pause method?   I assume I use resume when i want to pass on the request and end if i want to end it on an error?
[18:20] tbranyen: ncb000gt: ha just looked into the tools node-waf has available to build and waf itself is missing ;(
[18:20] tbranyen: :(
[18:20] bingomanatee: Let me ask you this - what other proceses are going on in the server? are they being compromised? becuase if not, then it is a good thing that node is commandeering your server. 
[18:20] tjholowaychuk: tanepiper: end() should be implied, in 1.0 you just need resume()
[18:20] tjholowaychuk: tanepiper: not sure why we were using both lol
[18:20] ncb000gt: tbranyen: lol
[18:20] saikat has joined the channel
[18:20] tanepiper: ahh, ok :)  so just stick with resume
[18:20] bingomanatee: You can probably use buffering and timeouts to throttle your use of CPU - but keep in mind that will be at the expense of rappid downloading.
[18:21] bingomanatee: However I would suggest that gigantic file downloads really aren't enhanced by Node  in any way - I would consider using node in tandem with a conventional file server like Apache.
[18:22] bingomanatee: In fact the best solution is to put your downloads on their own server so you can optimize them in their own context. 
[18:22] erabuj: yes, but i want to control the downloadspeed dynamicly
[18:22] bingomanatee: oh. 
[18:22] bingomanatee: okay. 
[18:22] bingomanatee: can you gist your download code?
[18:22] erabuj: my "downlaod code" :?
[18:22] bingomanatee: what is the code in node you are using to deliver downloaded files?
[18:22] tbranyen: erabuj: i was thinking of doing something similar to what you are working on
[18:23] erabuj: ah ok
[18:23] erabuj: one second
[18:23] bingomanatee: Does Process give you information on free memory/cpu usage?
[18:24] stonecobra has joined the channel
[18:25] erabuj: the node process?
[18:25] erabuj: https://gist.github.com/842605
[18:25] erabuj: tbranyen: what exactly?
[18:25] erabuj: ^^
[18:25] erabuj: you mean controlling the dl-speed`?
[18:25] maushu has joined the channel
[18:25] bingomanatee: process, the global library, gives you the ability to monitor memory consumption
[18:26] bingomanatee: not CPU directly, though I suspect you can do that with calls to top or whatnot. 
[18:26] bingomanatee: erabuj: if you are going to trhottle your speeds, pipe is not for you. 
[18:27] erabuj: yes, but  in what way would that help?
[18:27] erabuj: no?
[18:27] MikhX has joined the channel
[18:27] bingomanatee: You want to use buffering and event hooks to determine how and when you send packets. 
[18:27] bingomanatee: Otherwise your system is on automatic and you have no control over when information is sent to the client. 
[18:28] davglass_ has joined the channel
[18:28] erabuj: hmm, yes from now it is waiting until a free downloadslot appears, what causes in http-timeouts^^
[18:28] bingomanatee: Learn the on('data'...) system and put a monitoring queue in place that only sends packets when you want to, based on observations about the performance of the system, and whatever criteria you want. 
[18:29] bingomanatee: Does that make sense?
[18:29] erabuj: it does indeed^^
[18:29] bingomanatee: good luck - github your systems when you have them in place. 
[18:30] erabuj: but that would cost downloadspeed, wont it?
[18:30] neynenmo has joined the channel
[18:31] liquidproof has joined the channel
[18:33] jmar777: requesting thoughts on this idea. been playing around with the notion of an abstract "feeds" API. it would be analogous to streams, but would operate on series of higher level data types (e.g., objects, strings, etc.)
[18:33] neynenmo has left the channel
[18:33] jmar777: Feed objects, if applicable, would implement writable streams on them, to make them compatible with pipe() calls. the net result would be the ability to write code like...
[18:34] sveimac has joined the channel
[18:34] sivy: any networking nerds in here have an idea of what's going on here? https://gist.github.com/842482
[18:35] jetienne: rayners.org sivy try to replace that with an ip number
[18:36] jmar777: httpResp.pipe(new CouchDBChangesFeed()).pipe(new CustomChangesFormatterFeed()).etc...
[18:37] krazyjakee has left the channel
[18:37] jmar777: in the above scenario, CouchDBChangesFeed would just be a Feed implementation that can parse/frame an incoming utf8 stream into line-delineated json objects
[18:37] bwinton has joined the channel
[18:38] jeromegn: Anybody has a solid "schema" for messaging between client/server with websockets? I was almost thinking of emulating http, but I feel like there must be a better way! Maybe something like: client.send({ event: "someName", data: {}, status: "success" }); ?
[18:39] sivy: jetienne: that worked
[18:40] sivy: jetienne: so, is dnsLookup failing?
[18:40] mnot has joined the channel
[18:40] jetienne: sivy: apparently something related to dns. not sure what. at least you got unblocked :)
[18:40] sivy: jetienne: yeah, thanks
[18:41] nejucomo has joined the channel
[18:41] lukegalea_ has joined the channel
[18:42] nejucomo has joined the channel
[18:44] thnkfst has joined the channel
[18:44] dthompson1 has joined the channel
[18:44] brapse has joined the channel
[18:49] altamic has joined the channel
[18:50] phpnode has joined the channel
[18:50] jherdman has left the channel
[18:53] aconran has joined the channel
[18:54] bentruyman has joined the channel
[18:54] zylo has joined the channel
[18:55] mickaelz: !z
[18:55] langworthy has joined the channel
[18:55] Plouj: can socket.on('data', function(data){}) be called executed out of order such that if I add data to a global data_buffer, in the end, data_buffer will contain a mangled version of what the other end of the socket sent me?
[18:56] binarypie has joined the channel
[18:57] piscisaureus has joined the channel
[19:00] sivy: stupid node question: does everything in node/lib/*.js get compiled into the node binary?
[19:00] TooTallNate has joined the channel
[19:00] davglass has joined the channel
[19:01] tjholowaychuk: sivy: yup
[19:01] sivy: tjholowaychuk: ok
[19:01] tjholowaychuk: sivy: not sure if there is (or easily could be) a mode to prevent that
[19:01] tjholowaychuk: for development
[19:01] sivy: tjholowaychuk: dgram is being annoying
[19:01] tjholowaychuk: would be kinda nice
[19:01] sivy: tjholowaychuk: yeah, would be nic to be able to hack debug stuff in there 
[19:02] tjholowaychuk: or even a flag to give precedence to stuff in the CWD before so you could copy over ./http.js
[19:02] tjholowaychuk: and work on it for a bit
[19:02] tjholowaychuk: that would be easier to implement
[19:02] sivy: tjholowaychuk: right
[19:03] sivy: ryah: ^^ :P
[19:03] Utkarsh_ has joined the channel
[19:03] bengl has joined the channel
[19:04] slickplaid: hmm what do i need to change to get rid of this error: npm ERR! JSON.parse This changed in npm 0.3.0, and is not a bug in npm.
[19:04] sivy: tjholowaychuk: you ever play with dgram/udp
[19:04] sivy: ?
[19:04] tjholowaychuk: nope
[19:04] ncb000gt: slickplaid: npm now requires the package.json file to be proper json
[19:04] tjholowaychuk: sivy: not node's
[19:04] tjholowaychuk: but not much regardless
[19:05] kawaz_wo_ has joined the channel
[19:05] sivy: tjholowaychuk: ok. socket.sendto is barfing and i don't know why
[19:05] slickplaid: Proper JSON. gotcha :D
[19:05] slickplaid: thanks
[19:05] ncb000gt: slickplaid: are you the creator of the module or a user?
[19:05] gravyrobber has joined the channel
[19:06] slickplaid: user; trying to get https://github.com/substack/node-ent working
[19:06] slickplaid: https://github.com/substack/node-ent/blob/master/package.json
[19:06] ncb000gt: slickplaid: gotcha, throw a ticket up on the project issue tracker
[19:07] ncb000gt: slickplaid: I believe it's line 20
[19:07] slickplaid: yup
[19:07] ncb000gt: node should be in quotes iirc
[19:07] ncb000gt: :)
[19:07] mkrecny has joined the channel
[19:07] slickplaid: was just fixing it :D
[19:07] ncb000gt: cool :)
[19:07] erabuj has joined the channel
[19:07] ncb000gt: pull requests are a maintainers friend
[19:07] ncb000gt: :)
[19:07] sivy: what is "binding", as in binding.socket
[19:07] sivy: is that a reference to the c++ layer?
[19:07] ncb000gt: sivy: usually binding to the c++
[19:08] sivy: bleagh
[19:08] ncb000gt: heh
[19:08] sivy: so something underneath is killing me
[19:08] ncb000gt: that's unfortunate but shows the power of node
[19:08] sivy: binding.sento is barfing
[19:08] alex_b has joined the channel
[19:08] ncb000gt: it can actually pull the life from a human!?!?
[19:08] ncb000gt: asynchronously!
[19:09] stagas_ has joined the channel
[19:09] sivy: ncb000gt: heh
[19:09] langworthy has joined the channel
[19:09] ncb000gt: ;D
[19:09] ncb000gt: sivy: this in the dgram code?
[19:09] sivy: ncb000gt: yes
[19:09] mgc has joined the channel
[19:10] dve: anyone using DNode know how to hook into the underlying socket.io 'connection' event??
[19:11] ncb000gt: sivy: line 259 sendto?
[19:11] sivy: ncb000gt: yup
[19:11] dmcquay has joined the channel
[19:11] sivy: it's barfing on the file deescriptor
[19:11] joeshaw___ has joined the channel
[19:11] sivy: TypeError: Bad file descriptor argument  at Socket.sendto (dgram.js:259:25)
[19:12] ncb000gt: sivy: strange.
[19:13] ncb000gt: do you have a gist of your usage?
[19:13] ncb000gt: or could you make one?
[19:13] ryah: how's v0.4.1 treating people?
[19:13] johnnywengluu has joined the channel
[19:14] sivy: ncb000gt: yeah. 
[19:14] ncb000gt: ryah: at home it's fine but I haven't been able to do a lot with it yet (time wise)
[19:14] sivy: https://gist.github.com/2bbcc6241547aa6c3897
[19:14] tjholowaychuk: ryah: pretty good, only had to monkey-patch setHeader() for multiple Set-Cookie fields
[19:15] mkrecny: what do you guys think of building redis-like in-memory datastructure databases in node - and having them run as TCP servers ...like redis
[19:15] sivy: if i can get my udp code working, i may setup the first node-based apache SSI
[19:15] Pilate: mkrecny: why not just use redis
[19:15] tjholowaychuk: mkrecny: I have a redis clone
[19:15] sivy: ncb000gt: you get that gist?
[19:15] mkrecny: Pilate: redis doesn't support some datastructures
[19:15] Plouj: humm
[19:16] ncb000gt: sivy: yea
[19:16] ncb000gt: looking
[19:16] ossareh has joined the channel
[19:16] mkrecny: is the redis clone on ghub?
[19:16] sivy: hey ryah - how about letting us tell node to look locally for builin libraries before using the compiled version?>
[19:16] mkrecny: would love to see it
[19:16] sivy: so we can override builtins for testing
[19:16] Plouj: how the heck can I know that the data I'm getting form a socket is ordered or not?
[19:17] tjholowaychuk: mkrecny: it is, but it's not OS yet
[19:17] mkrecny: tjholowaychuk: cool - best of luck with that
[19:18] mkrecny: tjholowaychuk: is it as fast as redis?
[19:18] tjholowaychuk: mkrecny: of course not :p
[19:18] justin____ has joined the channel
[19:18] mkrecny: tjholowaychuk: so this is just for fun?
[19:18] ryah: sivy: ?
[19:18] slickplaid: is it worth it to fork, pull request on github just to fix a simple package.json issue? or is that a bit overkill and I should just use the issues menu in github?
[19:19] tjholowaychuk: I have not done crazy optimizations to it yet, but it is faster in a few small cases, and ~2.5x slower in others
[19:19] ryah: sivy: builtins = http?
[19:19] tjholowaychuk: mkrecny: we need it for several reasons
[19:19] sivy: ryah: in this case, dgam.js
[19:19] sivy: dgram
[19:19] sivy: but yeah, anything you'd require() that's included with node
[19:19] ncb000gt: sivy: what OS are you using?
[19:19] sivy: OS X
[19:20] mkrecny: tjholowaychuk: if it was a module there'd be no tcp connection overhead...
[19:20] tjholowaychuk: sivy: maybe $ node --bypass whatever.js
[19:20] piscisaureus has joined the channel
[19:20] niklasfi has joined the channel
[19:20] sivy: tjholowaychuk: right
[19:20] tjholowaychuk: mkrecny: ?
[19:20] mkrecny: tjholowaychuk: i'm trying to guess at your reasons for building a redis clone in node
[19:20] tjholowaychuk: mkrecny: well like I said this is a redis clone, so you still talk over TCP
[19:21] ncb000gt: sivy: which version of node?
[19:21] sivy: ncb000gt: 0.4.1
[19:22] isaacs has joined the channel
[19:22] micxer has joined the channel
[19:23] ncb000gt: sivy: heh
[19:23] ncb000gt: you're gonna slap yourself
[19:23] sivy: heh?
[19:23] isaacs: micheil: actually, all parts of npm are case-sensitive
[19:23] ncb000gt: client.send is async
[19:23] sivy: it's not unusual. what's up
[19:23] ncb000gt: client.close
[19:23] isaacs: note that it shows "=Tim-Smart" in npm ls, not "=tim-smart"
[19:23] ncb000gt: comes after the call to client.send
[19:23] sivy: ncb000gt: o fer crying out loud
[19:23] ncb000gt: so you close the fd before the call
[19:23] ncb000gt: :)
[19:24] gravyrobber_ has joined the channel
[19:24] ncb000gt: btw- i wrote 16 bytes to your socket
[19:24] sivy: someone might want to update the dgram docs
[19:24] ncb000gt: <.<
[19:24] isaacs: slickplaid: yo
[19:24] jetienne has joined the channel
[19:24] isaacs: slickplaid: tell the author to fix their package.json file
[19:24] RushPL has joined the channel
[19:24] jwm has joined the channel
[19:24] slickplaid: isaacs: okay :D
[19:24] isaacs: slickplaid: usually a github pull request moves the process along quicker :)
[19:24] slickplaid: already sending it :D
[19:24] rot13 has joined the channel
[19:24] isaacs: good job :)
[19:24] sivy: ncb000gt: http://nodejs.org/docs/v0.4.1/api/all.html#dgram.send
[19:25] niklasfi: hello, i have a problem with serving downloads with my node server. once clients of a certain speed connect node starts to hog all my cpu power.
[19:25] isaacs: slickplaid: btw, if this is a package you've *already* installed, then npm should still parse it forgivingly.  however, packages with broken package.json files won't work in node 0.4's module loader, so that "feature" had to be removed.
[19:25] aconran has joined the channel
[19:25] Plouj: where is the source for the Socket class?
[19:26] isaacs: slickplaid: as of 0.3.7, at least.  (otherwise it was a problem updating/removing/etc.)
[19:26] slickplaid: isaacs: new development machine, so it got caught when I was doing a fresh install of everything :D
[19:26] riven has joined the channel
[19:26] riven has joined the channel
[19:26] hornairs has joined the channel
[19:26] ncb000gt: sivy: i'm not sure whether passing a cb makes it async or not
[19:26] ncb000gt: such that if you don't pass one then its sync
[19:26] sivy: ah
[19:27] ncb000gt: because otherwise, how would you know to close the client
[19:27] ncb000gt: I'm sure some code spelunking could figure it out :)
[19:28] mraleph has joined the channel
[19:28] stonebranch has joined the channel
[19:29] sivy: ncb000gt: thanks for the help
[19:29] niklasfi: hello, i have a problem with serving downloads with my node server. once clients of a certain speed connect node starts to hog all my cpu power.
[19:30] vilhonen has joined the channel
[19:30] rot13 has joined the channel
[19:30] chrischris has joined the channel
[19:30] ncb000gt: sivy: sure
[19:30] beawesomeinstead has joined the channel
[19:30] jetienne: isaacs: what is the difference between http://registry.npmjs.org/mypackage/latest and the package.json you can find on mypackage github repository ? my guess is that http://registry.npmjs.org/mypackage/latest has been canonized/standardized/enhanced by npmjs.org. but i would like to be sure... is that correct?
[19:30] stagas has joined the channel
[19:31] slickplaid: what's the standard #!/path/to/env that is used for command line node tools (installed through npm)? if that makes any sense
[19:32] squeeks: #!/usr/bin/env
[19:32] slickplaid: ty
[19:32] squeeks: reality is that it doesn't work everywhere
[19:32] jetienne: with node at the end :) #!/usr/bin/env node
[19:32] slickplaid: Right :D
[19:32] inarru has joined the channel
[19:32] jetienne: squeeks: where is it failing ?
[19:32] jetienne: this is the standard unix header
[19:33] ncb000gt: question, has anyone used the node-thrift client with hbase instead of cassandra?
[19:33] squeeks: Obscure OS's.
[19:33] Plouj: so, does anyone know what determines how much data I get per 'data' socket event?
[19:33] squeeks: iirc hp-ux and aix choke on it
[19:33] derferman has joined the channel
[19:33] jetienne: ok
[19:33] niklasfi: isaacs: have you replied to me on the nodejs mailing list regarding "onDrain not fireing"?
[19:34] jetienne: Plouj: function(chunk){console.log(chunk.length)}
[19:34] Twelve-60 has joined the channel
[19:34] piscisaureus_ has joined the channel
[19:34] chanman has joined the channel
[19:34] Poetro has joined the channel
[19:34] ilpoldo has joined the channel
[19:34] jetienne: Plouj: on data provide a Buffer 
[19:35] jpick has joined the channel
[19:35] rot13 has joined the channel
[19:35] Plouj: jetienne: what does console have to do with sockets?
[19:36] Plouj: jetienne: I know that on data provides a Buffer. My question is what determines how big this buffer is.
[19:36] jpick has joined the channel
[19:36] peepsalot has joined the channel
[19:36] isaacs has joined the channel
[19:37] dgathright has joined the channel
[19:37] peepsalot: is there a way to access COM ports/serial communications from Node.js?
[19:37] jperras has joined the channel
[19:38] spaceinvader: peepsalot: use the file code on /dev/ttyS0?
[19:38] geoffeg has joined the channel
[19:38] izz has joined the channel
[19:38] Noya has joined the channel
[19:39] peepsalot: spaceinvader, that's platform specific
[19:39] jetienne: Plouj: by chunk.length
[19:39] spaceinvader: node.js only works on windows via cygwin anyway
[19:39] spaceinvader: and i guess cygwin implements /dev/ttyS0 anyway
[19:39] ncb000gt: for now
[19:39] peepsalot: hmm
[19:39] vipaca has joined the channel
[19:39] vipaca has joined the channel
[19:40] spaceinvader: on mac it's something like /dev/cu.devicename
[19:40] floby has joined the channel
[19:40] jetienne: http://networkimprov.github.com/node-doc-api/all.html#buffer.length <- Plouj this one
[19:40] Sami_ZzZ has joined the channel
[19:40] TooTallNate: peepsalot: https://github.com/voodootikigod/node-serialport
[19:40] rot13 has joined the channel
[19:41] peol has joined the channel
[19:41] niklasfi: hello, i have a problem with serving downloads with my node server. once clients of a certain speed connect node starts to hog all my cpu power. I have implemented some  code to do buffering (look at it here: https://gist.github.com/842734 ) but i still get huge cpu load when a "fast" (by that i mean > 1mb/s) user connects. If i connect through localhost i am fine
[19:41] wereHamster has joined the channel
[19:41] perezd has joined the channel
[19:41] franck34 has joined the channel
[19:42] doki_pen has joined the channel
[19:42] Garo_ has joined the channel
[19:42] bruse has joined the channel
[19:43] zum has joined the channel
[19:43] kriszyp has joined the channel
[19:43] erabuj: what would you suggest as a buffer size?
[19:44] stonebranch has joined the channel
[19:44] maushu has joined the channel
[19:46] rot13 has joined the channel
[19:46] Vertice has joined the channel
[19:46] saikat has joined the channel
[19:46] q_no has joined the channel
[19:47] pietern has joined the channel
[19:47] isaacs has joined the channel
[19:47] niklasfi: isaacs: have you replied to me on the nodejs mailing list regarding "onDrain not fireing"?
[19:47] possibilities has joined the channel
[19:48] peepsalot: can node.js be used to make a self contained desktop application w/ gui?
[19:48] Twelve-60 has joined the channel
[19:48] Kingdutch has joined the channel
[19:49] possibil_ has joined the channel
[19:49] aconran has joined the channel
[19:49] tbranyen: peepsalot: theoretically
[19:50] tbranyen: not sure if anyone has done it yet
[19:50] possibil_ has joined the channel
[19:50] tbranyen: would probably need something like qt or gtk
[19:50] tbranyen: ported
[19:50] drudge: bah zombies.js can't parse the site i need :/
[19:50] yozgrahame has joined the channel
[19:51] erabuj has joined the channel
[19:51] adrian_berg has joined the channel
[19:51] rot13 has joined the channel
[19:52] possibil_ has joined the channel
[19:53] pedrobelo has joined the channel
[19:53] yozgrahame1 has joined the channel
[19:54] maushu_ has joined the channel
[19:55] Twelve-60 has joined the channel
[19:56] figital has joined the channel
[19:56] rfay has joined the channel
[19:57] pdelgallego has joined the channel
[19:57] davglass_ has joined the channel
[19:57] rot13 has joined the channel
[19:57] micheil: ryah: you should have a look at libnih; http://bazaar.launchpad.net/~canonical-scott/libnih/trunk/view/head:/README
[19:58] micheil: ryah: I think it gives a viable optparse solution
[19:58] micheil: and a bunch of other stuff
[19:58] pengwynn has joined the channel
[19:59] niklasfi: what is the reason for "This type of response MUST NOT have a body. Ignoring write() calls."
[19:59] kkaefer: can someone point me to tjholowaychuk's "prefix debug statements with comments" input filter?
[19:59] possibilities has joined the channel
[19:59] kkaefer: can't find it atm :/
[20:00] marienz has joined the channel
[20:00] ryah: micheil: 'light-weight ... D-Bus"
[20:00] ryah: micheil: "... XML"
[20:00] kkaefer: hah
[20:00] kkaefer: https://gist.github.com/765580
[20:01] rjack has joined the channel
[20:01] tjholowaychuk: kkaefer: :)
[20:01] mraleph1 has joined the channel
[20:01] ryah: micheil: just because they claim to be "light-weight" doesn't make it so
[20:01] clarkfischer has joined the channel
[20:01] kkaefer: remember, the S in SOAP stands for simple ;)
[20:01] bingomanatee has joined the channel
[20:02] zomgbie has joined the channel
[20:02] rot13 has joined the channel
[20:03] ___mike___ has joined the channel
[20:04] ___mike___: hello, I am having trouble with createReadStream().pipe(res). It kills my cpu. can someone help?
[20:06] ryah: ___mike___: uses a lot of cpu?
[20:07] FMJag has joined the channel
[20:07] ___mike___: ryah: yes if a fast client connects node starts to use 100% and other requests are no longer served
[20:08] rot13 has joined the channel
[20:08] daveluke has joined the channel
[20:09] Twelve-60 has joined the channel
[20:09] pietern has joined the channel
[20:10] micheil: ryah: no, but there is a lot of useful stuff in there
[20:10] colinsullivan has joined the channel
[20:13] EyePulp: so would cluster cleanly handle if I made changes to my app code?  like gracefully start loading the new app code for new connections and run the old ones to disconnect normally under the old code?
[20:13] rot13 has joined the channel
[20:13] dve: npm is saying my node path is incorrect... how can I manually update it?
[20:14] Utkarsh__ has joined the channel
[20:14] ryah: ___mike___: how big is that file?
[20:14] perezd has joined the channel
[20:14] creativeembassy has left the channel
[20:14] ___mike___: ryah: 500mb to 3gb
[20:15] Twelve-60` has joined the channel
[20:15] abraham has joined the channel
[20:15] ryah: ___mike___: hm
[20:15] Epeli has joined the channel
[20:15] possibilities has joined the channel
[20:16] gozala has joined the channel
[20:16] ___mike___: ryah: i have tried replacing pipe with a custom function but i still get the same problems
[20:16] jeromegn: is it a bad idea to use global variables in node.js as those guys are doing? https://github.com/datapimp/backbone-express-mongoose-socketio/blob/master/app.js
[20:18] possibilities has joined the channel
[20:18] paulrobinson has joined the channel
[20:18] torvalamo has joined the channel
[20:18] dthompson2 has joined the channel
[20:19] rot13 has joined the channel
[20:19] ___mike___: ryah: the interesting thing is that it does not kill the server if i connect from localhost.
[20:19] Twelve-60 has joined the channel
[20:20] FireFly|n900 has joined the channel
[20:21] FireFly has joined the channel
[20:21] matyr has joined the channel
[20:21] 45PABT23W: O.o
[20:21] 45PABT23W: why the hell am i named this
[20:22] slickplaid: nick collision, probably
[20:22] Aikar: with myself? lol
[20:22] ryah: ___mike___: it might be that the priority on those thread pool requests is too high
[20:22] ryah: ___mike___: can you open an issue for this?
[20:22] ryah: seems like a real problem
[20:23] ___mike___: ryah: the problem is that the code i have is quite complex. i don't really know what to post
[20:24] jetienne: isaacs: what is the difference between http://registry.npmjs.org/mypackage/latest and the package.json you can find on mypackage github repository ? my guess is that http://registry.npmjs.org/mypackage/latest has been canonized/standardized/enhanced by npmjs.org. but i would like to be sure... is that correct?
[20:24] rot13 has joined the channel
[20:25] Aikar: yeah i noticed the package.json didnt match whats in the package too
[20:27] Jamool_ has joined the channel
[20:27] jetienne: Aikar: i think this is ./package.json -> npm -> npmjs.org -> tidy package.json
[20:27] jetienne: Aikar: but not sure, i would like isaacs to confirm or explain the process
[20:28] Aikar: i noticed stuff like modules/lib directories not matching up
[20:28] piscisaureus has joined the channel
[20:28] Qbix1 has joined the channel
[20:28] echoSMILE has joined the channel
[20:28] echoSMILE has joined the channel
[20:28] Qbix1: hey guys, is node.js relatively stable now, no memory leaks if there are no memory leaks in the js? Can I run the server for months without stopping it?
[20:28] Qbix1: like, an http server
[20:28] Aikar: before isaacs announced his plans for the new cleaned up npm, i wrote a lil barebones npm installer that didnt use symlinks, and the differences really confused me
[20:29] jetienne: Qbix1: perf are stable and good
[20:29] rot13 has joined the channel
[20:29] tjholowaychuk: EyePulp: yup
[20:29] Kingdutch has joined the channel
[20:30] tjholowaychuk: it spawns a new master, lets the old one handle it's connections, then it dies
[20:30] tjholowaychuk: meanwhile the new one has your new code
[20:32] mmattozzi has joined the channel
[20:32] mmattozzi has left the channel
[20:32] thermal has joined the channel
[20:33] Plouj: jetienne: that's not what I'm asking. I'm asking what determines the value of buffer.length
[20:33] joshpeek_ has joined the channel
[20:33] TheEmpath: hail nodites!  i shall be exploring the delicious potential of MQing soon!
[20:33] phiggins_ has joined the channel
[20:33] beppu has joined the channel
[20:33] possibilities has joined the channel
[20:33] jakehow has joined the channel
[20:34] kkaefer: is there a global debug flag for node?
[20:34] snafuz has joined the channel
[20:34] jetienne: Plouj: ? i dont understand. you read data from a socket to a buffer, you receive data buffers along the way, and get buffer.length to know the length. what do you miss
[20:34] devdazed has joined the channel
[20:34] arpegius has joined the channel
[20:35] rot13 has joined the channel
[20:35] Me1000 has joined the channel
[20:35] razvandimescu has joined the channel
[20:35] Twelve-60 has joined the channel
[20:35] herbySk has joined the channel
[20:35] SubStack: tim_smart: pong
[20:37] Plouj: jetienne: I'm asking what determines how long of a buffer I receive.
[20:38] Twelve-60 has joined the channel
[20:38] dispalt has joined the channel
[20:39] jetienne: Plouj: ok i dunno :) have fun
[20:39] ossareh has joined the channel
[20:39] dve_ has joined the channel
[20:40] Plouj: oh, I am...
[20:40] EyePulp: tjholowaychuk: thanks for the response - stepped away to eat
[20:40] rot13 has joined the channel
[20:40] lukegalea_ has joined the channel
[20:40] martypdx has joined the channel
[20:40] tjholowaychuk: EyePulp: np
[20:41] losing has joined the channel
[20:41] Sebmaster has joined the channel
[20:41] martypdx: how do i check for a locals that may not be in the template? - if(error) still throw an error of error is not defined
[20:41] martypdx: sorry, jade question
[20:42] tjholowaychuk: martypdx: typeof or locals.error
[20:42] Gregor has joined the channel
[20:42] tjholowaychuk: martypdx: jade basically does with(locals){ TEMPLATE }
[20:42] martypdx: yeah, just tried local.error  thx
[20:42] tjholowaychuk: so 'locals' is available
[20:43] hosh_work has joined the channel
[20:43] CIA-39: node: 03Ryan Dahl 07v0.4 * r5287703 10/ lib/http.js : 
[20:43] CIA-39: node: Pragma HTTP header comma separation
[20:43] CIA-39: node: Closes GH-715, GH-716. - http://bit.ly/hYjbbc
[20:43] CIA-39: node: 03Felix Geisendörfer 07v0.4 * rf423ec9 10/ (lib/http.js test/simple/test-http-response-close.js): 
[20:43] CIA-39: node: In addition to 'aborted' emit 'close' from incoming requests
[20:43] CIA-39: node: Closes GH-160. - http://bit.ly/eADe2o
[20:43] martypdx: how would typeof work?
[20:43] strmpnk has joined the channel
[20:44] NuckingFuts has joined the channel
[20:44] jimt_ has joined the channel
[20:44] tjholowaychuk: martypdx: 'undefined' == typeof error
[20:44] tjholowaychuk: haha
[20:44] tjholowaychuk: go js go
[20:44] raidfive has joined the channel
[20:45] xla has joined the channel
[20:45] rot13 has joined the channel
[20:46] Qbix1: what do you use these days to run multiple node http servers
[20:46] Qbix1: I remember reading about yahoo and connect framework
[20:46] Qbix1: is there something standard now
[20:47] CIA-39: node: 03Felix Geisendörfer 07v0.4 * r06ac129 10/ doc/api/fs.markdown : 
[20:47] CIA-39: node: Document existence of `fd` property for ReadStream
[20:47] CIA-39: node: Closes GH-194.
[20:47] CIA-39: node: Closes GH-701. - http://bit.ly/f4MEv4
[20:47] CIA-39: node: 03Felix Geisendörfer 07v0.4 * r2680522 10/ doc/api/fs.markdown : 
[20:47] jmar777: tjholowaychuk: since i'm both a connect and a socket.io noob, would you mind commenting on whether or not https://github.com/bnoguchi/Socket.IO-connect is recommended?
[20:47] CIA-39: node: Fix ReadStream bufferSize docs
[20:47] CIA-39: node: The default is 64kb buffer, not 4kb.
[20:47] CIA-39: node: Closes GH-702. - http://bit.ly/fTh4hf
[20:47] tjholowaychuk: jmar777: no clue
[20:48] tjholowaychuk: havent tried it
[20:48] jmar777: tjholowaychuk: k. thanks
[20:48] Qbix1: ?
[20:48] Qbix1: my q?
[20:49] MikhX has joined the channel
[20:49] Utkarsh__ has joined the channel
[20:49] jmar777: Qbix1: what are you trying to do? like one server per core, or what?
[20:50] nejucomo has joined the channel
[20:51] rot13 has joined the channel
[20:53] ___mike___: ryah: this https://gist.github.com/842860, however works
[20:54] Qbix1: jmar777 yeah one server per core, ro more
[20:55] jmar777: Qbix1: check our cluster
[20:55] Qbix1: what do you mean, what cluster? link?
[20:55] jmar777: Qbix1: http://learnboost.github.com/cluster/
[20:55] Aikar: Qbix1: the old yahoo article doesnt work for latest node, but theres a few implementations. heres mine https://gist.github.com/733560
[20:56] Utkarsh__ has joined the channel
[20:56] rot13 has joined the channel
[20:57] Twelve-60 has joined the channel
[20:57] tranqenstein has joined the channel
[20:58] mikeal has joined the channel
[20:58] Qbix1: is this better than multi-node somehow?
[20:59] Twelve-60 has joined the channel
[20:59] Aikar: does multi-node work for .3x+?
[21:00] samcday: Oh my god. Why am I only just now seeing http://swarm.jcoglan.com/?!?!?
[21:00] jmar777: Qbix1: cluster has some extra features. like reloading failed workers, and plugin support
[21:00] tjholowaychuk: Qbix1: cluster is much more advanced
[21:00] tjholowaychuk: and it's extensible :)
[21:00] Aikar: mines a pretty bare implementation that routes connections to processes based on IP address (so if you need to store stuff in memory that user will always go to same process), mainly linked it so you can see the general idea, its not a complete solution
[21:01] rot13 has joined the channel
[21:02] dewey_: guys, is this the best way to run a job in the background?
[21:02] dewey_: http://stackoverflow.com/questions/4762016/node-js-workers-background-processes
[21:02] dewey_: with beanstalkd
[21:03] Qbix1: so I should prefer cluster to multi-node in EVERY way?
[21:03] NuckingFuts has joined the channel
[21:03] mlncn has joined the channel
[21:03] tjholowaychuk: Qbix1: AFAIK multi-node has no additional benefits
[21:03] konobi: fuck... node-ctype is awesome to work with
[21:04] Twelve-60 has joined the channel
[21:05] Evet_ has joined the channel
[21:05] TheCowboy has joined the channel
[21:05] dspree has joined the channel
[21:05] dspree has joined the channel
[21:06] Aikar: dewey_: I ended up with this script I wrote that relies alot on commands (so not windows compliant) but works good. https://gist.github.com/4f206784e415fd32232e
[21:07] rot13 has joined the channel
[21:07] MikhX has joined the channel
[21:07] paulrobinson has joined the channel
[21:07] Aikar: use like run = require('runservice'); run('somekeytoassociatetoprocess', 'node', 'node /myscript.js', '/var/log/blah'); and edit the runFile var up top i didnt make this 'portable' and was last using on my game
[21:08] isaacs has joined the channel
[21:08] paulrobinson has left the channel
[21:08] Twelve-60 has joined the channel
[21:08] Aikar: but alot of that is checking if said process is already running, if you just want to launch w/o checking, the execApp at top is all you need
[21:08] dewey_: Aikar: so you have a file with jobs and .run file with the job itself
[21:08] Aikar: i wrote this as a way to run on cronjob to ensure a process is running
[21:09] sriley has joined the channel
[21:09] dewey_: like monit for nodejs ;)
[21:09] isaacs: Aikar: what was it that you and jetienne wanted me to explain?  I saw the mention, but colloquy freaked out
[21:09] Astro has joined the channel
[21:09] ryah: tjholowaychuk: did you close every issue on connect?
[21:10] tjholowaychuk: ryah: more or less
[21:10] Aikar: yeah, just wanted something completely self contained w/o other depedencies
[21:10] tjholowaychuk: ryah: most are not valid anymore
[21:10] tim_smart: SubStack: The package.json for ent isn't valid JSON
[21:10] Aikar: isaacs: O.o? i dont recall pinging you
[21:10] dewey_: thnx for example
[21:10] Aikar: ohhh
[21:10] Aikar: that
[21:10] snafuz has joined the channel
[21:10] isaacs: Aikar: it looks like jetienne had said that i could confirm or deny osmethingorother
[21:10] tjholowaychuk: ryah: well in a few hours when I merge
[21:10] Aikar: isaacs: about what does npms version of package.json is diff than the authors package.json
[21:11] EyePulp: tjholowaychuk: trying to run a simple cluster, and my app under dev is using "foo.local" for it's hostname (which I route via /etc/hosts)  I'm getting an error (Unknown socket type.) on line 323 of cluster's master.js - I think because the net.isIP() returns a 0 for odd hostnames... maybe?
[21:12] tjholowaychuk: EyePulp: could you open an issue? I'll try and reproduce it later
[21:12] EyePulp: tjholowaychuk: no problem
[21:12] rot13 has joined the channel
[21:12] piscisaureus has joined the channel
[21:13] ncho has joined the channel
[21:15] SubStack: tim_smart: just fixed that
[21:15] hassox has joined the channel
[21:15] CIA-39: node: 03Ryan Dahl 07v0.4 * re33e7d1 10/ (126 files in 13 dirs): Upgrade V8 to 3.1.6 - http://bit.ly/fRCjlK
[21:15] Evet has joined the channel
[21:15] tim_smart: SubStack: <3. Did someone else let you know?
[21:16] ryah: piscisaureus: cygwin port landed in v8
[21:16] ryah: beautiful.
[21:16] linnk has joined the channel
[21:16] ryah: piscisaureus: thank you
[21:16] SubStack: tim_smart: I saw it in the scrollback
[21:17] SubStack: and got a pull request even
[21:17] slickplaid: heh
[21:17] piscisaureus: ryah: gern geschehen. Next target: land the msvc-confuses-scons patch
[21:18] rot13 has joined the channel
[21:18] Sebmaster: piscisaureus: sweet!
[21:18] Sebmaster: piscisaureus++
[21:18] v8bot:  Sebmaster has given a beer to piscisaureus. piscisaureus now has 2 beers.
[21:19] ___micha___ has joined the channel
[21:20] linnk: Hey, does anybody know if express has an irc channel?
[21:20] Aikar: no it doesnt, author is in here
[21:20] dewey_: cool, break point in chrome dev tools
[21:20] dewey_: (http://blog.chromium.org/2011/02/chrome-developer-tools-back-to-basics.html)
[21:20] linnk: Aikar: ok, thanks
[21:20] Aikar: i thought its had breakpoints, ive used em before O.o
[21:20] dewey_: ow...
[21:20] dewey_: < hits himself
[21:21] Twelve-60 has joined the channel
[21:22] gozala has joined the channel
[21:23] rot13 has joined the channel
[21:25] Utkarsh_ has joined the channel
[21:25] p_nitsch has joined the channel
[21:25] p_nitsch has left the channel
[21:26] Qbix1: question
[21:26] Twelve-60 has joined the channel
[21:26] sriley_ has joined the channel
[21:26] Hello71 has joined the channel
[21:26] Hello71 has joined the channel
[21:26] Guest21139 has joined the channel
[21:26] dgathright has joined the channel
[21:27] p_nitsch has joined the channel
[21:28] stephen_mcd has joined the channel
[21:28] rot13 has joined the channel
[21:29] zemanel has joined the channel
[21:30] bwinton: Qbix1: answer
[21:30] losing has joined the channel
[21:30] ajcates has joined the channel
[21:30] jimt has joined the channel
[21:32] dspree has joined the channel
[21:32] dspree has joined the channel
[21:33] piscisaureus: ryah: you moved node to joyent??
[21:34] rot13 has joined the channel
[21:34] jpick has joined the channel
[21:34] askhader has joined the channel
[21:35] dspree has joined the channel
[21:36] ryanfitz has joined the channel
[21:37] arlolra has joined the channel
[21:37] derferman has joined the channel
[21:38] dspree has joined the channel
[21:38] dspree has joined the channel
[21:39] eyesUnclouded has joined the channel
[21:39] Sebmaster: hmm, can anyone give me a quick adive how i can check the v0.4 branch out?
[21:39] rot13 has joined the channel
[21:40] brianc: I'd like to cast (in c++) from const Arguments& args (args[1]) to a Local<Array>...any tips on how to do this? can't find in v8 or node source
[21:40] nejucomo has joined the channel
[21:40] iszak has joined the channel
[21:40] brianc: basically in javascript calling this nativeMethod('string', [1, 2, 3]) and I want to access the [1,2,3] in c++
[21:40] brianc: AND ITS BLOWING MY MIND
[21:42] Sebmaster: ha, got it
[21:42] eee_c has joined the channel
[21:42] dans has joined the channel
[21:43] iszak: brianc, va_*
[21:43] piscisaureus: ryah: can you re-float this: https://github.com/piscisaureus/node/commit/6a50fdaeb934eab21e497b460e025c47985f937d
[21:43] brianc: va_* ?
[21:43] iszak: va_start, va_arg, va_end
[21:43] iszak: I think
[21:44] piscisaureus: ^-- http://codereview.chromium.org/6539006
[21:44] brianc:     Local<Object> options_o = Local<Object>::Cast(args[0]);
[21:44] tanepiper: tjholowaychuk: ping - got a question about stylus.  i've added the middleware to my app, and added my .css file to my jade header, it recognises there is a .styl file there, but never compiles the css file :(  https://gist.github.com/d786aea7a0c8db653538
[21:44] brianc: boom something like that...I'll just read more of the node.js /src before I come stompin' around next time. :)
[21:44] jimt has joined the channel
[21:44] isaacs: brianc: Local<Object> arr = args[1]->ToObject();  arr->Get(0), arr->Get(1), ...
[21:44] tanepiper: my file is in public/style/account.styl
[21:44] rot13 has joined the channel
[21:44] isaacs: might be "AsObject", i forget
[21:45] iszak: that doesn't look C++ at all.
[21:45] brianc: isaacs: <3 thank yo
[21:45] brianc: *you
[21:45] tanepiper: if i take the styl out, express does look for the .styl file though
[21:45] piscisaureus: isaacs: but what will happen if it is undefined? throw?
[21:45] tanepiper: so it's recognising the .styl is there
[21:45] rburhum has joined the channel
[21:45] isaacs: piscisaureus: dunno.  probably :)
[21:45] isaacs: brianc: should probably make sure that it's not undefined or whatever first.
[21:45] matyr_ has joined the channel
[21:46] brianc: isaacs: totes, I did all the checking but once I got to the point where I was converting it to an array I was like "HOOOOW DO I DOOO THISSSS???" Learning v8 & c++ at the same time = mind destroying.
[21:46] isaacs: if (!arg[1]->IsArray()) return ThrowException(new Error::Exception(String::New("bad arg")))))))))))
[21:46] Poetro1 has joined the channel
[21:47] brianc: isaacs: totes, I did all the checking but once I got to the point where I was converting it to an array I was like "HOOOOW DO I DOOO THISSSS???" Learning v8 & c++ at the same time = mind destroying.
[21:47] brianc: whoops damn sorry for the doublepost
[21:47] piscisaureus: isaacs: now that node -> joyent, you will be pushing your own stuff?
[21:47] piscisaureus: iow why was it necessary?
[21:47] isaacs: piscisaureus: i've been a collaborator on ry's node repo for a while.  i just don't push into it directly because i fear his wrath.
[21:48] MikhX has joined the channel
[21:48] CIA-39: node: 03Bert Belder 07v0.4 * rdf15472 10/ (deps/v8/SConstruct deps/v8/src/SConscript): 
[21:48] CIA-39: node: Autodetect no-strict-aliasing, propagate toolchain option to SCons
[21:48] CIA-39: node: BUG=v8:884 - http://bit.ly/eJq4pu
[21:48] isaacs: piscisaureus: in other words, nothing effectively changes.  but,it's more about making it more explicit that joyent and node are connected, etc.
[21:48] konobi: isaacs: you gotta watch out for that wrath
[21:48] fumanchu182 has joined the channel
[21:48] isaacs: konobi: i kno!  especially when i work down here
[21:49] Aikar: did the pullreq someone provided for making node auto detect # of CPUs on build instead of having to specify JOBS= ever land? can i stop typing JOBS=4 on compile now?
[21:49] gmci has joined the channel
[21:49] isaacs: Aikar: that auto-detecting causes HUGE problems on shared hosts
[21:49] Aikar: oh?
[21:49] isaacs: Aikar: especially cases where you have 32 cores and only 128 mb of memory
[21:49] Aikar: lolllllllll
[21:49] isaacs: basically freezes up your slice
[21:49] isaacs: yeah
[21:49] konobi: isaacs: suddenly come back to finding a live honey badger under your desk
[21:49] tilgovi has joined the channel
[21:50] arlolra: ryah: i added the mean of the ab tests http://arlolra.no.de/benchmarks/v0.4 ... is that at all useful?
[21:50] isaacs: konobi: IF YOURE LUCKY
[21:50] ryah: piscisaureus: yes, thanks.
[21:50] Aikar: maybe just hardcode it to 4 lol
[21:50] rot13 has joined the channel
[21:50] iszak: wth D: Could not find Repository ry/node
[21:50] Aikar: iszak: it moved
[21:50] ryah: arlolra: yes!
[21:50] Aikar: joyent/node now
[21:50] isaacs: iszak: see mailing list.  is joyent/node now
[21:50] iszak: I'm never signing up for the mailing list
[21:50] iszak: NEVER I TELL YOU
[21:50] ryah: arlolra: would be useful to have it go back in time too
[21:50] ryah: arlolra: :)
[21:50] isaacs: Aikar: even 4 is problematic in some envs.  you just gotta set it up how you like it
[21:50] iszak: but thanks isaacs and Aikar
[21:50] Aikar: isaacs: i guess i can add it to my bashrc, forgot i could do that lol
[21:51] piscisaureus: ACTION should catch up on the ML
[21:51] iszak: isaacs, the wiki link should be updated on the homepage (however it does redirect)
[21:51] isaacs: ++
[21:51] tjholowaychuk: tanepiper: GET /style/account.css
[21:52] tjholowaychuk: tanepiper: your static provider serves from ./public
[21:52] tjholowaychuk: so
[21:52] tjholowaychuk:  /style is needed
[21:52] Aikar: ry/node was shorter to type though! 
[21:52] tanepiper: tjholowaychuk: yea, i tried that i get: Error: ENOENT, No such file or directory 'public/style/style/account.styl'
[21:52] Aikar: dunno bout you guys, but i clone node every day just for good measure
[21:53] NuckingFuts has joined the channel
[21:53] tjholowaychuk: tanepiper: try __dirname + for those paths
[21:53] tjholowaychuk: I wouldnt trust that the WD is the root at all times
[21:53] tjholowaychuk: bad practice IMO
[21:53] arlolra: ryah: :(
[21:53] arlolra: no
[21:54] Aikar: tjholowaychuk: agreed.
[21:54] iszak: I want to uninstall node, I installed it via make/make install, how to?
[21:54] Aikar: iszak: USUALLY make remove works
[21:54] Aikar: or make uninstall
[21:55] tanepiper: tjholowaychuk: yea, tried that as well still get a 500:
[21:55] iszak: yeah I think I tried uninstall
[21:55] tanepiper: Error: ENOENT, No such file or directory '/home/ubuntu/quartermaster/src/public/style/account.css'
[21:55] iszak: nvm I didn't.
[21:55] Aikar: but rm -rf /usr/local/lib/node and rm -rf /usr/local/bin/node then delete the source tree you checked out
[21:55] Aikar: should get node
[21:55] Aikar: now npm stuff is a diff story
[21:55] rot13 has joined the channel
[21:55] Aikar: actually thatll prolly leave node manpages
[21:55] tanepiper: and if i to /style/account.css i get
[21:55] tanepiper: Error: ENOENT, No such file or directory '/home/ubuntu/quartermaster/src/public/style/style/account.styl'
[21:56] tjholowaychuk: tanepiper: ok, so that request is triggering the stylus middleware correctly at least
[21:56] tjholowaychuk: ill take a look at your code again
[21:56] tanepiper: yea, and the directory is writable
[21:56] rburhum has left the channel
[21:57] devdazed: hi all, whats the proper way to get a clients ip address in the hhtp object, using express
[21:57] tjholowaychuk: tanepiper: this might help explain the issue https://github.com/learnboost/stylus/issues#issue/122
[21:57] tjholowaychuk: bit tricky to describe
[21:58] Flybyme has joined the channel
[21:58] devdazed: i tried req.connection.remoteAddress but it always comes back as 127.0.0.1
[21:59] ncb000gt: devdazed: are you making the requests?
[21:59] devdazed: ncb000gt: NO
[21:59] devdazed: oops, didnt mean the caps
[21:59] ncb000gt: devdazed: :)
[22:00] ncb000gt: devdazed: not sure then, that should be it...do you have a proxy up?
[22:00] ncb000gt: how is the infra set up?
[22:00] devdazed: nginx -> node
[22:00] ncb000gt: yea
[22:00] devdazed: actually
[22:00] ncb000gt: nginx is making the reqs
[22:00] iigrat has joined the channel
[22:00] devdazed: load balancer -> nginx -> node
[22:00] rot13 has joined the channel
[22:01] tanepiper: tjholowaychuk: hmm yea that is a but of a bugger, but i'm sure i can work it out
[22:01] devdazed: hrm, any way you think around it?
[22:01] ncb000gt: tho there should be more info there
[22:01] Poetro has joined the channel
[22:01] tjholowaychuk: tanepiper: yeah its kinda... weird
[22:01] tjholowaychuk: but it does have to be that way
[22:01] ncb000gt: devdazed: assuming http you could likely check the 'Via' header
[22:01] brad__ has joined the channel
[22:01] tjholowaychuk: tanepiper: but I agree that it is not obvious at all, confuses me sometimes too haha but to support nesting it has to be that way
[22:02] devdazed: ncb000gt: ill see if that is there.  thanks!
[22:02] ncb000gt: assuming that's being set properly by the other servers
[22:02] ncb000gt: devdazed: sure
[22:02] tjholowaychuk: tanepiper: but who knows maybe it is worth ditching nesting
[22:02] iszak: anyone else error on the test test-http-agent2.js line 61 char 10
[22:02] NuckingFuts has joined the channel
[22:03] brad__: anybody think that node is gonna take significant mindshare away from ruby, as it becomes the next cool thing?
[22:04] daveluke has joined the channel
[22:04] iszak: test error looks like this http://pastie.org/1603898
[22:04] lgl has joined the channel
[22:05] SubStack: node should aim to become the new awk
[22:05] msch has joined the channel
[22:05] keltusEx has joined the channel
[22:05] iszak: it could fill more than just awk
[22:05] SubStack: installed everywhere, eventually was 'finished'
[22:06] SubStack: except with a package manager so all the new stuff can live in userspace
[22:06] rot13 has joined the channel
[22:06] ncb000gt: SubStack: Node will be more akin to Python
[22:06] SubStack: more like perl in that respect
[22:06] iszak: npm should have an expiration date on packages with lack of updates.
[22:06] ncb000gt: or perl
[22:06] SubStack: python has several really terrible package managers
[22:06] ncb000gt: iszak: not true, my package could work fine and not need updates
[22:06] konobi: cpan++
[22:06] v8bot:  konobi has given a beer to cpan. cpan now has 1 beers.
[22:07] ncb000gt: SubStack: pip is quite awesome
[22:07] iszak: ncb000gt, I think we should do it.
[22:07] squeeks: any cpan authors in here, out of curiousity?
[22:07] konobi: squeeks: yup
[22:07] ncb000gt: teamed with virtualenv is a very powerful combo
[22:07] SubStack: I like how in npm package names map directly onto what you require()
[22:07] Sebmaster: tjholowaychuk: Is it weird, if cluster doesn't write pidfiles()?
[22:07] ncb000gt: iszak: i do not
[22:07] iszak: should update your code base then.
[22:07] ncb000gt: iszak: that would be a ridiculous waste of module dev time.
[22:07] tjholowaychuk: Sebmaster: both master and worker pidfiles missing?
[22:08] Sebmaster: tjholowaychuk: Yes
[22:08] tjholowaychuk: Sebmaster: they write when the workers are spawned, and then on listening
[22:08] tjholowaychuk: hm
[22:08] iszak: ncb000gt, I like to think of it as "out with the old, in with the new"
[22:08] dve_: SubStack: is it possible to access the socket.io sessionID for a client in DNode?
[22:08] dve_: (on the client side)
[22:08] ncb000gt: iszak: yea, i like to think of that as "out with the stable, in with the unstable"
[22:08] _sri: squeeks: many
[22:09] squeeks: ha.
[22:09] ncb000gt: iszak: also, "let me pad my file so that it recognizes a version update...yay waste of my time"
[22:09] Sebmaster: tjholowaychuk: Im still having the problem, about not being able to do anything in my callback and currently i have some time to try to figure it out
[22:09] konobi: _sri: oh, hey sebastian
[22:09] iszak: ncb000gt, you'll have to update the package.json anyway?
[22:09] _sri: ACTION waves
[22:09] dguttman_ has joined the channel
[22:10] tjholowaychuk: Sebmaster: ah then yeah something is going on preventing it from listening all together
[22:10] ncb000gt: iszak: i'm sorry, "let me update the version number in the package.json just to support this imposed constraint of 'update within x days' even though my module works fine on this version"
[22:10] tjholowaychuk: Sebmaster: definitely use the debug() plugin, hopefully it will give some insight
[22:10] losing has joined the channel
[22:10] eyesUnclouded has joined the channel
[22:10] iszak: ncb000gt, sounds good, i'll get it implemented.
[22:11] ncb000gt: iszak: >_<
[22:11] squeeks: so that's 4?
[22:11] rot13 has joined the channel
[22:11] Sebmaster: tjholowaychuk: figured the pid problem out, a pid folder was missing. if i use logger() it throws an exception about file not found, but it doesn't with pidfiles(), maybe throw/error on pidfiles() too?
[22:11] iszak: someone fix my make test error: http://pastie.org/1603898
[22:12] tjholowaychuk: Sebmaster: oh shit yah I just fire and forget haha, I will add those callbacks
[22:12] tjholowaychuk: my bad
[22:12] Sebmaster: tjholowaychuk: is it possible to write reroute the stdout to the current console or something?
[22:13] Sebmaster: s/write//
[22:13] tjholowaychuk: Sebmaster: only for the workers right now
[22:13] tjholowaychuk: Sebmaster: I would like that option for logger() though
[22:13] nejucomo has joined the channel
[22:14] ncb000gt: SubStack: agreed, npm does some great stuff. i was just thinking about what node seems more like, awk wasn't it but perl fits the same way python does- regardless of the package management.
[22:14] markwubben has joined the channel
[22:14] Sebmaster: tjholowaychuk: would be nice, because i still dont know if my callback gets called, and my file-write is wrong, or the callback doesnt get called at all
[22:14] tjholowaychuk: your file-write?
[22:14] chrischris has joined the channel
[22:15] tjholowaychuk: do cluster = cluster(server).listen(blahblah); cluster.on('listening', fn) etc
[22:15] Flybyme has joined the channel
[22:15] tjholowaychuk: or listen(port, callback) etc
[22:16] Sebmaster: tjholowaychuk: im currently doing this: https://gist.github.com/843013
[22:17] svenlito has joined the channel
[22:17] rot13 has joined the channel
[22:17] tjholowaychuk: i see
[22:17] Sebmaster: tjholowaychuk: the file doesnt exist after i try to connect to the server
[22:18] Sebmaster: tjholowaychuk: and i cant retrieve something from the socket either if i do a conn.write()
[22:18] Sebmaster: so im not quite sure, what to check next
[22:18] pyrotechnick has joined the channel
[22:18] tjholowaychuk: well does your server work 100% as expected without cluster?
[22:18] tjholowaychuk: that is what I would start with
[22:18] linnk: Which orm do people use for redis? nohm redirects to biggie-orm which seems to be unmaintained lately
[22:19] piscisaureus has joined the channel
[22:19] Sebmaster: tjholowaychuk: yea, the original version did. i deleted everything of it now and try to get this simple program of the gist running
[22:20] Sebmaster: tjholowaychuk: some additional info: https://gist.github.com/843017
[22:20] Sebmaster: the error occurs as soon as i cmd+c the process
[22:21] vonkow has joined the channel
[22:21] alex1 has joined the channel
[22:22] tjholowaychuk: Sebmaster: yeah, SIGINT triggers it to be destroyed
[22:22] tjholowaychuk: what's weird about that?
[22:22] Sebmaster: tjholowaychuk: the no such process error?
[22:22] tjholowaychuk: oh I see it cant find the proc
[22:22] tjholowaychuk: hm
[22:22] rot13 has joined the channel
[22:22] Sebmaster: this does occur most of the time, but not always
[22:23] Sebmaster: sometimes i just get the expected shutdown output
[22:23] tjholowaychuk: ill try to reproduce that
[22:23] pyrotechnick has joined the channel
[22:27] softdrink: operational transformations break my brainmeats
[22:27] orospakr: man, I'd love to see Qt bindings for Node.
[22:27] bingomanatee: Have you tried Network Helper?
[22:27] orospakr: and I don't mean QtScript.
[22:28] squeeks: doesn't Qt have it's own event loops/shenanigans?
[22:28] softdrink: what's the future of Qt with nokia going insane?
[22:28] rot13 has joined the channel
[22:28] squeeks: It's open sores. When Nokia stop caring about it, it'll be up to whoever in the open sores community to prop it up
[22:29] orospakr: squeeks, well, sure. you'd have to integrate node's evening with that in some way.
[22:29] orospakr: also, does v8 have an interpreted mode when build on a CPU that it doesn't have a jit for?
[22:29] apoc has joined the channel
[22:30] orospakr: yeah, ick, v8 doesn't even do ppc.
[22:31] gagaforgaga has joined the channel
[22:31] krazyjakee has joined the channel
[22:32] nornagon_ has joined the channel
[22:32] ncb000gt: softdrink: supposedly they still have a huge market to keep QT around.
[22:32] ncb000gt: orospakr: there was a little work towards getting bindings for GTK done
[22:32] ncb000gt: you could probably look at them to gain some inspiration for QT
[22:33] Me1000 has joined the channel
[22:33] matyr has joined the channel
[22:33] rot13 has joined the channel
[22:35] ion- has joined the channel
[22:35] elmer1 has joined the channel
[22:35] dancor has joined the channel
[22:36] matyr__ has joined the channel
[22:36] Me1000 has joined the channel
[22:38] darshanshankar has joined the channel
[22:39] rot13 has joined the channel
[22:39] darshanshankar has left the channel
[22:40] darshanshankar has joined the channel
[22:40] aklt has joined the channel
[22:41] sveimac has joined the channel
[22:43] chanman has left the channel
[22:47] ziro` has joined the channel
[22:51] gravyrobber has joined the channel
[22:58] dewey_ has joined the channel
[22:59] eaton has joined the channel
[23:01] isaacs: iszak: re package expiration, that's kind of a cool idea.
[23:01] colinsullivan has joined the channel
[23:02] isaacs: iszak: maybe not expire from the registry, but get some sort of flag or something?  i mean, it'd be a shame if something is really useful and whatnot, and just has been stable for a long time.
[23:02] colinsullivan1 has joined the channel
[23:02] iszak: isaacs, great idea, flag is probably a better idea.
[23:02] dewey__ has joined the channel
[23:02] iszak: isaacs, but what is the appropriate flag? "Archived" ? "Legacy" ?
[23:03] jimt_ has joined the channel
[23:03] isaacs: iszak: on second thought, i wouldn't want to penalize stuff that has reached stability.
[23:03] isaacs: iszak: i mean, i haven't hardly updated nave, but that's only because it Just Works
[23:03] iszak: a flag doesn't really penalize them
[23:04] colinsullivan1 has joined the channel
[23:04] willwhite has joined the channel
[23:04] iszak: isaacs, maybe "Mature" ?
[23:05] lukegalea_ has joined the channel
[23:05] Evet_ has joined the channel
[23:05] galaxywatcher has joined the channel
[23:05] michaelowens has joined the channel
[23:05] michaelowens: Hello
[23:06] iszak: galaxywatcher, good to see you here!
[23:06] rpflo has joined the channel
[23:06] michaelowens: Is it possible to require a file, and then edit it, and require it again to get the changes (and override old object)?
[23:07] dthompson has joined the channel
[23:07] galaxywatcher: iszak: ahh yes...always a pleasure.
[23:09] mjr_ has joined the channel
[23:09] iszak: isaacs, sounds like a good idea?
[23:09] michaelowens: Anyone with a possible idea?
[23:10] ryah: michaelowens: wlel.
[23:10] ryah: michaelowens: you can bounce the process
[23:11] michaelowens: ryah: Hmm, how would that work? Is that in the api docs?
[23:11] ryah: michaelowens: there is also an experimental patch to allow it to be edited on the fly
[23:11] ryah: michaelowens: kill `pgrep node`
[23:11] Sorella: why not pkill node?
[23:11] Evet has joined the channel
[23:12] iszak: why not pgrep "node" | xargs -I process kill process
[23:12] ryah: michaelowens: but basically you need to restart
[23:12] iszak: I prefer that
[23:12] ryah: michaelowens: there's no reliable way to do this without restarting it
[23:12] tjholowaychuk: killall -kill node
[23:12] iszak: apt-get remove *
[23:12] michaelowens: ryah: I see, so once required it'll be cashed and needs a restart to get any possible update?
[23:13] michaelowens: ryah: Seeing as my current approach was: https://gist.github.com/843085 and then in the 5 sec gap editting the file
[23:13] Sorella: iszak, you forgot to sudo that :3
[23:13] iszak: Sorella, I am always root!
[23:13] evl has joined the channel
[23:13] softdrink: so much easier to follow (on OT) http://googledocs.blogspot.com/2010/09/whats-different-about-new-google-docs_23.html
[23:14] wadey: michaelowens: there are a few helper scripts for that, like this one: https://github.com/weaver/renode
[23:14] iszak: Sorella, I hate having to type sudo 20 times a day, so I just sudo su like a boss.
[23:15] michaelowens: wadey: Thanks for your response. Would that not kill the complete app though and just restart it? Seeing as the main app needs to keep running due to sockets running on the background
[23:15] wadey: yeah, so that probably won't fork for you
[23:15] wadey: work*
[23:15] michaelowens: wadey: And I created a plugin system, which I would like to be able to reload after editting the code without restarting the whole app.
[23:15] michaelowens: That's a pity
[23:16] Sebmaster: eval :p
[23:16] Sorella: iszak, manly :3
[23:16] iszak: Sorella, yep then I just chown/chmod everything to my user after I'm done :D
[23:16] michaelowens: Sebmaster: but requiring the file again for a second time doesn't get the updates I believe, how would eval fix that?
[23:16] kuhrt has joined the channel
[23:17] wadey: eval the file instead of requiring it
[23:17] Sebmaster: michaelowens: read the file yourself
[23:17] jimt has joined the channel
[23:17] Sebmaster: then eval it
[23:17] michaelowens: Oh yes, thanks. I'm going to try that then.
[23:18] Sebmaster: i <3 evil approaches
[23:19] mikeal has joined the channel
[23:19] eee_c has joined the channel
[23:20] jakehow has joined the channel
[23:20] Ond has joined the channel
[23:21] Twelve-60 has joined the channel
[23:21] gagaforgaga has left the channel
[23:23] markwubben has joined the channel
[23:23] krazyjakee: anyone wanna test/play ma node mmo?: http://mystalia.org/
[23:26] iszak: krazyjakee, guest logins?
[23:26] krazyjakee: oo not yet, just fill in bs
[23:26] krazyjakee: or username/pass test/test
[23:28] krazyjakee: oh yeah, the test player is stuck over there
[23:28] JCS0 has joined the channel
[23:29] iszak: krazyjakee, how long did it take to create?
[23:29] krazyjakee: ahem... also the server is a lil unstable ^^
[23:29] krazyjakee: couple months
[23:30] daveyjoe has joined the channel
[23:30] [[zz]] has joined the channel
[23:30] daveyjoe: Is it possible to create a many-to-one relationship in a Mongoose model/
[23:32] jimt_ has joined the channel
[23:35] wilmoore has joined the channel
[23:37] derferman has joined the channel
[23:37] lukegalea_ has joined the channel
[23:37] jimt has joined the channel
[23:38] dgathright has joined the channel
[23:39] slickplaid: http.get(blah, function(res) <-- what method displays the body?
[23:39] krazyjakee has left the channel
[23:39] xandrews has joined the channel
[23:39] stonecobra_ has joined the channel
[23:39] johnnywengluu: how do you encrypt a string in sha1 on node.js?
[23:40] iszak: crypto
[23:41] iszak: johnnywengluu, crypto.createHash('sha1')
[23:41] blaines has joined the channel
[23:41] johnnywengluu: sha1 as the password?
[23:41] iszak: no that's the algorithm to use
[23:42] slickplaid: text = crypto.createHash('sha1').update(text).digest('hex');
[23:42] johnnywengluu: hmm long code=)
[23:42] iszak: compared to sha1() in PHP, definitely.
[23:42] Ratty_: Long code is long
[23:42] blaines has joined the channel
[23:43] iszak: maybe some aliases?
[23:43] blaines has joined the channel
[23:43] iszak: like crypto.hash(algorithm, text, [output]); ?
[23:43] iszak: output = encoding
[23:43] dylang_ has joined the channel
[23:44] softdrink: does anyone have a good way to serialize an object with self-references in-tact?
[23:44] rburhum has joined the channel
[23:44] shaver: you have to do it by hand
[23:44] shaver: without WeakMaps it's painful
[23:44] trotter has joined the channel
[23:45] softdrink: that's fine, i was just wondering if someone was already working on something like that or knew of something
[23:45] iszak: i think we need something like that baked in.
[23:45] miccolis has joined the channel
[23:45] Vekz has joined the channel
[23:45] softdrink: i need to do it client-side as well
[23:46] Vekz: this is a noob question. Can I use require to load non-modularized js files into the current execution scope? so like I have a collection of functions in scripts.js if I require("./scripts.js") can i get access to those functions?
[23:47] Ratty_: Vekz: Just add them to exports and you can do that, but don't include the .js int he require()
[23:47] slickplaid: http.get(blah, function(res) <-- what method displays the body? res.body? res.what?
[23:47] CIA-39: node: 03Ryan Dahl 07v0.4 * r1f50d71 10/ (src/node_script.cc test/pummel/test-vm-memleak.js): 
[23:47] CIA-39: node: Fix memleak in vm.runInNewContext
[23:47] CIA-39: node: Closes GH-704. - http://bit.ly/fGG2D2
[23:47] iszak: slickplaid, console.log(res)
[23:47] michaelowens: Thanks wadey and Sebmaster, got it working ;-) Bit late :p
[23:47] iszak: or does it have a .methods, do we have a .methods property?
[23:47] Sebmaster: np
[23:48] nejucomo has left the channel
[23:48] msch has joined the channel
[23:48] Vekz: Ratty_: Thanks, where are the docs on require/exports ??
[23:49] slickplaid: iszak: yeah I did that, i'm not finding it unfortunately
[23:49] slickplaid: i'll keep looking
[23:49] Ratty_: Vekz: It follows the commonjs spec: http://wiki.commonjs.org/wiki/Modules/1.1
[23:49] slickplaid: maybe i need to hook the event and listen for the response
[23:49] Vekz: looks like it is the "global" section of the node docs as well thx
[23:50] sprout has joined the channel
[23:50] liar has joined the channel
[23:50] iszak: slickplaid, there is no body
[23:50] Gregor has joined the channel
[23:50] diggersf has joined the channel
[23:51] ajashton1 has joined the channel
[23:51] softdrink: hrm… guess i'll need an escape sequence or something
[23:52] slickplaid: iszak: nope, i'm trying to get data back from an API, returning type 'text/html' which is actually json
[23:52] michaelowens has left the channel
[23:53] softdrink: something like "»guidhere"
[23:54] iszak: slickplaid, try http.request(options, callback) with a data callback
[23:54] slickplaid: Okay
[23:55] johnnywengluu: using encodeURIComponent i encode it..how do i unencode the same string?
[23:56] dguttman has joined the channel
