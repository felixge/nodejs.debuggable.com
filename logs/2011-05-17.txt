[00:02] [[zz]] has joined the channel
[00:03] copongcopong has joined the channel
[00:07] mephux has joined the channel
[00:13] copongcopong has left the channel
[00:18] perlmonkey2 has joined the channel
[00:19] boogyman has joined the channel
[00:20] copongcopong has joined the channel
[00:20] mikeal has joined the channel
[00:20] olalonde has joined the channel
[00:21] mdaisuke has joined the channel
[00:21] olalonde: mm
[00:25] TooTallNate has joined the channel
[00:26] ryanfitz has joined the channel
[00:27] TooTallNate: quiet room right now...
[00:27] jtsnow has joined the channel
[00:27] echosystm has joined the channel
[00:27] kmiyashiro has joined the channel
[00:27] echosystm: what testing framework are most folks using these days?
[00:27] aberry has joined the channel
[00:28] tbranyen: echosystm: i've been using nodeunit and liking it
[00:28] catshirt has joined the channel
[00:28] tjholowaychuk: echosystm: nodeunit = slow/easy, expresso = sometimes annoying/fast, vows = pretty
[00:28] tjholowaychuk: pretty/verbose
[00:30] newy_ has joined the channel
[00:30] tbranyen: tjholowaychuk: slow? i must not be writing many assertions
[00:30] tjholowaychuk: well for async stuff since it's serial
[00:31] tjholowaychuk: makes it easier to use though for some cases
[00:31] tbranyen: well it doesn't have to be, you'd just have to keep track of when all assertions have ran and then call test.done
[00:31] tjholowaychuk: although expresso has --serial
[00:31] tjholowaychuk: yeah
[00:32] tjholowaychuk: but one test is executed at a time
[00:32] tjholowaychuk: expresso (by default) executes them all
[00:32] tbranyen: oh i see what you're saying
[00:32] tjholowaychuk: in one shot
[00:32] tjholowaychuk: like my express tests of < 1 second
[00:32] tjholowaychuk: would go up to probably 6 or 7 seconds
[00:32] tjholowaychuk: at least
[00:32] tjholowaychuk: probably more
[00:32] tbranyen: write less tests problem solved
[00:33] tbranyen: well tested code just makes you feel safe and thats when the real trouble starts
[00:34] tjholowaychuk: yup
[00:34] tjholowaychuk: IMO unit tests
[00:34] tjholowaychuk: are the only important ones
[00:34] Aria: Yeah. Maybe some casual integration tests.
[00:36] Swimming_bird has joined the channel
[00:36] echosystm: has anyone ever thought of setting up a combined package and documentation repository, like CPAN ?
[00:36] Aria: I keep toying with it, but have no time to devote to it.
[00:36] echosystm: having documentation and packages separate a'la rubygems is kinda lame
[00:37] brownies has joined the channel
[00:37] pyrotechnick has joined the channel
[00:37] pyrotechnick: anyone know how to get global modules to use bundled dependencies?
[00:40] postwait has joined the channel
[00:40] willwhite has joined the channel
[00:40] chrislorenz has joined the channel
[00:43] baudehlo has joined the channel
[00:44] olalonde: where can I find the latest Node.js development roadmap?
[00:45] echosystm: where does npm put executables?
[00:46] echosystm: ie. i just npm install vows, but i'm not sure what to add to my path so that the "vows" command is available
[00:46] Aria: npm install -g vows
[00:46] Aria: You want to install globally to have a globally-available command.
[00:46] Aria: npm is weird. In a good way.
[00:47] echosystm: what did i just do?
[00:47] Aria: Installed the package where the system sees it, not just the current module.
[00:47] Aria: without -g, it installs it 'here', the cwd (or parent module)
[00:47] Aria: look for node_modules
[00:47] echosystm: i see
[00:48] echosystm: has it always been that way?
[00:48] Aria: Since 1.0
[00:48] neoesque has joined the channel
[00:48] echosystm: right
[00:48] Aria: Not prior.
[00:48] Aria: npm solves the "how do you play nice with 'the system'" problem by working locally by default.
[00:48] Aria: I think that's very sane. It also ends up replacing a sort of hackish 'bundle' system
[00:48] tilgovi has joined the channel
[00:49] tmzt has joined the channel
[00:53] postwait: Aria: where does npm -g install it?
[00:54] Aria: Well, "alongside node" is the simple answer.
[00:54] postwait: in the configured node lib directory?
[00:55] Aria: Yeah, and the bin directory where node is
[00:55] jacter has joined the channel
[00:56] bartt has joined the channel
[00:57] olalonde: most answers to the new npm system can be found here: http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/
[00:57] Silly_Wabbit has joined the channel
[00:58] ryanfitz has joined the channel
[00:59] tbranyen: olalonde: +1 to that link didn't even know that was posted
[00:59] deedubs has joined the channel
[01:01] ryanfitz_ has joined the channel
[01:02] tilgovi has joined the channel
[01:03] poincare101 has joined the channel
[01:04] poincare101: Hello everyone. I was wondering if you guys wanted to wrap wxwidgets support for node.js to write desktop apps, I really want to use node.js more than python and ruby, and its the only thing that lacking. I asked RY and he said its a good idea. 
[01:05] tilgovi: poincare101: do it :) that'd be cool.
[01:06] rfay has joined the channel
[01:06] mw has joined the channel
[01:07] mikeal has joined the channel
[01:07] poincare101: tilgovi: done. Setting up github repo :D
[01:07] wdperson has joined the channel
[01:07] davidwalsh_ has joined the channel
[01:08] jtsnow has joined the channel
[01:10] kmwallio has joined the channel
[01:11] cerisier has joined the channel
[01:12] jtsnow has joined the channel
[01:12] echosystm: how can you assert equality of buffers?
[01:12] echosystm: deepequal doesnt seem to work
[01:12] echosystm: AssertionError: <Buffer 01 01 00> deepEqual <Buffer 01 01 00>
[01:13] tbranyen: echosystm: calling toString won't work for you?
[01:13] tbranyen: buffer1.toString() === buffer2.toString()
[01:14] echosystm: thats a bit messy
[01:14] tbranyen: is it?
[01:14] tbranyen: only way to get them to a primative form suitable for comparing
[01:15] jhurlima0: what about writing your own equality comparison for Buffer (check length first, then for loop)
[01:16] tilgovi: ACTION resists the temptation to rant about the absence of operator overloading or OO equality methods in js
[01:16] tilgovi: ACTION and god forbid you wish to make your own iterable
[01:16] sridatta has joined the channel
[01:16] AddZero has joined the channel
[01:18] sridatta: hey all. what are your thoughts on these benchmarks? http://www.ostinelli.net/a-comparison-between-misultin-mochiweb-cowboy-nodejs-and-tornadoweb/
[01:18] sridatta: I'm trying to figure out what the bottleneck could be that causes node.js to cap out at ~3.5K responses/second
[01:18] quackslike: sridatta: is that slow?
[01:19] ASY has joined the channel
[01:19] quackslike: slow/too few
[01:19] sridatta: it's not slow. I'm just thinking/trying to understand the internals
[01:19] newy_ has joined the channel
[01:20] avalanche123 has joined the channel
[01:21] olalonde: probably the V8 engine?
[01:21] zentoooo has joined the channel
[01:22] poincare101: Hey, if anyone wants to contribute, I'm starting a node fork to get wxwidgets wrapped right here: https://github.com/Poincare/node
[01:22] jhurlima0: olalonde, i wouldn't bet on it. that benchmark uses a negligible amount of user-written javascript, and once V8 has JITed and tuned all of the hot methods it mostly stays out of the way except for garbage collection (which shouldn't be an issue in the test that was ran)
[01:23] TroyMG_ has joined the channel
[01:23] sridatta: perhaps it is an OS level issue with epoll or the unix process message queue?
[01:24] jhurlima0: and there isn't enough interesting work going on in the tests to start comparing node.js cooperative threading with erlang pre-emptible threading, so i would place my first bet on the socket handling in node.js
[01:25] jhurlima0: socket handling or event loop handling
[01:25] gnumarcelo has joined the channel
[01:26] aphelion has joined the channel
[01:26] chapel: poincare101: why fork node to do wxwidgets?
[01:26] chapel: couldn't that be done as an addon?
[01:26] olalonde: right, I don't see why it couldn't be a native extension
[01:27] jhurlima0: but those tests would need to be re-run and more data collected. you'd want to know what the response time variance was, what the event queue internals looked like when response times started exceeding five seconds, etc
[01:28] abraxas has joined the channel
[01:28] chapel: jhurliman sridatta ryah and one of the chrome guys (don't remember his name maralph or something) were talking about the issue from the benchmark
[01:28] mikeal has joined the channel
[01:28] jhurliman: ah, i missed that
[01:28] chapel: mralph I think
[01:28] chapel: bah, hes not in here
[01:29] chapel: anyways
[01:29] tim_smart: poincare101: Me and some others started GTK bindings. You could follow a similar convention
[01:29] mikegerwitz: mraleph
[01:29] killfill has joined the channel
[01:29] azeroth__ has joined the channel
[01:29] chapel: chrome guy figured 20-30% performance boost could be had from throttling the incomming connections
[01:29] chapel: thanks mikegerwitz
[01:30] jhurliman: i think i caught the tail end of that conversation. someone was proposing a limit on the number of outstanding accept()'s
[01:30] chapel: ryah: I have an interesting observation for you about that infamous and sad comparison with erlang. If I throttle accept (i.e. accept return after 50 accepted connections from https://github.com/joyent/node/blob/master/lib/net.js#L907 then response rate seems to improve by 20-30% and number of errors drops.
[01:30] olalonde: poincare101: check out http://syskall.com/how-to-write-your-own-native-nodejs-extension & https://www.cloudkick.com/blog/2010/aug/23/writing-nodejs-native-extensions/
[01:31] astropirate has joined the channel
[01:32] sridatta: chapel: interesting. perhaps I'll fork, implement and run a similar benchmark
[01:33] chapel: https://gist.github.com/975717 << full conversation
[01:33] saschagehlich has joined the channel
[01:33] chapel: kind of
[01:33] chapel: sridatta: as you can see baudehlo proposed a patch as well
[01:34] sridatta: oh cool
[01:34] chapel: anyways
[01:34] chapel: ACTION is afk
[01:35] springmeyer_ has joined the channel
[01:35] jhurliman: chapel, thanks for the paste
[01:39] ryah has joined the channel
[01:39] jacter1 has joined the channel
[01:41] jhurliman: i'll look through a few papers/RFCs if i have time this evening to try and find a useful algorithm for rate limiting accept()s
[01:41] k1ttty has joined the channel
[01:41] philtor has joined the channel
[01:42] mynyml has joined the channel
[01:43] dguttman has joined the channel
[01:44] jhurliman: i'd be curious how nginx or other servers deal with the same issue
[01:45] Insanity5902 has joined the channel
[01:45] ChrisPartridge: jhurliman: nginx uses zones to rate limit
[01:45] bayashi has left the channel
[01:46] c4milo has joined the channel
[01:48] springmeyer has joined the channel
[01:51] dguttman_ has joined the channel
[01:52] ngs has joined the channel
[01:54] tmzt has joined the channel
[01:54] Votaguz has joined the channel
[02:01] Mrfloyd has joined the channel
[02:02] fr0stbyte has joined the channel
[02:03] eyesUnclouded has joined the channel
[02:05] eyesUnclouded has joined the channel
[02:05] ryanfitz has joined the channel
[02:07] reiddraper has joined the channel
[02:07] mikeal has joined the channel
[02:07] tilgovi has joined the channel
[02:07] tilgovi has joined the channel
[02:07] reiddraper: is there a "connect" middleware channel?
[02:09] dyer has joined the channel
[02:09] dyer has joined the channel
[02:12] chalaschek has joined the channel
[02:12] Yuffster has joined the channel
[02:14] fr0stbyte has joined the channel
[02:14] fr0stbyte has joined the channel
[02:15] marknel has joined the channel
[02:16] harth has joined the channel
[02:17] JackeyChan has joined the channel
[02:19] jakehow has joined the channel
[02:20] skeevis has joined the channel
[02:20] JackeyChan: what's the good test tools for nodejs ?
[02:21] tmzt has joined the channel
[02:21] deedubs: JackeyChan: nodeunit, vows
[02:21] JackeyChan: deedubs: thanks 
[02:22] jacter has joined the channel
[02:23] sub_pop has joined the channel
[02:25] dcampano_ has joined the channel
[02:26] fr0stbyte has joined the channel
[02:26] tim_smart: JackeyChan: I use node-microtest :)
[02:26] chalaschek_ has joined the channel
[02:26] exstrudel has joined the channel
[02:26] tim_smart: Caution, only use if you are somewhat serious about TDD
[02:26] willwhite has joined the channel
[02:27] sonnym1 has joined the channel
[02:28] perlmonkey2 has joined the channel
[02:30] wookiehangover has joined the channel
[02:31] nadirvardar has joined the channel
[02:32] febits has joined the channel
[02:34] azeroth__ has joined the channel
[02:35] quackslike: reiddraper: no, i dont think there is..
[02:36] reiddraper: quackslike: thanks. I'm wondering if anyone has done websocket stuff as a connect middleware layer
[02:37] Skippy_AU has joined the channel
[02:38] jacter has joined the channel
[02:38] Skippy_AU: Can nodeJS be used to build full websites on? like if php etc?
[02:39] sridatta: Skippy_AU: yes, absolutely. check out web frameworks for node.js like Express
[02:40] a|i: so it is not possible to store socket.io clients in redis?
[02:40] a|i: (why not?)
[02:40] a|i: cannot we just store socket sessionid into redis?
[02:41] tk has joined the channel
[02:41] jacter has joined the channel
[02:42] olalonde: Skippy_AU: yep, with a steeper learning curve though
[02:43] Skippy_AU: is there any benifits in going down this root?
[02:43] brownies has joined the channel
[02:44] chjj: Skippy_AU: to using node.js over php...?
[02:44] Skippy_AU: yes
[02:44] chjj: ...i dont think i can list them all
[02:45] chjj: youll have to be more specific, what are you looking for exactly?
[02:45] Skippy_AU: So there is benifits
[02:45] dguttman has joined the channel
[02:45] olalonde: there's the clear benefit of using the same language on the server and client
[02:45] chjj: ill put it this way: there is nothing you can do with php that you cant do with node.js, but there are several things you can do with node.js that you cant do with php
[02:46] neoesque has joined the channel
[02:46] Skippy_AU: Well i am looking at making something small to start with like a user login system but so far have found 0 info on doing that with nodejs
[02:46] chjj: if you want to get up and running, start with a framework, like express
[02:46] zivester has joined the channel
[02:47] chjj: however
[02:47] chjj: i do recommend learning the lower level api first
[02:47] olalonde: If you're new to building web apps, I'd recommend you stick with PHP for now. The documentation/support for Node.js is still lacking if you can't do a lot of work by yourself
[02:48] rfay has joined the channel
[02:48] chjj: i dont know if thats particularly good advice, php doesnt promote a very good understanding of http
[02:49] puffpio has joined the channel
[02:50] olalonde: Well, that's the point. When you learn programming, you don't want to jump right in assembly or system calls
[02:51] Skippy_AU: I have had a small look at the nodejs docs and googlef around. say to make a baisc auth system how would that be done on nodejs? i did read something saying you make the client side JS make a cookie and then somehow make the nodejs make sure the cookie is set and the into is in a database etc.
[02:51] chjj: since when does node.js === assembly?
[02:51] olalonde: but if you really want to learn lots of stuff, Node.js is probably a good idea then :)
[02:51] chjj: Skippy_AU: a session system
[02:51] olalonde: I was making a parallel with high level languages / assembly
[02:52] chjj: Skippy_AU: for example, express/connect comes bundled with a session middleware, you have to pick a session store though
[02:52] olalonde: meaning that Node.js might be a bit too complicated for a novice right now
[02:52] Skippy_AU: okay with php for securty you would have to regen the session would that have to be done with node as well?
[02:53] CIA-90: node: 03koichik 07master * rd4f82ea 10/ (lib/dns.js test/simple/test-c-ares.js): 
[02:53] CIA-90: node: Fix dns.resolve() with 'PTR' throws Error: Unknown type "PTR"
[02:53] CIA-90: node: Fixes #1038 - http://bit.ly/kaBJR4
[02:53] CIA-90: node: Conflicts:
[02:53] CIA-90: node:  src/node_crypto.cc - http://bit.ly/iw4izj
[02:53] chjj: the security measures like hmacs and what not are taken care of for you in most session middlewares for node
[02:56] zkday has joined the channel
[02:56] chjj: Skippy_AU: just go with whatever youre comfortable with i guess, node may not be comfortable for you, but i do highly recommend it over anything else
[02:58] Skippy_AU: I think my best bet would be to keep using php and learn nodejs from the ground up. can you recommand me any good sites?
[02:58] olalonde: yes, just learn it from the ground up and start using it on side projects when you it's a good fit
[02:58] ChrisPartridge: Skippy_AU: howtonode.org dailyjs.com and the wiki on the node gh page, http://github.com/joyent/node
[02:58] brownies has left the channel
[02:58] brownies has joined the channel
[02:59] olalonde: Skippy_AU: also, always check the date of articles you read. a lot of stuff out there might be already obsolete
[02:59] chjj: yes, dailyjs has a tutorial for how to make a web app: http://dailyjs.com/2011/05/02/node-tutorial-23/
[03:00] olalonde: Skippy_AU: also http://nodebeginner.org/
[03:00] chjj: (that part because it lists all the previous tutorials)
[03:01] chjj: http://www.google.com/search?q=site:dailyjs.com+node+tutorial
[03:01] seivan has joined the channel
[03:01] olalonde: Skippy_AU: also, you might want to use Linux if you don't already
[03:01] zkday: where the free host for test nodejs.
[03:01] Skippy_AU: Thank you all for the links. 
[03:02] Skippy_AU: yes i have a linux server in my computer room. an old DELL 1U really need to upgrade it one day
[03:04] brweber2 has joined the channel
[03:05] zivester has joined the channel
[03:06] jesusabdullah: SubStack: I just found my copy of Dietel's C++ How To Program. Should I a) Keep it; b) Sell it; c) Give it to the literacy council; d) Kill it with fire ?
[03:06] bingomanatee has joined the channel
[03:07] bingomanatee: Hey Nodelings 
[03:07] jesusabdullah: Anybody else with an opinion, feel free to join in!=
[03:07] bingomanatee: I am presenting in the southbay on the 24th http://www.meetup.com/GreaterSanFranciscoBayApacheLAMP/
[03:07] bingomanatee: anyone want to come and show?
[03:07] bingomanatee: I can provide the ride
[03:07] halfhalo: I'm always a fan of d.
[03:07] olalonde: zkday: you can test it on your own computer ;) otherwise you can grab a free EC2 Micro Instance http://aws.amazon.com/free/
[03:07] Emmanuel__ has joined the channel
[03:08] temp01 has joined the channel
[03:09] chjj: i still cant figure out what the catch is with that ec2 promotional
[03:09] chjj: i know there is one ;)
[03:09] halfhalo: Amazon owns your soul
[03:09] chjj: i tried reading about them, but it was just a salad of buzz words
[03:09] olalonde: there is actually. I think you have to watch for your usage yourself otherwise you get billed
[03:10] chjj: it was like "super map reduce web scale scale scale scale free ec2 aws 100000"
[03:10] chjj: and my brain just filters out buzz word salads
[03:11] chjj: ACTION needs more web scale
[03:11] olalonde: http://mhlakhani.com/blog/2011/01/hidden-charges-aws-free-tier/
[03:11] sechrist: fuck yeah jsbbq
[03:11] olalonde: lol
[03:12] JackeyChan has joined the channel
[03:14] trcarden has joined the channel
[03:16] ChrisPartridge: olalonde: those 1c bills will getcha ;-)
[03:16] chrislorenz has joined the channel
[03:18] halfhalo: Think of all the starving children that cent could feed!
[03:19] SubStack: jesusabdullah: oh gods, the dietel books are worse than useless
[03:19] bingomanatee: Hey SubStack - feel like rolling out Browserling to the south bay?
[03:19] bingomanatee: or dnode?
[03:19] olalonde: are those the purple books?
[03:20] SubStack: rolling out wha?
[03:20] bingomanatee: http://www.meetup.com/GreaterSanFranciscoBayApacheLAMP/ I have a preso to the south bay AJAX group 
[03:21] sechrist has joined the channel
[03:23] zivester has joined the channel
[03:23] mw has joined the channel
[03:23] mw has joined the channel
[03:24] b_ruce has joined the channel
[03:25] b_ruce: Hi, anyone around?
[03:26] ezl has joined the channel
[03:29] z8000 has joined the channel
[03:31] z8000: I recall on the mailing list a while back a bunch of people trying to see how many concurrent tcp/ip connections they could get on a single node.js server ... is there any sample stress test code out there?  how many stable+active connections have you achieved?
[03:32] mikeal has joined the channel
[03:32] zenserve has joined the channel
[03:33] chapel: z8000: I think felixge ran a test where he got a ton of open connections on one process
[03:34] mjr_: z8000: you can open more than you can use, for sure
[03:34] z8000: yeah :)
[03:34] mjr_: I've had 64K connections open.
[03:34] mjr_: It works.
[03:34] z8000: mjr_: nice; were they mostly idle?
[03:34] mjr_: But 64K connections into a single process, how much meaningful work can you do with that?
[03:34] mjr_: Yeah, just sending a keepalive message every 60 seconds.
[03:35] z8000: mjr_: if I'm mostly offloading work to be done elsewhere it's quite useful really
[03:35] zentooo has joined the channel
[03:35] z8000: do you happen to recall what the memory usage was for 64K connections?  depends on how you setup tcp_rmem/wmem on Linux and such I know but ...
[03:36] z8000: 200 MB or 2 GB?
[03:36] mjr_: 200MB
[03:36] z8000: right on; thanks
[03:36] mjr_: Actually, more like 300MB.
[03:36] tshpaper has joined the channel
[03:36] indutny has joined the channel
[03:36] chapel: [12:03] felixge: Wow, just did a little playing and found that node can allocate 1.6 million concurrent http server request objects on a single socket before out of memory. 1.53kb / connection. Wow : )
[03:37] chapel: [12:03] felixge: 1.53kb / request
[03:37] mjr_: But yeah, that's the basic shape of things.  These were HTTP connections too, which is pretty cool.
[03:37] z8000: just wanted to get the order of magnitude; that works. thanks much
[03:37] chapel: funny, how I remembered who said it
[03:37] chapel: bingomanatee: how is your irc search thing going?
[03:38] copongcopong has joined the channel
[03:38] temp01 has joined the channel
[03:39] ryah: file descriptors is great object oriented programming
[03:40] zentooo has joined the channel
[03:40] chapel: ryah++
[03:40] v8bot:  chapel has given a beer to ryah. ryah now has 2 beers.
[03:40] ryah: chapel: but i already have a beer
[03:40] ryah: ACTION double fists for a bit
[03:40] chapel: :)
[03:40] pyrotechnick: pipe down
[03:41] chapel: next nodeconf, I will be buying ryah a beer or two
[03:41] zentooo has joined the channel
[03:42] flippyhead has joined the channel
[03:43] jesusabdullah: SubStack: Okay, so should I give it to the literacy council or kill it with fire? XD
[03:43] tmzt has joined the channel
[03:43] zakabird has joined the channel
[03:45] olalonde: ryah: splice() or delete ? :)
[03:45] olalonde: ACTION is watching http://ontwik.com/javascript/introduction-to-node-js-with-ryan-dahl/
[03:45] sechrist: I wonder why Stylus doesn't do any inheritance
[03:46] mikeal has joined the channel
[03:47] mbrevoort has joined the channel
[03:47] ryah: v8: a = [1,2,3]; delete a[1]; a.length
[03:47] v8bot: ryah: 3
[03:47] ryah: splice
[03:48] ryah: ^-- figured that out after that talk
[03:48] olalonde: ok :)
[03:48] chapel: v8: a = [1,2,3]; delete a[1]; a[1];
[03:48] v8bot: chapel: undefined
[03:48] chapel: :)
[03:48] chapel: v8: a = [1,2,3]; delete a[1]; a;
[03:48] v8bot: chapel: [1,3]
[03:49] tbranyen: chapel: yeah but the array magic is lost :(
[03:49] chapel: I know
[03:49] tbranyen: length is a special load of butthurt
[03:49] chapel: its simulated length
[03:49] tbranyen: especially in teh client side world
[03:49] chapel: just like args
[03:49] olalonde: kind of weird behaviour
[03:49] guybrush: haha, what do i do when i want to install module "x" with npm if there is a directory/file named "x" in pwd?
[03:50] chapel: in pwd/node_modules ?
[03:50] guybrush: na
[03:50] guybrush: private working dir
[03:50] ryah: don't use delete
[03:50] guybrush: i want to install "x" in the current directory, which contains the file ./x
[03:50] ryah: that's the trick
[03:50] ryah: it should be removed from the language entirely
[03:51] ryah: i think v8 just ignores it?
[03:51] chapel: v8: a = [1,2,3]; a.splice(1, 1); a.length;
[03:51] v8bot: chapel: 2
[03:51] ryah: well - it can't ignroe it
[03:51] tbranyen: ryah: delete removes properties from objects
[03:51] ryah: but i don't think it helps the gc
[03:51] tbranyen: it does more than just assign undefined
[03:51] olalonde: http://stackoverflow.com/questions/500606/javascript-array-delete-elements
[03:51] ryah: *shrug*
[03:51] ryah: do you really need that?
[03:52] ryah: i guess so...
[03:52] chapel: v8: a = {1: 1, 2: 2, 3: 3}; delete a[2]; a.length;
[03:52] v8bot: chapel: undefined
[03:52] tbranyen: well they would technically remain on the object as defined to undefined
[03:52] chapel: hrm, /me dumb
[03:52] tk has joined the channel
[03:52] tbranyen: delete would remove them completely from things like JSON.stringify and console.dir or log
[03:52] tbranyen: or atleast it should...
[03:53] markbao has joined the channel
[03:53] tbranyen: ryah: http://sharefilewith.me/u/6ffdff.png
[03:53] tbranyen: is the best way to show the diff
[03:53] tbranyen: at least the best way i knwo of
[03:55] copongcopong has joined the channel
[03:55] jtsnow has joined the channel
[03:55] sleeplessinc has joined the channel
[03:57] rchavik has joined the channel
[03:57] Tidwell has joined the channel
[03:58] bene has joined the channel
[04:01] _Ecce_ has joined the channel
[04:02] olalonde: http://www.youtube.com/watch?v=jo_B4LTHi3I&feature=player_embedded#t=2111s dumb question here: can the 2 socket callbacks run concurrently?
[04:02] sor3nsen has joined the channel
[04:03] chjj: olalonde: what do you mean? (cant watch the video, no headphones)
[04:03] aaronblohowiak has joined the channel
[04:04] temp01 has joined the channel
[04:05] olalonde: socket.on('data', function() { /* A */ }); socket.on('end', function() { /* B */ });     can A and B execute concurrently 
[04:05] olalonde: I'm still trying to get my head around the event loop
[04:05] aaronblohowiak: olalonde: there is no such thing as concurrent.
[04:05] aaronblohowiak: olalonde: well, not thatyou have to worry about =)
[04:06] chjj: in node, two things cant happen at the same time
[04:06] chjj: its only A then B
[04:06] chjj: not A and B
[04:07] olalonde: ok cool
[04:07] aaronblohowiak: olalonde: imagine that there is a while(true){} loop that all of your code runs inside of.  and inside of that, it checks an array of functionsToExecute. if that array is not empty, then pop() the function and call it
[04:07] chjj: thats the point of node actually, you dont have to deal with all the confusion "A and B" would bring into the picture
[04:07] olalonde: so let's say A loops: for(var i = 0; i < global_var; i++) {} and B modifies global_var, there's no risk that it will modify it while A is looping right
[04:08] tbranyen: holy god damn npm is fast now
[04:08] chjj: no, theres no risk, unless something asynchronous is being called from *within* that for loop
[04:08] chjj: but a normal for loop is blocking, its synchronous
[04:08] olalonde: aaronblohowiak: ok cool.
[04:08] chjj: *nothing* else will be happening while that for loop is iterating
[04:09] chapel: not entirely true
[04:09] chjj: ?
[04:09] olalonde: so it might affect the loop if I have an async call in the loop right?
[04:10] tbranyen: olalonde: most definitely
[04:10] chapel: v8: console.log('start'); for (var i = 0; i < 1000; i++) { if (i === 998) {console.log('loop end'); } console.log('end');
[04:10] v8bot: chapel: SyntaxError: Unexpected end of input
[04:10] olalonde: like a filesystem call
[04:10] chapel: typing in irc is odd
[04:10] tbranyen: olalonde: the way i've been thinking about async lookups in a loop is that you might be more interested in emitting events
[04:10] chjj: well, whatever async thing you call within the loop will not be executed right away, the loop will iterate, finish, and then the fs call might be executed
[04:10] tbranyen: rather than iterations
[04:11] tbranyen: chjj: why wouldn't they get executed? the app won't terminate until everything is complete
[04:11] chjj: ?
[04:11] chjj: why dont fs callbacks get executed instantly? is that what youre asking me?
[04:12] tbranyen: no...
[04:12] tbranyen: just curious why you said 'might'
[04:12] chjj: well there is some more code after the for loop, it might not be executed then
[04:12] chjj: because the code after would have to finish executing
[04:13] superjudge has joined the channel
[04:13] olalonde: chjj: ah I think I get it.
[04:13] chjj: i meant to say, once all the sync code is done executing, then your whatever fs callback can be executed
[04:13] danfo has joined the channel
[04:15] chjj: but say you have 100 lines of code after the for loop that makes a bunch of fs.readFile calls, those fs.readFile callbacks will not be executed until the 100 lines are done, ever
[04:16] mike5w3c has joined the channel
[04:16] chjj: so if you do: setTimeout(function() { console.log('hello'); }, 1); for (var i = 0xffffffff; i--;);
[04:17] beldur has joined the channel
[04:17] chjj: that settimeout will not execute 1ms later
[04:17] chjj: because that giant for loop has to be executed first
[04:17] k1ttty has joined the channel
[04:19] azeroth__ has joined the channel
[04:19] dyer has joined the channel
[04:20] niftylettuce has joined the channel
[04:20] olalonde: var max = 10; for (var i = 0; i <= max; i++) { setTimeout(function() { console.log(max); }, 1000); } max = "oops"; 
[04:21] olalonde: but I guess this is expected behavior anyway :)
[04:21] temp01 has joined the channel
[04:21] chjj: well, you should see all of those in the console saying, "oops", at roughly the same time
[04:21] chjj: thats whats to be expected
[04:22] harth: SubStack: I can't figure out what opts to pass browserify.bundle() for my package.
[04:22] harth: All my code is in ./lib
[04:22] harth: I have a main that I want to export on `require("mypkg")`
[04:23] harth: and deps in node_modules, but I only want to bundle one of them
[04:23] Maximosis has joined the channel
[04:25] chrislorenz has joined the channel
[04:29] jacter1 has joined the channel
[04:30] sechrist: Are there any modules to make it super simple to do a multi-part post?
[04:30] sechrist: for file uploads
[04:30] chapel: lol
[04:31] chapel: sechrist: felixge is working on one
[04:31] chapel: he doesn't have it pushed to the repo yet
[04:31] sechrist: I love formidable
[04:31] sechrist: a sister lib would be nice
[04:31] sub_pop has joined the channel
[04:31] chapel: not formidable, for posting, not receiving
[04:31] sechrist: yea
[04:31] sechrist: I mean he also wrote formidable
[04:31] chapel: https://github.com/felixge/form-data
[04:31] sechrist: it'd be nice to have it all from the same place
[04:31] chapel: yeah
[04:31] chapel: oh
[04:31] chapel: thats urlencoded
[04:31] chapel: not multipart
[04:32] chapel: hmm
[04:32] naniya has joined the channel
[04:33] Torkn2U has joined the channel
[04:33] Corren has joined the channel
[04:34] sechrist: yep hmm I don't see one
[04:34] jbpros has joined the channel
[04:35] chjj: wouldnt be that hard to write one
[04:36] chjj: if you wanted to send a single file as multipart/form-data you could do it in a couple lines actually, thanks to .pipe
[04:38] Viriix has joined the channel
[04:38] chjj: req.setHeader('Content-Type', 'etc; boundary='+key); req.write(key+'\r\nContent-Disposition: name="my_file"\r\n\r\n'); readStream.pipe(req, { end: false }); readStream.on('end', function() { req.write('\r\n--' + key + '--');
[04:38] mscdex: eh?
[04:38] chjj: something like that would do
[04:38] mscdex: lolwut
[04:39] chjj: to make a multipart request
[04:39] chjj: !
[04:39] chjj: for a single file
[04:39] mscdex: i thought there was a multipart request library somewhere
[04:39] mscdex: not formidable
[04:39] chjj: well formidable isnt for multipart requests
[04:39] chjj: i mean, making them
[04:40] chjj: im just saying, with the api node gives you, its trivial to make a multipart request
[04:40] mscdex: i know
[04:40] mscdex: i just meant, i wasn't confusing with formidable ;)
[04:40] chjj: ah
[04:40] newy_ has joined the channel
[04:41] sleeplessinc has joined the channel
[04:43] Aria: felixge just made a library for doing multipart requests.
[04:43] chjj: oh, cool
[04:44] kmiyashiro: how do you make multipart requests?
[04:44] chjj: kmiyashiro: see above
[04:44] sechrist: Aria: where?
[04:44] chjj: i forgot the two dashes before the first mention of `key` in the body though
[04:45] zermet has joined the channel
[04:45] zermet: $10 dollar obey survey http://www.surveymonkey.com/s/7FYJH3F sh
[04:45] Aria: https://github.com/felixge/form-data I believe
[04:45] towski has joined the channel
[04:46] zermet has left the channel
[04:46] Aria: He was talking about it on Twitter this morning
[04:46] nexxy: "I believe aliens are gods" rofl
[04:47] nexxy: it's like this survey is specifically for me!
[04:47] mscdex: orly
[04:47] nexxy: mhmm
[04:47] nexxy: bitches don't know about my alien gods
[04:47] sechrist: chjj: where were you missing --s?
[04:48] chjj: the first mention of `key` in the body
[04:48] z8000: I want to shoot myself every time I end up on launchpad.net
[04:48] chjj: here, ill show a more cleaned up example, i typed that in 2 seconds
[04:48] nexxy: has anyone here done extensive work with riak-js?
[04:48] indutny has joined the channel
[04:48] olalonde: is there a utility function for iterating an Object as an associative array?
[04:49] Jamool has joined the channel
[04:49] Aria: for(var k in object) ?
[04:49] chjj: ok, brace yourselves, im too lazy to gist...
[04:49] chjj: req.setHeader('Content-Type', 'multipart/form-data; boundary="'+key+'"'); req.write('--'+key+'\r\nContent-Disposition: name="my_file"; filename="myfile.txt"\r\n\r\n'); readStream.pipe(req, { end: false }); readStream.on('end', function() { req.end('\r\n--'+key+'--'); });
[04:49] _fat has joined the channel
[04:50] kmiyashiro: how do you do that via ajax?
[04:50] nexxy: by sending the request with an HXR
[04:50] zentooo has left the channel
[04:50] nexxy: XHR*
[04:50] chjj: and the key would be whatever you set, usually a string with a random number appended to it
[04:50] kmiyashiro: I heard you can't submit multipart with xhr
[04:51] Jamool_ has joined the channel
[04:51] mykul has joined the channel
[04:52] chjj: technically you could, xhr allows you to set headers
[04:52] jbpros has joined the channel
[04:52] nexxy: idk why not
[04:52] chjj: as long as you form the body correctly
[04:52] zentooo has joined the channel
[04:52] kmiyashiro: but how would it send the file?
[04:52] kmiyashiro: since it can't access the filesystem
[04:52] chjj: multipart/form-data doesnt necesarily mean theres a file
[04:52] killfill has joined the channel
[04:52] olalonde: nvm
[04:53] chjj: thats just what its usually used for
[04:53] chjj: but yeah, theres no way you could send a file
[04:54] nexxy: I could have sworn I've used a file uploader that didn't use the iframe hack
[04:54] planetic has left the channel
[04:55] chjj: that would be a pretty big security hazard nexxy
[04:55] chjj: if browsers allowed the dom to grab files from disk and upload them places
[04:55] chjj: there is the filesystem api, but its just like local storage except with files
[04:55] _fat: you don't have to use an iframe... http://www.plupload.com/
[04:55] olalonde: v8: var o = {}; o[{}] = "uh"; o[{id:123}] = "wtf"; console.log(o[{}]);
[04:56] v8bot: olalonde: "wtf"
[04:56] olalonde: guess I'll never understand JS fully
[04:56] nexxy: idk how that would be a security hazard innately
[04:56] chjj: v8: {} + ''
[04:56] v8bot: chjj: 0
[04:56] nexxy: if it was able to do it w/o any user interaction sure
[04:56] olalonde: it uses the object's type as a key I guess
[04:56] chrisdickinson: olalonde: it's coercing o[{}] to '[Object object]'
[04:57] chrisdickinson: v8: var o = {}; o[{}] = 'uh'; o['[object Object]']
[04:57] v8bot: chrisdickinson: "uh"
[04:57] olalonde: chrisdickinson: ah ok, I see
[04:57] tbranyen: object keys can only be strings
[04:57] tbranyen: which is why
[04:57] chrisdickinson: sometimes i wish javascript came with achievement badges.
[04:57] olalonde: thought I read otherwise somewhere
[04:57] chrisdickinson: except they'd all read, "oh, so that's how it works."
[04:57] tbranyen: v8> {}.toString()
[04:57] v8bot: tbranyen: SyntaxError: Unexpected token .
[04:57] tbranyen: v8> {} .toString()
[04:57] v8bot: tbranyen: SyntaxError: Unexpected token .
[04:57] tbranyen: r u shitting me
[04:57] chrisdickinson: v8: ({}).toString()
[04:57] olalonde: rofl
[04:57] v8bot: chrisdickinson: "[object Object]"
[04:58] tbranyen: welp works fine in the node repl
[04:58] chrisdickinson: tbranyen: bare braces begin a statement
[04:58] tbranyen: chrisdickinson: again, works fine in the node repl :)
[04:58] tbranyen: wonder why
[04:58] chrisdickinson: tbranyen: i think it automatically does something like eval('('+code+')')?
[04:58] tbranyen: probably something to do with magic
[04:58] ceej has joined the channel
[04:58] olalonde: right, works here
[04:59] chrisdickinson: v8: ({}.toString())
[04:59] v8bot: chrisdickinson: "[object Object]"
[04:59] olalonde: probably cause node's repl != v8
[04:59] chrisdickinson: yeah, that'd probably explain it
[04:59] tbranyen: v8> eval('{}.toString()')
[04:59] v8bot: tbranyen: SyntaxError: Unexpected token .
[04:59] tbranyen: oh i see
[04:59] darshanshankar has joined the channel
[04:59] chrisdickinson: yeah :\ just like that old json decoding trick.
[04:59] tbranyen: yup
[04:59] tbranyen: i dunno if thats such a good idea
[05:00] olalonde: let's try in Chrome
[05:00] tbranyen: olalonde: no chrisdickinson is totally right on the nose
[05:00] tbranyen: chrome will bomb out too
[05:00] olalonde: SyntaxError: Unexpected token .
[05:00] olalonde: yep
[05:01] echosystm: whats the best way to extend Error ?
[05:01] chrisdickinson: for real fun, compare what happens in chrome and safari with the following:
[05:01] chrisdickinson: ``new Date('2000-10-11 01:22:00')``
[05:01] echosystm: util.inherits doesnt work - i dont get a stacktrace
[05:01] chrisdickinson: echosystm: you can do Error.captureStackTrace(this) inside your constructor
[05:01] tbranyen: chrisdickinson: ret = vm.runInContext('(' + self.bufferedCommand + ')',
[05:01] echosystm: should that be done automagically when i call super_.apply(this, arguments) ?
[05:02] echosystm: *shouldnt
[05:02] chrisdickinson: echosystm: directly inheriting has never added that for me. don't know why.
[05:02] echosystm: hmm
[05:02] echosystm: ok
[05:02] echosystm: thanks
[05:02] chrisdickinson: echosystm: no prob
[05:06] chrisdickinson: echosystm: it looks like (from the node library, deps/v8/src/messages.js#L978) it only attempts to decorate an Error is the call is a construction call
[05:06] chrisdickinson: which Error.call(this) or super_.apply(this) wouldn't trigger as, at a low level.
[05:07] chrisdickinson: *s/node library/node repo/g
[05:07] echosystm: hm
[05:08] SubStack: harth: with browserify you can specify main as an option and set base to __dirname + '/lib'
[05:09] tilgovi has joined the channel
[05:09] tilgovi has joined the channel
[05:09] ChrisPartridge: ACTION wishes he didn't have a day job
[05:10] echosystm: is there any way at all to do the equivalent of super_.apply chrisdickinson ?
[05:10] echosystm: i'd like to have the message etc. populated
[05:10] chrisdickinson: echosystm: probably not. you can call it in your constructor against the current value of ``this``, though, and that'll have the exact same effect.
[05:11] echosystm: hang on, can you explain what you mean by that?
[05:11] echosystm: what do you mean against the current value of "this" ?
[05:12] chrisdickinson: v8: function SubclassedError() { Error.apply(this, arguments); Error.captureStackTrace(this); } SubclassedError.prototype = new Error; a = new SubclassedError; a.stack
[05:12] v8bot: chrisdickinson: "Error\n    at Error.SubclassedError (eval at <anonymous> (evalmachine.<anonymous>:26:5))\n    at eval at <anonymous> (evalmachine.<anonymous>:26:5)\n    at evalmachine.<anonymous>:26:9\n    at evalmachine.<anonymous>:30:2\n    at Socket.run (/home/inimino/v8bot/lib/sandbox/shovel.js:76:19)\n    at Socket.emit (events.js:39:17)\n    at Socket._onReadable (net.js:629:51)\n    at IOWatcher.onReadabl [Output truncated...]
[05:12] jacter has joined the channel
[05:12] admc has joined the channel
[05:12] Marak has joined the channel
[05:12] chrisdickinson: echosystm: (in SubclassedError, i'm calling Error.captureStackTrace(this) which applies the ``stack`` decorator to the new error object)
[05:13] echosystm: that doesnt give me message tc.
[05:13] echosystm: *etc.
[05:13] echosystm: my error objects only have the stacktrace property
[05:14] echosystm: { stack: [Getter/Setter] }
[05:14] chrisdickinson: v8: function SubclassedError() { Error.apply(this, arguments); Error.captureStackTrace(this); } SubclassedError.prototype = new Error; a = new SubclassedError('uhhhh'); a.message
[05:14] v8bot: chrisdickinson: ""
[05:14] chrisdickinson: echosystm: gimme a second :)
[05:14] echosystm: ok
[05:14] echosystm: i remember we had this discussion a while ago
[05:14] echosystm: i found a solution but i cant remember what it is now
[05:15] itissid has joined the channel
[05:15] chrisdickinson: echosystm: yeah, error basically refuses to do anything if it's not a construct call.
[05:15] olalonde: what's a good reference for all JS "wtf" moments? (apart from quirksmode.org). "JavaScript: The Good Parts" was a pretty good book but is there something more concise out there
[05:15] justinTNT has joined the channel
[05:16] justinTNT: hmmm
[05:16] fmeyer has joined the channel
[05:16] olalonde: I remember there was a link on hacker news a few weeks ago but didn't bookmark it unfortunately
[05:16] mynyml has joined the channel
[05:17] polotek has joined the channel
[05:18] JackeyChan has joined the channel
[05:18] chrisdickinson: olalonde: http://bonsaiden.github.com/JavaScript-Garden/
[05:18] olalonde: chrisdickinson: wow! exactly the link I was looking for!
[05:19] mbrevoort has joined the channel
[05:19] ChrisPartridge: Anyone else think a "npm adddep <packagename>" would be a good addition to npm? Doesn't link, or install the package locally, but add's it to the current modules package.json > dependencies object with the latest global version specified?
[05:20] chrisdickinson: echosystm: https://gist.github.com/b65b7cc753b6f9183e0c
[05:20] Aria: That sounds nice.
[05:20] chrisdickinson: you can extend from ExtendableError and get all the proper properties on your object.
[05:21] echosystm: ow
[05:21] echosystm: *wow
[05:21] echosystm: that is terrible :P
[05:22] echosystm: i wonder why no one had the fore-thought to not screw this up
[05:22] Aria: Yeah, it really is horrible.
[05:22] olalonde: ChrisPartridge: it would basically edit your package.json file programmatically? 
[05:22] chrisdickinson: echosystm: it sucks that you have to have an intermediary, but the base Error class doesn't assign any properties if it's not a construct call.
[05:22] echosystm: mm
[05:22] chrisdickinson: so yeah, suckage, but you can put that shim someplace dark and secret and forget about it.
[05:22] ChrisPartridge: olalonde: Yep
[05:23] zeade has joined the channel
[05:23] chrisdickinson: ACTION misses python's pattern matching on exception types constantly in js.
[05:23] sherod has joined the channel
[05:24] olalonde: ChrisPartridge: not a bad idea, but I wonder how hard it would be to do it without altering your formatting and comments
[05:24] echosystm: i miss OOP that doesnt suck :P
[05:24] ChrisPartridge: olalonde: it's JSON... not a worry at all
[05:24] chrisdickinson: when i'm in a good mood about JS, i imagine that the reason the exception system is so janky is because they really wanted to avoid people relying on it (since in an event loop'd language, the exception may often end up at the top of the stack unintentionally)
[05:25] Aria: It might be a worry if JSON supported comments.
[05:25] chrisdickinson: when i'm in a bad mood i just vomit tacks all over the implementation of Error
[05:25] echosystm: lol
[05:26] olalonde: ah, thought it was ok to comment a json file, my bad
[05:26] fmeyer has joined the channel
[05:26] materialdesigner has joined the channel
[05:27] gf3 has joined the channel
[05:27] zackattack has joined the channel
[05:28] sreeix has joined the channel
[05:29] johnnywengluu: is anyone using mustache on node.js?
[05:29] johnnywengluu: eg. this one: https://github.com/raycmorgan/Mu
[05:29] johnnywengluu: it seems not that actively maintained .. havent updated it for over one year
[05:30] yokoaway has joined the channel
[05:30] justinTNT: hmmm, distracted : that's a funny word. I wonder if anyone ever gets tracted? I might just call the suicide hotline and ask ...
[05:31] ChrisPartridge: justinTNT: tracted = verb for being run over by a tractor? :-)
[05:32] justinTNT: CP: actually I'm leaning more to "a set of mechanisms for straightening broken bones or relieving pressure on the skeletal system"
[05:36] ryah: the new internal interface for node is going to be awesome
[05:37] ryah: https://gist.github.com/976008
[05:38] sechrist: How do I send normal post variables in a multipart? hmm
[05:39] mikeal has joined the channel
[05:40] ryah: ^-- this is what we're going to build net.js on again
[05:40] ChrisPartridge: ryah++
[05:40] v8bot:  ChrisPartridge has given a beer to ryah. ryah now has 1 beers.
[05:41] ryah: super basic - but a good binding layer
[05:41] ryah: windows-y
[05:42] brianloveswords has joined the channel
[05:45] Aria: Interesting. What's Req?
[05:45] Aria: A 'target' for IO events?
[05:47] mscdex: no more port first? :O
[05:47] mscdex: hehe
[05:47] tonymilne: Ok. Wow. Does anyone use Campaign Monitor (an Aussie company for sending email campaigns!)?
[05:47] tonymilne: We just sent one, and they've got some neat real time display of people opening the emails (and clicking through)
[05:47] tbranyen: with http.get do i need to specify my own data event to collect the returned value?
[05:47] tonymilne: Hope they pulled it off using nodejs.
[05:48] mscdex: tbranyen: yes
[05:48] tbranyen: mscdex: thx
[05:48] ChrisPartridge: tonymilne: i'm guessing they are using JS in html emails?
[05:48] tonymilne: Yeah, they've always had analytics, but their display of the results just got realtime awesome.
[05:49] brettgoulder has joined the channel
[05:49] tbranyen: mscdex: worked great :D
[05:49] tbranyen: thx
[05:51] pwned has joined the channel
[05:59] marknel has joined the channel
[06:00] Jaike has joined the channel
[06:01] azeroth__ has joined the channel
[06:05] tdegrunt has joined the channel
[06:06] mraleph has joined the channel
[06:07] SamuraiJack has joined the channel
[06:07] mike5w3c has joined the channel
[06:08] Marak has joined the channel
[06:08] unomi has joined the channel
[06:10] Marak: nexxy: im stupid, thought you were someone else in here lol
[06:11] Marak: nexxy: we are in #Nodejitsu if you want to talk about audio apps
[06:14] polotek: ryah
[06:14] polotek: I'm not sure I get the API you posted
[06:14] nexxy: Marak, lol
[06:15] davidbanham has joined the channel
[06:16] TroyMG__ has joined the channel
[06:16] davidbanham: I'm using express, and I'd like to store session information in a mySQL database. I can't find anything out there that will let me do this. Is there something I'm missing, or is it a sign that this is actually a really awful idea and I should learn Redis instead?
[06:17] polotek: davidbanham: redis is dead simple and awesome for sessions
[06:18] davidbanham: Thanks polotek, I was just hoping to avoid cramming more in my head than I had to. I'll bite the bullet I guess.
[06:19] polotek: davidbanham: it's pretty easy to write a session store for express/connect
[06:19] polotek: check out the memory store. https://github.com/senchalabs/connect/blob/master/lib/middleware/session/memory.js
[06:20] polotek: just create your own store that implements these methods using your database
[06:20] dguttman has joined the channel
[06:20] polotek: it's meant to be pluggable
[06:20] pwned has joined the channel
[06:20] ChrisPartridge: ryah: When we get native windows support, I'm guessing there is going to a directory separator var?
[06:22] davidbanham: polotek: Thanks, the code for the memorystore is far simpler than I had expected. I do get the feeling, though, that if no-one's already written a session store for mySQL, and yet there are several for other databases, that I'm missing something and I should just use Redis.
[06:23] polotek: davidbanham: we're big on alternative datastores here. but mysql is fine if that's what you need. there are a couple of good drivers for it
[06:23] boghog: http://bellard.org/jslinux/ :o
[06:24] boghog: x86 emulator written in js, running linux
[06:24] Nexxy: -_-
[06:24] tbranyen: is there anything js can't do
[06:24] davidbanham: Yeah I'm using https://github.com/felixge/node-mysql for most of my data storage and it's brilliant.
[06:29] febits[0] has joined the channel
[06:33] tk has joined the channel
[06:35] gkatsev: tbranyen: well, clearly, you can't connect to the internet on linux inside of js.
[06:37] isaqual has joined the channel
[06:37] mscdex: i want to run links inside of my browser!
[06:38] fly-away has joined the channel
[06:40] mscdex: hax!
[06:40] boghog: at least is has vi 
[06:41] boghog: it*
[06:41] mscdex: eh?
[06:41] `3rdEden has joined the channel
[06:41] pyrotechnick: SubStack: dnode is screwwy
[06:42] mscdex: huh... doesn't work completely in chromium
[06:42] mscdex: it gets stuck at "Freeing unused kernel memory"
[06:42] sechrist: wow I am struggling way more than I thought I would be with this multipart stuff
[06:44] hellp has joined the channel
[06:45] liquidproof has joined the channel
[06:47] ChrisPartridge: pyrotechnick: :o how so?
[06:49] foobarfighter: Anybody know how to get npm to authenticate over SSL when publishing?
[06:51] nmd6168 has joined the channel
[06:51] balaa has joined the channel
[06:51] nmd6168 has left the channel
[06:52] makuchaku has joined the channel
[06:53] yozgrahame has joined the channel
[06:53] copongcopong1 has joined the channel
[06:53] pyrotechnick: ChrisPartridge: Uncaught Error: Uncaught, unspecified 'error' event.
[06:53] pyrotechnick: but only when debugger is disabled
[06:54] pyrotechnick: so i cant get a stack
[06:54] emattias has joined the channel
[06:55] DTrejo has joined the channel
[06:55] Druide_ has joined the channel
[06:55] langworthy has joined the channel
[06:55] nmd6168_ has joined the channel
[06:56] ChrisPartridge: pyrotechnick: Sounds strange, what version of dnode? 
[06:56] nmd6168_ has left the channel
[06:56] rauchg has joined the channel
[06:57] marknel has joined the channel
[06:57] jacobolus has joined the channel
[06:58] materialdesigner has left the channel
[06:59] Squeese has joined the channel
[07:01] mike5w3c has joined the channel
[07:01] matjas has joined the channel
[07:05] Skola has joined the channel
[07:06] fangel has joined the channel
[07:11] djcoin has joined the channel
[07:14] beawesomeinstead has joined the channel
[07:14] beawesomeinstead has joined the channel
[07:14] mAritz has joined the channel
[07:17] Me1000 has joined the channel
[07:18] harth: SubStack: thanks, I think I was running into a bug, sent pull request
[07:18] pyrotechnick: ChrisPartridge: 0.6.10
[07:19] Esteb has joined the channel
[07:20] mykul has joined the channel
[07:24] pyrotechnick: i got a stack trace
[07:26] Rodtusker has joined the channel
[07:28] uchuff has joined the channel
[07:29] uchuff has joined the channel
[07:30] ewdafa has joined the channel
[07:31] Xano has joined the channel
[07:31] sridatta has joined the channel
[07:32] tk has joined the channel
[07:33] tdegrunt has joined the channel
[07:33] mike5w3c has joined the channel
[07:33] groom has joined the channel
[07:34] MikeMakesIt has joined the channel
[07:34] ChrisPartridge: pyrotechnick: gist that bitch
[07:35] pyrotechnick: meh
[07:36] pyrotechnick: it got to  else if (typeof req.method == 'number') { apply(scrubber.callbacks[req.method], self.instance, args); }
[07:36] pyrotechnick: message was fine
[07:36] pyrotechnick: something's wrong
[07:36] [AD]Turbo has joined the channel
[07:36] pyrotechnick: stacktrace doesnt show anything you need the args too
[07:36] pyrotechnick: dunno
[07:37] pyrotechnick: am going to drop dnode here at work
[07:37] secoif has joined the channel
[07:37] brownies has joined the channel
[07:37] pyrotechnick: its failing in some really stupid situations
[07:37] pyrotechnick: like
[07:37] [AD]Turbo: hi there
[07:38] pyrotechnick: {handle: 'action', action: 'call_raise_all_in_fold'}
[07:38] pyrotechnick: is fine
[07:38] pyrotechnick: but {handle: 'action', action: 'call_raise_all_in_fold', data: null} fails
[07:38] pyrotechnick: just having the data key makes dnode Uncaught Error: Uncaught, unspecified 'error' event.
[07:39] pyrotechnick: maybe just webkit being a noob
[07:39] ChrisPartridge: pyrotechnick: Hmm, strange - using it pretty heavily here at the moment
[07:40] Zelest has joined the channel
[07:40] pyrotechnick: yeah we have been and we really like it
[07:40] itissid has joined the channel
[07:41] pyrotechnick: but its doing some really weird shit
[07:41] pyrotechnick: that i cant for the life of me seem to debug
[07:41] sechrist: http://bellard.org/jslinux/
[07:41] sechrist: the ultimate sandbox
[07:42] Druide_ has joined the channel
[07:43] troessner has joined the channel
[07:45] tk has joined the channel
[07:45] mhausenblas has joined the channel
[07:47] CiRlE has joined the channel
[07:48] robhawkes has joined the channel
[07:48] msucan has joined the channel
[07:49] m64253 has joined the channel
[07:50] aliem has joined the channel
[07:50] kixxauth has joined the channel
[07:51] febits has joined the channel
[07:51] teemow has joined the channel
[07:57] mc_greeny has joined the channel
[07:59] rook2pawn has joined the channel
[08:00] rook2pawn: if i have a child spawn is there  a way to set the handler on it before the spawn actually initiates?
[08:01] pyrotechnick: it wont do nething before the next tick
[08:01] pyrotechnick: its safe to attach after the spawn call
[08:02] jacter has joined the channel
[08:03] rook2pawn: oh ok. i just noticed a difference between typing in spawn('ls') and then typing the handler in (getting nothing) versus running node on a file that had all those instructions in one go
[08:03] Jaike has joined the channel
[08:05] rook2pawn: is there something special about running spawn in the node console and the process tick  versus executing a js file?
[08:05] pyrotechnick: not that i know of
[08:06] pyrotechnick: wait
[08:06] pyrotechnick: yeah
[08:06] pyrotechnick: there is
[08:06] pyrotechnick: by the time you're finished attaching the handler ls has streamed all of its data
[08:06] rook2pawn: yes, that is what i wanted to work around
[08:08] rook2pawn: maybe there is a way to control the tick
[08:08] eee_mk has joined the channel
[08:08] Wizek has joined the channel
[08:08] jacter1 has joined the channel
[08:09] wilken has joined the channel
[08:09] thalll has joined the channel
[08:13] SubStack: pyrotechnick: you sure it's a dnode bug?
[08:13] sherod has joined the channel
[08:14] djcoin: I was reading that : http://anders.janmyr.com/2011/05/not-very-short-introduction-to-nodejs.html
[08:14] djcoin: and saw: good pattern, make asynchronous works: dont forget to add a return in your callback function
[08:14] djcoin: To me it just useless no ?
[08:15] djcoin: If it reaches the end of the funciton it just returns as in any programming language
[08:15] djcoin: Fake advice
[08:17] pyrotechnick: SubStack: did you read?
[08:17] pyrotechnick: {handle: 'action', action: 'call_raise_all_in_fold'} is fine but {handle: 'action', action: 'call_raise_all_in_fold', data: null} fails, just having the data key makes dnode Uncaught Error: Uncaught, unspecified 'error' event.
[08:19] TomY_ has joined the channel
[08:20] ryah has joined the channel
[08:21] SubStack: pyrotechnick: I just threw some nulls into the unit tests and it works fine
[08:22] mscdex: any word on nodeconf videos?
[08:22] eldios has joined the channel
[08:23] jacter has joined the channel
[08:24] pyrotechnick: did u see where it was breaking?
[08:25] AsDfGh1231 has joined the channel
[08:26] SubStack: a key set to null, did that in the test and it passes just fine
[08:27] SubStack: can you .on('error', console.log) ?
[08:27] SubStack: on the server/client handle or conn object, I forget which
[08:28] jonathantaylor has joined the channel
[08:28] hybsch has joined the channel
[08:29] q_no has joined the channel
[08:29] coreb has joined the channel
[08:29] pyrotechnick: yeah i was wondering about that
[08:29] pyrotechnick: i have a break point finally catching it
[08:29] pyrotechnick: do you have skype or something
[08:29] jesusabdullah: pyrotechnick: Was that you that sassed the rails bitches?
[08:30] pyrotechnick: depends who's asking
[08:30] chapel: yeah it was him
[08:30] chapel: :)
[08:30] jesusabdullah: tsk tsk for shame!
[08:30] jesusabdullah: hehe
[08:30] SubStack: neg my internet is really shit right now
[08:30] pyrotechnick: grrr
[08:30] pyrotechnick: well
[08:30] pyrotechnick: ill show you
[08:31] indutny has joined the channel
[08:34] neurone-1337 has joined the channel
[08:35] markwubb_ has joined the channel
[08:36] jesusabdullah: pyrotechnick: Show what?
[08:36] jesusabdullah: heh
[08:38] rookandpawn has joined the channel
[08:41] rook2pawn has joined the channel
[08:44] saschagehlich has joined the channel
[08:44] Xano has joined the channel
[08:45] jacter1 has joined the channel
[08:46] mehlah has joined the channel
[08:46] jonathantaylor has joined the channel
[08:46] herbySk has joined the channel
[08:46] roidrage has joined the channel
[08:47] MikeMakesIt has joined the channel
[08:50] herbySk74 has joined the channel
[08:52] sh1mmer has joined the channel
[08:55] FireFly has joined the channel
[08:55] jacobolus has joined the channel
[09:00] drgnorq has joined the channel
[09:00] herbySk has joined the channel
[09:04] hybsch has joined the channel
[09:06] drgnorq: does anyone know good tutorials on using node.js and websockets?
[09:06] sjbreen has joined the channel
[09:07] dies_el has joined the channel
[09:08] firedfox has joined the channel
[09:09] justinTNT has joined the channel
[09:09] bencc has joined the channel
[09:09] viz has joined the channel
[09:11] Schmallon has joined the channel
[09:11] bzinger has joined the channel
[09:13] nyholt has joined the channel
[09:17] Marak: upboat for async.js? *ducks* http://news.ycombinator.com/item?id=2555779
[09:17] jeremyselier has joined the channel
[09:20] SeyZ has joined the channel
[09:21] chjj: hmm, writing a css selector engine was easier than i thought
[09:21] pyrotechnick: drgnorq: no tutes no but you may want to checkout socket.io or dnode
[09:21] pyrotechnick: chjj: what's wrong with sizzle :O
[09:21] `3rdEden: it's slow
[09:21] `3rdEden: ;D
[09:21] chjj: nothing that i know of
[09:21] `3rdEden: NWMATCHER FOR ZE WIN@
[09:22] `3rdEden: oh.
[09:22] eldios: css selector?
[09:22] chjj: i just want to write my own client side stuff
[09:22] chjj: because i like reinventing the wheel
[09:22] `3rdEden: suffering from NIH syndrom?
[09:22] chjj: hm?
[09:22] `3rdEden: http://en.wikipedia.org/wiki/Not_Invented_Here
[09:22] chjj: also
[09:23] hlindset has joined the channel
[09:23] chjj: i want to try to rewrite it parsing left to right, to see if i can make it efficient
[09:23] `3rdEden: Yes there is even a dedicated wiki page for that
[09:23] chjj: that would allow me to put the subject of the selector anywhere
[09:24] chjj: `3rdEden: i dont think so
[09:24] jeremyselier: hi guys, is there a way to set a timeout when fetching data with http.get ?
[09:24] justinTNT: anyone looked at petrify yet?
[09:25] Jaike has joined the channel
[09:27] Bj_o_rn has joined the channel
[09:27] chjj: jeremyselier: setTimeout(function() { req.destroy(); }, 5000);
[09:27] chjj: i think that will close the underlying socket
[09:27] chjj: not sure
[09:28] chjj: should
[09:29] zackattack has joined the channel
[09:29] markwubben has joined the channel
[09:29] zackattack has joined the channel
[09:30] Polysics has joined the channel
[09:30] Polysics: hello
[09:31] Polysics: i installed node.js from git, then isntalled npm
[09:31] Sami_ZzZ has joined the channel
[09:31] Polysics: but npm is installing my packages in the current directory
[09:31] Polysics: how do i tell nom where packeges go, please? and where do packages go? :-D
[09:31] JackeyChan has joined the channel
[09:31] Polysics: i instaled node in /opt7node
[09:32] JackeyChan: I am using express. In the client, how to post object like {name:"JackeyChan"} to the server ??
[09:32] JackeyChan: with ajax 
[09:34] jeremyselier: ok chjj, thanks, will try!
[09:35] justinTNT: poly : /usr/local/lib/node
[09:35] justinTNT: jackey: you mean push? or responding to a http request?
[09:35] medikoo has joined the channel
[09:35] Polysics: justinTNT, what do you mean, please?
[09:35] Polysics: i have node in the wrong place?
[09:36] JackeyChan: justinTNT: I am trying my thinking, thanks 
[09:36] Booster2ooo has joined the channel
[09:36] Booster2ooo: Hello
[09:36] jeremyselier: I have to try catch the destroy, but it works! thanks chjj 
[09:38] marknel has joined the channel
[09:38] Casperin has joined the channel
[09:38] sjbreen_ has joined the channel
[09:40] SamuraiJack has joined the channel
[09:41] flippyhead has joined the channel
[09:42] ntelford has joined the channel
[09:42] Polysics: i tried installing with -g switch but i still get module not found
[09:51] skyloid has joined the channel
[09:51] Polysics has joined the channel
[09:51] Polysics: hello again
[09:51] Polysics: haven't solved anything .-/
[09:51] Polysics: why is npm not installing packages in the proper place, please?
[09:53] bryanrieger has joined the channel
[09:53] coreb has joined the channel
[09:58] Esteb has joined the channel
[09:58] Polysics: i keep getting "cannot find module"
[09:58] Polysics: npm modules are there and installed with -g
[09:58] vlapan has joined the channel
[09:58] ixti has joined the channel
[09:59] chapel: you should be installing locally
[09:59] chapel: unless you are installing command line apps
[10:00] mikl has joined the channel
[10:01] snearch has joined the channel
[10:04] icebox has joined the channel
[10:05] TomY has joined the channel
[10:08] cognominal has joined the channel
[10:09] tmzt has joined the channel
[10:12] AsDfGh123 has joined the channel
[10:14] tmzt has joined the channel
[10:14] justinTNT has joined the channel
[10:14] Polysics: i am mostly doing command line stuff
[10:15] Maximosis has joined the channel
[10:15] mattijs has joined the channel
[10:17] Maximosis_ has joined the channel
[10:20] tmzt_ has joined the channel
[10:24] brsh has joined the channel
[10:30] MattJ has joined the channel
[10:30] roidrage has joined the channel
[10:30] roidrage_ has joined the channel
[10:31] BigWookie has joined the channel
[10:32] BigWookie: Hey , anyone knows a node module to create virtual hosts with reverse proxying?
[10:32] BigWookie: tried node-http-proxy but that dosn't route uri paths
[10:33] tmzt has joined the channel
[10:33] roidrage has joined the channel
[10:34] jayfresh has joined the channel
[10:35] k1ttty has joined the channel
[10:36] justinTNT: BW: node-vhost with node-http-proxy
[10:36] febits has joined the channel
[10:37] Xano has joined the channel
[10:38] bergie has joined the channel
[10:48] Rodtusker has joined the channel
[10:49] davidbanham has joined the channel
[10:49] thalll has joined the channel
[10:50] BigWookie: sounds good, is there information about node-vhost somewhere?
[10:50] deebo: mm nude vhost
[10:52] AAA_awright_ has joined the channel
[10:52] jonaslund_ has joined the channel
[10:52] mischief__ has joined the channel
[10:54] tobiassjosten has joined the channel
[11:00] mischief has joined the channel
[11:01] ewdafa has joined the channel
[11:01] grabarz has joined the channel
[11:05] tmzt has joined the channel
[11:06] justinTNT: sorry, distracted.
[11:06] justinTNT: um
[11:08] justinTNT: it's baked into express : something like app.use(express.vhost('domainname', app)
[11:09] justinTNT: https://gist.github.com/750032
[11:09] febits[0] has joined the channel
[11:10] tmzt has joined the channel
[11:13] TomY_ has joined the channel
[11:14] febits has joined the channel
[11:15] jet18 has joined the channel
[11:15] davidbanham has joined the channel
[11:16] avalanche123 has joined the channel
[11:16] phiggins has joined the channel
[11:19] fangel has joined the channel
[11:20] ewdafa has joined the channel
[11:20] lupomontero has joined the channel
[11:20] wilken has joined the channel
[11:22] fangel has joined the channel
[11:23] tmzt has joined the channel
[11:25] ixti has joined the channel
[11:26] ewdafa has joined the channel
[11:28] skeevis has joined the channel
[11:29] gmci has joined the channel
[11:29] saschagehlich has joined the channel
[11:32] grabarz has joined the channel
[11:33] pietern has joined the channel
[11:33] davidbanham has joined the channel
[11:33] BogdanD has joined the channel
[11:34] BogdanD has left the channel
[11:34] ewdafa has joined the channel
[11:38] christophsturm has joined the channel
[11:39] liar has joined the channel
[11:39] FireFly|n900 has joined the channel
[11:39] lukegalea has joined the channel
[11:41] fairwinds has joined the channel
[11:41] Xano has joined the channel
[11:42] unomi has joined the channel
[11:43] ChrisPartridge has joined the channel
[11:44] drgnorq has joined the channel
[11:45] Booster2ooo: I'm a big noob in JS & nodejs and I see this in a src: var irc = exports;  Can anyone tell me where it comes from ? Because I don't see it in the doc
[11:46] Epeli: it? exports?
[11:47] niftylettuce has joined the channel
[11:48] Booster2ooo: Epeli > yes
[11:48] Booster2ooo: Is it JS related or node related?
[11:48] Epeli: exports variable is in every module (.js file) from which you can publish your functions/objects
[11:48] Epeli: node related
[11:48] Poetro has joined the channel
[11:49] Booster2ooo: Ok, I'm gonna ask Google, thank yuo
[11:49] Booster2ooo: you*
[11:49] Epeli: I think it originates from CommonJS spec http://wiki.commonjs.org/wiki/Modules/1.1
[11:49] z8000 has joined the channel
[11:50] hij1nx has joined the channel
[11:51] mobius_ has joined the channel
[11:52] Booster2ooo: Epeli > thx, I'm gonna read it
[11:52] mobius_: hello everyone. I am new with node.js and I've been playing with the webworkers module, but I keep getting an error "TypeError: undefined is not a function". Has anyone seen this before?
[11:53] `3rdEden: than it's probably undefined and not a function that you are calling ;D?
[11:53] tiagoa has joined the channel
[11:54] mobius_: well, it looks like so, however what I am getting it even on the prefork example of the webworkers module
[11:54] mobius_: which kinda complicates things a bit
[11:55] AddZero has joined the channel
[11:56] ezl has joined the channel
[11:58] jbpros has joined the channel
[11:59] jonaslund: what's the best text based irc client for *nix derivates these days
[11:59] Xano has joined the channel
[12:04] tisba has joined the channel
[12:05] dnolen has joined the channel
[12:05] poincare101 has joined the channel
[12:06] ntelford has joined the channel
[12:07] Mrfloyd has joined the channel
[12:07] stepheneb has joined the channel
[12:09] drudge- has joined the channel
[12:09] markeeto has joined the channel
[12:12] SamuraiJack has joined the channel
[12:14] bryanrieger has left the channel
[12:17] bencc has left the channel
[12:18] tiemonster has joined the channel
[12:20] gtramont1na has joined the channel
[12:21] dyer has joined the channel
[12:22] temp01 has joined the channel
[12:27] neoesque has joined the channel
[12:28] fumanchu182 has joined the channel
[12:29] jeremyselier has joined the channel
[12:29] MikeMakesIt has joined the channel
[12:29] liquidproof has joined the channel
[12:33] jlecker has joined the channel
[12:34] bshumate has joined the channel
[12:34] bshumate has joined the channel
[12:35] kriszyp has joined the channel
[12:36] Squeese has joined the channel
[12:36] mw has joined the channel
[12:36] mw has joined the channel
[12:36] saschagehlich has joined the channel
[12:37] Guest75743 has joined the channel
[12:38] hebz0rl has joined the channel
[12:38] tmzt has joined the channel
[12:39] EM03 has joined the channel
[12:39] EM03: the express web framework is rather intersting 
[12:40] temp01 has joined the channel
[12:40] openpercept has joined the channel
[12:40] FireFly|n900 has joined the channel
[12:41] mike5w3c has joined the channel
[12:41] VovaZaycev has joined the channel
[12:45] hebz0rl has joined the channel
[12:46] exstrudel has joined the channel
[12:46] brolin has joined the channel
[12:46] Booster2ooo: I've got an other question: I can't find the sys module doc on the 0.4.7 doc but util seems quite similar, is util the new sys ? And if so, is the util.log the new sys.put ?
[12:46] drudge: yes
[12:47] fermion has joined the channel
[12:47] Booster2ooo: drudge> thanks
[12:49] EM03: anyone else here bothered by the fact js has no hashes?
[12:51] indutny has joined the channel
[12:51] `3rdEden: you mean object EM03
[12:51] broofa has joined the channel
[12:52] EM03: ?
[12:52] EM03: I'm no js guru but I don't see hashes or associative arrays however you want to call them
[12:54] christophsturm: EM03: every object is a hash
[12:55] EM03: hmmmm
[12:55] TomY has joined the channel
[12:55] EM03: can i have a 1 to 1 relationship easily with my data?
[12:55] christophsturm: var a={'bleh':'heh'};
[12:56] F1nnur has joined the channel
[12:56] zackattack has joined the channel
[12:57] davidbanham has joined the channel
[13:00] AaronMT has joined the channel
[13:00] thomblake has joined the channel
[13:01] rfay has joined the channel
[13:02] EM03: christophsturm: thats legal?
[13:02] christophsturm: yeah
[13:03] EM03: what is that called in javascript?
[13:03] EM03: cause a google for hash or associate array did not help at all 
[13:03] johnnywengluu: hi
[13:04] johnnywengluu: is https://github.com/LearnBoost/soda using selenium 2 or 1?
[13:05] boaz has joined the channel
[13:06] johnnywengluu: 1 
[13:06] christophsturm: EM03: that's an object. an object can have properties. so it acts like a hash
[13:07] EM03: how do you access something out of it?
[13:07] christophsturm: a['blah'] => 'heh'
[13:07] roidrage has joined the channel
[13:08] amacleod has joined the channel
[13:08] christophsturm: EM03: go read some javascript code or a tutorial
[13:08] `3rdEden: v8: var a = {foo:'bar'}; a.foo;
[13:08] v8bot: `3rdEden: "bar"
[13:09] EM03: christophsturm: I'm really not dumb :) just crazy a simple google hash search i couldn't find that
[13:09] `3rdEden: it's because its not called a hash
[13:09] `3rdEden: it's like searching for prototypical inhertance for php
[13:10] dyer has joined the channel
[13:11] BigWookie: join #ubuntu-de
[13:12] taf2: node.js just really helped me out... i had to copy files from an ftp site to an s3 account... and with the help of node-ftp and knox this is so far crazy easy
[13:12] eb4890 has joined the channel
[13:13] davidsklar has joined the channel
[13:13] taf2: crazy the node.js process is humming along at 5% cpu because i decided to have a little progress output to console and staying strong at 22Mb of memory
[13:15] gavin_huang has joined the channel
[13:15] grabarz has left the channel
[13:16] grabarz has joined the channel
[13:16] emattias_ has joined the channel
[13:17] Aikar: :D i got google Traceur working as a module. https://github.com/aikar/traceur (testtraceur.js and test.js)
[13:18] tmzt has joined the channel
[13:18] Aikar: https://github.com/aikar/traceur/blob/master/testtraceur.js
[13:18] temp01 has joined the channel
[13:19] TomY has joined the channel
[13:19] A83 has joined the channel
[13:20] `3rdEden: +watch! :D
[13:20] Aikar: npm install traceur if ya wanna use it, gotta update docs/legal/test etc (its MIT) still
[13:20] olalonde: you guys saw this? http://bellard.org/jslinux/
[13:20] `3rdEden: yup
[13:20] A83: Which is the best OAuth package for express/connect?
[13:21] ewdafa has joined the channel
[13:21] Aikar: A83: OAuth2 is so trivial, if none exists you should just roll your own. the client code def does not need a premade client
[13:22] taf2: olalonde, wow, that could actually my google chrome book useful
[13:22] olalonde: nice call :)
[13:22] A83: Aikar: Ok, I should read up on OAuth2 then...
[13:23] olalonde: I recently used `npm install oauth` for a client, worked like a charm
[13:23] taf2: it's missing node.js though :(
[13:23] olalonde: not with express though
[13:23] Aikar: A83: OAuth2 is simply understanding the flowpath of OAuth2, and knowing what parameters to pass. they are simple web requests now. no crypography crap
[13:24] catshirt has joined the channel
[13:25] sub_pop has joined the channel
[13:26] MattJ100 has joined the channel
[13:26] `3rdEden: rm -rf 'ing the jslinux
[13:27] taf2: evil
[13:27] vuliev:  /win 25
[13:28] Aikar: zomg rm -rf / destroyed my OS in jslinux!
[13:29] olalonde: lol
[13:29] olalonde: I wonder if the code would run in Node.js
[13:29] olalonde: with the right packages
[13:30] Aikar: :(){ :|: & };: didnt work ;(
[13:31] vipaca has joined the channel
[13:31] vipaca has joined the channel
[13:31] Ian_Corne: it's not bash Aikar 
[13:31] Ian_Corne: :p
[13:31] Ian_Corne: it's a very basic shell
[13:31] lstoll has joined the channel
[13:32] bingomanatee: rm -rf / is the ultimate cheat code
[13:32] chalaschek has joined the channel
[13:33] jacter has joined the channel
[13:33] marknel has joined the channel
[13:33] tmzt has joined the channel
[13:34] fumanchu182 has joined the channel
[13:35] truedat101 has joined the channel
[13:36] unomi has joined the channel
[13:39] Rodtusker has joined the channel
[13:40] bergie has joined the channel
[13:40] grabarz has joined the channel
[13:41] temp01 has joined the channel
[13:41] kjy112 has joined the channel
[13:42] timmywil has joined the channel
[13:43] ngs has joined the channel
[13:45] tmzt has joined the channel
[13:45] jet18 has joined the channel
[13:46] telemachus: Aikar: maybe that's why my jslinux is stuck here: Freeing unused kernel memory: 124k freed
[13:46] telemachus: You sure you didn't rm -rf / mine?
[13:46] Aikar: 3~lol
[13:46] Aikar: im in ur browzers rm -rf/ing your jslunix
[13:46] Aikar: ur*
[13:47] telemachus: Aikar: Did you just seriously s/your/ur/?
[13:47] telemachus: That's it folks, pack it up. Civilization's over. We're toast.
[13:47] telemachus: Thanks for playing.
[13:47] Aikar: telemachus: i was lolzspeaking, it was suppose to be ur
[13:47] Xano has joined the channel
[13:47] telemachus: Aikar: I know. Was kidding. Irony. (Not funny or anything, just saying...)
[13:47] Aikar: ;p
[13:47] XaKBooT has joined the channel
[13:49] colinclark has joined the channel
[13:49] Aikar: welp now im switching to Traceur i gotta figure out a way to do nice autoloading of classes ;(
[13:49] Aikar: considering using Joose with Closure but having class Foo { and Class('Foo', { seems confusing
[13:49] Aikar: with Traceur*
[13:50] Insanity5902 has joined the channel
[13:50] slyphon has joined the channel
[13:50] davidwalsh_ has joined the channel
[13:50] Booster2ooo: I've got a problem with the net module and I don't understand where is comes from. Could you have a look at my code and tell me what's wrong please ? http://pastebin.com/uQ8KjUz5
[13:51] Booster2ooo: I know it's crap but it's only my first node app & one of my first js scripts
[13:51] Aikar: i wonder if you can set an Interceptor on the global object and catch references to non existant variables
[13:51] Booster2ooo: I didn't even use objects & prototypes
[13:52] Aikar: Booster2ooo: not everything needs to be OO
[13:52] Aikar: use it appropriately ;)
[13:52] Aikar: but an IRC client is something that can be cleaner in OO (object per connection/channel/user etc)
[13:53] Booster2ooo: Yea, as it's a first test, I thought I didn't need to use objects
[13:53] Booster2ooo: I just wanted to understand the basics of the modules I used
[13:53] Booster2ooo: and then recode the whole thing using OO programing
[13:53] Aikar: looks like your on the right path
[13:54] Aikar: just dont forget to handle ping pongs
[13:54] Aikar: there are a few IRC clients already written if you wanna use them for inspiration
[13:55] willwhite has joined the channel
[13:55] Aikar: ACTION inb4 someone saying just use one already written
[13:56] d0k has joined the channel
[13:56] Booster2ooo: Aikar > I found some but none working properly, probably because they were written for earlier version of node, idk. 
[13:56] Aikar: Booster2ooo: thoug, now i just saw the error message up top, you really should install Ubuntu along side windows, and do dev there. cygwin is not recommended
[13:56] Swimming_bird has joined the channel
[13:56] tisba has joined the channel
[13:56] Booster2ooo: For this code, I took nodelog (felixge) for example
[13:56] rfay has joined the channel
[13:57] Booster2ooo: Aikar > I've got the same error under debian
[13:57] Booster2ooo: I just pasted from win because I was easier for me ^^
[13:57] Aikar: i didnt say it would fix the error, just saying windows is bad :P
[13:57] eee_mk has joined the channel
[13:58] pandeiro has joined the channel
[13:58] Booster2ooo: http://imageshack.us/m/17/8725/errscr.jpg
[13:58] pandeiro has joined the channel
[13:58] dcampano has joined the channel
[13:59] Aikar: anyone from UK ? need to test GeoIP lookup code lol and need a UK ip
[13:59] Booster2ooo: It's the exact same error ^^
[13:59] Booster2ooo: Use a public UK proxy?
[13:59] timmywil has joined the channel
[14:00] Aikar: Booster2ooo: need to just use a special method to fake IP, as its accessing an internal network environment :P
[14:00] Booster2ooo: ok ^^
[14:00] Jalava: hmm, is there bug with pre tag in jade, it doesn't allow arbitary identation?
[14:01] Jalava: or do I need to mark the pre section additioanlly with some special tags?
[14:04] coreb has joined the channel
[14:07] jtsnow has joined the channel
[14:08] avalanche123 has joined the channel
[14:08] jeff_horton has joined the channel
[14:08] marlun has joined the channel
[14:12] Xano has joined the channel
[14:12] baudehlo: chapel: fwiw that patch applies cleanly on 0.4.7 too.
[14:12] brianc has joined the channel
[14:14] stepheneb has joined the channel
[14:14] syskk has joined the channel
[14:15] jtsnow has joined the channel
[14:15] montylounge has joined the channel
[14:15] skamikaze has joined the channel
[14:15] cbibler has joined the channel
[14:16] catshirt has joined the channel
[14:17] temp01 has joined the channel
[14:17] yhahn has joined the channel
[14:17] bronson has joined the channel
[14:18] CoinOpeBoy has joined the channel
[14:18] Booster2ooo: I found my mistake, createConnection(host, port) instead of port, host :)
[14:19] bronson: Anyone know of something like Rails Admin but for Node?
[14:19] skamikaze has left the channel
[14:19] Booster2ooo: it works :D
[14:19] Booster2ooo: *happy*
[14:20] bronson: Just want something to generate forms based on DB schema...  doesn't mater at all how it looks.
[14:25] tmzt has joined the channel
[14:25] nibblebot has joined the channel
[14:26] Yuffster has joined the channel
[14:26] Ori_P has joined the channel
[14:28] Corren has joined the channel
[14:29] Skola: can I use a function argument (a string) as a key inside the same function?
[14:29] eyesUnclouded has joined the channel
[14:29] systemfault: Skola: Not sure I understand the question.
[14:30] Skola: if I do foo (bar) { x.somefunction({bar : 123}) }
[14:30] context: as a key for an object ?
[14:30] context: var x; x[bar] = 123; return x;
[14:30] context: err. var x = {};
[14:30] pifantastic has joined the channel
[14:31] dies-el has joined the channel
[14:31] Skola: but would it work as in foo (bar) { var x = {}; x[bar] = 123; return "whatever" }
[14:32] Skola: wait I will paste it somewhere
[14:32] davidwalsh_ has joined the channel
[14:33] sonnym1 has joined the channel
[14:34] Viriix has joined the channel
[14:35] Skola: http://hpaste.org/46755/
[14:35] Skola: It breaks on the ({property : ..... part
[14:36] Skola: because I'm probably doing it wrong
[14:36] F1nnur: function () [
[14:36] bentruyman has joined the channel
[14:36] F1nnur: function () {
[14:36] Skola: sorry typo
[14:36] Skola: just retyped it from CoffeeScript
[14:37] Skola: that typo wasn't in the original, so it wasn't that
[14:37] systemfault: :( Perhaps you should learn JS before coffescript (Opinion)
[14:37] tokumine has joined the channel
[14:37] thalll has joined the channel
[14:37] edude03 has joined the channel
[14:37] Skola: do you know what the problem is though?
[14:38] Aikar: can anyone explain how this syntax works? var foo = ('global', eval)('this');
[14:38] Aikar: google used it in traceur
[14:38] Skola: because you seem to imply it's a beginners mistake
[14:38] Skola: which it probably is
[14:38] Skola: but if so, please be so kind as to help me : ))
[14:39] Skola: and I retyped it so people not familiar with CS could read it
[14:42] ryanfitz has joined the channel
[14:43] __tosh has joined the channel
[14:47] patcoll has joined the channel
[14:47] arian___ has joined the channel
[14:47] BillyBreen has joined the channel
[14:47] rgabo has joined the channel
[14:48] flippyhead has joined the channel
[14:49] taf2: Aikar, hrm... if you figure it out that would be great :)
[14:50] uchuff has joined the channel
[14:50] emattias has joined the channel
[14:50] montylounge has joined the channel
[14:50] mynyml has joined the channel
[14:52] strmpnk has joined the channel
[14:52] jxck has joined the channel
[14:54] tmzt has joined the channel
[14:54] Xano has joined the channel
[14:55] Aikar: taf2: if your in #javascript read the chat log
[14:55] Aikar: someones explaining it there
[14:55] taf2: Aikar, shoot i missed it
[14:55] insin has joined the channel
[14:56] sub_pop has joined the channel
[14:56] aho has joined the channel
[14:59] hunterloftis has joined the channel
[14:59] acd123 has joined the channel
[14:59] hunterloftis: node hosting. amazon. thoughts, experiences?
[15:00] aconbere has joined the channel
[15:01] acd123: i'm having a hard time getting node to timeout idle HTTPS connection and my google search terms are failing me
[15:01] acd123: can anyone point me in the right direction?
[15:01] hunterloftis: acd123 - are you using Connect? Connect-timeout has worked well for us
[15:01] acd123: thus far I've only been using the https lib that comes with node
[15:02] kkaefer: when using expresso for testing, what's the preferred way to make expresso exit despite an open database connection?
[15:02] acd123: maybe i can figure out what connect does to set a timeout though
[15:03] hunterloftis: acd123 - it's probably just a setTimeout ;)
[15:03] dmcquay has joined the channel
[15:04] jakehow has joined the channel
[15:05] kkaefer: ...or to see at all what keeps expresso from exiting
[15:06] acd123: hunterlofits: this Connect-timeout that you mentioned, is it part of Connect?
[15:07] pietern has joined the channel
[15:09] hunterloftis: acd123: It's just connect middleware
[15:10] aliem has joined the channel
[15:12] pifantastic has joined the channel
[15:12] acd123: hunterloftis: do you have a URL you could point me to?  thx.
[15:12] truedat101 has joined the channel
[15:13] Me1000 has joined the channel
[15:13] Me1000 has joined the channel
[15:13] deedubs has joined the channel
[15:14] hunterloftis: acd123: it's surprisingly hard to find, 1 sec...
[15:14] softdrink has joined the channel
[15:14] acd123: heh i think i got it
[15:14] acd123: node, connect, and timeout are all relatively common words ;)
[15:14] Bj_o_rn has joined the channel
[15:15] hunterloftis: it's in npm as 'connect-timeout@0.0.1   =aaron =rauchg latest remote   Adds timeouts to connect' <-- might be easier to just pull that
[15:15] acd123: thanks
[15:17] briznad has joined the channel
[15:19] mbrevoort has joined the channel
[15:19] dmcquay_ has joined the channel
[15:20] newy has joined the channel
[15:20] coreb1 has joined the channel
[15:20] tbranyen: any node.js mailing list moderators in here
[15:21] aconbere has joined the channel
[15:21] jtsnow has joined the channel
[15:22] w_wilkins has joined the channel
[15:23] philtor has joined the channel
[15:24] Renegade001 has joined the channel
[15:26] Guest75743 has joined the channel
[15:28] lukstr has joined the channel
[15:28] teemow has joined the channel
[15:29] alex_b has joined the channel
[15:30] zomgbie has joined the channel
[15:30] MooGoo has joined the channel
[15:30] MooGoo: allo
[15:31] MooGoo: how do you access the scope chain object in v8?
[15:32] Samot has joined the channel
[15:35] trcarden has joined the channel
[15:36] matjas has joined the channel
[15:36] harth has joined the channel
[15:38] langworthy has joined the channel
[15:38] Venom_X has joined the channel
[15:39] Rodtusker has joined the channel
[15:39] tarrant has joined the channel
[15:40] EvanCarroll: http://opensourceuniverse.tradepub.com/free/w_make33/prgm.cgi
[15:41] EvanCarroll: lawl. oh Linkedin spammers
[15:41] adambeynon has joined the channel
[15:42] tarrant has left the channel
[15:42] snearch has joined the channel
[15:42] yhahn has joined the channel
[15:43] swick has joined the channel
[15:44] matjas has joined the channel
[15:47] sirganya has joined the channel
[15:47] liquidproof has joined the channel
[15:47] olauzon has joined the channel
[15:47] sirganya: what headers/encoding do I use to trigger a download of a csv file? thanks
[15:48] bene has joined the channel
[15:50] baudehlo: Content-Disposition: attachment; filename=blah.csv
[15:50] Me1000 has joined the channel
[15:50] sorens3n has joined the channel
[15:51] Qbix1 has joined the channel
[15:51] sirganya: baudehlo: thanks, and utf8 for encoding?
[15:51] Qbix1: hey anyone here have this:
[15:51] Qbix1: facebook-graph-client
[15:52] baudehlo: sirganya: Content-Type: text/csv; charset="utf-8"
[15:53] chrislorenz has joined the channel
[15:55] Yuffster_work has joined the channel
[15:55] SamuraiJack has joined the channel
[15:56] indutny has joined the channel
[15:56] jxck has joined the channel
[15:56] aberry has joined the channel
[15:57] marknel has joined the channel
[15:57] jano has joined the channel
[15:57] bzinger has joined the channel
[15:59] m64253 has joined the channel
[15:59] donaldpcook has joined the channel
[16:00] ian-london has joined the channel
[16:01] mahna has joined the channel
[16:03] rauchg_ has joined the channel
[16:05] V1 has joined the channel
[16:05] Booster2ooo: Does anybody use Nodester ? Because I created an account some days ago but the serv seems down already
[16:05] Booster2ooo: I wanted to know if they were stable or often down
[16:08] namelessnotion_ has joined the channel
[16:08] k1ttty has joined the channel
[16:08] aheckmann has joined the channel
[16:10] Qbix1: anyone?
[16:10] Qbix1: facebook-graph-client
[16:10] Qbix1: who knows it
[16:10] trcarden has joined the channel
[16:10] eyesUnclouded has joined the channel
[16:10] Xano has joined the channel
[16:10] Casperin has joined the channel
[16:12] eldios: WOOO OOO!!! FREEDOM!! I finally finished reading through the whole EloquentJavascript book!
[16:12] eldios: \o/
[16:12] eldios: ACTION runs naked around the chan
[16:12] yhahn has joined the channel
[16:12] Samot: ACTION slaps eldios ass
[16:12] eldios: ACTION sing at the slapping rhythm
[16:12] puffpio has joined the channel
[16:13] bulatshakirzyano has joined the channel
[16:13] niftylettuce has joined the channel
[16:14] jeff_horton has joined the channel
[16:14] marknel has joined the channel
[16:14] donaldpcook has joined the channel
[16:15] beriberikix_ has joined the channel
[16:16] loob2 has joined the channel
[16:16] eyesUnclouded has joined the channel
[16:16] mahna: Anybody have trouble building 0.4.7 on osx when specifying a custom prefix?
[16:16] context: works fine here with homebrew
[16:16] ryanfitz has joined the channel
[16:17] rgabo: worked for me as well, needed brew link icu4c
[16:17] mahna: Specifically, mid-way through the build the process stops calling /usr/bin/gcc and tries to call /Users/me/mydirgcc, resulting in "No such file."
[16:17] eyesUnclouded has joined the channel
[16:18] rgabo: sorry ,wrong chanenl
[16:18] mahna: On 50/75. Up to that point it found gcc just fine, then it suddenly started looking for gcc in my custom install dir.
[16:18] postwait has joined the channel
[16:18] norviller has joined the channel
[16:18] saschagehlich has joined the channel
[16:19] mahna: I'm following my usual install process that worked fine up until 0.4.2, IIRC.
[16:20] liar has joined the channel
[16:20] brettgoulder has joined the channel
[16:21] sreuter: So, 24 hours later… I think i can give it another shot :-) Anybody using node-crypto to successfully decipher binary streams?
[16:21] BigWookie has left the channel
[16:21] sreuter: http://groups.google.com/group/nodejs/browse_thread/thread/a1cac854f7ff319a
[16:23] ryah has joined the channel
[16:23] seivan has joined the channel
[16:23] jamesarosen has joined the channel
[16:24] FireFly has joined the channel
[16:24] FireFly has joined the channel
[16:24] reiddraper has left the channel
[16:25] steph021 has joined the channel
[16:25] pifantastic has joined the channel
[16:27] webb has joined the channel
[16:27] FireFly|n900 has joined the channel
[16:27] mahna: https://gist.github.com/976792
[16:28] beldur has joined the channel
[16:28] tjholowaychuk has joined the channel
[16:28] jerry_ has joined the channel
[16:29] jeff_horton has joined the channel
[16:29] mahna: It's building fine, then starts looking for gcc in my custom location.
[16:30] mahna: Strange
[16:30] amerine has joined the channel
[16:30] rgabo has left the channel
[16:30] sreuter: mahana: it looks like you tried something else before that forces the build process to prepend your custom location to gcc. any environment variables set? did you try to relogin or  "make clean"?!
[16:32] Renegade001 has joined the channel
[16:32] ezl has joined the channel
[16:32] TooTallNate has joined the channel
[16:33] Renegade001 has joined the channel
[16:34] mahna: sreuter: This was a fresh install (purged all previous), but just tried again with 'make distclean' first and got the same result--it starts looking for gcc in the wrong place at 50/75.
[16:35] jonathantaylor has joined the channel
[16:35] gazumps has joined the channel
[16:35] uchuff has joined the channel
[16:35] sreuter: ahkey, so after there were already plenty of code compiled using /usr/bin/gcc? weird..
[16:35] SamuraiJack has joined the channel
[16:36] sreuter: does it build successfully if you dont use —prefix ? 
[16:36] cm: I'm getting the following error when trying to install npm: http://pastebin.com/kzsiRXy2
[16:37] cm: I have installed node and can access it using "node"
[16:37] mahna: sreuter: I'll try (I didn't want to have to clean it up afterwards ;).
[16:38] Qbix1: how do I upgrade node using npm?
[16:38] Qbix1: is it possible?
[16:38] Qbix1: how do I upgrade node to 0.4.7
[16:38] Qbix1: or whatever
[16:39] sreuter: cm: "Note that running as sudo can change envs." <- As you can see in the last line, there is only /usr/bin:/bin in your PATH. I believe your node binary is in /usr/local/bin or similar. :-)
[16:39] cm: oh, okay
[16:39] colinclark has joined the channel
[16:39] Qbix1: ah, npm install n
[16:39] sreuter: mahna: just dont do "make install" after the "make" :-)
[16:40] Qbix1: guys, I have a "socket hang up" error
[16:40] Qbix1: when trying to access facebook rest api
[16:40] Qbix1: I didn't have it before
[16:40] mahna: sreuter: Good idea.
[16:41] skeevis has joined the channel
[16:41] caolanm has joined the channel
[16:41] Corren has joined the channel
[16:42] jscheel has joined the channel
[16:43] xeodox has joined the channel
[16:43] towski has joined the channel
[16:43] kmwallio has joined the channel
[16:45] Renegade001 has joined the channel
[16:45] SamuraiJack has joined the channel
[16:46] jscheel: howdy guys! I am pinging an api that is returning pdfs as base64-encoded strings. I need to return these as pdfs to the browser, but I'm not quite sure how to write this to the response appropriately.
[16:47] SubStack: res.write(new Buffer(pdf64String, 'base64'))
[16:48] tiagoa has joined the channel
[16:48] Renegade001 has joined the channel
[16:48] TooTallNate has joined the channel
[16:49] springmeyer has joined the channel
[16:49] jscheel: SubStack: aaah, thanks!
[16:49] mahna: sreuter: All better now. Before starting my reinstall I had set the PREFIX environment variable, which I guess was the old way of doing things. I see now that was wrong. ;)
[16:50] ryan0x2 has joined the channel
[16:50] mahna: Starting a fresh console session and only setting the prefix option, instead of both (despite the fact they both pointed to the same location), was the way to go.
[16:51] Opaque has joined the channel
[16:51] LowValueTarget has joined the channel
[16:51] mahna: sreuter: Thanks for your help.
[16:52] stephank has joined the channel
[16:53] davidascher has joined the channel
[16:53] x_or has joined the channel
[16:53] sreuter: sreuter; you're welcome ;-)
[16:54] sreuter: oooops… s/sreuter/mahna/g :-)
[16:56] bluekite2000_ has joined the channel
[16:57] mcantelon has joined the channel
[16:57] akshat[remote] has joined the channel
[16:59] bene has joined the channel
[16:59] puffpio has joined the channel
[17:00] Nican has joined the channel
[17:00] dilvie has joined the channel
[17:00] zeade has joined the channel
[17:00] yhahn has joined the channel
[17:01] nadirvardar has joined the channel
[17:02] webb has left the channel
[17:02] tdegrunt has joined the channel
[17:03] xtianw has joined the channel
[17:03] akshat[remote]: where do i ask questions about npm?
[17:04] boaz has joined the channel
[17:04] bentruyman has joined the channel
[17:04] ardcore has joined the channel
[17:04] bartt has joined the channel
[17:05] ardcore has left the channel
[17:07] dilvie: somebody here might be able to answer those.
[17:08] nrajlich has joined the channel
[17:09] atsuya has joined the channel
[17:11] drudge: tjholowaychuk: was there an html2jade converter? thought i remember seeing one
[17:11] lupomontero has joined the channel
[17:11] TooTallNate has joined the channel
[17:11] tjholowaychuk: drudge: yup
[17:12] tjholowaychuk: https://github.com/donpark/html2jade
[17:12] binarypie has joined the channel
[17:12] markbao has joined the channel
[17:12] drudge: thanks man
[17:12] lukegalea: tjholowaychuk, drudge: it "mostly" works :)
[17:12] tjholowaychuk: haven't tried it
[17:12] lukegalea: I just tried it a couple of days ago
[17:12] lukegalea: t
[17:12] thalll has joined the channel
[17:13] lukegalea: to convert a big email template. It was great but it totally messed up on embedded script tag contents.
[17:13] lukegalea: (which you would only see in an email template)...
[17:13] lukegalea: but I think for a normal ejs template or html it would be fine.
[17:14] drudge: these pages are pretty simple, i'm just lazy :P
[17:14] q_no has joined the channel
[17:14] TooTallNate has joined the channel
[17:15] perezd has joined the channel
[17:15] dguttman has joined the channel
[17:16] dguttman has joined the channel
[17:16] lupomont_ has joined the channel
[17:16] kmiyashiro has joined the channel
[17:17] sreuter: SubStack: you just made my day!
[17:17] SubStack: did I‽
[17:19] sreuter: yes you did. i don't know if you followed my problem with the decoding of a binary stream using node-crypto… http://groups.google.com/group/nodejs/browse_thread/thread/a1cac854f7ff319a ...
[17:19] drudge: lukegalea/ tjholowaychuk: worked great. Only thing is i like : rather than = for my attrs
[17:19] tjholowaychuk: drudge: cool cool
[17:20] sreuter: wrapping a "new Buffer()" around the decoded chunk fixed it! Like: if(!res.write(new Buffer(decipher.update(chunk), 'binary'))) { S3_response.pause() } ;
[17:20] lukegalea: drudge: me too.. But I'm also lazy.
[17:20] cognominal: in child_process.js, setupChannel uses ascii as encoding, why not utf8?
[17:20] lukegalea: I'm just living with it ;)
[17:20] yozgrahame has joined the channel
[17:21] sreuter: SubStack: thanks a lot! :-)
[17:22] Renegade001 has joined the channel
[17:22] nrajlich has joined the channel
[17:24] TooTallNate has joined the channel
[17:24] viz has joined the channel
[17:24] swick has left the channel
[17:25] ryah has joined the channel
[17:25] sreuter: SubStack: I'm still wondering if this should actually be necessary. (beside the fact that id doesn't work without it :-) )
[17:25] markbao- has joined the channel
[17:26] zcopley has left the channel
[17:26] TooTallNate has joined the channel
[17:27] zcopley has joined the channel
[17:27] rfay has joined the channel
[17:29] zeade has joined the channel
[17:30] uchuff has joined the channel
[17:30] rauchg has joined the channel
[17:30] tilgovi has joined the channel
[17:30] tilgovi has joined the channel
[17:30] openpercept has joined the channel
[17:31] ruquay has joined the channel
[17:31] uchuff has joined the channel
[17:32] m64253_ has joined the channel
[17:33] nrajlich has joined the channel
[17:33] udp has joined the channel
[17:34] broofa has joined the channel
[17:35] ian-london has joined the channel
[17:35] c4milo: hello, who is using SSL in production? 
[17:35] Postmodernist has joined the channel
[17:35] ryah: c4milo: mjr_ is
[17:35] mjr_: c4milo: oh yes
[17:35] tjholowaychuk: we are as well
[17:36] ryah: it's buggy still
[17:36] fakewaffle: anyone here is dvorak?
[17:36] fakewaffle: use* :(
[17:36] ryah: getting better though
[17:36] c4milo: ryah: do we know the scenarios where it's still buggy? 
[17:36] ian-london has left the channel
[17:37] ryah: c4milo: there is a very difficult to reproduce problem which can be seen under very heavy load
[17:37] ian-london has joined the channel
[17:37] ryah: sockets get forgotten, somehow
[17:38] c4milo: ryah: got it, my intended use is for a rest api that also has streaming support 
[17:38] ryah: c4milo: use it
[17:38] c4milo: ryah: I'll give it a try then 
[17:38] c4milo: ryah: thanks 
[17:38] ryah: let me know if you get bugs
[17:40] rook2pawn has joined the channel
[17:40] samsonjs has joined the channel
[17:42] bluekite2000_ has joined the channel
[17:42] Country has joined the channel
[17:43] gwm has joined the channel
[17:43] wao: xhr for the world
[17:43] truedat101 has joined the channel
[17:43] wao: anyway, is planned to turn on sockets in firefox later by default?
[17:43] tbranyen: probably
[17:44] tbranyen: i don't know why they would keep them disabled by default forever, that would be silly
[17:44] tbranyen: wao: they are already enabled by default in mobile firefox
[17:44] cognominal: ryah, in child_process.js, setupChannel uses ascii as encoding, why not utf8?
[17:44] ryah: why utf8?
[17:44] Aikar: cognominal: he just responded to the commit about that
[17:45] cognominal: in Europe, we use plenty of characters that don't fit in ascii
[17:45] ryah: this is an american project
[17:45] Aikar: lolz
[17:45] ryah: so... sorry
[17:46] tjholowaychuk: america fuck yeah
[17:46] MooGoo: yea fuck those off brand characters
[17:46] Bonuspunkt: ^^ <3
[17:46] MooGoo: just makes everything more difficult
[17:46] ryah: cognominal: json is ascii
[17:46] Pilate: if its not matched by \w its not real
[17:47] ryah: cognominal: high-valued characters are encoded like this "\u1234"
[17:47] brolin has joined the channel
[17:47] cognominal: thx, I did not know.
[17:47] MooGoo: you guys in eurpoe should just all learn to speak english
[17:47] MooGoo: same goes for the rest of the world
[17:48] Bonuspunkt: v8: JSON.stringify('◎н ґεαʟł⑂')
[17:48] v8bot: Bonuspunkt: "\"◎н ґεαʟł⑂\""
[17:48] halfhalo: psh, like the rest of the word matters
[17:48] acd123: i'm trying to use node's SSL in production and i think i'm experiencing the bug you guys were discussing
[17:48] MooGoo: well I dunno
[17:48] MooGoo: encoding issues are a real pain in the ass
[17:48] MooGoo: imagine the world with just ascii
[17:48] MooGoo: a world of peace and prosperity
[17:48] themiddleman_itv has joined the channel
[17:48] halfhalo: i like it
[17:48] halfhalo: lets do it
[17:49] MooGoo: I think the first step is to take the internet back
[17:49] MooGoo: the rest of the world can have their own
[17:49] MooGoo: cept keep a link to japan for pr0n
[17:50] cognominal: So the problem is with JSON.stringify?
[17:50] ryah: huh -maybe im wrong about the json.stringify
[17:50] c4milo: well in south american we use characters outside of the ascii set :P 
[17:50] c4milo: ryah: yes you are wrong 
[17:51] c4milo: ryah: it supports utf-8 
[17:51] Aikar: inb4 south america isnt america
[17:51] awenkhh has joined the channel
[17:51] Lorentz has joined the channel
[17:51] sechrist has joined the channel
[17:51] CIA-90: node: 03Ryan Dahl 07master * r0271b78 10/ lib/child_process.js : fork: Use utf8 for channel encoding - http://bit.ly/inL9AH
[17:51] harth has joined the channel
[17:52] `3rdEden: OH
[17:52] ryah: cognominal: sorry
[17:52] SubStack: harth: harth === harthur?
[17:52] cincinnatus has joined the channel
[17:53] harth: SubStack: true
[17:53] SubStack: just merged your pull req
[17:53] SubStack: and then I wrote a test
[17:53] cognominal: ryah++ # that was fast
[17:53] harth: SubStack: word, thanks
[17:53] SubStack: but that showed some other screwy cases, so I fixed those with even crazier hacks
[17:54] ryah: cognominal: also - not the topic of the channel
[17:54] ryah: note
[17:54] indutny1 has joined the channel
[17:54] halfhalo: that just means there are special suprises in the code!
[17:55] cognominal: ryah, I am used to rakudo. Comparatively the experimental branches of nodes are rock solid  :)
[17:55] hellp has joined the channel
[17:55] langworthy has joined the channel
[17:55] MooGoo: anyone here know how to write node extensions
[17:55] SubStack: harth: also now hacking browserify to support node_modules so that local installs from npm work properly
[17:56] F1LT3R has joined the channel
[17:56] harth: SubStack: omgz awesome
[17:56] meetar has joined the channel
[17:56] SubStack: this code is such a mess
[17:56] SubStack: but I don't even care because it passes all the tests :p
[17:57] mikeal has joined the channel
[17:57] mikeal has joined the channel
[17:57] cognominal: I remember there is a way to pass a fd from a UNIX process to another so as to create alternate channel. hazy memories...
[17:58] SubStack: up to 840 lines of tests for browserify
[17:58] tjholowaychuk: SubStack: that's nothin :p I've got 8836 for stylus
[17:59] SubStack: did you write them all by hand?
[17:59] tjholowaychuk: 8799 lines in the lib
[17:59] tjholowaychuk: so a bit more tests
[17:59] tjholowaychuk: yeah
[17:59] cognominal: is this channel logged somewhere?
[17:59] SubStack: what!
[17:59] Aikar: yes
[17:59] ceej has joined the channel
[17:59] Aikar: !google node.js irc
[17:59] SubStack: shit my modules are usually 500 lines tops
[18:00] SubStack: and mostly around 200ish lines
[18:00] Aikar: cognominal: http://nodejs.debuggable.com/
[18:00] tjholowaychuk: jade is 2253
[18:00] tjholowaychuk: pretty small in comparison
[18:01] sechrist: tjholowaychuk: why doesn't stylus let you do inheritance/code scoping?
[18:01] sechrist: that's the only thing I saw on less/sass that I didn't see on stylus
[18:01] tjholowaychuk: "code scoping" ?
[18:01] tjholowaychuk: wtf is that
[18:01] SubStack: dnode is 313
[18:01] sechrist: tjholowaychuk: span { a {} b{} }
[18:01] tjholowaychuk: sechrist: stylus has scopes
[18:01] tjholowaychuk: you can nest
[18:01] SubStack: optimist is bigger at 449
[18:01] sechrist: oh you can?
[18:01] tjholowaychuk: yeah
[18:01] tjholowaychuk: from day one
[18:01] tjholowaychuk: you could
[18:01] tjholowaychuk: lol
[18:02] tjholowaychuk: sass has been stealing ideas from stylus lately
[18:02] jgv_ has joined the channel
[18:02] tjholowaychuk: that i've had since 0.0.1
[18:02] tjholowaychuk: but hey at least it makes sass better too
[18:02] ardcore has joined the channel
[18:04] `3rdEden: code.replace('\n', '') zomg only 1 line of code
[18:04] MooGoo: you use newlines in your code?
[18:04] MooGoo: noob
[18:04] puffpio has joined the channel
[18:05] halfhalo: lulz
[18:05] Rodtusker has joined the channel
[18:05] mertonium has joined the channel
[18:05] `3rdEden: comparing LOC is like comparing penis sizes, PUT YOUR NUMBERS ON THE TABLE
[18:06] tjholowaychuk: hahaha
[18:06] exstrudel has joined the channel
[18:06] MooGoo: in code, im more impressed by smaller penis size
[18:06] tjholowaychuk: would be nice if sloccount worked with js
[18:07] yhahn has joined the channel
[18:07] yumike has joined the channel
[18:08] q_no: I'm having a weird issue with sending http responses... the file I'm returning is a 15kB png and the response is only 7k
[18:08] mikey_p: ACTION actually doesn't care much about size of code
[18:08] q_no: so I'm receiving lots of "corrupt file" messages
[18:08] vikstrous has joined the channel
[18:08] ExsysTech has joined the channel
[18:09] q_no: any suggestion how to track down the issue? sending half responses is not desirable ;)
[18:10] skohorn has joined the channel
[18:10] lgomez has joined the channel
[18:10] ryah: q_no: post the code - what version are you using?
[18:11] q_no: v0.5.0-pre, proxied by nginx 1.0
[18:11] vikstrous has joined the channel
[18:11] riven has joined the channel
[18:11] ryah: switch to v0.4.7
[18:12] ryah: q_no: note the topic
[18:12] MooGoo: works for me
[18:13] jbpros has joined the channel
[18:13] q_no: it worked perfectly for a quite a long time, guess it has something todo with the nginx update (switched from 0.7.6 to 1.0)
[18:13] a|i has joined the channel
[18:13] q_no: but well, you never now... perhaps it works better with 0.4.7... that's tricky
[18:13] SOLEIL has joined the channel
[18:13] tjholowaychuk: q_no: might as well use the stable api
[18:14] ryah: q_no: just to rule out causes
[18:14] ryah: q_no: this is normal http - not https?
[18:14] q_no: just normal http
[18:14] ryah: q_no: it would be very surprising to find a http bug like this now
[18:14] ryah: i suspect it's not node - you should post the code
[18:14] q_no: it's an image server... rendering/resizing and responding png files for http://dashed.com ;)
[18:15] q_no: wait a sec, I'm gonna make a pastebin
[18:15] jerrysv: q_no: same results if you hit node directly, or only while proxied? eliminate a variable
[18:15] arpegius has joined the channel
[18:16] lgomez: If someone has a minute, could you take a look at this and tell me if you see something that may be causing the problem described there? https://gist.github.com/33b53dd85c1a0a1e15f4
[18:16] superjudge has joined the channel
[18:16] lgomez: If I go to the login route and then hit any link taking me to the home page a few times, I get logged out. I'm not sure what's causing that.
[18:18] truedat101 has joined the channel
[18:18] mscahill has joined the channel
[18:18] mscahill has left the channel
[18:19] q_no: hitting it directly seems to work fine, got my 17kB back
[18:19] q_no: seems like we narrowed it down to the proxing nginx<>node
[18:19] ryah: ACTION looks around for mraleph
[18:20] kawaz has joined the channel
[18:22] bartt has joined the channel
[18:22] newy_ has joined the channel
[18:22] Booster2ooo: Hi again. Does anybody use Nodester to host his applications?
[18:23] q_no: ok... I turned set "proxy_buffering off;" in nginx... seems to solve the issue -.-
[18:23] Booster2ooo: Because i tried it, when I try to launch my little irc client, i just have Error: false which doesn't really helps me ^^
[18:23] q_no: jerrysv: hitting it directly was the idea I needed, thx ;)
[18:24] jerrysv: q_no: np. i spend a lot of time troubleshooting :)
[18:25] crodas has joined the channel
[18:25] q_no: ryah: I'll keep the version notice in mind for my next issue ;)
[18:27] jerrysv: ryah: with this optimization push that seems to be happening, any thoughts on speeding up dealing with add-ons?
[18:27] maushu has joined the channel
[18:27] ryah: ?
[18:27] patcito has joined the channel
[18:27] ryah: jerrysv: what do you mean
[18:28] jerrysv: ryah: writing a c++ add-on can be fairly slow, with all of the translation from javascript to v8, i'm wondering if there are gains to be made there
[18:29] ryah: writing or running?
[18:29] jerrysv: running :)
[18:29] jerrysv: writing was easy
[18:29] context: mmm what do i want for lunch
[18:29] ryah: jerrysv: that's v8's problem
[18:29] ryah: we can't do much
[18:30] tilgovi has joined the channel
[18:30] tilgovi has joined the channel
[18:31] jerrysv: ryah: figured i'd ask
[18:31] wilken has joined the channel
[18:33] tiagoa_ has joined the channel
[18:33] pifantastic_ has joined the channel
[18:34] fmeyer has joined the channel
[18:35] jacobolus has joined the channel
[18:35] hoax__ has joined the channel
[18:35] nibblebot has joined the channel
[18:37] jbpros has joined the channel
[18:38] dingomanatee has joined the channel
[18:38] dingomanatee: Hey Ho
[18:39] dingomanatee: Any Node.JS'ers have any projects you want to show off to the south bay crowd on the 24th?
[18:39] yhahn has joined the channel
[18:40] jamesarosen has joined the channel
[18:40] meetar: I have a beta I'm working on
[18:40] dingomanatee: cool whats it about?
[18:40] meetar: in fact if anyone here wants to break it i just pushed it live about a second ago
[18:40] mbrevoort has joined the channel
[18:41] meetar: http://nodepong.com
[18:41] exstrudel has joined the channel
[18:41] viz has joined the channel
[18:41] dilvie has joined the channel
[18:41] jarek has joined the channel
[18:41] bminer has joined the channel
[18:41] tbranyen: nodejs JSON.stringify is acting strange, its coercing my numbers to strings
[18:42] baudehlo: ghod all http benchmarking tools are bloody awful.
[18:42] jarek has joined the channel
[18:42] jarek has joined the channel
[18:42] bminer: anyone noticing slow perfomance with exec()?
[18:42] Guest51628 has joined the channel
[18:42] meetar: oo a bug
[18:43] meetar: i suspect flashsockets
[18:44] jarek has joined the channel
[18:44] jarek has joined the channel
[18:44] markwubben has joined the channel
[18:44] jarek has joined the channel
[18:44] mikegerwitz: tbranyen: What is `typeof yournumber`?
[18:45] mikegerwitz: v8: JSON.stringify( 1 )
[18:45] v8bot: mikegerwitz: "1"
[18:45] tbranyen: mikegerwitz: hmmm well i'm trying to reproduce outside of my app and i can't
[18:45] tbranyen: heh
[18:45] jarek has joined the channel
[18:45] jarek has joined the channel
[18:45] mikegerwitz: v8: JSON.stringify( '1' )
[18:45] v8bot: mikegerwitz: "\"1\""
[18:45] dingomanatee: meetar - interesting however I am not sure the scores are updating right.
[18:45] tbranyen: same object too
[18:45] meetar: boost: what browser were you in?
[18:45] mikegerwitz: tbranyen: Yeah as long as it's a number and not a string, it shouldn't quote it
[18:45] meetar: dingo: i agree
[18:46] meetar: dingo: what browser are you in?
[18:46] jerrysv: v8:JSON.stringify(Number(1))
[18:46] v8bot: jerrysv: "1"
[18:46] dingomanatee: Little steps - also a bit of a noticeable lag when the pixel hits the peddle
[18:46] dingomanatee: FF
[18:46] drderidder has joined the channel
[18:46] dingomanatee: OSX
[18:46] meetar: dingo: yeah FF is going through flashsockets - quite slow compared to websocket
[18:47] test117523 has joined the channel
[18:47] dingomanatee: You need to ramp up the players - MMORPG (Massively Multiplayer Online Realtime Pong Game) !
[18:47] dingomanatee: Put players on all four walls
[18:47] pengwynn has joined the channel
[18:47] meetar: dingo: heh sounds insane
[18:48] drderidder has left the channel
[18:48] bminer: question... why is child_process.exec() performing slowly?
[18:48] dingomanatee: meetar: look at Unity - you can have 3d pong and its has its own socketry
[18:48] dambalah has joined the channel
[18:48] bminer: i have a program that calls exec()... 
[18:48] bminer: the command is actually invalid (intentionally)
[18:49] bminer: and i get runtimes of 60ms for just 12 calls of exec()
[18:49] meetar: dingo: are you talking about 'vong'?
[18:50] jarek has joined the channel
[18:50] Venom_X has joined the channel
[18:50] ryan0x2 has joined the channel
[18:50] bminer: anyone?
[18:50] bminer: performance of exec()?
[18:50] jbpros has joined the channel
[18:50] dingomanatee: node poing
[18:50] jarek has joined the channel
[18:51] dingomanatee: I just think it would be fun if you could pong inside a 3D cube
[18:51] meetar: 3 Ds is too many
[18:51] dingomanatee: you can put it into isometrics 
[18:51] dingomanatee: and flatten out  the third dimension if you want.
[18:52] meetar: i did those to stay in shape when i was in jail
[18:52] teemow has joined the channel
[18:52] indutny has joined the channel
[18:53] meetar: i've seen some flash 3d pong games do that
[18:53] dingomanatee: ACTION works on a prison based website. 
[18:53] jarek has joined the channel
[18:53] jarek has joined the channel
[18:53] meetar: my biggest chore right now is coping with laggy flashsocket response.
[18:53] dingomanatee: when they put you back in, I pwn your phn
[18:53] dingomanatee: make it turn based :D
[18:53] knirhs has joined the channel
[18:53] jarek has joined the channel
[18:53] jarek has joined the channel
[18:53] meetar: haw
[18:53] meetar: the firefox version
[18:53] jerrysv: wait, turn based 3d pong?
[18:53] dingomanatee: Zynga Pong
[18:54] meetar: aka "pool"
[18:54] dingomanatee: Pongville
[18:54] Darren has joined the channel
[18:54] meetar: pool in space
[18:55] meetar: anyway: maybe not ready for a bunch of South Bay nerds
[18:55] meetar: maybe by the 24th
[18:56] steph021_w has joined the channel
[18:56] steph021_w has joined the channel
[18:56] mbrevoort has joined the channel
[18:57] bminer: :quit
[18:57] bminer has left the channel
[18:57] rfay has joined the channel
[18:58] tiagoa_ has joined the channel
[18:58] kjeldahl has joined the channel
[18:58] piscisaureus has joined the channel
[18:59] Poetro has joined the channel
[18:59] darren has left the channel
[19:00] truedat101 has joined the channel
[19:00] rtuin has joined the channel
[19:00] Venom_X has joined the channel
[19:01] admc has joined the channel
[19:01] w_wilkins has joined the channel
[19:02] baudehlo: has anyone written a httpperf/ab equivalent in node?
[19:02] dingomanatee has joined the channel
[19:04] coreb has joined the channel
[19:04] pedrobelo has joined the channel
[19:04] awenkhh has joined the channel
[19:06] namelessnotion_ has joined the channel
[19:06] Postmodernist: Hi
[19:07] Postmodernist: Is there anything wrong with putting the create/read/update/delete functions inside the anonymous function called after the connection to the database is established?
[19:07] Postmodernist: https://gist.github.com/977138
[19:07] saschagehlich has joined the channel
[19:08] Postmodernist: Critque on that style would be appreciated. :)
[19:10] rpflo has joined the channel
[19:11] Postmodernist: *Critique
[19:12] kriszyp has joined the channel
[19:12] nphase has joined the channel
[19:12] Marak has joined the channel
[19:12] Marak: if anyone cares, we resurrected the announcer bot for node.js search keywords on twitter and he's alive in #nodejitsu
[19:12] Marak: you can also !tweet responses to people
[19:13] Postmodernist: I'm declaring functions inside an anonymous callback function: https://gist.github.com/977138
[19:13] Marak: ryah: I can bring the bot back in here, but the #nodejs hashtag is a bit busier since the last time we have the announcer bot running
[19:13] Postmodernist: ACTION isn't sure if this is in accordance to idoimatic Javascript
[19:13] Postmodernist: *idiomatic
[19:14] darren has joined the channel
[19:14] ezilman has joined the channel
[19:14] Marak: fuck it, im doing it
[19:14] Max-Might has joined the channel
[19:15] ezilman: is there a way to force node to use a port?
[19:15] ezilman: node -p 424242?
[19:15] saschagehlich: ezilman: you have to tell the modules to use a specific port. node itself does not run on any ports
[19:16] hlindset has joined the channel
[19:16] hlindset has joined the channel
[19:16] mscdex: Marak: we'll do it live!
[19:17] Marak: mscdex: apparently avianflu hard-coded the broadcast to one channel, so he's fixing it now
[19:18] fostah has joined the channel
[19:19] wavded has joined the channel
[19:19] Postmodernist: I'LL WRITE IT AND WE'LL DO IT LIVE!!!!oneone
[19:19] wavded: does anyone know work being done in the vein of JRuby for Node?
[19:19] Postmodernist: wavded: Is that a wrapper for gems?
[19:19] baudehlo: wavded: no.
[19:20] baudehlo: wavded: closest you'll get is Rhino.
[19:20] wavded: i don't know too much about JRuby but it lets you run it in on the JVM
[19:20] wavded: yeah Rhino runs on the JVM
[19:20] ezilman1 has joined the channel
[19:20] Max-Might has left the channel
[19:20] SubStack: Postmodernist: I would just { create : (function () {}, delete : function () {} }[param] || function () {})()
[19:20] SubStack: look ma, no points!
[19:20] ezilman1: aschagehlich: well right now a simple "node node_modules/redis/test.js" brings up a bunch of errors
[19:20] ezilman1: (for some reason it decides to run on port 6379 on its own, how do I override that?)
[19:20] mnbvasd: why would anyone chose to run an interpreted language in a jvm?
[19:21] baudehlo: waveded: there's no reason you couldn't port the API to Rhino. But the performance is shit.
[19:21] Postmodernist: SubStack: Hmm, how do I call create or delete then?
[19:21] wavded: yeah right
[19:21] Postmodernist: Just .create?
[19:21] wavded: mnbvasd: portability
[19:21] Postmodernist: .create()
[19:21] mnbvasd: wavded: accross what?
[19:21] mscdex: across lols
[19:22] SubStack: oh wups, misplaced ( all up in that example
[19:22] mbrevoort has joined the channel
[19:22] wavded: mnbvasd: well as far as i understand it you can run it anywhere the jvm runs
[19:22] mnbvasd: wavded: which is probably a very specific jvm version on a very specific platform?
[19:23] Postmodernist: SubStack: If I declare a function as create: function() { }, how do I call it?
[19:23] baudehlo: node runs pretty much everywhere except windows.
[19:23] bluekite2000 has joined the channel
[19:23] dmcquay has joined the channel
[19:23] SubStack: Postmodernist: you don't
[19:23] baudehlo: and even there it runs, on cygwin. and will run on windows fine in v0.6
[19:23] mnbvasd: baudehlo: and on mips, power, sparc etc.
[19:23] wavded: mndvasd: not sure, i would have to look into JRuby more and see what they did
[19:23] mbrevoort has joined the channel
[19:23] ezilman1: anybody? buller?
[19:23] blackdog_ has joined the channel
[19:23] chjj has joined the channel
[19:24] baudehlo: mnbvasd: right, but nobody uses those ;-)
[19:24] mnbvasd: baudehlo: or openbsd, jnode, or *other OS.
[19:24] mnbvasd: baudehlo: sure ;)
[19:24] SubStack: Postmodernist: but your example only had 1 call to create() so you should factor that out if you're only going to call it once
[19:24] baudehlo: anyhow, the answer is the same.
[19:24] jasong_at_apache has joined the channel
[19:24] mnbvasd: the only people I've found who like java are mediocure coders and people teaching OO programming.
[19:24] baudehlo: there's nobody currently working jNode.js
[19:25] baudehlo: *on
[19:25] Postmodernist: mnbvasd: What makes a programmer mediocre?
[19:25] mnbvasd: I've never met a sysadmin who doesn't hate it with a passion.
[19:25] hij1nx has joined the channel
[19:25] baudehlo: Postmodernist: lack of salt.
[19:25] mnbvasd: Postmodernist: clueless ones, who write bad code and make wrong assumptions.
[19:25] baudehlo: they just don't taste right.
[19:25] mnbvasd: ACTION giggles
[19:25] ilya_ has joined the channel
[19:26] mnbvasd: js runs on more platforms than java, hence is more portable.
[19:26] Postmodernist: Larry Page seemed to like Java in 1995.
[19:26] baudehlo: but v8 doesn't.
[19:26] mnbvasd: idd
[19:26] baudehlo: and node is pretty tied to v8 now.
[19:26] mikegerwitz: mnbvasd: I think the problem is that Java is taught everywhere, therefore there is a larger population of inexperienced programmers for that language. The langauge itself, though I personally am not fond of it, is fine.
[19:26] mnbvasd: google uses java for some stuff internally.
[19:26] ilya_: tjholowaychuk: it appears that express/connect body parser doesn't recognize bools and turns {'param': false} into {'param': 'false'}.
[19:27] ezilman1: Postmodernist: that's.. all that was available, google rewrote everything in python :P
[19:27] Postmodernist: Fuck portability when it comes to SaaS. I'll get whatever platform I need and then serve it everywhere.
[19:27] Postmodernist: ezilman1: ya
[19:27] mnbvasd: mikegerwitz: I don't like the language personally... I just hate how non-portable it is.. you've got to get very specific jvms for very specific archs.
[19:28] mnbvasd: ezilman1: google are going for go! dude!
[19:28] Postmodernist: mnbvasd: Ruby or Java?
[19:28] wavded has left the channel
[19:28] mnbvasd: Postmodernist: java especially... I don't like ruby, but that's just a mild distaste ;)
[19:28] ezilman1: mnbvasd: oh snap, and here I thought my Haskell for Dummies was going to make me the hippest cat for miles
[19:28] Wizek has joined the channel
[19:28] stephank has joined the channel
[19:28] SubStack: haskell for dummies? PUHLEASE
[19:29] mnbvasd: ACTION ^5's ezilman1 
[19:29] mikegerwitz: Postmodernist: Seeing those two in the same sentence made me a little sick
[19:29] SubStack: learn you a haskell is where it's at
[19:29] Postmodernist: mnbvasd: What _do_ you like?
[19:29] mnbvasd: Postmodernist: JS, C, C++, ASM, Pascal, Perl, Go!....
[19:29] Postmodernist: mikegerwitz: You're welcome. =)
[19:30] jamesarosen has joined the channel
[19:30] Postmodernist: Perl is still good for writing little utilities :)
[19:30] mnbvasd: perl is great for quick hacks and 1 liners, so long as you don't write an app in it.
[19:30] Postmodernist: I always hire a Perl monkey to do it though.
[19:30] Postmodernist: sure
[19:31] Postmodernist: I like Perl because I can easily find people to write quick hacks with CPAN in it
[19:31] mnbvasd: I hate Perl because CPAN is so terribly broken
[19:31] mnbvasd: ;)
[19:31] baudehlo: ACTION has written a bunch of very large scale apps in perl...
[19:32] mnbvasd: poor you :(
[19:32] baudehlo: not really.
[19:32] mnbvasd: ACTION gives baudehlo a lolly
[19:32] baudehlo: clean perl is very nice.
[19:32] baudehlo: ugly perl is very fucking ugly.
[19:32] tjholowaychuk: ilya_ x-www-form-urlencoded? or json?
[19:32] stepheneb_ has joined the channel
[19:32] ilya_: JSON
[19:32] baudehlo: generally it's a better language than Javascript.
[19:32] mnbvasd: I can write nice clean perl, it's just I've had to maintain far to many "clever" programs other people write.
[19:33] maxdlx has joined the channel
[19:33] baudehlo: yeah, I can agree that sucks.
[19:33] tjholowaychuk: ilya_: hmmm.. it's literally just JSON.parse
[19:33] tjholowaychuk: so should be fine
[19:33] ilya_: i just tested in node's REPL, converted JSON objects back and forth and yes, in there it stays a bool
[19:34] tjholowaychuk: i suspect there is a different issue
[19:34] ilya_: tjholowaychuk: but in the app, i print body right from app.post() and it's a string
[19:34] chjj: bah, i hate JS on the client side now
[19:34] Postmodernist: mnbvasd: I don't care if I can maintain the little apps people write in Perl. If it breaks, it's throwaway code. I'll pay $350 to another person in #perl and get a replacement.
[19:34] tjholowaychuk: it's literally ['application/json'] = JSON.parse
[19:34] Postmodernist: s/apps/utilities/
[19:35] ilya_: tjholowaychuk: i'm going to disable parser and look at raw body
[19:35] mnbvasd: Postmodernist: fair point well made.. I spend 20 mins writing a custom script to parse a few log files then dump it somewhere to get deleted in 2 years time, and then write a replacement for the next problem ;)
[19:36] hij1nx has joined the channel
[19:36] ilya_: tjholowaychuk: where would the unparsed request body be? req.body is undefined
[19:36] tjholowaychuk: ilya_ 'data' events
[19:37] tjholowaychuk: bodyParser buffers
[19:37] caolanm has joined the channel
[19:37] ilya_: oh, back to body +=, ok
[19:37] tjholowaychuk: ilya_: or req.rawBody
[19:37] tjholowaychuk: i think is what it was called
[19:37] tjholowaychuk: we store the original data
[19:37] tjholowaychuk: so leave bodyParser in and check that
[19:37] ilya_: nope, that's undefined too
[19:37] tjholowaychuk: personally i dont think we should store the original at all
[19:37] ilya_: i'll just collect the data event
[19:37] tjholowaychuk: i've never used it at aleast
[19:38] _fat has joined the channel
[19:39] kersny has joined the channel
[19:39] ilya_: tjholowaychuk: app.on('data', function(chunk){}) ?
[19:39] tjholowaychuk: yeah
[19:39] tjholowaychuk: well
[19:39] tjholowaychuk: not app
[19:40] tjholowaychuk: req.on('data', ...)
[19:40] tjholowaychuk: just like regular node
[19:40] ilya_: oh, ok
[19:40] ryah: what's the best rss thing for node?
[19:41] Qbix1: guys, I have a "socket hang up" error
[19:41] Qbix1: when trying to access facebook rest api
[19:41] Qbix1: I didn't have it before
[19:41] Qbix1: does anyone know what that is about? https?
[19:41] ryah: wow - not too many rss readers on the npms
[19:41] Qbix1: I have latest node.js version
[19:41] Qbix1: ryah - any reports of "socket hang up" errors in node.js https that you know about?
[19:42] ryah: Qbix1: the other side hung up midrequest
[19:42] ryah: handle it with req.on('error') 
[19:43] wadey has joined the channel
[19:43] Qbix1: hold on, I will check
[19:43] sreuter: Still can't believe I can proxy stuff I got in S3 at about 100mb/s (1000Gbit/s) trough one node process on an amazon ec2 medium instance.. insane….
[19:45] Maximosis has joined the channel
[19:46] sreuter: When the objects in S3 are encrypted and I decipher them in-stream (chunkwise) I can at least achieve about 15mb/s (150mbit/s) …
[19:46] brianc has joined the channel
[19:47] copongcopong has joined the channel
[19:48] wavded has joined the channel
[19:49] wavded has left the channel
[19:49] sreuter: On the shell (using the openssl binary) I can decrypt a object at about 31mb/s. So i think there is nothing much to tweak in node-crypto anymore, at leas not on decrypt perfomance. :-)
[19:50] materialdesigner has joined the channel
[19:50] mscdex: sreuter: have you tried 0.4 head?
[19:51] mscdex: sreuter: ssl compression was disabled recently and that may help
[19:51] yhahn has joined the channel
[19:51] sreuter: mscdex: that only affects tls i guess :-)
[19:51] mscdex: huh?
[19:51] mscdex: tls and https
[19:51] sreuter: mscdex: what i do is pure stream decryption, chunkwise.. with crypto.createDecipher().
[19:52] sreuter: yeah, that's not what i do :-)
[19:52] sreuter: i'm not decrypting on the transport...
[19:52] mscdex: sreuter: can you gist your code?
[19:54] sreuter: mscdex: sure, i will correct my last gist (which i opened because of a bug i have now fixed) … just a second
[19:55] stagas has joined the channel
[19:55] Guest75743 has joined the channel
[19:57] jarek has joined the channel
[19:57] sreuter: mscdex: https://gist.github.com/c5b0e60728a986fdd3bf
[19:58] exstrudel has joined the channel
[19:58] mahna has joined the channel
[19:58] ilya_: tjholowaychuk: turns out i was POSTing not stringified JSON objects and they were sent as ?param=value, therefore types were lost. But now I'm sending stringified objects and bodyParser creates an object that looks like {'{my data here}': ''} which is very weird.
[19:59] hassox has joined the channel
[20:00] stagas: ilya_: how are you posting that?
[20:00] kmiyashiro: ilya_: what are you posting?
[20:01] cloudhead has joined the channel
[20:01] tjholowaychuk: ilya_ are you setting the content-type?
[20:01] tjholowaychuk: to application/json ?
[20:01] ilya_: via jquery's ajax
[20:01] ilya_: i'm setting datatype: 'json'
[20:01] awenkhh has joined the channel
[20:02] tjholowaychuk: i had that issue the other day
[20:02] tjholowaychuk: but
[20:02] tjholowaychuk: jquery is lame
[20:02] tjholowaychuk: so i had to do contentType: 'json' or something
[20:02] ilya_: let me try that
[20:03] ilya_: ah, you're right, it's contentType, not datatype
[20:03] ilya_: datatype is for receiving
[20:03] ilya_: derp
[20:04] jetienne has joined the channel
[20:05] `3rdEden: Offtopic: Does anybody here know a way to detect, if the `window.onload` event has been fired or not
[20:05] sreuter: mscdex: see what i mean? :-)
[20:07] SubStack: `3rdEden: var fired = false; window.onload = function () { fired = true };
[20:07] `3rdEden: SubStack yeah but the issue here is, the script is dynamically loaded in the page
[20:08] `3rdEden: So I have no clue if the script is insered after the onload event or not
[20:08] jetienne: `3rdEden: dom element got states. i remember that from a <img> preloading stuff, one if is it loaded or not. maybe window.* got it
[20:08] willwhit_ has joined the channel
[20:08] tjholowaychuk: ilya_: confusing i know
[20:08] tjholowaychuk: and headers: { 'Content-Type': ... } doesnt work
[20:08] tjholowaychuk: which was the first thing i tried
[20:08] `3rdEden: jetienne yeah i tried checking for document.readyState, but that also shows `complete` if the dom is loaded
[20:09] frostbytten has joined the channel
[20:09] `3rdEden: but I need the onload explicitly
[20:09] Metapony has joined the channel
[20:09] `3rdEden: I have been banging my head against for hours now ;!
[20:09] frostbytten: Hey, can I ask and Express question here?
[20:09] puffpio_ has joined the channel
[20:10] ilya_: tjholowaychuk: yeah, I think it got it to work, without type coercing and other crap
[20:10] ilya_: tjholowaychuk: thanks!
[20:10] SubStack: dynamic loading >_<
[20:11] SubStack: browserify that shit!
[20:11] Squeese has joined the channel
[20:11] hij1nx has joined the channel
[20:12] jetienne: https://github.com/jquery/jquery/blob/master/src/core.js#L425 <- `3rdEden jquery code on it
[20:12] frostbytten: Noob question, but is there a way to make basicAuth middleware only work for certain paths?
[20:12] andi5 has joined the channel
[20:12] kmiyashiro: ilya_: how'd you do it?
[20:12] sreuter: frostbytten: answered this yesterday :-) just a second...
[20:12] Qbix1: hey SubStack
[20:12] Qbix1: waht's up
[20:12] jetienne: `3rdEden: seems to say "complete" == loaded... what about that before it is loaded
[20:12] Qbix1: ryah: are you here?
[20:12] `3rdEden: I thought of using document.image and checking for height and width > than 0 as images the last once that are loaded
[20:12] sreuter: frostbytten: there you go… https://gist.github.com/b15774d6ac7b4f2082e5
[20:12] ilya_: in jquery.ajax: data: JSON.stringify(JSONobj), contentType: 'application/json'
[20:13] frostbytten: Thanks.
[20:13] zeade has joined the channel
[20:13] ryah: Qbix1: what's up?
[20:13] sreuter: frostbytten: just leave the "basicAuth" argument if you dont want the resource/route to be protected
[20:13] ilya_: kmiyashiro: this way bodyparser parses it back into object and keeps things as they were
[20:13] jetienne: `3rdEden: you sure about readystate, jquery code seem pretty simple from here
[20:13] frostbytten: Right... I got middleware up the butt over here, but I totally wasn't wrapping my head around basicAuth for some reason.
[20:14] kmiyashiro: ilya_: ic... are you posting a form?
[20:14] frostbytten: I guess because of req, res
[20:14] SubStack: Qbix1: hackin
[20:14] ilya_: kmiyashiro: ATM I just set up a page with buttons, so I'm posting an object i define in the <script> tags
[20:15] ilya_: kmiyashiro: not a form
[20:15] kmiyashiro: ah
[20:16] qbert has joined the channel
[20:16] qbert: I cant find any date / time modules in node, I want to time a function
[20:16] SubStack: v8: Date.now()
[20:16] v8bot: SubStack: 1305663410502
[20:17] SubStack: part of ecmascript
[20:17] qbert: ahh
[20:17] qbert: anyone have a decent spec for ecmascript ?
[20:18] mahna: Anybody know how to configure npm's package install directory? My .npmrc settings don't seem to be working anymore (apparently 'binroot' and 'manroot' no longer apply; 'root' too?).
[20:18] `3rdEden: jetienne you might be correct..
[20:18] ilya_: qbert: http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf
[20:18] mahna: Everything's going into node_modules, despite not using '-g' (correct?).
[20:19] jerrysv: qbert: to answer your other questions - date-utils, date, datejs, dt, chrono, DateZ
[20:20] qbert: ilya_,  jerrysv: ok thx!
[20:20] nibblebo_ has joined the channel
[20:21] Qbix1: SubStack: i ran into a serious problem with facebook
[20:21] gf3: tjholowaychuk: what's your DHH tweet about?
[20:21] tjholowaychuk: his keynote
[20:21] tjholowaychuk: haha
[20:22] tjholowaychuk: he mentioned me 20 minutes in when he's talking about coffeescript
[20:22] tjholowaychuk: funny shit
[20:22] gf3: ahh
[20:23] colinsullivan has joined the channel
[20:24] kmiyashiro: where that at?
[20:24] Qbix1: I don't know what is going on
[20:24] Marak: tjholowaychuk: Y U NO LIKE CF
[20:24] Marak: tjholowaychuk: IM DHH
[20:25] Marak: tjholowaychuk: I DEMAND INTERNET MONEY AND RACE CARS
[20:25] tjholowaychuk: Y U NO WANT EVERY LANGUAGE TO LOOK LIKE RUBY
[20:26] mofle has joined the channel
[20:26] colinsullivan: SubStack: I'm getting a browserify error, any ideas? http://pastie.org/1918227
[20:27] devdazed has joined the channel
[20:29] Qbix1: oh I see what happened
[20:29] Qbix1: it got broken by later implementationsof Node
[20:29] dnyy: anyone know of a decent-sized nodejs/socket.io app i can look at for style ideas?
[20:29] Qbix1: https.request worked
[20:29] ryah: ACTION just put some jobs on the homepage of nodejs.org :)
[20:29] Qbix1: ryah: I am experiencing this problem: http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/18222
[20:29] ryah: maybe that will spawn more jobs
[20:29] Qbix1: here is the code: https://github.com/votizen/facebook-graph-client/blob/master/index.js
[20:30] sechrist: I prefer race money and internet cars
[20:30] gm___ has joined the channel
[20:30] Qbix1: line 264:    request.on('error', ...)
[20:31] nibblebot has joined the channel
[20:31] _fat has left the channel
[20:33] ryah: Qbix1: how to reproduce?
[20:34] puffpio has joined the channel
[20:34] jarek has joined the channel
[20:34] sechrist: oh neat, alex russell is going to the jsbbq?
[20:34] Marak: okay, lets try something annonying
[20:35] sechrist: chromeframeguy
[20:35] wookiehangover has joined the channel
[20:35] jerrysv: you guys get all the down down in the bay
[20:35] stepheneb has joined the channel
[20:36] kohai has joined the channel
[20:36] kohai: Twitter Connection Successful!
[20:36] Marak: hey kohai , be a nice twitter bot okay?
[20:36] astropirate has joined the channel
[20:37] hoax__ has joined the channel
[20:38] kmiyashiro: hi kohai
[20:38] frostbytten: sreuter: Hey... I'm getting a has not method call()
[20:38] mjr_ has joined the channel
[20:38] drgnorq has joined the channel
[20:39] ryah: hey - can people upgrade to v0.4 HEAD ?
[20:39] ryah: those of you with production systems
[20:39] a|i has joined the channel
[20:39] mjr_: ryah: what changed?
[20:39] jerrysv: down = fun. wow. way of.
[20:39] jerrysv: f
[20:39] ryah: would like some feed back before v0.4.8
[20:40] ryah: mjr_: asserts are not ignored
[20:40] yhahn has joined the channel
[20:40] zomgbie has joined the channel
[20:40] ryah: that's the major thing
[20:40] mjr_: Oh, OK.  I'm already running that way
[20:40] mjr_: 666 users, the IRC channel count of the beast.
[20:41] ryah: tjholowaychuk: v0.4 HEAD feel stable to you?
[20:41] truedat101 has joined the channel
[20:41] tjholowaychuk: ryah: haven't tried it
[20:41] tjholowaychuk: im using 0.4.6 i think
[20:41] tjholowaychuk: nope 0.4.7
[20:41] ryah: any chance you can upgrade?
[20:41] tjholowaychuk: yeah sure
[20:41] tjholowaychuk: I'll try it out and let you know if anything comes up
[20:42] ryah: thanks
[20:42] ryah: if i hear nothing by thursday i'll cut v0.48
[20:42] ryah: mjr_: your bug not withstanding
[20:42] mjr_: ha, yes.  I'd sure love to get that bug fixed.
[20:42] mjr_: I'm about to ready to just work around it if we can't get anywhere with it.
[20:43] ryah: mjr_: im lost with it...
[20:43] ryah: mjr_: you never did the console.trace() in the uncuaghtException
[20:43] mjr_: oh?
[20:43] mjr_: OK then, I'm on it.
[20:43] ryah: not that i think it's going to provide much help - but it might be something...
[20:43] ryah: just looking for some clue
[20:45] eldios has joined the channel
[20:45] eldios: mootools jquery or dojo? (and why so)
[20:45] mjr_: ryah: Anything else you need, I can try to accommodate.
[20:47] MooGoo: be a man and write your own library
[20:47] frostbytten: Sorry... but does the [middleware1, middleware2] for Express work. I keep getting call errors.
[20:47] frostbytten: well no method call() errors
[20:48] tjholowaychuk: frostbytten: what's that ?
[20:49] tjholowaychuk: app.get('/foo', [fn, fn], fn) ?
[20:49] frostbytten: Yes.
[20:49] frostbytten: It says no method call()
[20:49] tjholowaychuk: hmm can you gist the code
[20:49] frostbytten: well more like var x = [fn,fn]; app.get('/foo', x, fn);
[20:49] tjholowaychuk: yeah should work
[20:50] tjholowaychuk: prety sure i have test cov for that
[20:50] frostbytten: hold on then, I'll gist what I have
[20:50] dies_el has joined the channel
[20:50] frostbytten: I'll check the tests too
[20:50] mertonium has joined the channel
[20:51] sechrist has joined the channel
[20:51] ryah has joined the channel
[20:52] mikeal has joined the channel
[20:52] tjholowaychuk: ryah: some of my test suites are failing with HEAD, looking into it, seems fs related
[20:53] tjholowaychuk: hmm
[20:53] tjholowaychuk: cluster tests
[20:53] tjholowaychuk: are much slower
[20:54] frostbytten: tjholowaychuk: https://gist.github.com/977375
[20:55] tjholowaychuk: frostbytten: hmm ok looks like it should work
[20:56] frostbytten: Check out the comment I just posted
[20:56] frostbytten: same gist
[20:56] tjholowaychuk: frostbytten: maybe just try a dumb little test with some functions that log first to eliminate any variables introduced by your logic
[20:56] stepheneb has joined the channel
[20:57] frostbytten: They work if I put them on the line without the array
[20:57] ezmobius has joined the channel
[20:57] tjholowaychuk: i'll make sure i have tests for that
[20:58] frostbytten: so app.get('/', fn, fn, fn, fn(){}); works but not with the array
[20:58] gazumps has joined the channel
[20:58] davida has joined the channel
[20:59] powerj has joined the channel
[20:59] fakewaffle: i'm stupid, why is this not valid? var a = {'aoeu'}; ? i have to say var a = {'aoeu': null}?
[20:59] tjholowaychuk: frostbytten: yeah i've got some tests for that
[20:59] frostbytten: weird.
[21:00] SubStack: npm is being slow >_<
[21:01] SubStack: browserify 0.4 out!
[21:02] hassox has joined the channel
[21:02] SubStack: supports node_modules finally
[21:03] ryah: yes, there has been a perf regression
[21:04] ryah: not sure where that happened
[21:04] ryah: gr..
[21:04] chjj: substack, your projects have amazing logos
[21:04] ryah: it doesn't appear to be the assert
[21:06] SubStack: chjj: I try!
[21:07] SubStack: actually few of my projects have proper logos, I usually just do that for blog posts
[21:08] ryah: http://arlolra.no.de/benchmarks/v0.4
[21:08] wookiehangover has joined the channel
[21:10] tjholowaychuk: ryah: ah i see you leave the asserts in now, that's what was failing in connect "assert(incoming[0] === req);"  1092 of http.js
[21:10] ryah: tjholowaychuk: okay nice
[21:10] ryah: that's helpful actually
[21:10] mjr_: sounds like a good one
[21:11] mc_greeny has joined the channel
[21:11] blackdog_ has left the channel
[21:11] tjholowaychuk: express has the same assert failing
[21:11] tjholowaychuk: but everything else seems fine
[21:11] darren has left the channel
[21:11] tjholowaychuk: both related to connect's static()
[21:11] ryah: asserts ftw
[21:12] ryah: from my measurements adding and removing the asserts is not changing perf
[21:12] ryah: at least in hello world
[21:12] test117522 has joined the channel
[21:12] ryah: tjholowaychuk: anyway i can reproduce that?
[21:12] ryah: what's the test doing?
[21:12] colinclark has joined the channel
[21:13] tjholowaychuk: static() does quite a bit I'll try and narrow it down
[21:13] mkrecny has joined the channel
[21:13] tjholowaychuk: ACTION didnt notice we had a "finish" event
[21:13] tjholowaychuk: helpful
[21:13] jbpros has joined the channel
[21:15] eldar has joined the channel
[21:15] brettgoulder has joined the channel
[21:16] dambalah has left the channel
[21:16] taf2: ACTION node.js is like a plumbing tool... i can connect up all my pipes - connecting ftp to s3 with socket.io progress bar...
[21:16] baoist has joined the channel
[21:17] ceej_ has joined the channel
[21:18] jbpros has joined the channel
[21:19] hdon has joined the channel
[21:21] piscisaureus: ACTION looking for n2liquid
[21:21] colinclark has joined the channel
[21:22] ryanfitz has joined the channel
[21:23] jbpros has joined the channel
[21:24] Poetro1 has joined the channel
[21:29] F1LT3R has joined the channel
[21:33] ukev has joined the channel
[21:33] otaku_coder has joined the channel
[21:35] xeodox_ has joined the channel
[21:36] CiRlE has joined the channel
[21:37] wookiehangover has joined the channel
[21:38] pifantastic has joined the channel
[21:38] brettgoulder has joined the channel
[21:38] arpegius has joined the channel
[21:40] mscdex: taf2: :-D
[21:40] raynos1 has joined the channel
[21:41] raynos1: We've gone upto the 6XX ?
[21:41] raynos1: Impressive. 
[21:41] CiRlE has joined the channel
[21:41] taf2: that's because node.js is the shit
[21:42] raynos1: Well that goes without stating.
[21:43] mscdex: 6xx?
[21:44] otaku_coder: has anyone worked with the google docs api in node before?
[21:44] Postmodernist: Would you kill yourself if you had to work on a project that combined PHP and node.js?
[21:44] raynos1: Postmodernist: not really
[21:44] bwinton has joined the channel
[21:44] tarpad has joined the channel
[21:44] sintaxi has joined the channel
[21:44] raynos1: As long as theres a nice redis database or TCP socket between the two codebases then its all good
[21:44] raynos1: Oh and I shouldnt have to touch any PHP
[21:44] otaku_coder: Postmodernist: I did, node called a php script.....
[21:44] systemfault: Postmodernist: I'm working on a PHP4 project at the moment... nothing can be worse.
[21:45] mscdex: yeah i have to maintain a big PHP4 codebase and it sucks
[21:45] mscdex: 4.1.2 at that
[21:45] mscdex: :(
[21:45] raynos1: And you should be able to control the node-PHP communication API
[21:45] sintaxi has left the channel
[21:45] raynos1: is PHP4 worse then ASP.NET 2.0 ?
[21:45] systemfault: raynos1: Are you serious?
[21:45] mscdex: :-D
[21:45] raynos1: I dont know how bad PHP4 is
[21:46] Postmodernist: It is 5526 lines of PHP and 2184 lines of node.js
[21:46] mscdex: i dunno
[21:46] mscdex: it's a tossup
[21:46] Postmodernist: Node.js is model stuff and PHP is view/controller stuff
[21:46] mscdex: on the one hand .NET sucks, but so does PHP4
[21:46] qbert_ has joined the channel
[21:46] raynos1: Why?
[21:46] mscdex: :p
[21:46] raynos1: Postmodernist: your using node for the websockets right?
[21:46] mscdex: Postmodernist: why  not use express or something for vc?
[21:46] CiRlE has joined the channel
[21:46] raynos1: If your using it for models / logic / database then you might aswell do the views/controllers in express.
[21:47] raynos1: Just rewrite the PHP bit by bit secretly ;)
[21:47] Postmodernist: raynos1: Because they fired the PHP guy and I had to throw away the "model" code that was spaghetti-coded through the PHP
[21:47] raynos1: Oh then rewrite the rest of the PHP too :D
[21:48] jerrysv: raynos1: wish life were that simple :)
[21:48] Postmodernist: raynos1: Rewrite 5,526 lines of view/controller code?
[21:48] jerrysv: it's like the zappos guy that said he only had 6 blackberry users.
[21:48] raynos1: Postmodernist: Maintain PHP4 code?
[21:48] raynos1: Pick your poison :)
[21:48] Postmodernist: raynos1: Instead, I just rewrote the stuff that touches the database in node.js (2,184 lines of code)
[21:48] Postmodernist: raynos1: It is PHP5
[21:48] raynos1: Depends whether the PHP code is shit or not.
[21:49] raynos1: You've got the model code in node already so you got some kind of communication
[21:49] Postmodernist: raynos1: Well, it doesn't do too much other than templating and generating HTML from the JSON objects returned by my model
[21:49] ardcore has joined the channel
[21:49] raynos1: start moving the views to node and get the HTML over your communication
[21:50] Postmodernist: Yes, the PHP pulls JSON objects from the node.js (I coded that)
[21:50] raynos1: Then when the views are ported start working on the collections, then replace apache/nginx with node :)
[21:50] brianmario has joined the channel
[21:50] Postmodernist: raynos1: Yes, I also got rid of the Apache and replaced it with nginx (FastCGI for PHP)
[21:51] raynos1: Again it really depends on how good the PHP5 code is. If its maintainable then meh.
[21:51] Postmodernist: Much faster now :)
[21:51] Postmodernist: right
[21:51] Postmodernist: We're going to have to "just go with it" even if it's not great for now until there is more time.
[21:51] raynos1: If its not maintainable then you'll prefer moving it to node. 
[21:51] raynos1: I guess so.
[21:52] wookiehangover has joined the channel
[21:52] Bwen has joined the channel
[21:52] tbranyen: saw some pretty nice php code recently the underscore clone
[21:52] raynos1: I keep thinking people only work on one project at a time ;)
[21:52] tbranyen: sure the namespace syntax is ugly as shit
[21:52] Venom_X_ has joined the channel
[21:52] raynos1: They did a php underscore clone?
[21:52] ardcore has left the channel
[21:52] Postmodernist: I consider it a victory that we no longer have model code in PHP files
[21:52] tbranyen: raynos1: yeah and there is a lua one too
[21:52] tbranyen: xD
[21:52] CiRlE has joined the channel
[21:52] raynos1: link to a github?
[21:53] tbranyen: i don't have it handy, you can search for it tho
[21:53] raynos1: I'm trying. I'll find it
[21:53] Postmodernist: The HTML in the PHP code is pretty bad (lots of stuff in the body that should be in the head)
[21:54] Renegade001 has left the channel
[21:55] raynos1: Got a general question for the node.js community.
[21:55] raynos1: As a student is it possible to get a part-time remote internship in the node.js sector?
[21:55] raynos1: I'm going to take a couple of months building up my node.js portfolio and was wandering whether it's realistic.
[21:55] CIA-90: node: 03Ryan Dahl 07master * r85934bc 10/ src/node.cc : Remove libev/macos kqueue override - goes in libuv - http://bit.ly/llkgJe
[21:56] mjr_: raynos1: I think nodejitsu is doing that
[21:56] kmiyashiro: if I have parameters in my query string, those should post correctly, right?
[21:56] kmiyashiro: if I use http.request with method: 'POST' in the options
[21:56] CiRlE has joined the channel
[21:57] TooTallNate: ryah: how come OSX uses kqueue? Or rather, how come libev doesn't pick that?
[21:57] ryah: it used to be buggy
[21:57] raynos1: mjr_: But they wont be recruiting in a few months time. But it's good to see there are some oppurtunities
[21:57] tdegrunt has joined the channel
[21:58] tarpad has left the channel
[21:58] wadey has joined the channel
[21:59] Postmodernist: raynos1: I found a wacky enough business guy to work for that didn't what language I used.
[21:59] raynos1: didn't care ?
[22:00] Postmodernist: raynos1: Right
[22:00] Opaque has joined the channel
[22:00] AvianFlu has joined the channel
[22:01] openpercept has joined the channel
[22:02] kohai has joined the channel
[22:02] kohai: Twitter Connection Successful!
[22:02] Marak: kohai: introduce yourself
[22:02] Marak: kohai: introduce
[22:02] Marak: fail
[22:02] Marak: lunch time
[22:02] kohai: @NodeKohai: hello chello
[22:03] Marak: okay, welcome to the #nodejs spam channel
[22:03] Marak: ryah: feel free to kill kohai if you want, im going to lunch, hope he behaves
[22:03] Marak: ;-)
[22:03] themiddleman_itv has joined the channel
[22:03] kohai: @engrishsmitelli: Hey everyone node.js / MongoDB prostitutes ... what a Linux or the least amount of sadness that gives you such a distribution?
[22:03] tjholowaychuk: ryah: can't reproduce it consistently yet, it's kinda odd, no issue when stepping through with the debugger, and when running the tests they pass 3/4 times
[22:03] tjholowaychuk: which is what I'm finding with the stand-alone test as well
[22:03] tjholowaychuk: kinda funky
[22:03] kohai: @dylanized: But they didn't answer any of the submitted questions on Node.js (including mine)... maybe somethin's cookin? #nodeonrails
[22:03] tjholowaychuk: will check it out some more in a minute
[22:04] ryah: tjholowaychuk: thanks for looking into it
[22:04] tjholowaychuk: np
[22:04] puffpio has joined the channel
[22:05] mbrevoort has joined the channel
[22:06] Bwen: I want to program a basic multi player game server. Not for browsers. With a client like Unity3D maybe. My first choice was C++ and started to look at event loop libs etc... And now i'm wondering if it would be a good idea to use NodeJS as server. Any ideas?
[22:06] hassox has joined the channel
[22:07] kohai: @noopable: RT @_yps: node.js + CouchDB == Crazy Delicious by Mikeal Rogers http://t.co/klijhpa
[22:07] dyer has joined the channel
[22:07] raynos1: Bwen: it depends. You'll have fun trying to connect a front end client upto node.js. 
[22:07] Wa has joined the channel
[22:07] raynos1: Someone should have a nice openGL driver lying around though
[22:08] Bwen: I dont understand why :p
[22:08] raynos1: Oh as a server. 
[22:08] raynos1: As a server it should be fine. 
[22:08] raynos1: I was thinking of using nodejs as both the server and the client.
[22:09] bingomanatee has joined the channel
[22:09] Bwen: no no no
[22:09] Bwen: just nodejs as the server that handles the user inputs
[22:09] raynos1: Yes. it can handle that.
[22:09] raynos1: Do you know any js?
[22:09] Bwen: some :)
[22:09] Bwen: but hey its all about learning for this project so, its all good
[22:10] Bwen: I was wonderiing how scalable it'll get if I build around nodejs
[22:11] rfay has joined the channel
[22:11] Bwen: I guess it depends about how I make it :P
[22:11] gkatsev: yep
[22:11] gkatsev: node is pretty scalable
[22:11] gm___ has joined the channel
[22:11] raynos1: There aren't really any libraries or abstractions tailored for a multiplayer game engine
[22:11] raynos1: Althought there was something in the weeklyjs or the dailyjs
[22:12] kohai: @mensoh: Looking at some #nodejs stuff after a tip from Erik, this stuff looks quite amazing http://bit.ly/jNc9si
[22:12] kohai: @smaldini: RT @mraible: Node.js is 2x faster than @playframework - http://bit.ly/fODdnP
[22:12] davidbanham has joined the channel
[22:13] Bwen: raynos1: well I wasnt to make the multiplayer game engine... its the fun part and also I get to make sure its the way I want it
[22:13] galaxywatcher has joined the channel
[22:13] SubStack: Bwen: you could use dnode to get the servers and clients to talk to each other http://github.com/substack/dnode
[22:13] raynos1: Oh in that case node.js has the IO ready
[22:13] Hamms has joined the channel
[22:14] kohai: @ryah: #nodejs powering hamburg foosball tables http://digitalfoosball.com/ my life is now complete
[22:14] raynos1: SubStack: the clients aren't in node, doesn't that mean yoou need to write a dnode client in C++?
[22:14] kohai: @jc1arke: RT @ryah: #nodejs powering hamburg foosball tables http://digitalfoosball.com/ my life is now complete
[22:14] SubStack: raynos1: probably, but somebody already wrote a dnode-java so it's possible
[22:15] kohai: @pokesafari: @ryah nice site!  #nodejs
[22:15] kohai: @newsyc50: DIY node.js server on Amazon EC2 http://cuppster.com/2011/05/12/diy-node-js-server-on-amazon-ec2 (http://bit.ly/lX26Zv)
[22:15] raynos1: True. I think TCP sockets are more useful
[22:15] raynos1: or UDP datagrams
[22:15] kohai: @stagas: RT @ryah: #nodejs powering hamburg foosball tables http://digitalfoosball.com/ my life is now complete
[22:16] kohai: @bdittmer: RT @ryah: #nodejs powering hamburg foosball tables http://digitalfoosball.com/ my life is now complete
[22:16] fakewaffle: kohai: you are really annoying
[22:16] raynos1: I agree.
[22:16] kohai: @uwe_: .@scalarium seems to be the second mentionable company that provides #nodejs app hosting services next to @joyent (soon?).
[22:16] mscdex: heh
[22:16] colinclark has joined the channel
[22:16] raynos1: Why does twitter not stay quiet :(
[22:16] kohai has joined the channel
[22:17] ryah: damn
[22:17] fakewaffle: lol
[22:17] fakewaffle: go to twitter if you want to see twitter, right?!
[22:17] mscdex: probably Marak's bot
[22:17] kohai: @rosstimson: RT @ryah: #nodejs powering hamburg foosball tables http://digitalfoosball.com/ my life is now complete
[22:17] ryah: Marak: i like the twitter bot, but can you silence the RTs ?
[22:17] ryah: marak: kickbanning for now
[22:17] ezilman has joined the channel
[22:18] mbrevoort has joined the channel
[22:19] Nexxy: poor kohai
[22:19] chjj: !
[22:19] chjj: captialize nexxy
[22:19] chjj: d
[22:19] Nexxy: wow @ the foosball thing
[22:19] fakewaffle: Nexxy--
[22:19] v8bot:  fakewaffle has taken a beer from Nexxy. Nexxy now has 4 beers.
[22:19] Nexxy: fakewaffle, !! ;<
[22:20] chjj: v8: '/me needs more web scale'.blink()
[22:20] v8bot: chjj: "<blink>/me needs more web scale</blink>"
[22:20] CiRlE has joined the channel
[22:20] Nexxy: what did I do? ;<
[22:20] `3rdEden: v8 'chjj thats a bold statement of yours'.bold()
[22:20] v8bot: `3rdEden: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[22:20] `3rdEden: YUNOWORK
[22:21] `3rdEden: v8: 'chjj thats a bold statement of yours'.bold()
[22:21] v8bot: `3rdEden: "<b>chjj thats a bold statement of yours</b>"
[22:21] chjj: v8: 'oh i see what you did there'.fixed()
[22:21] v8bot: chjj: "<tt>oh i see what you did there</tt>"
[22:21] fakewaffle: Sympathizing for kohai
[22:21] Nexxy: bots can have feelings too you know ;3
[22:21] raynos1: chjj: Abusing .blink you devil
[22:21] chjj: these methods on the string prototype are the only templating engine worth using
[22:21] fakewaffle: not yet
[22:22] Nexxy: chjj, no templating? -_-
[22:22] chjj: .blink is my only god
[22:22] Nexxy: what is your damage
[22:22] chjj: no templating, just .blink
[22:22] Nexxy: lol.
[22:22] chjj: and .fixed, .bold, .small, .big
[22:22] Nexxy: how about .blinding-yellow and .dizzying-blue
[22:22] chjj: who needs a templating engine when you have those?
[22:22] `3rdEden: v8: 'not a big deal'.big()
[22:22] v8bot: `3rdEden: "<big>not a big deal</big>"
[22:22] raynos1: How many of those exist -.-
[22:23] TomY has joined the channel
[22:23] chjj: v8: 'a lot'.small()
[22:23] v8bot: chjj: "<small>a lot</small>"
[22:23] `3rdEden: v8: 'whats'.sub()
[22:23] v8bot: `3rdEden: "<sub>whats</sub>"
[22:23] chjj: v8: 'up
[22:23] v8bot: chjj: SyntaxError: Unexpected token ILLEGAL
[22:23] chjj: v8: 'up'.sup()
[22:23] v8bot: chjj: "<sup>up</sup>"
[22:23] fakewaffle: anyone have an example of recursion with callbacks? my brain hurts
[22:23] chjj: !
[22:23] raynos1: fakewaffle: thats too vague
[22:23] chjj: fakewaffle: recursion for what?
[22:24] `3rdEden: v8: 'sub'.sup() + 'sup'.sub()
[22:24] v8bot: `3rdEden: "<sup>sub</sup><sub>sup</sub>"
[22:24] fakewaffle: doing a db read, but want to do more of them, and pass on the data to the next
[22:25] Nexxy: fakewaffle, sql?
[22:25] fakewaffle: Nexxy: yeah
[22:25] chjj: why does that necessitate recursion? ...oh, do you want like a serial loop?
[22:25] Nexxy: sounds like you have a bad db structure if you have to do that
[22:25] Nexxy: can you at least nest your statements instead?
[22:25] `3rdEden: chjj so its .sup .sub .big .small .italics .bold .blink .strike .fontsize .fontcolor .anchor \o/
[22:25] fakewaffle: it's like cakephp's contain feature
[22:25] Nexxy: unless you're doing something super crazy
[22:26] `3rdEden: or and .link
[22:26] chjj: `3rdEden: you forgot link
[22:26] chjj: v8: 'haha'.link('asdsa')
[22:26] v8bot: chjj: "<a href=\"asdsa\">haha</a>"
[22:26] chjj: and fixed
[22:26] fakewaffle: Nexxy: the way the model is abstracted, i cannot just append to the last statement, since the model is data source agnostic
[22:26] chjj: you forgot fixed too!
[22:26] chjj: v8: 'fixed'.fixed()
[22:26] v8bot: chjj: "<tt>fixed</tt>"
[22:27] Nexxy: fakewaffle, oh, ew... orm on sql ;<
[22:27] Nexxy: good luck!
[22:27] raynos1: fakewaffle: http://jsfiddle.net/Raynos/2vj7U/3/ recursion !
[22:27] fakewaffle: Nexxy: it not the mysql that is giving me trouble, i have all that implemented
[22:27] Nexxy: the whole thing is just too messy for me
[22:27] Nexxy: you're braver than I
[22:27] chjj: coding for the clientside makes me want to stab myself in the eye with a dull pencil
[22:27] chjj: =(
[22:28] Marak: ryah there is suppose to be  RT tolerance, ill have AvianFlu look into it
[22:28] dyer has joined the channel
[22:28] dyer has joined the channel
[22:28] hij1nx has joined the channel
[22:29] raynos1: fakewaffle: you might want to look at deferreds. Do a whole bunch of reads then pass the data onto one source.
[22:29] fakewaffle: raynos1: source could be different  for each model though
[22:29] raynos1: I mean to a callback
[22:30] fakewaffle: Posts is sql, users might be mongodb, pics, file based
[22:30] raynos1: Then you probably want something like step.
[22:30] fakewaffle: i havent heard of that
[22:31] raynos1: https://github.com/creationix/step
[22:31] raynos1: Basically pasts the result onto the next callback
[22:31] fakewaffle: raynos1: ok ty :)
[22:31] chjj: lets you program in a more prodecural looking way
[22:31] chjj: more linear
[22:31] raynos1: It avoids the nesting 
[22:31] raynos1: chjj: Is using things like Step a crutch for "not doing functional style programming"
[22:32] fakewaffle: looks like it might work
[22:32] secoif has joined the channel
[22:32] tjholowaychuk: it's more a crutch for not abstracting your logic
[22:32] tjholowaychuk: depends on the use
[22:32] raynos1: I guess so.
[22:33] chjj: raynos1: in any of the modules ive written, ive never used it, because i didnt want my module to have dependencies like step
[22:33] chjj: so i havent found it to be terribly necessary
[22:33] raynos1: chjj: makes sense. 
[22:33] tjholowaychuk: chjj: yeah it should only be an app-level thing
[22:33] tjholowaychuk: if at all
[22:33] chjj: its easy if you just want to get things done
[22:33] chjj: yeah, ive used it in apps
[22:33] raynos1: I can imagine it being useful for database things. They tend to have callbacks nested 4 deep.
[22:33] mikeal has joined the channel
[22:33] fakewaffle: i dont know how many functions i would be passing though
[22:34] secoif: chjj	if you can bundle your deps + specific verision into the package, does depending on other libraries really matter?
[22:34] raynos1: .apply(this, array)
[22:34] secoif: chjj: ^^
[22:34] tjholowaychuk: secoif: it's just ugly mostly, that's like using require('noop')
[22:34] chjj: secoif: i just dont feel like depending on general utility things for a module
[22:35] raynos1: fakewaffle: It can take as many functions as you want. You can call it with an array through Step.apply(this, [f1,f2,f3,...])
[22:35] baoist has joined the channel
[22:35] fakewaffle: ok
[22:35] raynos1: Just make sure your actual functions are set up properly.
[22:35] raynos1: chjj: What about underscore? I would be lost without my underscore :(
[22:35] secoif: yeah I was jsut about to mention underscore
[22:35] secoif: means you can port to client side
[22:35] secoif: forEach
[22:36] chjj: raynos1: i would never want to depend on underscore for a module, an app might be a different story
[22:36] tjholowaychuk: ryah: definitely seems to be a funky race condition with abortIncoming() shifting all of the requests
[22:36] chjj: but say you were writing a database driver or something, why would you want to have underscore as a dependency?
[22:36] tjholowaychuk: in my case followed by socket.end()
[22:36] tjholowaychuk: which tries the shift again
[22:37] tjholowaychuk: though abortIncoming() just removed them all
[22:37] raynos1: Because ender builds on npm I can imagine a lot of client side libraries will start to be build with npm packages. So for anything that has client side use underscore is nice.
[22:37] raynos1: For anything node specific you dont need it.
[22:38] tjholowaychuk: :s
[22:38] chjj: well im mostly talking about node specific things, let me look at my repos and see how many non-node things ive written
[22:38] tjholowaychuk: why the hell is ender using npm
[22:38] raynos1: To find modules.
[22:38] SubStack: browserify it!
[22:38] tjholowaychuk: right on lol
[22:38] catch has joined the channel
[22:39] raynos1: It also uses npm to support package.json
[22:39] raynos1: So you now have a package.json for your server setup and your client side js package.
[22:39] harth has joined the channel
[22:39] rauchg: it would be cool for them to use npm
[22:39] sonnym1 has joined the channel
[22:39] rauchg: but have a different registry
[22:39] tjholowaychuk: yeah
[22:39] rauchg: so when i want to search npm modules
[22:39] tjholowaychuk: that would be way better
[22:39] rauchg: i can separate client and server side
[22:39] raynos1: Yes I was thinking that.
[22:39] SubStack: oh wait so ender is just a curated list of modules?
[22:40] raynos1: There is micro.js already
[22:40] SubStack: that sounds... lame?
[22:40] raynos1: ender is a commandline utility for packaging client side modules
[22:40] raynos1: http://ender.no.de/
[22:40] raynos1: It's basically saying stop using one big framework for everything and only bundle the micro frameworks you want.
[22:40] tjholowaychuk: looks kinda like my asset thing https://github.com/visionmedia/asset
[22:41] SubStack: raynos1: the readme doesn't make that clear
[22:41] raynos1: the but why section is pretty detailed
[22:41] frostbytten has joined the channel
[22:41] ezilman has joined the channel
[22:42] raynos1: It also gives module developers a namespacing system. and some underlying API
[22:42] secoif: ender does't seem to know what it's doing to me
[22:42] secoif: or can't communicate it properly
[22:42] raynos1: Yes I did find that too.
[22:42] raynos1: They've changed their mind from what it should be.
[22:42] SubStack: the fuck is this about: welcome to you're "doom!"
[22:43] SubStack: @ ender.no.de
[22:43] tjholowaychuk: it's like, jquery but not jquery
[22:43] secoif: I think it's from an SNL  skit
[22:43] SubStack: "you're"?
[22:43] secoif: yep
[22:43] raynos1: Thats not the only spelling mistake ;)
[22:43] raynos1: The idea behind ender is nice though
[22:43] ryanseddon has joined the channel
[22:43] benmonty has joined the channel
[22:43] jerrysv: ender is awesome
[22:43] tjholowaychuk: abstraction is always nice
[22:44] secoif: what do you guys think of the requirejs stuff?
[22:44] boogyman has joined the channel
[22:44] raynos1: Modularize client side frameworks,  Bring npm to the client, Replace the require system with a simple global namespace you can hook into
[22:44] raynos1: secoif: pure awesome.
[22:44] secoif: I like the require system
[22:44] raynos1: What happened to the asynchronous nodejs require? Didn't we have one?
[22:44] secoif: aren't global namespaces == evil
[22:44] __tosh has joined the channel
[22:45] secoif: ?
[22:45] SubStack: raynos1: no
[22:45] raynos1: I'm sure we did ;)
[22:45] SubStack: global namespaces suck
[22:45] SubStack: require() <3
[22:45] fakewaffle: raynos1++
[22:45] monteslu has left the channel
[22:45] v8bot:  fakewaffle has given a beer to raynos1. raynos1 now has 1 beers.
[22:45] raynos1: secoif: depends
[22:45] secoif: what do you mean bring npm to the client
[22:45] ryah has joined the channel
[22:45] SubStack: "simple global namespace" is what you get by default in the browser
[22:45] SubStack: and it sucks so hardcore
[22:45] secoif: do we want our users to have to install frameworks before they can use the site?
[22:46] raynos1: But we upgrade on that global namespace by using requirejs
[22:46] raynos1: Then we just store it in the callback and remove it from global scope
[22:46] secoif: to use this site you must fist install underscore?
[22:46] mikegerwitz: secoif: Namespacing is just another way to organize your code. It's no different than require(). require is also global. (Aside from the dynamic loading, obviously)
[22:46] raynos1: secoif: ...
[22:46] SubStack: I don't like how requirejs has async require()
[22:46] raynos1: SubStack: are you serious?
[22:46] jerrysv: speaking of beer, i have a play date at bailey's taproom. hope to be able to log in tomorrow, this was fun
[22:46] tjholowaychuk: i dont like any of the client-side require things
[22:46] tjholowaychuk: that actually perform io
[22:46] raynos1: secoif: you install underscore by downloading the javascript file ;)
[22:46] tjholowaychuk: just fake it
[22:47] SubStack: raynos1: absolutely, async require() means I have to write stuff differently in the browser
[22:47] towski has joined the channel
[22:47] secoif: ha, yeah I know i wanted to know what you meant by npm on the client
[22:47] raynos1: SubStack: but sync require() doesn't work.
[22:47] SubStack: raynos1: bullshit
[22:47] secoif: I have to agreee with SubStack
[22:47] SubStack: raynos1: https://github.com/substack/node-browserify
[22:47] secoif: they can use a similar mechanism
[22:47] SubStack: node-style require()
[22:47] secoif: but don't; call it require
[22:47] raynos1: Without preloading your libraries how?
[22:47] raynos1: Are you just gonna sit around blocking
[22:47] raynos1: SubStack: thats not the same.
[22:48] SubStack: synchronous require() doesn't mean you need to do synchronous xhr
[22:48] raynos1: Your compiling your js there
[22:48] raynos1: your just taking a synchronous require() call and compiling it into an asynchronous call
[22:48] secoif: raynos1, SubStack I prefer https://github.com/sstephenson/stitch
[22:48] SubStack: *you're
[22:48] raynos1: SubStack: I never learned those you'res.
[22:48] SubStack: raynos1: I don't follow what you're saying
[22:48] secoif: couldn't get browserify to work correctly
[22:49] tjholowaychuk: i wonder how 37signals feels about me making fun of them and them using my stuff
[22:49] raynos1: SubStack: I misinterpreted.
[22:49] raynos1: What your doing there is preloading your code.
[22:49] raynos1: That is indeed an option.
[22:49] tjholowaychuk: Cakefile
[22:49] SubStack: secoif: oh stitch looks pretty similar to how browserify does it
[22:49] tjholowaychuk: woot...
[22:50] secoif: yep, i'm pretty sure it's the same concept
[22:50] mbrevoort has joined the channel
[22:50] SubStack: raynos1: but your statement "sync require() doesn't work" is false
[22:50] SubStack: that's why I called bullshit on it
[22:50] raynos1: I meant it doesnt work without preloading the code your requiring.
[22:50] raynos1: All your doing then is fetching it from memory
[22:50] secoif: yeah i don't know best way to get around the preloading everything
[22:51] SubStack: why would you want to get around it?
[22:51] raynos1: SubStack: increased load times
[22:51] SubStack: it means the browser cache can work like it's supposed to
[22:51] beriberikix has joined the channel
[22:51] secoif: I guess, but if i only require a certain module for a certain section of the site
[22:51] raynos1: I personally don't like the fact require is synchronous ;)
[22:52] sechrist: raynos1: you want your entire application inside of a closure?
[22:52] secoif: I feel bad loading it unnecessarily
[22:52] raynos1: sechrist: always
[22:52] perezd has joined the channel
[22:52] raynos1: All my code is always in a closure.
[22:52] SubStack: that sounds really pointless
[22:52] secoif: I'm sorry everyone is beating down on you raynos1 
[22:52] sechrist: require('sys',function(err,res){if(!err){doCode}});
[22:52] raynos1: Why?
[22:52] secoif: I don't want your feelings to get hurt
[22:53] secoif: lol
[22:53] SubStack: I don't care about feelings, silly ideas should be ridiculed
[22:53] eyesUnclouded has joined the channel
[22:53] secoif: Agreed
[22:53] sechrist: SubStack++
[22:53] v8bot:  sechrist has given a beer to SubStack. SubStack now has 28 beers.
[22:53] raynos1: is require blocking though?
[22:53] mikegerwitz: Disagreed
[22:53] sechrist: Damn dude, drink some of those
[22:53] mikegerwitz: Ridcule is never appropriate. It's childish.
[22:53] beriberikix: tjholowaychuk: looking at your finance app, do you recommend using controllers for all your routes?
[22:53] tjholowaychuk: beriberikix: nope
[22:53] sechrist: mikegerwitz: you're ridiculing now
[22:53] tjholowaychuk: use whatever works for the routes you are defining :p
[22:53] sechrist: ridiculing the ridicule
[22:53] SubStack: sechrist: not sure how!
[22:53] stepheneb has joined the channel
[22:54] MooGoo: anyone here know shit about v8
[22:54] sechrist: I know v8 about shit
[22:54] raynos1: I don't see why require should be synchronous. It's asking the file IO to load some calls. It should be non blocking.
[22:54] beriberikix: tjholowaychuk: but it looks so clean :p
[22:54] tjholowaychuk: haha
[22:54] MooGoo: ok sechrist, since you are a guru
[22:54] hassox has joined the channel
[22:54] sechrist: v8bot: console.log('shit');
[22:54] v8bot: sechrist: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[22:54] MooGoo: how to you access the scope chain in v8
[22:54] sechrist: v8: console.log('shit');
[22:54] v8bot: sechrist: "shit"
[22:54] sechrist: there we go
[22:55] MooGoo: that's helpful
[22:55] Qbix1: thanks I solved it :) yay
[22:55] Qbix1: check out the hook while my DJ revolves it!
[22:55] kawaz_home has joined the channel
[22:55] beriberikix: tjholowaychuk: is that way you made express-resource?
[22:55] raynos1: SubStack: for the record all my client side code is in a closure. the node code isn't.
[22:56] SubStack: require() is something you do at setup
[22:56] mikegerwitz: raynos1: node throws it in a closure for you :)
[22:56] SubStack: blocking at setup time is pertty damned convenient
[22:56] tjholowaychuk: beriberikix: well I made express-resource for resourceful routing
[22:56] MooGoo: it's a good thing no one talks in #v8
[22:56] sechrist: asynchronous lazy loading on the clientside is more trouble than it's worth unless you're going to cut substantial CDN bills by doing so
[22:56] raynos1: mikegerwitz: I know I get a unique module scope :)
[22:56] tjholowaychuk: not all routes are backed by resources
[22:56] SubStack: sechrist: hah totally
[22:56] MooGoo: you can write your own async require if you really want
[22:56] MooGoo: it's not hard
[22:56] raynos1: SubStack: but we don't have to block at setup. We could just as easily have used async calls.
[22:56] justinTNT has joined the channel
[22:56] sechrist: SubStack: I had this discussion in person with you iirc lol
[22:57] beriberikix: tjholowaychuk: ah, very true.
[22:57] SubStack: at dodgeball trampoline, pretty sure!
[22:57] skyloid has joined the channel
[22:57] sechrist: you going to jsbbq?
[22:57] beriberikix: tjholowaychuk: I think more api = route, which is not always the case
[22:57] raynos1: MooGoo but that requires boot strapping, and that's a pain.
[22:57] SubStack: sechrist: of course, it's only a few blocks away from me
[22:57] sechrist: hot
[22:58] raynos1: sechrist: Depends really. I can see use cases for lazy loading client code and use cases for packaging and loading it once.
[22:58] Aria has joined the channel
[22:58] MooGoo: async require would work fine if JS supported continuations
[22:59] SubStack: it does
[22:59] sechrist: require() on the clientside needs to block unless you really really want to fight code execution flow
[22:59] SubStack: unless you mean in the "yield" sense and not the mathematical sense?
[22:59] mikeal has joined the channel
[22:59] raynos1: sechrist: on the client it doesnt.
[22:59] MooGoo: in the yield sense
[22:59] MooGoo: I know shit about math
[22:59] sechrist: well it doesn't because it's already preloaded
[22:59] sechrist: which is why it's so pretty
[23:00] raynos1: sechrist: requirejs is a fine platform for this.
[23:00] sechrist: oh I meant browserify
[23:00] SubStack: raynos1: I like it much better when I don't need to indent whenever I require() some module
[23:00] sechrist: requirejs with the callbacks is eh
[23:00] SubStack: also I like organizing code the node way in browser-side code
[23:00] raynos1: SubStack: You don't really.
[23:00] raynos1: You just pass an array to require at the start of the file and don't indent.
[23:01] SubStack: that sounds really annoying
[23:01] beriberikix: tjholowaychuk: gonna mess around with resource, clean up some of my APIs
[23:01] tjholowaychuk: beriberikix: cool man
[23:01] SubStack: and inconsistent
[23:01] tjholowaychuk: the api is not finished, but some of the autoloading stuff etc is nice
[23:01] SubStack: raynos1: in a sense you don't ever need to indent
[23:01] raynos1: SubStack: were stuck with the sync require because it's been here all along
[23:01] SubStack: but I like consistent indentation
[23:01] tjholowaychuk: which i dont think i used in finance
[23:01] MooGoo: SOMEONE HELP ME WRITE V8 EXTENSION PLZ
[23:01] dies_el has joined the channel
[23:01] sechrist: MooGoo: did you post on the mailing list?
[23:01] SubStack: raynos1: node used to have require.async but it sucked and nobody used it so it went away
[23:01] MooGoo: no
[23:01] sechrist: the v8 mailing list has a similar question a couple of days old
[23:02] MooGoo: but I've searched through them
[23:02] sechrist: with no replies
[23:02] MooGoo: yea
[23:02] MooGoo: well
[23:02] MooGoo: I think I saw that
[23:02] beriberikix:  tjholowaychuk: ya, saw that. Also like the content negotiating - often overlooked
[23:02] MooGoo: v8 docs arent that great
[23:02] raynos1: SubStack: It's coding style and what people are familiar with ;)
[23:02] raynos1: If we had an async one we could play nicely with the browser.
[23:02] tjholowaychuk: beriberikix: yeah it's tough to get that stuff right as far as flexibility goes but i've been building the api up from the bottom
[23:04] MooGoo: maybe I should just use SpiderNode
[23:04] zpao: don't use spidernode
[23:04] MooGoo: wai
[23:04] MooGoo: I leik
[23:04] zpao: it's nowhere near ready
[23:04] MooGoo: is it ready for a super important irc bot
[23:04] raynos1: Is it just me that find it annoying that require is the once piece of blocking IO. I like my symmetry :(
[23:05] MooGoo: yes
[23:05] MooGoo: just you
[23:05] SubStack: hahaha
[23:05] SubStack: pragmatism prevails!
[23:05] mc_greeny1 has joined the channel
[23:05] MooGoo: my javascript looks stupid enough as it is without wrapping everything in function(){ }
[23:06] SubStack: MooGoo++
[23:06] v8bot:  SubStack has given a beer to MooGoo. MooGoo now has 2 beers.
[23:06] beriberikix: tjholowaychuk: well, I like how you can do them as callbacks
[23:06] mikeal: i find it's actually important that require is sync
[23:06] mikeal: it makes the setup setup phase block
[23:06] dingomanatee: ACTION is to practical for pragmatism
[23:06] saschagehlich has joined the channel
[23:06] Aria: Not just you, too, raynos1. But yeah.
[23:06] raynos1: mikeal: why is that important?
[23:06] zpao: MooGoo: we're rewriting stuff. buffers are hard because spidermonkey & v8 differ in a critical way there. i mean, tip "runs" and so long as youre fine with ppotentially crappy errors and random crashes go for it
[23:06] mikeal: because understanding the difference between blocking the event system and not blocking it is important when writing complex node programs
[23:07] MooGoo: what was the motivation for making SpiderMonkey
[23:07] mikeal: the setup phase is the first one you deal with
[23:07] MooGoo: er
[23:07] mikeal: everything you do in the module scope blocks
[23:07] MooGoo: SpiderNode
[23:07] dingomanatee: MooGoo: apparently you have no idea how stupid your JS is supposed to look :D
[23:07] mikeal: and that includes require
[23:07] mikeal: blocking the event system is as important to understand as how to use callbacks for not blocking it
[23:07] mscdex: node.js rules!
[23:07] MooGoo: it's not like Node is actually 100% nonblocking
[23:07] MooGoo: everything blocks
[23:07] raynos1: mikeal: I don't see how it's important that require blocks though
[23:08] MooGoo: use Erlang
[23:08] zpao: MooGoo: my motivation was: node looked cool, but i work on firefox and use spidermonkey's js extensions every day and i wanted them in node
[23:08] mikeal: the setup phase blocks
[23:08] beriberikix: tjholowaychuk: an enhancement would be templates, but that's easy enough for me to through together
[23:08] beriberikix: *throw
[23:08] mikeal: require only blocks when you use a third party module
[23:08] MooGoo: yea...
[23:08] MooGoo: I really like some of the SpiderMonkey JS stuff
[23:08] mikeal: all of the node's core modules are already in memory
[23:08] sechrist: man, Fabrice Bellard is such a badass
[23:08] MooGoo: I wonder how difficult it would be to add them to v8
[23:08] mikeal: so the setup phase blocks, it all happens before nextTick
[23:08] qbert has joined the channel
[23:09] mikeal: it's nice to have that assumption
[23:09] beriberikix_ has joined the channel
[23:09] mikeal: to be able to take that for granted, it would be very complicated if that were not the case
[23:09] raynos1: mikeal: I see. I'm thinking too low level in terms of applications
[23:09] zpao: MooGoo: there's node-proxy to get proxies in there
[23:09] raynos1: The moment you start to create child processes in 3rd party libraries it gets complicated
[23:09] mikeal: think about it this way
[23:10] mikeal: everything you do to setup your program has a lock on the entire node process and context, none of the state can mutate until you're in one of your callbaks
[23:10] mikeal: that's really nice
[23:10] raynos1: Yes I can imagine.
[23:10] mikeal: if things could mutate or ordering wasn't insured, it would suck
[23:10] McMAGIC--Copy has joined the channel
[23:11] sechrist: there we go
[23:11] sechrist: an explanation beyond my "because it feels right"
[23:11] catshirt has joined the channel
[23:11] teemow has joined the channel
[23:11] raynos1: Thanks for that. That's a solid design decision I can get behind.
[23:11] MooGoo: zpao: wait....what...is that like a chatch all for undefined methods?
[23:11] raynos1: MooGoo: yes
[23:12] zpao: MooGoo: it can be used for that yes
[23:12] raynos1: and more. It's lovely ;)
[23:12] MooGoo: what else
[23:12] sechrist: zpao: just use chrome
[23:12] sechrist: problem solved :)
[23:12] raynos1: it's es harmony proxies
[23:12] raynos1: This : http://wiki.ecmascript.org/doku.php?id=harmony:proxies&s=proxy
[23:12] sechrist: I wonder if those will take off
[23:12] perezd: so, I have an issue with socketio, it won't let more than 6 people connect over websockets
[23:12] perezd: where would I even begin to look for whats wrong?
[23:12] MooGoo: there's also node-fibers
[23:13] sechrist: I like that project
[23:13] raynos1: MooGoo: actually best to read these docs : https://github.com/isaacs/node-proxy :)
[23:13] zpao: MooGoo: http://soft.vub.ac.be/~tvcutsem/proxies/ is the best overview of proxies i've found
[23:13] sechrist: I dislike having to use a different version of node
[23:13] sechrist: but
[23:13] MooGoo: cool
[23:13] MooGoo: all that other doc was confusing me
[23:13] MooGoo: I havent gotten node-fibers to work yet but I like the idea
[23:13] zpao: sechrist: heh i do use chrome, but theres a small conflict of interest with the whole developing firefox thing :)
[23:13] mikeal: i really don't like proxies, and i detest fibers
[23:13] mikeal: :)
[23:13] MooGoo: what about continuations in general
[23:14] mikeal: hate them for node
[23:14] mikeal: like them in other languages and system tho
[23:14] meetar: perezd: is that in the docs, or in your experience?
[23:14] mikeal: if you have another way to deal with state mutation they are nice
[23:14] perezd: meetar: its happening to me, physically
[23:14] mikeal: but in node the only thing you have is the callback seperation
[23:14] perezd: after that number of connections, I can send requests, and get heartbearts
[23:14] mikeal: if you remove it all your state can mutate and you can't know it
[23:14] perezd: but I don't respond for some reason
[23:14] perezd: until one of the others drops out
[23:14] mikeal: it's like having threading
[23:14] MooGoo: constant call backs for even trivial shit can get annoying
[23:15] meetar: perezd: that's definitely incorrect
[23:15] perezd: definitely is 
[23:15] perezd: but not sure how to trace it out
[23:15] Adman65 has joined the channel
[23:15] sechrist: woo threading
[23:16] mikeal: that's not actually a problem you're describing though is it
[23:16] sub_pop has joined the channel
[23:16] mikeal: trivial things can be abstracted, node itself is low level but there are already lots of good stuff on top that simplifies the number of callbacks in your own code
[23:16] perezd: not sure how to best debug my socketio problem, but basically I am screwed :(
[23:17] MooGoo: sometimes I'd like to take that simplification a step further
[23:17] MooGoo: it probably shouldnt be used in the core node API
[23:17] aconbere has joined the channel
[23:18] raynos1 has left the channel
[23:18] smlefo has joined the channel
[23:19] smlefo: hi all
[23:19] jesusabdullah: mikeal: Generators? In my node.js? Explain.
[23:20] mikeal: harmony has generators
[23:20] mikeal: and they'e been in spidermonkey for a while
[23:20] perezd: anyone with socketio experience I could potentially pair with?
[23:20] mikeal: actually, everyone should read this 
[23:20] mikeal: http://groups.google.com/group/nodejs/browse_thread/thread/c334947643c80968/9533c06d486c10e6?lnk=gst&q=jashkenas#9533c06d486c10e6
[23:20] meetar: perezd: you can't get it to work with just the basic connection code? and nothing else in the app?
[23:20] mikeal: i am not a coffeescript fan but that post is perfect
[23:20] smlefo: how do I check if a file exists in node.js? I saw the 'path' module for older versions, but I wasn't sure if that's still in and "official"
[23:20] perezd: meetar: I can see connections active and socketio running, I can see heartbeats, and I can send messages, but my system stops sending messages....
[23:21] perezd: so its something in my code, like a design flaw of some sort...
[23:21] perezd: I am using something wrong
[23:21] tyler-iphone: mikeal: y u no like coffescript?
[23:21] meetar: perezd: that's good - that's fixable
[23:21] perezd: meetar: its totally fixable
[23:21] perezd: and totally reproducible 
[23:21] perezd: thats why I need someone with more wisdom than me
[23:21] perezd: not sure how to fix it
[23:21] meetar: perezd: but it just means you have to unit test, which is a pain if you haven't already set them up
[23:21] perezd: I have unit tests
[23:22] perezd: I have a stupid human test I can run that exemplifies the issue for now
[23:22] mkrecny: you can u guys fix our shit?
[23:22] perezd: what
[23:23] meetar: perezd: the unit tests should isolate the bug - apart from that, good luck
[23:24] perezd: ....
[23:24] perezd: thats the most broad answer, ever.
[23:24] perezd: do you use socketio?
[23:24] lmorchard has joined the channel
[23:24] meetar: perezd: :) it was a pretty broad question - yes i do
[23:24] perezd: could I ask you to review a gist file?
[23:25] perezd: and tell me if something is insane?
[23:25] tyler-iphone: perezd: have you tried dnode/nowjs?
[23:25] tyler-iphone: i never use socketio naked anymore
[23:25] meetar: perezd: sure
[23:25] meetar: tyler-iphone: why not?
[23:25] Charuru has joined the channel
[23:25] tyler-iphone: because im lazy and those libraries abstract all the work for me
[23:25] jesusabdullah: mikeal: I guess what I should say is, what do they/you mean by generators?
[23:26] mikeal: http://wiki.ecmascript.org/doku.php?id=harmony:generators
[23:26] jesusabdullah: Thx dawg
[23:27] jesusabdullah: Oh, yields and all that stuff
[23:27] jesusabdullah: Yeah, idk maan
[23:27] jesusabdullah: I like the idea of, say, lazy lists, but I'm not sure I'm a fan of generator-style semantics
[23:27] boogyman has joined the channel
[23:28] jesusabdullah: and I have this feeling somebody's gonna try to do the thing they always do with async python where they try to use generators to make "synchronous-looking" coroutine bullshit
[23:28] mikeal: javascript already lends itself to lazy semantics if you do things in a more functional style and a jquery like api
[23:28] mikeal: i don't think we need language sugar for that
[23:28] tyler-iphone: jesusabdullah: they're doing that with ruby too
[23:28] jesusabdullah: Yuck
[23:29] jesusabdullah: I think you should only abuse generators like that if your language sucks too hard for anything else
[23:29] jesusabdullah: (like python ;) )
[23:29] AddZero has joined the channel
[23:29] jesusabdullah: (I can say this as someone that has used python for a few years >:P )
[23:29] tyler-iphone: i liek the way weepy does it http://weepy.github.com/kaffeine/
[23:29] tyler-iphone: like*
[23:29] mikeal: yeah, function overhead in Python is retarded, they use generators to make up for it
[23:29] Lorentz has joined the channel
[23:29] tyler-iphone: specifically http://weepy.github.com/kaffeine/docs/unwrapping_async_calls.html
[23:29] mikeal: that's not an exaggeration 
[23:29] systemfault: Didn't know it's that bad in python
[23:30] jesusabdullah: Hmm
[23:30] SubStack: generators aren't very flexible
[23:31] jesusabdullah: Exactly mikael! python uses generators because they make functions expensive
[23:31] jesusabdullah: in terms of writing them, I mean
[23:31] mikeal: Python function overhead is no joke
[23:31] SubStack: hard to hack up crazy shit like dnode with generators
[23:31] mikeal: is something alongs the lines of 30x worse than a v8 function that is inlined
[23:32] jesusabdullah: Yeah, dnode-python's gonna be.......interesting.
[23:32] jesusabdullah: To say the least. ;)
[23:32] tyler-iphone: is there anything analogous to python generators for ruby or javascript?
[23:32] jesusabdullah: Well, we were just talking about the introduction of an analogue for jabbascripts
[23:32] mikeal: i think ruby has them, and they are trying to make them happen in js http://wiki.ecmascript.org/doku.php?id=harmony:generators
[23:32] tyler-iphone: i don't even know what they are
[23:32] perezd: rauchg: yt?
[23:33] jesusabdullah: I remember a time when I thought yields in js would be cool
[23:33] jesusabdullah: and, who knows, maybe they could still be
[23:33] tyler-iphone: is a harmony generator different from a harmony proxy?
[23:33] nadirvardar has joined the channel
[23:33] jesusabdullah: harmony is a testbed for future javascript stuff tyler-iphone 
[23:33] jesusabdullah: at least that's my understanding
[23:33] jesusabdullah: harmony proxies are a thing in and of themselves
[23:33] tyler-iphone: jesusabdullah: oh gotcha
[23:33] mikeal: proxies are like getters and setters on crack
[23:33] jesusabdullah: a type of proxy, if you will
[23:33] rauchg: perezd
[23:33] rauchg: yes
[23:34] perezd: could I PM you for a moment? sorry to bother...
[23:34] jesusabdullah: hoxies are pretty hackerly
[23:34] jesusabdullah: I've seen some pretty sweet shit done with them
[23:35] mraleph has joined the channel
[23:35] skyloid has joined the channel
[23:35] jakehow has joined the channel
[23:36] ChrisPartridge has joined the channel
[23:37] mikeal: you know what i don't need
[23:37] mikeal: more features
[23:37] mikeal: in the language
[23:37] mikeal: i need like, bug fixes in http and ssl
[23:37] mikeal: better binary
[23:37] mikeal: maybe weakrefs
[23:37] mikeal: hooks in to the event system
[23:38] mikeal: that's stuff that is actually blocking me from building certain things
[23:38] jesusabdullah: I approve of the idea of a small language from which lots of cool things are built on top of
[23:38] mikeal: all this other shit is just sugar, and increasing the surface area of the language seems like it's mostly a distraction from solving problems that are actually blocking
[23:38] mraleph: putting things into javascript does not fix it.
[23:38] jesusabdullah: ryah has talked about this before, and at least in the context of javascript, I agree
[23:38] mikeal: it's even more true for javascript
[23:39] mraleph: good javascript is dead javascript
[23:39] mikeal: because they can't remove old semantics
[23:39] mikeal: they can only add 
[23:39] jesusabdullah: I think the fact that it's a small language is really helpful
[23:39] mikeal: which means they can't even remove something they don't like for something better/cleaner
[23:39] mikeal: they can literally *only* increase the semantics
[23:39] jesusabdullah: Yeah, one thing I like about coffeescript is that, as a different language, it can "fix" the "broken" parts
[23:39] jesusabdullah: though it too is guilty of adding a few things here and there
[23:39] jesusabdullah: but it hasn't been *too* crazy
[23:39] mikeal: coffeescript is a much better sandbox for experimentation 
[23:40] jesusabdullah: Yeah
[23:40] hij1nx: mikeal: less like crack maybe more like steroids, but that statement has a nice ring to it
[23:40] tjholowaychuk: CS doesnt fix a single thing
[23:40] mikeal: no, crack
[23:40] tyler-iphone: found generators for ruby: http://anthonylewis.com/2007/11/09/ruby-generators/
[23:40] mikeal: cause i don't think it's actually more in a good way :)
[23:40] TooTallNate has joined the channel
[23:40] hij1nx: mikeal: haha, i see
[23:41] mikeal: tjholowaychuk: i'll never user CS, but for those people who want to pontificate about a new language, it's better than them dicking around with javascript
[23:41] jesusabdullah: Well, CS doesn't fundamentally change anything, but arguably it can change some of the things people don't like. For example, default local vars instead of default globals. Easy to fix in coffeescript, and done
[23:41] mikeal: dude, i don't even like getters and setters, it makes the syntax less predictable 
[23:41] tjholowaychuk: mikeal: yeah nothing wrong with prototyping something
[23:41] tjholowaychuk: mikeal: agreed
[23:41] tjholowaychuk: less == more
[23:42] secoif: coco is much better than coffeescript
[23:42] mikeal: totally
[23:42] tyler-iphone: i like how scala does "getters" and "setter"
[23:42] jesusabdullah: I understand the argument that coffeescript splits the community and that it adds this overhead to developers where people end up doing shit to "add support for CS"
[23:42] tyler-iphone: secoif: coco?
[23:42] hij1nx: coco is much better??
[23:42] hij1nx: ugh
[23:42] jesusabdullah: secoif: coco? What is coco
[23:42] chjj: what i would prefer more is to keep the "var" declaration, but have it throw if "var" is excluded instead of implicitly creating a global variable
[23:42] mraleph: mikeal: if you don't like getters and setters then you probably hate proxies :-)
[23:42] mikeal: i don't think it's splitting the community because most of us ignore it :)
[23:42] jesusabdullah: You know, that'd be a good way to do it?
[23:42] mikeal: mraleph: correct!
[23:42] secoif: coco https://github.com/satyr/coco
[23:43] hij1nx: if anything id say kaffeine is tolerable.
[23:43] jesusabdullah: add a "global" declaration, make "use strict" throw errors if you don't explicitly say var or global
[23:43] secoif: makes coffeescript look like a kids toy
[23:43] secoif: (to a degree)
[23:43] jesusabdullah: Something about kaffeine rubbed me the wrong way
[23:43] secoif: "Coco is a CoffeeScript dialect that aims to be more radical and practical."
[23:43] jesusabdullah: but tbh I didn't really give it enough time to make a sound judgement
[23:43] mikeal: you lost me at "coffeescript dialect" :P
[23:44] tjholowaychuk: "a.b.c?.=d.e"
[23:44] tjholowaychuk: wtf
[23:44] tjholowaychuk: is that
[23:44] tjholowaychuk: jesus
[23:44] jesusabdullah: Yeah me too mikael
[23:44] hij1nx: coco + coffee are just good sandboxes for playing around. i'd shoot someone who tried to use it in any kind of production scenario
[23:44] jesusabdullah: It could even be GOOD, but
[23:44] secoif: hij1nx: why?
[23:44] jesusabdullah: hij1nx: Time to blow up the proverbial RoR HQ I guess
[23:44] hij1nx: hehe
[23:44] jesusabdullah: Not that they need any help. They're gonna implode any day now ;)
[23:44] mikeal: i've actually gotten messages on github projects saying "i like this, do you mind if i rewrite it in coffeescript for better readablility and maintainabliity"
[23:44] hij1nx: no standards body
[23:44] hij1nx: no control
[23:44] mikeal: seriously
[23:45] A_Nub has joined the channel
[23:45] jesusabdullah: Collapse under the weight of their own smugness and hipsterism
[23:45] jesusabdullah: mikeal: That's silly.
[23:45] davidbanham has joined the channel
[23:45] A_Nub: heh is there documentation on 0.5-pre?
[23:45] mikeal: it's a little more than silly
[23:45] tyler-iphone: mikeal: do you dislike code thats generated by coffeescript?
[23:45] sonnym has joined the channel
[23:45] mikeal: i respond with something along the lines of "javascript modules should be written in javascript"
[23:45] jesusabdullah: the thing that actually makes *sense* to me is, "hey, I added this thing so I can use it in coffeescript without herping the derp"
[23:46] mikeal: tyler-iphone: i dislike code that *is generated*
[23:46] timmywil has joined the channel
[23:46] tjholowaychuk: jesusabdullah: never
[23:46] tjholowaychuk: lo
[23:46] tjholowaychuk: lol*
[23:46] gazumps has joined the channel
[23:46] tyler-iphone: mikeal: i bet you hate lisp ;)
[23:46] tjholowaychuk: ACTION does not support coffeescript in mah projects
[23:46] jesusabdullah: but "can we just rewrite this thing for no god damned reason other than that I like the whitespace thing" ?
[23:46] jesusabdullah: Fuck that.
[23:46] mikeal: jesusabdullah: they usually add coffeescript as as dep tho, and that's stupid
[23:46] mikeal: tyler-iphone: i like lisp
[23:46] blueadept has joined the channel
[23:46] tjholowaychuk: reality is if you compile shit to js
[23:46] tjholowaychuk: compile it
[23:46] mikeal: i wrote it, like forever ago
[23:46] tjholowaychuk: and deal with that shitty choice
[23:46] jesusabdullah: mikeal: Yeah, I have mixed feelings about that. SubStizzy did that with browserify, and I was like "srsly"
[23:46] tjholowaychuk: dont make me add .coffee shit
[23:46] mikeal: i'll never go back to having a compile step
[23:47] dgathright has joined the channel
[23:47] jesusabdullah: but he was like, "don't even trip dawg npm gots dis shit yo"
[23:47] jesusabdullah: It went down JUST like that
[23:47] secoif: I heard the guys over at now.js saying something like
[23:47] mjr_ has joined the channel
[23:47] jesusabdullah: I wouldn't mind seeing a nice lisp-ish language written for js
[23:47] secoif: they couldnt' ahve done their project without coffeescript
[23:47] jesusabdullah: tssch, they totally could've
[23:48] secoif: though I'm not sure if they are just drunk on the coffeescript sauce
[23:48] tjholowaychuk: haha
[23:48] tjholowaychuk: they must suck then
[23:48] secoif: they were talking about it RE productivity
[23:48] hij1nx: there are so many javascript front-ends right now
[23:48] secoif: ha
[23:48] zeade has joined the channel
[23:48] jesusabdullah: Because coffeescript compiles to javascript, they literally could have written it in javascript since, basically, their coffeescript compile REWROTE IT IN JAVASCRIPT
[23:49] jesusabdullah: hehe
[23:49] hij1nx: https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS
[23:49] mikeal: i think more is better
[23:49] jesusabdullah: Yeah, I think I was actually watching a lisp-->js from that there
[23:49] hij1nx: lots of them are fly-by-night, hot-shit for a second
[23:49] mikeal: it actually reduces the level of fragmentation in the community
[23:49] tjholowaychuk: hij1nx: wow
[23:49] tjholowaychuk: that's alot
[23:49] tjholowaychuk: haha
[23:49] secoif: they could have but I think the idea is that it allows for more sophisticated abstractions
[23:49] hij1nx: mikeal: more is better
[23:49] mraleph: jesusabdullah: because javascript compiles to native code you could have written it directly in native code. BEEP BOP BEEP :-) 
[23:49] zitchie has joined the channel
[23:49] secoif: and reduces implementation time
[23:49] hij1nx: experiment like crazy!
[23:49] secoif: people used to think the same about php
[23:49] mikeal: because these languages will always be niche at best
[23:50] jesusabdullah: mraleph: EXACTLY
[23:50] mikeal: and the people who go after them is essentially fixed
[23:50] secoif: why use php when you have cgi scripts
[23:50] jesusabdullah: hij1nx: Oh snap, there's an entire section of lisp-ish dealios
[23:50] mikeal: so the less any one of them gets in market share the better
[23:50] chjj: compiling to a high level language === bad
[23:50] secoif: the fact rails ahs picked it up means it won't stay niche
[23:50] jesusabdullah: unless rails becomes niche ;)
[23:50] secoif: in fact nodejs is probably more niche than coffeescript right now
[23:50] mikeal: i don't believe that at all
[23:50] secoif: ACTION gasp
[23:51] mikeal: prototype is still niche and they bundled that for go knows how long
[23:51] jesusabdullah: Impossible, since coffeescript depends on node.js
[23:51] olauzon has joined the channel
[23:51] chjj: yeah, that doesnt sound right
[23:51] secoif: jesusabdullah: no it doesn't
[23:51] hij1nx: jesusabdullah: yeah, there's a ton of these. some are dead, some have great ideas, most are lame
[23:51] jesusabdullah: wat
[23:51] jesusabdullah: Last I checked coffeescript's compiler was written in node.js
[23:51] secoif: and again
[23:51] secoif: t
[23:51] jesusabdullah: or rather, in javascript, intended to run on node
[23:51] mikeal: look
[23:52] mikeal: this stuff is all great if you're an academic
[23:52] mikeal: or don't like writing products
[23:52] mikeal: and love dicking around
[23:52] saschagehlich: mjr_: https://gist.github.com/bdb078252f043c1858df << just received this one for the first time ever. do you know where it could come from?
[23:52] mikeal: with your own toy langauge
[23:52] jesusabdullah: Trust me, I *love* dicking around
[23:52] mikeal: i'm actually not knocking it, it can be really fun
[23:52] secoif: I think you guys are discounting it as a toy
[23:52] secoif: it's not about fun
[23:52] mikeal: but if you're interest is writing working production code, you should basically ignore all this shit
[23:52] mikeal: s/you're/your
[23:53] jesusabdullah: I don't think it *intends* to be a toy, but production code often has high stability standards
[23:53] jesusabdullah: Many would even argue that node.js isn't ready for production code
[23:53] jesusabdullah: It really depends on how bleeding edge you're willing to be
[23:53] mikeal: it is more definitely a toy, the quadricoptor is a toy too, you can do a lot of stuff with it, but it's a fuckin toy
[23:53] secoif: wtf, what does coffeescript  have to do with code quality
[23:53] hij1nx: "You don't improve a language by simply adding every feature that someone considers a good idea." - Bjarne Stroustrup
[23:53] jesusabdullah: Many corporations still, umm, "rock" *cough* jsp y'know
[23:53] secoif: the fuck
[23:53] jesusabdullah: hij1nx: He learned that one the hard way ;)
[23:53] secoif: exactly.
[23:53] hij1nx: jesusabdullah: fo sho
[23:53] jesusabdullah: hehe ^__^
[23:53] tjholowaychuk: hij1nx: yeah, im writing a blog post based on that actually
[23:54] tjholowaychuk: really hate that it's trendy to be a clusterfuck
[23:54] hij1nx: tjholowaychuk: nice! looking forward to it
[23:54] mikeal: tjholowaychuk: is it about harmony?
[23:54] tjholowaychuk: mikeal: parts of it
[23:54] mikeal: nice
[23:54] A_Nub has left the channel
[23:54] mjr__ has joined the channel
[23:54] mcantelon has joined the channel
[23:55] mikeal: the part that upsets me
[23:55] mikeal: is that there is stuff in harmony that solves important problems
[23:55] jesusabdullah: I think what I would like to do is make a toy lisp that basically takes js lists as s-expressions and applies the first element to the rest of the elements
[23:55] jesusabdullah: y'know?
[23:55] jesusabdullah: Like, I feel like that should be really easy to do
[23:55] mikeal: and it's languages additions, just new objects in the global scope
[23:55] tjholowaychuk: mikeal: and then stuff to make brendan's language "cool"
[23:55] tjholowaychuk: haha
[23:55] mikeal: it's not language additions
[23:55] jesusabdullah: and then maybe add a few special forms
[23:56] mikeal: i don't know man
[23:56] mikeal: like, we need binary, bad
[23:56] mikeal: we need weak refs
[23:56] jmoyers has joined the channel
[23:56] mikeal: maybe weakmaps althought i can't figure out why
[23:56] mikeal: but who cares, add new objects, it's not a big deal
[23:56] tjholowaychuk: yeah im down for stuff like that
[23:56] mjr_: binary yes, and decimal yes.
[23:56] hij1nx: mikeal: its the overwhelming concern with backward compatibility
[23:56] mikeal: but they've bundled the work with this incompatible release of the language
[23:56] mjr_: Everything else is just nice to have
[23:56] tjholowaychuk: just not adding sugar for classes n shit
[23:57] mikeal: i don't think classes will go in
[23:57] mjr_: binary and int64 are actually preventing us from being able to write programs
[23:57] mikeal: if they do i'll just stop caring about anything they do
[23:57] mjr_: Everything else is just sugar.
[23:57] postwait has joined the channel
[23:57] tjholowaychuk: yeah i'll lose all respect for brendan and friends
[23:57] mikeal: nobody ever said "i could have written this app but i didn't have classes"
[23:57] hij1nx: mjr_: as we heard first hand from br, binary and int64 are on the prop list and are going in for sure
[23:57] jhurliman: mikeal, isn't there already binary support in recent JS VMs? http://www.khronos.org/registry/typedarray/specs/latest/
[23:58] tjholowaychuk: if anything js needs to simplify which i understand might never really happen
[23:58] tjholowaychuk: but hey
[23:58] mikeal: jhurliman: it's not enough
[23:58] hij1nx: mjr_: sorry, [br = be]
[23:58] mikeal: and everyone has admitted it
[23:58] secoif:  tjholowaychuk simplyfly what areas
[23:58] secoif: simplify*   
[23:58] tjholowaychuk: secoif: I'll mention all that in the post
[23:58] tjholowaychuk: people keep asking me
[23:58] tjholowaychuk: so im writing it down
[23:58] secoif: ha
[23:58] tjholowaychuk: haha
[23:58] rauchg: well you can drop `n` from function
[23:58] rauchg: functio ()
[23:58] mikeal: so
[23:58] mikeal: you can't break reverse compat
[23:58] mikeal: like, ever
[23:58] tjholowaychuk: yeah that's the issue
[23:58] mikeal: in javascript
[23:59] mikeal: if that's the case, if that's what we've all agreed has to happen
[23:59] mikeal: then we can't break forward compat either
[23:59] tjholowaychuk: but conceptually it would be nice to simplify, but yeah i agree it will be like 20 years if ever
[23:59] mikeal: it doesn't help people write applications to just increase the surface area of the langauge in a way that we could never polyfill
[23:59] sechrist: sechrist++
[23:59] v8bot: sechrist: Don't cheat!  You can't give a beer to yourself.
[23:59] secoif: and you couldn't achieve the simplification you are talking about in a compile to JS language?
[23:59] sechrist: is v8bot on gittubs?
