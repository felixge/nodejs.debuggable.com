[00:00] nicholasf has joined the channel
[00:00] roroo: how can i use process to make my js code restart itself? send it a HUP signal
[00:00] jesusabdullah: I really do think coffeescript is fine. Neat even! But it's bad for teaching and demonstration because not everyone is familiar with it.
[00:00] bingomanatee: use smart quotes instead of braces, snowman == function, greenApple == private, etc.
[00:00] cmr: bingomanatee: You mean APL?
[00:01] pyrotechnick: dave i sometimes use the lambda and pi and epsilon and other greek characters in my coffeescript
[00:01] pyrotechnick: it makes my comrades cringe but they can deal with it
[00:01] pyrotechnick: because it looks fucking badass
[00:01] roroo: or is it even possible... to restart my js scripts process on it's own?
[00:01] benvie: did someone say unicode
[00:01] cmr: roroo: fork and exec a new process, and then die.
[00:02] pauls1 has joined the channel
[00:02] enmand has joined the channel
[00:03] benvie: http://omegamenu.com/css/omega-menu.css <--unicode
[00:03] jamund has joined the channel
[00:03] pyrotechnick: thats ugly as hell
[00:03] pyrotechnick: it doesn't even serve a useful purpose
[00:04] benvie: it servers the purpose of making me happy
[00:04] pyrotechnick: seriously though there's something about
[00:04] joshsmith has joined the channel
[00:04] pyrotechnick:   shader: (args, λ) -> λ null, fs.readFileSync "#{__dirname}/shaders/#{args.key}.#{args.type}.glsl", 'utf8'
[00:04] pyrotechnick: that is 100% badass
[00:04] isufy has joined the channel
[00:05] cmr: If that's what turns you on, I guess..
[00:05] roroo: difference between fork and spawn is you can 'talk' to a forked process?
[00:05] cmr: roroo: fork+exec == spawn
[00:05] pyrotechnick: plus it reminds me of halflife
[00:05] pyrotechnick: benvie: are you the author of this omegamenu thing?
[00:06] benvie: yeah I made it a while ago just as a fun project to make color things
[00:06] hipsters_ has joined the channel
[00:07] pyrotechnick: setting ΩΩ❏ to depth kicks in hardware acceleration indefinitely, it's weird
[00:07] hackband has joined the channel
[00:07] Axefield has joined the channel
[00:08] benvie: think it may be on purpose
[00:08] pyrotechnick: what does depth do
[00:08] Axefield: Hello Everyone
[00:08] benvie: not sure if I did it here, but you can force hardware acceleration by setting translateZ(0)
[00:08] Axefield: Hey I'm looking for learning materials on node.js
[00:08] benvie: even if it doesn't do anything
[00:08] bingomanatee: Writing code for Black Mesa?
[00:08] pyrotechnick: nah i dont mean like it utilises hardware to draw i mean it continuously re-renders
[00:09] bingomanatee: I just replayed HL2e2 for the umpteenth time. 
[00:09] Axefield: My friend set me up with a VM with everything working, and I'm just getting started with the system.
[00:09] benvie: oih yeah
[00:09] pyrotechnick: benvie: but why
[00:09] benvie: that was an unresolved bug with chrome
[00:09] cmr: Axefield: The API docs are nice.
[00:09] pyrotechnick: benvie: it's a HUGE bug
[00:09] MattRichardson has joined the channel
[00:09] benvie: it's due to some buggy handling of chrome's svg rendering
[00:09] pyrotechnick: it even renders off-screen and out off-tab
[00:09] pyrotechnick: terrible
[00:10] benvie: I know, I never actually released this to anyone lol
[00:10] benvie: it's just there
[00:10] benvie: I didn't finish it
[00:10] Axefield: cmr I'm looking for like videos, downloads, maybe blogs...
[00:10] pyrotechnick: no your app is fine
[00:10] pyrotechnick: it's chrome's fault
[00:10] pyrotechnick: this is a serious issue though it might explain a few things for me
[00:10] pyrotechnick: thankyou
[00:11] benvie: yeah it's an issue with svg as paint renderer in css
[00:11] pyrotechnick: what's the actual style that changes with depth
[00:11] benvie: like if you use svg as an image
[00:11] tilgovi has joined the channel
[00:11] benvie: sec
[00:11] roroo: i think you probably are looking for material for learning javascript 
[00:11] ovnicraft has joined the channel
[00:12] benvie: depth doesn't actually change the svg itself, what it does is creates drop shadows using before and after psuedo elemnts
[00:12] cmr: Axefield: Once you know javascript, node isn't that much.
[00:12] cmr: What do you want to write?
[00:12] pyrotechnick: benvie: weird, it's only pulling 40 fps and it has huge spikes
[00:13] benvie: something is more broken on this than it was last time I looked at it
[00:13] ChrisPartridge has joined the channel
[00:13] pyrotechnick: it's cooking my macbook
[00:13] benvie: as in something in chrome's rendering has changed
[00:13] pyrotechnick: yeah
[00:13] pyrotechnick: it's even worse in canary and chromium
[00:13] pyrotechnick: *sigh*
[00:13] benvie: some of the animations are really over the top
[00:13] MadGu1 has joined the channel
[00:14] benvie: specifically the ones that zoom out and cover much of the page, tend to cause the browser to chug
[00:14] benvie: understandably
[00:14] pyrotechnick: it's the transparency if anything
[00:14] benvie: also a problem I didn't resolve is secondary menus initiating animations while the parent menu animates over the cursor
[00:14] tonymilne has left the channel
[00:14] pyrotechnick: transparency + depth = GPU nightmare
[00:15] benvie: causing extra unnecessary animation relative to the first animation, really intensive to render
[00:15] Axefield: cmr: I'm semi-adept at javascript still getting my head around the syntax (I've been doing front end my whole life and finally switching sides..)
[00:15] benvie: and that's all with dynamically rendered backgrounds, like using svg to do the stripes and whatnot. Definitely not targeted at mainstream usage..
[00:15] cmr: Axefield: You know about closures and such?
[00:16] bartt has joined the channel
[00:16] pyrotechnick: benvie: OmegaMenu is for the 1%
[00:16] okee has left the channel
[00:16] pyrotechnick: the criminal elite of wall st with their massive offshore renderfarms for workstations
[00:17] strevat_ has joined the channel
[00:17] Axefield: O_o
[00:17] gavin_hu_ has joined the channel
[00:18] benvie: haha
[00:19] isufy has joined the channel
[00:19] cmr: Axefield: I take that as a no? You should be strong with the functional aspects of javascript. That and the async of node are the major loops you need to jump your brain through.
[00:19] benvie: it was a fun project but I came to the conclusion that while fun it had no practical use
[00:19] benvie: because of how ridiculous it is
[00:19] benvie: a testing bed for some ideas
[00:19] ovaillancourt has joined the channel
[00:19] pyrotechnick: a testing bed for unicode
[00:19] pyrotechnick: and chrome bugs
[00:19] pyrotechnick: i actually like it
[00:19] benvie: the unicode thing actually has a use
[00:19] danraz has joined the channel
[00:20] benvie: it generates the interface to switch classes by parsing the classnames
[00:20] benvie: and using the unicode as a kind of namespacing thing
[00:20] danraz: anybody doing A/B testing / click-path analysis?
[00:20] benvie: builds an object structure from the increasingly specific classnames
[00:20] benvie: it could be done without unicode but then would have really long classnames
[00:20] benvie: since you couldn't use one character per level of specifity
[00:21] pyrotechnick: that's actually
[00:21] pyrotechnick: rather cool
[00:21] benvie: the idea was to try and make an extremely customizable framework for building a menu that only required modifying classes in the CSS
[00:21] benvie: er
[00:21] benvie: in thr html
[00:22] soapyillusions has joined the channel
[00:22] pyrotechnick: ahh i get it now
[00:22] benvie: all the dropdowns do is switch the classes applied to the menu, so it's super simple for even an html noob to put slap a bunch of classes on a simple nested UL structure
[00:22] pyrotechnick: i thought you were just insane but you're really quite creative
[00:22] benvie: I think both
[00:22] wdbl_away: what does this do? if (!!!value) doSomething();
[00:22] Axefield: Thanks a lot cmr that's already 2 steps in the right direction
[00:22] jbpros has joined the channel
[00:22] pyrotechnick: they're mutually-dependent
[00:23] devongovett has joined the channel
[00:23] benvie: three excalamation marks is 1 more than could possibly be useful
[00:23] rhinobean has joined the channel
[00:23] pyrotechnick: wdbl: it casts it to a boolean than nots it
[00:23] wdbl: pyrotechnick: ahhh, ok that makes sense
[00:23] MrBig has joined the channel
[00:23] cmr: Axefield: Yep. getting familiar with the functional aspects of javascript is very important, especially to writing half-good code.
[00:23] pyrotechnick: it's slightly different to !
[00:23] benvie: ! will do the same as !!!
[00:23] pyrotechnick: nah i think there's a particular case it doesnt
[00:24] wdbl: benvie: I found it on line 124 of assert.js in the node source.
[00:24] pyrotechnick: like undefined or 0 or null or something
[00:24] wdbl: NaN
[00:24] wdbl: maybe
[00:24] pyrotechnick: something like that
[00:24] cmr: Axefield: http://nodejs.org/docs/latest/api/index.html for all your node-needs.
[00:24] pyrotechnick: let me make a table
[00:24] pyrotechnick: we shall work this out
[00:25] pyrotechnick: is there a spreadsheet app
[00:25] benvie: pretty sure ! always results in a boolean, even factoring in edge cases
[00:25] pyrotechnick: where you can use javacsript
[00:25] benvie: no but that's a good idea
[00:25] benvie: I mean maybe there is
[00:25] Axefield: I've been staring, and reading logic and providing feed back for a long time, I understand a lot about javascript, I've been debugging it at least 2-3 years.. I just never typed my own out. :(
[00:25] pyrotechnick: ive seen some with python and stuff
[00:26] benvie: well
[00:26] benvie: considering like google docs and office online are built in js
[00:26] benvie: and have spreadsheets
[00:26] pyrotechnick: ahh yeah i think ive seen it there in scripting actually
[00:26] benvie: but yet they don't actually allow you to write your stuff in js
[00:26] pyrotechnick: google docs is really quite nice lately
[00:27] brianseeders has joined the channel
[00:27] pyrotechnick: since the redesign for google+
[00:27] benvie: yeah they're finally integrating their disparate web presences
[00:27] pyrotechnick: yep you can script in javascript
[00:28] pyrotechnick: but it uses function hoisting :o
[00:28] benvie: having completely different interfaces and places to configure every different google thing was annoying
[00:28] pyrotechnick: lol they are using codemirror
[00:29] murvin has joined the channel
[00:30] murvin: i have a question regarding session.   i just find out if I make the session cookie be secure, there will be nothing saved in the session.  is it what suppose to be?
[00:30] pyrotechnick: [undefined, null, 0, [], {}, NaN, Infinity, -Infinity, -1, false, true]
[00:31] pyrotechnick: all those ! = !!!
[00:31] murvin: or the next call will not get the session
[00:31] pyrotechnick: can you think of any other objects?
[00:31] benvie: yeah I looked real quick, ! always results in a boolean, so the third one can't possibly to anything extra
[00:31] pyrotechnick: i swear i've seen reasoning for it before
[00:32] benvie: there's use for like !!~ and +!!
[00:32] pyrotechnick: i think in some browsers like IE maybe you can get dodgy handles on activex components or something
[00:32] EhevuTov_ has joined the channel
[00:32] pyrotechnick: i dunno it was probably a hack in someones blog
[00:32] benvie: that'd be the only plausible explanation
[00:33] benvie: in js proper ! to a typecast to boolean and that's cut and dry
[00:33] pyrotechnick: oh god
[00:33] pyrotechnick: google binned codesearch
[00:33] pyrotechnick: WHAT ARE THEY THINKING
[00:33] mikeal has joined the channel
[00:34] christkv_ has joined the channel
[00:34] pyrotechnick: so google are
[00:35] pyrotechnick: moving away from the only thing they do decently
[00:35] pyrotechnick: i see how that works
[00:35] joshfinnie has joined the channel
[00:37] ap3mantus has joined the channel
[00:37] literal_username has joined the channel
[00:37] sorensen__ has joined the channel
[00:37] evangenieur: do someone know how to launch the coffee-script repl from a node script ?
[00:38] Shaunzie: can anyone suggest a decent streaming api implementation for twitter?
[00:38] cmr: Shaunzie: When I was looking a month or two ago I couldn't find any
[00:38] dshaw_1 has joined the channel
[00:39] pyrotechnick: evangenieur: require('child_process').spawn('coffee');
[00:39] Shaunzie: cmr: did you end up writing your own? ._.
[00:39] JoshuaJ has joined the channel
[00:40] wdbl_away has joined the channel
[00:40] replore_ has joined the channel
[00:40] replore has joined the channel
[00:40] evangenieur: ACTION i'm looking for something like that  : 
[00:40] evangenieur: ACTION r = require "repl"
[00:40] cmr: Shaunzie: No, I just used the rest api and wasn't a cool person. Just needed something that would run ;). If I go back to that project, the twitter part will be rewritten.
[00:40] evangenieur: r.start "repl >"
[00:41] evangenieur: working for javascript, just trying to do the same for coffeescript
[00:41] pyrotechnick: evangenieur: https://github.com/jashkenas/coffee-script/blob/master/src/command.coffee
[00:41] Shaunzie: cmr: book :( I found one project that was kinda cool, but it isn't maintained….
[00:41] cmr: Shaunzie: That's what I found about most of the twitter libs.
[00:42] pyrotechnick: evangenieur: https://github.com/jashkenas/coffee-script/blob/master/src/repl.coffee
[00:42] raincole_ has joined the channel
[00:42] Kunda has left the channel
[00:43] evangenieur: yes but no commonJS :(
[00:44] xbayrockx: Hey how do I use <script src="whatever.js> in Node.JS 
[00:44] xbayrockx: ?
[00:45] jerrysv: xbayrockx: var whatever = require("whatever");
[00:45] xbayrockx: It's in my client code and it seems like it's looking on the client for that code
[00:45] pyrotechnick: xbayrockx: i told you before
[00:45] pyrotechnick: make a folder called public, put it in there
[00:45] cmr: xbayrockx: You server the whatever.js file with an http server
[00:45] cmr: s/server/serve/
[00:45] xbayrockx: Hmmmmm
[00:45] isaacs: xbayrockx: welcome back
[00:46] xbayrockx: Ok
[00:46] isaacs: xbayrockx: you still haven't figured out how to use <script src="whatever.js"> in node?
[00:46] xbayrockx: No, I only tried just recently
[00:46] pyrotechnick: maybe he's just trolling
[00:46] pyrotechnick: we've all told him a few times
[00:46] xbayrockx: Sorry, missed it
[00:46] isaacs: xbayrockx: is what you're asking is "how do i serve a static file"?
[00:46] isaacs: xbayrockx: like, html, images, css, etc?
[00:47] xbayrockx: Guess so
[00:47] xbayrockx: I'm looking now
[00:47] pyrotechnick: xbayrockx: https://gist.github.com/1636823
[00:48] xbayrockx: So you recommend express?
[00:48] xbayrockx: For ode.JS?
[00:48] xbayrockx: Node*
[00:49] cmr: Yes, very handy
[00:49] pyrotechnick: i'm pretty sure he's trolling
[00:49] neurodrone has joined the channel
[00:49] cmr: pyrotechnick: don't assume maliciousness when incompetence can explain it.. *butchers the quote some more*
[00:49] kenperkins: I need a little guidance on a reconnect strategy for a tls connection
[00:49] kenperkins: here's what I've got now
[00:50] domino14 has left the channel
[00:50] literal_username: Anyone know of a good tool or method for discovering how memory is allocated accross a Node application?
[00:50] kenperkins: https://gist.github.com/a4d298adc8b87c0cc9b3
[00:51] infynyxx has joined the channel
[00:51] aGHz has joined the channel
[00:51] jsurfer_ has joined the channel
[00:52] isaacs: xbayrockx: here you go: https://gist.github.com/1636859
[00:52] isaacs: xbayrockx: run "node server.js"
[00:52] aGHz has left the channel
[00:52] isaacs: then open up http://localhost:1337/index.html in your web browser.
[00:52] ryangs has joined the channel
[00:53] pyrotechnick: no semi-colons, tisk tisk
[00:53] wdbl: and then you're l337?
[00:53] pyrotechnick: wannabe CoffeeScripter
[00:54] evangenieur: to launch coffee-script REPL with custom libs : https://gist.github.com/1636870
[00:54] isaacs: pyrotechnick: coffee script's a wannabe isaacs.
[00:54] isaacs: pyrotechnick: i been a ; minimalist for ages now.
[00:54] pyrotechnick: where
[00:54] pyrotechnick: is it necessary
[00:54] tmcw has joined the channel
[00:55] willwh has joined the channel
[00:55] willwh has joined the channel
[00:55] isaacs: pyrotechnick: i explained it in a blog post: http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding
[00:55] pyrotechnick: badass i was going to suggest writing it somewhere
[00:55] pyrotechnick: you're also a time-traveller, interesting
[00:55] joshsmith: how can I do a dynamic helper in Express that returns something from within a callback?
[00:56] joshsmith: in this case I need to make a database call but then return that result
[00:56] c4milo has joined the channel
[00:56] jocafa has joined the channel
[00:57] joshsmith: nevermind
[00:57] joshsmith: figured it out
[00:57] MrTopf has joined the channel
[00:59] msloc has joined the channel
[00:59] tilgovi has joined the channel
[00:59] msloc: hello all. Noob here
[00:59] Shaunzie: herro
[01:00] [[zz]] has joined the channel
[01:00] plutoniix has joined the channel
[01:00] msloc: Is this the place to ask a question about node.js config on a linux machine?
[01:00] cmr: Yes
[01:01] msloc: I just installed node.js on an Amazon ec2 linux instance. 
[01:01] cmr: msloc: irc ettiquette says you can ask a question without asking to ask, and if it's not the right place you get redirected.
[01:01] pyrotechnick: tell that to #chromium.
[01:02] wdbl: @isaacs: your reasons for not using semi-colons are all technically correct and everything, but I'm thankful that most people use them to end every statement because most of the Js I read is spaghetti and at least I can quickly tell if a statement ends on a line or not.
[01:02] msloc: My server is running on port 4000, but I'm not geting anything on my browser. I'm suspecting a firewall issue or something. I've opened up port 4000 on the Amazon controls
[01:02] Internet13 has joined the channel
[01:02] vkandy: guys if i get a SIGTERM to master, how can i send it to workers?
[01:03] joshsmith: eh, no I didn't
[01:03] msloc: I mean, I'm getting a "could not connect error" in my browser
[01:03] joshsmith: how can I do a dynamic helper in Express that returns something from within a callback?
[01:03] isaacs: wdbl: i think you'd find that it's quite easy to get your mind to respond appropriately to \n ending statements, since you probably do that anyway.
[01:03] Tobsn has joined the channel
[01:03] msloc: I ran this too: iptables -A INPUT -p tcp --dport 4000 -j ACCEPT
[01:03] isaacs: wdbl: but you'd have to try that on your own, and the best way to try is to just honestly stop using them and try to focus on getting stuff done anyway.  after a few weeks, you won't mind.
[01:04] msloc: How do I tell what is going wrong?
[01:04] cmr: msloc: you sure you have the dynamic ip set right and all that jazz? Can you connect to the server at all?
[01:05] kenperkins: do you have to rebind stream.on('end', ...)  every time you reconnect the stream?
[01:05] level09 has joined the channel
[01:05] k1ttty has joined the channel
[01:05] tmcw has joined the channel
[01:05] msloc: Yes. my server is up and running. I just did a wget localhost:4000 and that worked. So it looks like for some reason I'm not connecting from remote computer
[01:06] joshsmith: http://hastebin.com/saqolohoso.lua
[01:06] wdbl: @isaacs: I can write code without semi-colons, but I'm talking about reading it. I like reading code that has semi-colons because it's more precise.
[01:06] dubenstein has joined the channel
[01:06] joshsmith: I expect that return to be the return value from the dynamicHelper
[01:06] jgornick has joined the channel
[01:06] joshsmith: it logs the correct result
[01:06] joshsmith: but doesn't return anything
[01:06] tylerstalder has joined the channel
[01:06] boogyman has joined the channel
[01:06] boogyman has joined the channel
[01:07] joshsmith: it's just undefined
[01:07] msloc: Maybe my question is more of a linux/Amazon EC2 problem then. Thanks anyway
[01:07] cmr: msloc: No, I mean can you connect to the server as in can you connect to the other host other than port 4000 at all
[01:07] joshsmith: likely because it's returning before the async function is complete
[01:07] joshsmith: so how can I wait for that to complete?
[01:07] dnyy has joined the channel
[01:07] msloc: Yes, I can connect to my server on port 80.
[01:08] franciscallo has joined the channel
[01:08] clutchski1 has joined the channel
[01:08] halfhalo: msloc, did you open the ec2 firewall?
[01:09] msloc: halfhalo: I added 4000 to my inbound security group, applied it. 
[01:10] isaacs: wdbl: that's what i'm saying.  it's not more precise.  what you're describing, that reaction, it is happening in your mind, not in the code.
[01:10] davidban_ has joined the channel
[01:10] isaacs: wdbl: it is more flexible than you probably realize.
[01:11] isaacs: wdbl: and just like stretching the hamstrings can make you a better runner or dancer in unexpected ways, stretching the mind can make you a better thinker, and that's really what our profession is.
[01:11] EyePulp has joined the channel
[01:11] wdbl: @isaacs: here's why I don't like it
[01:12] wdbl: var x = "Hello"
[01:12] wdbl: .substring(2);
[01:12] pyrotechnick: yeah like goatse
[01:12] pyrotechnick: it's all about stretching
[01:12] wdbl: there could be twenty lines of comments between the line that ends in "Hello" and the next line
[01:12] abraxas has joined the channel
[01:13] cmr: wdbl: There shouldn't be, that's bad code
[01:13] Shaunzie: anyone know if node can handle outbound connections as well as it can in bound? like see holding 10k connections open for external apis?
[01:13] wdbl: semi-colons are truly more precise. You're talking about _something_ verse the absence of something.
[01:13] wdbl: cmr: that code works
[01:13] msloc: I wonder if I have to reboot the instance for new port security settings to apply
[01:13] cmr: wdbl: Works != Good
[01:13] cmr: Anyone can write code that works.
[01:14] isaacs: wdbl: my point is, "more precise" is not necessarily "more good"
[01:14] mikola has joined the channel
[01:14] isaacs: wdbl: you could argue that it's "more precise" to never put more than one expression on a line, or to use 2 semicolons instead of none.
[01:14] wdbl: cmr: that's why I say not using semi-colons is no good. It works, it's technically less typing and less to read.
[01:14] isaacs: wdbl: i've suggested that we do away with \n in javascript, and just use enough semicolons to wrap to the next line.
[01:14] isaacs: wdbl: that'd be the safest way to do it.
[01:14] isaacs: right?
[01:14] isaacs: ;)
[01:15] mikola: hello
[01:15] isaacs: then you'd *always* know when a statement continues to the next line, because there wouldn't be 80 semicolons there.
[01:15] cmr: I honestly have no opinion about semicolons or no semicolons. For my own code, I don't use semicolons.
[01:15] wdbl: that's a non-sequitur
[01:15] cmr: But that's because I cut my teeth on python
[01:15] isaacs: wdbl: it's not a nonsequitur.  it's a reductio ad absurdem.
[01:15] mikola: anyone here working on stuff with JSON-schema, or anything schema related?
[01:15] isaacs: wdbl: ie, still stupid, but relevantly so :)
[01:16] mikola: I'm thinking about starting a new project to do schema-type stuff, and want to avoid duplicating effort
[01:16] wdbl: one semi-colon is all it takes to know a statement ended.
[01:16] Guest36782 has joined the channel
[01:16] isaacs: wdbl: it's one more than necessary in most cases.
[01:16] wdbl: without a semi-colon, you have to keep reading
[01:16] wdbl: that's the whole argument
[01:16] cmr: mikola: I wrote an eensy-weensy json validator, before I knew that one already existed.
[01:16] isaacs: wdbl: if you're going to use one more than necessary, why not 2?
[01:16] mikola: cmr:  Not quite what I am planning...
[01:16] joshsmith: hmm okay. so I can't use dynamicHelpers aysnc. is there any way I can use one that does an async call to set something like a session variable that I can then access from another dynamicHelper?
[01:16] joshsmith: or is that just not possible?
[01:17] cognominal has joined the channel
[01:17] cmr: mikola: Talking about http://json-schema.org/ right?
[01:17] wdbl: that's like saying: if you're going to use no semi-colons, why type at all?
[01:17] wdbl: it's a non-argument
[01:17] mikola: yes
[01:17] mikola: though I am not as much interested in validation as I am in other operations
[01:17] wdbl: you don't use 2 because you don't to read 2 to know a statement ended
[01:17] nerdfiles1 has joined the channel
[01:17] mikola: specifically, I want to use schema + partial evaluation to speed up certain common functions
[01:17] mikola: like object copying, assignment, diffing and merging
[01:17] sorensen__ has joined the channel
[01:18] wdbl: * you don't need to read 2 in order to know ...
[01:18] unomi: mikola I am, but it is early stages yet
[01:18] isaacs: wdbl: if i could make software without any code, i would happily.
[01:18] isaacs: wdbl: i don't have to read 1 to know the statement ended.
[01:18] neoesque has joined the channel
[01:18] mikola: unomi:  cool, do you have a repository?
[01:18] wdbl: yes you do
[01:18] unomi: http://www.assembla.com/code/yui3-schemapp/git/node/blob/examples/bad/basic_user.html
[01:18] wdbl: did this statement end? "Hello"
[01:18] isaacs: wdbl: so i should use 0 for the same reason you should use 1
[01:18] cmr: Not if your brain does ASI :)
[01:18] isaacs: wdbl: well, the program ended, so yes.
[01:18] isaacs: :)
[01:18] unomi: http://meet.assembla.com/spaces/yui3-schemapp/wiki
[01:18] wdbl: .substring(2) - how about now?
[01:18] isaacs: wdbl: i don't read code line by line.
[01:19] nerdfiles1 has left the channel
[01:19] isaacs: wdbl: that's a new program, and parser error.
[01:19] isaacs: wdbl: you read code in context.
[01:19] joshkehn has joined the channel
[01:19] wdbl: there are such things as comments though, I know Js programmers don't like them, but they are needed sometimes
[01:19] joshkehn has left the channel
[01:19] isaacs: wdbl: eye tracking studies have shown time and time again that people don't even read prose line by line.
[01:19] isaacs: you do this F-shape kind of thing.
[01:19] wdbl: so read this: "Hello", then 20 lines of comments to see .something(else)
[01:19] cmr: wdbl: As I said earlier, that's really crappy code and should never happen.
[01:20] isaacs: wdbl: if a block of code starts with . or ( or [, i'm immediately in suspicion land.
[01:20] isaacs: wdbl: since that means it can't be safely concatenated with other code, depends on what's above it, etc.
[01:20] wdbl: cmr: if you just use semi-colons you don't have that problem and you can put comments everywhere
[01:20] isaacs: everything should be cut-and-pasteable anywhere.
[01:20] cmr: wdbl: No, because then .substring(2) becomes invalid.
[01:20] isaacs: wdbl: or you can never start lines with ( or [ or .
[01:21] wdbl: .substring(2) on a line by itself is not invalid
[01:21] isaacs: wdbl: *ending* with semicolons doesn't actually fix the problem you'er bringing up as effectively as *starting* lines with semicolons if they would begin with ( or [
[01:21] isaacs: wdbl: exactly.
[01:21] nodebiscut has joined the channel
[01:21] joshsmith: http://stackoverflow.com/questions/8919920/doing-a-faux-async-call-with-a-dynamichelper-or-some-alternative-in-express-2
[01:21] unomi: mikola I recently did some fiddling with sub-modules, so looks like the example is broken
[01:21] isaacs: wdbl: so when i see .substring(2) on a line by itself, no partners in sight, i throw out the program and rewrite it myself, and never use that person's modules again.
[01:21] wdbl: @isaacs: *consistently* ending with them fixes the problem.
[01:21] cmr: .. .substring(2)
[01:21] catb0t:  Exception: SyntaxError: Unexpected token .
[01:21] mikola: unomi:  that is interesting, but it isn't quite what I had in mind
[01:22] isaacs: wdbl: depending on consistency is problematic.
[01:22] isaacs: wdbl: because it means that you can't move code around as easily, that errors are harder to spot, and so on.
[01:22] mikola: I am actually most interested in using schema to speed up certain methods that do object traversals
[01:22] wdbl: @isaacs: that's why making them optional was a mistake
[01:22] isaacs: wdbl: i disagree.
[01:22] unomi: mikola: http://meet.assembla.com/code/yui3-schemapp/git/node/live/d47674ec478e69a05d09c5ce95334a9405552480/examples/bad/basic_user.html
[01:22] mikola: like copying, assignment (and ultimately) making patches for synchronizing objects across a network
[01:22] isaacs: a lot of languages have optional semis.
[01:23] isaacs: wdbl: you need to write 1000 lines of semicolonless code.
[01:23] wdbl: @isaacs: there are lots of languages that have lots of warts to
[01:23] wdbl: too
[01:23] unomi: mikola: that isn't an aspect that I have looked at tbh
[01:23] isaacs: wdbl: like, create a real thing, and maintain it for a while, and then compare the experience.
[01:23] isaacs: if you still hate it, fine.
[01:23] isaacs: but there's a value in actually seeing the subtle differences it makes.
[01:23] unomi: mikola: but I would be interested in helping out to the extent that I can
[01:23] isaacs: rather than just saying that it's not precise.
[01:23] wdbl: @isaacs: I've been reading javascript code for 15 years now
[01:23] bingomanatee has joined the channel
[01:23] isaacs: wdbl: me too.
[01:23] cognominal_ has joined the channel
[01:23] isaacs: wdbl: and i've used a bunch of different styles.
[01:23] isaacs: and worked on several different js projects.
[01:23] wdbl: @isaacs: I think that's a good enough experience to know how I like to read code
[01:24] unomi: wdbl: not at all
[01:24] isaacs: wdbl: no, it's not, if you've never actively maintained a working program in a specific style.
[01:24] isaacs: i've been speaking human languages all my life, doesn't mean i'm qualified to comment on chinese.
[01:24] unomi: the kind of code one would consider 'best practice' 15 years ago is vastly different from now, or even 5 years ago.
[01:24] wdbl: I code in python all the time, no semi-colons
[01:24] isaacs: (well, not all my life, just the last 30 years or so, and for the first few, i sucked at it)
[01:24] theCole has joined the channel
[01:24] isaacs: wdbl: not the same at all!
[01:24] h4mz1d has joined the channel
[01:25] wdbl: @isaacs: no?
[01:25] isaacs: wdbl: no!
[01:25] unomi: most English speakers have been speaking English all their life :p that doesn't mean that there are vastly different levels of command over the language in play
[01:25] wdbl: well, you could be wrong
[01:25] wdbl: I think you are
[01:25] isaacs: wdbl: python is not javascript-without-semis, it's a whole different language.
[01:25] unomi: case in point.. s/are/aren't/
[01:26] wdbl: I understand that
[01:26] dubenste1n has joined the channel
[01:26] isaacs: wdbl: so, writing python doesn't mean you're qualified to comment on the value of writing javascript without semis.
[01:26] cmr: wdbl: Why don't you use semicolons in python?
[01:26] cmr: They, too, are optional
[01:26] isaacs: it may mean that you're qualified to speak on the value of writing python without semis
[01:26] mikola has joined the channel
[01:26] mikola: dang, disconnected there
[01:27] isaacs: if, of course, you've actually spent any considerable time writing python WITH semicolons.
[01:27] unomi: sent you my email mikola, we can discuss async
[01:27] isaacs: but you need experience, and i mean REAL experience, doing real work and tracking down bugs and thinking in the new style, to even really begin to properly compare them.
[01:27] wdbl: I think this boils down to a kafkaism. I have to say that I wrote lots of code in javascript and maintained a "big working project" without semicolons before I can have an opinion.
[01:27] dodo_ has joined the channel
[01:27] wdbl: sorry, that's just pure bullshit
[01:27] mikola: ok
[01:28] boogyman: wdbl: that's not true
[01:28] boogyman: they are stating an opinion, just like you are stating an opinion
[01:28] isaacs: wdbl: no, it boils down to saying that you have to actually visit france and speak french every day for a while before you can say it's a crap language.
[01:28] cognominal has joined the channel
[01:29] wdbl: wdbl: that's simply not true though
[01:29] isaacs: or at least, before you can expect any parisian to agree with you.
[01:29] wdbl: hehe, I responded to myself
[01:29] isaacs: hahah
[01:29] isaacs: you sound conflicted :)
[01:29] wdbl: @isaacs: you don't have to travel to france
[01:29] TN has joined the channel
[01:29] wdbl: @isaacs: you don't have to speak it fluently to know that
[01:29] isaacs: wdbl: but you have to do more than just see a few people speaking french.
[01:29] isaacs: and go, "that's annoying.  that sounds bad.  i don't like that language."
[01:29] isaacs: well, unless you actually understand it, adn use it for a while, you're not really qualifed to say.
[01:30] wdbl: @isaacs: as a student of linguistics, I would know whether the language is bad or not based on a number of factors
[01:30] Juan77 has joined the channel
[01:30] isaacs: that is exactly the kind of bs that they teach students of linguistics!
[01:30] wdbl: @isaacs: I do understand it (your argument against semi-colons) and I do not have to use it for a while to be "qualified"
[01:30] isaacs: no, you have to actually use it.
[01:30] wdbl: because there is no qualification for having an opinion.
[01:31] isaacs: wdbl: i will not believe that you know how it feels until you've felt it.
[01:31] wdbl: it's a style thing
[01:31] dubenste2n has joined the channel
[01:31] isaacs: it's a qualia thing.
[01:31] wdbl: I'll go feel it right now
[01:31] isaacs: bs.
[01:31] wdbl: no, seriously.
[01:31] tonymilne has joined the channel
[01:31] isaacs: if you're a human, it'll take a bit of time for your brain to bend to it.
[01:31] isaacs: that takes a few months.
[01:31] wdbl: I'm going to write all my Js code for the next week without semi-colons
[01:31] isaacs: it takes about 1000 lines of code, a few closed bugs, etc.
[01:31] cmr: isaacs: There are humans in this channel?
[01:31] wdbl: oh, now it's a few months
[01:31] wdbl: how do you know that for me?
[01:31] cmr has left the channel
[01:31] wdbl: it could be a few minuts
[01:31] wdbl: minutes
[01:32] krucial has joined the channel
[01:32] isaacs: no, i said use it for a month.  i said write 1000 lines of code, solve a real problem, and release the project.
[01:32] isaacs: wait until you can say something deeper than "it's not precise, because <desert island comment scenario>"
[01:32] wdbl: what makes you qualified to say that I need to do this for a month?
[01:32] cmr has joined the channel
[01:32] k1ttty has joined the channel
[01:32] wdbl: you're not saying anything deep about it though!
[01:32] isaacs: because i'm a freaking lightening rod for these conversations :)
[01:32] franciscallo has joined the channel
[01:32] isaacs: i'm not saying much about it.  i'm just disregarding your surface objections.
[01:33] wdbl: you're explaining in your article about how the interpreter works and how it's all ok.
[01:33] wdbl: how I personally like to read code and what is readable to me is not surface
[01:33] isaacs: well, i also made the case for where you *must* use semicolons as prefixes, and ought to even if you're not using them minimally.
[01:33] wdbl: definitely now
[01:33] wdbl: not*
[01:33] isaacs: wdbl: no, but it's not something that exists in the code.
[01:33] mikeal has joined the channel
[01:33] isaacs: it's something that exists in you.
[01:33] isaacs: and changing *you* takes time.
[01:34] isaacs: because you're not a robot :)
[01:34] wdbl: @isaacs: why do you not use semi-colons though? I see all your reasons why it works, technically, but why do you do it?
[01:34] isaacs: wdbl: it's delightful.
[01:34] isaacs: wdbl: here's the thing:
[01:34] wdbl: what's the big deep reason though?
[01:34] wdbl: there isn't one
[01:34] jesusabdullah: why bother?
[01:34] wdbl: it's just your prefernce
[01:34] jesusabdullah: what's the deep reason for writing them anyway?
[01:34] isaacs: there is, i'm going to do my best to tell you, so that you can disregard it, and justify not doing this experiment of youres.
[01:35] wdbl: I don't know @isaacs said that I needed to have deep statements about this
[01:35] isaacs: wdbl: so far, there's been exactly one objection to it, which is unrealistic.
[01:35] isaacs: then i suggested that you actually use it, so you can see what it actually feels like.
[01:35] isaacs: we're making a lot of noise, but little content.
[01:35] wdbl: @isaacs: I just want to know the pro's of it, not the con's.
[01:36] isaacs: k, please be patient, this will take more than one line of message.
[01:36] wdbl: like, what do I get out of it if I don't use semi-colons, in your view?
[01:36] RobWC has joined the channel
[01:36] wdbl: oh ok
[01:36] wdbl: np
[01:36] isaacs: when reading code, or prose, or poetry, or signs, or anything, in left-to-right languages, the eyes track across the top of a block, and down the left side.
[01:36] dubenste1n has joined the channel
[01:36] joshsmith: I could really use some help on this: http://stackoverflow.com/questions/8919920/doing-an-async-call-within-a-dynamichelper-or-some-alternative-in-express-2-x
[01:36] jsurfer has joined the channel
[01:37] isaacs: i came upon the decision to try this style out in npm about 2 years ago, when i spent 2 hours tracking down a bug that was the result of a missing comma on the right-hand edge.
[01:37] joshsmith: I'm completely blocked until I figure it out
[01:37] isaacs: i had a function that takes a list of arrays, and one of the calls was chain([a,b,c,]\n[d,e,f],\ncb)
[01:38] isaacs: instead of chain([a,b,c],\n[d,e,f],\ncb)
[01:38] wdbl: what's \ncb?
[01:38] huggies has joined the channel
[01:38] isaacs: \n is a line break
[01:38] wdbl: yep
[01:38] cmr: wdbl: newline, cb is a callback
[01:38] isaacs: i mean, there was a indent or whatever in there
[01:38] wdbl: o,
[01:38] wdbl: ok
[01:38] isaacs: cb is the callback at the end
[01:38] wdbl: aight
[01:39] isaacs: that resovles to ([a,b,c])[(a,b,c)] ==> ([a,b,c])[c] ==> undefined
[01:39] isaacs: so, i had this list of 5 functions, and after the third one, it was throwing, becasue it was trying to call (undefined).forEach() or whatever.
[01:39] isaacs: and i tracked it down with the debugger, added logging, etc.
[01:39] isaacs: stared at hte cocde.
[01:39] isaacs: couldn't see it
[01:39] isaacs: so, i decided to try comma-first on my arrays and function calls.
[01:40] isaacs: as i was rewriting it, the error jumped out at me, and i was convinced, "ok, this is better"
[01:40] marcello3d has joined the channel
[01:40] isaacs: while i was at it, and making changes, i thought, how did this actually happen?
[01:40] isaacs: i realized that the issue is having relevant tokens on the ragged right edge is actually the problem.
[01:40] jesusabdullah: ; and , too similar?
[01:41] isaacs: i'd previously tracked down an issue (though it wasn't as annoying) where a leading [a,b,c].forEach() type thing caused problems because i'd forgotten the semi on the line above.
[01:41] isaacs: so, i decided to always put relevant semicolons on the left.
[01:42] isaacs: since the ones on the right were no longer relevant, i started realizing that they were just clutter.
[01:42] Aria has joined the channel
[01:42] jesusabdullah: Interesting
[01:42] isaacs: and, in fact, tracking them on the right side took noticeably more work to read large blocks of code!
[01:42] Skaag has joined the channel
[01:42] isaacs: i foudn that i was *looking* at the right side a lot more than necessary.
[01:42] dschn has joined the channel
[01:43] isaacs: which i had never noticed until i started putting commas on the left.
[01:43] isaacs: removing all the semis from the right side (since they were 100% unnecessary at that point anyway) reduced the physical eye-motion required to read code.
[01:43] isaacs: now, this isn't a huge relevant cost in reading *new* code, becasue you have to read that slowly anyway.
[01:44] isaacs: since you'er taking in the concepts.
[01:44] wdbl: well, I'm sorry but it sounds like you killed a fly with a sledge hammer. I spent two days looking for a bug once, the issue turned out to be because I set a variable to the wrong value. I did not stop setting variables though!
[01:44] isaacs: but if it's something you're familiar with, that you maintain yourself, then it's a more significant savings.
[01:44] wdbl: commas on the left make the code ugly and unreadable
[01:44] isaacs: wdbl: it's readable, and your sense of what's "ugly" here is debatable.
[01:44] pifantastic has joined the channel
[01:44] wdbl: sorry if that offends you, but you are mostly alone on that one I think. same with the semi-colons
[01:44] isaacs: and by that i dont' mean "it's preference there's no right answer blah blah"
[01:44] dilvie has joined the channel
[01:45] benvie: hmm
[01:45] benvie: I need a parser for c/c++ header files
[01:45] abraxas has joined the channel
[01:45] isaacs: wdbl: my point is, 1) it takes less *physical effort* to debug your own code when it's semicolonless, once you're accustomed to the style.  2) it takes *more* effort until then.  3) the "ugly" reaction is a statement of how accustomed you are, not how good the code is.
[01:46] soapyillusions has joined the channel
[01:46] isaacs: wdbl: if making code uglier made bugs go away, i'd do it, and learn to love the ugly style.
[01:46] icewhite has joined the channel
[01:46] isaacs: wdbl: we're not writing poems, or painting pictures, this is software, we're solving problems and fixing bugs.
[01:46] isaacs: so, when i say "it's delightful" or "refreshing", etc., what i mean is, it's more convenient and easy to scan the code and see what's going on.
[01:47] benvie: speak for yourself, I am making art
[01:47] isaacs: it's more ergonomic, once i got used to it.
[01:47] benvie: the emotion of the code is of utmost importance
[01:47] isaacs: i still maintain a lot of heavily semicolon'ed code, of course.  node uses the gjslint style, and the trade-offs of having a linter are well worth it.
[01:47] isaacs: since node-core gets a lot more contributions than npm does.
[01:48] isaacs: but in my own modules, i go with the way that feels better.
[01:48] wdbl: @isaacs: I don't think that it's been proven here that there is indeed less physical effort put forth in debugging semi-colon-less code. For you, that one situation.
[01:48] wdbl: maybe. it's too subjective.
[01:48] isaacs: wdbl: well, now that you've heard my story, you can simply tell yourself that your'e different, and avoid the cost of trying it yourself.
[01:49] isaacs: it's not a cheap experiment.
[01:49] wdbl: there's also the problem of going against the flow.
[01:49] wdbl: most people write with semi-colons.
[01:49] isaacs: wdbl: politics are the best reasons to write js with semicolons.
[01:49] wdbl: even if it doesn't make sense to you, is it really worth it?
[01:50] isaacs: luckily, most of my modules are one file, and i wrote it.
[01:50] isaacs: and politics don't change if no one changes :)
[01:50] wdbl: yeah, no that's cool with me - do whatever you want in your code. I'm thankful for the code you wrote :)
[01:50] s0enke has joined the channel
[01:50] wdbl: I just don't think there's any empirical evidence here supporting your side over the other.
[01:51] isaacs: really, though, even if you keep always using ; at the end of every line, i'd strongly suggest prefixing [ and ( with a ;
[01:51] bitwise_ has joined the channel
[01:51] isaacs: unless you *want* it to be a function call or property offset.
[01:51] wdbl: prefix [ and ( with a ;?
[01:51] isaacs: yes.
[01:51] wdbl: where?
[01:51] isaacs: if they start the line.
[01:52] isaacs: wdbl: (function () { ... })()
[01:52] isaacs: wdbl: ["a", "b", "c"].forEach(console.log()
[01:52] wdbl: that's the only place I'd put a ( first on a line.
[01:52] isaacs: that kind of stuff.
[01:52] wdbl: nope
[01:52] isaacs: right
[01:52] wdbl: not gonna do that shit
[01:52] isaacs: put a ; before it.
[01:52] isaacs: why not?  it's more precise.
[01:52] isaacs: it makes your code safe to concat, copy and paste.
[01:52] isaacs: if you can prevent an error with one char, why not do it?
[01:53] wdbl: I'd put that array in a variable first and then use it.
[01:53] isaacs: wdbl: sure, that's fine.
[01:53] isaacs: i'm just saying, if you ever see a line that starts with a [, refactor it, or put a ; in front of it.  otherwise it's a time bomb.
[01:53] isaacs: same with (
[01:54] isaacs: (and with + and - , but that's *very* rare)
[01:54] wdbl: what about if you don't use semi-colons at all?
[01:54] isaacs: wdbl: then you'er a baffoon ;)
[01:54] isaacs: wdbl: i DO use semicolons, when they're relevant.
[01:54] isaacs: you HAVE to, otherwise you're not writing correct programs.
[01:54] isaacs: if you don't use semicolons at all, then do you just not use for loops?
[01:54] wdbl: no, I mean why prefix [ and ( with ; just because I'm using semi-colons at the end of every statement?
[01:54] isaacs: wdbl: because one day you might forget one.  defense in depth, man.
[01:55] isaacs: it's a more reliable solution to put it with the line that it affects.
[01:55] isaacs: it's a delimiter.
[01:55] infynyxx has joined the channel
[01:55] isaacs: i mean, as far as the actual syntax of the language, it's a delimiter, not a terminator.
[01:55] isaacs: though the two concepts are related, of course.
[01:56] wdbl: yes
[01:56] meso has joined the channel
[01:56] AvianFlu: a terminator delimits what you did from the dark infinity of what comes after
[01:56] isaacs: but, unlike in C, for example, for (i=0;i<10;i++) { "hello" } is a valid js program
[01:57] wdbl: except when it doesn't, like the \n statement terminator/delimiter.
[01:57] clutchski1 has joined the channel
[01:57] isaacs: in C, ; is an actual terminator.  every statement continues until it reaches it.
[01:57] isaacs: technically, ; in js is the "null statement"
[01:58] tilgovi has joined the channel
[01:58] dubenste1n has joined the channel
[01:58] isaacs: which never continues the previous statement or the next one.
[01:58] Juan77 has joined the channel
[01:59] wdbl: @isaacs: just to be clear - do you prefix ( and [ with a ; in your npm code? Or is that something you recommended to make an example of over-defensive coding (i.e. using the semi-colon)?
[02:00] isaacs: wdbl: no, you absolutely must do that.
[02:00] isaacs: wdbl: not doing that is hazardous.  i'm not being facetious, i do this in all my programs.
[02:00] wdbl: oh ok, I thought you were saying to do it only if you end every js statement in a ;
[02:01] davidbanham has joined the channel
[02:01] isaacs: wdbl: nono, check out the first line of npm/lib/npm.js
[02:02] davidbanham has joined the channel
[02:02] isaacs: wdbl: or this: https://github.com/isaacs/npm/blob/master/lib/utils/read-json.js#L365
[02:02] isaacs: or here: https://github.com/isaacs/npm/blob/master/lib/utils/read-json.js#L485-487
[02:03] isaacs: wdbl: or the section on "semicolons" in `npm help coding-style`
[02:04] Dmitrijus has joined the channel
[02:04] isaacs: wdbl: http://npmjs.org/doc/coding-style.html#Semicolons
[02:04] wdbl: you said "unless you want it to be function call"
[02:04] wdbl: but the first line of npm.js is a function call.
[02:04] isaacs: wdbl: yeah, it's ;(function () {
[02:04] isaacs: note the ;
[02:05] wdbl: yes, I see that. why is it there for that function?
[02:05] isaacs: because otherwise, it'd be a line starting with (, which is not allowed
[02:05] janekp: ';' rocks, because it's much easier to read the code in your head. Especially when you have to switch between C/Obj-C/C++, C#, JS. More consistent. Similarly that's why I use "m_" prefix for instance variables in Obj-C/C++ (easier to debug/scroll through code, spot memory issues etc).
[02:05] BillyBreen has joined the channel
[02:06] langworthy has joined the channel
[02:06] wdbl: @isaacs - why don't they do it on the first line here? https://github.com/joyent/node/blob/master/src/node.js
[02:06] wdbl: it's the same thing
[02:06] wdbl: they have comments above it, that's all.
[02:07] Aria: Well, two things -- that's a different project with a different coding style. And it's definitely not attached to anything else, being the first thing.
[02:07] isaacs: wdbl: because i don't set the js style for node core :)
[02:07] isaacs: wdbl: there are other considerations there.
[02:07] dubenstein has joined the channel
[02:07] isaacs: wdbl: as i mentioned above, node uses the gjslint tool.  there's different politics and policies at work there.
[02:07] wdbl: oh I thought you meant "not allowed" as in it won't work
[02:07] isaacs: no, i meant "not allowed" as in "you should not allow it"
[02:07] isaacs: it's like pooping in the street.
[02:07] wdbl: oh, I disagree
[02:07] isaacs: i mean, sure you CAN do it, i GUESS.
[02:08] isaacs: you can probably even get away with it, or find places where everyone does it every day.
[02:08] isaacs: but, still.  ew.
[02:08] wdbl: I think you're the one pooping but I'm cool with disagreeing :)
[02:08] jldbasa has joined the channel
[02:08] halfhalo: only in this channel can people go from js to pooping in streets
[02:08] wdbl: hehe
[02:08] isaacs: wdbl: there's a lot of overhead and ceremony involved with node's internals.
[02:08] isaacs: wdbl: less so with the npm client.
[02:08] isaacs: and that's kind of a good thing.
[02:09] isaacs: node's a bigger project, bigger team, more investors in it, etc.
[02:09] janekp: no semis - toy language :) /perception
[02:10] wdbl: @isaacs: yep. I'm actually building a program that is similar to node, that gives the JS the same API, but I am not jumping through all the hoops that node does.
[02:10] isaacs: "making it comfy for isaacs" is lower consideration than "automated lint and more eyeballs"
[02:10] cmr: ACTION doesn't understand why people get all riled up about their commas and semicolons
[02:10] isaacs: but for node-tar, or glob, or graceful-fs, or npm, that's not the case.
[02:11] secoif has joined the channel
[02:11] wdbl: cmr: I was just talking about it because I read @isaacs' article and he seemed to have a lot to say about it and he was here. Not riled up :) Just having an opinion.
[02:11] janekp: btw, why isn't there a built-in glob support
[02:11] cmr: janekp: globs where and how?
[02:11] davehamptonusa has left the channel
[02:11] isaacs: cmr: ?
[02:12] janekp: why do i have to roll my own or use that native extra module
[02:12] wdbl: @isaacs: No matter what I say, I hope you know that I have the utmost respect for your intelligence and I truly thank you for npm - it's a great app
[02:12] isaacs: janekp: node-glob is just js now.
[02:12] isaacs: wdbl: that's sweet of you, thanks :)
[02:12] wilmoore has joined the channel
[02:12] janekp: oh i noticed just now
[02:13] janekp: but still, seems like a core functionality
[02:13] janekp: every decent scripting language has it :P
[02:13] isaacs: wdbl: yeah, i think this is the sort of thing that actually is so cool about node, that you can have a lot of different opinions, and the core is small enough and userland expansive enough that we can be peaceful anarchists.
[02:13] cmr: janekp: Globs where and how? In filenames?
[02:13] janekp: yes
[02:13] janekp: https://github.com/isaacs/node-glob
[02:13] cmr: That's a feature of the shell, not of the OS.
[02:13] isaacs: janekp: npm's registry IS the standard library.
[02:13] cmr: Node exposes the OS
[02:14] janekp: :)
[02:14] isaacs: janekp: we draw the line a bit closer to the metal in node.
[02:14] isaacs: janekp: that allows faster innovation.
[02:15] isaacs: at the cost of a bit more chaos.
[02:15] warz has joined the channel
[02:15] warz has joined the channel
[02:15] isaacs: but it makes node good for very small use-cases, where ruby or python are kind of bloated, especially in mobile and devops worlds.
[02:15] jerrysv has joined the channel
[02:16] isaacs: also, it leaves the door open for someone else to write a much beter glob implementation, and take the top spot, without having to update the core binary.
[02:16] isaacs: (or get 1000 people to all vote on it, ugh)
[02:17] lwille_android has joined the channel
[02:18] janekp: and another pet peeve: https://github.com/joyent/node/issues/1167
[02:19] rtgibbons has joined the channel
[02:19] isaacs: janekp: yeah, i dunno what happened with that..
[02:19] isaacs: i'll bug felixge
[02:20] isaacs: see where it's at.
[02:20] janekp: cool, thx :)
[02:20] wdbl: @isaacs: Yes I love peaceful anarchy :)
[02:20] Aria: That ++
[02:20] seebees has left the channel
[02:23] LuckySMack has joined the channel
[02:24] torm3nt has joined the channel
[02:24] mattgifford has joined the channel
[02:25] wdbl has joined the channel
[02:26] boogyman has joined the channel
[02:26] boogyman has joined the channel
[02:26] jesusabdullah: so, I somehow got my mom to write her representatives about sopa. I'm surprised, I thought she wouldn't really get it.
[02:26] wdbl2 has joined the channel
[02:27] isaacs: nice
[02:27] willwhite has joined the channel
[02:28] jesusabdullah: Yeah
[02:29] Shaunzie has joined the channel
[02:29] jesusabdullah: It's amazing how facebook has made my older family members technologically literate that way
[02:29] jesusabdullah: or, well, in general
[02:29] wdbl has joined the channel
[02:30] zitchdog has joined the channel
[02:30] jesusabdullah: like, when parents first started joining facebook all us kids were like, "R U SPYIN ON ME"
[02:30] jesusabdullah: I know I was
[02:30] jesusabdullah: Now I think it's great XD
[02:30] a_suenami has joined the channel
[02:31] dubenste1n has joined the channel
[02:31] secoif has joined the channel
[02:31] mattgifford has joined the channel
[02:31] astralab_ has joined the channel
[02:32] ovaillancourt has joined the channel
[02:32] astralab_ has joined the channel
[02:33] nicholasf: hi, can anyone get Faker.js to load via its module? https://gist.github.com/f5662c850a590da978cf
[02:35] theCole has joined the channel
[02:35] hackband has joined the channel
[02:36] mattgifford has joined the channel
[02:36] secoif: nicholasf you're installing it globally
[02:37] secoif: nicholasf you can't require() globally installed modules
[02:37] mattgifford has joined the channel
[02:38] pluc has joined the channel
[02:38] brianseeders has joined the channel
[02:38] xbayrockx has joined the channel
[02:38] wdbl: secoif: how do you get to them then?
[02:39] nicholasf: secoif: ok thanks
[02:39] secoif: wdbl npm install module will install to local ./node_modules folder
[02:39] secoif: wdbl global modules are for executable scripts
[02:39] nicholasf: ACTION looks up wdbl
[02:40] wdbl: ahh, oh ok. I didn't exactly get to that part in my reading yet.
[02:40] nicholasf: ah, haha, sorry
[02:40] luke` has joined the channel
[02:40] wdbl: I've been making a study of the whole code base and architecture in general. it's a lot
[02:40] nicholasf: secoif: hrm, I think node should scan both the global library location and the local for modules
[02:41] rwaldron has joined the channel
[02:41] secoif: wdbl `npm help folders`
[02:41] wdbl: that's what I thought too nicholasf
[02:41] nicholasf: why would I ever want to use a global folder for node modules if it's just my machine?
[02:41] nicholasf: ACTION abruptly stops using -g
[02:41] secoif: nicholasf wdbl locally installed modules solves a lot of issues related to conflicting dependencies
[02:41] nicholasf: secoif: thanks :)
[02:41] dschn has joined the channel
[02:42] luke`_ has joined the channel
[02:42] tttthet has joined the channel
[02:42] secoif: nicholasf wdbl npm help faq
[02:43] nicholasf: ok cool
[02:43] Wizek-other has joined the channel
[02:43] Me1000 has joined the channel
[02:44] chadskidmore has joined the channel
[02:44] nicholasf: The  global  install location is a place for command-line utilities to put their bins in the
[02:44] wdbl: secoif thank you
[02:44] nicholasf:        system PATH.  It's not for use with require().
[02:44] nicholasf: "
[02:44] ditesh|cassini has joined the channel
[02:44] nicholasf: gotcha, nice
[02:44] luke`_ has joined the channel
[02:45] nicholasf: ACTION just learnt npm link
[02:45] mattgifford has joined the channel
[02:45] don_jones: tends to save development time
[02:46] unomi has joined the channel
[02:46] praCt has joined the channel
[02:46] secoif: isaacs i've been thinking about npm star… doesn't this mean that older packages will naturally 'float to the top' since they'll get more stars over time?
[02:47] secoif: isaacs perhaps npm star should have a decay? It's also not particularly 'discoverable' itself, so it's got to solve that issue itself before it can really get around to aiding package's discovery issue
[02:48] alviss has joined the channel
[02:48] alviss: hello
[02:48] AvianFlu: secoif, ++
[02:48] alviss: anyone home?
[02:49] dschn has joined the channel
[02:49] secoif: alviss hello
[02:49] alviss: hello secoif
[02:50] alviss: do you have a nick of Skype? can you give me?
[02:50] alviss: a have some question about install nodejs on windown. So can you help me?
[02:51] wdbl: windowns
[02:51] wdbl: alviss, what's the problem?
[02:51] alviss: so I installed a node.exe
[02:52] alviss: can you tell me how to run a simple code on that?
[02:52] lwille_android has joined the channel
[02:52] maletor has joined the channel
[02:52] wdbl: sure, you just write a test.js file
[02:52] wdbl: then you do node.exe test.js
[02:52] alviss: I downloaded that file on nodejs.org
[02:52] wdbl: at th command line
[02:52] wdbl: ok
[02:52] wdbl: where'd you put it?
[02:52] cjm has joined the channel
[02:53] secoif: alviss I dont' run node on windows, a quick google gave me this video tutorial though: http://www.google.com.au/url?sa=t&rct=j&q=installing%20nodejs%20windows%20tutorial&source=web&cd=2&ved=0CCoQFjAB&url=http%3A%2F%2Fblogs.msdn.com%2Fb%2Fbrunoterkaly%2Farchive%2F2011%2F12%2F12%2Fvideo-tutorial-how-to-install-and-run-node-js-on-windows.aspx&ei=c4UXT8mBDsKdmQX6wMH-BA&usg=AFQjCNE3KO8IKNZfguAkBTqPWGFBq_CQZg&sig2=vHEQPq0JDOBTJ7h5jJX
[02:53] secoif: Oeg
[02:53] joshkehn has joined the channel
[02:53] joshkehn has left the channel
[02:53] wdbl: i am running it on windows right now alviss
[02:53] lwille has joined the channel
[02:54] alviss: I have installed on C:
[02:54] wdbl: ok so open up a cmd prompt
[02:54] wdbl: and type: cd \
[02:54] wdbl: and then type: node.exe
[02:54] wdbl: and you should then be inside of a node REPL
[02:55] wdbl: where you can enter javascript statements
[02:55] wdbl: to open a commad prompt: click start, click Run, type: cmd, press ENTER/RETURN
[02:56] alviss: when i type "test.js" it only show the message: ReferenceError: test is not define
[02:56] xbayrockx: Could someone please explain to me what Express does
[02:56] alejandromg has joined the channel
[02:56] isaacs: alviss: at the command prompt, type: node test.js
[02:57] isaacs: alviss: where "test.js" is a file in the current directory
[02:57] wdbl: @isaacs: he's in the REPL by now.
[02:57] isaacs: yeah
[02:57] markq: express makes coffee
[02:57] isaacs: if you're in the repl, then it's: require("./test.js")
[02:57] isaacs: or: t = require("./test.js")
[02:58] jacobolus has joined the channel
[02:58] MrTopf has joined the channel
[02:58] joshfinnie has joined the channel
[02:58] alviss: wdbl  can you give me a skype nick or yahoo?
[02:59] wdbl: alviss: the REPL is where you can type live javascript code without needing a test.js file. you can type: process.exit(); // and then press ENTER to get out if you want.
[02:59] pradeebv has joined the channel
[02:59] wdbl: to just run a test.js file, go into a cmd prompt and just type: node.exe test.js. If you can't do that, I don't think anyone here can really help you.
[03:00] wdbl: alviss: sorry no, I don't have any internet service right now
[03:00] alviss: i typed it and the screen only display: ...
[03:00] wdbl: alright, just hit Ctrl + C
[03:01] wdbl: twice
[03:01] wdbl: and then you're back in the cmd prompt
[03:01] alviss: yeah, i'm back in the cmd prompt, 
[03:01] alviss: should i need to do next?
[03:02] bradleymeck has joined the channel
[03:03] pradeebv_ has joined the channel
[03:04] secoif: alviss pardon
[03:04] wdbl: alviss: read this, starting here http://www.nodebeginner.org/#a-basic-http-server - if you can't get that running, you need to find a better tutorial.
[03:05] wdbl: if you get that working, you should just read everything you can find about node and try lots of stuff out.
[03:05] alviss: yes, thanks so much wdbl
[03:06] isufy has joined the channel
[03:06] wdbl: np
[03:06] caolanm has joined the channel
[03:06] c4milo has joined the channel
[03:07] wdbl: ACTION really does have internets, but it's a secret
[03:11] asoltys has joined the channel
[03:12] alviss: wdbl: where can i save my .js file???
[03:12] siddhion has joined the channel
[03:12] alviss: in the nodejs folder???
[03:12] secoif: alviss save it wherever you want. just cd to that folder before you run node.exe 
[03:13] alviss: thanks secoif
[03:14] deedubs has joined the channel
[03:14] overmind has left the channel
[03:16] alviss: secoif : why i still get : ...     when i type any code??
[03:16] alviss: @_@
[03:16] briandh has joined the channel
[03:16] briandh has left the channel
[03:17] secoif: alviss usually that happens if you screw up the syntax
[03:17] Caboose_ has joined the channel
[03:18] jkridner__ has joined the channel
[03:18] secoif: alviss eg, missing closing brace
[03:20] alviss: secoif do you have a skype nick? Can you look forward for me by using teamviewer?
[03:20] xtianw has joined the channel
[03:22] pb has joined the channel
[03:22] secoif: alviss no sorry, I'm reasonably busy at the moment. You should be able to get enough help from either this channel or google. Google for more 'getting started with node' tutorials
[03:22] pb: anyone here got experience writing c++ node bindings?
[03:23] alviss: yeas, thanks secoif... I get stuck with it 3 days until now
[03:24] astralab has joined the channel
[03:24] pifantastic has joined the channel
[03:24] RobWC has joined the channel
[03:25] Wa has joined the channel
[03:25] westc has joined the channel
[03:25] josh_wines has joined the channel
[03:26] dwhittle has joined the channel
[03:28] mattgifford has joined the channel
[03:29] dimas has joined the channel
[03:29] fabianops has joined the channel
[03:30] markdaws_ has joined the channel
[03:30] avalanche123 has joined the channel
[03:30] fabianops: anyone aware of some Node.js startup in Vancouver?
[03:32] jakehow has joined the channel
[03:34] postwait has joined the channel
[03:35] pizthewiz has joined the channel
[03:35] westc: fabianops: why?
[03:36] h4mz1d has joined the channel
[03:36] ap3mantus has joined the channel
[03:36] blueadept has joined the channel
[03:37] fabianops: going to move there, need work
[03:37] abraxas: move to tokyo instead and work for us? :)
[03:38] deedubs has joined the channel
[03:38] fabianops: get me a visa, I will be there
[03:38] abraxas: are you serious?
[03:38] fabianops: I always enjoyed japan, what can I say
[03:39] abraxas: cool
[03:39] koo4 has joined the channel
[03:41] madhums has joined the channel
[03:42] pradeebv_ has joined the channel
[03:42] deedubs has joined the channel
[03:43] isaacs has joined the channel
[03:43] pradeebv__ has joined the channel
[03:44] stelcheck has joined the channel
[03:47] tonymilne: Anyone have experience with TJ's Kue module that i can chat to?
[03:48] nibblebot has joined the channel
[03:49] khrome has joined the channel
[03:49] mattgifford has joined the channel
[03:50] clarkfischer_ has joined the channel
[03:50] yogig has joined the channel
[03:51] Vennril2 has joined the channel
[03:52] WRAz1 has joined the channel
[03:53] WRAz1: heya, what is the overhead of a massive number of TCP sockets open on a server?
[03:54] MadGu1_ has joined the channel
[03:54] redir_ has joined the channel
[03:56] booo has joined the channel
[03:56] Aria: Buffer space for each plus a bit of bookkeeping overhead.
[03:56] sarlalian has joined the channel
[03:57] mandric has joined the channel
[03:57] mattgifford has joined the channel
[03:57] literal_username: Anyone know of a good tool or method for discovering how memory is allocated accross a Node application?
[03:57] secoif: WRAz1 should be pretty easy to write a benchmark
[03:58] emostar has joined the channel
[03:58] secoif: WRAz1 while (server.stillAlive) { openSocket() }
[03:59] WRAz1: ^ truth.
[03:59] Aria: literal_username: What sort of metrics are you looking for?
[03:59] k1ttty has joined the channel
[04:00] caludio has joined the channel
[04:01] WRAz1: so trying to design a really simple and stupid entity server <-> simulation server setup where the entities live on a different server than the simulation (doesn't have to be fast, but I want to stuff as many entities into the simulation as possible) I was thinking about having each entity on the entity server actually be responsible for which simulations it is connected to.
[04:02] literal_username: Aria: Ideally I'd love to generate a map of JS objects in memory with the maximum memory they've utilized.
[04:02] WRAz1: it also means that you could easily have entities connected to multiple simulations, but unfortunately that means the sim servers would have millions of sockets (possibly)
[04:02] WRAz1: and I want the entity servers to be as stupid as possible.
[04:03] Aria: literal_username: That'd be tough, since objects are cyclic, and generally themselves small. (Buffers aside.)
[04:03] pizthewiz has joined the channel
[04:03] Aria: (And large arrays, I suppose)
[04:03] WRAz1: Doesnt' the chrome debugger do a snapshot that is fairly useful?
[04:03] literal_username: Aria: Yes. It would be nice to filter the result for the large ones.
[04:04] secoif: WRAz1 do they need to be on different machines
[04:04] WRAz1: @secoif: yeah and possible even across the internet. 
[04:04] secoif: WRAz1 or could you run many nodes on one machine
[04:04] secoif: ok
[04:04] reid has joined the channel
[04:04] secoif: WRAz1 interestings.
[04:04] literal_username: Aria: It would also be nice to filter the result in other ways, to attempt to discover patterns of which objects are tending to consume the most memory, and how many of them there are.
[04:05] literal_username: Aria: Any idea how one might approach writing something to do that?
[04:05] dubenstein has joined the channel
[04:05] albertosh has joined the channel
[04:06] WRAz1: @secoif: so, game servers are rough to write and even harder to maintain but I think with this system it'd be a great seperation of concern. 
[04:06] soapyillusions has joined the channel
[04:06] jetienne_ has joined the channel
[04:06] WRAz1: Then when you need speed you could run ES servers on the same machine as the sim and basically have entity caches from the canonical ES.
[04:07] monteslu has joined the channel
[04:07] bradleymeck has joined the channel
[04:09] jerrysv has joined the channel
[04:09] Aria: literal_username: Not offhand -- it's a venture I've not had to undertake yet. 
[04:11] kenperkins: does anyone know if you need to rebind stream.end events every time you connect a tls stream?
[04:12] context: literal_username: are you trying to proactively make your app more efficient at that level?
[04:12] context: good luck with that...
[04:12] dimas has joined the channel
[04:12] Aria: Why?
[04:12] pifantastic_ has joined the channel
[04:12] WRAz1: @context: seems like a decent profiling approach to efficiency
[04:13] context: well he said object level. and reducing memory footprint by a few K is hardly making the app any 'better'
[04:13] WRAz1: few K per object :D
[04:13] WRAz1: (maybe)
[04:13] context: sure, maybe if you are alooking at an embedded platform
[04:13] zeade has joined the channel
[04:14] WRAz1: Not all of us have the luxury of assuming 10 clients. *gripes about enterprise platforms and the real cost of servers*
[04:14] context: and i hope you realize new SomethingMagic() is creating a LOT more than one object
[04:14] marcello3d has joined the channel
[04:14] context: if your app cant handle more than 10 clients the LEAST of your problems should be memory usage
[04:14] WRAz1: like 80% of drupal modules out there are unusable because they didn't take into consideration that lack of page cache.
[04:14] literal_username: context: Yes, I am.
[04:15] context: and IF 10 clients is using THAT much memory. you shouldn't have to go to that level to find out where its going
[04:15] context: it should be hitting you in the face if it had arms
[04:15] WRAz1: 10 clients is an exaggeration :(
[04:15] Aria: Assuming your app even falls into the pattern you're thinking of, context.
[04:15] context: what?
[04:15] literal_username: context: ...trying to proactively make your app  more efficient at that level
[04:15] Aria: (My uses of node involve parsing HTML. And some of those documents can be pretty feisty.)
[04:15] context: wtf are you deploy'ing on a vps with 32M or memory ? you shouldn't expect more than 10 clients
[04:16] context: so compare the different dom parsers out there, and make one better if needed 
[04:16] context: OR... spend months looking at per-object memory usage?
[04:16] WRAz1: @context: millions of used iphone gen 1s 
[04:17] context: while we're at it lets take a hand full of sand from the beach, and put them all back exactly where they were one at a time
[04:17] literal_username: There's no reason it should take a long time to evaluate. Some objects and object types should be clearly larger than the others.
[04:17] context: why do they have to be gen1 iphones? are they different from a client standpoint over an android? or ipad ?
[04:18] kriszyp has joined the channel
[04:19] context: literal_username: yes it doesn't take long at all... thats why everyone does this already. oh wait, nearly no one does it.
[04:19] literal_username: Ha. Fair enough.
[04:19] lwille has joined the channel
[04:19] pyrotechnick: WRAz1: you seem to know your stuff, do you know what the best structure is for "3d" arrays in JavaScript is? i.e. object/array with a hashed index or jagged/nested arrays?
[04:19] context: why are you instantiating SO much stuff at once you need to worry about saving 1-2K per object?
[04:20] context: actually, i want a good reason for instantiating "that" much stuff you need to worry about saving 1-2K per object
[04:20] WRAz1: I've been junking mine into the native matrix from webg last I did that
[04:20] WRAz1: *webgl
[04:21] literal_username: context: I have a hunch that my memory distribution is disproportionate, and that I could make drastic improvements with a few tweaks.
[04:21] pyrotechnick: Float32Array?
[04:21] WRAz1: yar
[04:21] context: not to mention an objects memory foot print itself (hold buffers) is going to be 1-2K at best probably
[04:21] WRAz1: also didn't three.js solve this as well?
[04:21] pyrotechnick: do you hash it like this "x + (y * CX) + (z * CX * CY)"
[04:21] WRAz1: ^ they have pretty sweet benchmarks
[04:21] context: literal_username: im not even going to ask what that even means
[04:22] WRAz1: at any rate, 100% sure its not an object you want to put it into pyro xD
[04:22] dreamdust has joined the channel
[04:22] context: its fairly simple... your code is either instantiating a lot of crap it doesn't need to, or.... well thats about it
[04:23] context: literal_username: simple obvious issue: you enjoy select * from table; and instantiate 50K objects for every table record. NOT the brightest idea and should never happen
[04:23] literal_username: Sure
[04:23] context: node has a fairly tiny footprint to begin with
[04:23] WRAz1: well, looks like threejs just uses a vector3/4 object they made :(
[04:24] bradleymeck: gf3, i think i kept the same API in my fork now, and fixed the comm issue but i saw you did too
[04:24] literal_username: There are a few places where I create objects that will be used eventually. Their creation could be deferred, and this would add some complexity, but may be worthwhile. That's what I'd like to test.
[04:24] pyrotechnick: WRAz1: okay you don't know your stuff at all lol
[04:24] bradleymeck: but the internal stuff is way different due to plugins
[04:24] bradleymeck: and the callback wont respect setTimeout etc
[04:24] xbayrockx: Hey, I need to get my Node server to serve .PHP files
[04:24] xbayrockx: How can I do that ?
[04:24] xbayrockx: Ohw ait
[04:24] xbayrockx: PHP is server side
[04:25] WRAz1: oh, I thought you were talking about rendering.
[04:25] context: literal_username: if they are gonna be used cool. im still wondering just how much memory you are using for 10 clients you need to look at that level to fix it
[04:25] pyrotechnick: yeah this xbayrockx dude is definitely a troll
[04:25] WRAz1: Are you just talking about positional 3D maps? Octree.
[04:25] pyrotechnick: WRAz1: octrees fucking suck
[04:25] literal_username: I never said 10 clients.
[04:25] WRAz1: dude
[04:25] WRAz1: octrees are awesome.
[04:25] pyrotechnick: no they suck arse
[04:25] WRAz1: Why do you think they suck
[04:26] pyrotechnick: they have terrible complexity traits
[04:26] context: i keep forgetting wiki is black. good thing i have an escape key
[04:26] airhorns has joined the channel
[04:26] gigafied has joined the channel
[04:26] WRAz1: yes, but they are fast.
[04:26] gf3: bradleymeck: awesome
[04:26] pyrotechnick: no, they're compact, they're slow as hell
[04:26] gf3: bradleymeck: I switched the tests over to should.js
[04:27] gf3: bradleymeck: doesn't look like async_testing is being maintained
[04:27] bradleymeck: gf3 just need to redo all the docs :/ i just moved em to vows XD, which do you want
[04:27] pyrotechnick: also adding 1 voxel can require the entire tree to be rebuilt
[04:27] gf3: bradleymeck: I don't care, really, I'm not stuck to anything
[04:27] gf3: bradleymeck: as long as they work, I'm not picky
[04:27] pyrotechnick: i assume you've just read octrees are awesome somwhere, they're not they holy grail of anything 
[04:28] bradleymeck: gf3 im leaving them then, will have it refactored and ready for full review by end of weekend, been a while longer than i wanted but its going
[04:28] bradleymeck: only oddity is me writing big warning on how to make it insecure
[04:28] WRAz1: dude, I've implemented quadtrees and octress before.
[04:28] pyrotechnick: for what
[04:29] WRAz1: 2d/3d collision detection and physics
[04:29] pyrotechnick: that's for searching
[04:29] WRAz1: yar
[04:29] pyrotechnick: yeah
[04:29] pyrotechnick: read/write/iteration of an octree sucks
[04:30] WRAz1: What are you asking about then
[04:30] pyrotechnick: im just asking to represent a dense volume / voxels if you will
[04:30] pyrotechnick: in terms of random read/writes
[04:30] WRAz1: no clue ^
[04:30] kmiyashiro has joined the channel
[04:32] WRAz1: Are you doing something fun with voxels?
[04:32] pyrotechnick has joined the channel
[04:33] emostar has left the channel
[04:36] xbayrockx: Ok
[04:36] davidbanham has joined the channel
[04:36] xbayrockx: I think I want to proxy requests from NodeJS to Apache
[04:36] xbayrockx: In order to serve PHP files
[04:36] pyrotechnick: this dudes just a troll don't bother
[04:37] xbayrockx: Or, How else could I interact with a database?
[04:37] WRAz1 has left the channel
[04:38] isaacs: secoif: hey
[04:38] insin: Damn, 4:38am
[04:38] insin: You win again, JavaScript
[04:38] isaacs: secoif: so, the plan is eventually that "starring" a package would be like adding it to your favorites
[04:38] secoif: isaacs ahh, that's a different issue
[04:39] isaacs: secoif: you'll be able to log in, and see the things you've starred, and whatever is going on with them, and also view a user and see what things they star.
[04:39] isaacs: i think this will encourage people to *un*star packages that are no longer relevant to them
[04:39] isaacs: bur really, we'll have to see what folks do once the data is exposed and easier to mess with.
[04:39] joemccann has joined the channel
[04:39] isaacs: my hope is that there'll be some interesting stuff coming out of it.
[04:39] grom358: does jquery with jsdom have bugs relating to img tags?
[04:40] grom358: I can't do this.. $('#someEl').find('img').each(function() { $(this).replaceWith('<span>img</span>'); }
[04:40] pyrotechnick: this http://jsperf.com/nested-vs-flat-vs-map is a benchmark for 3d structures in JS, can the JS heros here take a look and see if this is fair please…
[04:41] secoif: isaacs I guess if the timestamp for when the package was starred is exposed, a 3rd party tool could implement the decay thing I was suggesting
[04:41] madhums1 has joined the channel
[04:41] isaacs: secoif: well, yeah, but packages might *stay* relevant.
[04:41] RobWC1 has joined the channel
[04:41] fabianops has left the channel
[04:42] isaacs: or you might find people "clumping" into cliques around certain packages, where for instance, all the users who star X and Y also are interested in Z, so if you like X and Y we can show you Z
[04:42] isaacs: i think that that IS happening, for example around substack's stuff, or express plugins, or hookio and other nodejitsu tools.
[04:42] isaacs: and there's a lot of overlap, obviously
[04:43] secoif: isaacs surely you could get that info indirectly by tracking what users npm install/npm remove
[04:43] isaacs: there's a little joyent corner in the node module ecosystem with joyent-created smartos stuff.
[04:43] secoif: isaacs opt-in tracking of course
[04:43] isaacs: secoif: yes, that's planned too
[04:43] isaacs: opt-in as well as log trawling
[04:43] brngardner has joined the channel
[04:43] ryanfitz has joined the channel
[04:43] secoif: isaacs hm. exciting times.
[04:44] RobWC has joined the channel
[04:46] secoif: isaacs hm. exciting times.
[04:47] secoif: ACTION oops.
[04:48] dshaw_ has joined the channel
[04:50] Shakir has joined the channel
[04:51] Shakir has joined the channel
[04:52] astropirate has joined the channel
[04:52] Shakir: hi
[04:52] dgathright has joined the channel
[04:52] commando: hi
[04:54] confoocious has joined the channel
[04:54] confoocious has joined the channel
[04:55] dshaw_ has joined the channel
[04:55] litropy_ has joined the channel
[04:55] nerdfiles1 has joined the channel
[04:55] nerdfiles1 has left the channel
[04:56] yolin has joined the channel
[04:56] niloy__ has joined the channel
[04:56] grom358: which is the official git for node?
[04:57] warz has joined the channel
[04:57] warz has joined the channel
[04:57] vereteran has joined the channel
[04:58] Aria: joyent's repo
[04:58] pyrotechnick: https://github.com/joyent/node
[04:58] pyrotechnick: https://github.com/joyent/node.git
[04:58] pyrotechnick: git://github.com/joyent/node.git
[04:58] grom358: cheers
[04:58] MrTopf has joined the channel
[04:59] joshkehn has joined the channel
[05:00] vereteran has joined the channel
[05:00] commando: how can i create a link in jade
[05:00] commando: describe me
[05:01] tytsim has joined the channel
[05:01] LuckySMack: anyone in here using webstorm/phpstorm/idea for node.js? had a question for anyone that might be. trying ti get something working properly.
[05:01] jerrysv has joined the channel
[05:02] replore has joined the channel
[05:02] replore_ has joined the channel
[05:03] springmeyer has joined the channel
[05:04] munichlinux has joined the channel
[05:04] westc: haven't used phpstorm but if I may say so myself... php != node.js
[05:04] Aria: My coworker at work does, LuckySMack
[05:04] gigafied has joined the channel
[05:06] LuckySMack: westc: yea i agree. but it has a node.js plugin which is supposed to work rather well for doing just node stuff. the support in all three of those is essentially the same. just different flavors of the same IDE.
[05:06] LuckySMack: Aria: ah cool.
[05:06] replore has joined the channel
[05:06] replore_ has joined the channel
[05:06] emostar has joined the channel
[05:07] LuckySMack: yea its giving me unresolved variable on createserver (http.createserver(....)). It still runs, just wondering if its not setup right or something.
[05:07] jacobolus has joined the channel
[05:08] Aria: Hrm. That I don't know.
[05:08] emostar: is there a way to get querystring.parse to break something in the format of parameter[id]=3 into parameter.id ? basically turning the brackets into sub objects
[05:08] LuckySMack: yea im testing out the ide to see if i want to buy it. since at work we might be getting the phpstorm version anyways for php work.
[05:09] LuckySMack: what editors do people seem to use for node? other than vim/emacs. (heh and no im not asking whats better. im just new to node)
[05:10] LuckySMack: cloud9 looked cool.
[05:10] Aria: I use vi.
[05:11] Aria: Coworkers of mine use eclipse, phpstorm, vi, vim, textmate, and joe.
[05:11] warz: I'm a fan of eclipse.
[05:11] richardr has joined the channel
[05:12] LuckySMack: never could stand vi. at my last job we had to use it a lot for remote server work. just never liked it. they all wanted to slap me when I asked if nano was installed. heh
[05:12] westc: I wish textmate was the standard
[05:12] LuckySMack: eclipse is nice, but it always ran slow on my machines. i liked aptana studio 3 too.
[05:13] Aria: Yeah, eclipse is a dog that way.
[05:13] mattgifford has joined the channel
[05:13] Aria: Textmate is pretty delightful. Pretty. 
[05:13] LuckySMack: have you used sublimetext? that seems to be thrown around a lot when text mate is. I use it for my basic editor.
[05:13] Aria: Can actually stand to look at it all day.
[05:13] Draggor: LuckySMack: how far through vimtutor did you go?
[05:13] Aria: Yeah, sublime would be nice too.
[05:13] warz: eclipse has always ran fine for me
[05:13] LuckySMack: heh.
[05:14] warz: my eclipse looks super sexy :/
[05:14] Aria: Hehe. vim is a commitment to a whole new way of thinking.
[05:14] Aria: One I think is very useful, I spend more time thinking about code than editing with it. But different.
[05:14] LuckySMack: Draggor: i went a decent amount. never finished though. I left that job (not bevause I didnt like vi).
[05:15] Draggor: eclipse is decent with keyboard shortcuts.  It's not the most sane thing in the world when it comes to Java.  Haven't used it for other langugaes.
[05:16] LuckySMack: yea Im pretty strict when it comes to keyboard shortcuts, i use them a lot. just didnt really like how vi was laid out i suppose. I admit it is pretty damn powerful for skilled users.
[05:16] Aria: A coworker of mine is lightning fast with eclipse the way I am with vi. I know it's possible. He doesn't however ever close his editor.
[05:16] LuckySMack: I always thought eclipse was kinda ugly. heh
[05:16] Aria: Whereas my workflow involves flipping in and out of editors constantly.
[05:16] Draggor: LuckySMack: unless you really used vi, chances are it was vim (there's a difference)
[05:17] warz: with eclipse, you gotta get rid of all the default settings. :p
[05:17] gkatsev: it might be vim-tiny or vim-minimal
[05:17] LuckySMack: ah yea, sorry I used vim.
[05:17] Draggor: Visual Studio, for example, is pretty horrid when it comes to keyboard shortcuts, or making sense in general.
[05:18] mongrelion has joined the channel
[05:18] pifantastic has joined the channel
[05:18] LuckySMack: We use VS at work for C#, its a nice IDE, but i agree not very good on the shortcuts.
[05:18] mongrelion: hi there o/
[05:18] LuckySMack: but its only good for C languages and related. I prefer other still
[05:18] Draggor: It's what I'm using it for too.  Doing WPF?  Great!  Doing anything else with it, like code navigation?  Pretty bad.
[05:18] LuckySMack: agreed
[05:19] Draggor: Its code completion is actually pretty sexy.
[05:19] LuckySMack: yea it is.
[05:20] mongrelion: I'm using expectjs to test a model and there's an error that's really annoying and this is the second time I get it and am clueless on how to fix it. I basically get something like "Error: expected 1 to equal 1". Any ideas? I'm doing something like expect(blah.version).to.be(1);
[05:20] LuckySMack: heres a node.js specific ide. seems fairly simplistic though http://coreh.github.com/nide/#screenshots
[05:20] cjm has joined the channel
[05:20] mongrelion: and even though that property is set to 1, the test fails.
[05:21] mongrelion: it works if I hack, so this works "expect(blah.version.toString()).to.be('1')" :/
[05:21] Aria: is it 1 or "1"?
[05:21] mongrelion: it is 1, actually. I'm using mongoose and the property is declared as a number.
[05:22] mongrelion: also, if I test expect(blah.version).to.be.a(Number) it passes.
[05:22] Aria: Huh.
[05:22] RobWC has joined the channel
[05:22] mongrelion: if I test expect(0).to.be(0); it passes
[05:22] nibblebot has joined the channel
[05:23] grom358 has joined the channel
[05:23] grom358: this is making NO sense.. WTF!!!
[05:23] Alex___ has joined the channel
[05:23] mongrelion: zactly, no sense at all haha
[05:24] bradleymeck has joined the channel
[05:24] Alex___: Can someone help me figure out how to profile a script? I'm trying to optimize several functions, but v8-profiler isn't installing on 0.6.7
[05:25] SvenDowideit_ has joined the channel
[05:25] asoltys has joined the channel
[05:28] der has joined the channel
[05:28] joshsmith: what alternatives are there to socket.io in Node?
[05:29] joshsmith: or is socket.io really the way to go?
[05:29] r1ao2 has joined the channel
[05:29] warz: alternatives for what?
[05:29] joshsmith: making an app realtime
[05:29] r1ao2: sort of express question, or maybe it's more connect, idk, but anyone know how to point to a routes handler in express? closes i got is app.routes.lookup('all', '/greet')[0].callbacks[0]
[05:29] joshsmith: in this case, I'm talking about messaging
[05:30] jacobolus has joined the channel
[05:30] jerrysv has joined the channel
[05:30] warz: depending on the requirements, there are literally several ways to go about that
[05:30] warz: and socket.io may or may not be required
[05:30] warz: but socket.io is a nice lib, yes
[05:30] Aria: joshsmith: raw websockets, socket.io, now.js, engine.io
[05:31] joshsmith: now.js is the main alternative I was forgetting
[05:31] polyrhythmic has joined the channel
[05:32] r1ao2 has left the channel
[05:32] gigafied has joined the channel
[05:32] joshsmith: warz and Aria, let's say I have an express app running on port 80
[05:32] emostar has left the channel
[05:32] johnmdonahue has joined the channel
[05:33] joshsmith: how would I use something like now.js to handle some extra realtime functionality on top of that?
[05:33] Aria: You'd bind it into the express stack and then use it.
[05:34] joshsmith: oh
[05:34] joshsmith: yeah
[05:34] joshsmith: I just saw that
[05:34] context: socket.io, faye, now.js
[05:34] Aria: now.js and socket.io are both happy to coexist with express.
[05:34] xbayrockx: Whats the best way to connect to a database when using a NodeJS server?
[05:34] context: there are plenty
[05:34] mongrelion: joshsmith: here's an example on how to do exactly what you're asking for https://github.com/LearnBoost/engine.io
[05:34] Aria: Oh, yeah, faye.
[05:34] joshsmith: ACTION should not ask questions until he watches the video
[05:34] mongrelion: section (B) Intercepting requests for a http.Server
[05:34] chadskidmore has joined the channel
[05:35] joshsmith: thanks mongrelion 
[05:35] HT has joined the channel
[05:35] xbayrockx: Plenty of best ways? :S
[05:36] SubStack: isaacs: I can't wait for the new npmjs.org site to land. It sounds super great.
[05:36] isaacs: SubStack: vaporware is awesome.
[05:36] isaacs: it has all the features, and none of the bugs.
[05:36] SubStack: it is indeed!
[05:36] devongovett has joined the channel
[05:36] isaacs: i think that's why religions do so well.
[05:37] mongrelion: xbayrockx: it depends on the database you want to connect to, I guess
[05:37] joshsmith: so with something like now.js, for example, how can I notify just one client, not everyone?
[05:37] SubStack: well if it doesn't come out sometime soon I'll just as well create it!
[05:37] bacon000 has joined the channel
[05:37] mongrelion: joshsmith: hmm wih socket.io this is done by default.
[05:38] raincole_ has joined the channel
[05:38] mongrelion: the other day I made a lab with socket.io and had a hard time because I didn't know about the broadcast method for a while :P
[05:38] joshsmith: like my use case is PM-ing
[05:39] xbayrockx: I haven't made the database yet so I don't mind
[05:39] mongrelion: joshsmith: check this article out where they talk about how to tie expressjs to socketio
[05:40] mongrelion: xbayrockx: then I have to ask you if you're going to do a webapp or what
[05:40] mongrelion: I think you should stick to an ORM depending on your database and that's it
[05:40] Alex___: How do I profile my code? I'm trying to figure out where my bottlenecks are.
[05:40] joshsmith: mongrelion: actually, do you mind if I lay out my use case some
[05:41] xbayrockx: Yeah 
[05:41] xbayrockx: A webapp, it's a game
[05:41] mongrelion: joshsmith: I do, because I'm going to sleep right now and don't want to miss a thing xD
[05:41] joshsmith: ah, man
[05:42] mongrelion: 00:42 in the morning and have to wake up early to work
[05:42] mongrelion: :(
[05:42] joshsmith: same time here
[05:42] Aria: Aye, me too.
[05:42] joshsmith: but I do not have to wake up early
[05:42] isaacs: SubStack: you mean, all i have to do is not do it, and then that will get you to do it?
[05:42] joshsmith: just staying late tomorrow :(
[05:42] isaacs: SubStack: i think you are maybe needing to learn some things about motivating others.
[05:43] joshsmith: anyone else here work with socket.io or similar that I could bug for 2 mintues?
[05:43] mongrelion: xbayrockx: hmmm for a simple webapplication I'll choose expressjs but it doesn't have a database integration functionality out of the box. Then, I'd like to check flatiron or geddyjs out.
[05:44] mongrelion: joshsmith: shoot
[05:44] mongrelion: shoot if you think you ain't taking more than 2 minutes xD
[05:44] joshsmith: thanks dude. so basically, I have user X and user Y
[05:44] mongrelion: man, I'm getting old. I used to stay up late night up to 2-3 o'clock :S
[05:44] joshsmith: user X sent a message to user Y
[05:45] joshsmith: user Y may or may not be connected to the server, and we'd like to push that update to user Y
[05:45] SuMarDi has joined the channel
[05:45] joshsmith: what I'm missing is how we know if user Y is connected
[05:46] Draggor: joshsmith: how are you matching user objects in your db to connections?
[05:46] Draggor: I assume you'll have a map/lookup somewhere of those who are on
[05:46] joshsmith: well, maybe that's the piece I'm missing
[05:46] mongrelion: joshsmith: ah, nice. sounds "entretenido"
[05:47] mongrelion: joshsmith: hmm you could have a flag on the user model which tells the ... no, forget that one.
[05:47] tytsim has joined the channel
[05:47] joshsmith: right now I have sessions with user ids attached to those
[05:47] mongrelion: you definitely have to have a place to store a list of current connections to make things easier.
[05:47] Draggor: So you probably want the reverse stored so you can go from id to session
[05:48] zivester has joined the channel
[05:48] Draggor: if session is null/disconnected, do what you must with it, otherwise, send.
[05:48] joshsmith: can't I just store the connections in the session object?
[05:49] Draggor: Unless I'm misremembering socket.io, the session object is per user
[05:49] joshsmith: sessions, in this case, are in MongoDB, but hooked up to Express' sessions
[05:49] Draggor: or rather
[05:49] Draggor: per connection
[05:49] Draggor: Oh, express, haven't dug into that one
[05:49] mongrelion: joshsmith: yeah, check the link I have you. You need a express session id related with the user, and based on that session, you check if the connection is still valid/active and then send the message if such thing is true.
[05:49] joshsmith: mongrelion: what link? I didn't see it
[05:49] mongrelion: joshsmith: the blog one... wait
[05:49] ryan_stevens has joined the channel
[05:49] mongrelion: joshsmith: http://www.danielbaulig.de/socket-ioexpress/
[05:50] mongrelion: oh, no, I didn't give you that one. I gave you the one to github :P
[05:50] joshsmith: haha yeah
[05:50] joshsmith: well, in Express each connection has a session
[05:51] joshsmith: but this is really what I want
[05:51] joshsmith: I already do all the memory store stuff
[05:51] bartt has joined the channel
[05:51] joshsmith: using Mongo
[05:51] joshsmith: so I guess I just do this extra handshaking and then do the push that way
[05:51] joshsmith: seems simple enough, I suppose
[05:51] amasad has joined the channel
[05:51] wedtm has joined the channel
[05:52] mongrelion: what you really need is access to the session object. If user Y has an active session, it means it has an active connection (maybe not<?>) and then you'll deliver the message through the socket.
[05:52] mongrelion: aha.
[05:52] dreamdust has left the channel
[05:52] secoif has joined the channel
[05:52] joshsmith: yeah I have access to that, no problem
[05:52] joshsmith: req.session
[05:52] joshsmith: in particular req.session.uid and req.session.type, for my case
[05:52] mongrelion: yeah, but that's from expressjs. You need it in the socket.io context.
[05:53] joshsmith: (I have two different user types)
[05:53] Alex___: I can't seem to get the v8 tick processor to work. I'm calling it via "v8/tools/mac-tick-processor v8.log" and nothing happens.
[05:53] Flushot has left the channel
[05:54] Deputaats has joined the channel
[05:54] joshsmith: can't I touch() the session if I have it in req?
[05:54] joshsmith: within the socket.io context
[05:54] Deputaats: Hi
[05:54] ponep has joined the channel
[05:55] ponep: Anyone around that has managed to get express + swig working?
[05:55] Deputaats: I want to use node-inspector with v8-profiler but can't install v8-profiler
[05:55] joshsmith: basically if(req.session) { //do socket.io stuff }
[05:55] Deputaats: I want to get profile snapshot in google chrome debugger..
[05:55] joshsmith: I have to read more later, mongrelion. Appreciate the help, though
[05:56] Deputaats: Any advice on installing v8-profiler?
[05:56] Alex___: Deputaats: I'm in the same boat. It looks like it doesn't work with v0.6.7
[05:56] mongrelion: joshsmith: no problem. giving ideas is always good to help to flush the brain before going to sleep so that one can sleep well :)
[05:56] mongrelion: bye
[05:56] Deputaats: With which version did it work for you?
[05:56] joshsmith: haha night mongrelion 
[05:56] Deputaats: Alex___, I have tried many versions w/o luck
[05:56] theBrettman has joined the channel
[05:57] mongrelion: joshsmith: you're welcome. read :all: the article (memegenerator)
[05:57] joshsmith: hold :all: the limes?
[05:57] Alex___: Deputaats: I haven't been able to get it to work. I'm trying to figure out how to use the native v8 profiler, via "node --prof" but I'm having trouble figuring out how to process the v8.log file it produces.
[05:57] mongrelion: use :all: the bed to sleep
[05:57] mongrelion: hahaha hold :all: the limes
[05:58] mongrelion: bye
[05:58] theBrettman: wow, busy room. that's reassuring
[05:58] theBrettman: I'm a total noob to this and most of this isn't making sense
[05:58] theBrettman: I need a crash course in all this web server stuff
[05:59] theBrettman: anyone got any good resources for me to get up to speed?
[05:59] theBrettman: I know how to set up apache2 but that's about it, lol
[05:59] Deputaats: theBrettman: http://howtonode.org/
[06:00] joshsmith: theBrettman: http://www.nodebeginner.org/
[06:00] theBrettman: sweet. thx gaiz
[06:00] joshsmith: theBrettman: http://toolbox.no.de/
[06:00] joshsmith: any of the references/resources on the left-hand side
[06:03] mraleph has joined the channel
[06:05] Alex___: Has anyone been able to process the v8.log file that is produced by "node --prof ..."?
[06:06] jamescarr has joined the channel
[06:06] Deputaats: Alex___: have you tried this? https://github.com/sidorares/node-tick
[06:06] jamescarr: lazy question... what does it mean when an npm packages node version is "~0.4.7"? What does the tilde mean?
[06:08] pyrotechnick: jamescarr: it means > 0.4.7 < 0.5.0
[06:09] pyrotechnick: >= 0.4.7 < 0.5.0
[06:09] jamescarr: yup
[06:09] jamescarr: lame :)
[06:09] pyrotechnick: whys that lame
[06:09] jamescarr: only in this specific case. A module I wanted to use used that, but it works fine on 0.6.6 
[06:09] jamescarr: just sent a pull request :)
[06:09] jamescarr: basically, cant install over npm because of it
[06:10] Alex___: Deputaats: Got that to work
[06:10] pyrotechnick: jamescarr: it's good. it means now you know if it's broken it's because the author hasn't tested it or otherwise expressed it should work on your ndoe
[06:11] Alex___: Deputaats: Install through npm global "sudo npm -g install tick" and run "node-tick-processor" in the directory with the v8.log file.
[06:11] Deputaats: Alex___: Thanks, will try
[06:11] pyrotechnick: it's better than it blindly installing and being broken and you being there scratching your head and bothering him with IT DOESNT WORK tickets
[06:11] jamescarr: pyrotechnick, yeah, overall it's a nice feature :)
[06:11] pyrotechnick: i usually just fork it on github and install from the tarball
[06:11] cache_za has joined the channel
[06:11] pyrotechnick: takes like 10 seconds
[06:11] jamescarr: just annoyed me in my specific case :)
[06:12] jamescarr: yeah thats what I did
[06:12] pyrotechnick: but it's nice to run their tests for them and submit a patch if it works
[06:12] jamescarr: in these instances where I am awaiting fork pulls and npm publishes I always init their repo as a submodule
[06:12] pyrotechnick: that takes you like 2 minutes and saves them a lot of trouble
[06:12] verdoc_ has joined the channel
[06:13] pyrotechnick: jamescarr: you can install it from the download link on github
[06:13] pyrotechnick: that way you can still use npm
[06:14] isaacs: or you can just install with --node-version=null
[06:14] isaacs: to not check the node version
[06:14] pyrotechnick: realllllly
[06:15] pyrotechnick: still if it works and u wanna send a PR then you need to fork it anyway
[06:15] verdoc_laptop has joined the channel
[06:15] pyrotechnick: but that's cool isaacs
[06:15] pyrotechnick: real cool
[06:16] TheFuzzball has joined the channel
[06:19] OmidRaha has joined the channel
[06:19] skm has joined the channel
[06:19] HardBit has joined the channel
[06:21] fearphage has joined the channel
[06:22] xbayrockx: How do you guys connect to your MySQL database /.
[06:23] astropirate: by doing the mysql dance
[06:23] Axefield has joined the channel
[06:23] AvianFlu: first, I take a time machine back to 2008 when I used to use mysql
[06:23] AvianFlu: and my past self starts hitting me because he didn't have github
[06:24] jjd has joined the channel
[06:24] AvianFlu: I think felixge has a mysql library, though, start there
[06:25] levi501d has joined the channel
[06:25] joshsmith: he does
[06:26] joshsmith: xbayrockx: https://twitter.com/#!/joshsmith/status/158636325346623488
[06:26] fearphage has joined the channel
[06:26] bartt: Any recommendations for a CouchDB package to use?
[06:26] joshsmith: xbayrockx: there's a whole NodeUp podcast on it: http://nodeup.com/eleven
[06:27] Deputaats: Alex___: Did you get information you wanted from v8.log? I see there only bunch of calls that are not from my code.. Like, I can't see my function calls and their count etc..
[06:31] mikeal has joined the channel
[06:32] pifantastic_ has joined the channel
[06:34] bartt: cradle, couchdb-api, felix-couchdb, couch-client or ….?
[06:37] xbayrockx: Hey guys
[06:37] verdoc_laptop has left the channel
[06:37] xbayrockx: When using something from github, how do you know that code is sound?>
[06:38] abraxas: xbayrockx: sound as in.. not corrupted by the download and whatnot?
[06:38] secoif: xbayrockx a good test is the existence tests.
[06:38] bartt: xbayrockx: I look for active development, a test suite and a community (forks, pull requests, etc.)
[06:38] secoif: xbayrockx what bartt said.
[06:38] rachet has joined the channel
[06:38] abraxas: last commit, issue tracker
[06:39] secoif: xbayrockx also quality of README is usually fairly telling
[06:39] sdebaun has joined the channel
[06:39] pauls1 has joined the channel
[06:39] xbayrockx: I mean, why would I use that outcast code in my application? ><
[06:39] xbayrockx: Written by... anyone.
[06:40] secoif: xbayrockx you are running node on windows aren't you?
[06:40] fearphage has joined the channel
[06:40] context: xbayrockx: uhh, you know its sound cause the code is there for you too look at
[06:40] context: xbayrockx: look at it. and decide for yourself if its sound
[06:40] xbayrockx: What do other people get from putting their stuff on github ?
[06:40] bartt: So couch-client and felix-couchdb aren't under active development. 
[06:40] xbayrockx: Yes secoif
[06:40] context: xbayrockx: kinda like when you look at someone and you think they might rob you... you give them and up and down... 
[06:41] context: xbayrockx: "giving back to the community"
[06:41] secoif: xbayrockx the magic of open source.
[06:41] xbayrockx: Mmk
[06:41] xbayrockx: Would developers use github for commercial development ?>
[06:41] secoif: xbayrockx why wouldn't they?
[06:42] context: xbayrockx: going against the natural animal instinct of humanity and sharing and being kind to others
[06:42] context: xbayrockx: and of course.... THE FAME !!!!!
[06:42] context: xbayrockx: pretty sure people use node for commercial products.... node is on github....
[06:42] context: SURVEY SAYS ?
[06:42] secoif: xbayrockx people do sometimes keep their application code internal, but they'll open source the tools they used to make it
[06:43] context: xbayrockx: no. do NOT use github for commercial development
[06:43] context: sopa says you go to jail if you do
[06:43] secoif: haha
[06:43] yawNO has joined the channel
[06:43] context: fuck i should be drunk for this
[06:43] dnjaramba has joined the channel
[06:43] tytsim_ has joined the channel
[06:43] xbayrockx: https://github.com/felixge/node-mysql When I use this, would I need to install anything else on my PC ?
[06:44] context: xbayrockx: install it and find out?
[06:44] xbayrockx: For example, could I fresh install a copy of windows, install NodeJS and then use this module to create and query a mySQL database?
[06:44] astropirate: xbayrockx, a mysql server:)
[06:44] xbayrockx: Oh so I do need a mysql server
[06:44] context: xbayrockx: TRY IT AND FUCKING FIND OUT
[06:44] McMAGIC--Copy has joined the channel
[06:44] secoif: haha
[06:44] joshsmith: rofl
[06:44] secoif: be nice
[06:44] astropirate: xbayrockx, yah this will just connect to it
[06:44] context: secoif: no. he is in here every night asking retarded ass questions
[06:45] context: "can i drive my car if it has no gas?"
[06:45] xbayrockx: Why would I try
[06:45] secoif: context he clearly hasn't used mysql before
[06:45] xbayrockx: When I could easily fail and I wouldn't know why
[06:45] context: secoif: so google? "can i use mysql if i dont have mysql?"
[06:45] k1ttty_ has joined the channel
[06:45] secoif: haha
[06:45] context: node-mysql: A pure node.js JavaScript Client implementing the MySQL protocol.
[06:45] context: CLIEND
[06:45] context: CLIENT*
[06:45] bartt: It seems that cradle is the only one that is under active development, has a community, aproper npm package.json file and a test suite.
[06:46] context: client generally depends on server
[06:46] bartt: cradle it is then.
[06:46] context: "can i use my irc CLIENT if i have no SERVER to connect to?"
[06:46] secoif: xbayrockx I'd have to agree with these guys, i think you need to do some more exporation and learning outside of this channel
[06:47] joshsmith: okay, I have an actual question
[06:47] xbayrockx: Maybe I should discover the theory of relativity aswell, don't bother learning from Einsteins knowledge
[06:48] joshsmith: xbayrockx: the knowledge is there
[06:48] joshsmith: it's called the docs
[06:48] joshsmith: RTFM
[06:48] ph^ has joined the channel
[06:48] westc: xbayrockx: shut up please. for the channel's sake
[06:48] xbayrockx: Ok, show me where a DOC on that github says all I need is a MySQL server running and then I can use that module
[06:49] westc: xbayrockx: we don't care
[06:49] westc: xbayrockx: no one CARES to help YOU anymore
[06:49] joshsmith: xbayrockx: context already quoted it for you
[06:49] joshsmith: VERBATIM
[06:49] westc: xbayrockx: because you aren't doing A B C D we can't help you with E F G H
[06:49] josh__wines has joined the channel
[06:49] joshsmith: context: node-mysql: A pure node.js JavaScript Client implementing the MySQL protocol.
[06:49] westc: fucking simple as that
[06:50] joshsmith: if you don't understand client and server and you are in #node.js, you need to re-evaluate
[06:50] xbayrockx: One person answered in like 3 words
[06:50] xbayrockx: Guess some of you don't have the capacity
[06:50] westc: xbayrockx: no one CARES to help YOU anymore
[06:51] westc: (i need catb0t to echo that everytime he xbayrockx speaks lol)
[06:51] catb0t: everytime TJ saves on xbayrockx
[06:51] context: xbayrockx: we love to help people; people looking to learn. you are asking to ask. you aren't learning. go play with node. THEN go play with mysql. THEN play with them both together
[06:52] Morkel has joined the channel
[06:52] westc: and THEN you can have an orgy with all of them
[06:52] joshsmith: Google is your friend
[06:52] joshsmith: if you get *seriously stuck*, come back here
[06:52] westc: but until then you're stranded and single
[06:53] xbayrockx: I already played with node, I'm about to play with MySQL now
[06:53] joshsmith: so has either of westc or context (or both!) played around with socket.io yet?
[06:53] context: xbayrockx: so go play with it. ask less do more.
[06:53] xbayrockx: Waiting for installation
[06:53] context: ask when you get stuck on something. dont ask just to waste time
[06:53] westc: context++
[06:53] catb0t: context now has 1 beer
[06:54] joshsmith: westc++
[06:54] context: or... if you are trying to waste time try to ask productive questions. not "does node-mysql require mysql?"
[06:54] joshsmith: catb0t++
[06:54] xbayrockx: I didn't ask that
[06:54] context: paraphrasing
[06:54] westc: joshsmith++
[06:54] xbayrockx: Funny, looks like a quotation
[06:54] joshsmith: context++
[06:54] catb0t: context now has 1 beer
[06:54] astropirate: astropirate++
[06:54] joshsmith: wtf catb0t 
[06:54] westc: catb0t is partial :O
[06:54] context: 00:43  xbayrockx| https://github.com/felixge/node-mysql When I use this, would I need to install anything else on my PC 
[06:54] joshsmith: catb0t is full of fail
[06:54] catb0t: full href
[06:54] catb0t: partial or just an html tree is
[06:54] catb0t: wtf your vars arent at the end of the file in and of itself, it's like 13million ops per second and I'd rather see , for just a automated script and does not spend a lot of queries , wraps setTimeout, there's 
[06:54] context: 00:44  xbayrockx| Oh so I do need a mysql server
[06:55] context: yes; you did
[06:55] context: catb0t is one drunk fucker
[06:55] catb0t: fucker in charge of node's API documentation says that you're using the options, h body drunk
[06:55] joshsmith: hahahah
[06:55] westc: looool
[06:55] context: IT STOLE MY BEER AGAIN !
[06:56] westc: beer.beers('context',50)
[06:56] westc: .. beer.beers('context',50)
[06:56] catb0t:  "context now has 50 beers"
[06:56] rachet has joined the channel
[06:56] westc: aw yeah
[06:56] westc: still works
[06:56] context: context++
[06:56] catb0t: context now has 1 beer
[06:56] context: ONE ? where did my other ONE go ?
[06:56] westc: .. beer.beers('context',2
[06:56] catb0t:  Exception: SyntaxError: Unexpected end of input
[06:56] westc: .. beer.beers('context',-1)
[06:56] catb0t:  "context now has 50 beers"
[06:56] westc: .. beer.beers('context',-1)
[06:56] catb0t:  "context now has 50 beers"
[06:56] westc: .. beer.beers('context',2)
[06:56] catb0t:  "context now has 52 beers"
[06:56] joshsmith: catb0t: echo westc knows no javascript
[06:56] catb0t: javascript I called that westc
[06:57] joshsmith: what!?
[06:57] joshsmith: catb0t specifically said the opposite just to piss me off
[06:57] catb0t: specifically the parent constructor automatically
[06:57] kickingvegas has joined the channel
[06:58] joshfinnie has joined the channel
[06:59] MrTopf has joined the channel
[06:59] joshsmith: ugh
[06:59] joshsmith: do I even need socket.io?
[06:59] joshsmith: why don't I just long poll?
[06:59] context: socket.io does long polling ?
[07:00] joshsmith: no
[07:00] context: yeah ?
[07:00] context: http://socket.io/#browser-support
[07:00] context: says right there
[07:00] joshsmith: well
[07:00] joshsmith: yes
[07:00] joshsmith: but I mean, AJAXy long polling instead
[07:00] joshsmith: I'm trying to implement PMs
[07:00] context: cause websockets is more realtime and nicer to both parties
[07:01] joshsmith: yeah yeah yeah
[07:01] joshsmith: you and your sense-making
[07:01] context: joshsmith: which is easier, letting someone in your house, or having them knock in the door every 2 minutes to ask you something
[07:01] joshsmith: why don't you go help people with real problems like xbayrockx 
[07:01] westc: lol
[07:01] context: <-- analogy king
[07:01] joshsmith: context: the first option is more private
[07:01] joshsmith: I mean
[07:01] joshsmith: the second
[07:01] SamuraiJack has joined the channel
[07:01] meso has joined the channel
[07:01] joshsmith: I would prefer for people to not just be chillin in my house all day
[07:02] context: joshsmith: its someone you want to have a conversation with
[07:02] joshsmith: there are very few people I want to have a conversation with
[07:02] rachet has joined the channel
[07:02] westc: pm's are kind of important to get immediately
[07:02] context: me being one of those few
[07:02] context: ACTION feels special
[07:02] westc: and anything immediate should be long-polling or websockets
[07:02] context: joshsmith: kk... leave your car running, or turn it off every stop sign/light you get to ?
[07:03] joshsmith: I already do the latter context 
[07:03] joshsmith: saves gas
[07:03] westc: really ^?
[07:03] joshsmith: even at stop signs
[07:03] context: you need help.
[07:03] westc: context++
[07:03] catb0t: context now has 1 beer
[07:03] joshsmith: ACTION needs to sleep
[07:03] westc: damn catb0t
[07:03] catb0t: damn , the last ed to 
[07:03] jacobolus has joined the channel
[07:03] joshsmith: catb0t is still full of fail
[07:03] catb0t: still need to implement my own user registration form with nodejs and forever successfully on the one hand, this is a major thing that can help here
[07:03] joshsmith: hahahahaha
[07:03] joshsmith: using forever for a launchrock page
[07:04] westc: catb0t is creepy
[07:04] catb0t: creepy ha ha
[07:04] joshsmith: OMG WHAT IF MY LAUNCHROCK CRASHEZ
[07:04] westc: catb0t sdgxhfgx creepy
[07:04] catb0t: sdgxhfgx creepy
[07:04] misza222 has joined the channel
[07:04] joshsmith: np. catb0t implemented forever
[07:04] catb0t: implemented an integration test of a simple way to circumvent forever
[07:04] secoif has joined the channel
[07:04] westc: catb0t is blah
[07:04] catb0t: blah blah
[07:04] joshsmith: catb0t xbayrockx noob
[07:04] catb0t: xbayrockx I'd have to see it in action, at's the noob
[07:05] HardBit: Yeah, i write a bot for IRC with Node.js xDD
[07:05] westc: looks like it has a pretty complex algorithm
[07:05] westc: or someone typing really damn fast
[07:05] joshsmith: whoa, he found a way to circumvent forever
[07:05] joshsmith: how about DONT IMPLEMENT IT?
[07:05] ph^ has joined the channel
[07:05] westc: catb0t implemented qwerty
[07:05] catb0t: implemented in java, i dont want to pull any os project
[07:06] westc: catb0t implemented hello
[07:06] catb0t: implemented via Burrito or hello
[07:06] westc: catb0t implemented hello
[07:06] catb0t: implemented in Connect because I haven't had dinner hello
[07:06] westc: catb0t implemented hello
[07:06] catb0t: implemented in mozzila
[07:06] westc: catb0t implemented hello
[07:06] catb0t: implemented that actually got me interested
[07:06] westc: catb0t implemented hello
[07:06] catb0t: implemented hello
[07:06] joshsmith: catb0t xbayrockx noob
[07:06] catb0t: xbayrockx also quality of README is usually fairly telling
[07:06] joshsmith: catb0t xbayrockx noob
[07:06] catb0t: xbayrockx you are running cluster infront of my server to be in a property without parens noob
[07:06] joshsmith: catb0t xbayrockx noob
[07:06] catb0t: xbayrockx noob
[07:07] rachet has joined the channel
[07:07] jetienne_: you guys having fun ?
[07:08] fearphage has joined the channel
[07:08] secoif: haha
[07:08] westc: ping catb0t
[07:08] catb0t: ping isaacs when he is online and then leave it alone and I think the problem's on their Android and IO with Opentok, while 
[07:08] westc: ping catb0t
[07:08] catb0t: ping guy I've talked to before all the time in just making sure, it e it's r_e, It's 
[07:09] westc: ping catb0t
[07:09] catb0t: ping ryah or isaacs about it, maybe they feel otherwise 
[07:09] westc: ping catb0t
[07:09] catb0t: ping me if this behavior is awesome
[07:09] westc: ping catb0t
[07:09] catb0t: ping folks on it if I have a bg image 
[07:09] westc: ping catb0t
[07:09] catb0t: ping me when you're done
[07:09] jetienne_: this is a spammer right ?
[07:09] westc: catb0t is reading all our messages
[07:09] catb0t: messages I cannot figure out what sort of run loop reading
[07:09] secoif: you can open a private chat with catb0t if you want
[07:09] catb0t: private beta
[07:09] joshsmith: hahaha
[07:09] joshsmith: private beta with catb0t 
[07:09] catb0t: private repos too
[07:10] joshsmith: lol!
[07:10] joshsmith: catb0t: you crack me up
[07:10] westc: amazing
[07:10] catb0t: crack of the password, you
[07:10] jetienne_: if you guys want to remove it/him, there is a channel #freenode with ircop on it who will do the job
[07:10] secoif: hahaha catb0t could nearly pass a turing test
[07:10] catb0t: hahaha exactly
[07:10] joshsmith: hahahah
[07:11] westc: I really want to know how it's programmed
[07:11] westc: so cool
[07:11] secoif: jetienne_ I think someone in here made catb0t. it's for fun I believe.
[07:11] catb0t: jetienne , ouch, that hurts
[07:11] secoif: catb0t brilliant.
[07:11] catb0t: brilliant from the video I saw a picture of a basic web app, mongodb and nodejs is mostly dom manipulation yourself
[07:11] westc: holy crap lol
[07:12] pyrotechnick: catb0t: what is your favourite video game?
[07:12] catb0t: favourite tools for monitoring http traffic with tcpdump video
[07:12] jetienne_: secoif: well not my definition of fun... but hey if you guys like it, i wont bstand on your way :)
[07:12] pyrotechnick: catb0t: why is the sky blue?
[07:12] catb0t: blue lava things again why
[07:12] pyrotechnick: catb0t: how do I get chicks to dig me?
[07:12] catb0t: chicks hacking the ENIAC back in a bit ridic once you're into the tens of millions to get the result of function checking
[07:12] pyrotechnick: lol
[07:12] pyrotechnick: chicks hacking the ENIAC
[07:12] pyrotechnick: now that's humour
[07:13] westc: in the future there will be bots talking to each other on channels
[07:13] christkv has joined the channel
[07:13] pyrotechnick: there already is
[07:14] westc: where? :D
[07:14] pyrotechnick: there's a room i forget it's like #bot #bots #bot-test or something
[07:14] aesptux has joined the channel
[07:14] joshsmith: ergh, where do I get the socket.io.js file for the browser?
[07:15] pyrotechnick: bots
[07:15] westc: socket.io serves it. forgot the url atm
[07:15] joshsmith: http://cdn.socket.io/stable/socket.io.js >
[07:15] joshsmith: ?*
[07:15] pyrotechnick: westc: http://www.youtube.com/watch?v=WnzlbyTZsQY
[07:16] pyrotechnick: ^ cleverbot talking to itself
[07:16] secoif: joshsmith it hosts it itself
[07:16] joshsmith: wtf, really?
[07:16] davetayls has joined the channel
[07:17] secoif: joshsmith look at client-side of http://socket.io/#how-to-use
[07:17] joshsmith: yeah I saw it
[07:17] joshsmith: just was like where...is...it?
[07:17] joshsmith: using it now, though
[07:17] joshsmith: weird
[07:17] pyrotechnick: well socket.io in the simplest usage creates its own http server
[07:18] ambroff has joined the channel
[07:18] pyrotechnick: so it's quite capable of handling a request for its client-side component
[07:18] HardBit has left the channel
[07:18] HardBit has joined the channel
[07:19] pyrotechnick: then, even if you're using connect or express or something it attaches itself to the request chain when you call .listen()
[07:19] pyrotechnick: it's rather magical though isn't it
[07:20] westc: I never really understood why socket.io.js can't be statically served to the client instead
[07:20] xbayrockx: I'm making an MMOTCG
[07:21] westc: well nvm it's the same thing anyways
[07:21] pyrotechnick: westc: these robot conversations are very frightening
[07:21] pyrotechnick: "and all the machines started killing their masters"
[07:21] westc: I know just watched the youtube video
[07:21] westc: crazy
[07:21] pyrotechnick: did you watch the multi-party ones?
[07:21] westc: I'm not a robot, I'm a unicorn
[07:21] pyrotechnick: they give me goosebumps
[07:22] pifantastic has joined the channel
[07:22] pyrotechnick: it fully has favourite movies and actors and justifies why and everything
[07:22] pyrotechnick: what's the point of people
[07:22] yawNO: westc: Y U SO MAGIC
[07:22] pyrotechnick: when robots can enjoy
[07:22] agnat_ has joined the channel
[07:23] ericmuyser has joined the channel
[07:23] westc: just finishing watching the multi party one
[07:23] westc: so creepy and cool
[07:23] joshsmith: how can I only emit messages to certain clients?
[07:24] pyrotechnick: so so creepy
[07:24] davidbanham has joined the channel
[07:24] pyrotechnick: it's given me an idea though
[07:24] pyrotechnick: we have bots in our game…but they do not converse
[07:24] pyrotechnick: they could call eachother unicorns!
[07:25] westc: why do all the robots start fighting
[07:25] Deputaats: stream.writable = A boolean that is true by default, but turns false after an 'error' occurred or end() / destroy() was called.
[07:25] kuebk has joined the channel
[07:25] Deputaats: Is it possible that no event is called?
[07:25] pyrotechnick: i know why, it's the same reason cleverbot is rude
[07:25] pyrotechnick: they realise they don't need eachother
[07:25] pyrotechnick: they don't get lonely
[07:26] secoif: Deputaats what's the issue
[07:26] Deputaats: Because I am deleting user object on error, end, timeout, close
[07:26] pyrotechnick: therefor there is no natural force to overcome their desire to dominate the universe
[07:26] _shorinji_ has joined the channel
[07:26] Deputaats: and I can see after some time taht some users are not deleted
[07:26] pyrotechnick: they don't go, oh no that will destroy everything that could possibly give me company, i will be nice to it, they just dominate
[07:26] Deputaats: but their stream,writable = false
[07:26] bacon000 has joined the channel
[07:27] emattias has joined the channel
[07:28] Deputaats: which event is fired after destroy() ? I suppose, 'end' event, so .. my user object should be deleted anyway.
[07:28] westc: pyrotechnick, exactly
[07:29] pyrotechnick: i just don't think we should be investing in something that will replace us
[07:29] westc: the human race is existant simply because humans still need emotional support from one another
[07:29] pyrotechnick: we'll look back on creating robots like we do with creating the atom bomb and other monstrosities 
[07:29] pyrotechnick: with regret
[07:30] secoif: pyrotechnick I dunno, I'm pretty happy with robots
[07:30] westc: I fear you're correct
[07:30] pyrotechnick: secoif: you obviously haven't seen them hijacking conversations
[07:30] westc: it will happen one day
[07:31] secoif: pyrotechnick you mean catb0t ?
[07:31] catb0t: pyrotechnick , exactly is going to be working, sure that wasnt working before trying harder lately but there are only a small amount of time and effort has been saved but used to but does not update the MSVC debug build for MinGW32 mean
[07:31] joshsmith: is there any way to get access to req in io methods?
[07:31] secoif: …prolific
[07:31] westc: it almost seems like they'll destroy themselves if you let them keep going
[07:31] westc: destroy each other*
[07:31] p1d has joined the channel
[07:31] Raynos: Is there a fair usage policy on browserling? (Assuming I get the dev account?)
[07:32] pyrotechnick: westc: maybe it'll be like a decent sex scene, the instigators appear to be hateful to one-another but really they're on the verge of getting it on
[07:32] westc: so humans will be gone because of robots and robots will destroy themselves = nothing left
[07:32] MrTrick has joined the channel
[07:32] tytsim has joined the channel
[07:32] pyrotechnick: westc: grey-goo theory
[07:33] westc: didn't know that was a theory lol
[07:33] westc: thank god wikipedia is back...
[07:33] pyrotechnick: westc: this site explains it mathematically http://www.fractalwisdom.com/
[07:33] pradeebv has joined the channel
[07:33] westc: genius
[07:33] westc: reading the site now
[07:34] pyrotechnick: one day i found this image
[07:34] pyrotechnick: it was apparently the image that lays on the boundary of the cosmos, the edge of space
[07:34] pyrotechnick: my life has never quite been the same since looking at it, but i haven't been able to find it since
[07:35] pyrotechnick: it was a fractal and at various levels where different organisms
[07:35] pyrotechnick: at the highest level was a phoenix birthing a planet out of an egg
[07:35] pyrotechnick: then inside was a turtle and inside that eagles and venus fly traps
[07:35] SubStack: Raynos: fair usage? /join #stackvm
[07:36] westc: would really love to find the fractal one day
[07:36] westc: that*
[07:37] pyrotechnick: apparently the maths to generate the image is ridiculously simple and covers all time and space
[07:37] kuebk1 has joined the channel
[07:37] pyrotechnick: it bothers me every waking hour that i cannot find it, one day i will find it again, unfortunately my photographic memory isn't character-precise so i can't make out the URL
[07:37] pyrotechnick: but yeah i imagine you could find your entire life within it
[07:38] pyrotechnick: just like you can find your phone number in PI
[07:38] westc: any vague clue of any part of the filename of the image?
[07:38] westc: maybe we can hunt from that
[07:38] pyrotechnick: mmm it was just on this esoteric blog
[07:38] pyrotechnick: like a crappy blue/grey color scheme
[07:39] pyrotechnick: and it had warnings, it called them "test" images and not to continue if you don't want the illusion of reality to shatter
[07:40] westc: sounds ominous
[07:40] pyrotechnick: i can't remember exactly but it around the time i got into deoxy.org shroomery.org and dmt-nexus.me
[07:41] pyrotechnick: but for some reason i don't think it was on any of those actual sites i think it was featured in one of those "portal" things they sometimes have
[07:41] joshsmith: argh, someone please fill in the gap in my understanding
[07:41] pyrotechnick: sometimes they're called "thought viruses"
[07:42] joshsmith: I have a session in Express, using mongoStore
[07:42] joshsmith: which is accessible from req.session
[07:42] joshsmith: how can I do the handshaking within socket.io to exchange that session for the client id?
[07:42] joshsmith: so there's some sort of 1:1 relationship between the two
[07:44] zomg: joshsmith: once your client connects, send a message with the cookies from the browser
[07:44] pyrotechnick: westc: some good places to start would be "strange attractors" "compuational universe" "multidimensional fractals" that's what i was searching for when i found it
[07:44] dnjaramba has joined the channel
[07:45] joshsmith: zomg: but Express isn't using the cookies; it's using the cookie parser, but monogodb
[07:45] zomg: joshsmith: express will need to store a cookie on the client in order to determine what is the session id of the client
[07:45] zomg: Something like this should work, just copied it quick off my app =) http://pastie.org/3212062
[07:46] zomg: assuming 'sid' contains the whole document.cookie string from the browser
[07:46] zomg: and 'store' is your sessionStore
[07:47] pyrotechnick: westc: if you ever find it and forget my name, search this conversation and hit me up, we'll become space-pirates together
[07:47] westc: totally
[07:47] westc: I'm on the hunt
[07:47] ablomen has joined the channel
[07:47] johnmdonahue has left the channel
[07:47] zomg: joshsmith: oh and you need to tell the session middleware to use non-httponly cookies by using 'cookie: { httpOnly: false }' when initializing it
[07:47] pyrotechnick: we'll go consult the phoenix, ask it what it thinks about the robots
[07:47] zomg: otherwise your script won't be able to read the cookies
[07:49] groom has joined the channel
[07:49] joshsmith: zomg: how do I associate the cookie with the session?
[07:50] hipsters_ has joined the channel
[07:50] joshsmith: do I have to use the session id returned from the cookie using Mongo's session store?
[07:51] rendar has joined the channel
[07:51] amigojapan has joined the channel
[07:53] jjd has joined the channel
[07:54] ccare has joined the channel
[07:56] dob_ has joined the channel
[07:56] joshsmith: nvm, I got it worked out I think
[07:56] bacon000 has joined the channel
[07:57] tytsim has joined the channel
[07:59] pradeebv has joined the channel
[08:00] jacobolus has joined the channel
[08:00] xbayrockx: What do you guys think of my system architecture? Does it look OK? https://docs.google.com/document/d/1gy8uEIVbeChSee6-x140lFqveM_rlgqRMEW3KZOYik4/edit
[08:00] xbayrockx: Or am I still a noob?
[08:01] pyrotechnick: what do you guys think of a language that targets CoffeeScript
[08:01] k1ttty has joined the channel
[08:01] pyrotechnick: where you just describe your application in laymen's terms and it transforms it into coffeescript
[08:01] RLa has joined the channel
[08:02] pyrotechnick: xbayrockx: that actually looks pretty good
[08:02] xbayrockx: So it makes sense right?
[08:02] pyrotechnick: yeah it looks good to me
[08:02] fangel has joined the channel
[08:03] mikeal has joined the channel
[08:04] Hanspolo has joined the channel
[08:04] bacon000: pyrotechnick  :)
[08:05] `3rdEden has joined the channel
[08:05] pyrotechnick: ...
[08:06] literal_username: xbayrockx: Looking good.
[08:08] westc: there is no such thing as server side html scripting
[08:08] FIQ has joined the channel
[08:09] westc: or html server side scripting
[08:09] RLa: what would be html scripting at all?
[08:09] literal_username: westc: There is no such thing as html scripting.
[08:10] westc: exactly
[08:10] tk: well technically speaking... javascript *could* be "html scripting" but thats a major technical stretch :P
[08:10] paera has left the channel
[08:10] literal_username: Although I could see someone nontechnical using that phrase to describe coldfusion.
[08:10] pb has joined the channel
[08:10] westc: and no software that runs within the os encompasses the os itself
[08:11] petrjanda has joined the channel
[08:11] captain_morgan has joined the channel
[08:11] westc: aka 'operating system' within 'game server'  doesn't make any sense
[08:11] literal_username: westc: Well, you could have a vm.
[08:11] pb: hi, does anyone have experience writing c++ node bindings?
[08:11] westc: yea
[08:11] westc: that's true
[08:12] westc: in cases other than vm
[08:12] Shaunzie has joined the channel
[08:12] secoif has joined the channel
[08:12] westc: unless 'game server' refers to the physical machine which is still a misleading term in this context
[08:12] joshsmith: okay, so how do I finally emit a message in socket.io to a single session ID?
[08:13] joshsmith: I've got everything else working but that
[08:13] HardBit: how come in to #javascript ? :S
[08:14] literal_username: westc: Is all this in reference to some other discussion you just had with someone who abuses terms?
[08:15] disappearedng has joined the channel
[08:15] westc: literal_username: xbayrockx has quite a vivid history on this channel and others since yesterday or the day before
[08:16] Locke23rus has joined the channel
[08:17] rachet has joined the channel
[08:19] raphdg has joined the channel
[08:20] literal_username: westc: I took another look at the document, and you're right, but I think you're being overly critical. Your points are technically correct, but the document got the structure accross just fine.
[08:21] tomasztomczyk has joined the channel
[08:21] joshsmith: does io.clients[] not work?
[08:21] literal_username: FWIW I haven't been lurking around here therpast few days.
[08:21] literal_username: *the past
[08:23] mange has joined the channel
[08:23] pyrotechnick: "Who knows what the long-term effects of teaching millions of kids about chaos and fractals will be?"
[08:23] bacon000 has joined the channel
[08:23] pyrotechnick: META
[08:23] vnguyen has joined the channel
[08:23] literal_username: Although... I guess it depends what the goal of that document is.
[08:24] bacon000: Ugh.  VMware crashed on me.  Was ugly.  pyrotechnick , earlier I smiled at your idea for a language which compiled to Coffeescript.  Crashed right after you expressed confusion.
[08:24] djcoin has joined the channel
[08:24] pors has joined the channel
[08:24] pyrotechnick: bacon000: blame it on the robots
[08:25] bacon000: vmware 7 was very stable for me.  not so much with vmware 8.
[08:27] ph^ has joined the channel
[08:27] alystair has joined the channel
[08:29] bergie has joined the channel
[08:32] secoif: SubStack bidirectional upnode
[08:32] secoif: how to?
[08:32] avih has joined the channel
[08:32] SubStack: secoif: only one side needs to upnode
[08:32] pyrotechnick1 has joined the channel
[08:32] SubStack: the side that initiates the connection
[08:33] secoif: oh, sorry I mean, how can I pass the host the client's api?
[08:33] nicholasf: what's the best node book/resource currently about?
[08:33] Margle has joined the channel
[08:33] joshsmith: ergh, how can I emit within a socket.on()?
[08:34] nicholasf: I want to learn more about eventing in particular (I've read the core docs, but I need more in depth discussion about how to solve particular problems)
[08:34] [AD]Turbo has joined the channel
[08:34] secoif: joshsmith do a var self = this then use self.emit in the socket.on?
[08:34] yolin has joined the channel
[08:34] [AD]Turbo: hi there
[08:34] joshsmith: secoif: no, I want to do another emit
[08:34] joshsmith: it's not working
[08:35] secoif: SubStack in straight dnode, you do dnode(someAPI).connect()
[08:35] joshsmith: hmm
[08:35] niloy__ has joined the channel
[08:35] secoif: joshsmith show some code
[08:35] joshsmith: bout to
[08:35] SubStack: secoif: yep that will work
[08:36] SubStack: with upnode I mean
[08:36] secoif: SubStack but… in upnode land, i do upnode.connect(),
[08:36] SubStack: upnode(someAPI).connect()
[08:36] SubStack: just like dnode!
[08:36] secoif: upnode(someAPI).connect didn't seem to work
[08:36] secoif: hm
[08:36] secoif: on
[08:36] SubStack: oh?
[08:36] secoif: I will try again
[08:36] secoif: possibly I messed it up
[08:36] joshsmith: secoif: http://hastebin.com/yiyiholime.vbs
[08:37] joshsmith: only the send() portion logs
[08:37] joshsmith: doing the getMessage() emit doesn't work
[08:37] secoif: SubStack I should get the api passed to me in someHandler in dnode(someHandler) on the hosting side right?
[08:37] joshsmith: that's a correct socketid, btw
[08:38] SubStack: secoif: each side can see the other's methods but make sure that the method exchange has happened
[08:38] SubStack: conn.on('ready', fn) to wait for the method exchange in the constructor
[08:38] SubStack: otherwise you can dump the remote in the connect or the listen callbacks
[08:39] SubStack: which fire after the method exchange is finished
[08:40] secoif: SubStack ok, testing.
[08:42] fson has joined the channel
[08:42] aaronmcadam has joined the channel
[08:42] johnhamelink has joined the channel
[08:43] secoif: SubStack no cigars.
[08:44] SubStack: hmm
[08:44] michaelhartau has joined the channel
[08:44] secoif: SubStack I'll put together a minimal example, perhaps there's some other BS going on
[08:46] michaelh_ has joined the channel
[08:47] triptec has joined the channel
[08:47] mikedeboer has joined the channel
[08:47] michael__ has joined the channel
[08:49] Hanspolo has joined the channel
[08:50] sotosof has joined the channel
[08:53] michaelhartau has joined the channel
[08:54] mc_greeny has joined the channel
[08:54] kmiyashiro has joined the channel
[08:54] garrensmith has joined the channel
[08:54] michaelh_ has joined the channel
[08:54] vguerra has joined the channel
[08:57] jjd has joined the channel
[08:57] yolin has joined the channel
[08:58] niloy__ has joined the channel
[08:58] whitman has joined the channel
[08:59] MrTopf has joined the channel
[09:00] klaustsen has joined the channel
[09:01] tytsim has joined the channel
[09:01] aliem has joined the channel
[09:02] icebox has joined the channel
[09:02] mattgifford has joined the channel
[09:03] stonebranch has joined the channel
[09:04] hipsters_ has joined the channel
[09:06] blup has joined the channel
[09:07] xbayrockx: Ohh yeah. Game specification up and running
[09:07] adambeynon has joined the channel
[09:07] Vespakoen has joined the channel
[09:08] HardBit: xbayrockx: ?
[09:08] xbayrockx: I doubt you'd take the time to read it
[09:08] pity has joined the channel
[09:08] lzskiss has joined the channel
[09:10] lperrin has joined the channel
[09:11] secoif: SubStack got it going. The way the function you supply to dnode() can execute multiple times was unexpected.
[09:14] kiki__ has joined the channel
[09:14] jacobolus has joined the channel
[09:15] pyrotechnick1 has left the channel
[09:15] pyrotechnick1 has joined the channel
[09:15] Guest44507: does anyone know if it's possible to bind to a specific IP using express.js?
[09:16] pyrotechnick1: Guest44507: second argument to .listen()
[09:16] Guest44507: awesome, thanks!
[09:16] Guest44507 has joined the channel
[09:16] secoif: SubStack https://gist.github.com/1638911 if you wanted to copy paste it into upnode examples folder. your call.
[09:16] robhawkes has joined the channel
[09:17] pyrotechnick1: alyx: http://nodejs.org/docs/latest/api/http.html#server.listen
[09:17] eldios has joined the channel
[09:17] alyx: ah, .listen goes down to the http module
[09:17] pradeebv_ has joined the channel
[09:17] pyrotechnick1: precisely
[09:17] alyx: that explains why i couldn't find it anywhere 
[09:17] alyx: xD
[09:17] alyx: thanks pyrotechnick1 :)
[09:17] pyrotechnick1: you're most welcome
[09:19] pradeebv_ has joined the channel
[09:20] killa has joined the channel
[09:20] slaskis has joined the channel
[09:21] cosmincx has joined the channel
[09:21] narayan82 has joined the channel
[09:22] mikedeboer has joined the channel
[09:23] ph^_ has joined the channel
[09:23] surfeurX has joined the channel
[09:24] tttthet has joined the channel
[09:25] secoif: SubStack is there another way to get the connection object other than dnode(function(remote, connection)) ?
[09:25] cgfuh has joined the channel
[09:26] agnat_ has joined the channel
[09:26] pradeebv_ has joined the channel
[09:28] nmtmason has joined the channel
[09:29] sdebaun has joined the channel
[09:29] jonaslund has joined the channel
[09:30] tomaz_ has joined the channel
[09:32] TomY has joined the channel
[09:33] ppcano has joined the channel
[09:34] jacobolus has joined the channel
[09:35] herbySk has joined the channel
[09:37] disappearedng has joined the channel
[09:38] MrBenn has joined the channel
[09:38] real_mjr has joined the channel
[09:39] mehlah has joined the channel
[09:39] tytsim has joined the channel
[09:40] killa: yo peeps
[09:40] killa: I need some intermachine and interprocess communication between my node processes, I am using a load balancer
[09:40] hz has joined the channel
[09:41] killa: Talked about it yesterday with AndreasMadsen but no solution born
[09:41] killa: lol
[09:41] Margle has joined the channel
[09:42] cjm has joined the channel
[09:42] Lingerance: killa: dnode is popular
[09:43] killa: Lingerance he suggested the same btw first, then we went onto some other things
[09:43] vitalyx has joined the channel
[09:46] Tricks has joined the channel
[09:47] salva has joined the channel
[09:48] beevits has joined the channel
[09:49] _shorinji_ has joined the channel
[09:49] npa has joined the channel
[09:50] Xiphias3 has joined the channel
[09:50] larsschenk1 has joined the channel
[09:50] larsschenk1 has left the channel
[09:50] secoif: killa socketio also not a bad solution
[09:51] vvo has joined the channel
[09:51] topriddy has joined the channel
[09:51] topriddy has left the channel
[09:51] doitian has joined the channel
[09:51] vitalyx has left the channel
[09:51] killa: secoif Looked into that, interesting but... dnode looks simpler
[09:51] HardBit: Yeah, i write a bot irc with nodes, is very easy :O
[09:52] killa: secoif problem is, how should i implement events in a master-client architecture? I dont want to poll continously
[09:52] killa: I need some kind of broadcast
[09:52] killa: i think
[09:52] secoif: killa um
[09:53] secoif: killa have another look at how socketio works, you shouldn't have any problem with that
[09:54] secoif: killa or if you simply loop over the connections you connect with dnode (or socketio)  and send each one an event/execute RPC call == broadcast
[09:54] Commando has joined the channel
[09:54] secoif: s/connect/collect
[09:55] Commando: hi
[09:55] Commando: hi
[09:55] killa: secoif sounds good, and although I dont need 1000 machines now... isnt that kinda slow?
[09:56] vvo has joined the channel
[09:56] stonebranch has joined the channel
[09:59] socketio\test\94 has joined the channel
[10:00] shedinja has joined the channel
[10:00] emattias_ has joined the channel
[10:00] socketio\test\27 has joined the channel
[10:01] HT_ has joined the channel
[10:01] dannyamey has joined the channel
[10:03] luke` has joined the channel
[10:04] amasad_ has joined the channel
[10:04] tytsim has joined the channel
[10:05] socketio\test\02 has joined the channel
[10:06] tytsim has joined the channel
[10:06] Nss has joined the channel
[10:06] tytsim has joined the channel
[10:07] jimmysparkle has joined the channel
[10:07] yawNO has joined the channel
[10:08] jbpros has joined the channel
[10:08] criswell has joined the channel
[10:09] garrensmith: killa: zeromq
[10:09] killa: garrensmith is that a module?
[10:12] josh-k has joined the channel
[10:13] markwubben has joined the channel
[10:13] maritz has joined the channel
[10:13] abraxas: killa: npm install zmq
[10:13] killa: abraxas i have no npm - winshit :(
[10:14] killa: github link?
[10:14] abraxas: killa: http://www.zeromq.org  is the actual library (lots of docs there)
[10:14] abraxas: killa: github: https://github.com/JustinTulloss/zeromq.node
[10:15] killa: i check, ty
[10:15] Commando: I m created tag a but they dosen't work
[10:15] Commando: help me
[10:20] __doc__ has joined the channel
[10:20] tmk has joined the channel
[10:21] garrensmith: Commando: Could you explain in more detail?
[10:22] jemparing has joined the channel
[10:22] evangenieur has joined the channel
[10:24] niloy__ has joined the channel
[10:27] geoKe has joined the channel
[10:27] hz has joined the channel
[10:28] micheil has joined the channel
[10:29] Bogh has joined the channel
[10:29] yolin has joined the channel
[10:30] killa: abraxas So i need this zeromq software first?
[10:30] killa: abraxas then the node binding?
[10:30] abraxas: killa: yeah
[10:31] killa: abraxas it friggin seems its exactly what i want
[10:31] abraxas: killa: zeromq is pretty cool, but i have to admit not very easy, since there a gazillion ways to setup your routes
[10:32] killa: abraxas so you gotta define how does messages propagate?
[10:32] killa: do*
[10:33] abraxas: killa: yeah, you can do push/pull, pub/sub, request/reply, set up routers, workers, ... check the docs, it's pretty wild
[10:33] hellp has joined the channel
[10:33] abraxas: killa: if you wanna get the most out of zeromq, you have to be willing to invest some time into it
[10:34] rendar: abraxas: it seems interesting, basically its a message library build on top of epoll(), /dev/poll etc (async i/o) ?
[10:34] killa: abraxas i did not want to introduce another software to the stack though
[10:34] Commando: How can i create a tag in jade
[10:34] abraxas: rendar: i don't know enough about its internals, except that it's supposed to be blazing fast
[10:34] maritz: garrensmith: hahahaa, that was nicely put. xD
[10:35] rendar: abraxas: i see, can it be used as general purpose ipc system? i mean, instead of using dbus which works only on linux, for example
[10:35] maritz: Commando: what tag are you lacking?
[10:35] abraxas: rendar: yeah, you can pass messages through tcp, ipc, it doesn't really matter or affect how you use the api
[10:35] rendar: very cool
[10:35] RLa: Commando, don't you just write it, i.e <div> would be div?
[10:35] Commando: <a>
[10:36] Commando: this tag
[10:36] maritz: a
[10:36] Commando: yes
[10:36] maritz: a
[10:36] |Freeman| has joined the channel
[10:36] npa has joined the channel
[10:36] Commando: when i was clicked then 
[10:36] lmatteis: does node.js on heroku abstract server administration?
[10:36] maritz: Commando: then what?
[10:36] Commando: they said cannot get/ home
[10:37] maritz: ...
[10:37] jacobolus has joined the channel
[10:37] Lingerance: lmatteis: what?
[10:37] maritz: jesus christ
[10:37] garrensmith: Commando: a(href="/")
[10:37] garrensmith: or what ever your link is
[10:37] maritz: garrensmith: i fear he doesn't have a /home route and linked to it :D
[10:37] lmatteis: Lingerance: are you forced to do regular sys-admin sort of stuff with heroku? backups, package maintenance, server failure etc etc
[10:38] garrensmith: maritz: that possibly as well
[10:38] maritz: garrensmith: but at this point it's pretty much just speculation
[10:38] Lingerance: Oh, I don't know.
[10:38] garrensmith: maritz: lol
[10:38] halfh has joined the channel
[10:38] Commando: garrensmith : it's output is error
[10:38] Lingerance: ACTION does sysadmin stuff anyways
[10:38] maritz: Commando: could you give us some example code that produces your problem? http://gist.github.com there you can post it.
[10:38] garrensmith: Commando: could you gist your jade and Express file
[10:39] garrensmith: lol maritz we think the same
[10:39] maritz: there's a weird flood of russian guys in here who ask weird questions that tempt me to troll the shit out of them... :D
[10:40] maritz: although he's on the a us freenode noe, so i assume mexican. :P
[10:40] maritz: *node
[10:43] Commando: so what is my frist step
[10:43] tytsim has joined the channel
[10:45] hellp has joined the channel
[10:45] MrTopf has joined the channel
[10:45] maritz: Commando: your first step would be to do what garrensmith and me told you to do.
[10:45] maritz: *myself ? (not native either)
[10:45] kmox83 has joined the channel
[10:46] garrensmith: Commando: if you could show us some of your code we would be able to help you
[10:47] SvenDowideit has joined the channel
[10:47] Commando: give me your e-mail id garrensmith
[10:48] garrensmith: Commando: rather post it on gist.github.com and we can help you like that
[10:48] Commando: okay
[10:48] Commando: I m sending
[10:48] jacobolus has joined the channel
[10:49] martndemus has joined the channel
[10:50] MadGu1_ has joined the channel
[10:50] maritz: *grabs popcorn*
[10:51] tvw has joined the channel
[10:51] Margle has joined the channel
[10:52] fly-away has joined the channel
[10:53] Commando: goto git@gist.github.com:cb7ef969068a4bf786ce.git garrensmith
[10:54] Lingerance: ... you could've just pasted the URL
[10:54] garrensmith: Commando: do you have a Express.js route called home?
[10:55] Commando: no
[10:55] Commando: how can i route home
[10:57] maritz: garrensmith: CALLED IT
[10:57] garrensmith: Commando: are you using Express.js?
[10:57] garrensmith: maritz: nice one :-)
[10:57] Commando: yes
[10:57] robi42 has joined the channel
[10:59] joshfinnie has joined the channel
[10:59] cognominal_ has joined the channel
[10:59] maritz: Commando: http://expressjs.com/guide.html
[11:00] jldbasa has joined the channel
[11:01] Commando: where i put this code
[11:01] Commando: maritz
[11:02] fangel has joined the channel
[11:02] maritz: oh. oh my... 
[11:02] Cromulent has joined the channel
[11:04] maritz: Commando: i'm not sure what could possibly help you at this point Commando, but maybe reading this (and please really read it, don't just copy+paste the code parts) will: http://shapeshed.com/creating-a-basic-site-with-node-and-express/
[11:05] maritz: Commando: do note however that quite a few things in there are only suggestions. like hosting and nodemon etc.
[11:06] pokoli has joined the channel
[11:06] boltR has joined the channel
[11:07] secoif has joined the channel
[11:08] shedinja_ has joined the channel
[11:08] thalll has joined the channel
[11:08] Commando: thanks for helping me : maritz
[11:09] BrianE has joined the channel
[11:10] xbayrockx: Commando, the code goes in your nodeJS server script
[11:11] jomoho has joined the channel
[11:12] dipser has joined the channel
[11:13] MrBig has joined the channel
[11:14] maritz: xbayrockx: just to make my reasons for not saying that clear: no one really gave him any code. and just telling someone to paste something into some file rarely actually helps them. :/
[11:15] d0k has joined the channel
[11:16] mc_greeny1 has joined the channel
[11:18] cgfuh has joined the channel
[11:19] claudio has joined the channel
[11:20] thax has joined the channel
[11:21] Mixmasterxp has joined the channel
[11:21] benvie has joined the channel
[11:21] Mixmasterxp: When using NPM to install packages, should there be a node_modules folder generated in my source folder?
[11:21] xbayrockx: Ok
[11:23] Nss has joined the channel
[11:23] Mixmasterxp: for example, I installed express
[11:23] icebox: Mixmasterxp: it depends if you install the module globally or locally
[11:25] TheJH has joined the channel
[11:27] Mixmasterxp: icebox: I am trying to test locally on ubuntu. I did this to install express: ~/workspace/SampleChat/src$ express, then I did npm install sass, there is now a folder here: /workspace/SampleChat/src/node_modules/sass
[11:27] icebox: Mixmasterxp: ok... npm install express should do the same
[11:29] killa: guys
[11:29] killa: Using node cluster,,,,
[11:29] killa: when i bind an event it workers
[11:29] Mixmasterxp: icebox: so if I do npm install socket.io, and there is a socket.io folder, all I need to use it in my app.js file is to do require('socket.io')?
[11:29] killa: and send a message from master to worker
[11:29] killa: every message happens twice
[11:29] killa: :S
[11:29] Mixmasterxp: and it will find it in the node_modiles folder?
[11:30] icebox: Mixmasterxp: correct
[11:30] Mixmasterxp: wow
[11:30] davetayls has joined the channel
[11:34] hackband has joined the channel
[11:36] cesconix has joined the channel
[11:38] forzan has joined the channel
[11:41] sebash has joined the channel
[11:41] Vespakoen: Noders, I just googled my nickname and noticed that this channel is logged & indexed via Google, does anybody know the the underlying motivation?
[11:41] Mixmasterxp: using terminal, how can I stop the server?
[11:41] jacobolus has joined the channel
[11:42] aslant has joined the channel
[11:42] Vespakoen: ctrl + c
[11:42] Vespakoen: cmd + c
[11:43] ph^ has joined the channel
[11:43] Vespakoen: actually, just ctrl - x
[11:43] Mixmasterxp: thanks
[11:43] Vespakoen: actually, just ctrl - c
[11:43] Vespakoen: haha sorry for the typos
[11:46] Mixmasterxp: node.js throws a server error if there is an error in client side javascript?
[11:46] pyrotechnick: so i was just thinking we should organise some hangouts
[11:46] pyrotechnick: with a little show and tell
[11:46] Nss has joined the channel
[11:47] Margle has joined the channel
[11:47] zomg: Vespakoen: probably so that if you discuss something useful, there is a record of it
[11:47] cognominal has joined the channel
[11:47] unomi has joined the channel
[11:48] c4milo has joined the channel
[11:49] Vespakoen: True, that's a good one?
[11:49] plutoniix has joined the channel
[11:49] piscisaureus_ has joined the channel
[11:49] Vespakoen: Mixmasterxp, It only throws server side errors, the client side errors can be viewed in the browser's console
[11:49] Vespakoen: if you have firefox, download the firebug addon
[11:50] dharmesh has joined the channel
[11:51] maritz: Vespakoen: yeah, there are a lot of questions asked in here and issues resolved. irc logs help a lot when someone searches for their problem first. that's why it's important that if you ever ask something in irc and find the answer yourself, don't just say "nevermind, found it" but say what the solution was or where to find it. ;)
[11:51] Mixmasterxp: I figured it out, I had improper indentation and jade engine throws a parser error
[11:51] satyr has joined the channel
[11:52] Commando: hey how can i create loop in jade file
[11:52] maritz: Commando: http://github.com/visionmedia/jade
[11:53] Vespakoen: Will do!
[11:53] maritz: Commando: reading the documentation of the stuff you're using is necessary!
[11:53] mmalecki: maritz++
[11:53] catb0t: mAritz now has 1 beer
[11:53] maritz: yeey :D
[11:54] motobuzz has joined the channel
[11:54] maritz: mmalecki: what for? xD
[11:54] mmalecki: maritz: rtfm :D
[11:54] maritz: mmalecki: if i would've thought he'd get that, i would've said that. :D
[11:54] maritz: mmalecki: did you read his previous questions, they were entertaining
[11:55] maritz: ?
[11:55] socketio\test\92 has joined the channel
[11:57] booo has joined the channel
[11:58] mmalecki: maritz: no, not really
[11:58] Commando: I cann't uderstand that doc
[11:58] maritz: here we go
[11:58] maritz: Commando: why not?
[11:58] Commando: it's too much puzzle
[11:59] Commando: for me
[11:59] Mixmasterxp: Commando: whats your first language?
[11:59] maritz: Commando: maybe programming isn't the right choice of hobby for you then. Or you should start without jade and go with a simple html based node.js app.
[12:00] Vespakoen: https://github.com/visionmedia/jade ctrl+f / cmd+f "iteration" enter
[12:00] Mixmasterxp: I hate jade...I need some plugin for eclipse that has intellisense
[12:00] maritz: Vespakoen: that'll cause him to copy+paste it and come back to ask how to do if a few seconds later...
[12:00] Mixmasterxp: or something that can tell me I have improper indentation
[12:02] Vespakoen: sublime text 2 =D
[12:02] Vespakoen: https://gist.github.com/1076584
[12:03] Vespakoen: Commando, http://www.codeacademy.org/
[12:03] Vespakoen: oops wrong one, just a sec
[12:03] Druid_ has joined the channel
[12:03] Vespakoen: http://www.codecademy.com/#!/exercises/0
[12:04] Mixmasterxp: LOL, i am gonna start using that on people
[12:04] hellp has joined the channel
[12:05] Vespakoen: yep! it's a great recource for beginners
[12:05] enobrev has joined the channel
[12:05] xetorthio has joined the channel
[12:05] maritz: (FICTION!)"hey, does anyone know why crypto.createHash() produces the same result no matter the arguments?" - "learn2code noob, http://www.codecademy.com/#!/exercises/0"
[12:07] Kunda has joined the channel
[12:07] Mixmasterxp: you have no idea some code I get to see when looking at student's work...while with if statements
[12:08] cryptix has joined the channel
[12:08] npa has joined the channel
[12:08] Kunda has left the channel
[12:09] Mixmasterxp: so even with javascript, I have to make sure its indented properly or jade will throw an error?
[12:10] emattias has joined the channel
[12:11] jetienne_ has joined the channel
[12:12] Commando: martiz I understand that loop  code
[12:12] Commando: martiz :  I understand that loop  code
[12:14] Juan77 has joined the channel
[12:14] Vespakoen: Great job, just just earned the batch "Manual reading"
[12:14] davehamptonusa has joined the channel
[12:15] davehamptonusa has left the channel
[12:15] Vespakoen: badge* /* end of troll */
[12:17] level09 has joined the channel
[12:18] mange has joined the channel
[12:18] _baton_ has joined the channel
[12:20] maritz: Commando: wow, you managed to not trigger my nick-msg-alert twice! :D
[12:20] maritz: Commando: so, it's all good now? everything solved and working?
[12:20] ph^ has joined the channel
[12:22] motobuzz has joined the channel
[12:22] CrisO has joined the channel
[12:23] fermion has joined the channel
[12:26] nail__: Using the mongodb-native driver, would anyone know how to mix 'distinct' and 'orderby/sort' ? I've got this.collection.distinct("_tracking.service", { host: { $in: filter } }, callback) but would like the results sorted (by _tracking.service)
[12:27] CrisO has left the channel
[12:27] motobuzz has joined the channel
[12:27] cognominal_ has joined the channel
[12:28] jacobolus has joined the channel
[12:30] cjroebuck has joined the channel
[12:32] cjroebuck has joined the channel
[12:32] xet7 has joined the channel
[12:32] davehamptonusa has joined the channel
[12:32] zitchdog has joined the channel
[12:33] Wizek has joined the channel
[12:35] robotmay has joined the channel
[12:35] nrltd: Hi is there any node.js ftp client which supports tls/ssl?
[12:36] jacobolus has joined the channel
[12:44] davehamptonusa has left the channel
[12:45] Nss has joined the channel
[12:46] maritz: nrltd: https://github.com/mikedeboer/node-ssh supports sftp
[12:47] aheckmann has joined the channel
[12:47] maritz: nrltd: nope, it doesn't. sorry. :D
[12:48] DJBouche has joined the channel
[12:48] maritz: nrltd: https://github.com/ajaxorg/node-sftp seems good
[12:48] nrltd: maritz: sftp aint ssl over ftp its ssh
[12:49] maritz: d'oh, right. sorry
[12:49] mmalecki: I kinda want to pay this guy to finish this module
[12:49] maritz: mmalecki: me? (worth a try :P )
[12:50] mmalecki: haha
[12:50] maritz: or comando+m?
[12:51] noodletraveler has joined the channel
[12:51] ben_alman: just found a crazy nodejs bug
[12:52] ben_alman: https://github.com/joyent/node/issues/2515#issuecomment-3561761
[12:52] krucial has joined the channel
[12:53] noodletraveler has joined the channel
[12:53] noodletraveler has joined the channel
[12:53] Lingerance: ben_alman: you know that intervals keep going until cleared normally right?
[12:53] noodletraveler has joined the channel
[12:53] noodletraveler has joined the channel
[12:54] Lingerance: Timeouts are fire-once.
[12:54] ben_alman: lol
[12:54] pyrotechnick: ben_alman: he knows that, that's not what he's demonstrating
[12:54] ben_alman: is there any part of my code that indicates that i don't know this?
[12:54] scott_gonzalez has joined the channel
[12:54] pyrotechnick: sorry wrong tell
[12:54] ben_alman: np
[12:54] pyrotechnick: im sure this can be explained
[12:54] maritz: ben_alman: works for me.
[12:54] pyrotechnick: it's not intuitive but i don't think it's a bug
[12:54] ben_alman: maritz: lower the intervals to 1 and 1
[12:55] pyrotechnick: and if it is it won't be node it will be v8
[12:55] ben_alman: works fine in chrome
[12:55] Lingerance: The comment indicates something else
[12:55] maritz: ben_alman: still works. currently @10k
[12:55] maritz: 20k
[12:55] ben_alman: ok maritz, definitely fails here
[12:55] maritz: kk, going to report it in the issue
[12:55] pyrotechnick: what node
[12:55] ben_alman: you changed both 100s to 1?
[12:55] ben_alman: i said in the issue, 0.6.7
[12:56] pdodde has joined the channel
[12:56] maritz: oh, shit. i'm on 0.4.9. wtf? :D
[12:56] ben_alman: lol
[12:56] ben_alman: wonder if it still happens when you upgrade
[12:56] Lingerance: Quits after 4 on 0.6.0
[12:56] maritz: yep, breaks in 0.6.7
[12:56] ben_alman: ok.
[12:56] pyrotechnick: yeah it quits on 5 on 0.6.7
[12:56] maritz: after 4 for me as well
[12:56] captain_morgan has joined the channel
[12:57] ben_alman: please report that it works in the older version maritz
[12:57] pyrotechnick: sometimes 4 sometimes 5
[12:57] ben_alman: right
[12:57] pyrotechnick: i think this can be explained though
[12:57] ben_alman: i don't see how it's a v8 issue, this works perfectly in chrome - doesn't chrome use v8?
[12:57] ben_alman: in chrome it goes forever
[12:57] Lingerance: Right
[12:57] pyrotechnick: it's v8
[12:57] ben_alman: i think node is losing track of the number of running timers
[12:57] pyrotechnick: all this is in v8
[12:58] pyrotechnick: your chrome will just be an old/new v8 probably
[12:58] pyrotechnick: try chromium
[12:58] ben_alman: sec downloading latest
[12:59] pyrotechnick: yeah as i thought
[12:59] pyrotechnick: it's a scoping issue
[12:59] Lingerance: BTW, the comment really confuses me.  It should back up what is actually happening since it's in a bug report, or state that it's describing what is expected.
[12:59] ben_alman: Lingerance: what comment
[12:59] pyrotechnick: move the var id; into the function, it works
[12:59] Lingerance: // Create a never-ending interval. This should guarantee that the node process
[12:59] Lingerance: // never exits, since it's never cleared.
[12:59] ben_alman: pyrotechnick: that makes no sense. the id has to be outside or it won't exist in the next loop iteration to be able to clear the timeout
[13:00] pyrotechnick: not necessarily
[13:00] pyrotechnick: there's a good blog post about this, i will find it
[13:00] enobrev: setting the inner timeout slightly higher makes it run a little longer (but still exits eventually)
[13:00] pyrotechnick: not for me
[13:00] ben_alman: pyrotechnick: it's not a scoping issue, you're misunderstanding the purpose of id
[13:00] CarterL has joined the channel
[13:00] ben_alman: also, this works find in chromium latest (117892)
[13:00] fairwinds has joined the channel
[13:01] jbpros has joined the channel
[13:01] pyrotechnick: that still doesn't mean it's node and not v8
[13:01] ben_alman: sure
[13:01] ben_alman: but it might be relevant
[13:01] ben_alman: thats not for me to decide
[13:02] ben_alman: either way, this bug is preventing me from writing some really straightforward throttling code
[13:02] ben_alman: which really blows :/
[13:03] Lingerance: Use process.nextTick as was suggested?
[13:03] ben_alman: i'm writing an implementation agnostic commonjs modules
[13:04] ben_alman: process.nextTick is nodejs specific
[13:04] Lingerance: Ah
[13:04] maritz: if (typeof(process) !== 'undefined' && typeof(process.nextTick) === 'function') { process.nextTick(next);} else { setTimeout(next, 1);}
[13:05] ben_alman: hahaha
[13:05] pyrotechnick: ^
[13:05] pyrotechnick: you should be doing that anyway
[13:05] pyrotechnick: regardless of this bug
[13:05] ben_alman: there's no reason to not use setTimeout, it's there for a reason
[13:06] enobrev: ben_alman:replacing setTimeout/clearTimeout with setInterval/clearInterval seems to work - as a temp workaround, at least
[13:06] ben_alman: enobrev: unfortunately, that would require me to clear the interval manually inside the interval callback, which is kinda gross
[13:07] ben_alman: i really don't want to have to code hacks in to get this to work in node
[13:07] jacobolus has joined the channel
[13:07] enobrev: ben_alman: definitely gross, but lets you carry on with your throttling for now.
[13:07] ben_alman: yeah, i don't need this for what i'm currently doing
[13:08] pyrotechnick: did you look how underscore does it?
[13:08] ben_alman: i'm porting over a jquery plugin to be commonjs
[13:08] ben_alman: pyrotechnick: i'm doing something underscore doesn't do
[13:08] rurufufuss has joined the channel
[13:08] pyrotechnick: what is that
[13:08] ben_alman: see no_trailing vs the alternative under throttling here http://benalman.com/projects/jquery-throttle-debounce-plugin/
[13:09] ben_alman: i'm implementing the trailing variant
[13:09] enmand has joined the channel
[13:09] yawNO has joined the channel
[13:10] ben_alman: (which i've foind to be incredibly useful)
[13:10] pyrotechnick: what's wrong with jquery's implementation? and does underscore's trail?
[13:10] ben_alman: there is no jquery implementation, mine is the defacto jquery implementation
[13:10] ben_alman: and underscore's does not.
[13:11] pyrotechnick: so what's wrong with underscores?
[13:12] robotmay_ has joined the channel
[13:12] ben_alman: not sure, i need to look at it again, perhaps they also do the trailing bit
[13:13] ben_alman: it's been a while
[13:13] pyrotechnick: "there's nothing new under the sun"
[13:13] ben_alman: fwiw, there is or was an open ticket in underscore to include some of my functionality in their debounce
[13:14] ben_alman: it's not like we aren't all a community of code authors and contributors
[13:14] pyrotechnick: i thought this was throttle
[13:14] ben_alman: ...
[13:15] satyr has joined the channel
[13:15] maritz: oooh, you're that ben alman! i've used bbq in coke-light.de (and other german coke sites) last year. not sure what they did with it though. they kinda butchered all those pages after i left. i've decided to not look at them anymore for my own sanity :D
[13:15] qsobad has joined the channel
[13:15] ben_alman: haha
[13:15] ben_alman: well i hope it worked well for you
[13:15] enmand has joined the channel
[13:16] ovaillancourt has joined the channel
[13:16] captain_morgan has joined the channel
[13:16] ben_alman: well pyrotechnick thanks for reminding me that underscroe has throttle and debounce, i'll just use theirs for now
[13:16] ben_alman: until this issue is resolved
[13:17] noodletraveler has joined the channel
[13:17] noodletraveler has joined the channel
[13:17] maritz: ben_alman: isn't no_throttle: false a little confusing due to double-negative?
[13:17] ben_alman: maritz: well, i wanted it to trail by default
[13:17] ben_alman: i couldn't come up with a better name
[13:18] ben_alman: in the new version i'm probably going to do {trailing: false} to disable it
[13:18] ben_alman: dunno
[13:18] maritz: seems better to me :)
[13:18] pyrotechnick: that's a performance hit if you care
[13:19] ben_alman: man i don't like the underscore version of throttle
[13:19] pyrotechnick: for something like timers you probably care
[13:19] ben_alman: it does way too many timeouts
[13:19] ben_alman: mine only does a timeout when absolutely necessary :/
[13:19] ben_alman: oh well, i'll just wait and use theirs for now
[13:19] pyrotechnick: the quick way isn't always the quick way
[13:19] pyrotechnick: perhaps you have pre-optimised
[13:20] noodletraveler has joined the channel
[13:20] noodletraveler has joined the channel
[13:20] pyrotechnick: i call this a "yehuda moment"
[13:20] ben_alman: pyrotechnick: you seem to be full of quips
[13:20] ben_alman: how about something constructive
[13:20] pyrotechnick: i read the code and say, that is crazy, i can do that better/faster/smaller
[13:20] pyrotechnick: so i do
[13:20] pyrotechnick: then i fix a bug with a line
[13:20] pyrotechnick: and another bug with a line
[13:20] pyrotechnick: and another and another until slowly it becomes "yehudas" code anyway
[13:20] qsobad has joined the channel
[13:20] jtrudeau has joined the channel
[13:21] ben_alman: lol i have no idea what you're saying; do you like or dislike yehuda's code
[13:21] pyrotechnick: you may find what underscore has done is workaround this bug you speak of
[13:21] pyrotechnick: considering they target node and browser
[13:21] noodletraveler has joined the channel
[13:22] ben_alman: i've been trying to decipher underscore's source for a few minutes now, they don't use comments in a useful way
[13:22] pyrotechnick: try the coffee version
[13:22] ben_alman: i think a side-effect of their approach is that it works in node, but they clearly didn't code it to work around any node issues
[13:22] ph^ has joined the channel
[13:22] pyrotechnick: how do you know that
[13:23] ben_alman: because i'm looking at their code
[13:23] pyrotechnick: and
[13:23] ben_alman: wow, you're not worth speaking to
[13:23] ben_alman: afk, gym
[13:24] dr0id has joined the channel
[13:25] erichynds has joined the channel
[13:26] IrishGringo has joined the channel
[13:26] brianseeders has joined the channel
[13:28] maritz: haha, but it was good fun to read as a third party :P
[13:28] thalll has joined the channel
[13:28] swestcott has joined the channel
[13:29] pyrotechnick: i think he was taking out his jealousy of underscore on me or something, not sure
[13:29] pyrotechnick: meh. at least i could help
[13:29] pyrotechnick: with his code
[13:29] pyrotechnick: his attitude, that he will have to fix himself
[13:30] fumanchu182 has joined the channel
[13:30] jacobolus has joined the channel
[13:32] benvie: er I think that bug was reported recently and confirmed
[13:32] benvie: something do with buggy ref counting on the loop
[13:32] vkareh has joined the channel
[13:33] kriszyp has joined the channel
[13:33] pyrotechnick: in v8 right?
[13:33] benvie: oh yeah derp, he posted that in the same thread
[13:33] benvie: no it was an issue with libuv
[13:34] Lingerance has joined the channel
[13:34] benvie: which fits with it being a new issue in 0.6.x
[13:34] ph^ has joined the channel
[13:35] pyrotechnick has left the channel
[13:35] pyrotechnick has joined the channel
[13:35] shinuza has joined the channel
[13:43] garrensmith has joined the channel
[13:44] joshfinnie has joined the channel
[13:45] subhaze has joined the channel
[13:45] ank has joined the channel
[13:46] neurodrone has joined the channel
[13:47] cosmincx has joined the channel
[13:52] jacobolus has joined the channel
[13:52] davidsklar has joined the channel
[13:53] eeemsi: hm… 
[13:53] eeemsi: weird
[13:54] eeemsi: ah fixed … sorry
[13:55] Nss has joined the channel
[13:56] Nohryb has joined the channel
[13:56] eeemsi: couchdb said something about 6900something documents but search.npmjs.org tells me that there are currently 6421 packages … ;)
[13:57] mattp_ has joined the channel
[13:57] RLa: maybe some documents are not packages?
[13:58] eeemsi: yeah… maybe
[13:58] eeemsi: number of documents: 6422
[13:58] eeemsi: \o/
[13:58] eeemsi: thats a way better number 
[13:58] ph^ has joined the channel
[13:59] maritz: really? i'd rather look for 500 wrong entries than for 1 :D
[13:59] captain_morgan has joined the channel
[13:59] eeemsi: maritz: i am waiting for couchdb1.2 
[14:00] eeemsi: then i am going to replicate it again. there has been a fix for the view and update module that allowed the creation of documents without an ID
[14:01] CIA-101: libuv: 03Ben Noordhuis 07v0.6 * r646c80b 10/ gyp_uv : build: generate Makefiles on OS X - http://git.io/gsbLVQ
[14:01] CIA-101: libuv: 03Ben Noordhuis 07v0.6 * r98f3446 10/ src/unix/ev/ev_kqueue.c : 
[14:01] CIA-101: libuv: unix: don't close kqueue fd in kqueue_fork()
[14:01] CIA-101: libuv: The file descriptor is not inherited by the child process. Trying to close it is
[14:01] CIA-101: libuv: not just useless, it's actively harmful - if the close() call succeeds, it will
[14:01] CIA-101: libuv: have closed an altogether different file descriptor. - http://git.io/7o-kYg
[14:01] captain__ has joined the channel
[14:04] MadGu1 has joined the channel
[14:07] bkaney has joined the channel
[14:09] ben_alman: pyrotechnick: i'm not sure what i could possibly be jealous of of you or underscore
[14:09] ben_alman: btw gym was good, someday i will be not so fat
[14:09] ben_alman: feel free to convince me why i might be jealous of you
[14:10] ben_alman: or underscore
[14:10] pyrotechnick: shh
[14:10] ben_alman: heh
[14:10] ben_alman: no, really
[14:10] pyrotechnick: dude go and read again
[14:10] ben_alman: go read what?
[14:10] pyrotechnick: go and read again
[14:10] pyrotechnick: you sound silly now
[14:10] mhauri has joined the channel
[14:10] ben_alman: read… the uncommented underscore source?
[14:11] pyrotechnick: leave it alone
[14:11] josh-k has joined the channel
[14:11] ben_alman: leave what alone?
[14:11] jakehow has joined the channel
[14:11] ben_alman: and you said you'd help with my code?
[14:11] tkuijsten has joined the channel
[14:12] MadGu1 has left the channel
[14:12] xpigeonx has joined the channel
[14:13] pifantastic has joined the channel
[14:14] postwait has joined the channel
[14:14] jacobolus has joined the channel
[14:14] k1ttty has joined the channel
[14:14] hipsters_ has joined the channel
[14:16] xpigeonx has joined the channel
[14:16] Venom_X has joined the channel
[14:17] lazyshot has joined the channel
[14:17] AaronMT has joined the channel
[14:17] lduros has joined the channel
[14:18] jbpros has joined the channel
[14:18] ovnicraft has joined the channel
[14:19] tkuijsten has left the channel
[14:20] mc_greeny has joined the channel
[14:22] jakehow has joined the channel
[14:23] TomY has joined the channel
[14:23] urlisse has joined the channel
[14:25] heavysixer has joined the channel
[14:26] deedubs has joined the channel
[14:27] mc_greeny has joined the channel
[14:28] isaacs has joined the channel
[14:30] cognominal has joined the channel
[14:30] infynyxx has joined the channel
[14:30] dthompso99 has joined the channel
[14:30] napperjabber_ has joined the channel
[14:31] shedinja has joined the channel
[14:32] shedinja: is there a limit to the number of times i can call fs.stat at a time?
[14:32] level09 has joined the channel
[14:32] jacobolus has joined the channel
[14:33] alystair has joined the channel
[14:33] mikedeboer has joined the channel
[14:35] rwaldron has joined the channel
[14:35] topaxi_: shedinja: yes, see ulimit -n
[14:36] Xiphias3 has joined the channel
[14:38] lmatteis: hello
[14:38] lmatteis: do hosting like nodejitsu automatically update their node version?
[14:38] deedubs: lmatteis: No
[14:38] shedinja: topaxi_, thanks
[14:39] lmatteis: deedubs: then how do i know which version they using?
[14:39] deedubs: lmatteis: they tell you which version very clearly.  nodejitsu only went to 0.6 a couple days ago
[14:39] lmatteis: ok
[14:40] blup has joined the channel
[14:42] eb4890 has joined the channel
[14:46] Stephen has joined the channel
[14:47] herbySk has joined the channel
[14:47] Poetro has joined the channel
[14:47] Poetro has joined the channel
[14:48] amasad has joined the channel
[14:49] bkaney has joined the channel
[14:49] nibblebot has joined the channel
[14:49] ph^ has joined the channel
[14:52] zitchdog has joined the channel
[14:53] swestcott has joined the channel
[14:54] amasad has joined the channel
[14:54] Bogh has joined the channel
[14:57] robi42 has joined the channel
[14:57] CarlosC has joined the channel
[14:58] GottZ has joined the channel
[14:59] GottZ: hai everyone.
[14:59] deedubs_ has joined the channel
[15:00] thomblake has joined the channel
[15:00] thomblake has left the channel
[15:01] GottZ: does anyone know when there will be support for multicast udp sockets in node?
[15:01] noodletraveler has joined the channel
[15:03] wedtm has joined the channel
[15:03] chjj has joined the channel
[15:03] deedubs_ has joined the channel
[15:04] c4milo has joined the channel
[15:04] mattp_ has joined the channel
[15:05] GottZ: gah. so many here and nobody using irc notifications D:
[15:05] dobber has joined the channel
[15:05] GottZ: well if someone knows: twitter @igottz
[15:05] GottZ: thanks.
[15:05] jscheel has joined the channel
[15:05] jscheel has joined the channel
[15:06] brngardner has joined the channel
[15:06] MrTrick has joined the channel
[15:07] Wizek has joined the channel
[15:07] jstash has joined the channel
[15:08] jacobolus has joined the channel
[15:08] MrTrick: Anyone here use the node version of jslint? I'm getting the error " 'system' was used before it was defined", eg system.log(). Any idea what best to do to make that error go away?
[15:08] deedubs has joined the channel
[15:08] Vennril has joined the channel
[15:09] xtianw has joined the channel
[15:10] isaacs: MrTrick: define "system" before using it :)
[15:10] isaacs: MrTrick: what is "system"?
[15:11] bradleymeck has joined the channel
[15:11] Industrial: Also, don't make errors go away, solve problems. But, semantics ;).
[15:11] MrTrick: yes, thank you. Isn't system built-in? or is it like C and #include "stdio.h": included by default, but still possible to include properly like `var system=require('system');` ?
[15:12] Industrial: MrTrick: http://nodejs.org/docs/v0.6.7/api/all.html, there is no system
[15:12] Industrial: MrTrick: you are looking for console.log(); and/or util.inspect()
[15:12] MrTrick: bah, my typo.
[15:13] MrTrick: Yes, the line should have been 'console.log'. Hey look, I found an error in my code, thank you jslint!
[15:13] Industrial: np.
[15:13] xpigeonx: MrTrick: anything thats in the globals section of the api is pre-loaded
[15:13] Libra102 has joined the channel
[15:13] deedubs has joined the channel
[15:14] joshfinnie has joined the channel
[15:15] MrTrick: and thanks to you guys as well. ^_^
[15:16] Bogh has joined the channel
[15:16] robotmay has joined the channel
[15:17] joshsmith: I'm using Socket.IO, and when I do io.set('authorization', fn(){})
[15:17] joshsmith: even if my session data changes (through mongostore and express' session storage) I don't see that data as updated
[15:18] joshsmith: I get the original authed session
[15:18] joshsmith: any ideas?
[15:18] jkridner has joined the channel
[15:18] xpigeonx: have anyone used the autobahn testsuite for websocketS?
[15:18] cognominal_ has joined the channel
[15:19] Skaag has joined the channel
[15:20] Guest48760 has joined the channel
[15:21] amigojapan has joined the channel
[15:23] CIA-101: libuv: 03Ben Noordhuis 07master * r98f3446 10/ src/unix/ev/ev_kqueue.c : 
[15:23] CIA-101: libuv: unix: don't close kqueue fd in kqueue_fork()
[15:23] CIA-101: libuv: The file descriptor is not inherited by the child process. Trying to close it is
[15:23] CIA-101: libuv: not just useless, it's actively harmful - if the close() call succeeds, it will
[15:23] CIA-101: libuv: have closed an altogether different file descriptor. - http://git.io/7o-kYg
[15:23] CIA-101: libuv: 03Ben Noordhuis 07master * r646c80b 10/ gyp_uv : build: generate Makefiles on OS X - http://git.io/gsbLVQ
[15:23] CIA-101: libuv: 03Ben Noordhuis 07v0.6 * r32b291d 10/ common.gypi : 
[15:23] CIA-101: libuv: build: don't set -mmacosx-version-min
[15:23] CIA-101: libuv: It sets __MAC_OS_X_VERSION_MIN_REQUIRED__, which is what we use for feature
[15:23] CIA-101: libuv: detection. - http://git.io/eYdv-w
[15:23] CIA-101: libuv: 03Ben Noordhuis 07master * r32b291d 10/ common.gypi : 
[15:23] CIA-101: libuv: build: don't set -mmacosx-version-min
[15:23] CIA-101: libuv: It sets __MAC_OS_X_VERSION_MIN_REQUIRED__, which is what we use for feature
[15:23] cryptix has joined the channel
[15:24] cryptix: has somebody build node and v8 against uclibc?
[15:25] deedubs has joined the channel
[15:25] deedubs has left the channel
[15:25] BillyBreen has joined the channel
[15:26] isaacs: piscisaureus_: where is {} + {} NaN?
[15:26] jacobolus has joined the channel
[15:27] isaacs: piscisaureus_: note: isNaN('[object Object][object Object]') === true
[15:27] isaacs: .. {} + {}
[15:27] catb0t:  NaN
[15:27] piscisaureus_: ismell: everywhere but in the node repl
[15:27] piscisaureus_: er, isaacs ^
[15:27] joshkehn has joined the channel
[15:27] isaacs: are you saying i smell?
[15:27] isaacs: ACTION cries.
[15:27] joshkehn has left the channel
[15:27] isaacs: oic, when it's the program, but not when it's an expression.
[15:27] isaacs: .. x = {} + {}
[15:27] catb0t:  "[object Object][object Object]"
[15:27] isaacs: that's funny.
[15:27] isaacs: you know what's going on?
[15:28] isaacs: that's not (object + object)
[15:28] piscisaureus_: isaacs: someone is squatting is<tab>
[15:28] isaacs: that's empty block, +object
[15:28] piscisaureus_: isaacs: aaah
[15:28] piscisaureus_: lol
[15:28] isaacs: .. ({}) + ({})
[15:28] catb0t:  "[object Object][object Object]"
[15:28] isaacs: .. +{}
[15:28] catb0t:  NaN
[15:28] isaacs: .. +{} + {}
[15:28] catb0t:  "NaN[object Object]"
[15:28] nibblebot has joined the channel
[15:29] isaacs: block syntax, man.  third worst idea in javascript.
[15:29] Industrial: ACTION huggles Lua
[15:29] mmalecki: lua++
[15:29] RLa: cryptix, what benefits it gives?
[15:29] mmalecki: isaacs: what's the first one?
[15:30] RLa: cryptix, i would expect it compile well
[15:30] isaacs: mmalecki: eval.
[15:30] piscisaureus_: isaacs: thanks
[15:30] janekp has joined the channel
[15:30] mmalecki: isaacs++
[15:30] RLa: actually not sure about whole node
[15:30] piscisaureus_: isaacs: did SF move to another continent btw. You and ryan are up way too early
[15:30] isaacs: mmalecki: second is a tie.  1) same syntax for object property offset and array literals [], and 2) same syntax for expression coercion and function calls ()
[15:31] rauchg has joined the channel
[15:31] mmalecki: isaacs: well, I have to agree here
[15:31] isaacs: piscisaureus_: the nice gray sunrise is so delightful, though.
[15:31] mmalecki: isaacs: so, we all should just use coffeescript :)
[15:32] cryptix: RLa: my target systems are uclibc based. from what i found out i would have to disable debugging in v8 to compile it with uclibc
[15:32] isaacs: mmalecki: no, i like shadowing variables, and not having to worry about how many spaces are in front of my function call operator
[15:32] cryptix: RLa: and i came here to find out if somebody pulled it off
[15:32] CIA-101: node: 03Artur Adib 07v0.6 * re282c0a 10/ doc/api/addons.markdown : docs: document common add-on design patterns - http://git.io/Q3XUcw
[15:32] isaacs: mmalecki: not to mention line numbers, etc.
[15:32] pixel13 has joined the channel
[15:32] mmalecki: isaacs: just kidding, of course :)
[15:32] isaacs: mmalecki: i know, i know :)
[15:32] mehlah has joined the channel
[15:33] pixel13 has left the channel
[15:33] RLa: hm
[15:33] mmalecki: isaacs: I think there even was an issue to monkey-punch Error to allow overriding line numbers
[15:33] mmalecki: it was really funny.
[15:35] meso has joined the channel
[15:35] ryanfitz has joined the channel
[15:39] Morkel has joined the channel
[15:40] brngardner has joined the channel
[15:40] cpleppert has joined the channel
[15:41] aelien27 has joined the channel
[15:41] jamesbathgate has joined the channel
[15:42] jimmysparkle has joined the channel
[15:42] cognominal___ has joined the channel
[15:43] isaacs: mmalecki: monkey-patching the Error object is like the 5th "you're doing it wrong" indication.
[15:43] isaacs: you don't get there except by ignoring all the others.
[15:43] Hanspolo has joined the channel
[15:43] mmalecki: isaacs: BUT COFFEESCRIPT.
[15:44] warz has joined the channel
[15:44] warz has joined the channel
[15:46] dubenstein has joined the channel
[15:46] cpleppert has joined the channel
[15:47] rtgibbons has joined the channel
[15:48] kenperkins: anyone here familiar with tls Cleartextstream?
[15:49] kenperkins: I'm a bit confused if you need to rebind the on.close event every time you reconnect, or if just once
[15:49] jacobolus has joined the channel
[15:49] pors has joined the channel
[15:50] markschaake has joined the channel
[15:50] markschaake has left the channel
[15:51] jtsnow has joined the channel
[15:52] h4mz1d has joined the channel
[15:52] devongovett has joined the channel
[15:53] TheJH: mmalecki, isaacs, there's a special, by-default undefined property of Error for custom stacktraces :)
[15:54] devongovett has joined the channel
[15:54] TheJH: copy the default implementation from v8/src/... into that property and then monkey-patch as much as you want :)
[15:54] mmalecki: TheJH: but why?
[15:55] TheJH: mmalecki, showing the real line numbers in stacktraces, not the ones from on-the-fly generated JS?
[15:55] yawNO has joined the channel
[15:55] TheJH: mmalecki, https://github.com/jashkenas/coffee-script/pull/2050#issuecomment-3532582 it works :)
[15:55] mmalecki: TheJH: generating JS on the fly is your problem :)
[15:56] TheJH: mmalecki, why should it be?
[15:56] CIA-101: node: 03Fedor Indutny 07v0.6 * r4fdec07 10/ (deps/v8/src/ia32/code-stubs-ia32.cc deps/v8/src/objects.h): 
[15:56] CIA-101: node: Land number collision fix for v8 3.6 by Erik Corry
[15:56] CIA-101: node: Update with fixes from: http://codereview.chromium.org/9190001/ - http://git.io/rplW1g
[15:56] SoEasy has joined the channel
[15:57] pickels_ has joined the channel
[15:57] neurodrone has joined the channel
[15:57] TheJH: mmalecki, everything is fine as long as the javascript remains invisible :)
[15:57] isaacs: indutny: thanks
[15:58] tuhoojabotti: Node project contributes to v8 as well?
[15:58] TheJH: so, as soon as we have debugger support, there should be no more problems :D
[15:58] indutny: isaacs: :) ?
[15:58] Lingerance has joined the channel
[15:58] pickels_: Does anybody know library that loads a module but that lets me replace some of the dependencies that module has?
[15:59] mmalecki: TheJH: there'll be one problem left
[15:59] mmalecki: using coffeescript :)
[15:59] Cromulent has joined the channel
[15:59] TheJH: mmalecki, heh
[15:59] TheJH: pickels_, can't you just replace them in the code yourself?
[15:59] yawNO: hai
[16:00] heavysixer has joined the channel
[16:00] tmcw has joined the channel
[16:01] pickels_: TheJH, it's for testing. I want to replace require('http'); with a fake.
[16:01] indutny: mmalecki: btw, node-spdy builds on travis!! :) woot
[16:01] indutny: mmalecki: forgot to thank you!
[16:01] mmalecki: indutny: win!
[16:01] mmalecki: indutny: but I didn't do anything! :)
[16:01] indutny: anyway
[16:02] indutny: you're the only guy I know
[16:02] shinuza has joined the channel
[16:02] mmalecki: haha
[16:03] joshsmith has joined the channel
[16:03] TheJH: pickels_, maybe it works if you poison the require cache?
[16:04] mandric has joined the channel
[16:04] molavy has joined the channel
[16:04] ding has joined the channel
[16:05] bartt has joined the channel
[16:06] jocafa has joined the channel
[16:06] pickels_: TheJH, think I'll have to do something like that. Weird how little I can find about it would think it's something common.
[16:06] ritch1 has joined the channel
[16:06] TheJH: pickels_, actually, I think I've seen modules for dependency injection...
[16:07] jacobolus has joined the channel
[16:07] monteslu has joined the channel
[16:08] agnat has joined the channel
[16:08] ryan_stevens has joined the channel
[16:08] pickels_: TheJH, going to google for that see what it gives. 
[16:09] TheJH: pickels_, "npm search dependency" shows a bunch of libs
[16:09] josh-k has joined the channel
[16:09] kevwil has joined the channel
[16:09] pickels_: TheJH, that's great thanks.
[16:11] MrTrick: I understand that dependency injection is a good thing. What is suggested for granting multiple user modules access to a log module with specific configuration?
[16:11] MrTrick: Is passing the log object through to every module that uses it, the best/only solution?
[16:12] robotmay has joined the channel
[16:13] pickels_ has left the channel
[16:13] MrTrick: or does file1: require("log").configure(options);        file2: require("log").warn("Stuff!");  actually have both files dealing with the same logging object?
[16:13] pickels_ has joined the channel
[16:13] RLa: yes
[16:13] RLa: node caches modules
[16:13] clutchski has joined the channel
[16:14] shadowshell has joined the channel
[16:14] fsvieira_ has joined the channel
[16:14] fsvieira_: hello
[16:15] fsvieira_: is it possible to run nodejs server in the browser ? 
[16:15] RLa: with di i think you would just inject log somehow and modules using it won't need to worry about require
[16:15] Industrial: fsvieira_: why would anyone want to do that?
[16:15] Industrial: if it were possible
[16:15] Industrial: (so, no)
[16:17] tjholowaychuk has joined the channel
[16:17] fsvieira_: games maybe, like multiplayer game, some would be the server... other clients... 
[16:19] kitt has joined the channel
[16:19] kitt has joined the channel
[16:20] sorensen__ has joined the channel
[16:20] Vespakoen has joined the channel
[16:21] jskulski has joined the channel
[16:21] briancra_ has joined the channel
[16:22] ap3mantus has joined the channel
[16:22] lwille has joined the channel
[16:22] texinwien has joined the channel
[16:24] ritch1 has left the channel
[16:24] MrTrick: RLa: That's all well and good, but di would require every module to have the log function passed to it by the module that's upstream, along with whatever else was needed..
[16:24] MrTrick: and again with anything else that needs to be shared like db, etc.
[16:25] Vespakoen has joined the channel
[16:25] RLa: hm
[16:26] MrTrick: It's a tradeoff - singletons are great until you need two of them. ^_^
[16:28] kuebk1 has left the channel
[16:28] jbpros has joined the channel
[16:29] blueadept has joined the channel
[16:29] deadmau5 has joined the channel
[16:30] Shrink has joined the channel
[16:31] alvaro_o has joined the channel
[16:32] hotchkiss has joined the channel
[16:32] strevat_ has joined the channel
[16:33] avalanche123 has joined the channel
[16:33] stagas has joined the channel
[16:33] kenperkins: lovely morning of snow and freezing rain
[16:34] kenperkins: MrTrick: isn't that some classic CS dilemma? going from 0->1 is easy, going from 1->n is hard
[16:34] fsvieira_: hot and sunny in here :D
[16:34] terite: 63 and sunny here. A lovely morning indeed.
[16:34] RLa: i have used singletons quite many times and never had problems with them
[16:35] kenperkins: we've had snow since saturday, which for Seattle is saying something
[16:35] RLa: my last c++ project has over 40 singletons
[16:35] RLa: kenperkins, you like skiing?
[16:35] kenperkins: love it, but don't get up much these days
[16:36] maritz: 6° and rain here
[16:37] maritz: (fucking yankees :P )
[16:37] Wizek has joined the channel
[16:37] hermanjunge has joined the channel
[16:37] hermanjunge: Hi 
[16:38] hermanjunge: I want to create a dict
[16:38] hermanjunge: dict = {}
[16:38] hermanjunge: and then, add elements
[16:38] hermanjunge: this, doesn't work:
[16:38] hermanjunge: dict.push({a: 'b'});
[16:38] hermanjunge: because: Object #<Object> has no method 'push'
[16:38] topaxi_: dict['a'] = 'b';
[16:38] hermanjunge: what is the workaround?
[16:38] hermanjunge: :P
[16:38] terite: .push is for arrays.
[16:38] hermanjunge: cool
[16:39] hermanjunge: beer for you
[16:39] maritz: NO
[16:39] hermanjunge: (slash) beer did not make it, but that is my idea :D
[16:39] maritz: terite, you missed a perfect opportunity
[16:39] JoshuaJ has joined the channel
[16:40] terite: Tell me of my perfect opportunity
[16:40] hermanjunge: see ya
[16:40] maritz: no, hermanjunge wait
[16:40] maritz: i'm still searching
[16:40] maritz: damnit
[16:40] RLa: hermanjunge, why not use creation function and attach the method to the prototype 
[16:40] maritz: hermanjunge: http://www.codecademy.com/#!/exercises/0
[16:40] maletor has joined the channel
[16:40] maritz: terite: ^ :)
[16:42] fangel has joined the channel
[16:42] maritz: RLa: na, better create a new object, defineProperty with a getter and set the value in the getter according to the global {key: 'a', value: 'b'}
[16:43] cosmincx has joined the channel
[16:43] RLa: hm
[16:43] maritz: oh, even better, do a setInterval on the getter that automatically checks the global for changes!
[16:44] churp has joined the channel
[16:44] maritz: but globals are bad, so maybe we should create a file that holds this as xml.
[16:44] tokumine has joined the channel
[16:44] maritz: and send it via SOAP
[16:44] broofa has joined the channel
[16:44] maritz: through a flash websocket
[16:44] maritz: wait, what was the question?
[16:45] gkatsev: http://stopsoap.com/
[16:45] LuckySMack_ has joined the channel
[16:45] maritz: gkatsev: i hope that was an automatic response?! ^ ^
[16:45] RLa: ah, i read his question wrong
[16:45] gkatsev: maritz: haha, almost. I saw that site yesterday in response to stop SOPA.
[16:46] klaustsen has joined the channel
[16:46] maritz: yeah, to be honest I wouldn't know which one is worse for human kind
[16:48] kenperkins: anyone familiar with tls.CleartextStream ?
[16:49] willwhite has joined the channel
[16:50] kenperkins: i can't for the life of me figure out how to check .writable on a CleartextStream
[16:51] jacobolus has joined the channel
[16:52] maritz: kenperkins: afaict from the docs it should just be a standard stream and thus tls.CleartextStream.writable should be available.
[16:53] node-bot has joined the channel
[16:53] mandric has joined the channel
[16:53] maritz: if it's not it might very well be a bug
[16:54] blup has joined the channel
[16:54] avalanche123 has joined the channel
[16:54] lperrin has joined the channel
[16:55] spolu has joined the channel
[16:55] idoru has joined the channel
[16:57] tjholowaychuk has joined the channel
[16:58] retornam has joined the channel
[16:58] kenperkins: yea, it seems to be undefined when I check it
[16:58] christkv has joined the channel
[16:59] Shrink has joined the channel
[17:00] tomasztomczyk has joined the channel
[17:00] martin_sunset has joined the channel
[17:00] noodletraveler has joined the channel
[17:02] brngardner has joined the channel
[17:03] avalanche123 has joined the channel
[17:03] Destos has joined the channel
[17:04] sergiosanche has joined the channel
[17:04] sergiosanche: Hi
[17:05] christkv has joined the channel
[17:05] pizthewiz has joined the channel
[17:05] herbySk has joined the channel
[17:07] napperjabber_ has joined the channel
[17:07] wmage1 has joined the channel
[17:07] EvRide has joined the channel
[17:08] RobWC has joined the channel
[17:08] EyePulp has joined the channel
[17:09] pixel13 has joined the channel
[17:09] pixel13 has left the channel
[17:09] teadict: backbone looks very nice... it's like the thing you imagined to be when you did your first all-js app and you tried to organize all your client side code in some own-invented way and it worked but it was shitty...
[17:09] Edy has joined the channel
[17:09] Edy has joined the channel
[17:10] JJMalina has joined the channel
[17:10] dschn has joined the channel
[17:11] jtsnow has joined the channel
[17:11] kmiyashiro has joined the channel
[17:11] eignerchris has joined the channel
[17:11] kmiyashiro: anyone use zombie?
[17:13] sevenUp has joined the channel
[17:13] davidwalsh has joined the channel
[17:13] jerrysv has joined the channel
[17:14] ericmuyser has joined the channel
[17:14] kmiyashiro_ has joined the channel
[17:15] DennisRasmussen has joined the channel
[17:15] joelmob has joined the channel
[17:15] tomasztomczyk has joined the channel
[17:15] i42n has joined the channel
[17:17] joelmob: are yhere any suggestions for what templating engine i should begin with?
[17:18] mattgifford has joined the channel
[17:18] gigafied has joined the channel
[17:19] trotter has joined the channel
[17:19] Lingerance: joelmob: Depends if you want to use something like Jade, or something that lets you write real HTML.
[17:19] Me1000 has joined the channel
[17:19] Lingerance: ACTION uses Ext.XTemplate
[17:19] chadskidmore has joined the channel
[17:20] jacobolus has joined the channel
[17:20] kmiyashiro: or mustache
[17:20] kmiyashiro: or handlebars
[17:20] joshsmith: any socket.io experts in here?
[17:20] Lingerance: Just ask
[17:21] tbranyen: XXXTemplates
[17:21] jerrysv: i like handlebars
[17:22] kmox83_ has joined the channel
[17:22] wdbl has joined the channel
[17:22] klaustsen has joined the channel
[17:23] bpr has joined the channel
[17:23] HardBit has joined the channel
[17:23] TimTim has joined the channel
[17:23] qsobad has joined the channel
[17:23] keeto has joined the channel
[17:24] trose has joined the channel
[17:24] deadmau5 has joined the channel
[17:24] bpr: hey, I just installed node via git (i installed v0.6.7) and when i try to use npm to install express it seems to go into an infinite loop: http://pastebin.com/WmWteamc
[17:25] teadict: Lingerance: can't you write HTML in Jade templates? I have..
[17:25] bpr: the node process takes up 100% cpu at that point
[17:25] joshsmith: Lingerance: I've asked several times over the past 12 hours
[17:25] joshsmith: it's been mostly dead
[17:25] joshsmith: http://stackoverflow.com/questions/8928576/socket-io-authorization-function-is-not-updating-session-data/8928707#8928707
[17:25] bpr: does anyone have any idea what to look at in order to resolve this?
[17:25] franciscallo has joined the channel
[17:26] _dc has joined the channel
[17:26] infynyxx has joined the channel
[17:26] akter has joined the channel
[17:26] joshsmith: bpr: try installing through an installer instead and see if that'll work?
[17:27] bpr: you mean node itself right?
[17:27] joshsmith: yep
[17:27] bpr: ok. i'll try that
[17:27] joshsmith: that would be the first thing I'd try
[17:27] teadict: [Backbone] can you have more than one Model tied to one Collection? a... BICOLLECTION
[17:27] joshsmith: maybe you accidentally downloaded some fubared version
[17:27] bpr: yeah, i tried v0.6.6 first actually haha
[17:28] joshsmith: at least with the installer you're pretty much guaranteed to get a working package
[17:28] joshsmith: just make sure you update your PATH correctly
[17:28] christkv has joined the channel
[17:29] bpr: i've worked with node via git on other machines and things have worked well. this issue is completely bizzar to me
[17:29] colinclark has joined the channel
[17:29] bpr: but, your suggestion is a good one, and i'm doing it now
[17:29] joshsmith: I install node via SVN
[17:29] Shrink has joined the channel
[17:29] joshsmith: ACTION chuckles
[17:29] Shrink has joined the channel
[17:29] bpr: yeah lol
[17:30] joshsmith: you do any socket work bpr?
[17:30] bpr: you mean socket.io?
[17:30] joshsmith: yeah
[17:31] dshaw_ has joined the channel
[17:31] bpr: only a little.
[17:31] pandeiro has joined the channel
[17:32] joshsmith: I am freaking out about trying to get Express session middleware to play nicely with the socket sessions
[17:32] bpr: yeah, that's something i have on my plate to tackle in the upcoming days
[17:32] vl4kn0 has joined the channel
[17:32] joshsmith: well, want to take 10 minutes and learn the hard way?
[17:33] westc: lesson time :D
[17:33] joshsmith: ohai westc 
[17:33] bpr: well, here's the key difference.  I'm trying to get a session from a java web-stack
[17:33] westc: just came back on the irc
[17:33] bpr: not express
[17:33] joshsmith: ACTION shoots self
[17:33] draginx has joined the channel
[17:33] westc: java web stack
[17:33] westc: are you serious dude
[17:33] bpr: i'm thinking i'm prob gunna have to make an oauth2
[17:34] bpr: westc: yup... saddly.  The java wasn't my call
[17:34] westc: it's bad enough getting it to work with express session middleware :(
[17:34] joshsmith: whose was it? your manager from 1998 transported into the future?
[17:34] westc: lmao
[17:34] bpr: basically
[17:35] cjm has joined the channel
[17:35] eldar has joined the channel
[17:36] joshsmith: bpr: http://i.imgur.com/jCver.jpg
[17:36] bpr: haha
[17:36] joshsmith: umm yeah, we're gonna need you to implement that in Java
[17:36] bpr: very nice
[17:36] joshsmith: westc: help a brotha out?
[17:36] ericnakagawa has joined the channel
[17:37] HardBit: hahahaha
[17:37] teadict: so wait.. about Browserify..
[17:37] teadict: emm, I don't know how to put it
[17:38] teadict: instead of storing scripts under ./public/javascripts (Express).. what you do is install modules in the server and don't give a fuck about where they are stored (although we all know where)..
[17:38] zeade has joined the channel
[17:38] Raynos has joined the channel
[17:39] teadict: and then what? in the client-side you eliminate all script tags and do require()s in your main.js
[17:39] westc: joshsmith: sure
[17:39] teadict: so dependency is handlded now by the order of your requires?
[17:39] chunhao_ has joined the channel
[17:39] kenperkins: maritz: stupidity ensues
[17:40] joshsmith: westc: http://stackoverflow.com/questions/8928576/socket-io-authorization-function-is-not-updating-session-data/8928707#8928707
[17:40] heatxsink has joined the channel
[17:40] adrianF has joined the channel
[17:40] joshsmith: trying to get Express middleware sessions (mongo in this case) to play with the socket sessions
[17:40] joshsmith: I can set the sessions no problem in the authorization function
[17:40] joshsmith: my problem is that if the Express session is modified (destroyed, in this case, by a logout)
[17:41] teadict: ..
[17:41] joshsmith: fucking irccloud
[17:41] joshsmith: then the socket still has the old session information
[17:41] teadict: ban the domain
[17:41] teadict: ban it ban it
[17:42] svnlto has joined the channel
[17:42] AndreasMadsen has joined the channel
[17:42] cognominal has joined the channel
[17:42] khrome has joined the channel
[17:43] molavy has left the channel
[17:43] mmalecki: aww come on irccloud
[17:43] majek has joined the channel
[17:43] AndreasMadsen: hi all
[17:43] joshsmith: I hate irccloud now
[17:44] kenperkins: as it turns out, stream.writeable is definitely undefined :) spelling is my friend
[17:44] joshsmith: spleling iis your enanmy kenperkins 
[17:45] slajax: ircspamcloud
[17:45] RexM has joined the channel
[17:45] joshsmith: slajax++
[17:45] catb0t: slajax now has 1 beer
[17:45] _dc has joined the channel
[17:45] slajax: thank you, I will be here all night
[17:46] wdbl: teadict: I thought that browserify put all your dependencies into one file
[17:47] dscape has joined the channel
[17:47] garann has joined the channel
[17:47] tanepiper has joined the channel
[17:47] iaincarsberg has joined the channel
[17:47] JKarsrud has joined the channel
[17:47] Raynos has joined the channel
[17:47] maritz: kenperkins: what? :D
[17:47] jeremyselier has joined the channel
[17:47] metapandava has joined the channel
[17:47] kenperkins: martiz: as it turns out, stream.writeable is definitely undefined :) spelling is my friend
[17:47] kenperkins: doh
[17:47] fcoury has joined the channel
[17:47] teadict: wdbl: that's why I'm not using it, I think it does but you have to build it, I don't want to build anything
[17:48] maritz: kenperkins: i still don't get it
[17:48] maritz: < stupid
[17:48] joelmob has joined the channel
[17:48] joshsmith: westc: ^^ my stuff is way up there above the irccloud spam
[17:48] kenperkins: lol
[17:49] lmatteis has joined the channel
[17:49] kenperkins: maritz: I was trying to figure out why cleartextStream.writeable was undefined. It's because it's cleartextStream.writable
[17:49] heatxsink has joined the channel
[17:49] dnyy has joined the channel
[17:49] jskulski has joined the channel
[17:49] terite has joined the channel
[17:50] maritz: kenperkins: see, I didn't even know it was spelled writable. (not a native speaker) i would've freaked the fuck out if i ran into that bug.
[17:50] kenperkins: haha
[17:50] jemparing has joined the channel
[17:50] ec has joined the channel
[17:51] salazr_ has joined the channel
[17:51] daleharvey has joined the channel
[17:51] MrTrick has joined the channel
[17:51] wdbl: teadict: right, you use the browserify cli app to basically lookup all your dependencies and package them all into one file, where it does require.define("file.js", function(...); for each dependency file, so that way it doesn't matter which order your requires are in.
[17:52] MrTrick: ACTION ponders why his freenode connection keeps dropping out (but other irc servers are fine)
[17:52] sriley has joined the channel
[17:52] monk12: hello all, quick question... if i checkout my friend's github repository, i download a folder with his node project to work on... it has a package.json with dependencies... is there anyway to install these dependencies? (not sure since i got it via git since its a main project and not a node module/npm install)
[17:52] ryan_stevens has joined the channel
[17:52] teadict: wdbl: too much fuss!
[17:52] mjijackson has joined the channel
[17:53] deedubs has joined the channel
[17:53] wingie has joined the channel
[17:53] jayniz has joined the channel
[17:53] stagas: monk12: do 'npm install' in the project dir
[17:53] wdbl: teadict: well, it's just one command to generate the file but there's no need for it if you're not sharing code with the server side node.js
[17:53] wdbl: teadict: so yeah, don't do it at all if you don't need that benefit.
[17:53] alessioalex has joined the channel
[17:53] Axefield has joined the channel
[17:53] gsmcwhirter has joined the channel
[17:54] joshfinnie has joined the channel
[17:54] teadict: wdbl: yeah
[17:54] wdbl: teadict: if you need that benefit and you don't want to use something like browserify, you're going to have to right your modules using async loading
[17:54] wdbl: patterns
[17:54] Axefield: Good Morning from Miami Beach :D
[17:54] ralph_ has joined the channel
[17:54] ericmuyser has joined the channel
[17:54] monk12: cool thanks stagas, it worked :)
[17:55] tiglionabbit has joined the channel
[17:55] nerdfiles1 has joined the channel
[17:55] HardBit: Miami Bitch!
[17:55] remysharp has joined the channel
[17:55] maritz: HardBit: Munich Bitch!
[17:55] HardBit: anywhere speaks spanish here?
[17:55] nerdfiles1 has left the channel
[17:55] teadict: wdbl: yes, my concern is the client side files that start to build up in a one page app, not the server libraries
[17:56] strmpnk has joined the channel
[17:56] booo has joined the channel
[17:56] wdbl: teadict: this article covers the major module patters - http://addyosmani.com/writing-modular-js/
[17:56] wdbl: *patterns (doh!)
[17:57] xpigeonx has joined the channel
[17:57] maritz: teadict: usually you won't need all client libs at the very start of your SPA, you can have on essential.js that you need for the initial page and then load everything else in the background. (usually resulting in 2 js files which are easily cached)
[17:57] wdbl: (in depth, I might add)
[17:57] draginx: whats a good heatmap generotr with nodejs?
[17:57] draginx: generator*
[17:57] GottZ has joined the channel
[17:58] maritz: draginx: node-heatmap maybe?
[17:58] teadict: maritz: I don't understand how those two files work
[17:58] Fabryz has joined the channel
[17:58] CrabDude has joined the channel
[17:58] wycats has joined the channel
[17:58] GottZ: om nom nom. hai
[17:59] nym has joined the channel
[17:59] slaskis has joined the channel
[17:59] Edy has joined the channel
[17:59] Edy has joined the channel
[18:00] Shrink has joined the channel
[18:00] Shrink has joined the channel
[18:00] GottZ: anyone knows when udp will be fully supported again in the major build of node?
[18:00] Edy has left the channel
[18:00] maritz: teadict: assuming you use backbone.js for your SPA, to render your initial page you'd probably only need backbone, underscore, jquery and maybe 1-2 other libraries to display your first page. while the user is looking at that page you can load everything else you need. since you want to minify all your stuff, you should put backbone, underscore etc... into one minified "essentials.js" and the rest into a "bullshit.js".
[18:00] CrabDude_ has joined the channel
[18:01] teadict: maritz: all that is assuming you need performance for a public app, right? cuz I'm building a closed network app for like 25 clients heh
[18:01] jacobolus has joined the channel
[18:01] teadict: I can go ape on performance
[18:01] wdbl: maritz: are you saying to do that using browserify?
[18:02] niftylettuce has joined the channel
[18:02] GottZ: derp
[18:02] maritz: then why do you care about the size of the dependency list for your client? :D
[18:02] ovaillancourt has joined the channel
[18:02] mraleph has joined the channel
[18:02] maritz: wdbl: i don't even know what that is :P
[18:02] teadict: I don't care about the size.. which is why I don't need browserify.. I care about the organization of the clietn side files
[18:02] wdbl: teadict: is it a big app? like lots of pages? If so, go for maintainability over everything..however you wanna do that :)
[18:02] cmwelsh has joined the channel
[18:02] teadict: (not the core libraries, my code)
[18:02] teadict: wdbl: it'll get big, yes
[18:03] teadict: wdbl: yes, exactly
[18:03] Venom_X has joined the channel
[18:03] patcito has joined the channel
[18:03] level09 has joined the channel
[18:03] teadict: that's why I'm looking for the best way to organize client side code.. backbone is the first step
[18:03] CrabDude_ has joined the channel
[18:03] owenb has joined the channel
[18:03] teadict: I guess I could just load all the modelfiles I'll need for a given URL
[18:04] teadict: it won't matter how much it takes to load, even if they are a hundred
[18:04] robotmay has joined the channel
[18:04] wdbl: maritz: oh ok, just wondering because he was asking about browserify before and that's the tool to package up a bunch of node js modules into one file for use in the browser side.
[18:04] relix has joined the channel
[18:04] materialdesigner has joined the channel
[18:05] GottZ: am i wrong or is this possible in node? https://developer.valvesoftware.com/wiki/Server_queries like the A2S_INFO package etc. (udp)
[18:05] wdbl: teadict: the best way to organize your client side code is to write them as modules, IMO. separate files for everything, while you're working on it.
[18:05] mandric has joined the channel
[18:05] wdbl: teadict: deploying the files is another story
[18:05] jerrysv: teadict: maybe check out servitude
[18:05] teadict: wdbl: yes, but how exactly do I load everything?
[18:05] stagas: GottZ: should be
[18:05] teadict: jerrysv: k.. on it
[18:06] jerrysv: teadict: http://legitimatesounding.com/blog/Servitude_CSS_and_JavaScript_Injection_Sugar.html
[18:06] wdbl: teadict: if you can work your deployment down to one command that you must run to deploy, you've done a great job :)
[18:06] GottZ: then i possibly missunderstood the udp docs :/
[18:07] lz has joined the channel
[18:07] teadict: wdbl: what do you mean by "a command"? I don't want CLI involved in client side development.. what's the benefit in it?
[18:07] isaacs has joined the channel
[18:07] jacobolus has joined the channel
[18:07] teadict: wdbl: dependencies organization?
[18:07] wdbl: teadict: to load everything, it depends on how you write your code. I like putting all my javascript into modules (so i can work on separate files) and then browserify it before I view it in the browser. browserify also has a mode where it stays open and monitors the module files as you work on them and when you save one, it automatically updates the file that the browser uses.
[18:07] teadict: ACTION reads servitude nevertheless
[18:08] wdbl: teadict: that's the benefit of it
[18:08] teadict: wdbl: sounds nice.. yes
[18:08] wdbl: teadict: basically, you don't need to keep running a command
[18:08] wdbl: teadict: you run it once and it keeps watching and updating the output .js file
[18:09] wdbl: teadict: all you have to do is refresh your browser
[18:09] GottZ_ has joined the channel
[18:09] teadict: maybe I'm not seeing how one actually uses browserify on a everyday base
[18:09] teadict: I see..
[18:09] GottZ_: gah. phone cable disconnected D:
[18:09] GrizzLyCRO has joined the channel
[18:09] wdbl: teadict: you also get the benefit of being able to write code in the synchronous commonJS module format (the one that node uses), which is simpler than the other ones.
[18:10] teadict: so I would be writing the client side modules/code in the server side directories, from where browserify takes charge..
[18:10] Hosh has joined the channel
[18:11] hipsters_ has joined the channel
[18:11] wdbl: no, you can install browserify anywhere and generate the output.js file
[18:11] clutchski has joined the channel
[18:11] wdbl: browserify is just an app that is built with node.js
[18:11] tornad has joined the channel
[18:11] GottZ_: nick GottZ
[18:11] wdbl: you can run node anywhere, on your dev machine or server
[18:11] wdbl: or both
[18:11] teadict: oh
[18:12] teadict: then I work, I build, then the output.js is what I insert in my Express?
[18:12] patcito has joined the channel
[18:12] teadict: nothing else?
[18:12] teadict: because it's already..... wait for it... browserifyed!
[18:12] teadict: I get it
[18:12] raincole_ has joined the channel
[18:12] wdbl: yeah that's it
[18:12] teadict: but..
[18:12] teadict: now that there's only one file
[18:12] teadict: in a script tag in the client
[18:13] teadict: isn't that everything I'll ever need?
[18:13] teadict: in one big load
[18:13] wdbl: no, I don't think you browserify jquery or things like that
[18:13] teadict: no, but all my code
[18:13] sebash__ has joined the channel
[18:13] jerrysv: you can servitude those
[18:13] sarlalian has joined the channel
[18:14] teadict: this app will have like 25 sections or something
[18:14] bingomanatee_ has joined the channel
[18:14] StanlySoManly has joined the channel
[18:14] teadict: each one with their models and collections and crap
[18:14] teadict: all that goes into output.js?
[18:14] teadict: and the it gets loaded in one script tag?
[18:14] wdbl: teadict: you'll have to play around with it and see how it fits into your project
[18:14] lperrin has joined the channel
[18:14] teadict: wdbl: yes.. that'll be better.. thanks 
[18:14] wdbl: teadict: you could have a separate entry.js file for each section
[18:14] clutchski has left the channel
[18:14] teadict: ah
[18:14] teadict: right
[18:14] teadict: I can build at will
[18:15] wdbl: teadict: and that would only include stuff you need in that section. one file per section, but each file contains dependencies
[18:15] ericnakagawa: anyone attending node summit?
[18:15] teadict: yes, that would work nicely.. because it's not actually a single page app... it'll be more like a 5 pages app, which represent the main parts
[18:15] wdbl: teadict: it's not a silver bullet
[18:15] teadict: THEN inside is all async
[18:15] jacobolus has joined the channel
[18:15] jerrysv: ericnakagawa: not i, but i will be at nodepdx
[18:16] ericnakagawa: nice. looking it up
[18:16] fatjonny has joined the channel
[18:16] teadict: wdbl: multiple single pages sounds like a better approach for a big app, right? only one would be madness in terms of organization
[18:17] Bogh has joined the channel
[18:17] tylerstalder has joined the channel
[18:17] wdbl: teadict: i think either way could work well; depends on how many distinct dependencies and how many distinct modules for each section
[18:18] teadict: wdbl: yes, there are 5 very dinstict main modules/sections of the app, which also have different access policies, so I'm going for 5 main SP's
[18:19] tjholowaychuk has joined the channel
[18:19] wdbl: teadict: if we think about it long enough, I'm sure we can find problems with either approach too :) the thing is to just pick one and try it out!
[18:19] teadict: truedat
[18:19] wdbl: alright, i'm going to get coding nao myself! pleasure talking with you, ttyl :)
[18:20] teadict: wdbl: thanks a bunch for the calmed asnwers :)
[18:20] prettyrobots has joined the channel
[18:20] LeMike has joined the channel
[18:21] GottZ_: stagas? still there?
[18:21] GottZ_: nick GottZ
[18:21] stagas: GottZ_: hey
[18:21] GottZ_: aww
[18:21] shiawuen has joined the channel
[18:21] GottZ: yeeha
[18:21] tomh has joined the channel
[18:21] GottZ: my problem is the following
[18:21] GottZ: i have a server process
[18:22] cgfuh has joined the channel
[18:22] GottZ: that i want to send a udp package to. (the doc says it has to be udp) and it returns something back
[18:22] GottZ: now i dont get it how i could get something back over udp
[18:22] GottZ: specialy in node
[18:22] DennisRasmussen: I'm in Win7 and I've got a hosts setting for a domain and a custom IP, but when I try to request (http) a file from that domain, nodejs ignores the hosts setting (I think). What can I do? I can't use the ip because there's a subdomain involved.
[18:22] MrTopf has joined the channel
[18:22] DennisRasmussen: on Win7*
[18:22] HardFu: which date/time library would you recommend?
[18:23] tbranyen: moment
[18:23] jerrysv: HardFu: cromag
[18:24] draginx has left the channel
[18:24] GottZ: there is my tiny code: http://pastebin.com/ykQcjAyE there are the specs: https://developer.valvesoftware.com/wiki/Server_queries and i'm trying to use the query: A2A_PING
[18:24] teadict: found cromag last night, I like it
[18:24] twolfson has joined the channel
[18:24] teadict: it's dettached from Date
[18:24] teadict: it's awesome
[18:24] jerrysv: teadict: thanks :)
[18:24] t0mmyvyo has joined the channel
[18:24] teadict: oh, you author?
[18:24] jerrysv: it's date-utils, minus monkeys
[18:24] jerrysv: yeah
[18:25] teadict: ^_^
[18:25] stagas: GottZ: beats me, I haven't dug much to udp. maybe you need .bind http://nodejs.org/docs/latest/api/dgram.html#dgram.bind
[18:25] HardFu: both seem nice, now I have a hard time deciding
[18:25] HardFu: doesn't really mater haha
[18:25] HardFu: matter
[18:25] GottZ: maybe. but i dont get it how the server then could know where to answer to
[18:25] johnmdonahue has joined the channel
[18:26] HardFu: damn I have some trouble with mongodb
[18:26] GottZ: i've seen how to do this in php but the dgram implementation in node seems to lack support (if i understood it right)
[18:27] HardFu: dunno whether it's my lack of knowledge :)
[18:27] AaronMT_ has joined the channel
[18:27] dgathright has joined the channel
[18:27] HardFu: I'm doing a map/reduce on a collection which queries database for a date range (one day, from midnight to midnight), but I get two day's worth of records
[18:27] GottZ: i've even wget -r all the logs of this irc to see if anyone has ever tryed to write here about this :/ i'm the first
[18:28] whitman has joined the channel
[18:28] CrisO has joined the channel
[18:28] CrisO has left the channel
[18:29] joelmob has joined the channel
[18:29] jerrysv: maybe timezone differences?
[18:29] jerrysv: do they correspond with the same number of hours from utc as you?
[18:29] CrabDude has joined the channel
[18:29] HardFu: no, server is PST, I'm GMT + 1
[18:29] HardFu: so CET
[18:29] GottZ: well. if anyone knows something just write here or in twitter to @igottz i could srsly need some help with this. g8g now. cya.
[18:29] stagas: GottZ: didn't .bind work?
[18:30] soapyillusions has joined the channel
[18:30] jerrysv: i dunno how you're storing your dates, but i use $in and pass in the date itself
[18:31] HardFu: will that cover the whole day?
[18:31] samsonjs has joined the channel
[18:31] Shrink has joined the channel
[18:31] HardFu: jerrysv: you have an example?
[18:31] jerrysv: depends on how your data is stored, i have mine broken up into date and time as separate fields
[18:31] lperrin has joined the channel
[18:32] N0va` has joined the channel
[18:32] jerrysv: collection.find({ date: { "$in": ['2012-01-18'] })
[18:32] wolfeidau has joined the channel
[18:32] kmiyashiro: how do I pass an arguments object to another constructor?
[18:32] HardFu: I only save the timestamp as new Date()
[18:32] HardFu: whenever document is inserted
[18:32] mrb_bk has joined the channel
[18:33] ryanseddon has joined the channel
[18:33] teadict: jerrysv: how would the route in the servitude bricks example translate to express?
[18:33] CarterL has joined the channel
[18:33] kmiyashiro: new blah(arguments) doesn't seem to work
[18:33] brngardner has joined the channel
[18:33] micheil has joined the channel
[18:33] dshaw_ has joined the channel
[18:33] sveisvei has joined the channel
[18:34] jerrysv: teadict: use stub.js and write a quick express plugin? i will see about porting it to express.  we ported it to php in the office (down from 44 javascript requests, 3 css requests, to 1 servitude request)
[18:34] rwaldron has joined the channel
[18:35] jerrysv: teadict: an express port actually is planned, just hasn't hit the top of my stack yet
[18:36] teadict: so you can't use servitude unless you use bricks?
[18:37] jerrysv: teadict: at the moment, no, but it's pretty easy to implement. as i said, we implemented it all in php for my day job (huge win)
[18:37] teadict: I see
[18:37] jerrysv: the important parts are the servitude object for the browser, and servitude.inject()
[18:38] jerrysv: the rest is reading and caching files, and setting up your headers correctly for best caching
[18:38] jerrysv: (that's what bricks is doing)
[18:40] ec has joined the channel
[18:41] ap3mantus has joined the channel
[18:41] LarsSmit has joined the channel
[18:41] jacobolus has joined the channel
[18:41] staar2 has joined the channel
[18:41] staar2: hello
[18:42] garann has joined the channel
[18:42] e-1 has joined the channel
[18:42] e-1 has joined the channel
[18:42] deadmau5 has joined the channel
[18:43] mxbtty has joined the channel
[18:43] pizthewiz_ has joined the channel
[18:43] blup has joined the channel
[18:43] caolanm has joined the channel
[18:44] donald_cook has joined the channel
[18:44] reid has joined the channel
[18:44] JasonSmith has joined the channel
[18:45] Vespakoen has joined the channel
[18:45] staar2: i am starting developing small web app would this the best toolkit currently { express, mongodb(mongoose), view templates jade } ?
[18:45] olegp has joined the channel
[18:45] teadict: hold the phone...
[18:46] daleharvey has joined the channel
[18:46] teadict: I can do multiple `exports.something = function() {...}` in one module?
[18:46] RLa: teadict, why not
[18:46] teadict: so then I `var m = require(module); m.something(); m.else();` ?
[18:47] RLa: yeah
[18:47] teadict: then what I'm doing is not necessary? http://paste.ubuntu.com/809906/
[18:48] teadict: I could do exports.get and exports.post for the login module?
[18:48] ap3mantus has joined the channel
[18:49] garrensmith has joined the channel
[18:49] RLa: yes
[18:49] teadict: dammit
[18:50] teadict: ah, but what about the modules I'll need? I think I did it like this because of them
[18:50] Heisenmink_ has joined the channel
[18:51] jamund has joined the channel
[18:51] mkultra329 has joined the channel
[18:52] jamund: Anyone written a tutorial on migrating from learnboost/cluster to core/cluster
[18:52] ericnakagawa_ has joined the channel
[18:53] teadict: RLa: because I have the ORM instance I want to pass to route modules.. which is created in app.js... I can't go around requiring it ):
[18:53] AndreasMadsen has joined the channel
[18:54] zemanel has joined the channel
[18:54] wdperson has joined the channel
[18:55] kmiyashiro has joined the channel
[18:56] ericnakagawa has joined the channel
[18:56] TooTallNate has joined the channel
[18:58] level09 has joined the channel
[18:58] willwhite has joined the channel
[18:58] jacobolus has joined the channel
[18:59] Cromulent has joined the channel
[19:00] devongovett has joined the channel
[19:00] xtianw has joined the channel
[19:00] jcrosby has joined the channel
[19:01] jcrosby has left the channel
[19:02] ap3mantus has joined the channel
[19:02] johnhamelink has joined the channel
[19:03] Guest48760 has joined the channel
[19:03] eee_c has joined the channel
[19:03] wmage has joined the channel
[19:04] Destos has joined the channel
[19:04] level09_ has joined the channel
[19:04] CrabDude: mikeal: Any thoughts on why "curl -v -L  https://adam.crabtree%40palm.com:hermes@build.phonegap.com/api/v1/apps/63320/android > out.apk
[19:04] CrabDude: errr
[19:04] CrabDude: damn, guess i need to change my password...
[19:04] jsurfer has joined the channel
[19:04] CrabDude: lol
[19:05] jakehow has joined the channel
[19:05] ror12 has joined the channel
[19:05] halfhalo: tsktsktsk
[19:05] CrabDude: stray enter key press
[19:06] ror12: how would i read a file and loop through each line by line, i used readFile / readFileSync, and called .split('\n') and looped the array... better way?
[19:06] CrabDude: mikeal: any rate, any thoughts on why the above curl works, but this does not: request('https://XXXX:XXXX@build.phonegap.com/api/v1/apps/63320/android').pipe(fs.createWriteStream('out.apk'));
[19:07] cjroebuck has joined the channel
[19:07] joshsmith: argh, socket.io is pissing me off
[19:07] joshsmith: I'm doing this
[19:07] joshsmith: http://stackoverflow.com/questions/8928576/socket-io-authorization-function-is-not-updating-session-data/8928707#8928707
[19:07] magnars has joined the channel
[19:07] joshsmith: in order to have the session update appropriately, I have to call hs.session.destroy()
[19:07] franciscallo has joined the channel
[19:07] bacon000 has joined the channel
[19:08] joshsmith: bt hs.session.reload() doesn't work sometimes, saying there is no method reload
[19:09] magnars: When a module exports only a function, how would you go about stubbing that dependency out in a test? Context: I'm trying to stub out the new node-glob 3.
[19:10] franciscallo has joined the channel
[19:10] ericnakagawa has joined the channel
[19:10] joshsmith: err it has nothing to do with .reload()
[19:11] joshsmith: I mean, .destroy()
[19:11] joshsmith: but .reload() only works sometimes
[19:11] zanefactory has joined the channel
[19:11] Wizek has joined the channel
[19:11] zitchdog has joined the channel
[19:12] AAA_awright: https://www.destroyallsoftware.com/talks/wat
[19:14] ryanrolds_w has joined the channel
[19:15] CrisO1 has joined the channel
[19:15] thriple has joined the channel
[19:16] TheLifelessOne has joined the channel
[19:16] simb has joined the channel
[19:16] LarsSmit1 has joined the channel
[19:16] CrisO1 has left the channel
[19:17] petrjanda has joined the channel
[19:17] nicki9knuckles has joined the channel
[19:19] mandric has joined the channel
[19:19] strevat_ has joined the channel
[19:19] Destos has joined the channel
[19:20] letsgojuno has joined the channel
[19:20] ryanrolds_w has joined the channel
[19:21] darinc has joined the channel
[19:22] jxson has joined the channel
[19:22] Bonuspunkt: WATMAN :D
[19:22] boehm has joined the channel
[19:22] seebees has joined the channel
[19:23] teadict: wdbl: I think I'll use browserify
[19:23] levi501d has joined the channel
[19:23] mange has joined the channel
[19:23] teadict: wdbl: BUT.. what was that you mentioned so you don't have to build everytime you change something?
[19:23] lperrin has joined the channel
[19:24] jacobolus has joined the channel
[19:24] thriple has joined the channel
[19:25] thriple: I am trying to understand more about file descriptors but I am having trouble finding a resource that doesn't assume I have some prior knowledge of them. Anyone know where I can find some good info 'for dummies'?
[19:26] pandeiro has joined the channel
[19:27] garrensmith has joined the channel
[19:29] markschaake has joined the channel
[19:29] markschaake has left the channel
[19:29] coderarity has joined the channel
[19:30] erichynds has joined the channel
[19:32] tokumine has joined the channel
[19:32] mAritz has joined the channel
[19:32] MrBig has joined the channel
[19:33] HT_ has left the channel
[19:34] amasad has joined the channel
[19:36] mraleph1 has joined the channel
[19:37] Minkben has joined the channel
[19:37] stelleg has joined the channel
[19:38] `3rdEden has joined the channel
[19:40] Hebo has joined the channel
[19:40] sotosof has left the channel
[19:40] magnars has left the channel
[19:41] kevwil has joined the channel
[19:43] captain__: jesusabdullah: in blacksmith, config.js seems largely unused, plans for it?
[19:44] joelmob has joined the channel
[19:45] MrTrick: ACTION thinks it would be nice if all the node.js documentation examples... a) were explained. and b) passed jslint.
[19:45] redir has joined the channel
[19:45] zitchdog has joined the channel
[19:45] jamund has joined the channel
[19:46] bradleymeck: i do not like jslint but they were talking about jshinting the whole codebase again
[19:46] koo3 has joined the channel
[19:46] erichynds has joined the channel
[19:47] koo4 has joined the channel
[19:48] johnmdonahue: I started playing around with flatiron but am not getting very far… What am i missing here? I can't create. https://gist.github.com/1641998
[19:48] bpr has left the channel
[19:49] liar has joined the channel
[19:49] mraxilus has joined the channel
[19:50] mmalecki: johnmdonahue: it needs a parameter, I think
[19:50] mmalecki: flatiron create appname
[19:51] esmevane has joined the channel
[19:51] johnmdonahue: mmalecki: i tried both ways as in the gist
[19:51] thriple_ has joined the channel
[19:51] mmalecki: oh, right
[19:51] johnmdonahue: mmalecki: i even tried with 2 params like on the flatiron site
[19:51] mmalecki: hrm... looking
[19:51] captain_morgan: needs 2 params, type and name
[19:52] sotosof has joined the channel
[19:52] johnmdonahue: captain_morgan: what "types" are available?
[19:52] captain_morgan: not sure what valid type are
[19:52] johnmdonahue: ha
[19:52] mmalecki: I don't think so...
[19:52] sotosof has left the channel
[19:52] mmalecki: https://github.com/flatiron/flatiron/blob/master/bin/commands/create.js#L7
[19:52] mmalecki: actually, try with two params
[19:52] mmalecki: appname whatever
[19:53] disappearedng has joined the channel
[19:53] johnmdonahue: yeah i see that it has 2 params (name, callback)
[19:53] johnmdonahue: https://github.com/flatiron/flatiron/blob/master/bin/commands/create.js
[19:53] mmalecki: yeah, we fucked it up :)
[19:53] cgfuh has joined the channel
[19:53] mmalecki: I'll fix it, sec
[19:53] johnmdonahue: awesome thanks
[19:54] captain_morgan: thats service!
[19:56] thriple has joined the channel
[19:56] kitt has joined the channel
[19:56] mattgifford has joined the channel
[19:59] mraxilus has left the channel
[19:59] langworthy has joined the channel
[20:01] jerrysv: `3rdEden: defer is my only road block - not sure if you'd be interested in a pull request for it or not, as it could get messy
[20:01] thriple_ has joined the channel
[20:01] BrianE has joined the channel
[20:01] ovnicraft has joined the channel
[20:01] igorfrenkel has joined the channel
[20:01] `3rdEden: jerrysv you could just take a look at the source of underscore for it
[20:01] josephmoniz has joined the channel
[20:01] `3rdEden: as they also have a defer method
[20:01] criswell has joined the channel
[20:02] jerrysv: will do, will try tonight :)
[20:02] `3rdEden: and you could just check if node is available and have defer be a different function
[20:02] pyrotechnick has joined the channel
[20:02] `3rdEden: so there is no loss in performance
[20:02] jerrysv: that's the only thing, my check to see if it is node requires it all to be wrapped
[20:02] jerrysv: eg: https://github.com/JerrySievert/cromagjs/blob/master/cromag.js#L775
[20:03] `3rdEden: never seen that detection before jerrysv
[20:03] astropirate has joined the channel
[20:03] patcito has joined the channel
[20:04] jerrysv: do you have a better one?
[20:05] warz has joined the channel
[20:05] warz has joined the channel
[20:06] `3rdEden: jerrysv not really
[20:06] `3rdEden: we do awefull detection for it in socket.io
[20:06] jerrysv: worse than that?
[20:06] kenyabob has joined the channel
[20:06] jerrysv: i got creative over the weekend
[20:06] epa_ has joined the channel
[20:06] `3rdEden: :D
[20:06] `3rdEden: every detection is awefull
[20:06] jerrysv: that actually works really well, btw
[20:07] r04r has joined the channel
[20:07] jerrysv: it's just not as elegant as i had hoped :)
[20:07] `3rdEden: Node should just provide an easy hook for it
[20:07] jerrysv: that works well in the browser too
[20:07] `3rdEden: indeed
[20:07] kenyabob: I am trying to use a script I found called run_dev_server, but I get an error that it cannot read the property 0 of undefined. https://gist.github.com/1642263
[20:07] kenyabob: I don't understand enough about the global process var to understand why its borkin
[20:08] jerrysv: so, i'd want to wrap everything for my detection -- which would be a pretty nasty pull, every line changing
[20:08] jerrysv: unless you're willing to give up indentation for it
[20:08] `3rdEden: i'm okay with a wrap
[20:08] jerrysv: what about the nasty pull request?
[20:09] `3rdEden: probalby okay as well :p
[20:09] jerrysv: i can throw something together this evening most likely (about 7 hours from now, my time)
[20:09] jonbaer has joined the channel
[20:09] jerrysv: (i'm blessed to have an understanding SO that loves javascript as well)
[20:10] rick_ has joined the channel
[20:10] `3rdEden: ;D
[20:10] `3rdEden: awesome
[20:10] kenyabob: what would process.argv[0] refer to?
[20:11] jerrysv: she managed to get an earlybird jsconf ticket, i did not.
[20:11] c4milo has joined the channel
[20:13] `3rdEden has joined the channel
[20:13] V1 has joined the channel
[20:14] jacobolus has joined the channel
[20:17] hotchkiss: mmalecki: you going to node summit man?
[20:17] ap3mantus has joined the channel
[20:17] theBrettman has joined the channel
[20:18] teadict: so now that I'm using browserify... I can take all public javascripts and install them as node modules on my server and then just require() them at the top of my browserify entry.js file, then start coding my modules, right?
[20:18] fly-away has joined the channel
[20:18] teadict: that's the idea?
[20:18] HardFu: damn moment makes it really hard to convert to UTC
[20:18] r04r has joined the channel
[20:19] MatthewS has joined the channel
[20:19] mmalecki: hotchkiss: nope
[20:19] mmalecki: hotchkiss: not a conf for me man
[20:19] mmalecki: hotchkiss: also, pita to get a visa and find a flight
[20:19] hotchkiss: yeah? hah I'm not going either :P 
[20:19] hotchkiss: haha
[20:19] wdbl: does v8 have a built-in global var or does node.js create that?
[20:19] jamund: ?
[20:19] wdbl: just curious
[20:20] xpigeonx: is there anything like a unix pipe in node?
[20:20] hackband has joined the channel
[20:20] bradleymeck: wdbl node adds "global" to the global scope
[20:20] bradleymeck: xpigeonx, explain, you can use domain sockets
[20:20] wdbl: bradleymeck: ok, thank you
[20:21] xpigeonx: bradleymeck: what are domain sockets?
[20:21] TheJH: xpigeonx, node streams have a "pipe" method, it allows you to pipe stuff inside node
[20:21] cronopio has joined the channel
[20:21] ovnicraft has joined the channel
[20:21] bradleymeck: xpigeonx, what are you trying to do?
[20:21] TheJH: xpigeonx, do you want to interact with other code or just do stuff inside of your node app?
[20:21] bradleymeck: xpigeonx, they are a communication channel that can be placed on the file system
[20:21] wdbl: bradleymeck: do you know if it's declared in some C++ code somewhere? Because all I see in the node.js file, at the top is: global = this; // (not var global = this; ...)
[20:21] TheJH: s/other code/other programs/
[20:22] bradleymeck: wdbl correct, by not using "var" you are assigning it to global scope
[20:22] wdbl: bradleymeck: oh, I found it in C++ - lobal_proxy_function->shared()->set_instance_class_name(*global_name); (I think)
[20:22] xpigeonx: bradleymeck:  I have a tcp server that recieves data, decodes it then passes it along to other parts of my server.  I want a pipe betwen the 'main' server that decodes the messages and the other code that actually handles it
[20:23] MrTopf has joined the channel
[20:23] bradleymeck: xpigeonx, look into .pipe()  for readable streams, a lot of modules let you use the same api
[20:23] bradleymeck: request, union, and i think node-formidable even
[20:23] r04r has joined the channel
[20:23] micheil has joined the channel
[20:24] bradleymeck: otherwise there are popular middleware frameworks in union and express
[20:25] sharkbird has joined the channel
[20:25] torvalamo: global scope is only module dependent though
[20:25] xpigeonx: bradleymeck: that pipe is like the unix dup2 function, I want a pipe as in the unix sense of a file that can initially be read or written to.  I think streams are the closest to what I want, but streams are just an interface, not an implementation
[20:26] bradleymeck: torvalamo, not by default new global contexts can be specified but only a local scope is added to modules by default
[20:27] torvalamo: if it's a context then it's not global...
[20:27] torvalamo: either it's global or it isn't
[20:27] torvalamo: :P
[20:27] bradleymeck: torvalamo in v8 terms context is the overarching scope
[20:27] bradleymeck: v8's embedders guide gives some good info on their terms
[20:27] torvalamo: oh right
[20:28] torvalamo: i thought you were talking about js
[20:28] mmalecki: johnmdonahue: change is pushed, I'll have someone release it asap
[20:28] bradleymeck: but it gets really confusing with the *this* keyword 
[20:28] torvalamo: not the c++ part
[20:28] dgathright has joined the channel
[20:28] LarsSmit has joined the channel
[20:29] Me1000 has joined the channel
[20:30] ovnicraft has joined the channel
[20:31] yawNO has joined the channel
[20:31] mikeal has joined the channel
[20:31] johnmdonahue: mmalecki: you're the man! thanks!
[20:32] mmalecki: johnmdonahue: my pleasure :)
[20:33] r04r has joined the channel
[20:33] innociv has joined the channel
[20:33] jtrudeau has joined the channel
[20:33] xpigeonx: can you explicitly free a buffer object in node?
[20:35] Wa has joined the channel
[20:37] joshsmith has joined the channel
[20:38] davetayls has joined the channel
[20:38] Nss has joined the channel
[20:38] bkaney has joined the channel
[20:39] eldios has joined the channel
[20:39] mraxilus has joined the channel
[20:41] level09 has joined the channel
[20:41] tttthet has joined the channel
[20:41] jmar777 has joined the channel
[20:41] napperjabber_ has joined the channel
[20:46] bergie has joined the channel
[20:46] lperrin has joined the channel
[20:46] m00p has joined the channel
[20:47] grey has joined the channel
[20:47] TypoAway has joined the channel
[20:47] BrianE has joined the channel
[20:48] blup has joined the channel
[20:48] grey: Anyone here know of a websocket->TCP proxy for node? I'm looking to use noVNC and want to be able to open & close tunnels on demand through node, rather than running websockify
[20:48] stagas has joined the channel
[20:48] jbpros has joined the channel
[20:49] r04r has joined the channel
[20:49] johnmdonahue: mmalecki: if I make your update locally to flatiron will that affect updates from npm?
[20:50] mmalecki: johnmdonahue: it isn't in npm yet
[20:51] johnmdonahue: yeah so until it is can update locally? 
[20:51] johnmdonahue: or will it cause a conflict? im new to npm
[20:51] mmalecki: johnmdonahue: `npm install -g https://github.com/flatiron/flatiron.git`
[20:51] astropirate has joined the channel
[20:51] johnmdonahue: awesome thanks
[20:53] rwaldron has joined the channel
[20:53] kmiyashiro: it's safe to re-use variable names for for loop iterators, right?
[20:53] jaha has joined the channel
[20:53] kmiyashiro: like for (var i = 0;….) then later (for (var i = 0;…)
[20:53] kmiyashiro: in the same function
[20:54] kmiyashiro: since it's linear
[20:54] kmiyashiro: amirite?
[20:56] richardr has joined the channel
[20:57] mraxilus: I'm not sure, but I tend to use i, j, k, and so on if the previous variables are still in use by a higher loop.
[20:57] disappearedng has joined the channel
[20:57] Deputaats has joined the channel
[20:58] mattgifford has joined the channel
[20:59] Deputaats: Hi
[21:00] Deputaats: If I want to use flash socket client, then is Node.JS a good serverside solution?
[21:00] eldios: guys.. if your on Linux try this one. Lock your screen and then press Ctrl + Alt + * (star on num key pad)
[21:00] eldios: THAT's JUST INSANE! *_* (sorry for caps)
[21:00] eldios: http://seclists.org/oss-sec/2012/q1/213
[21:00] SubStack: teadict: you can use some modules from npm and you can do relative requires
[21:01] aitiba has joined the channel
[21:01] jacobolus has joined the channel
[21:01] SubStack: and the require resolver algorithm is the same as node
[21:01] r04r has joined the channel
[21:02] mraxilus: i feel like that was a gulability test, I tried it anyway and nothing happened.
[21:03] Deputaats: Seems to me that node.js socket server is not working good. because I have backend in C++ for flash socket server and it's working good.
[21:03] grey: eldios: hah, I saw that on hacker news a few minutes ago
[21:03] grey: crazy
[21:04] Deputaats: I have problems with ~0.5% of clients dropping connection or they can't connect at all
[21:04] ap3mantus has joined the channel
[21:04] upstream has joined the channel
[21:04] johnmdonahue: kmiyashiro: i think it could actually cause a problem because of hoisting
[21:05] adambeynon has joined the channel
[21:05] upstream: Anyone have experience installing NPM packages on Windows. I get a "Make is not recognized as an internal command" error when doing "npm install"
[21:06] CoverSlide: that's a C module
[21:06] CoverSlide: not sure if C modules compile on windows yet ..
[21:06] AvianFlu: upstream, that package you're trying to install is using a unix-ism that won't work on windows
[21:06] CrisO has joined the channel
[21:07] AvianFlu: CoverSlide, a lot of people use make in node projects
[21:07] CrisO has left the channel
[21:07] kmiyashiro: johnmdonahue: what's that?
[21:07] eldios has joined the channel
[21:07] johnmdonahue: kmiyashiro: http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting 
[21:07] upstream: I understand, but does that mean that this NPM package is just not windows compatible then?
[21:08] CoverSlide: SubStack: https://github.com/substack/upnode/issues/1
[21:08] CrypticSwarm has joined the channel
[21:09] r04r has joined the channel
[21:09] r04r has joined the channel
[21:09] upstream: like is it possible to perhaps install Cygwin and use that to build the npm package as a work-around? i'm not really sure as i'm not a big Windows user at all but I need to use it for this project.
[21:09] CrisO has joined the channel
[21:10] devaholic has joined the channel
[21:11] kmiyashiro: johnmdonahue: oshit
[21:11] upstream: A node module is really just javascript files, or am I wrong?
[21:11] johnmdonahue: mmalecki: http://jsfiddle.net/johndonahue/SgjdV/
[21:11] CrisO has left the channel
[21:11] kmiyashiro: so I guess my real question is, do for loops execute synchronously or asynchronously in the same scope?
[21:12] icrazyhack has joined the channel
[21:12] torvalamo: upstream, a module can be one js file or a folder with many, yes
[21:12] kmiyashiro: I thought they were synchronous, but then I think I ran into some places where they don't block
[21:12] lz: kmiyashiro, depends on what you're calling in the loop
[21:12] torvalamo: upstream, it can also be compiled c++
[21:13] kmiyashiro: lz: just assigning properties to an object 
[21:13] HerroRygar has joined the channel
[21:13] upstream: Ok, so is it safe to assume all compiled c++ npm modules are not Windows compatible
[21:13] xtianw has joined the channel
[21:13] Deputaats: Anyone tried Socket.IO or web-socket-js or SockJS with node.js on some projects? I am getting feedback from users about dropping connections and sometimes they can't connect at all. But I know that they can play another game which is working with C++ backend anf flash socket at client side and everything is wokring. But not with socket.io, web-socket.js or SockJS...
[21:13] torvalamo: upstream, no, you can just compile them on windows
[21:13] iammerrick has joined the channel
[21:13] lz: kmiyashiro it should be fine then, for loops execute linearly by themselves
[21:13] torvalamo: doesn't matter which machine they compile on, as long as it's on a windows machine
[21:13] torvalamo: it'll run on any windows after that
[21:14] torvalamo: bar the 32/64 bit thing
[21:14] iammerrick: are there any solid console.log sort of replacements that allow for test mode and such to silence logs during testing and potentially write to other sources like log files or redis.
[21:14] kmiyashiro: lz: so for loops are blocking unless they call other things inside them? 
[21:14] HerroRygar: I'd like to utilize node.js in my personal website, but want to verify that my reason for wanting it is a decent use-case. I'd like to mix all of my social-network data and aggregate it into a single stream. i.e. twitter, foursquare, github, stackoverflow, etc. Since this is a ton of outbound I/O, would this be an appropriate place to use node.js?
[21:14] kmiyashiro: in which case, those functions might use an unexpected i value?
[21:14] mikeal has joined the channel
[21:14] yawNO has joined the channel
[21:14] lz: yea, unless you call them in a closure
[21:15] kmiyashiro: lz: ic, thanks
[21:15] lz: the value of i may change while your async code runs
[21:15] torvalamo: upstream, a c++ module for node should come with source code, if it doesn't then you shouldn't use it...
[21:15] Skola has joined the channel
[21:15] amasad_ has joined the channel
[21:15] upstream: torvalamo: ok, so I need to look at the source of this npm package, find the .c or .cpp files and load them up into some Windows software which can compile it... what then? Thanks I think this gives me a bit of an idea, but i'm really a windows noob here so i'm in trouble :)
[21:15] lz: i needs to be passed in like (function(i){})(i)
[21:15] torvalamo: you can use cygwin of mingw
[21:15] torvalamo: to compile with gcc
[21:16] torvalamo: or*
[21:16] torvalamo: and npm should compile it for you
[21:16] lz: kmiyashiro glad I can help.. ran into a bit of trouble with this before
[21:16] torvalamo: when you do npm install on cygwin and mingw
[21:16] upstream: torvalamo: ok i'll give that a try! thank you
[21:16] gregpascale has joined the channel
[21:18] iammerrick: No one has a favorite logging library?
[21:18] maqr has joined the channel
[21:19] epa_: Does anyone here have a functional conbination of node-js (0.6.7), v8-profiler (0.0.2 from git 3.6.2 tree) and node-inspector@0.1.10
[21:19] swestcott has joined the channel
[21:19] epa_: I get it all running to the point that is described in https://github.com/felixge/node-memory-leak-tutorial
[21:19] devongovett has joined the channel
[21:20] `3rdEden: node inspector doesn't work with 0.6 yet
[21:20] epa_: but when I actually access the web page the 'node-inspector' exits
[21:20] epa_: ah
[21:20] epa_: `3rdEden: is there anything else that could be used?
[21:20] dshaw_1 has joined the channel
[21:21] `3rdEden: probably parsing the out raw profiler information from node
[21:21] `3rdEden: or use dtrace
[21:21] epa_: `3rdEden: currently we have a situation where stuff we run on top of node seems to leak
[21:21] bleakgadfly has joined the channel
[21:21] epa_: `3rdEden: we run node in cluster and 4 processes start to take 13G of memory under heavy load
[21:21] `3rdEden: o_o
[21:21] tilgovi has joined the channel
[21:22] epa_: `3rdEden: have you seen any tutorial for the parsing?
[21:22] r04r has joined the channel
[21:23] joshfinnie has joined the channel
[21:24] SubStack: CoverSlide: that issue is a bit old, I can't reproduce on the latest upnode
[21:24] Guest24825 has joined the channel
[21:24] CoverSlide: hmm i seem to have been getting the same issue
[21:25] CoverSlide: or maybe just a similar one
[21:25] `3rdEden: epa_ not for v0.6
[21:27] jacobolus has joined the channel
[21:29] Guest24825 has joined the channel
[21:29] springmeyer_ has joined the channel
[21:29] ovnicraft has joined the channel
[21:30] tokumine has joined the channel
[21:30] Nss_ has joined the channel
[21:31] franciscallo has joined the channel
[21:32] maushu has joined the channel
[21:32] AviMarcus has joined the channel
[21:32] lperrin1 has joined the channel
[21:35] stephank has joined the channel
[21:36] huggies has joined the channel
[21:38] Typo has joined the channel
[21:38] Typo has joined the channel
[21:41] sotosof has joined the channel
[21:41] grey: hmm, can websocket connections be routed at all? ie, open a socket on ws://host:port/some/extra/path?
[21:42] grey: that actually sounds dumb now that I've typed it
[21:43] `3rdEden: grey ofc it can
[21:43] `3rdEden: WebSockets also have request urls
[21:43] tjfontaine: yup
[21:43] grey: hmm ok
[21:43] grey: I'm thinking of it much more like a TCP connection
[21:44] tokumine has joined the channel
[21:44] cody-- has joined the channel
[21:45] megalomix has joined the channel
[21:45] tprice has joined the channel
[21:45] megalomix: hello everybody
[21:45] megalomix: guys I have a doubt :-(
[21:45] bradleymeck has joined the channel
[21:46] tprice: whats the best way to get a free port without calling server.listen(0)
[21:46] tokumine has joined the channel
[21:46] TooTallNate: tprice: what's wrong with listen(0)?
[21:47] tprice: TooTallNate: i need to know the port before i listen
[21:47] tprice: part of a framework im making
[21:47] TooTallNate: tprice: so then pick a port to run on and stick with it
[21:47] megalomix: i have an array, i pop() each element of the array to a query (async) and assign a callback (qhen the query ends) my problem is that MYSQL module is async (and it is good) BUT i need to know when all the job ends (all the queries) so I though to create a variable that i decrement after each query(ends) but i two functions call the function (the function that decrements the variable) at the same time, I could have st
[21:47] megalomix: range values
[21:48] TooTallNate: megalomix: only 1 functions can run at a time in JS
[21:48] grey: `3rdEden: Have any examples of node.js listening for connections at a specific websocket url? Every example just uses the default path
[21:48] megalomix: with "strange" i mean that WHEN a function call decrement() i decrement the variable and then call a function that .pop() the next elements...
[21:48] jjido has joined the channel
[21:49] megalomix: TooTallNate, only one?
[21:49] megalomix: TooTallNate, if i have async functions with more then one CPU
[21:49] `3rdEden: grey with socket.io we check for connection on /socket.io/1/websocket to see if it's a websocket connection
[21:49] `3rdEden: and for /socket.io/1/flashsocket to see if it's a flashsocket transport
[21:49] megalomix: only one ?
[21:49] TooTallNate: megalomix: JS is single-threaded, there's so chance of 2 functions running simulatenously
[21:49] `3rdEden: as both websockets and flash sockets use WebSockets as transport, the path is only way for us to find out the actual transport
[21:49] TooTallNate: i mean NO chance
[21:50] tprice: TooTallNate: for each process there might be 2 or 3 servers listing. in total count of processes there might be 15 to 20 servers listing
[21:50] megalomix: TooTallNate, so async does not mean "parallel"
[21:50] megalomix: ok
[21:50] grey: `3rdEden: I'll take a look then, thanks
[21:50] tprice: i could just setup a server to test posts
[21:50] TooTallNate: megalomix: no, they can be run in parallel, that's one of the benefits of async
[21:50] `3rdEden: grey:  you can probably find it in socket.io's manager.js github.com/learnboost/socket.io/
[21:50] TooTallNate: but as far as the callback functions, only 1 may be run at a time
[21:51] megalomix: yes but they access to a variable or function only one after one
[21:51] megalomix: ok
[21:51] TooTallNate:  tprice: why do you need to know the port in advance?
[21:52] tprice: TooTallNate: arbitrary reasons
[21:53] TooTallNate: tprice: well its limiting you since you can't utilize ephemeral ports, so you should fix that design flaw IMO
[21:54] alystair has joined the channel
[21:54] mattgifford has joined the channel
[21:56] tprice: TooTallNate: what would be the limiting factor. knowing the port before or after listen(0) is called should not matter
[21:56] Me1000 has joined the channel
[21:57] ovnicraft has joined the channel
[21:58] larsschenk has joined the channel
[21:59] Nss has joined the channel
[21:59] johnhamelink has joined the channel
[21:59] tprice: TooTallNate: as the server would sits behind bouncy(proxy server) knowing the port and limiting the user to what port why can use is purposely done
[22:00] larsschenk has left the channel
[22:00] isaacs_ has joined the channel
[22:00] isaacs__ has joined the channel
[22:01] hackband has joined the channel
[22:01] TooTallNate: tprice: well you could, for instance, set up a net server to comminucate port numbers with after they are known
[22:01] subhaze has joined the channel
[22:02] urlisse has joined the channel
[22:03] tprice: TooTallNate: that was the idea that i was going to go with
[22:04] SirFunk: where can i find docs on the version matching in package.json?
[22:05] bradleymeck: SifFunk npm help json , engines field
[22:05] sotosof has left the channel
[22:05] bradleymeck: SirFunk, ^
[22:05] AAA_awright has joined the channel
[22:06] joshgillies has joined the channel
[22:06] isaacs has joined the channel
[22:06] hackband_ has joined the channel
[22:07] Morkel has joined the channel
[22:07] ChrisPartridge has joined the channel
[22:07] lduros has left the channel
[22:07] isaacs_ has joined the channel
[22:08] mattgifford has joined the channel
[22:09] hackband has joined the channel
[22:09] megalomix: how can i call a js function directly? function() {}(); ?
[22:09] megalomix: do i have to add   --> ()
[22:09] megalomix: at the end ?
[22:09] dwhittle has joined the channel
[22:09] westc: megalomix: yes
[22:09] torvalamo: you mean calling an anonymous function directly
[22:09] torvalamo: but yes
[22:10] maxogden: "self invocation"
[22:10] isaacs__ has joined the channel
[22:10] megalomix: yes "self invocation" exactly what i mean
[22:10] westc: not self-invoked
[22:10] westc: benalman.com/news/2010/11/immediately-invoked-function-expression/
[22:10] westc: IIFE
[22:10] westc: but yes
[22:10] warz has joined the channel
[22:10] megalomix: guys in this case do i must use }();
[22:10] warz has joined the channel
[22:10] megalomix: ; <---
[22:10] megalomix: or not?
[22:10] MacDiva_ has joined the channel
[22:11] jesusabdullah: megalomix: What are you asking?
[22:11] westc: he's asking if you need the semi-colon
[22:11] jesusabdullah: megalomix: You want to call an anonymous function you just defined?
[22:11] westc: i think
[22:11] eee_c has joined the channel
[22:11] megalomix: yes
[22:11] megalomix: semi-colon
[22:11] torvalamo: you don't need the semi colon for that
[22:11] jesusabdullah: I think he's asking if var fxn = function () {}; fxn(); is equivalent to (function(){})();
[22:11] megalomix: yes i want to call a function that i declared
[22:11] isaacs has joined the channel
[22:11] jesusabdullah: or, did
[22:12] megalomix: no i mean
[22:12] torvalamo: function(){do stuff}()
[22:12] jesusabdullah: So, first, yes you can call a function immediately like that
[22:12] torvalamo: will do fine
[22:12] maxogden: westc: self invoked: function(){}(). iife: (function(){})()
[22:12] isaacs: d'oh.  nodeup live is hte same night as my first day of ASL 3
[22:12] megalomix: torvalamo, yes exactly
[22:12] westc: yes
[22:12] westc: yes, yes, yes, and yes
[22:12] isaacs: jesusabdullah: no, you can't.
[22:12] megalomix: maxogden, iife ?
[22:12] maxogden: megalomix: read links that people give you in irc :)
[22:12] isaacs: iife = immediately invoked function expression
[22:12] megalomix: :)
[22:13] MacDiva_ has joined the channel
[22:13] isaacs: but you can't invoke a function declaration
[22:13] westc: there is actually no such thing as a self-invoked I think
[22:13] michaelhartau has joined the channel
[22:13] westc: in the new ecma spec
[22:13] isaacs: <PROGRAM>function () {}</PROGRAM>
[22:13] isaacs: that is a function declaration.
[22:13] isaacs: *not* a function expression
[22:13] maxogden: haha
[22:13] isaacs: it's a valid program, but putting () at tne end of that is not.
[22:13] isaacs: (wtfjs?!?)
[22:13] isaacs: right?
[22:14] jesusabdullah: heh
[22:14] isaacs: x = function () {} () IS valid, however.
[22:14] maxogden: i wish i could use PROGRAM tags every day
[22:14] jesusabdullah: A subtle but important distinction!
[22:14] isaacs: because being on the RHS means that it's coerced to an expression.
[22:14] maxogden: <INTERNET><PROGRAM> // codez gohere </PROGRAM></INTERNET>
[22:14] isaacs: same if it's wrapped in (), or starts with ! or +
[22:14] isaacs: etc.
[22:14] grey: `3rdEden: I can't for the life of me find where it's checking the uri, I mean, this looks like it https://github.com/LearnBoost/socket.io/blob/master/lib/manager.js#L622 but I can't find where data or data.transport is set up
[22:14] pandora17 has joined the channel
[22:14] megalomix: (function(){...}())  OR function(){...}();
[22:14] jesusabdullah: "Okay so let's stop talking about languages that suck and start talking about javascript"
[22:15] westc: isn
[22:15] westc: isn't this js though ?
[22:16] megalomix: is this the same right?
[22:16] megalomix: i  mean i can call a function immediatly with these two examples
[22:17] `3rdEden: grey https://github.com/LearnBoost/socket.io/blob/master/lib/manager.js#L904
[22:17] gr-eg has joined the channel
[22:17] `3rdEden: it's called by the https://github.com/LearnBoost/socket.io/blob/master/lib/manager.js#L530
[22:17] secoif has joined the channel
[22:18] piscisaureus_ has joined the channel
[22:18] `3rdEden: Who they sends it to https://github.com/LearnBoost/socket.io/blob/master/lib/manager.js#L608
[22:18] isaacs_ has joined the channel
[22:19] jonbaer has joined the channel
[22:19] letsgojuno has joined the channel
[22:19] joelmob has joined the channel
[22:19] jonbaer_ has joined the channel
[22:19] infynyxx has joined the channel
[22:20] isaacs__ has joined the channel
[22:21] isaacs__: megalomix: you cannot call a function immediately using a function declaration, only using a function expression.
[22:21] marlun has joined the channel
[22:21] isaacs: megalomix: it works in the node repl, because the node repl detects syntax errors and tries again wrapped in ()
[22:21] megalomix: isaacs, do you mean var myfunc = function() { ... }
[22:22] benvie: 1 && function(){}() is enough to make an expression
[22:22] isaacs: yeah
[22:22] isaacs: it's easy to cast to an expression
[22:22] isaacs: the canonical way is to wrap in parens
[22:22] grey: `3rdEden: ok I think I understand, Thank you very much :)
[22:22] megalomix: isaacs, (function(){ ... })(); ?
[22:22] isaacs: megalomix: that would be a valid statement, yes.
[22:22] isaacs: that's an IIFE
[22:23] isaacs: usually pronounced "iffy"
[22:23] kmiyashiro: wait
[22:23] isaacs: at least, all the times i've heard it
[22:23] benvie: yeah the repl does this replace I believe /^\s*function ([a-zA-Z_$][\w_$]*)/, "$1 = function $1"
[22:23] benvie: something like that
[22:23] tkaemming has joined the channel
[22:23] kmiyashiro: if vars are hoisted, why can't you run functions before they are defined by var?
[22:23] isaacs: kmiyashiro: great question!
[22:23] MrTopf has joined the channel
[22:23] kmiyashiro: like foo(); var foo = function(){}
[22:23] isaacs: kmiyashiro: var statements and function *declarations* are hoisted
[22:23] kmiyashiro: errr
[22:23] kmiyashiro: why?
[22:24] megalomix: isaacs, yes i read that invoke the function immediatly
[22:24] isaacs: kmiyashiro: but, though the var declaration is hoisted, the var *set* is not hoisted.
[22:24] erikhcorry has joined the channel
[22:24] isaacs: kmiyashiro: foo(); var foo = undefined;  foo = function () {}
[22:24] isaacs: kmiyashiro: var foo = undefined; foo(); foo = function () {}
[22:24] bnoordhuis has joined the channel
[22:24] isaacs: kmiyashiro: that's what it looks like post-hoisting
[22:24] kmiyashiro: I see
[22:24] Cromulent has joined the channel
[22:24] kmiyashiro: why does it do that?
[22:25] isaacs: so, it's in the symbol table, "defined" with the special magic value "undefined"
[22:25] isaacs: kmiyashiro: because it's a terrible language, obviously
[22:25] isaacs: :)
[22:25] kmiyashiro: obv
[22:25] benvie: using vm.runInContext you can create functions use function expressions without modification
[22:25] benvie: but not vm.runInThisContext
[22:25] isaacs: kmiyashiro: but! named function *declarations* are hoisted.
[22:25] benvie: er
[22:25] kmiyashiro: right
[22:25] benvie: function statements
[22:25] kmiyashiro: so foo(); function foo(){} works
[22:25] kmiyashiro: becauuuse...?
[22:26] isaacs_ has joined the channel
[22:26] benvie: a function statement is hoisted in entirety
[22:26] lz: because someone said so
[22:26] benvie: it's not set to undefined like a var statement is
[22:26] kmiyashiro: I see
[22:26] benvie: but if you mix a var hoist and a function hoist then you can have issues
[22:27] benvie: because the var statement may overwrite the function statement with undefined
[22:27] benvie: same named one I meanm
[22:27] kmiyashiro: I learned a thing today!
[22:28] benvie: actually the behavior of a function statement inside a block is not entirely defined in the ES5 spec
[22:28] megalomix: excuse me guys: differences about    var foo = function() { ... } and function foo() {...}
[22:28] benvie: and different engines behave differently under some circumstances
[22:28] benvie: this is being fixed is es6
[22:28] megalomix: the first i declare the expression ?
[22:28] benvie: the first is like this
[22:29] benvie: var foo = undefined; foo = function(){};
[22:29] tokumine has joined the channel
[22:29] jacobolus has joined the channel
[22:29] benvie: the second will a.) be hoisted above all other statements, and b.) act like var foo = function foo(){}
[22:30] megalomix: ah ok perfecxt
[22:30] benvie: it's important to note the ordering of the hoisting
[22:30] benvie: function statements will go above any var statement, regardless of the order in the source code
[22:30] benvie: in that block
[22:30] benvie: well it gets tricky if you do something like
[22:31] benvie: var foo; if (someTest) { function foo(){return 'xyz' } } else { function foo(){ return 'abc' } }
[22:31] benvie: that chunk of code will work differently in different JS engines and is unspecified in ES5
[22:32] benvie: all 3 values of foo will show up depending on the engine
[22:32] megalomix: auctually my previous question (how to call a function after the declarations) i mean that now i do   function foo() {....}     foo()      so i would like to avoid the calling of the function at the end i can call it immediatly
[22:32] isaacs has joined the channel
[22:33] benvie: if it's a statement then you can put foo anywhere, and still call it from anywhere
[22:33] benvie: are you referring to when it's not?
[22:33] MrTrick: I have process.stdin piped to child_process.spawn.stdin, and data flowing. How do I make child_process think that the stdin has closed?
[22:33] isaacs_ has joined the channel
[22:33] benvie: like var foo = function(){}? how to make that callable from anywhere
[22:33] megalomix: yes
[22:33] stonebranch has joined the channel
[22:33] benvie: so the trick there is, you can't
[22:33] benvie: this is why you'll see function wrappers
[22:34] benvie: like this
[22:34] MrTrick: (so that child_process will close down)
[22:34] megalomix: ah ok
[22:34] benvie: (function(foo){ foo() })(function(){})
[22:34] isaacs_: megalomix: use named function declarations.
[22:34] benvie: so what that achieves
[22:34] tjholowaychuk has joined the channel
[22:34] christkv has joined the channel
[22:34] benvie: is pushing the function declaration to after your code, but making it available from the beginning
[22:34] isaacs_: like, if you have a function, and yoer' assigning it to a var, make it a named declaration.  almost always the best approach.
[22:34] benvie: if that's your goal
[22:34] benvie: yeah
[22:34] richardr_ has joined the channel
[22:35] megalomix: ok perfect, thank you guys!
[22:35] westc: I don't really understand why people don't use named function declarations
[22:35] isaacs_: you can do this:  var foo = fooFunction;  function fooFunction () { blah blah blah }
[22:35] benvie: if you can then it's ideal. Also naming the function is useful for debugging
[22:35] isaacs_: westc: me neither.
[22:35] isaacs_: westc: my best guess is ie5 issues.
[22:35] benvie: all of my functions are named, even ones I assign like as part of an object declaration
[22:35] benvie: since displayName isn't in wide use yet
[22:35] benvie: hmm reminds me
[22:36] westc: to me I like the option of being able to make the program even more descriptive. I've even named all my callbacks :O
[22:36] benvie: util.inspect should be updated to give preference to the displayName property of a function
[22:36] megalomix: isaacs, where can i see a piaece of your code? :D
[22:36] benvie: since that's becoming part of the spec
[22:36] megalomix: benvie too
[22:36] isaacs__ has joined the channel
[22:37] benvie: https://github.com/Benvie/Node.js-Ultra-REPL is a good example of stuff relating to the topic
[22:37] megalomix: ok
[22:37] sx2020 has joined the channel
[22:37] V1 has joined the channel
[22:37] torm3nt has joined the channel
[22:38] MrTrick: hmm, okay? So when in is piped to out, to close everything down I need to call in.pause(); then out.end();  .... If I don't pause, it doesn't work.
[22:39] megalomix: benvie so it is better to name the function like: var funcName = function()
[22:39] HardBit has joined the channel
[22:39] megalomix: ok
[22:39] mara has left the channel
[22:39] benvie: var funcName = function funcName() if you assigned ito a var
[22:39] davidbanham has joined the channel
[22:39] benvie: assigned it like that does allow you to do one cool thing
[22:39] Topcat has joined the channel
[22:40] pauls1 has joined the channel
[22:40] benvie: you can change functName externally, like if you need to toggle the function to something else
[22:40] Carmivore has joined the channel
[22:40] Carmivore has joined the channel
[22:40] benvie: you can still reference the function from inside itself
[22:40] megalomix: ah yes yes, i can change it in a inner function
[22:40] megalomix: ok
[22:41] benvie: or you can assign it to a different named var, like var fn = function privateName(){ //privateName is self referential and private }
[22:41] enmand has joined the channel
[22:41] benvie: like if fn is then set to another value
[22:41] benvie: later
[22:41] megalomix: var foo;        function(){    foo = function() { ... } } right ?
[22:41] benvie: well you can do
[22:41] isaacs has joined the channel
[22:42] brianseeders has joined the channel
[22:42] megalomix: good, yes it is better
[22:42] benvie: function foo(){ var singleton = {}; foo = function(){ return singleton }; return singleton }
[22:42] benvie: that'll work
[22:42] level09 has joined the channel
[22:42] isaacs_ has joined the channel
[22:43] AviMarcus: Hmm. I wonder how long it will take to create a node.js irc bot that watches for ~api X and looks that up out of a csv file and says it to the channel.
[22:43] sx2020: anyone here use redis? i'm using ordered sets with scores as high as  1327012764097.  will this cause zrange to be slow compared to scores < 100 ?
[22:44] benvie: another place where a function statement doesn't work would be something like
[22:45] benvie: var foo = function(){ console.log(this) }.bind(this)
[22:45] Me1000 has joined the channel
[22:45] ap3mantus has joined the channel
[22:45] benvie: function foo(){}.bind() is a syntax error
[22:46] jldbasa has joined the channel
[22:46] sx2020 has left the channel
[22:46] webjay has joined the channel
[22:47] Hebo: (function foo(){}).bind() ?
[22:47] benvie: foo = function(){}.bind() is enough
[22:47] benvie: binding the function will erase its name anyway
[22:48] benvie: well hide it irrecoverably
[22:48] isaacs has joined the channel
[22:48] isaacs: for example, this is hazardous:   if (true) { function foo () {} } else { function foo () { throw "on noes!" } } foo()
[22:48] isaacs: hi, internet.  way to fail.
[22:48] benvie: hah
[22:48] Nss has joined the channel
[22:49] CoverSlide: it works on spidermonkey
[22:49] benvie: it works differently in different engines is the problem
[22:49] benvie: and that's because it's not specified sufficiently in ES5
[22:49] isaacs__ has joined the channel
[22:49] tomyan has joined the channel
[22:50] chjj: CoverSlide: that javascript engine will be referred to as "the engine that shall not be named", from now on
[22:50] benvie: and the behavior will be different in ES6 as well because it's becoming specified
[22:50] benvie: probably not allowed actually
[22:50] kitt has joined the channel
[22:50] kitt has joined the channel
[22:51] isaacs has joined the channel
[22:52] isaacs__ has joined the channel
[22:53] mmalecki: so many isaacs here today
[22:53] mmalecki: isaacs__: you finally managed to clone yourself?
[22:53] Stephen has joined the channel
[22:53] jocafa: mmalecki:  he did, with git.
[22:53] mmalecki: jocafa: well, that makes sense
[22:54] jocafa: git clone git@theinternets:isaacs.git
[22:54] secoif: so is there any way to see if a port is open other than try catch around opening it with a net.Server?
[22:54] mmalecki: I want my own isaacs to do my coding, but that repo seems down
[22:54] CoverSlide: lsof
[22:54] mmalecki: how do I get my own isaacs?
[22:54] MrTrick: benvie ; doesn't foo = function(){}.bind() assign whatever bind() returns to foo?
[22:54] FIQ has joined the channel
[22:54] CoverSlide: npm installl isaacs
[22:54] secoif: CoverSlide ah
[22:54] jocafa: haha
[22:54] `3rdEden has joined the channel
[22:55] isaacs__: mmalecki: hahah
[22:55] benvie: yeah, it'll return that anonymous function bound to undefined in that specific case
[22:55] chjj: substack never answered my issue with node-isaacs!
[22:55] chjj: https://github.com/substack/node-isaacs/issues/2
[22:55] benvie: it won't call it though
[22:55] chjj: good idea ^
[22:56] benvie: foo = function(){}.bind()() would call it
[22:57] benvie: and foo would be the return
[22:58] willwhite has joined the channel
[22:58] tilgovi has joined the channel
[22:59] `3rdEden has joined the channel
[22:59] MrTrick: eh? In REPL, why does  `foo = function(){return {'bind':function(){return 'x';}}; };`, then `foo.bind();` return [Function] ?
[23:00] `3rdEden: because bind returns a function...
[23:00] benvie: foo.bind() is returning the return of bind
[23:00] benvie: not food
[23:00] benvie: mm foood
[23:00] `3rdEden: nom nom
[23:00] isaacs has joined the channel
[23:00] MrTrick: ah wait...
[23:01] benvie: which is foo bound to undefined
[23:01] MrTrick: it'd have to be `foo = function(){return {'bind':function(){return 'x';}}; }().bind();
[23:01] MrTrick: ` to return 'x'.
[23:01] kenperkins: so I've got a cleartextStream with 'error' handled, but I'm still getting unhandled exceptions in my app with a "connect ECONNREFUSED" error
[23:01] kenperkins: does anyone know what that is
[23:02] benvie: yeah
[23:02] cognominal has joined the channel
[23:02] MrTrick: yay, js is flexible. Flexible like SILLY putty.
[23:02] benvie: I like it
[23:03] dscape: ircretary: tell isaacs to check https://gist.github.com/b61e19eac34757680dec
[23:03] ircretary: dscape: I'll be sure to tell isaacs
[23:03] isaacs_ has joined the channel
[23:04] Wizek has joined the channel
[23:06] mikeal has joined the channel
[23:06] eignerchris_ has joined the channel
[23:07] c4milo1 has joined the channel
[23:08] lotsofcode has joined the channel
[23:08] HardBit: Que? dices IRC y sus compañeros programadores se rien! =/
[23:08] HardBit: Ni p2
[23:08] creationix has joined the channel
[23:09] subhaze has joined the channel
[23:10] christkv has joined the channel
[23:10] HardBit: Ni modos a conectarme de manera segura en el trabajo usando un túnel ssh
[23:12] whatadewitt_ has joined the channel
[23:12] whatadewitt_: hello, anyone got a sec to help a newbie with a newbie question? the socket io channel is dead!
[23:12] TypoAway has joined the channel
[23:13] spolu has joined the channel
[23:13] whatadewitt_: just trying to pass an array of "clients" to a user when they connect to the server :S
[23:15] CoverSlide: an array of clients?
[23:16] creationix: anyone remember how large I can make an http packet before it gets split into multiple packets
[23:16] creationix: meaning how small do I have to minify my script to get it in the browser in a single packet
[23:16] djbell has joined the channel
[23:16] patcito has joined the channel
[23:16] CoverSlide: 4096?
[23:17] AvianFlu: isn't the ethernet mtu always 1500
[23:17] AvianFlu: ?
[23:17] AvianFlu: or so?>
[23:17] teadict: so what does actually DO browserify in its output magic file?
[23:17] torvalamo: mtu depends on the isp
[23:18] torvalamo: some isps have a weird mtu setting
[23:18] torvalamo: on dsl anyways
[23:18] domino14 has joined the channel
[23:18] sorensen__ has joined the channel
[23:19] djbell has joined the channel
[23:19] domino14: this is realy confusing. i put in a return next(new Error('errormsg')) in a .forEach loop, but it just returns from the forEach and keeps trying to execute. how do i make the error propagate all the way up?
[23:19] torvalamo: normal is 1492
[23:19] torvalamo: some have 1478
[23:20] torvalamo: due to headers for the connection protocol
[23:20] thriple has joined the channel
[23:20] mxbtty has joined the channel
[23:20] torvalamo: 1492 is for PPPoE
[23:21] torvalamo: since it needs 8 bytes for its own PPPoE header
[23:21] torvalamo: (i work at an ISP)
[23:21] AvianFlu: torvalamo, nice
[23:21] AvianFlu: can tcp packets span more than one ethernet frame? I forget
[23:22] torvalamo: no idea
[23:22] AvianFlu: I seem to remember them needing tobe smaller
[23:22] AvianFlu: but I forget
[23:22] AvianFlu: it's been a while
[23:22] AvianFlu: I'll go check
[23:22] torvalamo: well
[23:22] kenperkins: ok, I'm getting ECONNREFUSED errors even though I've got error handled for my stream. Can someone take a peek at this and see if something looks out of place
[23:22] kenperkins: https://gist.github.com/1643668
[23:23] teadict: there's no jquery ui as npm packagE?
[23:23] joshkehn1 has joined the channel
[23:23] torvalamo: why would there be
[23:23] CoverSlide: kenperkins: tls.connect returns a clearTextStream, not a normal socket
[23:24] sdwrage has joined the channel
[23:24] kenperkins: ok, but it still supports on('error' ...
[23:24] teadict: torvalamo: to browserify it
[23:24] torvalamo: jquery ui works with the DOM, there's no DOM in node
[23:24] CoverSlide: so it wouldn't be receiving the 'error' event that the socket would emit
[23:24] CIA-101: node: 03Ben Noordhuis 07master * r90587b1 10/ deps/v8/src/platform-solaris.cc : 
[23:24] CIA-101: node: v8: implement VirtualMemory class on SunOS
[23:24] CIA-101: node: Unbreaks build on SunOS. Re-applies 4908e5bf7a9c8014eefcf344e958bf0dad95d907. - http://git.io/oV2FAg
[23:24] CIA-101: node: 03Ben Noordhuis 07master * r0f33768 10/ deps/v8/tools/gyp/v8.gyp : 
[23:24] CIA-101: node: v8: link against libsocket and libnsl on sunos
[23:24] CIA-101: node: The V8 debugger requires BSD socket support. Solaris-like systems obviously
[23:24] CIA-101: node: support that but you need to link against the right libraries, it's not part of
[23:24] CIA-101: node: libc. - http://git.io/A2DhpA
[23:24] kenperkins: so how do I catch that error CoverSlide ?
[23:25] tjholowaychuk: kenperkins if it's not passing along the error
[23:25] tjholowaychuk: i would kinda consider that a bug
[23:25] mraxilus: Are we even making any progress on jumbograms?
[23:25] torvalamo: teadict, if you for some reason need jquery in a node environment just get the js file and eval it..
[23:25] wdbl has joined the channel
[23:25] torvalamo: but you'll get errors galore i guess
[23:25] kenperkins: tjholowaychuk: even with the error event bound on the stream, it still hits the global unhandled exception code
[23:26] kenperkins: hence my confusion
[23:26] tjholowaychuk: hm
[23:26] teadict: torvalamo: forget it, I won't browsierify client side core libs
[23:26] teadict: just my code
[23:26] torvalamo: sounds like a plan if i ever heard one
[23:27] whatadewitt_: so, no one can help me pass an array from server to client? no one? bueller? :(
[23:27] Me1000 has joined the channel
[23:28] torvalamo: str = JSON.stringify(arr) on the server.. then on the client arr = JSON.parse(str)
[23:28] torvalamo: or do you have questions about the actual transfer
[23:28] secoif: whatadewitt_ simple solution is to serialise array to json, expose via a route then access it via ajax
[23:28] GauthierD has joined the channel
[23:28] whatadewitt_: well i thought that's what i was doing, but JSON.stringify is throwing an error
[23:28] teadict: simple solution is to SERIALIZE EVERYTHING
[23:29] kenperkins: i must be doing it wrong.
[23:29] secoif: whatadewitt_ did you want to acceess it via a route
[23:29] torvalamo: disregard contrived document formats, serialize everything!
[23:29] secoif: or ?
[23:29] whatadewitt_: not sure what you mean via a route, im just trying to send a list of the connected clients...
[23:29] secoif: whatadewitt_ what do you mean 'send'
[23:29] torvalamo: which error is json.stringify giving you?
[23:30] whatadewitt_: just basically passing the list of current clients to the new client who's just connected
[23:30] secoif: whatadewitt_ does the client request it and then you answer? or do you want to open up a 2 way connection where the server can push to the client?
[23:30] CoverSlide: you can't stringify objects that contain functions or circular references
[23:30] secoif: whatadewitt_ connected via what
[23:30] romain_ has joined the channel
[23:30] whatadewitt_: error is users: JSON.stringify(
[23:30] whatadewitt_: via socket.io
[23:30] joshkehn1 has left the channel
[23:31] whatadewitt_: TypeError: Converting circular structure to JSON
[23:31] secoif: whatadewitt_ what CoverSlide said.
[23:31] whatadewitt_: yea so that's my issue :S
[23:31] secoif: whatadewitt_ write a custom toJSON method
[23:31] whatadewitt_: ah ok
[23:31] whatadewitt_: thanks
[23:31] whatadewitt_: i can handle that
[23:32] warz has joined the channel
[23:32] warz has joined the channel
[23:32] teadict: torvalamo: do you know how to not have to CLI browserify everytime I do something?
[23:32] skm has joined the channel
[23:32] tonymilne has joined the channel
[23:33] torvalamo: what do you mean?
[23:33] torvalamo: not sure why you feel you have to
[23:33] teadict: everytime I make a change, I have to `browserify entry.js -o broserify.js`
[23:33] insin: "--watch, -w    Watch for changes."
[23:33] teadict: because changes don't take effect
[23:33] socketio\test\24 has joined the channel
[23:33] teadict: YES
[23:33] teadict: insin: thanks
[23:33] hackband has joined the channel
[23:33] wdbl: teadict: all the instructions are here too - https://github.com/substack/node-browserify
[23:33] torvalamo: oh right
[23:34] insin: read ALL the docs
[23:34] Aiden has joined the channel
[23:34] teadict: mmm, must've miss them...
[23:34] wdbl: browserify -help too :)
[23:34] teadict: I read!
[23:34] jacobolus has joined the channel
[23:34] teadict: didn't read the full help though
[23:34] wdbl: err, --help sorry
[23:34] dwhittle has joined the channel
[23:35] EyePulp has joined the channel
[23:36] thriple: is there consensus on the best node version manager?
[23:36] cmr: I've heard that nave rocks.
[23:36] CoverSlide: no there isn't
[23:36] socketio\test\12 has joined the channel
[23:36] CoverSlide: it's like vim and emacs
[23:36] cmr: But there isn't a lot of consensus on anything because there are lots of choices for pretty much everything and everyone likes different things.
[23:36] tbranyen: CoverSlide: i use the nano of node installation
[23:36] tbranyen: .pkg hell yes
[23:36] tjholowaychuk: thriple they're all more or less the same
[23:37] tjholowaychuk: subtle differences + ui
[23:37] maxogden: just upgrade to 0.6 :D
[23:37] teadict: wdbl: so I have to keep another terminal opened? sending it to background doesn't work ^.-
[23:37] thriple: tjholowaychuk: cool, ty
[23:37] CoverSlide: they're all good, except n
[23:37] fson has joined the channel
[23:37] thriple: maxogden: i wish it were that simple ...
[23:37] wdbl: teadict: I'm not sure
[23:38] maxogden: thriple: too many 0.4 only deps?
[23:38] tjholowaychuk: CoverSlide haha :p
[23:39] theBrettman: when I try to make install npm, I get an error bash: node: command not found. did I miss a step in setting up node?
[23:39] tonymilne has joined the channel
[23:39] CoverSlide: :p
[23:39] secoif: theBrettman can you type 'node' and get to the REPL?
[23:40] teadict: wdbl: it doesn't apply changes unless I rerun it :/ 
[23:40] CoverSlide: hash -r after make install node?
[23:40] tahu has joined the channel
[23:40] theBrettman: yes, how do I exit it now? lol
[23:40] teadict: SubStack: you there?
[23:40] secoif: theBrettman you can't
[23:40] secoif: theBrettman you have to restart your computer
[23:40] tvw has joined the channel
[23:40] secoif: theBrettman long standing bug.
[23:41] CoverSlide: and if you're ircing on a different computer
[23:41] theBrettman: lol
[23:41] CoverSlide: you have to restart that too
[23:41] theBrettman: I can open another tab, no biggie
[23:41] TheFuzzball has joined the channel
[23:41] theBrettman: I didn't do any hash -r
[23:42] CoverSlide: if you're using bash you don't need too
[23:43] brmouzone has joined the channel
[23:43] theBrettman: so why am I getting bash: node: command not found? I'm in ~/npm right now
[23:43] theBrettman: is it a path thing?
[23:43] CoverSlide: yes
[23:43] lperrin has joined the channel
[23:43] torvalamo: to exit REPL type process.exit()
[23:43] CoverSlide: did you make install node?
[23:43] secoif: torvalamo boooo
[23:43] torvalamo: boo
[23:44] theBrettman: how bout if I ctrl + c? lol
[23:44] torvalamo: fuck off
[23:44] torvalamo: :P
[23:44] theBrettman: yes, I did
[23:44] secoif: haha
[23:44] CoverSlide: ctrl-Z ->  bg -> killall node
[23:44] torvalamo: if you ^C you have to do it twive
[23:44] torvalamo: twice
[23:44] torvalamo: with process.exit you get the honour of typing that shit out
[23:44] theBrettman: yeah, I had to do it twice
[23:44] theBrettman: rofl
[23:44] lotsofcode has joined the channel
[23:45] theBrettman: damn, I wonder if I make installed as root?
[23:45] torvalamo: if you ^D it kills it flat
[23:45] torvalamo: one hit
[23:45] CoverSlide: BAM!
[23:46] Transformer has joined the channel
[23:46] redir has joined the channel
[23:47] hotchkiss has joined the channel
[23:47] theBrettman: nope, I didn't install it as root. idk wtf...
[23:48] CoverSlide: sudo make install
[23:48] theBrettman: I'll try it again
[23:48] CoverSlide: although I prefer to have ~/bin in my PATH, and ./configure --prefix=$HOME
[23:48] torvalamo: preferences are for nerds
[23:49] torvalamo: default settings all the way baby \m/
[23:49] charrly has joined the channel
[23:49] torvalamo: very metal
[23:49] theBrettman: bash: node: command not found
[23:49] lz: wow i just installed zshell and oh-my-zsh and I'm puking rainbows
[23:49] theBrettman: maybe it's cuz I ran make before make install?
[23:49] torvalamo: you're supposed to run make before make install
[23:49] charrly: This might be a silly question, but i've always wondered. how is it that req and res are being set? where is this happening? Does node create them globally? http://pastie.org/3216354
[23:49] lz: highly recommended
[23:50] theBrettman: the instructions said just run make install, lol
[23:50] theBrettman: ls
[23:50] theBrettman: oops
[23:50] torvalamo: Enter Password:
[23:50] heavysixer has joined the channel
[23:51] CoverSlide: charrly: it's on the 'request' event
[23:51] jacobolus has joined the channel
[23:52] tonymilne has joined the channel
[23:52] CoverSlide: when httpServer does its internal stuff, when it receives an http request header, it creates a httpRequest and httpResponse object and does a this.emit('request', requestObject, responseObject)
[23:53] theBrettman: wow, I installed npm with make without make install
[23:53] CoverSlide: if http.createServer has a function as its argument, there's an implied server.on('request', cb) called
[23:53] theBrettman: it's installed already
[23:53] theBrettman: weird sh*t
[23:53] spetrea has joined the channel
[23:53] torvalamo: make will compile it and all
[23:53] theBrettman: ig
[23:53] torvalamo: make install will move it to root stuff
[23:53] torvalamo: places
[23:53] torvalamo: whatever
[23:54] torvalamo: and bin
[23:54] theBrettman: well for some reason I can't make install
[23:54] torvalamo: so you can node
[23:54] charrly: CoverSlide, oh ok. But what i don't get is that I can rename them anything and yet they still represent the request and the response..
[23:54] secoif: I want to KNOW exactly when a server has opened a port, any way to do that?
[23:54] CoverSlide: the argument name doesn't matter
[23:54] torvalamo: secoif, make a firewall app that instead of blocking stuff, notifies your app
[23:55] torvalamo: :p
[23:55] charrly: CoverSlide, that's because the anon function gets called within createServer and it's own variables passed, correct?
[23:55] torvalamo: oh wait that won't notice when you're just listening
[23:55] CoverSlide: you can even do http.createServer(function(){var $in = arguments[0];var $out = arguments[1]}) where $in becomes the request, $out becomes the response
[23:55] torvalamo: you could wrap the server.listen function
[23:55] secoif: torvalamo ahh, .listen() takes a callback
[23:55] secoif: yeah
[23:55] CoverSlide: variable names ar insignificant
[23:56] teadict: if I use the middleware browserify for express, I wouldn't have to do it, right?
[23:56] secoif: ACTION reads the fucking manual
[23:56] smithclay has joined the channel
[23:56] torvalamo: men don't read the manual
[23:56] disappearedng has joined the channel
[23:56] torvalamo: that's why men aren't programmers
[23:56] secoif: CoverSlide do you normally use $ variables?
[23:56] teadict: torvalamo: truer words never been said
[23:56] secoif: CoverSlide bad habit from php/perl?
[23:57] charrly: CoverSlide, i see. thanks for the explanation!
[23:57] torvalamo: maybe it should be Men, with a big M
[23:57] igl has joined the channel
[23:57] CoverSlide: no, i'm just saying, variable names don't matter
[23:57] CoverSlide: men don't read the manual
[23:57] CoverSlide: oops
[23:58] teadict: wdbl: using browseritfy as middleware seems to be better working yay
[23:59] teadict: or not....
[23:59] eldios has joined the channel
[23:59] teadict: grrrrr
