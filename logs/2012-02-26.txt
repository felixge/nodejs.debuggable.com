[00:01] hermanjunge: This is a regex challenge
[00:01] hermanjunge: I want to check whether a string is a numeric interval
[00:01] AvianFlu: what do you mean by 'numeric interval'?
[00:01] hermanjunge: [100..200] would be true
[00:01] hermanjunge: [100,200] false
[00:01] hermanjunge: :D
[00:01] hermanjunge: I want to put a parameter in that form
[00:02] hermanjunge: in a config file
[00:02] hermanjunge: then, I have two types of parameters
[00:02] hermanjunge: intervals like [1..10]
[00:02] hermanjunge: and arrays like [a,b,c,d]
[00:02] hermanjunge: got it?
[00:03] hermanjunge: I don't know how to write 'opening bracket', 'a number', "two points", 'a number', 'closening bracket'
[00:03] hermanjunge: \[0-99999..0-99999\]
[00:04] JacobSingh has joined the channel
[00:06] rlidwka has joined the channel
[00:06] louissmit has joined the channel
[00:08] Wizek_ has joined the channel
[00:08] slloyd has joined the channel
[00:08] bkaney has joined the channel
[00:11] rlidwka_ has joined the channel
[00:11] dilvie has joined the channel
[00:11] ericmuyser has joined the channel
[00:12] Eruadan: let's say i want to make a real time app. Will i need knockoutjs if i have already backbone+underscore+nowjs ?
[00:12] AvianFlu: hermanjunge, I see what you mean
[00:12] hermanjunge: It's just to be cooler
[00:12] hermanjunge: right now I'm using split and a bunch of ifs and it's not cool
[00:13] redir_ has joined the channel
[00:13] AvianFlu:  /\[\d+\.\.\d+]/
[00:13] AvianFlu: actually, you need to capture
[00:13] AvianFlu:  /\[(\d+)\.\.(\d+)]/
[00:13] spolu has joined the channel
[00:14] AvianFlu: and I forgot a \
[00:14] AvianFlu:  /\[(\d+)\.\.(\d+)\]/
[00:14] AvianFlu: that should work, if I understand you right
[00:15] agnat_ has joined the channel
[00:15] hermanjunge: '[1..10]'.match('/\[\d+\.\.\d+]/')
[00:15] willwhite has joined the channel
[00:15] hermanjunge: null 
[00:15] hermanjunge: :(
[00:15] Eruadan: it seems i found a combo here https://github.com/josebalius/KnockoutJSLive 
[00:16] AvianFlu: hermanjunge, you forgot the \ on the second ]
[00:16] hermanjunge: i put it
[00:16] AvianFlu: also, you need the ()s
[00:16] AvianFlu:  /\[(\d+)\.\.(\d+)\]/
[00:17] esundahl has joined the channel
[00:17] hermanjunge: '[1..10]'.match(' /\[(\d+)\.\.(\d+)\]/')
[00:17] hermanjunge: '[1..10]'.match('/\[(\d+)\.\.(\d+)\]/')
[00:17] AvianFlu: hermanjunge, don't put quotes around the regex
[00:18] AvianFlu: it's an object by itself
[00:18] hermanjunge: really?
[00:18] AvianFlu: yep
[00:18] hermanjunge: silly me
[00:18] redir has joined the channel
[00:18] hermanjunge: :D
[00:18] AvianFlu: if it's in quotes, you have to `new RegExp("whatever")`
[00:18] zackattack has joined the channel
[00:18] hermanjunge: great!
[00:18] hermanjunge: did it
[00:19] hermanjunge: '[1..10]'.match(/\[(\d+)\.\.(\d+)\]/)
[00:19] ParadoxQuine has joined the channel
[00:19] hermanjunge: and the response is cool, an array
[00:19] drgs has joined the channel
[00:19] hermanjunge: you rock AvianFlu
[00:19] AvianFlu: yep, that's what String.match() returns
[00:19] AvianFlu: :D
[00:20] hermanjunge: that's why I wanted, a one liner, clean solution
[00:20] konobi: you may want to run parseInt on those matches afterwards
[00:20] bwen: anyone can give me a hand? I cant seem to alter the delay of the timeout for a https.request... I found a couple of example that used https.createClient and then use setTimeout but that doesnt work anymore ...
[00:21] davidwalsh has joined the channel
[00:24] _th_n has joined the channel
[00:26] st_luke has joined the channel
[00:26] bwen: no one? :(
[00:26] zackattack: bwen i'm also haveing trouble with my settimeout calls
[00:27] rlidwka has joined the channel
[00:27] hermanjunge: konobi, not necessary, look at this example
[00:27] hermanjunge:  '[1000..banana]'.match(/\[(\d+)\.\.(\d+)\]/)
[00:28] hermanjunge: it returns null
[00:28] bwen: zackattack: https.request takes an object of options... I though that'd be a very nice place to put the timeout :P
[00:28] bwen: since we dont have createClient anymore
[00:29] konobi: hermanjunge: [00002..9999]
[00:29] zackattack: bwen:  i have this code --->                      setTimeout(console.log('hi'), 5000);   ..... and it's getting invoked instantly.  not after 5 seconds. what the heck
[00:29] hermanjunge: yeah
[00:29] hermanjunge: haven't thought of that
[00:29] bwen: zackattack: ahh not setTimeout... I meant the timeout of an HTTPS request :P
[00:30] bwen: zackattack: setTimeout takes a callback..... try setTimeout(function () { console.log('hi'); }, 5000);
[00:30] zackattack: ohhhhh....
[00:31] zackattack: that's exactly right!
[00:31] zackattack: it was executing instantly, duh.  thanks bwen :)
[00:31] bicranial has joined the channel
[00:31] GodezInc has joined the channel
[00:31] ljharb: i have a mongoose dbref question that nobody in the mongoose room seem to know about - can anyone here help?
[00:32] bbbb has joined the channel
[00:34] thinkt4nk has joined the channel
[00:35] TheFuzzball has joined the channel
[00:36] TooTallNate has joined the channel
[00:38] snearch has joined the channel
[00:39] jimt_ has joined the channel
[00:39] ovnicraft has joined the channel
[00:40] TheFuzzball has joined the channel
[00:41] merlin83 has joined the channel
[00:41] odinswand has joined the channel
[00:43] themiddleman_itv has joined the channel
[00:43] rlidwka has joined the channel
[00:48] ramitos has joined the channel
[00:49] mmalecki has joined the channel
[00:49] robotmay has joined the channel
[00:51] zomgbie has joined the channel
[00:51] dshaw_ has joined the channel
[00:52] subbyyy has joined the channel
[00:54] plutoniix has joined the channel
[00:55] YoY has joined the channel
[00:56] Rob__ has joined the channel
[01:00] mo0nykit has joined the channel
[01:01] SuMarDi has joined the channel
[01:01] mo0nykit: Hello, I'm using the shell interpreter of node. How do I run a script and then open the interpreter so that I can examine its objects, instead of exiting? Something like python -i myscript.py
[01:02] ShaneHudson: I think you can run the debugger? not 100% sure how though
[01:03] mo0nykit: ShaneHudson: how do I do that? I just installed node. I'm primarily coding in Python, but just installed node so that I can practice my JavaScript.
[01:05] briancray has joined the channel
[01:07] jesusabdullah: I think I can help you out here
[01:07] Enoria has joined the channel
[01:07] jesusabdullah: https://github.com/dannycoates/node-inspector
[01:07] jesusabdullah: mo0nykit: ^^
[01:10] jesusabdullah: mo0nykit: ALSO: http://nodejs.org/docs/latest/api/repl.html
[01:10] looopy has joined the channel
[01:10] mo0nykit: jesusabdullah: with node-inspector, I guess i'll do the debugging from the browser?
[01:12] hermanjunge: AvianFlu
[01:13] jxson has joined the channel
[01:13] AvianFlu: sup hermanjunge 
[01:13] hermanjunge: Can I ask you another one?
[01:13] nicholasf has joined the channel
[01:13] AvianFlu: sure, what's good
[01:13] merlin83 has joined the channel
[01:13] hermanjunge: I'm trying to do the same trick for [a,b,c,d]
[01:13] hermanjunge: '[a,,,c]'.match(/\[[A-Za-z0-9][,]*[A-Za-z0-9]\]/)
[01:13] hermanjunge: the repetition is killing me
[01:13] hermanjunge: besides, it's not returning the elements separated
[01:13] AvianFlu: so, whenever you want to do [A-Za-z], do \w instead
[01:14] hermanjunge: and the number?
[01:14] hermanjunge: \w0-9
[01:14] hermanjunge: that way?
[01:14] ryanfitz has joined the channel
[01:14] AvianFlu: no, \w\d
[01:14] Tautologistics has joined the channel
[01:14] jesusabdullah: mo0nykit: Yeah, it's a browser api to hook onto node's --debug thing
[01:14] hermanjunge: what about the repetitions?
[01:14] hermanjunge: how can I do it here?
[01:15] ningu: hermanjunge: I would probably just parse the [] out first, split on /\s*,\s*/ (or no whitespace if you want) and filter by undefined
[01:15] hermanjunge: sure
[01:15] hermanjunge: but regex looks waaay cleaner
[01:15] jesusabdullah: mo0nykit: the repl's cool though. You can throw that down pretty much wherever and then have a bona fide repl with whatever environment you want
[01:15] ningu: hermanjunge: yeah, I'm sure it's possible to do that way too
[01:15] hermanjunge: that's why everybody gets into regex in some time of his/her life
[01:15] kmiyashiro has joined the channel
[01:15] ningu: I tend not to write regexes that are so complicated I can't remember how they work :)
[01:15] jesusabdullah: mo0nykit: For example, with hookio --repl, it sets up this whole distributed hook thing and then you can type actual commands against the hook object
[01:16] AvianFlu: hermanjunge, this isn't too hard, just give me a sec
[01:16] shivhack has joined the channel
[01:16] ningu: hermanjunge: do you want the repeated commas to be valid or not?
[01:16] hermanjunge: yep
[01:16] ningu: and be null elements or what?
[01:16] hermanjunge: example [a,b,f,d,e,q,w,y] returns true
[01:16] hermanjunge: [a] true
[01:16] hermanjunge: [a,b] true
[01:17] hermanjunge: [a,b,] false
[01:17] ningu: but not [a,,b]?
[01:17] hermanjunge: exactly
[01:17] AvianFlu:  /\[(?:([\w\d]*),)+\]/
[01:17] hermanjunge: wow
[01:17] AvianFlu: I don't think that captures right, though
[01:17] hermanjunge: you know the shit!
[01:17] hermanjunge: HAHAHAH
[01:17] AvianFlu: give that one a shot, tell me if it works
[01:17] AvianFlu: I think I might be insane though
[01:17] hermanjunge: right now
[01:17] hermanjunge: what does the ?: part
[01:17] ningu: no, that will match [,,,]
[01:17] jimi_hendrix has joined the channel
[01:17] AvianFlu: that's a non-capturing group
[01:17] AvianFlu: () saves it
[01:17] AvianFlu: (?:) just separates it
[01:18] AvianFlu: (\w) means grab me that word
[01:18] AvianFlu: (?:\w) just isolates it in the regex
[01:18] indexzero has joined the channel
[01:18] ningu: you want /\[[\w\d](?:,([\w\d]))*\]/
[01:18] hermanjunge: '[a,b,c]'.match(/\[(?:([\w\d]*),)+\]/)
[01:18] hermanjunge: null
[01:18] hermanjunge: :(
[01:18] AvianFlu: use ningu's
[01:18] AvianFlu: I think I messed up a little
[01:19] hermanjunge: almost ningu
[01:19] hermanjunge: it gave me in node>
[01:19] ningu: oh, I forgot to capture the first one
[01:19] hermanjunge: [ '[a,b,c]',
[01:19] hermanjunge:   'c',
[01:19] QiBala has joined the channel
[01:19] hermanjunge:   index: 0,
[01:19] hermanjunge:   input: '[a,b,c]' ]
[01:19] ningu: hrm
[01:19] hermanjunge: but I'm getting the pattern
[01:19] tkaemming has joined the channel
[01:20] ningu: (foo)* seems to be just one capture
[01:20] hermanjunge: one alphanumeric and several optional , + alphanumeric
[01:20] mikeal has joined the channel
[01:20] ningu: yes, but it only gives you the *last* matched alphanumeric as the capture
[01:20] ningu: oddly
[01:20] hermanjunge: yep
[01:20] hermanjunge: that's sad
[01:20] hermanjunge: it looked promising
[01:20] mo0nykit: jesusabdullah: I'm trying out the tips with repl here http://www.2ality.com/2011/11/node-repl-start.html. I'd like to work in the terminal as much as possible
[01:20] AvianFlu: you gotta specify all captures I think
[01:20] ningu: maybe with RegExp.exec
[01:21] AvianFlu: yeah, String.match() isn't the best - but it shouldn't matter much ehre
[01:21] AvianFlu: here
[01:21] jimi_hendrix: hi, i am trying to install npm, via the shell script, but it isnt working. if i dont do use sudo, then it doesnt have permissions, but if i do use sudo, then it cant finde node. is there an easy solution to this? (i could make a work around, but i figured you guys would know something)
[01:21] hermanjunge: I'm think I'm going to 
[01:21] Number9 has joined the channel
[01:21] jesusabdullah: mo0nykit: Right on. I'd try to give you more hints but I need to acquire food before I have hypoglycemia promblems
[01:21] jesusabdullah:  >_<
[01:21] jesusabdullah: That's what happens when you don't eat anything until 5:30pm! >_<
[01:22] rauchg has joined the channel
[01:22] hermanjunge: '[a,b,c]'.replace('[','').replace(']','').split(',')
[01:22] ningu: no, RegExp.exec is the same for the captures
[01:22] hermanjunge: That does it.
[01:23] ningu: yeah, but it doesn't validate it
[01:23] AvianFlu: arbitrary number of captures, split is better
[01:23] ningu: you can check if it matches first
[01:23] AvianFlu: split can probably take a regex arg
[01:23] ningu: it can
[01:23] ningu: but that won't help
[01:23] ningu: you won't know it's a single alphanumeric character that each element has
[01:24] ramitos has joined the channel
[01:24] Eruadan: now i think i got some original error with "sudo npm install now -g", it says npm ERR! TypeError: Cannot call method 'call' of undefined
[01:24] Eruadan:  npm ERR!     at Object.lchown (/usr/lib/nodejs/npm/node_modules/graceful-fs/graceful-fs.js:228:17)
[01:24] ningu: you can take the captures out of my regex and just use it to .match() first and if so, do the next line
[01:24] rlidwka_ has joined the channel
[01:25] ningu: str.match(/\[([\w\d])(?:,([\w\d]))*\]/) ? str.replace(/\[\]/g,'').split(',')
[01:25] ningu: : null
[01:25] ningu: without the captures
[01:25] ningu: I was lazy
[01:26] cirul has joined the channel
[01:26] jskulski has joined the channel
[01:26] ningu: str.match(/\[[\w\d](?:,[\w\d])*\]/) ? str.replace(/[\[\]]/g,'').split(',')
[01:26] ningu: : null
[01:26] ningu: there
[01:26] ningu: that should actually do something useful
[01:27] shipit has joined the channel
[01:27] shivhack has left the channel
[01:28] kwmiebach_ has joined the channel
[01:29] bicranial has joined the channel
[01:30] k1ttty has joined the channel
[01:31] akrs has joined the channel
[01:32] JJMalina has joined the channel
[01:32] jsull_ has joined the channel
[01:33] mo0nykit: I'm trying to call repl.start, all with default arguments except for useGlobal=true. So I try repl.start(useGlobal=true), but node seems to look for prompt, stream, and eval, even though they have defined defaults. How do I get around this? http://nodejs.org/docs/latest/api/repl.html#repl.start
[01:33] JacobSingh has joined the channel
[01:34] cha0s has joined the channel
[01:34] cha0s has joined the channel
[01:34] harthur has joined the channel
[01:39] nibblebot has joined the channel
[01:40] akrs has left the channel
[01:41] QaDeS_ has joined the channel
[01:42] alm0nd has joined the channel
[01:42] westg has joined the channel
[01:43] shinuza has joined the channel
[01:44] themiddleman_itv has joined the channel
[01:46] al3xnull has joined the channel
[01:47] rwaldron has joined the channel
[01:47] willwhite has joined the channel
[01:52] Numero9 has joined the channel
[01:52] mast3rof0 has joined the channel
[01:54] mast3rof0 has left the channel
[01:54] looopy has joined the channel
[01:55] MartinCleaver has joined the channel
[01:55] MartinCleaver has joined the channel
[01:58] bwen has left the channel
[01:58] ericmuyser has joined the channel
[01:59] JJMalina has joined the channel
[02:03] diverdude: if i have a jquery container: var cw = $([]); and add some elements to this container, how do i then remove a specific element again from the container?
[02:03] ningu: filter?
[02:04] tylerstalder has joined the channel
[02:08] nFFF has joined the channel
[02:09] EhevuTov has joined the channel
[02:10] fritzy has joined the channel
[02:11] dthompso99 has joined the channel
[02:11] dthompso99 has left the channel
[02:12] arnorhs has joined the channel
[02:13] khug has joined the channel
[02:15] khug: hey all, are compiled c++ modules limited by the same v8 memory limit as the root process?
[02:15] khug: or do they get their own memory space?
[02:16] tmcw has joined the channel
[02:16] zackattack has joined the channel
[02:17] joshkehn has joined the channel
[02:17] joshkehn has left the channel
[02:19] thinkt4nk has joined the channel
[02:20] Lingerance: It depends if the memory they're using is managed by v8 or not
[02:22] khug: so if I create vanilla c structs to hold the data they're considered outside the v8, but it they're v8 objects (like Number::New) they count towards the memory limit?
[02:22] mAritz has joined the channel
[02:24] Lingerance: Yes
[02:24] mAritz has joined the channel
[02:26] mehlah has joined the channel
[02:26] robm has joined the channel
[02:27] khug: awesome, thanks Lingerance :-)
[02:27] d1ApRiL has left the channel
[02:29] hotchkiss has joined the channel
[02:29] rlidwka has joined the channel
[02:32] McMAGIC--Copy has joined the channel
[02:33] cliffano has joined the channel
[02:35] infynyxx has joined the channel
[02:40] ramitos has joined the channel
[02:45] bic2k has joined the channel
[02:48] sdwrage has joined the channel
[02:48] odinswand has joined the channel
[02:48] timoxley has joined the channel
[02:49] tkaemming has joined the channel
[02:52] looopy has joined the channel
[02:53] mnkNja has joined the channel
[02:53] dreamdust has joined the channel
[02:54] mnkNja_ has joined the channel
[02:56] alejandromg has joined the channel
[02:56] sven_oostenbrink has joined the channel
[02:56] rauchg has joined the channel
[02:58] sven_oostenbrink: I need a 2 way translation table for smilies, like :) maps to "smile", :( maps to sad, etc.. I need it 2 way so that I can check for :) in texts and translate it to "smile", or know to insert :) in text when somebody clicked on "smile".. What is the best way to store a translation list like this?  I thought about 2 objects, one with property name "smile" pointing to string ":)", and another one with propertyname ":)" pointing to "smile" but.. Is 
[02:58] sven_oostenbrink: it valid in javascript to have property names like that?
[02:58] sven_oostenbrink: And, if not, then what is the best way to do this translation?
[03:01] shinuza_ has joined the channel
[03:01] Joeysomo has joined the channel
[03:02] Lingerance: sven_oostenbrink: function(one, two) { this[one] = two; this[two] = one; return this }
[03:04] Nuck: Lingerance: Wouldn't this point to the global?
[03:04] Nuck: That seems like an awful solution
[03:04] Nuck: I think sven_oostenbrink's idea is probably the best bet.
[03:04] Lingerance: Nuck: I'm assuming that gets applied as a member function
[03:04] Nuck: Ah.
[03:04] Tricon has joined the channel
[03:06] rwaldron has joined the channel
[03:06] patcito has joined the channel
[03:09] dshaw_ has joined the channel
[03:10] Joeysomo has joined the channel
[03:10] looopy has joined the channel
[03:18] SuMarDi has joined the channel
[03:19] shipit_ has joined the channel
[03:24] rlidwka_ has joined the channel
[03:25] ryan_stevens has joined the channel
[03:26] bizniz98 has joined the channel
[03:28] heavysixer has joined the channel
[03:29] benvie: properties can have any spelling
[03:29] nibblebot has joined the channel
[03:29] benvie: .. this['hi catb0t, are you awake?'] = true
[03:29] benvie: catb0t =(
[03:33] infynyxx has joined the channel
[03:37] boltR has joined the channel
[03:37] mo0nykit has joined the channel
[03:39] slajax has joined the channel
[03:43] JJMalina has joined the channel
[03:45] dwhittle has joined the channel
[03:45] warz has joined the channel
[03:45] warz has joined the channel
[03:46] Joeysomo has joined the channel
[03:46] jyp has joined the channel
[03:47] ryanfitz has joined the channel
[03:48] mo0nykit: How do I perform an HTTP GET from the node interpreter, where the return data is the entire HTTP string response?
[03:48] Sahua has joined the channel
[03:49] boehm has joined the channel
[03:49] Aria: Buffer it up and then emit it yourself when you get it all, in theory.
[03:51] Joeysomo has joined the channel
[03:52] Number9 has joined the channel
[03:52] mo0nykit: Aria: I mean, what function/library should I use? I'm a Javascript noob. I have used the browser console in Chrome but would like to work in a terminal to keep my practice environment fast (e.g. write my own scripts, run them in the interpreter, then inspect them)
[03:52] Aria: The built-in http library.
[03:52] Aria: require('http')
[03:52] robi42 has joined the channel
[03:57] davidbanham has joined the channel
[04:00] qsobad has joined the channel
[04:01] Joeysomo_ has joined the channel
[04:02] mo0nykit: Aria: now I'm able to console.log(response). Turns out response is an object. How do I read off the string response?
[04:02] Aria: It's an event emitter.
[04:02] Aria: It emits 'data' events as the chunks come in.
[04:04] mo0nykit: I'll look up events in the node docs
[04:05] devongovett has joined the channel
[04:06] Joeysomo has joined the channel
[04:11] mo0nykit: Thanks, Aria, I got it: event, listener, buffer
[04:11] Aria: Yep!
[04:12] Aria: You're dealing with some pretty low-level building blocks compared to the browser, but it lets you be very efficient.
[04:12] thinkt4nk has joined the channel
[04:22] Skaag has joined the channel
[04:24] benvie: if you're learning you can use the console to interact with scripts as you write them
[04:24] benvie: https://github.com/Benvie/Node.js-Ultra-REPL
[04:24] rlidwka has joined the channel
[04:25] dilvie has joined the channel
[04:25] trave has joined the channel
[04:25] mo0nykit: thanks, benvie, I'm looking it up
[04:25] AkhiAbdullah has joined the channel
[04:26] jesusabdullah: benvie: Sell your repl to me
[04:26] jesusabdullah: What makes it ultra
[04:26] maxogden: lol
[04:26] maxogden: its has a moonroof and leather cupholders
[04:26] jesusabdullah: nice
[04:27] jesusabdullah: throw some D's on that bitch and we got a deal
[04:30] Mortchek has joined the channel
[04:30] Siph0n has joined the channel
[04:30] mo0nykit: How do I "import" a js source file into the node interpreter as though I've typed it in? Much like using <script src="…"> in HTML
[04:31] tmike: You could always read it in and exec it
[04:31] tmike: however
[04:31] tmike: standard 'exec' warning blah blah
[04:32] mo0nykit: exec("path/to/myscript.js")?
[04:32] joshkehn has joined the channel
[04:32] joshkehn has left the channel
[04:32] tmike: fs.readFile
[04:32] unomi has joined the channel
[04:32] maletor has joined the channel
[04:33] maxogden: mo0nykit: node uses commonjs modules and the require() function
[04:33] kirbysayshi has joined the channel
[04:33] maxogden: mo0nykit: but you can use js's eval() to evaluate raw code
[04:34] tmike: eval, that's what I was going for
[04:34] tmike: derpy-doo mike
[04:35] take_cheeze has joined the channel
[04:35] mo0nykit: eval(fs.readFile("path/to/script.js").toString())
[04:36] tmike: read you some docs mo0nykit 
[04:37] AAA_awright: mo0nykit: You don't
[04:37] tmike: it's better of course to find a way to export it
[04:38] tmike: I am assuming there is a *really* good reason for having to just run the code.
[04:38] AAA_awright: Even then, you don't use eval
[04:38] sven_oostenbrink: I have an object like {'foo' : 'bar', 'this' : 'that'} which I have to use on a text like "this is a foo test text" to change it to "that is a bar test text".. I know I could do string.replace() for each object property and replace it with its value, but I am wondering, is there a more efficient way to do this?
[04:38] AAA_awright: You just don't.
[04:39] subbyyy has joined the channel
[04:40] tmike: well, in that case, how DO you import arbitrary JS so as to have it run in-scope?
[04:40] maxogden: eval
[04:41] mo0nykit: I got it now.. thanks!
[04:41] maxogden: im not saying you _should_ use eval but thats how you do it
[04:41] tmike: that's all I'm saying
[04:41] tmike: not really a good idea.  modularize if you can, but in case of emergency, and you know the js file you're importing, eval at least works
[04:42] mo0nykit: modularizing in node.js means I'll use the exports object in my custom modules right? Then I can use require()
[04:42] maxogden: yup
[04:42] tmike: right
[04:43] tmike: you can always do something like if (typeof export !== 'undefined') export.whatever = a_thing;
[04:43] tmike: to not break your existing code
[04:44] tmike: exports.whatver*
[04:45] tmike: of course, I'm talking purely out of my butt and may be incredibly wrong.
[04:45] tmike: that code could single-handedly implode the planet for all I've tested and used it.
[04:47] Wizecoder has joined the channel
[04:47] OmidRaha has joined the channel
[04:48] SuMarDi has joined the channel
[04:49] criswell has joined the channel
[04:49] mo0nykit: is there a way to set node interpreter's time zone? In Chrome, new Date() shows me my local timezone. In Node, I get a UTC
[04:50] Joeysomo has joined the channel
[04:51] mo0nykit: nodejs LOCALE setting perhaps?
[04:51] tmike: have you been asking the docs?
[04:51] tmike: or been looking at the documentation for date objects?
[04:52] Joeysomo_ has joined the channel
[04:52] mo0nykit: yes, both.. hmm.. I guess it's just node's default printing mode: UTC. I get the same getTimezoneOffset from both browser and node.
[04:55] sven_oostenbrink: I have an object like {'foo' : 'bar', 'this' : 'that'} which I have to use on a text like "this is a foo test text" to change it to "that is a bar test text".. I know I could do string.replace() for each object property and replace it with its value, but I am wondering, is there a more efficient way to do this?
[04:56] kishoreyekkanti has joined the channel
[04:57] redir has joined the channel
[04:59] devaholic has joined the channel
[05:01] newb2: whats a good way to get the size of a stream. Its not a file stream, so no stat
[05:01] westg: anyone know how I can get the body's current width/height as a variable in stylus?
[05:01] westg: or do I have to do something like that with clientside JS ^
[05:01] unomi: sven_oostenbrink: depends on the context and scale
[05:02] unomi: sven_oostenbrink: in the naive case you could craft regex based replacers
[05:04] unomi: sven_oostenbrink: how efficient do you really need it to be?
[05:06] timoxley has joined the channel
[05:09] DuoSRX has joined the channel
[05:10] sreeix has joined the channel
[05:11] h00k1 has joined the channel
[05:17] brianseeders has joined the channel
[05:17] Sahua_ has joined the channel
[05:22] rodrick has joined the channel
[05:22] odinswand has joined the channel
[05:24] rodrick: i want to create a cache for nodejs, how do i store large files in the memory? 
[05:25] lohkey has joined the channel
[05:26] Joeysomo has joined the channel
[05:28] Joeysomo_ has joined the channel
[05:29] rodrick: how do i store large binary files in node js, without running out of memory?
[05:30] st_luke_ has joined the channel
[05:32] ljharb: is there some reason you wouldn't be serving large files from a CDN or S3?
[05:35] spion has joined the channel
[05:37] OmidRaha has joined the channel
[05:37] OmidRaha has joined the channel
[05:45] socketio\test\53 has joined the channel
[05:46] ec_ has joined the channel
[05:48] alek_b_ has joined the channel
[05:55] nibblebot has joined the channel
[05:57] Emmanuel` has joined the channel
[06:00] arnorhs has joined the channel
[06:03] qsobad has joined the channel
[06:05] plutoniix has joined the channel
[06:07] cha0s has joined the channel
[06:07] cha0s has joined the channel
[06:08] davehamptonusa has joined the channel
[06:09] nerdy has joined the channel
[06:13] tjmehta has joined the channel
[06:21] pthm has joined the channel
[06:21] tmcw has joined the channel
[06:27] JohnnyL has joined the channel
[06:29] pthm has joined the channel
[06:29] rjman has joined the channel
[06:30] dubenstein has joined the channel
[06:32] rjman has joined the channel
[06:38] glennsc has joined the channel
[06:39] Qzen has joined the channel
[06:42] avalanche123 has joined the channel
[06:50] sreeix has joined the channel
[06:51] MikeMakesIt has joined the channel
[06:51] joshkehn has joined the channel
[06:52] joshkehn has left the channel
[06:52] davehamptonusa has left the channel
[06:56] cha0s has joined the channel
[06:56] cha0s has joined the channel
[06:56] Mirub has joined the channel
[06:58] markq has joined the channel
[06:58] Mirub has left the channel
[06:59] sreeix_ has joined the channel
[06:59] zackattack: how long should it take to connect to a socket? in socket.io?
[07:00] tonist has joined the channel
[07:00] niloy has joined the channel
[07:09] slajax has joined the channel
[07:15] Twelve-60` has joined the channel
[07:15] leif has joined the channel
[07:16] umren has joined the channel
[07:17] fearphage has joined the channel
[07:17] fearphage has joined the channel
[07:17] jxie has joined the channel
[07:18] [[zz]] has joined the channel
[07:22] enmand has joined the channel
[07:25] enmand has joined the channel
[07:27] nibblebot has joined the channel
[07:29] Qalqi has joined the channel
[07:29] simenbrekken has joined the channel
[07:30] daglees has joined the channel
[07:30] M1l3n1um has joined the channel
[07:31] phidah has joined the channel
[07:34] Qzen has joined the channel
[07:36] Joeysomo has joined the channel
[07:37] stagas has joined the channel
[07:38] diverdude has joined the channel
[07:42] average_drifter has joined the channel
[07:43] dshaw_ has joined the channel
[07:46] sethbc has joined the channel
[07:47] arnorhs has joined the channel
[07:49] pid1 has joined the channel
[07:51] Emmanuel` has joined the channel
[07:52] JJMalina has joined the channel
[07:52] stagas has joined the channel
[07:53] Gekz has joined the channel
[07:53] Gekz has joined the channel
[07:56] diverdude: I have a plugin which  basically wraps a jquery container: $([]). In each entry of the container i put custom objects. Is it possible to somehow utilize jquerys excellent filtering techniques to call a function on a subset of the objects in the jquery container? I mean similar to when you do eg. $("h1").slice(3,7).css("border","solid") i would like to be able to do myJQcontainer.slice(3,7).myObjFunc(someinput); Is that possible to do?
[07:58] simenbrekken has joined the channel
[07:58] FTWynn has joined the channel
[07:59] sreeix has joined the channel
[08:00] antono has joined the channel
[08:01] cha0s has joined the channel
[08:01] cha0s has joined the channel
[08:01] eTmk has joined the channel
[08:02] aliem has joined the channel
[08:03] aoberoi has joined the channel
[08:06] devongovett has joined the channel
[08:06] sethbc has joined the channel
[08:06] Emmanuel`: I'm trying to implement a simple Queue using node and mongo. Typically, when I push an element to the Queue, it is stored in a collection to be processed later
[08:07] Emmanuel`: now, my problem is I want my queue to process (dequeue and pass the element to another Object) when it's not empty
[08:07] Emmanuel`: and do nothing otherwise
[08:07] Emmanuel`: I have a few problem I didn't manage to solve
[08:08] Emmanuel`: most notably, how to put the queue to rest when its empty and start it/let it run if not
[08:08] Emmanuel`: because all calls to mongo are asynchronous
[08:09] Emmanuel`: in a nutshell, I don't know how to implement the pop and isEmpty method of my queue when my queue uses mongo
[08:09] eTmk has joined the channel
[08:09] Emmanuel`: (push is easy, its just storing something in my collection)
[08:13] jyp has joined the channel
[08:15] dilvie has joined the channel
[08:15] inimino has joined the channel
[08:15] rendar has joined the channel
[08:18] samuelgoodwin has joined the channel
[08:18] samuelgoodwin: hey guys
[08:19] tylerstalder has joined the channel
[08:21] graeme_f has joined the channel
[08:27] hasenj has joined the channel
[08:27] FTWynn has left the channel
[08:31] arnorhs has joined the channel
[08:33] mandric has joined the channel
[08:34] herbySk has joined the channel
[08:35] Industrial: SubStack: https://gist.github.com/a3932bce8e5526e4855b
[08:36] Industrial: Or anyone with experience running dnode in the browser ..
[08:36] Industrial: Where do I get the client js library from? :S
[08:36] ljharb has joined the channel
[08:37] shadowh511 has joined the channel
[08:37] versicolor has joined the channel
[08:38] garrensm_ has joined the channel
[08:38] jkridner has joined the channel
[08:40] sdwrage has joined the channel
[08:41] mikeal has joined the channel
[08:42] PElshoff has joined the channel
[08:42] eddyb: what xml parser should I use?
[08:42] boltR has joined the channel
[08:42] Octayn: Do you prefer SAX, or DOM?
[08:44] kishoreyekkanti has joined the channel
[08:44] graeme_f: Industrial - maybe "dnode.js" is the "index.js" in the browser folder?
[08:45] rurufufuss has joined the channel
[08:46] eddyb: Octayn: I think DOM, or just some JSON structure I can traverse
[08:46] eddyb: https://github.com/emberfeather/node-xml2object
[08:46] graeme_f: is everyone using nave these days or still nvm?
[08:46] eddyb: that one looks nice, but it doesn't say what it can and can't do
[08:46] stafamus has joined the channel
[08:47] eddyb: or https://github.com/Leonidas-from-XIV/node-xml2js/
[08:47] Octayn: eddyb: might checkout libxmljs.
[08:47] eddyb: Octayn: I hate how I have two billion options :P
[08:48] Octayn: I've used xml2js and I recall having some issues with 0.6.x but after that worked like a charm
[08:48] eddyb: also, I would like something js-only. I can't think of a reason to have bindings to a C or C++ library
[08:49] eddyb: it's not like those libs use SSE4.2 to parse XML :P
[08:49] Octayn: libxml is already damn good, no need to try and fake its greatness.
[08:49] eddyb: lol
[08:49] eddyb: it's XML
[08:49] eddyb: I want a ready solution because I'm lazy like that
[08:50] Hanspolo has joined the channel
[08:50] Qalqi: is node.js ebook available online?
[08:50] Octayn: Qalqi: I don't think any books have been written about node specifically (though I could easily be wrong)
[08:51] overthemike has joined the channel
[08:51] Qalqi: not necessarily specific!
[08:51] Qalqi: anything would be fine to begin with
[08:51] Octayn: http://eloquentjavascript.net/
[08:51] mendel_ has joined the channel
[08:53] tornad has joined the channel
[08:54] graeme_f: Qalqi - http://www.manning.com/cantelon/
[08:54] Qalqi: thanks 
[08:56] graeme_f: Qalqi - personally I'd worry about any node book becoming out of date really fast at the moment
[08:56] Qalqi: how come?
[08:56] Qalqi: wouldnt it take long time to release newer versions of node?
[08:56] Octayn: No
[08:57] graeme_f: Qalqi: because it's still changing significantly and regularly :)
[08:57] jyp has joined the channel
[08:57] Octayn: There's been a new version at least every couple of weeks
[08:57] graeme_f: Qalqi: also because a lot of it is about the ecosystem which changes even more
[08:57] Qalqi: seems very enticing to look at it
[08:58] graeme_f: a book would be good for a high-level view but once you start looking at code then github, blogs and the docs will be much better imo
[08:59] Octayn: and the api docs are great
[08:59] rendar: graeme_f: you mean also libuv code, and other deps?
[09:00] Sahua has joined the channel
[09:00] graeme_f: rendar: when i said what? :)
[09:01] rendar: once you start looking at code, so also start looking at libuv code, etc :)
[09:01] graeme_f: rendar: noo I mean for examples and stuff to learn from
[09:02] graeme_f: unless that floats your boat of course! :D
[09:02] rendar: eheh :)
[09:02] rendar: yesterday i was looking at libuv, and i think its great, btw
[09:03] hz has joined the channel
[09:03] graeme_f: i'm only vaguely aware of it - is it the bit that does the async io?
[09:04] graeme_f: ACTION is a noob
[09:04] Octayn: yeah
[09:04] Octayn: in a cross-platform manner
[09:04] rendar: yep
[09:04] Octayn: Pretty impressive, I think
[09:04] Octayn: I haven't peeked under the skirt too much, but from what I've seen it's pretty clean
[09:05] graeme_f: it needs to be :)
[09:05] graeme_f: my c days are far behind me
[09:06] rendar: eheh
[09:06] jyp has joined the channel
[09:06] rendar: wouldn't be great to have node.js also in the client side? i mean, js programming in the browser which uses node.js/libuv with asynch i/o and so on in the client side..
[09:06] sreeix has joined the channel
[09:07] graeme_f: you can
[09:07] graeme_f: just not in the browser :P
[09:07] rendar: yes..
[09:07] Octayn: Wouldn't that be counter-productive to all the security and sandboxing browsers try to add?
[09:08] spolu has joined the channel
[09:09] petrjanda has joined the channel
[09:09] EhevuTov has joined the channel
[09:10] erikzaadi has joined the channel
[09:13] NinjaFox has joined the channel
[09:13] benvie: that should would be great
[09:14] Number9 has joined the channel
[09:14] ashishg has joined the channel
[09:15] Bulle has joined the channel
[09:17] Bulle has joined the channel
[09:18] Bulle: hi everybody ! Can anyone explain me how to use IRC ?
[09:19] dshaw_ has joined the channel
[09:19] tuhoojabotti: You seem to be doing fine.
[09:20] Bulle: I'm just discovering this thing, I entered a random channel because no one was answering in #Beginners...
[09:20] `3rdEden has joined the channel
[09:21] Octayn: Bulle: do you have a more specific question, because that's super vague
[09:22] tuhoojabotti: Octayn: The answer is simply yes.
[09:22] tuhoojabotti: We can help him.
[09:22] Octayn: tuhoojabotti: very zen of you
[09:23] jesusrosso has joined the channel
[09:23] Bulle: okay well I'm looking for a french channel for the moment
[09:24] Bulle: But I really don't know how to find it
[09:24] Octayn:  /msg alis help
[09:24] Octayn:  /msg alis list *fr should get you started
[09:24] qsobad has joined the channel
[09:25] Bulle: Okay I try
[09:25] Bulle: thank's
[09:26] Bulle: It's not working...
[09:26] Qzen has joined the channel
[09:27] graeme_f: this is driving me mad - can I stop zsh trying to correct "node" into "od" etc? (i'm new to mac)
[09:27] ez has joined the channel
[09:27] graeme_f: zsh: correct 'node' to 'od' [nyae]? 
[09:27] Octayn: graeme_f: rehash?
[09:27] Octayn: If node is in your PATH, it shouldn't be doing that
[09:28] graeme_f: Octayn: what's rehash? :S  node runs just fine if I say 'n'
[09:28] Octayn: graeme_f: rehash reloads the config and regenerates the cache and such
[09:28] eddyb: how can I http.get a file, with redirects considered?
[09:29] graeme_f: Octayn: oh, ok, i'll try that. thanks!
[09:29] graeme_f: Octayn: Success! Thanks again :D
[09:29] Guest89003: I downloaded the MSI from nodejs.org and when I try to compile o3 in Windows 7 the compiler tell me that it can't find node.h...I know I'm doing something wrong and it involves the NodePath variable but I'm not sure what exactly
[09:30] Bulle: Octayn : what you asked me to do is not working man (about the reshearch of the french channels)
[09:30] Octayn: Guest89003: it doesn't involve the nodepath. afaik, you have to actually build node, you can't just use the msi (but that may have changed since I knew that, stuff happens fast in nodeland)
[09:30] Octayn: Bulle: works for me
[09:31] Bulle: Arf... So I tape that : /msg alis list *fr, then enter and I just have this message on the discussion : -> *alis* list *fr
[09:31] Guest89003: Octayn: So I should download the source, build it, and then use that in my o3 build?
[09:31] graeme_f: right - better go and get some stuff done about the house before wifey returns...
[09:33] Bulle: Octayn : Arf... So I tape that : /msg alis list *fr, then enter and I just have this message on the discussion : -> *alis* list *fr
[09:33] jimt has joined the channel
[09:34] Qalqi: Is there any popular website that used node.js for it's server side?
[09:35] sj26: Qalqi: github use it for asset serving
[09:35] sj26: or asset proxying, more accurately
[09:36] Bulle has left the channel
[09:36] Qalqi: node is optimum for which kind of applications?
[09:36] Industrial: graeme_f: yea I'm going to try to serve that file by requiring it and tosourcing on boot
[09:36] sj26: Qalqi: evented, networked apps with many clients
[09:37] sj26: Qalqi: http://nodejs.org/: "Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices."
[09:37] overthemike has joined the channel
[09:38] Hanspolo has joined the channel
[09:38] benvie: it has uses outside of the server
[09:38] Qalqi: wouldnt that mean all websites would be better off using node?
[09:38] Qalqi: benvie: like what?
[09:38] konobi: it's used in WebOS to manage services on the phone/tablet, for example
[09:39] k1ttty has joined the channel
[09:39] benvie: it brings the strengths of javascript closer to the system metal
[09:39] dlg: and then uses all its memory
[09:40] benvie: no that's java
[09:40] benvie: different language
[09:40] M1l3n1um has joined the channel
[09:40] eddyb: Octayn: xml2js is no good
[09:40] eddyb: it lists tags in a container by tag name
[09:40] eddyb: I need to preserve the original order
[09:41] whitman has joined the channel
[09:41] Qalqi: eddyb: why not use jquery/?
[09:41] eddyb: lol, for what?
[09:41] Octayn: Qalqi: for parsing xml? in node?
[09:41] eddyb: I need to parse some syntax highlighting files
[09:41] bearnard has joined the channel
[09:41] Qalqi: wait
[09:41] eddyb: Octayn, Qalqi: http://www.kate-editor.org/syntax/3.7/c.xml
[09:41] Qalqi: hmm
[09:42] eddyb: so, I like xml2js, but it doesn't preserve order, which I need
[09:42] konobi: sax?
[09:43] larsschenk has joined the channel
[09:43] joshwines has joined the channel
[09:43] eddyb: konobi: sax requires too much code to handle its events
[09:44] diverdude: is it possible to call a function on a set of objects? like if object a has function tst() and i have an array with a-objects can i do myarray.tst() somehow ? and automatically tst() is called on each a-object
[09:44] Mcilvena has joined the channel
[09:44] yawNO has joined the channel
[09:44] yawNO: morning
[09:45] Joeysomo has joined the channel
[09:45] larsschenk has left the channel
[09:46] benvie: function invoke(array, name, binding, params){ return array.map(function(o){ return o[name].apply(binding || o, params) }) }
[09:46] Qalqi: noon here
[09:46] benvie: actually this
[09:46] eddyb: about xml2js, instead of {main: {subTag:['first', second']}} I need [{tag:'main', children:[{tag: 'subTag', text:'first'}, {tag: 'subTag', text:'second'}]}]
[09:46] benvie: function invoke(array, name, params, binding){ return array.map(function(o){ return o[name].apply(binding || o, params || []) }) }
[09:47] benvie: or wait was it on function on all of them?
[09:47] benvie: function invoke(array, fn, params, binding){ return array.map(function(o){ return fn.apply(binding || o, params || []) }) }
[09:47] Mcilvena has left the channel
[09:48] pickels has joined the channel
[09:48] al3xnull has joined the channel
[09:48] lzskiss has joined the channel
[09:49] benvie: oh cool github shows all the people who contributed to a file
[09:49] Octayn: yeah, new feature as of like this weak
[09:49] Octayn: *week
[09:49] sylvinus has joined the channel
[09:50] eddyb: https://github.com/teknopaul/dom-js looks nice
[09:51] jyp has joined the channel
[09:51] diverdude: any1?
[09:51] simenbrekken has joined the channel
[09:52] benvie: yes
[09:52] sethbc has joined the channel
[09:52] Guest89003: Once I compile nodejs do I point the NodePath variable to the release directory?
[09:52] benvie: diverdude https://gist.github.com/1915732
[09:53] jetienne_ has joined the channel
[09:54] eddyb: yes
[09:55] eddyb: dom-js is what I need :D
[09:55] Joeysomo has joined the channel
[09:56] hackband has joined the channel
[09:57] ccare has joined the channel
[09:57] versicolor has joined the channel
[09:58] benvie: or if you don't need parameters you can do `array.map(Function.call.bind(fn))`
[09:58] rurufufuss: anyone here with experience embedding node.js into c++?
[09:59] yawNO: do you mean C++ in node?
[10:00] rurufufuss: no actually, node.js in c++
[10:00] rurufufuss: e.g I have a text editor, I want to use v8 for extension
[10:00] yawNO: have a look @ node_native
[10:00] rurufufuss: but then I want node.js libs to work on it as well, and yeah
[10:00] Octayn: You're both saying the same thing, just differently
[10:02] rurufufuss: yawNO: thanks, I guess it's still experimental
[10:02] Morkel has joined the channel
[10:02] yawNO: rurufufuss: i've never actually used it
[10:02] rurufufuss: Octayn: is it the same? I thought "c++ in node" means exposing c++ objects as javascript objects, or do you mean also sharing the event loop as well?
[10:03] versicolor_ has joined the channel
[10:03] benvie: it's easier to interact with node instead of embedding it in entirety
[10:03] benvie: since you can just exec it and interact through stdin/stdout easily enough or pipes
[10:03] rurufufuss: hmm true
[10:04] plutoniiix has joined the channel
[10:04] rurufufuss: I suppose I did implement dnode in c++, that could work for talking to node.js as well huh
[10:04] [[zzz]] has joined the channel
[10:04] odinswand has joined the channel
[10:05] boltR has joined the channel
[10:05] benvie: https://github.com/tanepiper/SublimeText-Nodejs is an example of integrating it with an editor
[10:06] rurufufuss: woah nice, I'll need to take a look at that
[10:06] benvie: or the other way around, make a minimal c++ module for node that acts as a bridge
[10:06] benvie: with your application
[10:06] pickels has joined the channel
[10:06] benvie: or use node-ffi and provide a dll and use that as the bridge
[10:07] benvie: basically compiling all of node in is probably the least good option for that goal
[10:07] benvie: and the most difficult
[10:08] konobi: depends on the use
[10:08] benvie: for almost all imaginable uses one of the other three options has to be better
[10:09] rurufufuss: hmm, I see, I suppose node still changes quite often too huh
[10:09] benvie: it's settling down but yeah for now
[10:09] benvie: until you see that 1.0 version
[10:09] benvie: sometime in the next 6-12 months I'd wager
[10:10] benvie: ffi is really awesome btw
[10:11] rurufufuss: is this node-ffi you're talking about?
[10:11] benvie: well that's the wrapper for usage in node, but libffi is used in a lot of language runtimes
[10:11] benvie: built into some these days
[10:12] Wizek has joined the channel
[10:12] benvie: being able to prototype stuff that interacts with dynamic libraries easily is a win
[10:13] rpowell has joined the channel
[10:13] konobi: last time i looked at it )which was quite a while back) it was rather segfault-alicious... has it improved?
[10:13] benvie: if that was before january then yeah
[10:13] benvie: it has overhauled and now works on windows as well for full platform coverage
[10:14] rpowell: You guys probably get this a lot, but what's a good guide for someone starting out with Node? 
[10:14] dlg: open a text editor and google
[10:14] dlg: and then do stuff
[10:14] benvie: http://nodemanual.org/latest/
[10:14] rpowell: I googled but all the top results were SEO'd crap
[10:14] rpowell: cheers
[10:15] Morkel has joined the channel
[10:17] benvie: https://github.com/ManuelKiessling/NodeBeginnerBook
[10:17] chjj: rpowell: nodebeginner, howtonode, theres some tutorials on daily js
[10:17] rpowell: also keep in mind I'm coming from primarily a Ruby background
[10:17] rpowell: I mean, I know JS pretty well of course
[10:17] konobi: http://ejohn.org/apps/learn/
[10:18] rpowell: cool cool
[10:18] benvie: yeah that's a pretty common source of people so you'll find a decent amount from that angle
[10:18] OreoGirl has joined the channel
[10:18] benvie: the stuff for node is more likely to look vaguely similar to something in ruby than something from the browser, in structure
[10:19] Morkel has joined the channel
[10:19] unomi has joined the channel
[10:19] rpowell: cool cool
[10:24] herbySk has joined the channel
[10:26] jyp has joined the channel
[10:30] herbySk has joined the channel
[10:30] kishoreyekkanti has left the channel
[10:35] TheFuzzball: How do I find the length (bytes) for a file?
[10:36] Industrial: Anyone here has sucessfully used dnode in the browser? I can't get it to work.
[10:36] Industrial: I don't understand where to get the /dnode.js for the browser
[10:36] Industrial: and/or how it is set up
[10:37] Industrial: I have a static dir in express in __dirname + '/public'
[10:37] stagas has joined the channel
[10:40] konobi: TheFuzzball: fs.stat
[10:40] OmidRaha has joined the channel
[10:40] TheFuzzball: Just figured that out, thanks :)
[10:41] TheFuzzball: I was confused because I didn't know if I had to multiply size by blocks to get the number of bytes, or if size was the number of bytes.
[10:42] dve has joined the channel
[10:47] koo4 has joined the channel
[10:50] snearch has joined the channel
[10:51] c0smikdebris has joined the channel
[10:54] stonebranch has joined the channel
[10:56] yawNO: has anyone tried harmony's proxies on node?
[10:59] Hanspolo has joined the channel
[11:02] sreeix has joined the channel
[11:05] robhawkes has joined the channel
[11:07] zpao_ has joined the channel
[11:08] c0smikdebris has joined the channel
[11:09] bburhans has joined the channel
[11:10] lzskiss has joined the channel
[11:13] shinuza has joined the channel
[11:13] zackattack has joined the channel
[11:16] rickibalboa has joined the channel
[11:18] jsull has joined the channel
[11:18] tjmehta has joined the channel
[11:19] ^robertj has joined the channel
[11:22] benvie: https://github.com/Benvie/meta-objects https://github.com/Benvie/Direct-Proxies-Shim-Shim-for-Node-and-Chrome
[11:23] Octayn: benvie: you name things the wonkiest
[11:23] Octayn: capitals? all those hyphens?
[11:25] jetienne_ has joined the channel
[11:29] c0smikdebris has joined the channel
[11:31] yawNO: thx benvie 
[11:32] ph^ has joined the channel
[11:33] looopy has joined the channel
[11:33] eventualbuddha has joined the channel
[11:35] benvie: yeah the repo
[11:35] benvie: repos
[11:35] benvie: they don't match the actual project/libs though
[11:35] k1ttty has joined the channel
[11:36] QaDeS has joined the channel
[11:38] cjroebuck has joined the channel
[11:43] qsobad has joined the channel
[11:52] bwen has joined the channel
[11:52] bwen: anyone can help me understand why the Timeout is not getting modified ? http://pastie.org/3457277 seems to always timeout after 2mins+
[11:53] bwen: https.setTimeout() :P
[11:53] bwen: oups... req.setTimeout()... from https... you know what I mean! :D
[11:53] caffine has joined the channel
[11:53] jakko has joined the channel
[11:55] herbySk has joined the channel
[11:56] OmidRaha has joined the channel
[11:57] bwen: I cant be the only one that ran into this ...
[11:58] d1ApRiL has joined the channel
[11:59] d1ApRiL has left the channel
[11:59] vguerra has joined the channel
[11:59] Octayn: bwen: setTimeout is a global function, it isn't a method on req or anything else
[11:59] Octayn: just like regular browser JS
[11:59] rendar has joined the channel
[12:00] bwen: Octayn: dont mistake it with setTimeout... its really the timeout of an https request ...
[12:00] Octayn: Oh hey when did that get in there
[12:01] bwen: cant figure out why its not working... I'd like a shorter timeout plz
[12:01] Octayn: Try using '0'
[12:01] Octayn: Or 4
[12:01] Octayn: Not 0
[12:01] adrianF has joined the channel
[12:01] bwen: I put 1
[12:01] bwen: did you read the pastie?
[12:01] Octayn: Yes I did.
[12:01] Octayn: Try using 4
[12:01] bwen: aight
[12:02] bwen: nope still going
[12:02] d1ApRiL has joined the channel
[12:02] tornad has joined the channel
[12:02] yawNO has joined the channel
[12:02] Octayn: Is the socket inactive?
[12:02] bwen: I forgot my last test was at 200 :P
[12:03] Octayn: strace to find out
[12:04] Octayn: Two minutes is an odd timeout, the default should be 10 minutes, with TCP
[12:05] bwen: well could be right.. I just let it run and it eventually times out... I guess I cant keep my focus for 10minutes and actualy do something else and forget :D
[12:05] jlank has joined the channel
[12:05] bwen: well i'm a bit at lost... googling strace... I know I know >_<
[12:07] yawNO has joined the channel
[12:07] hipsterslapfight has joined the channel
[12:08] ditesh|cassini has joined the channel
[12:08] bwen: oh snap.. you guys understand these blobls of text, that strace spits out? O.o
[12:08] Octayn: yes
[12:08] chjj: bwen: it shows you the system calls made by the process
[12:08] Octayn: You get used to it, after doing C for a while ;)
[12:09] bwen: ahhh ic :)
[12:09] chjj: bwen: if you know what the system calls do, its very helpful
[12:09] dlg: if you can program in c that is also helpful
[12:10] dwarfy has joined the channel
[12:10] bwen: well seems pretty idle after it initiated the request
[12:11] bwen: its a call to a https domain on a different port than 443... and the server isnt actualy having that port open... just not answering?
[12:11] hellp has joined the channel
[12:11] bwen: but why is the timeout not getting set properly?
[12:11] jetienne_: http://jeromeetienne.github.com/benchrunner/#runall <- i copied mocha UI and put it on top of benchmark.js :)
[12:12] bwen: it made alot more sense when we had createClient and we coul set the timeout between the createClient and the request
[12:13] bwen: now it just... doesnt make sense to setTimeout after the request as fired up
[12:13] stagas has joined the channel
[12:16] bwen: actualy i'd put a timeout property in the options. :)
[12:16] bwen: options of the request yes?
[12:16] bwen: ok do it... waitting...
[12:18] boehm has joined the channel
[12:24] c0smikdebris has joined the channel
[12:27] __doc__ has joined the channel
[12:28] bwen: its driving me nuts :(
[12:28] nFFF has joined the channel
[12:31] aoberoi has joined the channel
[12:35] fairwinds has joined the channel
[12:36] slajax has joined the channel
[12:39] elnn has joined the channel
[12:40] robi42 has joined the channel
[12:42] lzskiss has joined the channel
[12:42] Druid_ has joined the channel
[12:42] erichynds has joined the channel
[12:45] `3rdEden has joined the channel
[12:46] ningu has joined the channel
[12:47] jomoho has joined the channel
[12:52] d0k has joined the channel
[12:53] looopy has joined the channel
[12:53] stagas has joined the channel
[12:55] lmatteis: what happens if i forget my password on npm?
[12:56] vguerra_ has joined the channel
[12:58] TheJH has joined the channel
[12:58] ningu: global thermonuclear war
[12:59] Octayn: Shall we play a game?
[12:59] jetienne_ has joined the channel
[13:02] skylamer` has joined the channel
[13:02] cjroebuck has joined the channel
[13:05] DuoSRX has joined the channel
[13:07] criswell has joined the channel
[13:09] eddyb: is /([1-9][0-9]*|0)/ a good RegExp for integers?
[13:10] dve has joined the channel
[13:10] Octayn: \d isn't good enough for you?
[13:10] eddyb: Octayn: no
[13:10] Octayn: Just checking ^_^
[13:11] ningu: you need ^ and $
[13:11] hackband has joined the channel
[13:12] eddyb: ningu: I was just checking if there's a better way
[13:12] whaley has joined the channel
[13:12] ningu: well, parseInt will accept things like 010
[13:12] ningu: even in base 10
[13:12] Octayn: Why are you disallowing leading zeros?
[13:13] eddyb: it's a strict integer
[13:13] eddyb: base 10
[13:14] tonist_ has joined the channel
[13:14] EuroNerd has joined the channel
[13:14] EuroNerd has joined the channel
[13:14] eddyb: ok, more details: it needs to match a strict integer at the start of the string, but not match anything else (like oct or hex)
[13:15] eddyb: nvm, it should work just fine, I don't need to be very strict
[13:16] saesh has joined the channel
[13:17] `3rdEden has joined the channel
[13:18] Vennril has joined the channel
[13:20] Skaag_ has joined the channel
[13:21] GodezInc has joined the channel
[13:22] kwmiebach has joined the channel
[13:23] Vespakoen has joined the channel
[13:29] merlin83 has joined the channel
[13:29] josh-k has joined the channel
[13:30] aoberoi has joined the channel
[13:31] _yoy_ has joined the channel
[13:31] pickels has joined the channel
[13:32] looopy has joined the channel
[13:34] chjj has joined the channel
[13:35] mehlah has joined the channel
[13:35] jimt_ has joined the channel
[13:35] yawNO has joined the channel
[13:38] jxie has joined the channel
[13:40] Edy has joined the channel
[13:42] mnkNja has joined the channel
[13:43] aoberoi has joined the channel
[13:43] yawN has joined the channel
[13:45] catlaya has joined the channel
[13:47] crutex has joined the channel
[13:47] crutex has joined the channel
[13:49] al3xnull has joined the channel
[13:49] kwmiebach_ has joined the channel
[13:51] plutoniix has joined the channel
[13:52] gde33 has joined the channel
[13:52] yijinsei has joined the channel
[13:53] nibblebot has joined the channel
[13:55] yawNO has joined the channel
[13:56] ph^ has joined the channel
[13:57] h00k1 has joined the channel
[13:57] wizonesolutions has joined the channel
[13:57] yijinsei: hi new here. 
[13:57] yawNO has joined the channel
[14:01] briancray has joined the channel
[14:01] bizniz98 has joined the channel
[14:02] andrehjr_ has joined the channel
[14:03] leoapost has joined the channel
[14:04] amigojapan has joined the channel
[14:04] fairwinds has joined the channel
[14:04] merlin83 has joined the channel
[14:05] andrehjr_: /nick andrehjr
[14:08] blup has joined the channel
[14:10] c4milo has joined the channel
[14:12] jesusrosso has joined the channel
[14:13] diva has joined the channel
[14:14] nibblebot has joined the channel
[14:15] jsull_ has joined the channel
[14:16] davidwalsh has joined the channel
[14:16] yawNO has joined the channel
[14:18] c0smikde_ has joined the channel
[14:19] nibblebot has joined the channel
[14:20] koo4 has joined the channel
[14:21] nibblebot has joined the channel
[14:21] harthur has joined the channel
[14:24] coderarity: what does a uv_req_t represent in libuv? from what I can tell, it just has a type and some "data"
[14:24] tonist has joined the channel
[14:24] coderarity: also uv_handle_t
[14:26] looopy has joined the channel
[14:26] Fodi69 has joined the channel
[14:26] Fodi69: y u no keep require.paths :(
[14:26] erikzaadi has joined the channel
[14:27] mmalecki: Fodi69: lol
[14:27] mmalecki: coderarity: you should probably ask on #libuv
[14:27] subbyyy has joined the channel
[14:27] bradleyg has joined the channel
[14:29] merlin83 has joined the channel
[14:29] coderarity: mmalecki: cool, thanks
[14:30] arduix1 has joined the channel
[14:30] panosru has joined the channel
[14:31] tmcw has joined the channel
[14:31] adrianF has joined the channel
[14:32] ^robertj has joined the channel
[14:32] dve has joined the channel
[14:33] c0smikdebris has joined the channel
[14:33] tjmehta_ has joined the channel
[14:33] c0smikd__ has joined the channel
[14:34] qsobad has joined the channel
[14:34] arduix2 has joined the channel
[14:34] Swizec has joined the channel
[14:34] eddyb: http://www.youtube.com/watch?v=1DinASQRRFA
[14:34] sreeix has joined the channel
[14:35] jefferai has joined the channel
[14:35] dlmalloc has joined the channel
[14:36] charlenopires has joined the channel
[14:37] bearnard has joined the channel
[14:39] willwhite has joined the channel
[14:41] jsull has joined the channel
[14:42] lupomontero has joined the channel
[14:43] looopy has joined the channel
[14:44] lupomontero has joined the channel
[14:46] k1ttty has joined the channel
[14:47] vguerra has joined the channel
[14:49] francisl has joined the channel
[14:51] Destos has joined the channel
[14:52] Joeysomo has joined the channel
[14:52] _th_n has joined the channel
[14:53] graeme_f has joined the channel
[14:54] nibblebot has joined the channel
[14:55] _baton_ has joined the channel
[14:55] johnhamelink has joined the channel
[14:56] `3rdEden has joined the channel
[14:56] c0smikdebris has joined the channel
[14:57] sh1mmer has joined the channel
[14:58] kriszyp has joined the channel
[15:00] erikzaadi has joined the channel
[15:02] panosru has joined the channel
[15:03] skylamer`: how can make to that the required modules in the main application file, is avalaible to the others modules exports in files that are in subdirs?
[15:03] skylamer`: :)
[15:03] yawN has joined the channel
[15:08] c0smikdebris has joined the channel
[15:12] gorekee has joined the channel
[15:18] stagas has joined the channel
[15:23] Fodi69 has left the channel
[15:25] RLa has joined the channel
[15:25] sandfox has joined the channel
[15:25] hipsterslapfight has joined the channel
[15:26] admin_ has joined the channel
[15:27] nibblebot has joined the channel
[15:27] c0smikdebris has joined the channel
[15:29] saesh has joined the channel
[15:30] sh1mmer has joined the channel
[15:31] panosru has joined the channel
[15:32] broersa has joined the channel
[15:34] warz has joined the channel
[15:35] whaley has joined the channel
[15:35] Qalqi has joined the channel
[15:35] isaacs has joined the channel
[15:36] rickibalboa: I have a question. I have a nodejs tcp server that handles the state of many child servers, when something happens the state server tells a child server to perform an action, it can be potentially expensive, however for most occasions it wont be. Would it be best to fork a new process for this operation?
[15:36] gorekee has joined the channel
[15:36] dve has joined the channel
[15:36] rickibalboa: I have the ability to determine how expensive it will be (sort of)
[15:38] rickibalboa: I don't think I can afford to have the child server hold up for a couple of seconds and hold listening for new data (because a lot of data is passed to and from these child servers), however forking a new process is costly too.
[15:39] sh1mmer has joined the channel
[15:41] pandeiro has joined the channel
[15:42] c0smikdebris has joined the channel
[15:45] louissmit has joined the channel
[15:45] ohtogo has joined the channel
[15:47] Hanspolo has joined the channel
[15:50] EvRide has joined the channel
[15:50] rwaldron has joined the channel
[15:51] kirbysayshi has joined the channel
[15:55] looopy has joined the channel
[15:57] c0smikdebris has joined the channel
[15:58] wereHamster: does npm run the test script after installation? Can it be configured to do so?
[15:58] stagas has joined the channel
[15:59] nibblebot has joined the channel
[15:59] arvidkahl has joined the channel
[16:02] ovnicraft has joined the channel
[16:02] ramitos has joined the channel
[16:02] thinkt4nk has joined the channel
[16:03] andrehjr has joined the channel
[16:03] arvidkahl has joined the channel
[16:03] boogyman has joined the channel
[16:03] boogyman has joined the channel
[16:05] boogyman has joined the channel
[16:05] boogyman has joined the channel
[16:08] _trev has joined the channel
[16:08] c0smikdebris has joined the channel
[16:10] isaacs: wereHamster: yes.  `npm config set npat true`
[16:10] boogyman has joined the channel
[16:10] boogyman has joined the channel
[16:10] isaacs: wereHamster: that will slow things down a LOT.
[16:11] ramitos has joined the channel
[16:12] elnn has joined the channel
[16:12] pvankouteren has joined the channel
[16:12] samuelgoodwin has joined the channel
[16:14] wereHamster: do many people have that enabled?
[16:14] _tors has joined the channel
[16:15] wereHamster: I find that the test directories are usually rather large.
[16:16] RLa: you could also fix the dependency to single version and test that once
[16:17] subbyyy has joined the channel
[16:17] al3xnull has joined the channel
[16:17] argami has joined the channel
[16:19] subbyyy has joined the channel
[16:20] jetienne has joined the channel
[16:21] jetienne_ has joined the channel
[16:22] skylamer`: how to make a one request from the client, then make multiple request to other resource from the server and then return the data combined in one response ... ? :)
[16:22] JacobSingh has joined the channel
[16:23] Skaag has joined the channel
[16:23] wereHamster: make one request, then the other, then the third one, then combine the results and return them
[16:23] mmalecki: dunno, you should probably write some code
[16:23] saesh has joined the channel
[16:24] nibblebot has joined the channel
[16:25] skylamer`: yes i wrote, but doesnt seems to work to now :}
[16:25] qsobad has joined the channel
[16:27] skylamer`: wereHamster, i am making right that something, i am do the requests with the different datas, may be have to use some thing in the jade templates which to make that working fine, idk
[16:27] wereHamster: skylamer`: you can not use asynchronous code in a jade template. you have to make those requests in your route handler (or middleware)
[16:28] skylamer`: k then, but keep getting the 'headers already send, cannot send them already' errorz
[16:28] larsschenk has joined the channel
[16:28] larsschenk has left the channel
[16:30] nibblebot has joined the channel
[16:30] samsonjs has joined the channel
[16:31] ningu: skylamer`: don't call res.render() until the callback
[16:31] ningu: async functions will return before they are finished, so the following lines will be executed first
[16:31] ningu: *then* the callback
[16:31] ningu: so if you call res.send or res.render twice because of that, you'll get that error
[16:32] dnolen has joined the channel
[16:32] sethbc has joined the channel
[16:33] skylamer`: res.send i am just sending json
[16:33] skylamer`: or res.json
[16:33] skylamer`: :)
[16:33] skylamer`: yea its in cycle in which the data is generated
[16:33] skylamer`: may be have to put it outside of it
[16:33] ningu: ?
[16:33] skylamer`: but then in the for() i have to generate the combined data 
[16:34] ningu: I dunno what you are doing
[16:34] ningu: you can pastebin the code
[16:34] skylamer`: kkk
[16:36] lperrin has joined the channel
[16:37] lperrin has joined the channel
[16:38] lperrin1 has joined the channel
[16:38] esundahl_ has joined the channel
[16:38] tonist has joined the channel
[16:38] lperrin2 has joined the channel
[16:39] CarterL has joined the channel
[16:39] skylamer`: also here, http://pastie.org/3464579
[16:40] wereHamster: you should call res.json(zzz); only once
[16:40] wereHamster: first make all the requests, then collect the responses, then call res.contentType(); res.json() *once*
[16:40] skylamer`: i know
[16:40] skylamer`: but how the collection to do it mm
[16:41] lperrin has joined the channel
[16:41] ningu: skylamer`: use async.forEach
[16:41] wereHamster: make one request, wait for the response, make the second request, wait for that response, combine both responses, send them back to the client
[16:41] ningu: if you need to do it in sequence you can do async.series
[16:42] spcshpopr8r has joined the channel
[16:42] spcshpopr8r: hallo #node.js
[16:42] bizniz98 has joined the channel
[16:43] lperrin1 has joined the channel
[16:44] redir has joined the channel
[16:45] _baton_ has joined the channel
[16:45] lperrin has joined the channel
[16:46] ningu: skylamer`: https://github.com/caolan/async
[16:46] ningu: there are good examples there
[16:46] skylamer`: k
[16:48] volkan has joined the channel
[16:48] lperrin1 has joined the channel
[16:49] spolu has joined the channel
[16:49] lperrin1 has joined the channel
[16:49] diogogmt has joined the channel
[16:49] Blorb has joined the channel
[16:50] lperrin1 has joined the channel
[16:50] devongovett has joined the channel
[16:50] lperrin has joined the channel
[16:52] pid1 has joined the channel
[16:52] lperrin has joined the channel
[16:53] brianseeders has joined the channel
[16:55] lperrin1 has joined the channel
[16:55] c0smikdebris has joined the channel
[16:56] skylamer`: and when i have a 'dynamic' amout of requests how can i know to set exactly that amount for the functions and callbacks in the async things? :)
[16:57] lperrin has joined the channel
[16:58] lperrin2 has joined the channel
[16:58] zomg: skylamer`: make an array?
[16:59] ramitos has joined the channel
[17:00] lperrin has joined the channel
[17:00] skylamer`: may be its not like that, some thing other have to do...
[17:01] lperrin1 has joined the channel
[17:02] lperrin2 has joined the channel
[17:02] hiepvd has joined the channel
[17:03] retornam has joined the channel
[17:03] hiepvd: Please show me the way to run my first hello_world.js
[17:03] ningu: skylamer`: make an array to pass to the async functions
[17:03] ningu: hiepvd: there are plenty of tutorials on the web
[17:03] lperrin1 has joined the channel
[17:04] lperrin has joined the channel
[17:05] lperrin1 has joined the channel
[17:06] Skaag_ has joined the channel
[17:06] Number9 has joined the channel
[17:06] lperrin1 has joined the channel
[17:07] lohkey has joined the channel
[17:08] rook2pawn has joined the channel
[17:10] sdwrage has joined the channel
[17:11] jetienne_: q. is there a network service performing a jslint ? 
[17:11] mansoor has joined the channel
[17:12] nFFF has joined the channel
[17:13] c4milo1 has joined the channel
[17:15] cjm has joined the channel
[17:15] looopy has joined the channel
[17:17] AviMarcus has joined the channel
[17:18] MartinCleaver has joined the channel
[17:19] codejunky_ has joined the channel
[17:20] lupomontero has joined the channel
[17:20] TheJH: jetienne, for a little bit of pasted JS?
[17:20] TheJH: pretty sure I've seen that. somewhere :D
[17:21] pid2 has joined the channel
[17:22] codejunky_: hi everybody.had a little issue i needed some help with. i wrote an application once on an old version of socket.io 0.6.2. most of the client side uses htat version.i however   installled socket.io  from npm and it gave me the latest version.i howerver want  to test using the version 0.6.2. is there any way i can run both or possibly downgrade .i cant seem to get that version using  npm.
[17:22] skyler_brungardt has joined the channel
[17:23] ph^_ has joined the channel
[17:23] _th_n has joined the channel
[17:25] sh1mmer has joined the channel
[17:25] ningu: npm install <name>@<version>
[17:26] tmcw has joined the channel
[17:27] Qzen: You could just install 2 version of node
[17:27] Qzen: as i have
[17:27] Qzen: and in one of them i have old version of everything
[17:27] Qzen: ln -s /path/to/old/version oldnode
[17:27] skylamer`: may be array from these functions
[17:27] Qzen: then you start by using "oldnode /path/to/.js-file"
[17:28] Qzen: incase you have linux :P
[17:28] ningu: Qzen: not really necessary if it's just one old module
[17:28] nkanthikiran has joined the channel
[17:28] Qzen: in windows i am not sure
[17:28] ningu: since they all are locally stored in node_modules anyway
[17:28] skylamer`: ningu, i made it with forEach from the async module, and now the iterator ( item ) is containing all the entries in the array, how can i get them one by one?
[17:28] skylamer`: i mean to apply a function to every entry in that arrayz
[17:28] Qzen: no its not but i have a chat server running old versions and then i have a irc-bot using latest versions
[17:28] Qzen: so i cant swap modules all the time
[17:29] Qzen: thats why i have 2 versions installed
[17:29] ningu: skylamer`: iterator is a function, just pass a function that does what you want to do
[17:29] ningu: you can store the results in an array or however you want
[17:29] ningu: the iterator takes a callback
[17:30] ningu: so you have to pass that callback to the async function you're calling
[17:30] tmike: .npmignore, do I need to specify all git stuff in there, like .git/ and .gitignore?
[17:30] codejunky_: @ningu.tried the installation using  npm install  but said version not found
[17:30] skylamer`: oh , yea understand
[17:30] stonebranch has joined the channel
[17:30] AvianFlu: tmike, it's a good idea to - although I think .git is ignored by default
[17:31] ph^ has joined the channel
[17:31] AvianFlu: or maybe it's just no dotfiles by default
[17:31] ningu: tmike: it should be in the docs, I know it looks for .gitignore if .npmignore is not found, but it might not look there if you have .npmignore
[17:31] tmike: Does .npmignore get published along with the rest of the package?
[17:31] AvianFlu: tmike, yes
[17:31] tmike: okay
[17:31] tmike: Thank you.
[17:34] ph^_ has joined the channel
[17:35] skylamer`: ningu, thank you for your patiently helping, but now when im passing it to the function the item is a some thing like a concated string of the items of the array, how to separate them in different items and parse them one by one ... ? :)
[17:35] jarek has joined the channel
[17:35] jarek has joined the channel
[17:35] ph^__ has joined the channel
[17:36] spion1 has joined the channel
[17:37] skylamer`: i made it
[17:37] M1l3n1um has joined the channel
[17:38] ningu: skylamer`: not sure what you are talking about, paste your code again
[17:39] skylamer`: with one for cycle , separated them :)
[17:39] samuelgoodwin has joined the channel
[17:40] arcanis has joined the channel
[17:40] jarek__ has joined the channel
[17:41] andrehjr has joined the channel
[17:46] tonist_ has joined the channel
[17:47] ph^ has joined the channel
[17:47] TooTallNate has joined the channel
[17:48] stagas has joined the channel
[17:49] dnolen: if you're a student into compilers/debuggers, Lisp, Node.js, consider submitting/improving a project idea here - http://dev.clojure.org/display/community/Google+Summer+of+Code+2012
[17:50] andrehjr has joined the channel
[17:50] themiddleman_itv has joined the channel
[17:52] lperrin has joined the channel
[17:55] ryanfitz has joined the channel
[17:58] stagas has joined the channel
[18:00] jsull_ has joined the channel
[18:00] mansoor: dnolen, hi
[18:00] mansoor: what kind of closure related things can be done on node.js? 
[18:04] dnolen: mansoor: well currently ClojureScript's main REPL is Rhino, robust REPL support for Node.js would be desirable.
[18:05] dnolen: Node.js delivers V8 performance, a rich API and many libraries.
[18:05] mansoor: heh sorry i meant clojure :)
[18:06] teadict: stupid backbone with no docs
[18:07] dnolen: mansoor: doesn't that answer your question?
[18:07] mansoor: dnolen, it does, thank you. I'm reading up on the subject now
[18:08] stisti has joined the channel
[18:09] cjm has joined the channel
[18:09] teadict: who else hangs all the app from a window.XXX object?
[18:09] teadict: it's good, ain't it?
[18:09] dmwuw has joined the channel
[18:09] teadict: almost a must
[18:09] ningu: teadict: do you like backbone?
[18:09] skylamer`: so ningu i made array which i want to put the result json there everytime the item is succesfully generated and there is undefined... :)
[18:09] teadict: ningu: yes
[18:09] teadict: wai
[18:09] hellp has joined the channel
[18:10] ningu: skylamer`: I told you awhile ago I need to see the code
[18:10] ningu: teadict: just wondering, I haven't used any client js framework yet
[18:10] teadict: dig it
[18:10] ningu: well, jquery, but that doesn't really count for this category
[18:10] dodo has joined the channel
[18:10] djbell has joined the channel
[18:12] teadict: it's not a fw though...
[18:12] skylamer`: ningu its simply declaring an somearray = []; then want to add there the json items and its undefined :"}
[18:12] teadict: well, yes it is, but 
[18:12] teadict: not of the type that facilitates you stuff
[18:12] teadict: it gives you rules to clean your client
[18:13] hij1nx has joined the channel
[18:14] codejunky_ has joined the channel
[18:16] tonist has joined the channel
[18:20] Fannon has joined the channel
[18:21] _th_n has joined the channel
[18:22] Vespakoen has joined the channel
[18:23] Druid_: http://ln.tc/xoJdXp
[18:25] FireFly has joined the channel
[18:25] yawN: uhm
[18:26] thetristan has joined the channel
[18:26] mansoor: :S
[18:27] yawN: i'm thinking
[18:27] yawN: thinkers gonna think
[18:27] matejv has joined the channel
[18:27] mansoor: no need
[18:27] mansoor: the answer is always 42
[18:28] garrensmith has joined the channel
[18:31] level09 has joined the channel
[18:31] Cromulent has joined the channel
[18:34] codejunky_ has joined the channel
[18:41] shellox has joined the channel
[18:42] shellox: hi
[18:42] overthemike has joined the channel
[18:42] shellox: what's a good xml parser for node.js?
[18:42] shellox: there are a lot out, but which is the best?
[18:47] mikeal has joined the channel
[18:47] dthompso99 has joined the channel
[18:48] dthompso99 has left the channel
[18:48] `3rdEden has joined the channel
[18:49] Hebo has joined the channel
[18:50] mandric has joined the channel
[18:50] mraxilus has joined the channel
[18:52] hackband has joined the channel
[18:52] nickp_ has joined the channel
[18:52] testingAPP has joined the channel
[18:52] testingAPP: hi
[18:53] strager: shellox: Best for what?
[18:53] strager: There are DOM and SAX parsers.
[18:53] shellox: strager: best in sum dom + sax
[18:54] shellox: and speed ;)
[18:54] strager: Good luck with that.
[18:54] strager: =]
[18:54] testingAPP: could someone explain me why a developer should use NODE.js to create a web application (or website) ? I know that node.js works async, it is a good thing but if i'm write a website that query a database, why it should be async IF i do not have to do nothing between the query and the results of the query ? what is the scope of node.js ? thanks.
[18:55] strager: testingAPP: You don't need async if you're doing nothing else.
[18:55] mmalecki: he is, handling other requests
[18:55] strager: testingAPP: However, sometimes it reduces server strain (threading resources, etc.) to have an event loop instead of blocking threads.
[18:56] strager: testingAPP: Node (for servers) is good for real-time interactions.  Web sockets, lots of real-time Ajax, video game servers, chat servers, etc.
[18:56] strager: It doesn't really shine for things like blogs and CMS's.
[18:57] rauchg has joined the channel
[18:58] testingAPP: stranger, so if someone have to develop a CMS or blog like WORDPRESS.... node.js should be NOT good?
[18:58] tkaemming has joined the channel
[18:59] testingAPP: stranger, or web application that use database
[18:59] mansoor has left the channel
[19:00] strager: *strager
[19:00] dene_ has joined the channel
[19:00] strager: Whether or not it uses a database doesn't change Node.js's usefulness.
[19:00] astropirate has joined the channel
[19:00] testingAPP: eheh, yes escuse me
[19:00] strager: What matters is the actual interactions going on.
[19:00] perezd has joined the channel
[19:01] strager: A blog or CMS usually has one or few queries per page load.  They're also not real-time and don't demand low latency.
[19:01] testingAPP: strager, wait, node.js is surelly useful BUT for BLOG, website, that MUST to wait the results of the query, I think it is pointless, no?
[19:01] fairwinds has joined the channel
[19:01] ningu: node also has good clustering support and is faster than most/all other interpreted languages, to my knowledge.
[19:02] M28 has joined the channel
[19:02] M28: hey everyone
[19:02] rickibalboa: Is there an easy way of getting the current process' CPU usage?
[19:02] M28: Is there anything like "seal" in node.js?
[19:02] M28: I wanna seal an object that is read from a .json file to prevent modifications
[19:02] blup_ has joined the channel
[19:02] strager: testingAPP: It's not pointless; it's just that it won't be as elegant in Node as in something like Ruby or PHP.
[19:02] testingAPP: ningu, yes, but i mean, if i MUST to wait the resul tto continue my script, an async server is not useful, no?
[19:03] M28: .a
[19:03] M28: ..a
[19:03] M28: ops
[19:03] strager: rickibalboa: http://nodejs.org/docs/latest/api/os.html#os.loadavg
[19:03] testingAPP: strager, i'm talking about performace of the script
[19:03] rickibalboa: strager, thanks
[19:03] strager: testingAPP: It'd be useful if you're dealing with multiple databases or many queries which are independent of each other.
[19:04] strager: testingAPP: If you have to talk to the Facebook API, make a few database calls, read stuff from the file system, and serve up HTML, and some of those can be done separately from the others, Node may perform better than purely serial execution.
[19:04] ningu: I don't know the async calls reduce performance, they just change your coding style.
[19:04] strager: Of course, you have to write it properly.  ;P
[19:05] ningu: I don't know if*
[19:05] ningu: if anything, as strager said, it gives you the option for doing some things in parallel. but if it's just one query, coding async vs. sync should be the same in terms of performance -- just coded differently.
[19:06] testingAPP: ah ok
[19:07] M28: Is Object.seal bad? Some guides say to not use it...
[19:07] ningu: I haven't done benchmarks, so I don't know.
[19:07] ningu: my app is not about performance, but functionality.
[19:07] strager: M28: I recall that Object.freeze didn't throw any errors which made me angry.
[19:07] strager: I would guess that Object.seal is the same.
[19:07] M28: ohh
[19:08] strager: At least this was in Chrome 12's V8.
[19:08] strager: (I haven't tried it in Node.)
[19:08] M28: strager, did you use "use strict"?
[19:08] avalanche123 has joined the channel
[19:08] nibblebot has joined the channel
[19:09] jacobolus has joined the channel
[19:09] strager: M28: Perhaps not.
[19:09] M28: it seems it does throws an error in strict mode
[19:09] M28: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/freeze
[19:09] strager: Why would the ES5 people do that?
[19:09] strager: Douches.  =\
[19:10] M28: Is Object.freeze recursive?
[19:10] strager: I don't think so.
[19:10] M28: let me see
[19:10] M28: nope
[19:10] M28: damn
[19:10] M28: THEN WHAT'S THE GODDAMN POINT?
[19:12] strager: Well for something like Point it'd be useful.
[19:12] strager: Which is what I was using it for (kinda).
[19:12] strager: But then I found I don't get errors (just silent failures) then gave up on it.
[19:12] strager: (I wanted to use it to catch programming errors (accidentally editing the wrong object or wahtever).)
[19:12] M28: yep I know
[19:12] petrjanda has joined the channel
[19:15] Druide__ has joined the channel
[19:15] koo4 has joined the channel
[19:17] M28: I just wrote a function to freeze objects recursively and I'm using strict mode
[19:17] M28: seems to work fine now
[19:17] mikeal has joined the channel
[19:18] nealstewart has joined the channel
[19:20] graeme_f: strager> I see your Point
[19:20] jesusrosso has joined the channel
[19:20] graeme_f: that might have been funnier 8 minutes ago, sorry :/
[19:21] patcito has joined the channel
[19:22] astropirate: Hello all
[19:22] astropirate: I know next to nothing about sys admin :(
[19:22] astropirate: I want to setup node.js on a server
[19:22] nealstewart: i'm trying to communicate with a child node process using child.stdin
[19:23] nealstewart: and it doesn't seem to be working
[19:23] nealstewart: https://gist.github.com/1918437
[19:23] astropirate: is it a good practice to set node up under a different user like apache?
[19:23] nealstewart: can anyone see what i'm doing wrong?
[19:23] strager: graeme_f: xD
[19:23] strager: M28: Just be sure it works with getters and setters and circular references.
[19:23] strager: =]
[19:23] strager: astropirate: Just run it as a different user ... ?
[19:23] M28: strager, it's read from a json file
[19:23] TooTallNate has joined the channel
[19:23] strager: M28: okay
[19:24] M28: I just read a lot of data from a .json and don't want to accidentally modify it
[19:24] astropirate: strager, o_O
[19:24] M28: 8 ms to read the data, 32 ms to freeze everything, lol
[19:24] strager: nealstewart: Your child needs to process.stdin.resume()
[19:24] nealstewart: strager: when?
[19:25] strager: nealstewart: Any time.  After a tick after .resume() is called, 'data' events will start flowing in.
[19:25] relix has joined the channel
[19:26] whaley has joined the channel
[19:26] dscape: solaris/windows/inux ?
[19:27] dscape: damn irc cloud!!
[19:27] dscape: any (stable) library to write to the operative system log (linux/solaris/windows) ?
[19:27] yawNO has joined the channel
[19:28] norviller has joined the channel
[19:28] avalanche123 has joined the channel
[19:29] merlin83 has joined the channel
[19:30] hipsterslapfight has joined the channel
[19:31] nealstewart: strager: wicked. thanks.
[19:32] ericmuyser has joined the channel
[19:32] m00p has joined the channel
[19:36] zemanel has joined the channel
[19:36] TooTallNate: dscape: doesn't syslog have a tcp protocol?
[19:36] TooTallNate: i'm sure someone's implemented it
[19:36] artusrocha has joined the channel
[19:39] joaojeronimo has joined the channel
[19:40] hotchkiss has joined the channel
[19:40] robi42 has joined the channel
[19:41] d1ApRiL has left the channel
[19:41] Gary has joined the channel
[19:42] jetienne_ has joined the channel
[19:43] stagas has joined the channel
[19:43] shipit has joined the channel
[19:48] tonist_ has joined the channel
[19:49] omarpta has joined the channel
[19:50] graeme_f: i'm starting up my server (with child_process.spawn) during end-to-end tests and i need to stop it after each one, is there a way to get a callback when the process dies?
[19:51] omarpta has left the channel
[19:52] graeme_f: this doesn't seem to work: https://gist.github.com/061ff05266fd0954cb69
[19:52] looopy has joined the channel
[19:53] philipd has joined the channel
[19:55] eddyb: hmm
[19:55] eddyb: any idea how costy String.slice is?
[19:56] eddyb: or is there a way to force RegExp to match to a given starting position in a string?
[19:56] ningu: you could always put in ^.{foo}
[19:56] eddyb: something like /^pattern/ but ^ matching from a given index, not 0
[19:56] M28: you can slice the string...
[19:56] ningu: where foo is the number of chars to skip
[19:57] M28: oh nvm
[19:57] M28: I just saw that
[19:57] eddyb: ningu: no, that's gotta be at least as costy as slicing
[19:57] M28: There's a "sticky" flag in firefox's js afaik
[19:58] nFFF has joined the channel
[19:58] M28: But I'm not sure if it exists in node.js
[19:58] eddyb: M28: you mean v8
[19:59] eddyb: .. var r = /^a/y; console.log(r.sticky)
[19:59] M28: Well, node.js can modify v8 as much as it wants to, so chrome's v8 can be different from node.js's v8
[19:59] eddyb: M28: not really
[19:59] eddyb: RegExp's in V8 are hardcore
[19:59] eddyb: compiled to machine code
[19:59] M28: still possible to modify, if you're good enough :P
[20:00] M28: eddyb
[20:00] M28: that throwed an error
[20:00] eddyb: yepp
[20:00] dshaw_ has joined the channel
[20:00] M28: you could try jsperf.com to see how much slice will affect perfomance
[20:01] eddyb: oh, yeah, thanks
[20:02] rook2pawn: am i doing this right? (ejs) http://pastie.org/3466110 
[20:02] wingie has joined the channel
[20:07] dscape: TooTallNate 
[20:07] dscape: argh
[20:07] larsschenk has joined the channel
[20:08] larsschenk has left the channel
[20:08] boltR has joined the channel
[20:08] stagas has joined the channel
[20:08] hgggg has joined the channel
[20:08] eddyb: M28: http://jsperf.com/string-slice-perf
[20:08] eddyb: I hope chrome doesn't have dead code magic
[20:09] eddyb: s/chrome/v8/
[20:09] hgggg: hi guys! there is any way to pass an extra param to forEach from async module? iterator(item, callback) 
[20:10] M28: eddyb
[20:10] skylamer`: hgggg, may be u can just make a callback to other function and there add the additional param :)
[20:10] eddyb: M28: I updated with another test, without the .charCodeAt()
[20:10] hgggg: well, i need to send them before :)
[20:10] hgggg: from async to next function, i update somethign in redis
[20:11] M28: make a test with a regex, with slice and without slice to see how much slicing takes comparated to the regex
[20:11] eddyb: regex?
[20:11] eddyb: I wouldn't use the regex trick anywa
[20:11] skylamer`: hgggg, its the same timing :)
[20:11] eddyb: *anyway
[20:11] hgggg: pfu ok :)
[20:12] M28: regex without the "y", just a wrong regex to test how long the regex test takes
[20:12] robhawkes has joined the channel
[20:13] eddyb: M28: from what I can see, accessing a single element is twice as fast as slicing a string
[20:14] eddyb: so unless v8 removed dead code, it's a fast operation
[20:14] storrgie has joined the channel
[20:14] M28: oh wait
[20:14] cwo has joined the channel
[20:15] M28: you only need to access a single character?
[20:15] joshthecoder has joined the channel
[20:15] blup__ has joined the channel
[20:15] M28: I tested a while ago, in firefox [] was faster than .charAt, not sure in those days
[20:15] overthemike has joined the channel
[20:16] cwo has joined the channel
[20:16] eddyb: M28: accessing a single character is like a slice, from what I can see
[20:17] TooTallNate has joined the channel
[20:20] blup has joined the channel
[20:20] AkhiAbdullah has joined the channel
[20:21] tmcw has joined the channel
[20:22] cjm has joined the channel
[20:23] eddyb: M28: http://jsperf.com/string-slice-perf
[20:23] eddyb: not that bad
[20:24] ningu: what does ~~ do in this case?
[20:24] eddyb: ningu: the smallest int() ever :P
[20:24] ningu: hehe
[20:25] ningu: you mean parseInt?
[20:25] harthur has joined the channel
[20:25] criswell has joined the channel
[20:25] eddyb: yeah, and Math.floor()
[20:26] ningu: is that like Math.pedalToMetal()?
[20:26] M28: note that for negative numbers, it's like Math.ceil
[20:27] TooTallNate: does that make Math.ceil() kinda like Math.highAsAKite()?
[20:27] eddyb: says TooTall...
[20:27] eddyb: M28: eh. fine for positive integers
[20:27] eddyb: I think it's somewhat fast
[20:27] M28: it's the same speed for v8
[20:28] jetienne_: ningu: it is the slow unreadable version
[20:28] kirbysayshi has joined the channel
[20:28] M28: v8 is great at those micro optimizations
[20:29] jetienne_: micro optim is for compiler
[20:30] jetienne_: coders focus on efficient and readable code :)
[20:30] vguerra has joined the channel
[20:30] M28: that's what I said, v8 does the micro optimizations for you
[20:32] pickels: I have an assert statement that when it fails it using an object as the msg. Why is it so crappy formatted and can I turn it off so the object is just on one line? This is what i mean: http://imgur.com/9m5Ud
[20:32] st_luke_ has joined the channel
[20:32] Eruadan has joined the channel
[20:32] stonebranch has joined the channel
[20:33] joshontheweb has joined the channel
[20:33] eddyb: pickels: you can use JSON.stringify to make it look better
[20:33] skm has joined the channel
[20:34] pickels: eddyb, ah that's a good tip. Thanks
[20:35] francisl has left the channel
[20:36] phidah has joined the channel
[20:36] hotchkiss has joined the channel
[20:38] jkridner has joined the channel
[20:39] Druid_ has joined the channel
[20:42] Eruadan: does anyone have installed calipso recently? I'm trying to install it with : sudo npm install calipso -g, but i get some errors https://gist.github.com/1918892
[20:42] dve has joined the channel
[20:43] stafamus has joined the channel
[20:43] thinkt4nk has joined the channel
[20:45] kriszyp has joined the channel
[20:46] Blorb has joined the channel
[20:47] ag4ve: if i have more than one model, is there a way to include every file in a directory without toing 'var One = require( './models/one' ), Two = require( './models/two' ); etc?
[20:47] ag4ve: s/toing/doing/
[20:50] elnn has joined the channel
[20:52] rpowell has joined the channel
[20:53] ningu: ag4ve: iterate over what's in the directory?
[20:54] boltR has joined the channel
[20:54] felixge has joined the channel
[20:54] felixge has joined the channel
[20:54] felixge: rauchg: ping
[20:54] rauchg: felixge
[20:54] rauchg: pong
[20:54] felixge: rauchg: hey, how is it going?
[20:54] rauchg: good :) how are you
[20:54] felixge: rauchg: good. I'd like to help fixing a socket.io bug and was wondering if I could get your input on it real quick
[20:54] rauchg: sure
[20:55] felixge: rauchg: https://github.com/LearnBoost/socket.io/issues/635
[20:55] felixge: rauchg: basically socket.io-client doesn't seem to detect if a connection goes away
[20:55] felixge: for websockets that means this.websocket.onclose never fires
[20:55] rauchg: hum that's really odd
[20:55] rauchg: the heartbeat should trigger it 
[20:55] felixge: the server detects the disconnect via timeout properly
[20:56] felixge: yeah, seems the heartbeat is not happening on the client
[20:56] felixge: so I was wondering if it should be, or if heartbeat is only server side?
[20:56] GodezInc has joined the channel
[20:56] rauchg: so basically 
[20:57] rauchg: the client should set a similar timeout 
[20:57] rauchg: on the expectation of a packet from the server
[20:57] felixge: rauchg: yeah, makes sense. I'm not finding that code in the client right away so
[20:57] felixge: socket.js has "self.heartbeatTimeout = heartbeat * 1000"
[20:57] felixge: but that never seems to be used anywhere
[20:58] ccare has joined the channel
[20:58] rauchg: i see…
[20:58] rauchg: definitely a bug 
[20:58] rauchg: potentially a regression
[20:58] slajax has joined the channel
[20:59] felixge: rauchg: yeah, I think so too. So I'd like to help fix it, but being rather unfamilar with the socket.io code base I was wondering if you have a strong preference on how this should be done (tests, actual heartbeat implementation in the client, etc.)
[20:59] WeeJeWel has joined the channel
[21:00] rauchg: should be similar to this
[21:00] rauchg: https://github.com/LearnBoost/engine.io-client/blob/master/lib/socket.js#L278
[21:00] felixge: rauchg: that looks doable!
[21:00] rauchg: cleared here
[21:00] rauchg: https://github.com/LearnBoost/engine.io-client/blob/master/lib/socket.js#L236
[21:00] rauchg: can't believe i missed this 
[21:00] broersa has joined the channel
[21:00] rauchg: but yeah, engine.io is replacing the transports part of socket.io for 1.0
[21:01] rauchg: so we don't need tests for this quick one
[21:01] rauchg: just that impl
[21:01] rauchg: and let's test it closing our laptops' lids
[21:01] rauchg: :D
[21:01] rauchg: sorry about that
[21:01] felixge: rauchg: well, I'm turning on off wifi
[21:01] felixge: and opened a port on my router
[21:01] felixge: so i connect to my local socket.io instance via interwebs
[21:01] felixge: works better than sleeping :)
[21:01] felixge: anyway, I'll send a patch in a few minutes, ok?
[21:02] rauchg: sure
[21:02] rauchg: let's get it in 0.9.0
[21:03] felixge: awesome!
[21:03] felixge: ok, I'll ping you when I'm rdy
[21:03] felixge: rauchg: also while I have you here. Would you accept a patch that obfuscates the usage of the string "Active-X" within the socket.io client source?
[21:04] dve_ has joined the channel
[21:04] felixge: rauchg: to expain, ActiveX seems to be blocked / filter by some coporate firewalls in JS source
[21:05] dnyy has joined the channel
[21:05] felixge: rauchg: specially a firewall called "Bluecoat" will currently block the socket.io client source from being downloaded
[21:05] nibblebot has joined the channel
[21:05] rauchg: definitely!
[21:05] rauchg: awesome
[21:05] rauchg: this is great feedback felixge, thanks
[21:05] emet has joined the channel
[21:06] rauchg: i'll port them back to engine.io too
[21:06] rodgerdb has joined the channel
[21:06] felixge: rauchg: Np. Thanks also goes to a large TV station here in Germany, they're using socket.io for some of their biggest formats :)
[21:07] felixge: rauchg: helping them with mostly generic node stuff, but also the socket.io end … part of bootstrapping transloadit :)
[21:08] `3rdEden has joined the channel
[21:12] andrehjr has joined the channel
[21:14] confoocious has joined the channel
[21:14] confoocious has joined the channel
[21:14] vguerra_ has joined the channel
[21:15] pid1 has joined the channel
[21:15] broersa has joined the channel
[21:15] jimubao has joined the channel
[21:16] pid2 has joined the channel
[21:17] Sahua-sleep has joined the channel
[21:18] confoocious: github.com/xk/JASON seems quite interesting.
[21:19] nick12 has joined the channel
[21:19] nick12: I have a strange problem with now.js
[21:19] nick12: My application throws the error Unable to load shared library node-proxy.node
[21:19] nick12: Any ideas?
[21:20] andrehjr has joined the channel
[21:21] al3xnull has joined the channel
[21:21] jarek has joined the channel
[21:24] Axsuul has joined the channel
[21:24] shivhack has joined the channel
[21:25] ramitos has joined the channel
[21:27] shanem has joined the channel
[21:30] mehlah has joined the channel
[21:31] Aria has joined the channel
[21:33] stagas has joined the channel
[21:34] jacobrask: Is there any benefit of using sync functions for things like cli apps?
[21:34] jacobrask: Or do people just use it because they find it easier and it doesn't matter as much
[21:34] jakko__ has joined the channel
[21:36] skylamer`: Yes, the benefit is that there are no benefit!
[21:37] Bonuspunkt: less callback, but high price
[21:37] jesusabdullah: well
[21:37] jesusabdullah: not necessarily
[21:38] jesusabdullah: async is great and all, but if you need to load up everything before you do anything else, and you can do this with a sync api, why not?
[21:38] jacobrask: It's easier for me to not change my coding style from async and learn the sync APIs just to hack on some small app
[21:38] jesusabdullah: it's dirt simple
[21:38] jesusabdullah: it's good to be familiar with both.
[21:39] joshwines has joined the channel
[21:39] jimubao_ has joined the channel
[21:39] shinuza has joined the channel
[21:40] criswell has joined the channel
[21:41] fmeyer has joined the channel
[21:41] lsdafjklsd has joined the channel
[21:43] cjm has joined the channel
[21:45] Renegade001 has joined the channel
[21:45] sh1mmer has joined the channel
[21:46] jesusabdullah: SO, does anybody know where I can find docs on how to use jshint programmatically?
[21:46] jesusabdullah: so far everything I've found assumes you're using the cli tool
[21:47] RLa: maybe look at the source?
[21:47] Typo has joined the channel
[21:47] Typo has joined the channel
[21:47] ningu: use the source, luke
[21:47] jesusabdullah: Yeah, that's what I'm doing but jesus
[21:47] jesusabdullah: what a mess
[21:47] jesusabdullah: seriously, I hate this api
[21:47] jesusabdullah: if there's one reason you shouldn't take crockford's advice as gospel, it's the jslint api.
[21:47] ningu: jslint or jshint?
[21:48] jesusabdullah: they have more or less the same api
[21:48] jesusabdullah: from what I can tell
[21:48] jesusabdullah: but I'm using jshint here
[21:48] jesusabdullah: if I saw jslint docs that'd probs be "close enough"
[21:48] cjm has left the channel
[21:48] ningu: btw are there any ide's that allow you to do things like automatic refactoring? or does js not lend itself to that?
[21:49] RLa: jesusabdullah, https://github.com/jshint/node-jshint/blob/master/lib/cli.js
[21:49] jesusabdullah: yeah I'm there now
[21:49] RLa: ningu, js should be very easy to refactor
[21:49] RLa: renaming at least
[21:50] ningu: yeah, but getting the class structure would be hard
[21:50] RLa: maybe webstorm can do it
[21:50] RLa: hm, true
[21:50] ningu: hmm
[21:50] ningu: didn't know about webstorm, cool
[21:51] Octayn: Visual Studio maybe, it has some pretty advanced js stuff.
[21:51] Eruadan: i just download the trial of webstorm, it seems nice
[21:51] jesusabdullah: webstorm can do what?
[21:51] RLa: it can do a lot
[21:52] rook2pawn: res.redirect is not actually redirecting for me .. any ideas? 
[21:52] ljharb has joined the channel
[21:52] thinkt4nk has joined the channel
[21:52] RLa: jesusabdullah, http://www.jetbrains.com/webstorm/features/index.html
[21:52] ningu: rook2pawn: are you sure it's being called?
[21:52] ningu: and are you doing any other response methods after?
[21:52] Eruadan: jetbrains...they made also  the ror ide
[21:53] petrjanda has joined the channel
[21:53] rook2pawn: ningu: yes, definitely. browser is only showing "Moved temporarily. Redirecting to ....<correct>" but not actually redirecting
[21:53] ningu: strange
[21:54] RLa: also, it's free for open source projects, and personal license costs 47€
[21:54] ningu: have you tried in another browser?
[21:54] rook2pawn: iceweasel and chromium both have the same behaviour
[21:54] ningu: odd
[21:54] Wizek has joined the channel
[21:54] RLa: maybe it redirects to same location?
[21:54] RLa: check response with curl
[21:55] codejunky_ has joined the channel
[21:55] RLa: headers will tell the truth
[21:55] Aria_ has joined the channel
[21:56] ningu: good idea
[21:56] jesusabdullah: I see.
[21:56] jesusabdullah: I use gedit. I feel lame for saying that but it's true.
[21:56] RLa: i think you can inspect headers with firebug or chrome's dev tools
[21:57] RLa: using gedit here too, but not for js code
[21:57] jesusabdullah: why not?
[21:57] ningu: I use textmate
[21:57] jesusabdullah: It works as well for jabbascript as anything else
[21:58] pizthewiz has joined the channel
[22:00] RLa: it has no fancy autocomplete
[22:00] ekryski has joined the channel
[22:00] TheJH: jesusabdullah, I use gedit, too :)
[22:00] TheJH: RLa, does anything have autocomplete for JS?
[22:00] forzan has joined the channel
[22:00] rook2pawn: ningu: i dont think its issuing headers? 
[22:00] RLa: at least kate (kwrite too?) is able to autocomplete on words in te current file
[22:00] TheJH: RLa, non-dumb autocomplete?
[22:00] bingomanatee has joined the channel
[22:00] RLa: TheJH, no, haven't seen yet
[22:00] rook2pawn: i posted via curl -d "name=foo" http://localhost:4000/login and got back <p>Moved temporarily...
[22:01] RLa: rook2pawn, see headers
[22:01] navpar has joined the channel
[22:01] Octayn: TheJH: Visual Studio has pretty good autocomplete, actually. It does static analysis of all the js files and makes a reference file.
[22:01] rook2pawn: curl doesnt show it automatically?
[22:01] Octayn: curl -v for headers
[22:01] dannyamey has joined the channel
[22:01] RLa: try curl -v
[22:01] TheJH: Octayn, oh, nice. But meh, I won't use visual studio :D
[22:02] Octayn: TheJH: same feeling
[22:03] kmiyashiro has joined the channel
[22:03] FIQ has joined the channel
[22:03] TheJH: VB was my first language (after windows batch), and I'm happy about having moved away from it when I was in class 6 or 7 :D
[22:03] rook2pawn: http://pastie.org/3466998 was my response..is the 200 response correct?
[22:04] aaronmcadam has joined the channel
[22:04] samuelgoodwin has joined the channel
[22:06] cliffano has joined the channel
[22:06] JoshJensen has joined the channel
[22:07] Skaag has joined the channel
[22:07] ramitos has joined the channel
[22:08] jesusabdullah: https://gist.github.com/1919289 This is lulz
[22:08] jesusabdullah: rook2pawn: I haven't opened the link yet but 200 is usually a good sign
[22:08] jesusabdullah: wait
[22:08] jesusabdullah: rook2pawn: That should be like a 304
[22:09] rook2pawn: it should be 3xx on res.redirect but express is giving 200
[22:09] jesusabdullah: rook2pawn: http://en.wikipedia.org/wiki/List_of_HTTP_status_codes This guy is awesome imo, I use it all the time XD
[22:09] jesusabdullah: but yeah, I agree, that's a bit screwy
[22:09] jesusabdullah: just a little bit
[22:10] rook2pawn: ah-hah figured
[22:10] zackattack has joined the channel
[22:10] jesusabdullah: rook2pawn: long time no see, how's it going? :)
[22:10] rook2pawn: sesame harmony proxy issue :D
[22:10] jesusabdullah: sesameeeeee
[22:11] jakko has joined the channel
[22:11] devongovett has joined the channel
[22:12] whaley has joined the channel
[22:15] michaelhartau has joined the channel
[22:16] AaronMT has joined the channel
[22:16] fermion has joined the channel
[22:17] subbyyy has joined the channel
[22:19] tttthet has joined the channel
[22:22] JJMalina has joined the channel
[22:22] mattpardee has joined the channel
[22:22] mattpardee has left the channel
[22:22] mattpardee has joined the channel
[22:23] Hebo has joined the channel
[22:31] skm has joined the channel
[22:32] alippai: hello, my content is a mp3 stream contnously written by a streamWriter
[22:32] alippai: can I server it for <audio> tag before I close the streamWriter?
[22:36] alippai: streamReader doesn't serve the whole file, stops at the chunk available at opening the stream
[22:37] alippai: (with pumping into res created by express)
[22:37] mattpardee has left the channel
[22:38] mikeal has joined the channel
[22:38] felixhummel has joined the channel
[22:40] nFFF has joined the channel
[22:42] xlogik has joined the channel
[22:43] jldbasa has joined the channel
[22:44] rook2pawn: what other store beside redis satisfies connect session store?
[22:48] nick_f has joined the channel
[22:48] furtive has joined the channel
[22:48] nick_f has left the channel
[22:50] nick_f has joined the channel
[22:50] lohkey has joined the channel
[22:50] AdamSeabrook has joined the channel
[22:50] wereHamster: rook2pawn: any that can store a string
[22:51] sdwrage has joined the channel
[22:51] forzan has joined the channel
[22:51] boltR has joined the channel
[22:55] jp232 has joined the channel
[22:55] shinuza has joined the channel
[22:55] crutex has joined the channel
[22:55] crutex has joined the channel
[22:56] tim has joined the channel
[22:57] cha0s has joined the channel
[22:57] cha0s has joined the channel
[23:02] oht has joined the channel
[23:03] stagas has joined the channel
[23:06] markwubben has joined the channel
[23:07] rauchg has joined the channel
[23:11] mansoor has joined the channel
[23:15] tofusoul has joined the channel
[23:15] tofusoul has joined the channel
[23:16] kirbysayshi has joined the channel
[23:20] c4milo has joined the channel
[23:21] Joeysomo has joined the channel
[23:23] stagas has joined the channel
[23:23] izepstan has joined the channel
[23:25] EhevuTov has joined the channel
[23:26] djbell has joined the channel
[23:26] lmorchard has joined the channel
[23:26] ohtogo has joined the channel
[23:28] hackband has joined the channel
[23:30] innociv has joined the channel
[23:31] adlermedrado has joined the channel
[23:32] RobWC has joined the channel
[23:32] RobWC has left the channel
[23:34] bizniz98 has joined the channel
[23:37] _th_n has joined the channel
[23:37] mandric has joined the channel
[23:41] thetristan has joined the channel
[23:42] mansoor: Any resources on setting up a secure node.js prod server? 
[23:43] mansoor: preferably one with Nginx in mind
[23:43] rauchg has joined the channel
[23:44] dve has joined the channel
[23:46] nibblebot has joined the channel
[23:50] devaholic has joined the channel
[23:51] satyr has joined the channel
[23:51] copongcopong has joined the channel
[23:53] nealstewart has left the channel
[23:57] ag4ve: i'm trying to install mongoose-auth and it's complaining about bcrypt: npm install mongoose-auth
[23:57] ag4ve: npm ERR! error installing mongoose-auth@0.0.12 Error: No compatible version found: bcrypt@'>=0.5.0'
[23:57] overthemike has joined the channel
[23:58] tofusoul has joined the channel
[23:58] ag4ve: i installed both the bcrypt npm package (what i suspect it wants) and the bcrypt debian package (for the hell of it). but it doesn't work
[23:58] jp232 has joined the channel
[23:59] nibblebot has joined the channel
