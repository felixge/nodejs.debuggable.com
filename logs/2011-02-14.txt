[00:00] LadyGaga: NuckingFuts: So the browser has to talk to node everytime the UI needs to something?
[00:00] James_tKirk: there might be something here. 
[00:00] marcello3d: is there a node->java connector?
[00:00] marcello3d: you could use swing ;)
[00:00] NuckingFuts: LadyGaga: ...
[00:00] NuckingFuts: No
[00:00] NuckingFuts: LadyGaga: NATIVE UI.  IN NODE.
[00:00] NuckingFuts: Node runs alone, no browser
[00:00] perezd has joined the channel
[00:00] James_tKirk: Historically Java was written to fill that purpose. 
[00:00] LadyGaga: NuckingFuts: For desktop apps? And please don't yell
[00:00] NuckingFuts: I am not talking about a Web UI.
[00:00] James_tKirk: KHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN!
[00:00] NuckingFuts: Sorry, I'm just facepalming soooooo much.
[00:00] James_tKirk: Lets give him some rope.l
[00:01] LadyGaga: NuckingFuts: me 2
[00:01] James_tKirk: okay - so you want to use Node to do the things that people tried to do with Java?
[00:01] NuckingFuts: marcello3d: We do not speak of Java, that foul language that ruined the name for JavaScript.
[00:01] NuckingFuts: James_tKirk: Yes, but not as shitty.
[00:01] James_tKirk: no - it was lame - 
[00:01] LadyGaga: NuckingFuts: Why do you need node when you can just use v8 for this?
[00:01] NuckingFuts: Preferably just simple abstraction.
[00:02] James_tKirk: Please don't do to me what people here do all the time - mistake an example of an applicaiton of technology for praise for said technology.
[00:02] NuckingFuts: LadyGaga: ... Do you even have the SLIGHTEST clue what V8 is?
[00:02] marcello3d: hey what's the syntax for getters in object literals?
[00:02] NuckingFuts: Because you sure don't seem to.
[00:02] James_tKirk: There is definately room for that. 
[00:02] marcello3d: v8: { x get: function() { return 1 } }
[00:02] v8bot: marcello3d: SyntaxError: Unexpected identifier
[00:02] marcello3d: v8: { get x: function() { return 1 } }
[00:02] v8bot: marcello3d: SyntaxError: Unexpected identifier
[00:02] marcello3d: hmmm
[00:02] NuckingFuts: marcello3d: { get item(){ return 1} }
[00:02] LadyGaga: NuckingFuts: Yes. Stop trolling
[00:03] James_tKirk: As Aria mentioned eariler (and please people can we act as adults? What Would Ryan Do?) GTK might cover some ground. 
[00:03] marcello3d: v8: { get x() { return 1 } }.x
[00:03] v8bot: marcello3d: SyntaxError: Unexpected identifier
[00:03] marcello3d: :(
[00:03] aurynn has left the channel
[00:03] NuckingFuts: v8: { get test(){ return 1; }.test
[00:03] v8bot: NuckingFuts: SyntaxError: Unexpected identifier
[00:03] LadyGaga: NuckingFuts is making ##node seem like a hostile place.
[00:04] NuckingFuts: v8: {}.__defineGetter__('test',function(){ return 1; }).test
[00:04] v8bot: NuckingFuts: SyntaxError: Unexpected token .
[00:04] NuckingFuts: ...
[00:04] James_tKirk: so I think you'd have to shop around to see what kind of graphic libraries like GTK are out there, and which ones cover the most ground, and probably pick two and develop a self contained package that forked between them. 
[00:04] marcello3d: lady: might want to be careful with that machine gun bra, too
[00:04] James_tKirk: CHILDREN BEHAVE. 
[00:04] marcello3d: v8: var o= {}; o.__defineGetter__('test',function(){ return 1; }); o.test
[00:04] v8bot: marcello3d: 1
[00:04] marcello3d: so ugly
[00:04] LadyGaga: NuckingFuts: And I do know what v8 is -- I've written C++ library bindings
[00:04] NuckingFuts: marcello3d: There's a better way I know
[00:04] James_tKirk: Can we please respect the idea with being jackasses?
[00:05] NuckingFuts: LadyGaga: No offense, but I'm pretty sure you don't understand that V8 is essentially useless in and of itself.
[00:05] NuckingFuts: It's a bare-bones JS environment.
[00:05] mikeal has joined the channel
[00:05] NuckingFuts: Cool, you can iterate and... Do nothing with the results.
[00:05] marcello3d: v8: { get x () { return 1 } }.x
[00:05] James_tKirk: ACTION is pretending that people are trying to accomplish something and soldiers on
[00:05] v8bot: marcello3d: SyntaxError: Unexpected identifier
[00:05] NuckingFuts: How exciting.
[00:06] marcello3d: v8: { get x () { return 1 }, set x(val) { throw Error } }.x
[00:06] v8bot: marcello3d: SyntaxError: Unexpected identifier
[00:06] marcello3d: hmm
[00:06] James_tKirk: I think you could very easily develop for and fork between say, cocoa and .NET
[00:06] NuckingFuts: v8: var obj = { get a() { return "something" }, set a() { "do nothing" } }; obj.a;
[00:06] v8bot: NuckingFuts: "something"
[00:06] NuckingFuts: marcello3d: ^
[00:06] marcello3d: v8:var o= { get x () { return 1 } }; o.x
[00:06] v8bot: marcello3d: 1
[00:06] marcello3d: interesting
[00:06] NuckingFuts: James_tKirk: The issue is more how to make the UI look like it was meant for each OS
[00:06] James_tKirk: that woiuldn't use node as such - but you could use Node to create a general purpose IDE. 
[00:07] James_tKirk: using the conventions in .NET and Cocoa would take care of a lot of that., 
[00:07] James_tKirk: However you almost have to give up the mobile platform - its just too diffuse. Unless you had an amazing and well funded team. 
[00:07] NuckingFuts: James_tKirk: Yeah, but I mean, each has different UI conventions, and the problem is how to handle that lol
[00:07] tmpvar has joined the channel
[00:08] NuckingFuts: Well, yeah.  Mobile?  Nobody cares, I don't even think Node runs on that anyways
[00:08] James_tKirk: Well you have two basic options - fork or homogenize. 
[00:08] James_tKirk: Node runs on Palms. FWIW
[00:08] James_tKirk: I'd suggest that Node would be better used as the app creation ENGINE then the final platform. 
[00:08] James_tKirk: Use Node to script an app in a generalized markup a la JavaFX 
[00:08] davidc_ has joined the channel
[00:08] davidc_ has joined the channel
[00:08] James_tKirk: and implement via forks in each environment. 
[00:08] NuckingFuts: James_tKirk: I'm sorry, but that didn't make sense to me.
[00:09] NuckingFuts: I'm just saying, I'd like to be able to make a window, and have it, ya know, make a window, on any OS
[00:09] James_tKirk: yes -
[00:09] NuckingFuts: And be able to make a button
[00:09] derferman has joined the channel
[00:09] NuckingFuts: Markup for that can come later
[00:09] NuckingFuts: You need the API before the markup
[00:09] PyroPeter has joined the channel
[00:10] James_tKirk: What I am saying is that you might want to try to create a "Platonic development environment" that writes native coco AND .NET projects. 
[00:10] James_tKirk: the IDE could be, say, Eclipse
[00:10] NuckingFuts: James_tKirk: wat.  I don't use an IDE.
[00:10] James_tKirk: and the backend code could be Node 
[00:10] NuckingFuts: I use Notepad++, and I refuse to use an IDE.
[00:10] NuckingFuts: IDEs are too heavy for me.
[00:11] NuckingFuts: Same reason I use Firefox instead of Opera or SeaMonkey
[00:11] James_tKirk: Well, you could look at the way JavaFX abstracted graphic elements into a nested graphic language
[00:11] sonnym has joined the channel
[00:11] James_tKirk: The implementation was tragic but the scripting language was clever. 
[00:11] NuckingFuts: James_tKirk: I don't touch Java.  It's a horrid language.
[00:11] jamescarr: James_tKirk, yes, the implementation was a tragedy, which is a shame
[00:11] jamescarr: NuckingFuts, whatever
[00:12] James_tKirk: again - not advocating language - just observing useful features of it. 
[00:12] jamescarr: NuckingFuts, oh wait nevermind, it is :)
[00:12] NuckingFuts: I still have nightmares about Java.
[00:12] jamescarr: the lack of closures is a regretable. Thats why if you can, use an alternative language on the JVM
[00:12] gmci has left the channel
[00:12] James_tKirk: PLEASE people - when I give examples they are specific to the feature I am highlighting, not an implied advocacy of the entire project.
[00:12] jamescarr: I prefer scala or groovy on the jvm myself ;)
[00:12] ezmobius has joined the channel
[00:12] jamescarr: James_tKirk, hehehehe... I know
[00:12] jamescarr: thinking JavaFX is Java is a joke :)
[00:13] marcello3d: god, highlighting is so overrated
[00:13] marcello3d: you should use postits
[00:13] NuckingFuts: James_tKirk: Anyways, I think this would be wonderful lol
[00:13] jamescarr: I thought JavaFX's syntax was decent really
[00:13] marcello3d: and man, giving examples? so 2010
[00:13] marcello3d: <_<
[00:13] James_tKirk: So what I would say is this: I think you could develop an abstract markup to describe an appliation and define interactions and business rules 
[00:13] marcello3d: >_>
[00:13] NuckingFuts: I just want some basic API calls, which would allow for a simple markup language to be implemented in JS itself rather than in the core API part.
[00:13] jamescarr: James_tKirk, oh, you mean implement Drools? BPM?
[00:13] James_tKirk: And general layout definitions 
[00:14] NuckingFuts: James_tKirk: Eh?  But the UI conventions between OSes is nearly impossible.  I'd say allowing for different UI layouts for different OSes would be wise.
[00:15] drdave has joined the channel
[00:15] James_tKirk: Possibly. Or just define it in a contolled subset of JavaScript with classical structre and reverse engineer the class behaviors in .NET and Cocoa. 
[00:15] marcello3d: how do I make require("myfile") return a function
[00:15] Yuffster has joined the channel
[00:15] marcello3d: module.exports = function() { ... } ?
[00:15] James_tKirk: Yes - you would be stuck with field, dropdown, button, checkbox. 
[00:15] NuckingFuts: marcello3d: exports = function yeah
[00:15] severla has joined the channel
[00:15] marcello3d: is module.exports required?
[00:15] marcello3d: or is exports sufficient
[00:16] JimBastard: http://www.youtube.com/watch?v=MSZLLgel6Gs
[00:16] NuckingFuts: James_tKirk: It'd be wise to make it modular, so you could add other UI elements without modifying the base.
[00:16] James_tKirk: You could create a "forked language" that says, "when context == .NET do {} else {} " - not a pleasant conventionj
[00:16] SubStack: marcello3d: `exports =` doesn't work, you have to `module.exports =`
[00:16] SubStack: although this is fixable I think on the node side of things
[00:16] Bonuspunkt has joined the channel
[00:16] gmci has joined the channel
[00:16] NuckingFuts: James_tKirk: How about using precompilation?
[00:17] marcello3d: JimBastard: mono audio? 
[00:17] NuckingFuts: I'm pretty sure precompilation is now common practice in multi-platform environments.
[00:17] severla: SubStack: I've seen code using only exports without having been defined; as say var exports= module.exports ... why is this?
[00:17] marcello3d: video sounds weird in headphones
[00:17] JimBastard: lol, oops
[00:17] JimBastard: ill try it out
[00:17] James_tKirk: Okay - given that I've gone this far with you - can I play devil's advocate? 
[00:17] Nuck has joined the channel
[00:18] JimBastard: yeah marcello3d , thats fucked
[00:18] JimBastard: dammit
[00:18] James_tKirk: What is your use case for an app that is NOT browser based, and that you want to release using native code on multiple platforms? 
[00:18] marcello3d: sounds like someone farting on the left channel
[00:18] James_tKirk: Proably not a game - they tend to have custom native UI
[00:18] sivy has joined the channel
[00:19] James_tKirk: Not a social network or social app which work fine on the web
[00:19] James_tKirk: Who do you see as someone who is the best use case for this kind of abstraction?
[00:19] NuckingFuts: James_tKirk: A simple setup system?
[00:19] NuckingFuts: A bot for chats which doubles as a client?
[00:19] NuckingFuts: An IRC client?
[00:19] NuckingFuts: Plenty of uses.
[00:19] marcello3d: what advantage does node.js give you?
[00:20] marcello3d: over all the other languages in the world that do what you're saying
[00:20] James_tKirk: Why would you need any of those kind of centrallized things to be multiplatform? 
[00:20] jimt has joined the channel
[00:20] NuckingFuts: marcello3d: Because it's asynchronous, and JS is a very commonly-known language?
[00:20] James_tKirk: I can satisfy any investor for those sort of apps by writing to a single platform. 
[00:20] NuckingFuts: James_tKirk: I'm not dealing with investors, I'm dealing with end-users.
[00:21] NuckingFuts: If I had APIs for each language, it'd be fine
[00:21] NuckingFuts: Err, each  OS
[00:21] NuckingFuts: I could take it from that
[00:21] zylo has joined the channel
[00:21] James_tKirk: I would suggest that coding an application for Eclipse would solve all these problems. 
[00:21] NuckingFuts: ...
[00:21] James_tKirk: Eclipse can be used to develop custom apps. 
[00:22] James_tKirk: I'm not trying to be obtuse. 
[00:22] James_tKirk: really. 
[00:22] NuckingFuts: I don't understand how this would be helpful?  I just want to have a UI on a Node thing.  Is this too much to ask for?
[00:22] marcello3d: you could use chromeless or air for any of those examples
[00:22] NuckingFuts: I mean, Ruby has bindings to all kinds of UI things!
[00:22] marcello3d: (both javascript)
[00:22] James_tKirk: I'm suggesting that Eclipse already have native cross platform UI. 
[00:22] NuckingFuts: ...
[00:22] James_tKirk: Ruby is web centric. This problem doesn't exist for web apps - mostly. You took Web off the table. 
[00:23] NuckingFuts: James_tKirk: I'm not talking about RoR
[00:23] NuckingFuts: I'm talking about basic Ruby
[00:23] James_tKirk: Yes - okay - got it. I don't have first hand effective experience in R / RoR
[00:23] James_tKirk: But I think I got your point. 
[00:23] NuckingFuts: There's two of us on deviantART chat who are coding bots.  I'm doing a bot in NodeJS, other guy's doing one in Ruby.
[00:23] NuckingFuts: The Ruby bot is gonna get a UI, thanks to Ruby's APIs for a UI
[00:24] marcello3d: NuckingFuts: maybe look at how node-opengl does the binding in c
[00:24] NuckingFuts: And I'm left shaking my fist at his back bumper.
[00:24] James_tKirk: okay - now we have a context to address, that makes this more productive. 
[00:24] marcello3d: pick your favorite c/c++ cross platform toolkit
[00:24] NuckingFuts: On the bright side, my bot restarts in under a half a second lol
[00:24] marcello3d: and port it
[00:24] marcello3d: make a web UI for your bot
[00:24] marcello3d: that'd be way more badass than a native ui, imo
[00:24] marcello3d: you could control it from your ipad
[00:25] marcello3d: anyone with a browser could see public stats on the bot
[00:25] marcello3d: on its own personal website
[00:25] marcello3d: without downloading/installing anything
[00:25] James_tKirk: First off - this is not a "oh lets open up a git stack and solve this problem in a weekend and then have cake" thing 
[00:25] James_tKirk: This is a very difficult and laborious problem. 
[00:25] Nuck has joined the channel
[00:25] Nuck: Gah fuckign internet.
[00:25] James_tKirk: it would have to be approached in stages, with a significant team, and a lot of time. 
[00:26] mscdex: scotty.js
[00:26] James_tKirk: I'm not saying these things to discourage you - just trying to point out that doing this right is a significant investiment. 
[00:26] NuckingFuts: James_tKirk: I figured :P
[00:26] mscdex: dude, the cake is a lie
[00:26] mscdex: :o
[00:26] NuckingFuts: mscdex: ... wat?
[00:26] mscdex: James_tKirk mentioned having cake
[00:27] James_tKirk: I would say this - just creating a kind of "UML for Apps" without a solution engine in mind is a start. 
[00:27] mscdex: :D
[00:27] James_tKirk: yes its a thing. 
[00:27] marcello3d: James_tKirk: but it'd be badass, and he'd have a better bot ui than the other guy, just cause
[00:28] NuckingFuts: lolololol
[00:28] marcello3d: isn't that enough reason enough?
[00:28] James_tKirk: I doubt any single commercial application would justify the effort - but it would be an interesting exercise. 
[00:28] NuckingFuts: I wonder if it's feasible to provide Qt bindings into JS?
[00:28] mscdex: someone already started on gtk bindings!
[00:28] mscdex: :d
[00:28] SubStack: mikeal: another jsbbq you say! :D
[00:28] marcello3d: how to output json in jade?
[00:28] NuckingFuts: mscdex: orly?
[00:29] mikeal: oh hell yeah :)
[00:29] SubStack: sounds awesomely awesome
[00:29] mscdex: NuckingFuts: yep
[00:29] SubStack: oh right and I'll whip up another nodeconf proposal for you ;)
[00:29] marcello3d: aha. #{JSON.stringify(users)}
[00:29] James_tKirk: I think you would want to focus on application centric specs  before even starting in on the graphic layer - being able to describe widgets at the "black box" level - how many field widgets, defaults, choices, required input,l et all
[00:29] skm has joined the channel
[00:29] marcello3d: James_tKirk: you heard the guy, gtk bindings. problem solved
[00:29] NuckingFuts: GTK is a hideous thing.  Nothing has a worse UI than GIMP.
[00:30] SubStack: if you need to pad out track B I can help with that!
[00:30] James_tKirk: Nothing we know of :D
[00:30] marcello3d: does connect support reverse routing?
[00:30] NuckingFuts: Holy shit.  According to Wikipedia, Chromium uses GTK+ :V
[00:30] mscdex: NuckingFuts: https://github.com/maelstrom/node-gtk
[00:30] marcello3d: probably on linux only
[00:30] James_tKirk: see- its not the language its the implementation. 
[00:31] James_tKirk: Anyway - don't know if I helped you any - or came to a conclusion. 
[00:32] NuckingFuts: I know, let's support wxWidgets </troll>
[00:32] skm has joined the channel
[00:33] marcello3d: god finally NuckingFuts closed his dangling troll tag
[00:33] marcello3d: we can get back to work
[00:33] marcello3d: was getting tiring!
[00:34] jakehow has joined the channel
[00:34] James_tKirk: ...
[00:34] mscdex: there's also https://github.com/brainfucker/node-gui
[00:34] mscdex: another gtk binding
[00:34] mscdex: :p
[00:35] radeck has left the channel
[00:35] marcello3d: how do people break up their code into multiple files?
[00:35] marcello3d: do you put different routes in different files?
[00:35] marcello3d: or do stuff like app.get("blah", require("blah"))
[00:35] Evet_ has joined the channel
[00:36] marcello3d: wat. I have to do ./file for my local files?
[00:36] marcello3d: sad :(
[00:36] NuckingFuts: I think it could be problematic to use GTK instead of Qt
[00:36] NuckingFuts: Seeing as GTK is C, and Qt is C++
[00:36] NuckingFuts: So Qt would prolly be easier to port
[00:37] NuckingFuts: Though I'd not want the whole thing.  Looks like it's fucking huge.
[00:37] Vertice has joined the channel
[00:37] Aria: Qt and GTK are both pretty tight. GTK is definitely unixier. 
[00:37] NuckingFuts: Aria: Ah, so more unintuitive?
[00:37] Aria: No....
[00:38] NuckingFuts: lol
[00:38] James_tKirk: I do have to say - if I was writing a multiplatform app, I would just use Flash and custom graphic apps. You would get visually consistent - not native, but consistent - results and a simple delivery scheduile. 
[00:38] Aria: More pieces.
[00:38] NuckingFuts: But flash is sloooooooooooooooow.
[00:38] NuckingFuts: And a bitch.
[00:38] Aria: Nah, not that slow. Just annoying and likely to heat your GPU.
[00:38] NuckingFuts: And it's exactly what JS is trying to get rid of now ;)
[00:39] Aria: (And completely not native and really no fun to use.)
[00:39] NuckingFuts: yeah
[00:39] Aria: (Flash is the new Java ;-)
[00:39] marcello3d: D:
[00:39] marcello3d: what's wrong with java
[00:39] Aria: Have you /used/ something written in Java lately?
[00:39] NuckingFuts: Aria: Well, not quite.  Unlike Java, it's not TOTAL shit.  At least it looks pretty and loads within a few seconds ;-)
[00:39] Aria: Heh. 
[00:39] marcello3d: aria: yes, every day D:
[00:39] Aria: Are we talking about the same Flash?
[00:40] NuckingFuts: Aria: yes.
[00:40] NuckingFuts: Java manages to take 30 seconds to load a single Apple
[00:40] NuckingFuts: *Applet
[00:40] marcello3d: my ide is written in java
[00:40] marcello3d: what kind of shitty computer do you have?
[00:40] NuckingFuts: And it tends to look like total shit by default.
[00:40] marcello3d: most java applets load in a few seconds nowadays
[00:40] marcello3d: they improved a lot with plugin2
[00:40] NuckingFuts: marcello3d: A very good one :B
[00:40] marcello3d: out of process applets and whatnot
[00:40] Aria: At least Flash toolkits can manage type hinting.
[00:40] James_tKirk: You could write a backend data server in Node and use Flash for your frontend. 
[00:41] marcello3d: but yea, flash for ui is a bit questionable, imo
[00:41] NuckingFuts: Aria: And the UI doesn't look like an industrial building or a Geocities site.
[00:41] James_tKirk: If you are writing pedestrian applications the performance is probably adequte - and the development cycyle would be much shorter than your White Whale. 
[00:42] NuckingFuts: James_tKirk: Not really.  I've had more success with doing C++ stuff than ActionScript
[00:42] NuckingFuts: And I know more JS than C
[00:43] James_tKirk: Well you could write an OpenGL driven app in C and pair it with a Node backend. 
[00:44] marcello3d: actionscript is javascript
[00:44] James_tKirk: My point being - I don't think that you gain much by attempting to cater to multiple native UI style sets and you inflate your delivery way beyond the point of reason. 
[00:44] NuckingFuts: marcello3d: Not quite
[00:44] aheckmann has joined the channel
[00:44] NuckingFuts: AS3 is to JS what XML is to HTML
[00:45] NuckingFuts: A more bitchy version
[00:45] marcello3d: as3 is ecmascript 4
[00:45] markwubben_ has joined the channel
[00:45] marcello3d: but it's backwards compatible with prior ecmascripts
[00:45] at133 has joined the channel
[00:45] James_tKirk: keep in mind - you only have to do the INTERFACE in actionscript. 
[00:45] James_tKirk: You can script the APPLICATION in node and make it SOA. 
[00:45] NuckingFuts: marcello3d: Error 1077 I believe is the error that means absolutely jack shit.
[00:45] breccan has joined the channel
[00:46] marcello3d: ?
[00:46] NuckingFuts: marcello3d: It's an error that occurs in AS when there is nothing wrong.
[00:47] marcello3d: ok?
[00:47] NuckingFuts: Like, I can double-check everything, and it'll show an issue
[00:47] devrim: language wars on nodejs channel.. not interesting.
[00:47] NuckingFuts: In JS, it works flawlessly
[00:47] marcello3d: great.
[00:47] James_tKirk: And you could use Flex as a basis for the UI - and Flex already has an abstract desription syntax - and just use object remoting to put the bulk of your work in Node. 
[00:47] James_tKirk: hey Devrim - you still looking for a Mongooser?
[00:47] devrim: yes i do
[00:48] devrim: u know one?
[00:48] James_tKirk: I have worked a lot with mongo native - I can pull off some Mongoose work. 
[00:48] devrim: do u have time now?
[00:48] James_tKirk: Where in the world are you?
[00:48] devrim: new yok
[00:48] mkrecny: pivot
[00:48] James_tKirk: close enough. 
[00:48] devrim: *york
[00:48] James_tKirk: I'm in SF
[00:49] James_tKirk: I am on contract and could slow-boat the project at nights - next weekend I could work in earnest. 
[00:49] devrim: u'r where all the cool guys are ..
[00:49] marcello3d: woo new york
[00:49] marcello3d: woo san francisco
[00:49] devrim: uhm by the next wkend probably need your some other skillset :)
[00:49] James_tKirk: I'm too old to be cool. 
[00:50] James_tKirk: I have a full time contact in San Jose - I am working (technicallly) now. 
[00:50] bingomanatee: This is bingomanatee - by the way - 
[00:50] marcello3d: oh man, I thought you were from star wars
[00:50] devrim: hey bingomanatee
[00:50] marcello3d: *disappointed*
[00:50] devrim: mongoose help needed :)
[00:50] bingomanatee: I'm just saying I can't guarantee any hours of free time til then. 
[00:50] bingomanatee: lets talk priv
[00:51] devrim: oh
[00:51] devrim: i thought u just came in :)
[00:51] at133: Hi, I'm trying to use readFile to open a file. The file is above the directory my js file is in. I get bad file descriptor errors when I try './images/test.gif'. What is the correct way to do this?
[00:51] marcello3d: bingomanatee: are mongo native dbs and collections reusable?
[00:51] marcello3d: or do you create new ones for every request?
[00:51] bingomanatee: yes ; no
[00:52] bingomanatee: I persist my collections inefinately in noogle. 
[00:52] marcello3d: what about two simultaneous requests?
[00:55] davidc_ has joined the channel
[00:57] markwubben has joined the channel
[00:57] bingomanatee: any number of, in theory any way
[00:58] bingomanatee: As long as you keep things non blocking thats Mongo's stock in trade.
[00:58] marcello3d: ok great
[00:58] marcello3d: so I can cache all the way to the collection level?
[01:05] MatthewMueller has joined the channel
[01:05] postwait has joined the channel
[01:06] postwait: what's the right way to timeout an HttpRequest?
[01:06] postwait: Is there an option for that I can't find, or do I need to setTimeout and call request.abort()?
[01:07] zylo_ has joined the channel
[01:09] lukegalea has joined the channel
[01:10] markwubben has joined the channel
[01:12] bmizerany has joined the channel
[01:13] gunnarhafdal has left the channel
[01:13] bingomanatee: marcello3d - not clear exactly what you mean by caching, but I attach my collection objects to persistent modules in noogle, and its been up for weeks without crashing. 
[01:13] bingomanatee: In general I put all my node projects in chron to force them to reload but as far as I can tell things have been fine. 
[01:15] severla has joined the channel
[01:15] severla: how do i use stylus from express?
[01:16] marcello3d: bingomanatee: yes, that's what I mean
[01:16] Friice has joined the channel
[01:17] bingomanatee: If you have concerns about persistence, encase your model classes in try/catch and recreate collections (probably from the database connection on up) on fail. 
[01:17] bingomanatee: I don't closely monitor Noogle but I'm pretty sure its been fine. 
[01:17] marcello3d: I don't have model classes yet
[01:18] bingomanatee: http://www.wonderlandlabs.com/wll_drupal/os/node/mongodb.html and noogle has a basic class system that I wrote before Mongoose matured - you can just trust Mongoose if you want. 
[01:18] marcello3d: which object contains the actual connection(s) ?
[01:18] marcello3d: the db?
[01:19] marcello3d: Db
[01:19] bingomanatee: The database connects - then you request collection classes from the Db class using the collection() method. 
[01:19] lukegalea has joined the channel
[01:19] marcello3d: yes
[01:20] marcello3d: would be nice if collection was smart enough to (re)connect when you call find or whatever
[01:20] bingomanatee: I don't know for sure whether the collection object contains said Db object or just the address of the mongo database on the network  but for the most part I just get my colletion object and decorate it with a custom class. 
[01:20] bingomanatee: They may very well be. 
[01:20] yozgrahame has joined the channel
[01:20] bingomanatee: I honestly haven't tracked mongo / native fails enough to know how bad of a problem they are 
[01:21] bingomanatee: If mongo fails in Noogle the whole app crashes - and chron will restart the app in this case. 
[01:21] ossareh has joined the channel
[01:21] bingomanatee: If I were to run the stack as a commercial venture I would do more diligence there. 
[01:22] boaz has joined the channel
[01:22] AAA_awright: Alright controversial for the channel: What's the best way to do cookie authentication? Is there a secure library already available?
[01:22] wilmoore has joined the channel
[01:22] bingomanatee: but on my laptop tests the only time that mongo fails is when I am running intense scripts that run many expensive processes simultaneously in a way that is probably not indicative of normal use. (i.e., several parallel map/reduces). 
[01:22] marcello3d: what is chron? (assuming it's not the same as cron) 
[01:22] bingomanatee: yes it is. 
[01:23] bingomanatee: sorry sp. 
[01:23] marcello3d: does cron detect when it fails?
[01:23] bingomanatee: I just have /path to/node.js "path_to/index.js" in chron. 
[01:23] objectvar has joined the channel
[01:23] bingomanatee: If my app is alive it fails silent.y. 
[01:23] marcello3d: ah
[01:23] bingomanatee: Its a "retard's daemon". 
[01:23] marcello3d: so it'll be down for however long you have between cron calls
[01:23] objectvar: I have what is probably a REALLY stupid noob question ... but I'm going to ask it anyway
[01:23] bingomanatee: Yep - 
[01:23] marcello3d: gotcha
[01:24] bingomanatee: Like I said - if I were in production I would run torture tests and log downtime. 
[01:24] echosystm has joined the channel
[01:24] bingomanatee: I would in fact have a seperate node process that just pulled stock pages against the main app to test uptime. 
[01:24] objectvar: whenever I call fs.readFile and try to print the parameter passed to the callback ... it always is null ... the file exists ... is there something else I should be trying?
[01:25] ezmobius has joined the channel
[01:25] bingomanatee: There are smarter scripts in git to keep your app alive. 
[01:25] echosystm: is 0.4 really stable? ie. can run forever without crashing
[01:25] bingomanatee: I am just too busy building features in noogle to care about uptime right now. I haven't even rolled out the user / login system. 
[01:25] objectvar: so if I do this: fs.readFile('myFile.txt', function(data) {sys.puts(data);}); it prints 'null'
[01:26] objectvar: even if myFile.txt exists ... is it a permissions thing?
[01:26] bingomanatee: Nothing can run forever without crashing. 
[01:27] bingomanatee: At the least you have to consider the fact that the sun is going to die out pretty soon. 
[01:27] echosystm: let me rephrase... how stable is 0.4 ?
[01:27] echosystm: (particularly the SSL/TLS bits)
[01:27] marcello3d: objectvar: isn't it function(err,data) { .. }
[01:27] bingomanatee: It doesn't have PHP's memory leaks 
[01:27] marcello3d: http://nodejs.org/docs/v0.4.0/api/fs.html#fs.readFile
[01:27] bingomanatee: and it doesn't get hammered as badly as Apache when simultaneous users request from it
[01:28] marcello3d: yea
[01:28] bingomanatee: So it is only a little more stable than the languages now in production. 
[01:28] objectvar: marcello3d, I see: fs.readFile(filename, [encoding], [callback])
[01:28] marcello3d: do people use load balancers in front of node?
[01:28] marcello3d: objectvar: look at the code example
[01:28] objectvar: oops ... geez ... see my mistake ... grrrrrrrrrrrr
[01:29] objectvar: I need to learn to read
[01:29] bingomanatee: I don't know of any sites with that kind of traffic that are relying on node.js - they may exists I just don't know what they are. 
[01:29] objectvar: thanks
[01:29] marcello3d: sure
[01:29] marcello3d: the err thing is ugly, but there's no way around it in an async system
[01:29] objectvar: what a way to introduce myself!
[01:29] marcello3d: you either have  second callback for errors, or pass it into the callback
[01:29] bingomanatee: yep, now you need a new nick. 
[01:29] Friice: i have an apache server and i have a nodejs server serving some json
[01:29] Elaine1 has joined the channel
[01:29] Elaine1: hi
[01:29] Elaine1: i heard that abc_ has cancer and is terminal
[01:30] bingomanatee: What is your feeling for robustness / stability Friice?
[01:30] Friice: if i run the nodejs server on a different port of the main domain
[01:30] Friice: i have to use jsonp right? that means i should run it on the same domain to avoid that?
[01:31] bingomanatee: Node + http requires its own port. It will fail when you launch it against a port that is in use. 
[01:31] objectvar: the example that I was looking at was old ... 
[01:31] jimt_ has joined the channel
[01:33] marcello3d: you can use mod_proxy
[01:33] marcello3d: to route a particular url path to node...
[01:34] Friice: right
[01:34] Friice: but that's also sort of iffy haha
[01:35] marcello3d: how so?
[01:35] marcello3d: that's basically what fast-cgi + php is
[01:37] eventi has joined the channel
[01:37] Friice: I mean I am going to do that
[01:37] MatthewMueller has joined the channel
[01:37] Friice: just feels a lot less optimal than it should
[01:37] zentoooo has joined the channel
[01:37] marcello3d: then don't use apache ;)
[01:37] bingomanatee: My feeling is no matter what your platform, relying on a system with a single point of failure is unwise - you always want to assume it will fail and code around that. Anything else (on a professional level) is either naive or unwise. 
[01:38] marcello3d: you referring to apache?
[01:38] bingomanatee: Node has a lot fewer moving parts than LAMP stacks and RoR so is commeasurately more stable - however because you gain performance by flattening the stack, you really have to assume that any borderline code failures will bring down the whole thing and code for that. 
[01:38] jimt has joined the channel
[01:39] bingomanatee: I'm not actually referring to anyting. 
[01:39] marcello3d: I mean, you NEED some kind of load balancer
[01:39] bingomanatee: I am saying - if you code in Node, your server stack is going to be a persistent system and when that persistent system fails
[01:39] bingomanatee: you will need a second system to bring it back. 
[01:39] marcello3d: ideally something lightweight that rarely breaks, and can handle multiple nodes
[01:39] Friice: someone make a cms in node
[01:39] Friice: i'll dump apache
[01:40] bingomanatee: You can use a traditional load balancer in front of node  if you want. 
[01:40] SvenDowideit has joined the channel
[01:40] bingomanatee: Or write one in node - its not that hard. 
[01:40] marcello3d: bingomanatee: that's my point
[01:40] Friice: don't we already have one
[01:40] marcello3d: are there any?
[01:40] davidc_ has joined the channel
[01:40] davidc_ has joined the channel
[01:40] marcello3d: that are decent?
[01:40] bingomanatee: I guess a node balancer is a good failover system. 
[01:40] bingomanatee: dunno. 
[01:40] AAA_awright: Friice: http://magnode.org/ is a WIP
[01:40] marcello3d: https://github.com/donnerjack13589/node-balancer
[01:41] marcello3d: that website is ugly :(
[01:41] AAA_awright: Mine?
[01:41] marcello3d: magnode
[01:41] AAA_awright: ...it's a WIP what can I say
[01:41] AAA_awright: Patches welcome :p
[01:41] Friice: oh holy shit
[01:41] marcello3d: :)
[01:41] Friice: awesome
[01:41] bingomanatee: Looks good to me. 
[01:41] marcello3d: maybe it's just my browser
[01:42] AAA_awright: It's self serving, btw, lad balanced off of 4 Node.js instances
[01:42] marcello3d: I see lots of different fonts and lack of whitespace
[01:42] bingomanatee: Lets all use that, then be mean to AAA_awright when it fails!
[01:42] AAA_awright: *load
[01:42] Friice: oh have you also seen this
[01:42] Friice: https://github.com/robrighter/node-cms
[01:42] AAA_awright: Friice: Yeah that looks more like a document management platform thing, I'm going after data management and stuffs
[01:43] AAA_awright: Friice: Specifically, I'm representing *all* data with RDF
[01:43] bingomanatee: Seems like node-cms is far behind noogle, and thats not saying much. 
[01:43] iszak has joined the channel
[01:43] bingomanatee: I mean express + mongoose == cms. 
[01:43] AAA_awright: noogle?
[01:43] bingomanatee: At least I got a parametric form engine. 
[01:44] bingomanatee: Noogle is backed by express.js MVC based system. 
[01:44] Friice: i kinda want to try it
[01:44] Friice: why not github?
[01:44] bingomanatee: Has forms, routes, model, user/llogin and a spider. 
[01:44] bingomanatee: it is in github. 
[01:45] Friice: sorry i meant magnode
[01:45] bingomanatee: Its not by any means "Mature" - its just an extension of express and is bound to mongo. 
[01:45] bingomanatee: what is magnode?
[01:45] Friice: http://magnode.org/
[01:45] AAA_awright: Friice: Take a look at the downloads page, though it's not usable in any form
[01:46] bingomanatee: Magnode looks pretty mature. 
[01:46] bingomanatee: Does it sit on Express or just extend core Node?
[01:46] AAA_awright: All core
[01:46] marcello3d: hardcore :)
[01:46] Friice: your documentation is quite long
[01:47] AAA_awright: Plus Jade, a module for handling form data, and two modules for RDF data
[01:47] AAA_awright: It's suprisingly sparse, and mostly to-dos
[01:47] bingomanatee: ACTION can pull a vaporware CMS out of his ass too...
[01:47] AAA_awright: But it's coming along
[01:47] AAA_awright: I'll have a release once it has enough functionality to work as a blog
[01:47] mscdex: who owns magnode.org?
[01:47] AAA_awright: ME
[01:47] AAA_awright: *Me
[01:47] bingomanatee: At this point until nupal exists I really don't see why you can't just bind your favorite model to express and run with it. 
[01:48] mscdex: there's a spelling mistake on the front page :S
[01:48] Friice: what's nupal
[01:48] AAA_awright: What mistake
[01:48] bingomanatee: my fantasy CMS - drupal in node. 
[01:48] AAA_awright: I thought so
[01:48] Friice: ahh yeah, i'm going the other way lol
[01:48] mscdex: it should be "flexible templating systems" instead of "flebible"
[01:49] mscdex: :)
[01:49] bingomanatee: its fantastic -- in my head :D
[01:49] AAA_awright: bingomanatee: I'm pulling the good stuff off of Drupal, though I have to admit there isn't much good parts
[01:49] Friice: using this
[01:49] Friice: https://github.com/synodinos/nodepal
[01:49] Friice: too bad php is pretty lame
[01:49] bingomanatee: I think there are a lot of good use patterns in terms of the way the community modules interoperate. 
[01:49] bingomanatee: Its cleverer than you might think from a superficial use of Drupal.
[01:49] AAA_awright: Friice: Actually for testing I am importing Drupal data and trying to re-host it
[01:50] AAA_awright: hundreds of nodes worth, >3000 RDF triples
[01:50] LadyGaga: Given this XML tag: <expandedframe src="/198.xml" global></expandedframe>
[01:50] Friice: pretty cool, so what kind of stuff is stored in database vs code?
[01:50] LadyGaga: How would I parse for the global word?
[01:50] AAA_awright: mscdex: hah wow
[01:51] bingomanatee: I think that a basic component model for Express would be the best first step. I have blueprints for it but I haven't fleshed it out. I am working on Node documentation integration into Noogle right now - when I get done with that I will focus on a component model for Express (or already have one. 
[01:51] bingomanatee: )
[01:51] AAA_awright: Friice: RDF is pretty flexible so I'm storing almost _everything_ in database, including the descriptions of content types as Drupal does
[01:51] bingomanatee: ACTION is writing a web service for Drupal in Zend Framework for work
[01:52] AAA_awright: Except there's not just one data source, so you're not limited to a users table (for instance) to authenticate users against
[01:52] bingomanatee: Drupal would be a find web service -- if all the joins didn't bweak its widdle head... :D
[01:52] bingomanatee: so I take bits of data from views and sew them together in Zend, caching the components with Zend_Cache. 
[01:52] bingomanatee: Its so retarded I feel a little embarrased for charging for it ... but I get a lot of other stuff tossed at me. 
[01:52] Friice: what about development and version control
[01:53] bingomanatee: I have a whole thesis on that. 
[01:53] maru_cc_ has joined the channel
[01:53] bingomanatee: http://www.wonderlandlabs.com/wll_drupal/os/changes.html
[01:53] marcello3d: ugh. mongodb-native is annoying me more :(
[01:53] marcello3d: I'm stepping through its code in node-inspector
[01:53] mscdex: AAA_awright: also under "Event-oriented architecture": s/efficency/efficiency, and 
[01:53] bingomanatee: Don't worry. Tomorrow will be worse. 
[01:53] mscdex: er that's it
[01:53] mscdex: :)
[01:53] marcello3d: it does so many things...including using callbacks when they aren't even needed
[01:54] bingomanatee: If you could design an app that integrates the data model with git in some way you would really have something. 
[01:54] Friice: what do you think about aegir bingomanatee?
[01:54] marcello3d: node-git? :D
[01:54] bingomanatee: HEY! this is node.js - callbacks are ALWAYS needed! 
[01:54] bingomanatee: every variable should be a callback. 
[01:54] bingomanatee: aegir? 
[01:54] marcello3d: yea no.
[01:54] marcello3d: only when IO/interrupts are involved should async be used
[01:55] AAA_awright: bingomanatee Friice: RDF stands for Resource Description Framework, and the mechanic I'm using is serve HTML representations of those resources, when you ask for them. So when you request http://magnode.org, the process asks for the data about the <http://magnode.org> resources and HTML-izes it, though you could also ask for it in XML or N3 or RDFa whatever format
[01:55] bingomanatee: Aegir looks like Hugh Hefner's not new wife. She may be hot but Hef, you're still old. 
[01:56] bingomanatee: Yeah I think if you were to just flatten every record into a REST representation of itself you could maintain your whole site with Git. It would be laborious but you would get conflict notices on your data changesets when you were ready to merge. 
[01:57] bingomanatee: However if you kept EVERYTHING - files, code, data - in a repository like Mongo and applied Git-like functionality on it -you could make a pretty amazing deployement system. 
[01:57] Friice: aegir is a good pattern for maintaing sites in database
[01:57] bingomanatee: Yes - if you drink the SQL coolaid I am sure it is okay 
[01:58] altamic has joined the channel
[01:58] altamic has joined the channel
[01:58] bingomanatee: but I think that I would prefer to see a nondenominational system for data state archiving and retrieval
[01:58] broofa has joined the channel
[01:58] AAA_awright: I think we end up seperating content from presentation for a reason
[01:58] Friice: well yes
[01:59] perezd has joined the channel
[01:59] Friice: and exactly, so you can't just flatten everything
[01:59] bingomanatee: I know I'm a bit Quixotic at this point but I see everything from the Mongo perspective - resources should be nested documents and changesets should be relevant to these, not some ancient SQL artifact. 
[02:00] bingomanatee: If I have a real estate site and I have a nested document that describes a house, and I work on it as a developer, and my client works on it in the admin, I care only about when I try to merge my house with his. 
[02:00] bingomanatee: If there is a conflict there, I have a human decision to make. I don't give a shit about complex trees of SQL tables with integer IDs and such. 
[02:00] Friice: what if your client wants to merge a house
[02:01] montylounge has joined the channel
[02:01] bingomanatee: Its just basic version control. The client is the trunk. I'm the developer - I fork the trunk to work on it and when I merge I most likely defer to the client's version of reality
[02:01] bingomanatee: Probably, I recheck out the bits of data that are in conflict and re-develop around them. 
[02:01] NuckingFuts has joined the channel
[02:01] AAA_awright: Friice: If you're interested in what I'm doing I know I'll need testers who are setting it up new
[02:02] bingomanatee: Generally I'd expect that the client and the developer mostly deal with different parts of the app but when there is a conflict you have a brain-based decision point.
[02:02] Me1000 has joined the channel
[02:03] bingomanatee: I know its simplistic and abstract but that is my perspective on the general deployment problem. 
[02:03] Blink7_ has joined the channel
[02:04] Friice: well, if it works for you :)
[02:04] Friice: AAA_awright yeah please, what can I do for you :)
[02:04] bingomanatee: it would - if it existed. 
[02:04] bingomanatee: Yes - I would also like to try your system AAA_awright. 
[02:05] AAA_awright: bingomanatee: Absolutely
[02:05] AAA_awright: I don't have anything right now
[02:05] AAA_awright: Friice bingomanatee: What do you know about RDF?
[02:05] MikhX has joined the channel
[02:05] bingomanatee: Nothing
[02:05] Friice: it's a way of describing content?
[02:05] Friice: i just went to the 4store site
[02:06] bingomanatee: I've been meaning to get into semantics. 
[02:06] AAA_awright: I wonder if there's a good, non-prohibitive way of introducing it
[02:07] AAA_awright: Because it's a REALLY steep learning curve right now
[02:07] bingomanatee: convert it to a SQL schema and write a Drupal module for it :D
[02:07] bingomanatee: kidding...
[02:08] AAA_awright: Read the front page (which I need to figure out how to fix) and tell me if it's helpful at all in describing what it does
[02:08] AAA_awright: Or what it's useful for
[02:08] bingomanatee: I think if you were to write a utility that saves application state in RDF and compares versions of RDF archives to eachother as a preflight tool that would be usefl. 
[02:08] bingomanatee: I think I get it. 
[02:08] ezmobius has joined the channel
[02:08] bingomanatee: Its a non-denominational data storage structure 
[02:08] AAA_awright: Yeah, one of the tricky things is it's not a data format like XML, it's a data model more like the DOM
[02:09] bingomanatee: Sure - its a storage convention. 
[02:09] devrim1 has joined the channel
[02:09] pengwynn has joined the channel
[02:09] bingomanatee: I think the fact that it is designed to interoperate between repositories is interesting - but if you can store any single repo in it and save state with it, then do difference analysis, that alone would be useful.
[02:10] bingomanatee: If you can then apply the diffference engine to several data repos that would be a good thing. 
[02:10] bingomanatee: If you could for instance store RDF data with every Git push then use a seperate engine as a difference engine you could solve some deployment tasks. 
[02:11] bingomanatee: Especially if you can deploy part of the RDF through the Git file system in order to get more intelligence right off the bat about what changed. 
[02:12] MatthewMueller: Does anyone know a good way of printing out the contents of an object without escaping characters like util.inspect() or console.log() do?
[02:13] AAA_awright: bingomanatee: Revisioning RDF is a challenge... The best way I've heard is you use an append-only database, and use a reasoner to determine the "current" data. For instance, "This is a status update" "This is a new status update" then a reasoner keep up-to-date the "current status"
[02:13] bingomanatee: Have you tried JSON.stringify(obj)?
[02:14] AAA_awright: That's going to escape newlines and backslashes
[02:14] MatthewMueller: yah, that's not what I want either.
[02:14] bingomanatee: AAA_awright: but can you break out RDF to make it atomic enough that every record is a file? 
[02:14] bingomanatee: SO you can have a folder system like/database/table/record_id.json
[02:14] AAA_awright: MatthewMueller: I thought there was some colorizing console output console.log replacement
[02:14] bingomanatee: and if you digest your database that granularly 
[02:15] bingomanatee: then you can use git merge data to gain intelligence on conflicting data states.
[02:15] brainproxy: MatthewMueller: so you want to see the UTF-8 in the output, is that it?
[02:15] MatthewMueller: AAA_awright: what about colorizing console output?
[02:15] Friice: anyone know of any cloud host where i can install drupal+node?
[02:15] MatthewMueller: brainproxy: Yah
[02:15] brainproxy: MatthewMueller: what about some funcs like this:
[02:15] brainproxy: http://pastie.org/1561180
[02:15] bingomanatee: ack. 
[02:16] AAA_awright: MatthewMueller: There should be something you drop-in replace console.log=require('color-seralizer'); or something, I'm sure something like that exists
[02:16] LadyGaga: Given this XML tag: <expandedframe src="/198.xml" global></expandedframe>
[02:16] LadyGaga: How would I parse for the global word?
[02:16] Friice: yeah you can find the node color package on github
[02:16] MatthewMueller: brainproxy: Thanks I'll check that out.
[02:16] AAA_awright: LadyGaga: That's not valid XML
[02:16] AAA_awright: So, you can't
[02:16] LadyGaga: Why isn't it valid?
[02:16] bingomanatee: property with no value.
[02:17] MatthewMueller: AAA_awright: I'm a little confused by what you're saying - I'm not doing anything with colored output
[02:17] AAA_awright: It needs a value, yeah
[02:17] Blink7 has joined the channel
[02:17] AAA_awright: MatthewMueller: Just some debugger seralizer?
[02:17] AAA_awright: MatthewMueller: The colored output was a sugguestion I assumed you were trying to pretty-print objects
[02:18] bingomanatee: AAA_awright: I don't want to make RDF solve the versioning problem - I just want to use it to store state and run differentials with an outside system. 
[02:18] MatthewMueller: Oh.. nope, just some function that will serialize an object without escaping it - actually part of the functionality not for debugging purposes
[02:18] LadyGaga: I don't see why a property has to have a value.
[02:18] brainproxy: MatthewMueller: keep in mind those methods I posted will be expensive
[02:19] AAA_awright: LadyGaga: This would be valid <expandedframe src="/198.xml" global="global"></expandedframe>
[02:19] brainproxy: if the object's stringified value is significantly large
[02:19] LadyGaga: Such a restriction makes no sense.
[02:19] AAA_awright: LadyGaga: But what you provided should trigger a parser error
[02:19] LadyGaga: Hmm, redundant though
[02:19] tmzt: sholmes: hmm, okay. I haven't needed their support no issues with uptime though, nothing mission critical I just use it for staging right now
[02:19] MatthewMueller: brainproxy: yah thanks, I'll definitely keep that in midnnd.
[02:19] bingomanatee: MatthewMueller - you probably have to create a custom system to harvest, save and display your data as you like it if the conventional representations don't work for you
[02:19] isaacs has joined the channel
[02:20] AAA_awright: LadyGaga: No, simpler to parse, XML is a much simpler subset of SGML where a property with no value is acceptable
[02:20] brainproxy: bingomanatee: also remember that JSON.stringify silently drops functions
[02:20] brainproxy: sorry i MatthewMueller ^^
[02:20] brainproxy: not bingomanatee 
[02:20] luke` has joined the channel
[02:20] LadyGaga: So then how do check for the existence of the global property when using document.XMLObject?
[02:20] bingomanatee: that is odd, isn't it?
[02:20] LadyGaga: err, XMLObject
[02:20] isaacs: SubStack: yo.  https://github.com/isaacs/npm/issues/issue/580/
[02:20] sholmes: tmzt: wha?
[02:21] SubStack: click
[02:21] AAA_awright: LadyGaga: What module are you using to parse the XML?
[02:21] tmzt: sholmes: 2host, I just saw your response
[02:21] SubStack: isaacs: oh crap!
[02:22] mscdex: Qt or wxWidgets binding?
[02:22] Blink7_ has joined the channel
[02:22] boogyman has joined the channel
[02:22] AAA_awright: LadyGaga: Also, I would read up on the XML specication http://www.w3.org/TR/xml/ and more from http://www.w3.org/standards/xml/core
[02:22] SubStack: isaacs: ok fixed
[02:22] isaacs: SubStack: great, thanks :)
[02:22] LadyGaga: What is included with node to parse XML by default?
[02:22] isaacs: LadyGaga: the javascript String type.
[02:23] isaacs: LadyGaga: ;)
[02:23] brainproxy: LadyGaga: javascript has regex :)
[02:23] vilsonvieira has joined the channel
[02:23] isaacs: oh, that too.  regexp
[02:23] isaacs: yeah
[02:23] sholmes: tmzt: how long ago did I ask about them.. Heh, all well.
[02:23] LadyGaga: isaacs: :@
[02:23] isaacs: LadyGaga: there are a few xml parsers you can install pretty easily with npm.
[02:23] sholmes: I went with IntoVPS btw
[02:23] isaacs: ACTION wrote one of them.  the slowest awfulest one.
[02:23] sholmes: so far so good. They have a chat on their site and an IRC.
[02:23] piscisaureus: isaacs: that post of yours about the error event, it's a total mystery to me ...
[02:24] AbyCodes has joined the channel
[02:24] isaacs: piscisaureus: oh?
[02:24] isaacs: piscisaureus: you'd prefer it not throw?
[02:24] piscisaureus: is the error event being discussed like it shout be removed?
[02:24] isaacs: piscisaureus: nonono
[02:24] ryanfitz: ACTION did stuff
[02:24] LadyGaga: Wait, I thought node has a built in XML parser?
[02:24] piscisaureus: no I like it the way it is
[02:24] piscisaureus: but why did you start a discussion about it then?
[02:24] brainproxy: ACTION wants SO badly that someone should drop out of nodeconf so he can get off the waitlist
[02:24] NuckingFuts: LadyGagaLord, I wish.
[02:24] isaacs: piscisaureus: someone was like "why does it do this??" and i was all "cuz, we decided like a long long time ago."  and then provided a link.
[02:25] piscisaureus: a ha
[02:25] LadyGaga: I might as well use JSON then!
[02:25] piscisaureus: hmm
[02:25] markstory has joined the channel
[02:25] ryanfitz has joined the channel
[02:25] piscisaureus: I think I missed the first part of the discussion then ...
[02:25] isaacs: LadyGaga: node doesn't come with many batteries included.
[02:25] isaacs: piscisaureus: ah,i see
[02:25] piscisaureus: heh lol
[02:25] NuckingFuts: LadyGaga: it's up to you lol
[02:25] piscisaureus: much ado about nothing
[02:25] isaacs: piscisaureus: at the time, i was the only one even slightly on the fence about it
[02:26] isaacs: piscisaureus: so it was somewhat gratifying for someone to complain about the inconsistency, even though it took a year XD
[02:26] LadyGaga: When we were kids we would destroy toys that didn't come with batteries included.
[02:26] SubStack: hooray by horrible bigint library is not so horrible anymore
[02:26] AAA_awright: LadyGaga: Yeah if you're representing structured trees of data you probably want JSON, unless you need specific XML features like for formatting
[02:26] SubStack: node-ffi <3
[02:26] isaacs: LadyGaga: that being said, the batteries are cheap and easily available.
[02:27] isaacs: LadyGaga: install npm, and then `npm ls xml`, and you'll see a bunch of choices.
[02:27] LadyGaga: Indeed
[02:27] SubStack: I'll do a quick blog post about this, node-ffi rocks
[02:27] AAA_awright: ...Or just look at the list and install by hand
[02:28] AAA_awright: Friice: Are you usually around to ping?
[02:28] isaacs: SubStack: yeah, node-ffi is cool
[02:28] piscisaureus: isaacs: actually, I liked the proposal by Stella Laurenzo to 'rethrow' exceptions thrown by EventEmitter callbacks as error events
[02:28] brainproxy: SubStack: looks neat, I've been thinking about a binding to lzjb and maybe a bindary diff utility and it looks like node-ffi might make it easier
[02:28] AAA_awright: Clearly bingomanatee just left... I'll check around later
[02:28] isaacs: piscisaureus: yeah, but that means wrapping every cb in a try/catch
[02:28] SubStack: brainproxy: check this out: https://github.com/substack/node-bigint/blob/master/bigint.cc 
[02:29] SubStack: that's all the c I had to write
[02:29] brainproxy: SubStack: unfortunately I've never prog'd a line of C / C++, but I'll bmark it as that will def be a helpful ref for me to build from
[02:29] piscisaureus: isaacs: is that bad? performance? I mean we'd just need to hack EventEmitter.prototype.emit
[02:29] SubStack: I just keep track of the IDs on the javascript side where stuff is more sane
[02:30] isaacs: piscisaureus: try/catch is pretty expensive, last i checked (which, granted, was quite some time ago)
[02:30] vonkow has joined the channel
[02:30] micheil: isaacs: did you get those slides, by any chance?
[02:30] isaacs: piscisaureus: the thing about EventEmitter#emit is that it's the hottest code in node, so even a slight change can make a huge difference.
[02:30] isaacs: that's why it's so obnoxiously optimized
[02:31] dingomanatee has joined the channel
[02:31] isaacs: it's tempting to think "This api could be much more convenient!" but it's sparse for a good reason.
[02:31] piscisaureus: hmm
[02:31] dingomanatee: Is anyone in this channel based in the South Bay?
[02:31] cronopio has joined the channel
[02:31] isaacs: micheil: no, i think you im'ed me?  can you email whatever it was?
[02:32] piscisaureus: yeah I understand the reasoning
[02:32] micheil: sure, which address?
[02:32] dingomanatee: I am presenting to the south bay LAMP group on March 22nd and would love to have more company. 
[02:32] dingomanatee: My stuff is pretty thin at this point. 
[02:32] isaacs: oh, er, wait, nvm, i can just search gmail, i'm dumb.
[02:32] brainproxy: isaacs: what is the relationship between the EventEmitter code in lib/ which is javascript and the c++ source?
[02:33] micheil: brainproxy: somewhat none, in short
[02:33] micheil: but at the same time heaps
[02:33] isaacs: brainproxy: js one is used almost everywhere, and the other is likely soon to be deprecated.
[02:33] isaacs: but there's still a few objects using it, i believe
[02:33] brainproxy: I recently wrote an abstraction class around EventEmitter so that you can use a custom-emitter with the exact same API whether you're in a browser or in node.js
[02:33] micheil: oh, right, I read that as the relationship between Events.js and the C++ source code
[02:34] brainproxy: if anyone is interested
[02:34] isaacs: once upon a time, event emitters were all instances of the C++ class, and the js was a light wrapper.
[02:34] brainproxy: micheil: yes, that's what I meant
[02:34] micheil: brainproxy: been there, done it :P
[02:34] sivy has joined the channel
[02:34] micheil: the C++ class isn't used much anymore, if at all.
[02:34] piscisaureus: isaacs: I doubt a js->c traversal performs any better than try catch
[02:34] kkaefer: micheil: emit is still implemented in C++
[02:35] dingomanatee: what remaining functionality is still in C?
[02:35] dingomanatee: ^ ^ race condition
[02:35] piscisaureus: questionSemaphore = new Semaphore(1);
[02:35] micheil: EventEmitter.emit is in javascript
[02:35] ChrisPartridge has joined the channel
[02:36] piscisaureus: huh no
[02:36] piscisaureus: micheil: where is it in c then?
[02:36] kkaefer: micheil: oh... yeah
[02:36] kkaefer: micheil: the Emit function is still there
[02:36] kkaefer: but it's not added to the prototype in Initialize...
[02:36] micheil: The C++ Class is only used within other C++ classes, iirc.
[02:37] piscisaureus: huh yeah
[02:37] LadyGaga: Is node.js Javascript faster than Ruby?
[02:37] kkaefer: oh true, so that's why Emit exists
[02:37] skm has joined the channel
[02:37] piscisaureus: emit is both in c++ *and* js
[02:37] kkaefer: piscisaureus: the emit function you call from JS is different from the one you call from C++
[02:37] zentoooo has joined the channel
[02:37] brainproxy: LadyGaga: I think you'd need to scope the question a bit better
[02:38] micheil: isaacs: is process.eventemitter even defined?
[02:38] micheil: LadyGaga: it's not something that easy to compare.
[02:38] piscisaureus: the Emit method in C++ ... that's just stupid
[02:38] kkaefer: piscisaureus: so when your C++ addon calls obj->Emit(String::NewSymbol("foo")), it's a different method from obj.emit("foo") in javascript
[02:39] LadyGaga: Hmm
[02:39] kkaefer: piscisaureus: technically you don't need that method, yeah
[02:39] brainproxy: LadyGaga: if you want ruby-like OO facilities when writing your javascript you may want to look at joose:  http://joose.it
[02:39] kkaefer: you could do obj->Get(String::NewSymbol("emit"))
[02:39] kkaefer: and call that function
[02:39] piscisaureus: kkaefer: yes and that's how it should be done
[02:39] kkaefer: hmm, you might be right
[02:40] kkaefer: can't think of any good reasons why that's still in C++
[02:40] piscisaureus: no me neither
[02:40] kkaefer: if at all, ->Emit() should call that, as a convenience wrapper
[02:40] kkaefer: instead of iterating through the listeners of its own
[02:40] yozgrahame has joined the channel
[02:40] kkaefer: might be the source of nasty bugs when the C++ implementation differs from the JS implementation
[02:41] tilgovi has joined the channel
[02:41] sholmes: Anyone know where to get help on apache/server stuff?
[02:41] piscisaureus: I didn't do no benchmarking but afaict v8 generates more efficient code than what we can achieve with c++
[02:41] piscisaureus: well, when heavily accessing js stuff, that is
[02:42] brainproxy: sholmes: why not ask around in #slicehost, lots of knowledgeable folks there
[02:42] sholmes: well, I don't have a slicehost account, does that matter?
[02:42] brainproxy: not really, just ask general questions :)
[02:42] brainproxy: it may not be the support staff that answers, but just other folks hanging out
[02:43] sholmes: oh okay, cool. Thanks buddy
[02:43] isaacs: micheil: yes, process.EventEmitter still exists.  Don't rely on it.  Use the require('events').EventEmitter
[02:43] piscisaureus: isaacs: suppose that v8 would make try/catch fast, what would you think about this exception->error event proposal
[02:43] piscisaureus: ?
[02:43] micheil: yeah, I just noticed it still in the node.cc code..
[02:43] isaacs: piscisaureus: it'd be pretty neat.
[02:43] piscisaureus: (because I happen to know they do care about it :-))
[02:44] isaacs: piscisaureus: so just to be clear:  e = new EventEmitter; e.on("error", function (er) { console.log(er.message) }) ; e.on("foo", function () { throw new Error("foo") }) ; e.emit("foo") <-- logs "foo" to console.
[02:44] isaacs: by triggering error event
[02:45] piscisaureus: yeag
[02:45] piscisaureus: yeah
[02:45] isaacs: i guess it'd be fine.
[02:45] isaacs: if you don't have an error handler, it'll just re-throw anyhow
[02:45] isaacs: it'd be important to not infinitely cycle on the error event, but that's not too hard.
[02:45] piscisaureus: or we shouln't emit an error event in the first place
[02:46] piscisaureus: just let the rethrow the exception as-is
[02:46] micheil: if(type != 'error') this.emit('error', er);
[02:46] isaacs: sure, so, if ev === "error", then don't try/catch
[02:47] isaacs: and what micheil said :)
[02:47] micheil: hmm, maybe, but that'd be hot.
[02:47] micheil: more so inside the try/catch
[02:47] piscisaureus: if (ev == 'error' || this.listeners('error').length) don't try catch
[02:47] isaacs: right
[02:47] piscisaureus: damn I can't type
[02:47] piscisaureus: if (ev == 'error' || this.listeners('error').length == 0) don't try catch
[02:47] micheil: so only if we throw do we do that check
[02:48] micheil: I don't think the overhead of try/catch is that much, is it?
[02:48] isaacs: if (ev !== 'error' && this.listeners('error').length) { try { emit } catch (er) { this.emit('error', er) }} else { emit }
[02:48] isaacs: micheil: emit is a racecar.
[02:48] jimt_ has joined the channel
[02:48] isaacs: micheil: air resistance matters.
[02:48] piscisaureus: I think isaacs is right
[02:48] micheil: hmm, okay
[02:48] piscisaureus: but it depends on how bad try-catch is perf-wise
[02:48] isaacs: yeah
[02:49] isaacs: even 1-2% would be pretty terrible.
[02:49] piscisaureus: we could write two EventEmitter.prototype.emit's
[02:49] isaacs: but if v8 seriously makes it really fast, or if we can hide it behind a "debug" flag, then fine.
[02:49] piscisaureus: as soon as the emitter gets an error listener attached we swap the non-catching version for the slow version
[02:50] micheil: hmm..
[02:50] isaacs: piscisaureus: you still have to fork the behavior based on event typ[e
[02:50] piscisaureus: isaacs: ?
[02:50] isaacs: foo.on('error', function (er) { throw er })
[02:50] konobi: premature optimization is the root of all evil
[02:50] isaacs: infinity^
[02:51] konobi: benchmarks baby... benchamrks
[02:51] isaacs: konobi: i agree.
[02:51] piscisaureus: isaacs: yeah but then just 
[02:51] piscisaureus: try { listener() } catch (e) { if (event != 'error') emit error
[02:51] isaacs: i think in this case, it's worthwhile to just implement it simply, and see what the impact is.
[02:51] isaacs: or benchmark the actual overhead of try/catch
[02:51] dingomanatee: What is the simplest/best way to read in an HTML page and walk its dom nodes?
[02:52] isaacs: dingomanatee: check out jsdom
[02:52] meso has joined the channel
[02:52] isaacs: dingomanatee: jsdom is your friend.  `npm docs jsdom`
[02:52] PyroPeter has joined the channel
[02:52] piscisaureus: jsdom is awesome
[02:53] piscisaureus: konobi: it depends on how you define premature
[02:54] konobi: you have zero idea if it is actually slower or not... it's just a hunch... that's premature
[02:54] isaacs: konobi: i did measure this about 8 months ago
[02:54] dingomanatee: all jsdom seems to be from the tests is creating a set of dom nodes - is there a good example of reading and walking along existing HTML?
[02:54] Evet__ has joined the channel
[02:54] piscisaureus: suddenly I'm a little scared of isaacs
[02:55] isaacs: konobi: both a function that "did stuff" and a noop.  both had relevant slowdowns, but granted, nothing compared to the overhead of IO
[02:55] konobi: meh, he's fairly harmless =0)
[02:55] isaacs: hehe
[02:55] isaacs: ACTION wrote node-bench for these kinds of bullshit debates
[02:55] micheil: http://jsperf.com/try-catch-002
[02:56] micheil: there's some big differences
[02:56] micheil: like, 100,000,000 ops/sec
[02:58] therrg has joined the channel
[02:58] konobi: that's 0.000000000001 sec per op vs 0.00000000001 sec per op
[02:58] konobi: =0)
[02:59] micheil: it is still a significant change
[03:00] konobi: at that point you're worrying about cpu-switching latency
[03:00] isaacs: ACTION re-running the benchmark..
[03:00] mscdex: node.js rules!
[03:01] piscisaureus: v8: var count = 0, inc = function() { count++; }, start = new Date(), delta; do { inc(); delta = (new Date()) - start; } while (delta < 5000); (count / delta) + " ops/sec without try/catch";
[03:01] therrg: Hey there -  what's the correct way to handle binary data? The docs at http://nodejs.org/docs/v0.4.0/api/buffers.html#buffers are confusing. The bit under the 'binary' encoding tells you not to use that encoding method... what's the alternative?
[03:01] v8bot: piscisaureus: Error: Timeout
[03:01] dingomanatee: after I type "npm docs jsdom" where do I go to read said docs?
[03:01] piscisaureus: v8: var count = 0, inc = function() { count++; }, start = new Date(), delta; do { inc(); delta = (new Date()) - start; } while (delta < 1000); (count / delta) + " ops/sec without try/catch";
[03:01] v8bot: piscisaureus: "967.537 ops/sec without try/catch"
[03:01] isaacs: dingomanatee: it should try to open in a web browser.
[03:01] piscisaureus: v8: var count = 0, inc = function() { count++; }, start = new Date(), delta; do { try { inc(); } catch (e) {}; delta = (new Date()) - start; } while (delta < 1000); (count / delta) + " ops/sec with try/catch";
[03:01] v8bot: piscisaureus: "917.721 ops/sec with try/catch"
[03:02] jdub: isaacs: wow, that burns
[03:02] AAA_awright: piscisaureus: new Date() is a suprisingly long operation
[03:03] isaacs: jdub: all that proves is that try/catch is less overhead than new Date()
[03:03] piscisaureus: yeah it surprises me how bad it is
[03:03] isaacs: piscisaureus: check out node-bench.
[03:03] isaacs: it's relentless
[03:03] jdub: isaacs: oh, i missed earlier talk, just looking at try/catch vs. not
[03:03] AAA_awright: I have to sample a few runs and then guess how many runs won't go over 3 seconds of testing, to avoid using new Date() within my benchmarks
[03:03] piscisaureus: isaacs: can I run that on windows you think?
[03:04] piscisaureus: like, without an hour of coding before it?
[03:04] postwait: isaacs: doesn't that count the Date creation and math in the ops?
[03:04] isaacs: piscisaureus: https://gist.github.com/1bd41bf74c2bf95d24fc
[03:04] isaacs: piscisaureus: pretty damning, actually.
[03:05] piscisaureus: isaacs: hmm that really sucks bigtime
[03:05] dingomanatee: boom! NSPlugin Viewer  *** WARNING: unhandled variable 18 (<unknown variable>) in NPN_GetValue()
[03:05] admc has joined the channel
[03:05] isaacs: noop wihtout tc: 91473.  noop with tc: 14078
[03:05] Ari-Ugwu has joined the channel
[03:05] marcello3d: not surprising really
[03:05] postwait: I agree it is not surprising.
[03:05] marcello3d: but if you put the try-catch outside the loop
[03:05] marcello3d: what's the difference?
[03:05] isaacs: the *worst* case is if you actually throw an error.
[03:05] postwait: but, unfair to say it is insignificant.
[03:06] piscisaureus: isaacs: but that isnt a hot path
[03:06] isaacs: then it goes from 10k rps down to 68
[03:06] piscisaureus: but try-catch itself should not hurt so match
[03:06] isaacs: yeah, actually throwing will be rare
[03:06] marcello3d: it's probably something v8 could optimize if they wanted to
[03:06] marcello3d: interesting
[03:06] postwait: try and catch are hard problems to optimize.
[03:07] isaacs: of course, the next step is to actually implement a catching-emit(), and then see how that affects the hello world benchmark, client benchmarks, etc.
[03:07] marcello3d: if I try to reuse server/collection objects
[03:07] marcello3d: they fail
[03:07] isaacs: things that actually emit a lot
[03:07] isaacs: as big a percentage as this is, it's still getting lots and lots of operations per second.
[03:07] jdub: isaacs: get any benches for eventemitters?
[03:08] isaacs: 8000 Hz is a lot of operations :)
[03:08] piscisaureus: I'm outa here. (that is "i gotta run" in izs-speak :-p)
[03:08] piscisaureus: I will bug mraleph tomorrow. He told me once they were on it, so maybe theres news.
[03:08] piscisaureus: isaacs: now kick me. just so you know what it feels like.
[03:08] dingomanatee: isaacs: I appreciate your help - the docs are not loading; when I run as myself it fails, when I sudo the command it loads the git site. 
[03:10] isaacs: ok, wrote a better benchmark...
[03:10] isaacs: piscisaureus: have fun :)
[03:10] isaacs: whoa!! i have rights!!
[03:10] ecto has joined the channel
[03:10] isaacs: hahaah
[03:11] admc1 has joined the channel
[03:11] isaacs: ACTION mwahahahah!!!
[03:11] marcello3d: isaacs: do multiple nested try-catches make it exponentially worse?
[03:11] isaacs: marcello3d: not sure
[03:11] marcello3d: or is it a one-time cost?
[03:11] isaacs: good question, though!
[03:11] ecto: hey guys, getting a weird error i've never seen before
[03:11] drdave has joined the channel
[03:11] ecto: running forever start app.js
[03:11] ecto: and i get node: symbol lookup error: /usr/local/lib/node/.npm/daemon/0.3.0/package/build/default/daemon.node: undefined symbol: ev_loop_fork
[03:11] postwait: marcello3d: should be linearly worse.
[03:11] isaacs: ok, actually wrapping an emit() call in a try/catch is about half as fast.
[03:11] isaacs: so yeah, that's pretty bad.
[03:11] postwait: there is fixed cost in v8 to setup a try block
[03:12] dingomanatee: is there a way to manually find and browse documentation?
[03:12] ecto: also any word on ssl in 0.4?
[03:12] admc has joined the channel
[03:12] postwait: ecto: working for me.
[03:13] ecto: i get socket hangups unless i fall back to 0.2.6
[03:13] luke` has joined the channel
[03:13] postwait: ecto: really? ssl is badly broken in the 0.2 series.
[03:13] isaacs: ecto: the api changed.
[03:13] isaacs: ecto: check the docs.  it's not .setSecure() any more.
[03:14] isaacs: ecto: use the new require('https').get(...)
[03:14] postwait: The tls stuff is new and different.
[03:15] ecto: well that makes a lot of sense.
[03:15] bmizerany has joined the channel
[03:15] isaacs: ok, even with a listener that does quite a bunch of stuff, not having a try/catch around it is 36.15% faster than having a try/catch
[03:15] ecto: sometimes i feel like node is moving too fast for me to keep up with
[03:17] marcello3d: it is
[03:17] eventi has joined the channel
[03:17] drdave: is there *any* sample code out there that will help me make sense of the mess that is tls.connect?
[03:18] mike5w3c_ has joined the channel
[03:20] postwait: drdave: what's the issue? tls.connect is fairly straight forward.
[03:20] drdave: postwait: i'd have hoped so...
[03:20] postwait: the only "odd" thing is that it is the only ssl-ish call that doesn't take the output of "createCredentials"
[03:20] drdave: but i'm spending ages running through the code trying to figure what's going on...
[03:20] postwait: it taks the _input_ of createCredentials.
[03:20] bentruyman has joined the channel
[03:21] drdave: after trying to refactor old code that used setSecure()
[03:21] drdave: first off: is there any reason why the callback might not be called?
[03:21] postwait: setSecure take the output of crypto.createCedentials({...})
[03:21] drdave: I know... I have changed that bit to match the doc...
[03:21] postwait: in the new tls stuff... you have to pass the {...}... (silly if you ask me)
[03:21] marcello3d: this is cool
[03:21] marcello3d: I'm porting a play/scala app to node.js
[03:21] marcello3d: and after a few days it's finally starting to look like the original app :)
[03:22] drdave: postwait: definitely stupid in terms of making the transition from previous API calls painless
[03:22] postwait: And.. wasteful
[03:22] marcello3d: painful process though
[03:22] postwait: If you are making a lot of outbound ssl connections...
[03:22] marcello3d: so many unstable apis in node.js
[03:22] drdave: it seems the socket gets opened, but the callback never called (not a huge deal, just don't get why)
[03:22] postwait: I'm going to see if that can be patched without breaking anything.
[03:22] postwait: I'll see if I can get some code out.
[03:23] keks has joined the channel
[03:23] drdave: also: is there any way to set event listeners for the socket before connecting (since the socket is created upon calling tsl.connect)?
[03:23] drdave: the lib i'm trying to fix relied heavily on setting all sorts of listeners before connecting... which seems impossible with the new API call...
[03:25] isaacs has joined the channel
[03:25] marcello3d: according to goolge chrome it's using 26 gigs of virtual memory
[03:25] marcello3d: (and 1.2 gigs of real)
[03:26] postwait: drdave: https://gist.github.com/825441
[03:26] lukegalea has joined the channel
[03:26] drdave: postwait: thanks. I'll play with this...
[03:27] drdave: but isn't the fact that listeners are set *after* connecting kind of a problem?
[03:27] keks: what is goint to happen to crypto when it is removed from core?
[03:27] drdave: what if the error or close msg gets sent immediately?
[03:27] postwait: no
[03:27] marcello3d: drdave: not if the actual connection happens once the js stack finishes
[03:27] drdave: is that callback function supposed to be called no matter what (doc seems to say yes)?
[03:28] marcello3d: e.g. similarly to process.nextTick
[03:28] postwait: drdave: not sure.
[03:28] drdave: hmn. ok... 
[03:28] keks: also regarding crypto, does anyone know why this doesn't work: https://gist.github.com/825438
[03:28] drdave: but then how can i ever be notified that the socket has connected?
[03:30] MatthewMueller has left the channel
[03:32] drdave: postwait: thanks for that code, but does it work on your end?
[03:33] postwait: yeah.. that's production code.
[03:33] drdave: over here, I can't ever get the callback to get executed (I replace the conncb by a log)
[03:33] drdave: no error either :/
[03:33] postwait: the part that got me was this.creds is what was the _input_ to crypto.createCredentials
[03:33] marcello3d: what do you guys use to gzip encode your output?
[03:34] postwait: drdave: does openssl s_client work for you?
[03:34] drdave: hold on
[03:35] LadyGaga has joined the channel
[03:36] LadyGaga: Does node.js have a recursive regular expression matcher?
[03:36] Aria: No, it's v8's as is.
[03:37] Aria: (regular expressions don't exactly recurse...)
[03:37] devrim has joined the channel
[03:37] marcello3d: what does that mean, LadyGaga?
[03:37] LadyGaga: So what do you do if you have multiple matches?
[03:37] marcello3d: oh
[03:37] marcello3d: just read up on javascript regexps
[03:37] marcello3d: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp
[03:37] postwait: repetitive matcher.. not recursive
[03:37] marcello3d: you probably want the /g flag
[03:37] LadyGaga: Yes, that I need
[03:38] marcello3d: and the exec method
[03:38] brainproxy: LadyGaga: recommendation, read the node.js API docs from start to finish
[03:38] brainproxy: besides that, it's just javascrit
[03:38] echosystm: SubStack: is there any way to get dnode to sit at a certain point in the rack when used with connect?
[03:38] brainproxy: so you can look to a good JS reference
[03:38] brainproxy: like MDC
[03:38] LadyGaga: Okay
[03:38] echosystm: i mean, instead of having it sit at the top?
[03:38] LadyGaga: MDC is not as good as Chome is it?
[03:39] brainproxy: the API docs and a JS refernce, that's all you need to know the basics of node
[03:39] brainproxy: well i meant for basic JavaScript reference material
[03:39] LadyGaga: So v8 is exactly the same as Mozilla's?
[03:39] LadyGaga: oh
[03:39] brainproxy: or get the JavaScript Definitive Guide book
[03:39] LadyGaga: ECMAScript ref
[03:40] brainproxy: LadyGaga: I mean this https://developer.mozilla.org/en/JavaScript/Reference
[03:40] brainproxy: and this: http://nodejs.org/docs/v0.4.0/api/
[03:40] marcello3d: nodejs docs won't talk about regexp though
[03:41] brainproxy: no, but there's info in mdc js ref
[03:41] LadyGaga: What's the wildcard in regular expressions?
[03:41] brainproxy: .
[03:41] brainproxy: is for any char
[03:41] marcello3d: cept newlines ;)
[03:41] LadyGaga: Well, I want to match newlines too :)
[03:41] marcello3d: depending on the flags
[03:41] marcello3d: read the docs
[03:41] brainproxy: LadyGaga: see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp
[03:41] marcello3d: it's something you gotta just learn
[03:42] marcello3d: javascript regular expressions are pretty standard
[03:42] marcello3d: (amazingly enough)
[03:42] LadyGaga: Okay, I am matching this: <div>[\s\S]</div>
[03:42] marcello3d: pretty forward thinking for them to have it in the standard
[03:42] marcello3d: that'll only match one character
[03:43] marcello3d: between <div> and </div>
[03:43] marcello3d: it's all explained on https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp
[03:44] marcello3d: though if you're new to regular expressions, you might want to find a general tutorial on how to learn them
[03:44] marcello3d: that doc is more technical/useful if you already know them
[03:44] marcello3d: and want to know any js-specific quirks
[03:44] samsonjs has joined the channel
[03:45] softdrink has joined the channel
[03:46] marcello3d: wow. express's gzip support spawns a child process and runs gzip o_O
[03:46] LadyGaga: marcello3d: Sounds inefficient
[03:46] marcello3d: that seems like it might add more overhead than you save by gzipping
[03:47] brainproxy: marcello3d: I've got the LZJB algo implemented in pure javascript in a github repo .. repo's not in that great of shape and no docs, but you might find it helpful
[03:48] brainproxy: it does work, is extremely fast
[03:48] brainproxy: and if there is a lot of repetitive stuff, it's pretty efficient
[03:48] LadyGaga: The solution: \(div\).*?\(</div>\)
[03:48] marcello3d: but browsers don't support that, do they?
[03:48] LadyGaga: Or maybe I should get an HTML parser :\
[03:48] brainproxy: marcello3d:  see https://github.com/michaelsbradleyjr/Compress
[03:49] brainproxy: at some point I'll clean up the repo and write an actual README :p
[03:49] LadyGaga: What's an awesome HTML parser?
[03:49] marcello3d: brainproxy: I'm looking for browser gzip compression though
[03:49] brainproxy: marcello3d: this lib can do lzbj in node and browser
[03:49] brainproxy: same code works in both contexts
[03:49] marcello3d: yes, but I'm trying to do standard http gzip compression
[03:49] marcello3d: via Accept-Encoding:gzip,deflate,sdch
[03:50] brainproxy: oh, i see, nvm then, sorry :)
[03:50] marcello3d: and responding with Content-Encoding: gzip
[03:50] marcello3d: thanks though :)
[03:50] brainproxy: yep
[03:50] marcello3d: there's this project: https://github.com/egorich239/node-compress
[03:50] LadyGaga: I wish there was a node-htmlparser
[03:50] marcello3d: which links to zlib
[03:50] brainproxy: maybe that node-ffi thing that substack mentioned can help
[03:51] marcello3d: LadyGaga: there is
[03:51] marcello3d: this page is your friend: https://github.com/ry/node/wiki/modules
[03:51] brainproxy: sounds like it would be more efficient spawning hcild
[03:51] brainproxy: *child process
[03:51] brainproxy: node-ffi that is
[03:51] marcello3d: https://github.com/tautologistics/node-htmlparser
[03:52] bronson: OK, here's the question I was asking poorly this morning...  Has anyone tied node.js and pushState together?
[03:53] marcello3d: node-ffi looks interesting but not the kind of thing I want to get involved with :)
[03:53] marcello3d: aha
[03:53] marcello3d: here we go: https://github.com/kriszyp/pintura/blob/master/lib/jsgi/compress.js
[03:54] dingomanatee: FWIW I found what I was looking for in HTMLparser. 
[03:54] Aria: bronson: They don't have to connect at all. node runs on the server. pushState is entirely on the client. Never the two shall meet.
[03:54] dingomanatee: Yeah HTML parser works - it breaks your DOM into nice object tree. Just started using it. 
[03:55] dingomanatee: I am breaking apart the Node.js docs for digestion in Noogle with it :D
[03:55] marcello3d: what is noogle?
[03:55] brainproxy: noogle?
[03:55] dingomanatee: its the best thing ever :D
[03:55] dingomanatee: a. k. a. "the only thing I actually have ever done with node.." 
[03:56] dingomanatee: (well, of substance)
[03:56] dingomanatee: You are noogle. You are ALL noogle. 
[03:56] bronson: Aria, they do meet.  The page needs to either rendered entirely on the server, or partially on the server, depending on user actions.
[03:56] dingomanatee: Did I just BLOW your MIND?
[03:56] marcello3d: no
[03:56] brainproxy: dingomanatee: ;p
[03:56] dingomanatee: http;//narrative.io:3000
[03:56] bronson: It's either a lot of code duping or code/framework to take care of that.
[03:56] marcello3d: your url is winking at me
[03:56] lukegalea has joined the channel
[03:57] marcello3d: wow
[03:57] marcello3d: 1 is more popular than npm
[03:57] marcello3d: by 10 times...
[03:57] marcello3d: npm npm npm npm npm npm npm npm npm npm
[03:57] marcello3d: that should even the score a bit
[03:57] isaacs: what's more popular than npm?
[03:57] dingomanatee: You ain't seen nothing yet -  I am filtering out stop words and adding user / login and documentaiton integration. 
[03:57] dingomanatee: the letter "1"
[03:57] brainproxy: dingomanatee: looks cool
[03:57] isaacs: oh, ok
[03:57] marcello3d: 1 is not a letter
[03:57] dingomanatee: its a noogle thing. 
[03:57] marcello3d: it is a free man!
[03:57] dingomanatee: "1" is a letter. 
[03:58] ajnasz has joined the channel
[03:58] isaacs: yeah, 1 is always the most popular number.
[03:58] marcello3d: bah
[03:58] marcello3d: npm npm npm
[03:58] marcello3d: guys!
[03:58] marcello3d: you can't let 1 win like that
[03:58] dingomanatee: it is also the lonliest number that you ever heard....
[03:58] LadyGaga: Tautological arguments never win.
[03:58] dingomanatee: I am filtering out all numerals in the next release of noogle. 
[03:58] marcello3d: I still don't think 1 is a letter
[03:59] marcello3d: character maybe
[03:59] dingomanatee: I just have a bunch of stuff I want to put out in a bundle so I'm letting noogle the infant release sit there for a while. 
[03:59] dingomanatee: fine. On moogle it's a number. 
[03:59] brainproxy: 1 is the loneliest number
[03:59] brainproxy: proof:  http://www.youtube.com/watch?v=XfkPRwKVGZ0&feature=fvsr
[03:59] dingomanatee: on Noogle I am GOD. and its a letter. 
[03:59] marcello3d: moogle D:
[03:59] marcello3d: well you have an icon now ;D
[03:59] marcello3d: I thought 2 was the loneliest number
[04:00] dingomanatee: It is >= the lonliest number. 
[04:00] dingomanatee: "Two can be as sad as one..." but it can also be less sad. 
[04:00] marcello3d: wow
[04:00] LadyGaga: I wish I could modify http://www.mobilemp4.co.cc/madonnas_back.jpg from node.js
[04:00] marcello3d: they have a beatles album on that song...
[04:00] marcello3d: good job
[04:00] LadyGaga: I want to vectorize it
[04:00] dingomanatee: It can't be more sad ... because "one IS THE LONLIEST NUMBER; one IS THE LONLIEST NUMBER...."
[04:01] beawesomeinstead has joined the channel
[04:01] beawesomeinstead has joined the channel
[04:01] keks has joined the channel
[04:01] marcello3d: that'd be a fun web proxy. convert everything to comics sans and cartoonize all pictures
[04:02] brainproxy: that's how i have my stylesheets prefs set in SeaMonkey
[04:02] LadyGaga: marcello3d: And don't forget to overlay Madonna pics on everything :D
[04:02] marcello3d: that wouldn't be very comicy
[04:02] marcello3d: but maybe BAF
[04:02] marcello3d: and POW
[04:02] marcello3d: every now and then
[04:03] ossareh has joined the channel
[04:03] b5avage has joined the channel
[04:03] LadyGaga: And inject Madonna music in every page via HTML5 audio ;p
[04:03] LadyGaga: Hmm, I would pay for such a service I think...
[04:03] marcello3d: you're not really lady gaga, are you?
[04:04] LadyGaga: I am Lady Gaga's meat dress.
[04:04] marcello3d: you thought you could trick us
[04:04] LadyGaga: :(
[04:04] marcello3d: with your fine wines
[04:04] marcello3d: and cocktail wieners
[04:04] LadyGaga: LALALALAL
[04:04] LadyGaga: CAN'T READ MY CAN'T READ MY
[04:05] LadyGaga: No one can read my poker face!
[04:05] marcello3d: sorry. listening to cake, doesn't work.
[04:05] hsegawa has joined the channel
[04:05] zzak: LadyGaga--
[04:05] v8bot:  zzak has taken a beer from LadyGaga. LadyGaga now has -1 beers.
[04:05] LadyGaga: :<
[04:05] LadyGaga: zzak: Why?
[04:06] LadyGaga: LadyGaga++
[04:06] v8bot: LadyGaga: Don't cheat!  You can't give a beer to yourself.
[04:06] zorzar_ has joined the channel
[04:06] zzak: LadyGaga--
[04:06] v8bot:  zzak has taken a beer from LadyGaga. LadyGaga now has -2 beers.
[04:06] vonkow_ has joined the channel
[04:06] LadyGaga: ACTION has a perverse strategy.
[04:07] LadyGaga: zzak--
[04:07] v8bot:  LadyGaga has taken a beer from zzak. zzak now has -1 beers.
[04:07] LadyGaga: zzak--
[04:07] v8bot:  zzak is getting too many beers.  Don't let zzak get drunk!
[04:07] LadyGaga: lol wtf
[04:07] hsegawa has left the channel
[04:07] zzak: LadyGaga--
[04:07] v8bot:  LadyGaga is getting too many beers.  Don't let LadyGaga get drunk!
[04:07] GiverOfBeers has joined the channel
[04:08] noahcampbell has joined the channel
[04:08] GiverOfBeers: LadyGaga++
[04:08] v8bot:  GiverOfBeers has given a beer to LadyGaga. LadyGaga now has -1 beers.
[04:08] GiverOfBeers: LadyGaga++
[04:08] v8bot:  LadyGaga is getting too many beers.  Don't let LadyGaga get drunk!
[04:08] dingomanatee: Madonna has a clown car for a vagina.
[04:08] Vertice has joined the channel
[04:08] dingomanatee: Madonna has to get new implants every week to keep her nipples off her knees.
[04:09] LadyGaga: dingomanatee: http://www.mobilemp4.co.cc/madonnas_back.jpg looks pretty good
[04:09] dingomanatee: That's not even madonna's back. That's madonna's side. 
[04:09] geoffeg: If I have a directory full of js files that I'm requiring() and newing() at runtime in a loop, the order in which the require()'d modules are getting newed isn't the order in which I'm doing it in the loop. Is new() async or something? https://gist.github.com/56bbed53c49a1c5f9812
[04:09] dingomanatee: Madonna's back looks like a hippo. 
[04:09] marcello3d: hippo!
[04:09] LadyGaga: I would tap it.
[04:10] dingomanatee: it would cost you a quarter a minute. 
[04:10] marcello3d: that's cheap
[04:10] Lorentz: Anyone doing any kind of nodejs c++ module for cuda/opencl?
[04:10] marcello3d: $15/hr? :)
[04:10] LadyGaga: I would even tap without getting paid!
[04:10] zachsmith_ has joined the channel
[04:10] Lorentz: Half-tempted to invest in a random nvidia card for hilarity
[04:11] marcello3d: amazon has gpu instances now, huh?
[04:11] LadyGaga: Especially since she likes my node.js :)
[04:11] dingomanatee: Afterwards you would have every venereal disease known to man
[04:11] dingomanatee: as well as Madonna Dick. 
[04:11] dingomanatee: And that one is ten times as bad as the other ones. 
[04:11] dingomanatee: Madonna Dick is so evil you barely notice your AIDS and Syphillis
[04:11] MatthewMueller has joined the channel
[04:12] LadyGaga: dingomanatee: Doth protest too much.
[04:12] bentruyman has joined the channel
[04:13] robotarmy has joined the channel
[04:13] keks: v8bot: keks++
[04:13] v8bot: keks: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[04:13] keks: v8: keks++
[04:13] v8bot: keks: ReferenceError: keks is not defined
[04:13] Ond has joined the channel
[04:13] marcello3d: kapwned
[04:13] LadyGaga: v8: (keks)++
[04:13] v8bot: LadyGaga: ReferenceError: keks is not defined
[04:13] davidsands has joined the channel
[04:14] LadyGaga: v8: keks = document; keks++;
[04:14] v8bot: LadyGaga: ReferenceError: document is not defined
[04:14] LadyGaga: v8: keks = window; keks++;
[04:14] v8bot: LadyGaga: ReferenceError: window is not defined
[04:14] LadyGaga: Useless.
[04:15] keks: v8: process
[04:15] v8bot: keks: ReferenceError: process is not defined
[04:15] Lorentz: marcello3d: I wanted to do it locally
[04:15] Ond: Javascript without DOM *scoffs* useless junk 
[04:15] perlmonkey2 has joined the channel
[04:15] Lorentz: Never liked amazon instances just to do some playing around.
[04:15] bmizeran_ has joined the channel
[04:15] Lorentz: That and a friend has at least a 8800-something lying around since he upgraded recently.
[04:15] marcello3d: sure
[04:15] marcello3d: just thinking about practical uses :)
[04:15] field has joined the channel
[04:15] marcello3d: after you get it working
[04:16] keks: v8: "keks++";
[04:16] v8bot: keks: "keks++"
[04:16] field: anyone know if node.js/joyent will participate in Google Summer of Code?
[04:17] echosystm: anyone here used sqlite in node ?
[04:17] echosystm: i'm not sure what library to use
[04:17] echosystm: there seems to be 3 on npm
[04:17] echosystm: no, 4
[04:18] field: on that note, which cron library should i use?
[04:18] dgathright has joined the channel
[04:18] echosystm: http://code.google.com/p/node-sqlite/ this comes up first in le` google
[04:18] dingomanatee: LadyGaga: you'd be angry too - if you had Madonna Dick. 
[04:18] echosystm: but it hasnt changed since 2009
[04:19] LadyGaga: dingomanatee: No, M/D is great. It is what you get when you see Madonna.
[04:19] LadyGaga: It can be embarrassing though :/
[04:19] dingomanatee: ACTION limps for the cure
[04:19] keks: v8: "bla".blink() //wtf
[04:19] v8bot: keks: "<blink>bla</blink>"
[04:20] field: echosystem: this looks promissing -- https://github.com/orlandov/node-sqlite
[04:20] echosystm: yeah i just noticed that one
[04:20] echosystm: thanks
[04:20] ajnasz has joined the channel
[04:21] ceej: man I love node-dev :)
[04:21] field: or this https://github.com/grumdrig/node-sqlite
[04:21] googol has joined the channel
[04:22] echosystm: hm
[04:22] echosystm: orlandovs doesnt seem to build here
[04:22] echosystm: cant  find the sqlite3.h
[04:24] SwiftLayer has joined the channel
[04:25] rbranson has joined the channel
[04:27] davidsands has left the channel
[04:27] MikhX has joined the channel
[04:27] marcello3d: if I get back " execvp(): No such file or directory" from child_process
[04:27] marcello3d: does that mean it couldn't find the path to the app?
[04:28] ceej: what's the best module for md5, sha1, sha256 support?  is it Hash ?
[04:28] marcello3d: http://nodejs.org/docs/v0.4.0/api/crypto.html
[04:28] marcello3d: built in?
[04:29] ceej: ah nice... thank you
[04:30] gagaforgaga has joined the channel
[04:30] gagaforgaga: I'm just gaga for lady gaga!
[04:31] ryah: marcello3d: built-in, yes
[04:31] marcello3d: is there a way to run a child_process in a secure manner?
[04:31] ryah: gagaforgaga, Madonna: greater signal to noise ratio, please.
[04:32] marcello3d: like with restricted privileges or whatever
[04:32] Madonna: ryah: gagaforgaga != me
[04:32] marcello3d: rather than the same as node is run in
[04:32] Madonna: Hard to believe, I know.
[04:32] gagaforgaga: Madonna is a gap-toothed wannabe
[04:32] ryah: marcello3d: be more specific
[04:32] marcello3d: like
[04:33] marcello3d: I'm running graphicsmagick's "convert" utility
[04:33] marcello3d: by writing to stdin/stdout
[04:33] marcello3d: I don't really want it to have any filesystem/memory access
[04:33] Madonna: gagaforgaga: Suck it.
[04:33] marcello3d: other than what it needs to convert the image
[04:33] Madonna: (sorry, I will desist)
[04:34] marcello3d: oh wow, an op
[04:34] ryah: marcello3d: you can chroot it
[04:34] SubStack: echosystm: you can pass dnode a 'route' option that determines where /dnode.js sits if that's what you mean
[04:34] ryah: you can't limit its memory in any meaningful way
[04:34] marcello3d: not limit amount, but memory access
[04:34] ryah: marcello3d: it's a process - so you can do whatever you can do with processes.
[04:35] ryah: it cannot access the parent process's memory
[04:35] ossareh has joined the channel
[04:35] marcello3d: ok
[04:35] lukegalea has joined the channel
[04:35] nilcolor has joined the channel
[04:36] marcello3d: guess I'll just have to trust its stability :)
[04:37] echosystm: SubStack: what i mean is that by default dnode will sit at the top of the rack, right?
[04:37] echosystm: ie. it will be the first one to check incomming packets
[04:38] marcello3d: ryah: on a related topic, I noticed connect uses child_process to run gzip to compress http responses, is that inefficient?
[04:38] marcello3d: or is that a reasonable approach?
[04:39] echosystm: SubStack: is there any way to place dnode after some other "middleware" ?
[04:39] ezmobius has joined the channel
[04:39] ryah: it is faster to do it in process
[04:39] ryah: marcello3d: --^
[04:39] marcello3d: like orders of magnitude faster? or marginally?
[04:40] marcello3d: that is, is it terrible that they're doing that?
[04:40] SubStack: echosystm: what
[04:40] echosystm: in connect, you server.use(...) to add functions to a stack of handlers
[04:41] echosystm: is there any way to put dnode at a particular point in that stack?
[04:41] SubStack: dnode isn't *in* the stack
[04:41] echosystm: oh.
[04:41] SubStack: this is a socket.io limitation
[04:42] SubStack: but look: http://github.com/substack/dnode-stack 
[04:42] Madonna: ryah: btw, gagaforgaga says she's a noder and she'll be good.
[04:42] Madonna: Perhaps a cooling off period is best though
[04:43] konobi: ryah: oioi
[04:43] echosystm: maybe its best i step back a bit... basically all i want to achieve is ensuring that http basic auth gets evaluated before any connections are created
[04:43] dingomanatee: ACTION has nothing further to say about Madonna
[04:43] konobi: ryah: you in the office this week?
[04:43] echosystm: ie. so that comet/ws are authenticated in the same way as static file access
[04:43] SubStack: echosystm: I would use sessions for that
[04:44] SubStack: then you can check req.session from dnode like in the dnode-stack example
[04:44] Vertice has joined the channel
[04:44] ryah: konobi: yes
[04:44] konobi: ryah: cool, see you tuesday then =0)
[04:44] echosystm: i had hoped to avoid sessions (hijacking scares me) - is there any way to do this with httpbasic ?
[04:45] ryah: konobi: cool ;)
[04:45] andrewfff has joined the channel
[04:45] SubStack: echosystm: seems pretty dependent on how socket.io works
[04:46] echosystm: ok, i'll do some digging
[04:46] echosystm: thanks for your itme
[04:46] echosystm: *time
[04:46] w0rse_ has joined the channel
[04:47] SubStack: echosystm: also it could be that just a few more things are needed to get it to work with dnode-stack 
[04:48] gagaforgaga has joined the channel
[04:48] gagaforgaga: thanks ryah i'll behave now
[04:53] marcello3d: does node.js support http pipelining?
[04:55] ossareh has joined the channel
[04:56] ryah: marcello3d: pipelining is not a very good idea
[04:56] Blink7 has joined the channel
[04:56] jamescarr has joined the channel
[04:56] ryah: many servers can't handle it
[04:56] ryah: answer: no
[04:56] marcello3d: does it serve pipelined to a browser, though?
[04:56] marcello3d: or keep alive?
[04:56] konobi: most browsers don't even support it by default
[04:58] Aria: It's sad, because it should help speeds quite a lot, what with slow-start.
[04:58] marcello3d: is pipelining and keep alive the same thing
[04:59] zylo has joined the channel
[04:59] Blink7 has joined the channel
[04:59] Aria: No.
[04:59] Aria: Keep-alive is using the same connection again after a response.
[05:00] Aria: Pipelining is sending several requests before responses come back.
[05:00] marcello3d: ah
[05:00] marcello3d: makes sense
[05:01] marcello3d: that would help a lot with latency, but I guess browsers make up for it by opening simultaneous connections
[05:01] mike5w3c has joined the channel
[05:01] marcello3d: ok, I need to figure out how to combine/compress my client-side js/css
[05:02] marcello3d: guess stylus already compresses the css
[05:02] konobi: marcello3d: go read the yahoo web performance book
[05:02] marcello3d: I read it a while back, it's been a while :)
[05:02] Aria: The problem is that each new connection has to slow-start
[05:02] konobi: http://oreilly.com/catalog/9780596529307
[05:03] Aria: And with modern connections and old small initial windows, that's pain
[05:03] Metapony has joined the channel
[05:03] MikhX has joined the channel
[05:03] konobi: maximum number of connections per tab, per domain, per subdomain, etc.
[05:03] marcello3d: yup
[05:03] marcello3d: so node.js...keep alive, yes no?
[05:04] lukegalea has joined the channel
[05:04] konobi: keep-alive should work iirc
[05:04] marcello3d: ok
[05:05] marcello3d: what do people use to profile their node apps?
[05:05] Madonna: What is HTTP pipelining?
[05:06] konobi: google
[05:06] marcello3d: https://secure.wikimedia.org/wikipedia/en/wiki/HTTP_pipelining
[05:07] Madonna: Search engines are banned at work :\
[05:07] marcello3d: lol what
[05:08] echosystm: what exactly does dnode-stack do SubStack ?
[05:08] Madonna: Yeah, they like us to stick to internal databases for finding info
[05:08] hassox has joined the channel
[05:09] marcello3d: well, you're on irc
[05:09] marcello3d: that's not an internal source
[05:09] Madonna: Sssssh :p
[05:09] SubStack: echosystm: it looks at your middleware and executes it
[05:10] echosystm: when ?
[05:10] SubStack: when a client connects over socket.io
[05:10] SubStack: and then you can do conn.on('request', function (req) {}) to get a handle to the request object
[05:11] marcello3d: is this on npm? https://github.com/egorich239/node-compress I can't find it
[05:11] SubStack: marcello3d: `npm ls compress` says yes
[05:11] marcello3d: but this is the waveto version: http://search.npmjs.org/#/compress
[05:12] keks: is anyone using aes from crypto on bnary data? doesn't really work here.
[05:12] marcello3d: but connect's gzip middleware isn't compatibility with it
[05:12] marcello3d: (looks like egorich's version adds stream support)
[05:13] marcello3d: can I somehow install it into npm from source?
[05:13] bingomanatee: ryah: ping
[05:14] marcello3d: bah, doesn't build :(
[05:14] samsonjs has joined the channel
[05:15] Aria: marcello3d: "npm install" in a checkout
[05:15] marcello3d: oh well
[05:15] Madonna: Is the Express framework basically a node.js module?
[05:15] marcello3d: yea, I tried that, but I can't even build the module
[05:16] marcello3d: gives me c errors
[05:16] marcello3d: (c++ technically)
[05:16] Aria: Madonna: Yes.
[05:16] marcello3d: ../src/compress.cc:40:   instantiated from here
[05:16] marcello3d: ../src/zlib.h:90: error: ‘class node::Buffer’ has no member named ‘data’
[05:16] marcello3d: ../src/zlib.h:90: error: ‘class node::Buffer’ has no member named ‘length’
[05:16] Aria: (It builds on connect)
[05:16] marcello3d: probably some node.js incompatibility
[05:16] Aria: Ah, fun. Yeah, the buffer API has changed.
[05:16] marcello3d: builds on connect?
[05:17] marcello3d: oh
[05:17] marcello3d: changed significantly? think I could fix it?
[05:18] Aria: Express builds on connect.
[05:18] Madonna: connect?
[05:18] Ond: Another module
[05:18] Aria: I don't know how much it's changed, marcello3d. I've not looked yet. It's not horribly complicated as C++ goes, though -- it's a wrapper around malloc ;-)
[05:18] marcello3d: :)
[05:18] marcello3d: I'll spend 5 minutes trying to make it build
[05:19] Madonna: Omfg, malloc for node.js. Genius! :D
[05:19] Madonna: Can we haz realloc() and free as well? ;p
[05:20] marcello3d: wow
[05:20] samsonjs_ has joined the channel
[05:20] marcello3d: it's been a while since I've done c++
[05:20] marcello3d: I don't understand these method signatures at all :D
[05:20] marcello3d: what does this mean in the public: context:   static inline size_t Length(Buffer *b) {
[05:21] samsonjs has joined the channel
[05:21] marcello3d: I thought static was for internal methods in c...
[05:21] Madonna: Aria: Where is this nascent malloc() for node.js?
[05:21] Aria: Madonna: buffer
[05:21] marcello3d: oh snap
[05:21] marcello3d: i
[05:21] marcello3d: it says in the header :)
[05:21] marcello3d:    Migrating code C++ Buffer code from v0.2 to v0.3 is difficult. Here are
[05:21] marcello3d:    some tips:
[05:21] marcello3d:     - buffer->data() calls should become Buffer::Data(buffer) calls.
[05:21] marcello3d:     - buffer->length() calls should become Buffer::Length(buffer) calls. 
[05:21] Aria: No, static is for 'static allocation' -- the placement of the data is known at compile time.
[05:22] marcello3d: as opposed to virtual
[05:22] Madonna: Aria: It would be cool to add more functions to the module so you can do bitwise operations
[05:22] XFreely has joined the channel
[05:22] eventi has left the channel
[05:22] marcello3d: well
[05:22] marcello3d: that fixed it
[05:22] Aria: Good!
[05:23] marcello3d: oh wait
[05:23] marcello3d: it also says below that:
[05:23] marcello3d:     - There should not be any ObjectWrap::Unwrap<Buffer>() calls. You should
[05:23] Madonna: How would I do a bitwise shift left/right with buffer?
[05:23] marcello3d: and there's 4 calls in there :)
[05:24] Aria: Hehe. oops!
[05:24] marcello3d: nice, segfaults :D
[05:26] marcello3d: ok
[05:26] Madonna: Mmmm
[05:26] marcello3d: this is more involved than I care to be. abort!
[05:26] Madonna: I have warm memories of segmentation faults causing "Internal Server Errors" when doing web dev in C :D
[05:27] Madonna: ACTION modified valgrind to be CGI-friendly
[05:27] postwait: hmmm. http server appears to not like PURGE requests.
[05:28] EricV has joined the channel
[05:29] Madonna: Is JSPP an npm  module?
[05:29] drdave: postwait: sorry about the lag... but I finally got around to test my key with openssl and it works fine...
[05:29] postwait: how are you creating the creds?
[05:30] Lorentz: "npm list jspp" says yes.
[05:30] drdave: they are provided by Apple...
[05:30] drdave: so pretty sure they are valid (though I might definitely be mangling them along the way)
[05:30] drdave: also, i'm using s_client with key and cert concatenated into a single pem file...
[05:30] EricV has joined the channel
[05:31] marcello3d: jspp?
[05:31] drdave: but I tried both with a unique key arg and separate key/cert with tls.connect...
[05:31] marcello3d: ah
[05:31] drdave: I can't even figure where the EINVAL is coming from (it might be a stupid typo when I adapted the snipped)
[05:32] Madonna: jspp looks like it's more than a module.
[05:32] Madonna: Looks like a node server istelf
[05:33] razvandimescu has joined the channel
[05:33] jimt has joined the channel
[05:34] marcello3d: does node.js have a secure random generator?
[05:35] Madonna: marcello3d: Is /dev/urandom good enough?
[05:35] jesusabdullah: awxuew
[05:35] jesusabdullah: blegh
[05:35] jesusabdullah: secure?
[05:35] marcello3d: I dunno
[05:35] marcello3d: java has this thing called SecureRandom
[05:36] EricV: Has anyone here heard of mootools?
[05:36] marcello3d: yes
[05:37] EricV: Any interest to get it packaged in npm?
[05:37] marcello3d: http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html
[05:38] MatthewMueller: EricV: Isn't it more a clientside library?
[05:38] Madonna: Anyone who thinks it is random don't understand math well enough.
[05:39] EricV: Some of it is but it is very much a general extent ion to js. Classes and enhanced natives etc.
[05:39] marcello3d: Madonna: are there any wrappers for /dev/urandom?
[05:40] Madonna: marcello3d: You could make one pretty easily
[05:40] EricV: And isn't the idea to eventually write code that runs on the client plus the server?
[05:40] Madonna: I'm not sure
[05:40] Aria: That's some people's ideas.
[05:40] marcello3d: how do you generate unique identifiers then?
[05:41] marcello3d: http://www.enchantedage.com/node-mersenne :D
[05:41] ryah: v8: Math.random(9999)
[05:41] v8bot: ryah: 0.6753615587949753
[05:41] ryah: v8: Math.random(9999) * 10000
[05:41] v8bot: ryah: 5203.266814351082
[05:41] Madonna: marcello3d: Unique != random
[05:41] MatthewMueller: EricV: It's tough to mimic the DOM on the server because you don't know what type of browser the user has.. If you're looking for some of the class stuff, maybe consider backbone.js?
[05:41] Aria has left the channel
[05:41] Aria has joined the channel
[05:42] Madonna: v8: Math.random(Math.random(Math.random(9999)));
[05:42] v8bot: Madonna: 0.5959741792175919
[05:42] Madonna: v8: Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(Math.random(9999)))))))))))));
[05:42] v8bot: Madonna: 0.13038743799552321
[05:42] lukegalea has joined the channel
[05:42] Madonna: More is more random! :D
[05:43] marcello3d: ok, how would you suggest generating a session cookie, for example
[05:43] EricV: @MatthewMueller I'll check it out. There must be a really elegant solution out there..
[05:43] marcello3d: my scala code:
[05:44] marcello3d:   val random = new SecureRandom
[05:44] marcello3d:   def randomBase64(length: Int): String = {
[05:44] marcello3d:     val bytes = new Array[Byte](length)
[05:44] marcello3d:     random.nextBytes(bytes)
[05:44] marcello3d:     Base64.encodeBase64URLSafeString(bytes)
[05:44] marcello3d:   }
[05:44] postwait: marcello3d: https://github.com/broofa/node-uuid
[05:44] MatthewMueller: EricV: There's definitely a push to figure out how to share as much code client and server-side as possible. 
[05:44] EricV: What if you didn't deal with the Dom on the client or the server?
[05:45] Aria: There /is/ also a DOM on the server side, tmpvar's jsdom
[05:45] MatthewMueller: EricV: Well then you can't do anything on the web ;-)
[05:45] EricV: Hmmm
[05:45] marcello3d: ok, they just use Math.random() for that lib
[05:46] MatthewMueller: Aria: Yah true. I don't have experience with it, I'm skeptical about it working all too well.
[05:46] Aria: Any particular reason?
[05:46] ceej: so in expressjs I'm including sessions but I still get Cannot read property 'flash' of undefined
[05:46] Aria: It's a good implementation.
[05:46] b5avage: Are you looking for uniqueness, or security?
[05:47] marcello3d: b5avage: what are the differences?
[05:47] Madonna: Is JSPP essentially a node.js server?
[05:47] marcello3d: security in the sense that it shouldn't be guessable from one user to the next
[05:47] b5avage: crypto random means there is sufficient entropy in the algorithm that you can't recreate the randomization process
[05:47] MatthewMueller: Aria: "guessing" at what the client is going to come to you with is prone to errors IMHO. 
[05:48] b5avage: uniqueness just means another client is nearly impossibly unlikely to get the same result
[05:48] b5avage: unless they are trying, natch ;-)
[05:48] marcello3d: I guess I need both?
[05:48] Madonna: b5avage: Which is only possible if you store all previous results.
[05:49] b5avage: no theoretically if you reproduct the same starting conditions (same seed to the random number generator) you can get the same result if you know the algorithm, which is not ecret
[05:49] Aria: MatthewMueller: What would you do with it that requires the parsers to match exactly? (And the DOM is pretty well defined, parsers aside.)
[05:49] b5avage: so you need to inject some source of noise that is independent and random
[05:49] Aria: (And then only on weirdo markup)
[05:50] marcello3d: b5avage: that's what I need to avoid
[05:50] marcello3d: though I guess the question is how hard is it to to reverse the seed from output...
[05:50] Aria: Or you need to stay well below the birthday paradox level.
[05:50] Madonna: b5avage: Justin BIEBER!!!
[05:50] marcello3d: is there a industry standard way of doing this?
[05:50] b5avage: he
[05:50] marcello3d: *an
[05:50] b5avage: heh
[05:50] Madonna: As long as they don't know the source ;p
[05:51] b5avage: http://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator
[05:51] Madonna: brb, my neighbor Oprah is here
[05:52] MatthewMueller: Aria: Hmm. I'll look into it more - I definitely feel like I'm starting to step into uncharted territory :-D. 
[05:52] b5avage: you can get a phd in this stuff ;-)
[05:53] pkrumins: we want jsbbq #2
[05:53] b5avage: i bet there's a web service out there somewhere that can be asked for a nice random
[05:53] pkrumins: 4 more years of bbq
[05:53] marcello3d: ok
[05:53] marcello3d: then back to my original question
[05:53] b5avage: heh: http://www.random.org/
[05:53] marcello3d: are there any java.security.SecureRandom-like modules for node? :)
[05:54] b5avage: just hit that service?
[05:54] marcello3d: um, no
[05:54] pkrumins: jsbbq pics or it didnt happen!
[05:55] b5avage: try :  https://github.com/akdubya/rbytes
[05:55] bronson: pkrumins, http://csanz.posterous.com/jsbbq-friends-food-code-video-0
[05:55] bronson: with shakyvid
[05:55] marcello3d: awesome
[05:55] marcello3d: thanks :)
[05:55] pkrumins: video!
[05:56] b5avage: np just looked here: https://github.com/ry/node/wiki/modules
[05:56] marcello3d: :D
[05:56] marcello3d: I have that page open, not sure why I didn't think to look there first
[05:56] b5avage: heh
[06:03] ChrisMonsanto has joined the channel
[06:05] mikeal has joined the channel
[06:07] lukegalea has joined the channel
[06:07] jimt has joined the channel
[06:09] Aria has joined the channel
[06:11] broofa has joined the channel
[06:12] sholmes has joined the channel
[06:13] sholmes has joined the channel
[06:14] Ond: sholmes, you were the one who asked about whether you had to specify a layout with express view rendering right?
[06:14] sholmes: Ond: Yeah
[06:14] Ond: Did you ever figure that stuff out?
[06:14] Ond: Turns out you don't, and this is in the express documentation
[06:14] sholmes: I think so. You can set the option layout:false if you don't want a layout
[06:15] Ond: Yep
[06:15] sholmes: Yes, you don't I later find. You can also have multiple layouts too.
[06:15] sholmes: Pretty cool. :P
[06:15] Ond: Indeed
[06:16] dgathright has joined the channel
[06:19] SubStack: yay https://github.com/substack/node-bigint 
[06:19] SubStack: now I can finish up node-ssh-server >:D
[06:20] lukegalea has joined the channel
[06:20] ziro` has joined the channel
[06:22] TomY has joined the channel
[06:25] marcello3d: goog doesn't have such?
[06:26] JimBastard has joined the channel
[06:26] marcello3d: guess not
[06:26] herbySk has joined the channel
[06:27] JimBastard: dammit, its monday. now i gotta go back to writing real software
[06:27] SubStack: pesky!
[06:31] void_ has joined the channel
[06:32] lukegalea has joined the channel
[06:32] ossareh has joined the channel
[06:33] JimBastard: SubStack: you see the demo vidya? 
[06:33] JimBastard: SubStack: break it down, http://www.youtube.com/watch?v=MSZLLgel6Gs
[06:33] cloudhead has joined the channel
[06:33] SubStack: yep!
[06:34] JimBastard: dnode worked out great, thanks
[06:34] JimBastard: A++ would buy again
[06:34] SubStack: ^_^
[06:38] marcello3d: night
[06:38] warz has joined the channel
[06:40] cloudhead: SubStack++
[06:40] v8bot:  cloudhead has given a beer to SubStack. SubStack now has 13 beers.
[06:40] SubStack: :D
[06:41] cloudhead: thanks for node-optimist
[06:41] cloudhead: finally something useable!
[06:42] SubStack: I just hate optstrings is all
[06:42] SubStack: silly getopt, making everybody do it the wrong way
[06:42] mikeal: SubStack: did you add a help api for optimist yet?
[06:42] cloudhead: yea
[06:42] saikat has joined the channel
[06:42] cloudhead: that's pretty much getopt's fault heheh
[06:42] SubStack: mikeal: not yet, busy with other things
[06:42] SubStack: up to 25 npm modules now >_<
[06:43] SubStack: need to finish node-ssh-server so I can get tunneling working for browserling
[06:43] mikeal: i could 20 :) http://search.npmjs.org/#/_author/James%20Halliday
[06:43] SubStack: and then I need to integrate that with the ui
[06:43] SubStack: npm ls =substack | wc -l
[06:43] SubStack: oh wait
[06:43] mikeal: that's how many you're a maintainer on
[06:44] mikeal: not where you're noted as the autho
[06:44] SubStack: npm ls -s =substack latest | wc -l
[06:44] nilcolor has joined the channel
[06:44] SubStack: I must have some packages where I forgot to set the author field
[06:45] bingomanatee: ACTION has figured out how to parse Node's documentation into manageable chunks.
[06:45] bingomanatee: ACTION will ROCK YOUR WORLD with the next Noogle release
[06:45] mikeal: bingomanatee: you mean the node API docs?
[06:45] bingomanatee: year
[06:46] bingomanatee: think api docs + php-like community meta-documetnation
[06:46] mjr_ has joined the channel
[06:46] bingomanatee: + x - linking to git and noogle chat docs
[06:47] SubStack: mikeal: yeah it looks like I have some messed up package.jsons
[06:47] SubStack: or rather, incomplete
[06:47] SubStack: dnode isn't on that list for instance
[06:47] tmzt: out of band delivery of stack traces would be awesome, maybe to firebug/chromebug
[06:48] MatthewMueller: Hey guys, does anyone have a good way of sending objects (that includes functions) to the client? I keep running into "escaping" issues when I turn the function into a string...
[06:49] tmzt: live javascript?
[06:49] lukegalea has joined the channel
[06:49] tmzt: live as in runs on the client
[06:49] bingomanatee: I prefer the dnode way of life - stupid objects up front, big brains in the backend
[06:50] nilcolor has joined the channel
[06:50] echosystm: exit
[06:50] Sebmaster has joined the channel
[06:51] tmzt: safe eval and something like strict mode would be cool though
[06:51] tmzt: eventually I plan to try it in chromium
[06:51] tmzt: dom level 0/1 must die
[06:51] mikeal: like i said, it's only the author field, i'm not handling maintainers ye
[06:51] mikeal: er yet
[06:51] MatthewMueller: yup live javascript
[06:52] MatthewMueller: i looked at dnode - initial reaction was too bulky for what I'm trying to do... is that stupid?
[06:52] SubStack: yes
[06:52] SubStack: I'm just bad at describing it I think.
[06:52] samsonjs has joined the channel
[06:53] tmzt: it just creates proxy objects to marshall calls over socket.io
[06:53] bingomanatee: BTW I went to the Google talk by David Herman - sounds like the module system of CommonJS/Node is on the way to being accepted by core JavaScript
[06:53] SubStack: awesome!
[06:53] bingomanatee: So there is a good shot that your Node modules might end up working well on the client side eventually. 
[06:53] SubStack: already does!
[06:54] tmzt: bingomanatee: what I'm looking for is for js not to be attached to global scope or a document by default
[06:54] SubStack: http://github.com/substack/node-browserify ;)
[06:54] tmzt: and instead just be a self contained module
[06:54] bingomanatee: That is definately in the spec. 
[06:54] SubStack: oh right I should hack in the recursive dependency think
[06:54] SubStack: that is actually pretty easy
[06:54] tmzt: if can get the document from the event (such as 'load' event)
[06:54] tmzt: so the document (and browser, navigator, etc.) globals are gone
[06:55] bingomanatee: Also you won't have to worry as much about variables leaking out to the public scope. 
[06:55] mikeal: bingomanatee: that's not accurate
[06:55] mikeal: i'm on the TC-39 mailing list
[06:55] bingomanatee: actually I think I misheard TMZT's quote. 
[06:55] tmzt: my plan then is to have widgets that can run in a page with completely untrusted js
[06:55] mikeal: the only modules proposal for Harmony is "Simple Modules"
[06:55] mikeal: which is basically namespace with new scoping rules and like 5 new pieces of syntax
[06:56] tmzt: because they can only effect a single div and it's children (like a documentFragment) and nothing outside of that scope
[06:56] tmzt: but I don't know how to handle something like <script> tag injection
[06:56] mikeal: one of the goals is to be able to compile a commonjs module to it by parsing through all the subscripts and pushing them in to namespace
[06:56] mikeal: but it's definitely not commonjs modules directly
[06:56] mikeal: also, node is breaking modules, a lot
[06:57] bingomanatee: how is that mikeal?
[06:57] mikeal: the next release of node has big changes to the module system and parts of that won't be commonjs compliant
[06:57] elliottcable: zedas 3↼ woah, didn’t expect you to be here
[06:57] mikeal: require.paths will be gone
[06:57] MatthewMueller: substack: ahha I didn't realize you were the creator of dnode. I didn't mean bulky I meant more features than I need. lol.
[06:57] bingomanatee: Can you be more specific mikeal?
[06:57] mikeal: global modules will be gone
[06:57] mikeal: except for the builtins
[06:58] mikeal: the only way to importing modules by name will be to stick them in the local node_modules directory
[06:58] tmzt: they can't be a in a global path?
[06:58] mikeal: so you have to package up all your deps with each project rather than relying on them being installed in some global location
[06:58] tmzt: for something like npm
[06:58] tmzt: ah
[06:58] mikeal: there won't be a global path
[06:58] mikeal: period
[06:58] SubStack: MatthewMueller: well sending functions as strings is probably not what you want
[06:58] tmzt: better configuration management I guess
[06:58] bingomanatee: so you have to use relative pathing to include a module?
[06:59] SubStack: sending references seems to be a lot more useful
[06:59] mikeal: better deployment, better locking of working deps to modules and applications
[06:59] tmzt: SubStack: are using dbus notation or something else?
[06:59] mikeal: bingomanatee: not exactly
[06:59] mikeal: there is /project/main.js
[06:59] SubStack: tmzt: notation? It's just newline-terminated json
[06:59] mikeal: and /project/node_modules/sub.js
[06:59] mikeal: in main.js you can do require('sub')
[06:59] tmzt: SubStack: like ay[s] is an array of strings
[06:59] tmzt: or something like ethat
[06:59] tmzt: that
[06:59] mikeal: and it'll find it because it's in the node_modules sub directory
[07:00] broofa has joined the channel
[07:00] tmzt: for method signatures
[07:00] SubStack: tmzt: there are no method signatures
[07:00] bingomanatee: interesting. 
[07:00] tmzt: just ordinals?
[07:00] bingomanatee: Seems rather controlled but I guess people will get used to it. 
[07:01] bingomanatee: I tend to like bundling my libs in with my projects anyway. 
[07:01] SubStack: tmzt: I'm not sure what you're getting at.
[07:01] jesusabdullah: What's a method signature? <_>
[07:01] mikeal: bingomanatee: you'll still have npm to help with it
[07:01] warz has joined the channel
[07:01] tmzt: SubStack: from when I looked at how you do marshalling for call backs, I seem to remember functions getting replaced by integers
[07:01] mikeal: npm can keep local caches of your modules and install them bundled up in the project directory
[07:01] SubStack: yes
[07:02] micheil has joined the channel
[07:02] SubStack: it's all documented at the bottom of the readme
[07:02] jesusabdullah: Oh, in the context of dnode
[07:02] jesusabdullah: herp
[07:02] MatthewMueller: substack: Well true, I'm trying to use the same models on my client as my server so something needs to be sent down to the client to be referenced in the first place, that's what I'm trying to sort out. I want to have private methods that don't get exposed to the client, that's whats causing me parsing problems.
[07:02] tmzt: jesusabdullah: in general, the set of arguments and return type of a method, since javascript is normally not typed it's not strictly neccessary
[07:03] tmzt: yeah, that would be very helpful
[07:03] tmzt: with something like underscore or whatever it was called (take a week or so off...)
[07:05] SubStack: MatthewMueller: check this out: https://github.com/substack/node-browserify
[07:05] SubStack: tmzt: there are no return types with dnode
[07:05] jesusabdullah: Oh, I see what you mean
[07:05] SubStack: it's all continuation-passing style
[07:05] razvandimescu has joined the channel
[07:06] jesusabdullah: Some of that stuff seems like it would be more useful for other languages, even required
[07:06] SubStack: even in languages with strong types you can get away with some trickery to make it work
[07:06] jesusabdullah: Yeah
[07:07] SubStack: like the json typeclass in haskell
[07:07] jesusabdullah: I was thinking about how you would approach that kind of problem in LabVIEW
[07:07] jesusabdullah: I think it's not worth it
[07:07] SubStack: LabVIEW isn't worth it
[07:07] MatthewMueller: Substack: thanks for the link - this looks promising.. are you saying I could just 'require' the models on the client side and it will load the functions and everything??
[07:08] tmzt: canvas graphs :)
[07:08] SubStack: MatthewMueller: yep!
[07:08] tmzt: do everything in js, everything
[07:09] MatthewMueller: Substack: very cool, nice work! Does it still distinguish between node and the browser (ie. if(typeof window === "undefined") would only run node specific code?)
[07:09] jesusabdullah: The only problem, Substack, is that lots of data acquisition stuff is written with LabVIEW in mind. The assistant for getting data from the DAQ thing I have is VERY handy. I just don't like trying to, well, do ANYTHING else. XD
[07:09] tmzt: dd if=/dev/zero bs=1024M bs=8M of=/media/Data/linuxswp.img oops.
[07:09] SubStack: MatthewMueller: sure you could do it that way
[07:10] tmzt: that was taking a long time
[07:10] MatthewMueller: Substack: do you have a better way, lol?
[07:10] tmzt: jesusabdullah: aren't they com plugins?
[07:11] SubStack: MatthewMueller: do you want something like ifdef or would just setting window to null on the node-side be enough?
[07:12] MatthewMueller: Substack: just looking for the a good way to be able to run browser-specific or node-specific code in a given script. 
[07:13] tmzt: you plugin minify stuff?
[07:13] tmzt: maybe sha1 hash the whole thing (the name)
[07:13] tmzt: can**
[07:13] SubStack: right, doing that in a sec
[07:13] SubStack: first recursive deps
[07:13] SubStack: I must win the great browser-side require() war!
[07:14] jesusabdullah: tmzt: The assistants? Maybe. I thought they were labview scripting things
[07:14] tmzt: hmm, node can handle multiple routing methods, like the mount stuff you are using
[07:14] FireFly has joined the channel
[07:14] tmzt: jesusabdullah: I don't know, I mean the underlying daq source but I don't really do labview
[07:14] tmzt: just used it for something at school once
[07:14] jesusabdullah: Yeah, I don't usually do much of it
[07:15] jesusabdullah: It's been almost 2 years since I've done it semi-serious
[07:15] jesusabdullah: wait, no
[07:15] jesusabdullah: over three years
[07:15] jesusabdullah: because I got the CLAD at the end of that semester (measurements class) and it just lapsed
[07:15] jesusabdullah: Or maybe it's /going/ to lapse
[07:15] jesusabdullah: ANYWAYS
[07:15] jesusabdullah: It's been a while
[07:15] tmzt: CLAD?
[07:15] jesusabdullah: Certified LabVIEW Associate Developer
[07:16] tmzt: ah ok
[07:16] jesusabdullah: mmhmm
[07:16] jesusabdullah: Got out of a final that way :P
[07:16] warz has joined the channel
[07:16] tmzt: SubStack: you could generate and cache the <script> portion of the page for the template engines to reference your hashed url
[07:16] SubStack: ah that would be cool
[07:17] tmzt: or something that would let you get that url like != browserfy.url([..])
[07:17] mscdex: jesusabdullah is all about the LabVIEW
[07:17] tmzt: yeah, now get non cdn'd jquery included :)
[07:18] jesusabdullah: ALL about the LabVIEWS
[07:19] jesusabdullah: It works alright if you want to make something that looks and acts like some kinda hardware instrument
[07:19] jesusabdullah: kinda
[07:19] jesusabdullah: It could use some framework stuff though, I think
[07:20] jesusabdullah: I think if I were to use it for myself in the Real World I'd try to get the data accessible via a web service asap
[07:20] jesusabdullah: I think LabVIEW has a web server RESTful streaming interface thing now, which is kinda cool
[07:20] jesusabdullah: But then hook onto that, and do the Real Work with an actual language ;)
[07:20] ivanfi has joined the channel
[07:21] MatthewMueller: substack: In browserify, I'm running into: Cannot find module 'finder'.
[07:21] SubStack: yeah I just saw that in the code!
[07:21] SubStack: just take it out of index.js I'll have a fix out on npm in a few minutes
[07:21] jesusabdullah: D:
[07:21] lukegalea has joined the channel
[07:23] jesusabdullah: Making a VI framework could actually be pretty cool
[07:24] jesusabdullah: You'd *have* to use VI scripting tools though, I think
[07:24] jesusabdullah: at least, imo
[07:24] mscdex: VI meaning vector interpolation?
[07:25] keks has joined the channel
[07:25] [[zz]] has joined the channel
[07:25] jesusabdullah: Virtual Instrument
[07:26] jesusabdullah: They're basically functions, but inputs and outputs are shown graphically as knobs, dials, indicators, etc., so building a UI and specifying args/returns are basically the same
[07:28] jesusabdullah: IN A WORLD where the GRAPHICAL DATAFLOW paradigm DOMINATES
[07:28] mscdex: sounds like the intro to a new blockbuster movie
[07:28] jesusabdullah: LAMBDAS are MORE CONFUSING than EVER BEFORE
[07:28] jesusabdullah: "Wait, you want to stuff a BLOCK into a WIRE?"
[07:29] jesusabdullah: From the makers of:
[07:29] jesusabdullah: EXCEL: THE MOVIE
[07:29] jesusabdullah: and
[07:29] jesusabdullah: UML HAXXORS
[07:30] jesusabdullah: comes a thrilling journey of FRIENDSHIP and TWISTS YOU WON'T SEE COMING
[07:30] jesusabdullah: substack calls this masterpiece "disturbing"
[07:31] SubStack: heh
[07:31] mraleph has joined the channel
[07:31] MattDiPasquale has joined the channel
[07:34] blaines has joined the channel
[07:34] mscdex: starring james garner as doug crockford
[07:37] Blink7 has joined the channel
[07:39] blaines: hey I want to create a websocket client & server - can someone point me to a few things that'll help me do that?
[07:40] yozgrahame has joined the channel
[07:41] jesusabdullah: That'd be great
[07:41] jesusabdullah: For some reason I always take that trailer thing too far. I should always stop at the first sentence, but I can't!
[07:41] jesusabdullah: And then it's even less funny than it was to start
[07:42] jesusabdullah: Apologies
[07:42] lukegalea has joined the channel
[07:43] mscdex: blaines: socket.io? it's not pure websockets, but it attempts to use them first i believe
[07:43] SamuraiJack has joined the channel
[07:43] dgathright has joined the channel
[07:44] blaines: mscdex: yeah I'm just going to be doing node -> node communication first
[07:44] blaines: not worried about the browser atm (and won't be)
[07:44] tmzt: try tcp :)
[07:46] Jaye_ has joined the channel
[07:47] mscdex: yeah
[07:47] mscdex: tcp :)
[07:48] mscdex: there is a websocket server and client for node though
[07:48] mscdex: if you really want to go that route
[07:48] blaines: hm
[07:48] blaines: well yeah I guess I'm still figuring out the best way for me to do what I'm doing
[07:49] mscdex: just know that the current websockets draft used by the server and client modules can't handle binary data
[07:49] blaines: right now I just want to tail a logfile and send it to my comp
[07:49] blaines: ah
[07:49] mscdex: blaines: tcp should work fine for that
[07:49] SubStack: blaines: with dnode you can stub out the node to node stuff then tack on websockets via socket.io later
[07:50] mscdex: i think someone wrote a syslog module or something like that
[07:50] SubStack: I do that all the time.
[07:50] blaines: mscdex: oh serious? that might be right up my alley
[07:50] derferman has joined the channel
[07:50] blaines: SubStack: i'll check out dnode
[07:50] ph^ has joined the channel
[07:51] tmzt: websocket was going to be tcp+Host:
[07:51] tmzt: now it's masking + handshake stuff but mux is optional
[07:51] mscdex: blaines: https://github.com/chrisdew/node-syslog and https://github.com/akaspin/ain
[07:51] mscdex: fwiw
[07:52] teemow has joined the channel
[07:55] skm has joined the channel
[07:57] lukegalea has joined the channel
[07:57] muhqu has joined the channel
[07:58] bwinton has joined the channel
[08:00] _nuke has joined the channel
[08:00] ph^_ has joined the channel
[08:01] _nuke: Are there any people here with commit to the repository?
[08:01] _nuke: or knowledge about the kqueue system?
[08:02] dspree has joined the channel
[08:02] dspree has joined the channel
[08:03] groom has joined the channel
[08:04] _nuke: hmm all these people here and silence :)
[08:04] TomY has joined the channel
[08:05] mape: _nuke: Probly off doing things
[08:05] blaines: reading node-syslog
[08:05] _nuke: hehe ok
[08:06] _nuke: Is there somewhere I can post about kqueue "configure" issues?
[08:06] _nuke: I have a fix for the issues, but wondering why it is like it is currently
[08:06] ryah: _nuke: github.com/ry/node/issues
[08:07] _nuke: ok... thanks
[08:08] MrTopf has joined the channel
[08:11] mscdex: he has returned!
[08:14] stagas has joined the channel
[08:14] _nuke: hmm ryah owns the repository?
[08:14] _nuke: or just a coincidence in name? :)
[08:15] micheil: uh, yes, ryah owns the node.js repository, that is correct
[08:15] _nuke: well I'll ask here then before submitting an issue...
[08:16] _nuke: Configure checks for kqueue with the sys/queue.h header... but I've checked all the BSDs and none of them have kqueue in that header... it is in sys/event.h ... it only checks sys/event.h on the Mac... 
[08:17] _nuke: FreeBSD, NetBSD, OpenBSD and Mac all have it in sys/event.h ... so I removed the sys/queue.h stuff and added sys/types.h (in addition to sys/event.h) and it properly detects kqueue on FreeBSD now (and probably the other BSDs as well)
[08:18] jetienne has joined the channel
[08:19] _nuke: Wondering where the sys/queue.h check came from and if there is any reason it can't just be changed to sys/event.h on all platforms?
[08:21] Jaye_: hey sproutcore have new docs up, thank christ
[08:21] lukegalea has joined the channel
[08:22] ph^ has joined the channel
[08:22] Utkarsh has joined the channel
[08:23] blaines: so if I want to make an api - (node to node) would you recommend websockets?
[08:24] Ond has joined the channel
[08:24] JimBastard has joined the channel
[08:24] blaines: a streaming/live api
[08:24] micheil: blaines: node-to-node? I'd recommend netstrings + json
[08:25] micheil: netstrings are just a [length][comma][data]
[08:26] tc77 has joined the channel
[08:27] jbpros has joined the channel
[08:27] swistak has joined the channel
[08:28] alcuadrado has joined the channel
[08:30] micheil: _nuke: best to open an issue on that one. or post to the nodejs-dev mailing list
[08:30] Sebmaster has joined the channel
[08:31] _nuke: alright
[08:31] alcuadrado: should node and npm be installed as root? node's wiki instalation guide uses a normal user, but I have done that and some npm packages try to use /usr/local folder
[08:32] andrewfff has joined the channel
[08:33] unfo-: alcuadrado, usr local should be user writable
[08:33] vilhonen: unfo-: why is that?
[08:34] alcuadrado: that sounds strange to me
[08:34] teemow has joined the channel
[08:34] vilhonen: for me as well
[08:34] sveimac has joined the channel
[08:35] vilhonen: is there some kind of guideline about how to use directory names in *nix like filesystems
[08:35] unfo-: http://en.wikipedia.org/wiki/Unix_directory_structure
[08:35] tmzt: vilhonen: FHS?
[08:36] tmzt: debians is pretty good and very powerful in a netbooted environment
[08:36] vilhonen: tmzt: CTEWTAM?
[08:36] alcuadrado: unfo-: so should I put it 777?
[08:36] vilhonen: ah nevermind
[08:37] tmzt: file hierarchy standard
[08:37] b5avage: sudo chown -R $USER /usr/local
[08:37] Utkarsh_ has joined the channel
[08:37] alcuadrado: won't that break any service like apache, mysql, etc?
[08:38] b5avage: not unless you  remove root access ;-)
[08:38] lukegalea has joined the channel
[08:38] alcuadrado: great, thaks bro
[08:38] vilhonen: if the servers start with a suid bit expecting root ownership isn't it going to break then
[08:38] [AD]Turbo has joined the channel
[08:39] Jaye_: it will break mysql if you take ownership of local iirc
[08:39] b5avage: yeah i dunno dont use mysql
[08:40] [AD]Turbo: yo all
[08:40] alcuadrado: there is nothing related to mysql in there AFAIK :)
[08:41] b5avage: well its easily reversed if something breaks...
[08:42] alcuadrado: sure =)
[08:44] mr_daniel has joined the channel
[08:45] alcuadrado: does anybody uses closure compiler for type checkings and performance optimization (not minification) for node or browsers?
[08:48] jetienne: alcuadrado: i dont but i would be interested as well
[08:49] pl-6: 19:01 <NuckingFuts> marcello3d: We do not speak of Java, that foul language that ruined the name for JavaScript. <- heh heh
[08:49] mikedeboer has joined the channel
[08:50] alcuadrado: I'm mostly interested in the type system and function and constants inlining
[08:52] ntelford has joined the channel
[08:52] lukegalea has joined the channel
[08:53] vilhonen: alcuadrado: looks interesting, thanks for the tip
[08:53] alcuadrado: never mind
[08:54] alcuadrado: if you find how to use it with node in a commfortable way let me know =)
[08:56] mape: alcuadrado: looked at UglifyJS?
[08:56] mape: Oh nm
[08:57] skm has joined the channel
[08:57] alcuadrado: sure, but that's a minifier
[08:57] alcuadrado: I want the type system
[08:57] stephank has joined the channel
[08:57] mape: Yup, that is why I threw in the nm
[08:58] alcuadrado: nm = never mind?
[08:58] mape: Yeah
[08:58] alcuadrado: I see :)
[08:59] skm has joined the channel
[09:02] saschagehlich has joined the channel
[09:03] ROBOd has joined the channel
[09:05] andrewfff has joined the channel
[09:05] meso__ has joined the channel
[09:08] saschagehlich_ has joined the channel
[09:09] kal-EL_ has joined the channel
[09:11] lukegalea has joined the channel
[09:12] luke` has joined the channel
[09:13] nilcolor: ic === I see ;)
[09:15] slickplaid has joined the channel
[09:21] SubStack: bah!
[09:21] SubStack: why do the minifiers on npm suck?
[09:22] chapel: umm, uglifyjs?
[09:22] Jaye_: uglify is still breaking some code
[09:22] Utkarsh__ has joined the channel
[09:22] SubStack: require('minifyjs').minify === undefined
[09:23] Jaye_: lol
[09:23] SubStack: just gives me an empty object >_>
[09:23] nook has joined the channel
[09:23] SubStack: and then require('uglify-js') has no obvious entry-point
[09:24] Jaye_: http://github.com/mishoo/UglifyJS works, but not on NPM i think
[09:25] SubStack: oh it works and is on npm I'm just complaining about the api
[09:26] lukegalea has joined the channel
[09:26] alcuadrado has left the channel
[09:26] andrewfff has joined the channel
[09:27] SubStack: oh right! pkrumins published a jsmin thing
[09:27] SubStack: exactly what I need!
[09:27] pato_ has joined the channel
[09:27] mape: SubStack: https://github.com/mape/connect-assetmanager-handlers/blob/master/lib/handlers.js#L56
[09:28] SubStack: yeah, involved
[09:28] SubStack: require('jsmin').jsmin :D
[09:28] mape: Don't make magic though :/
[09:29] SubStack: if I went with uglifyjs I would have to make magic
[09:29] SubStack: this way I don't need to
[09:30] mape: hehe
[09:30] SubStack: and it works!
[09:31] altamic has joined the channel
[09:31] altamic has joined the channel
[09:32] SubStack: hooray https://github.com/substack/node-browserify 
[09:32] Remoun has joined the channel
[09:33] SubStack: now it supports recursive dependency bundling for npm modules, compatability prototype functions for browsers, process compatability functions, EventEmitter builtin compatability, and filters for minification 
[09:34] SubStack: all of which I got working tonight
[09:34] SubStack: in the past hour
[09:34] jesusabdullah: Oh wow
[09:34] Jaye_: eventemitter compatibility? you using that browser port of emitters?
[09:35] SubStack: Jaye_: nope, I just cp ~/projects/node/lib/events.js .
[09:35] Jaye_: either way, freaking awesome
[09:35] SubStack: crap forgot to git add that one >_<
[09:36] SubStack: oh but npm should be fine
[09:36] Lorentz: Happens to the best of us.
[09:36] Lorentz: Always forget that one extra file here, or etc.
[09:38] SubStack: hooray now I can use seq, traverse, and hashish from the browser
[09:38] SubStack: MY WORK HERE IS DONE
[09:38] meso___ has joined the channel
[09:40] jesusabdullah: hashish? :D
[09:41] Jaye_: hmm node-seq looks much more powerful than step
[09:43] SubStack: yep I went pretty overboard
[09:44] d0k has joined the channel
[09:47] meso__ has joined the channel
[09:48] lukegalea has joined the channel
[09:50] squeeks has joined the channel
[09:51] squeeks: Out of the few different packages on npm, is there a preferred mysql client?
[09:51] zentoooo has joined the channel
[09:52] meso__ has joined the channel
[09:53] TobiasFar has joined the channel
[09:59] bzinger has joined the channel
[09:59] lukegalea has joined the channel
[10:04] micheil: node-mysql, squeeks 
[10:05] springify has joined the channel
[10:06] aklt has joined the channel
[10:07] squeeks: hot stuff.
[10:08] caolanm has joined the channel
[10:08] tmzt: events.js works in the browser?
[10:09] lukegalea has joined the channel
[10:10] adambeynon has joined the channel
[10:14] bluegene has joined the channel
[10:17] markwubben has joined the channel
[10:20] Jaye_: apparently yes
[10:23] SubStack: tmzt: yep!
[10:24] altamic has joined the channel
[10:24] altamic has joined the channel
[10:25] jetienne: tmzt: url ?
[10:25] tmzt: for what
[10:25] jetienne: tmzt: events.js you are talking baout
[10:25] jetienne: about
[10:25] Blink7 has joined the channel
[10:27] Jaye_: https://github.com/ry/node/blob/master/lib/events.js
[10:28] lukegalea has joined the channel
[10:28] jetienne: var EventEmitter = exports.EventEmitter = process.EventEmitter; <- this work in browser ?
[10:28] tmzt: maybe a very simple jquery that requires new js features could be done
[10:28] jetienne: this is the first line of events.js
[10:29] tmzt: with node based events and callback style
[10:29] jetienne: i look for a event stuff compatible in server/browser. if anybody got one, im a taker
[10:29] tmzt: but otherwise very similar/api to node
[10:29] tmzt: and cross network as well :)
[10:29] tmzt: er, to jq
[10:29] SubStack: https://github.com/substack/node-browserify supports require('events')
[10:30] tmzt: process?
[10:30] Jaye_: all he did was add an empty process function before that first line, that counts as "works fine" to me
[10:30] tmzt: .on('', function(..)) would be total win
[10:31] SubStack: that's what I did too
[10:31] SubStack: except I implemented nextTick() too
[10:31] tmzt: with setTimeout?
[10:31] SubStack: yeah
[10:31] SubStack: setTimeout(fn, 0)
[10:31] tmzt: what about workers?
[10:31] jetienne: SubStack: can you do a version with static building ?
[10:32] Jaye_: i already asked for that :P
[10:32] jetienne: ok :)
[10:32] SubStack: jetienne: you mean like a command-line tool / api.browserify() function?
[10:32] jetienne: https://github.com/weepy/brequire this is the one i use for static building
[10:33] jetienne: SubStack: like i could use you thing without running a server
[10:33] SubStack: yeah I can do that
[10:33] jetienne: brequire is common js only, nothing to do with node
[10:33] SubStack: just need to refactor the code a bit since it's messy
[10:33] Metapony_ has joined the channel
[10:35] jetienne: oh btw i made a little toy yesterday https://github.com/jeromeetienne/node-tmpl - basic templating system in node.js based on shorttag
[10:35] Sebmaster has joined the channel
[10:35] SubStack: also I want browserify to make it easy for modules with browser-side source to package those up nicely so that other libraries can use them
[10:35] SubStack: for socket.io and dnode especially
[10:35] SubStack: neat
[10:36] jetienne: SubStack: im not sure about what browserify is doing. are you running node js file in the browser ? 
[10:36] Sebmaster: i just noticed, my mysql client is as fast as felixge's one :)
[10:36] jetienne: SubStack: or communicate with the server and run the js in the server ?
[10:36] drdave has joined the channel
[10:37] Andi__ has joined the channel
[10:37] tmzt: Nokia==Novel
[10:37] tmzt: oops
[10:38] CrazyGoogle has joined the channel
[10:39] squeeks: More like Nokia == Palm before the pre.
[10:39] skohorn has joined the channel
[10:41] Andi__: It's just a silicon and OS war
[10:41] tmzt: it was in reference to an article posted in another channel, http://www.mobilebusinessbriefing.com/article/nokia-admits-it-rejected-android
[10:41] tmzt: seemed like they were expecting to be paid by microsoft, but it's the other way around
[10:42] jetienne: nokie ceo is trojan horse ? :)
[10:42] MrTopf has joined the channel
[10:42] SubStack: jetienne: browserify bundles everything and dumps it at the mount point
[10:43] tmzt: so, a little more on topic, how light do you think a jQuery clone based mostly on browser apis (like forEach, map, reduce, etc.) could be?
[10:43] jetienne: SubStack: so the js is running in the browser, all the non compatible functions in node API, how do you handle them ?
[10:43] SubStack: I don't.
[10:43] jetienne: SubStack: ok :)
[10:43] SubStack: well a few I have compatability stubs for
[10:43] SubStack: and I have EventEmitters working just like they do in node
[10:43] Andi__: @tmzt very light - see underscore.js
[10:43] tmzt: especially a fast xpath implementation
[10:44] SubStack: and you can process.nextTick()
[10:44] SubStack: and you get Function.prototype.bind and some other compatability prototype functions
[10:44] SubStack: if your browser doesn't have them
[10:45] jetienne: http://zeptojs.com/ Zepto.js is a minimalist JavaScript framework for mobile WebKit browsers, with a jQuery-compatible syntax <- tmzt may be of interest too
[10:45] jetienne: SubStack: ok. do you use es5 shim ? or your own
[10:45] Jaye_: sizzle.js is actually very small and light, its all the other crap in jquery
[10:45] tmzt: it's not good to sniff, but could you serve only the native version of those functions? (I'm looking at underscore at the moment)
[10:46] Andi__: Or underscorex, it's based on underscore
[10:46] jetienne: Andi__: how different it is
[10:46] tmzt: I mean only serve those if that's all that's needed
[10:46] SubStack: jetienne: it's just my own right now that I had lying around. Probably better to go with es5 shim
[10:46] tmzt: like, do the detection in a few lines and pull one sha over the other
[10:46] tmzt: then require what you want
[10:47] astropirate has joined the channel
[10:47] jetienne: SubStack: yep. im all for browser/server unification :)
[10:47] Andi__: jetinne: It implements ECMA5 methods if they don't exist (underscorex)
[10:47] Andi__: jetienne: It implements ECMA5 methods if they don't exist (underscorex)
[10:47] Jaye_: andi got a link to underscorex?
[10:48] jetienne: Andi__: hmm ok. i would prefere to keep things clean. like underscore+es5shim instead of bundle them
[10:48] Andi__: https://github.com/akidee/underscorex
[10:48] Andi__: As well on npm
[10:49] Andi__: jetienne: It's just one way to do it ;)
[10:49] jetienne: https://github.com/kriskowal/es5-shim
[10:49] lukegalea has joined the channel
[10:49] jetienne: Andi__: yep :)
[10:54] aklt has joined the channel
[10:55] tmzt: SubStack: how small do you think the client part of dnode can get without minimalization?
[10:56] tmzt: especially if websocket gets stable sometime in the next few months
[10:57] KungFuHamster_ has joined the channel
[10:58] Coal has joined the channel
[10:58] chapel: is there a built in js/node function to strip new lines from a string?
[10:59] lukegalea has joined the channel
[11:00] mike5w3c_ has joined the channel
[11:01] unfo-: chapel, str.replace("\n", "")
[11:01] unfo-: chapel, basic ecmascript
[11:01] chapel: yeah, I thought I saw something else
[11:01] chapel: like .strip
[11:01] chapel: hmm maybe that was for extra spaces
[11:02] unfo-: usually .strip or .trim means remove leading/trailing whitespace
[11:02] chapel: yeah, I was mistaken
[11:02] jimt_ has joined the channel
[11:04] fly-away has joined the channel
[11:04] SamuraiJack has joined the channel
[11:05] rchavik has joined the channel
[11:06] sriley has joined the channel
[11:07] SubStack: tmzt: I'm trying to strip it down just the essentials and have browserify pick up the dependencies and ces5 compatability
[11:07] tmzt: dnode?
[11:07] SubStack: yes
[11:08] Coal has joined the channel
[11:09] jimt has joined the channel
[11:10] lukegalea has joined the channel
[11:16] hellp has joined the channel
[11:18] tmzt: hmm, could v8 itself output js code that was possibly compiled or minified or uneeded stuff removed
[11:19] tmzt: it already has a parser and an ast
[11:19] romainhuet has joined the channel
[11:20] abraham has joined the channel
[11:22] SubStack: hooray browserify is now using es5-shim
[11:25] tbassetto has joined the channel
[11:26] lukegalea has joined the channel
[11:27] unfo-: is there a way to sandbox js queries with node... say i have an irc bot and i want to support .exec 1+1 etc. and of course i do not want to expose anything that could damage my host system :)
[11:29] squeeks: overwrite require.
[11:29] squeeks: if you can't require('fs') or such, you're half way there.
[11:30] jimt_ has joined the channel
[11:30] chapel has joined the channel
[11:31] SubStack: unfo-: process.binding('evals').Script.runInNewContext
[11:31] SubStack: also run it in a separate process so you can kill it on a timer
[11:31] andrewfff has joined the channel
[11:31] SubStack: and that's it
[11:32] unfo-: thanks squeeks and SubStack 
[11:32] chapel: hmm
[11:32] chapel: tanepiper: ping
[11:34] tanepiper: chapel: pong
[11:34] chapel: so I finished my gist script
[11:34] chapel: had to rewrite it
[11:34] tanepiper: ahh cool!
[11:34] chapel: both in coffeescript
[11:34] chapel: and for 0.4.0
[11:34] tanepiper: full of awesomeness
[11:35] chapel: it definitely could be better code, but it seems to work, but of course I need to test edge cases
[11:35] chapel: you can include files, as many as you want, or github will allow
[11:36] chapel: or use your clipboard
[11:36] chapel: and have authenticated gists
[11:36] chapel: or anonymous
[11:37] tanepiper: sounds like a neat little package :)
[11:39] chapel: so question is, should I post it to github and npm?
[11:40] tanepiper: of course :)  Defiently stick it on github first for a poke around the code ;)
[11:41] chapel: my code is pretty ugly, even using cs
[11:42] tanepiper: even ugly code is beautiful
[11:42] SubStack: hah yeah I push ugly broken stuff to github all the time
[11:42] chapel: any linux gurus here?
[11:43] squeeks: linux gurus are everywhere if you know how to troll them
[11:43] SubStack: most of my modules are crazy ugly inside
[11:43] chapel: I have it where it can get the contents of the clipboard or put something in the clipboard
[11:43] tanepiper: github != distribution channel
[11:43] chapel: anyways
[11:43] chapel: on osx, its easy
[11:43] squeeks: start with "You know, linux sucks because it can't do <x>"
[11:43] chapel: pbcopy and pbpaste
[11:43] SubStack: that's why they are modules in the first place: to keep the ugly out of the code that requires them
[11:43] w0rse_ has joined the channel
[11:43] chapel: as far as I know, the most common for linux is xclip
[11:43] Lorentz: Linux has a clipboard?
[11:43] chapel: but I honestly dont have a way to test it
[11:44] tmzt: many
[11:44] SubStack: linux has too many clipboards
[11:45] Multiply has joined the channel
[11:45] tmzt: sub, it's in git?
[11:45] hosh_work has joined the channel
[11:45] SubStack: and by linux I mean the federated ecosystem of tools that clings to the idea of linux
[11:45] SubStack: that is also not gnu since most projects aren't part of that
[11:45] SubStack: tmzt: which what?
[11:46] tmzt: the recent changes to broserfy
[11:46] SubStack: yes and on npm
[11:46] SubStack: using es5-shim now
[11:47] tmzt: does npm database export the sha1 of the git revision?
[11:47] lukegalea has joined the channel
[11:48] jetienne: SubStack: the cut/paste issue is in X 
[11:48] jetienne: SubStack: and involve too many people to be fixed :)
[11:48] sriley_ has joined the channel
[11:48] Lorentz: I know at least two ways to cut/paste
[11:48] Lorentz: There's probably more.
[11:48] Gruni has joined the channel
[11:49] tmzt: as well as gpm
[11:50] tmzt: is there a convention for client libraries in npm?
[11:50] squeeks: there is but nobody sticks to it.
[11:51] fermion has joined the channel
[11:51] evl: Is there any practical difference between exports and module.exports?
[11:52] vilhonen: you need to use the module.exports if you want to export something top level
[11:52] hdon has joined the channel
[11:52] w0rse has joined the channel
[11:56] Druid_ has joined the channel
[11:57] sooli has joined the channel
[11:57] chapel: how do you throw an error without showing the stack?
[11:59] claudiu__ has joined the channel
[11:59] tmzt: SubStack: will Buffer work or can be ported to the browser?
[11:59] tmzt: I'm looking at node-binary
[12:02] saschagehlich has joined the channel
[12:02] luke` has joined the channel
[12:03] tmzt: hmm, I guess wrappers either for the old webgl buffers or the new ones might work
[12:04] lukegalea has joined the channel
[12:04] mlins has joined the channel
[12:07] phiggins_ has joined the channel
[12:08] gkatsev has joined the channel
[12:10] phpnode1 has joined the channel
[12:16] squarepowr has joined the channel
[12:20] daglees has joined the channel
[12:20] daglees has joined the channel
[12:21] mlins has joined the channel
[12:22] hwinkel has joined the channel
[12:22] [[zz]] has joined the channel
[12:26] lukegalea has joined the channel
[12:33] mlins has joined the channel
[12:36] astoon has joined the channel
[12:37] pengwynn has joined the channel
[12:37] lukegalea has joined the channel
[12:37] Utkarsh has joined the channel
[12:38] Utkarsh_ has joined the channel
[12:40] bentruyman has joined the channel
[12:43] kubrow has joined the channel
[12:44] chapel: hmm
[12:46] astoon has joined the channel
[12:48] lukegalea has joined the channel
[12:49] pl-6 has joined the channel
[12:52] arpegius has joined the channel
[12:54] fairwinds has joined the channel
[12:54] ukev has joined the channel
[12:56] randylien has joined the channel
[12:56] brian_irish has joined the channel
[12:58] slpsys has joined the channel
[13:01] lukegalea has joined the channel
[13:02] lukegalea_ has joined the channel
[13:04] tanepiper: chapel: console.log error.msg ?
[13:04] chapel: I just did console.error which really didn't matter
[13:04] chapel: and exited the process
[13:05] hoodoos: hello! is there any v8-profiler that should work on v.2.5.0?  or this version is very-very old?
[13:05] devrim has joined the channel
[13:09] fairwinds has joined the channel
[13:09] chapel: tanepiper: npm install ngist
[13:11] margle has joined the channel
[13:12] hoodoos: guys, is there anyway to forcibly call garbage collect in node?
[13:12] EricL has joined the channel
[13:13] chapel: http://search.npmjs.org/#/ngist
[13:13] lukegalea_ has joined the channel
[13:13] hoodoos: oh, it was for me? :)
[13:13] chapel: no
[13:13] herbySk has joined the channel
[13:13] chapel: for tanepiper
[13:13] hoodoos: ah, sorry then
[13:13] chapel: as far as gc, I dont know sorry
[13:15] chapel: SubStack: I used optimist, though I had to do a lot of if and or booleans to account for two different args, ie -f or --file
[13:15] Zenergy has joined the channel
[13:17] perlmonkey2 has joined the channel
[13:18] bentruyman has joined the channel
[13:18] Utkarsh__ has joined the channel
[13:21] hwinkel has joined the channel
[13:21] Jaye_: hoodoos: node-gc
[13:22] Jaye_: https://github.com/billywhizz/node-gc
[13:22] Utkarsh has joined the channel
[13:23] MattJ has joined the channel
[13:23] lukegalea_ has joined the channel
[13:32] jetheredge has joined the channel
[13:32] Gruni has joined the channel
[13:32] chapel: tanepiper: did you get it?
[13:34] jamescarr has joined the channel
[13:36] sooli has joined the channel
[13:39] hoodoos: Jaye_, btw, there was a rumor about JSON.stringify/parse memory leaking, was it confirmed or not?
[13:40] KungFuHamster_ has left the channel
[13:40] fumanchu182 has joined the channel
[13:40] jlecker has joined the channel
[13:41] Poetro has joined the channel
[13:42] tanepiper: chapel: checking
[13:42] Jaye_: you mean https://github.com/ry/node/issues/issue/521 ?
[13:42] Jaye_: not sure
[13:43] hoodoos: mm, not sure, never seen any segfaults on node..
[13:43] hoodoos: i just notice that my applications grows and grows in memory
[13:43] hoodoos: and never give it back
[13:43] hoodoos: i guess If i will keep loading it it will eventualy segfault :)
[13:45] fly-away has joined the channel
[13:45] tanepiper: chapel: sweet! https://gist.github.com/825889
[13:45] Jaye_: apparently https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js works fine, are on you on 0.4.0? try that and if it fixes the problem you should probably open a new issue complaining about it so it can get fixed
[13:45] chapel: did you have your github.user and github.token set already?
[13:46] tanepiper: no, set -u and -t
[13:46] chapel: ah
[13:46] chapel: well you only have to use it once
[13:46] chapel: cause it sets those
[13:46] tanepiper: i take it if i set those github confs that'll use it?
[13:46] tanepiper: ahh, cool
[13:47] chapel: Im not sure the best way to handle error messages and the help files
[13:47] chapel: as far as telling people the proper way to use it heh
[13:47] tanepiper: hmm, do i have to do -u again?  i just did this one without -u -t https://gist.github.com/825892
[13:48] ryanfitz has joined the channel
[13:48] chapel: do -l
[13:48] tanepiper: ahh, ok - works now
[13:49] chapel: you can include many files too
[13:50] pengwynn has joined the channel
[13:50] chapel: https://gist.github.com/ac18bfeedf67010be9d4
[13:51] astoon has joined the channel
[13:51] chapel: I guess one feature I could add, is the ability to gist a directory of files?
[13:52] tanepiper: yea, just tried it, also weirdly worked with a GIF image, but not PNG :)  but the gif is malformed
[13:52] tanepiper: i accidently send the gif, and got no error anyway
[13:52] chapel: hmm
[13:52] chapel: I didnt add any logic there
[13:53] chapel: wonder if there is an easy way to check to make sure the file is text
[13:54] tanepiper: actually, gist support binary data
[13:54] chapel: hmm
[13:54] tanepiper: i've seen images in them before
[13:56] chapel: well hmm
[13:56] chapel: as far as the web interface, there isn't support for binary
[13:56] Andi_ has joined the channel
[13:58] Andi_ has left the channel
[13:58] Andi5 has joined the channel
[14:01] tanepiper: yea, i think it's when you clone a url, then you push changes
[14:01] xla has joined the channel
[14:02] chapel: yeah, thats more of a git thing
[14:02] tanepiper: but this is pretty neat, going to use it from now on for adding gists :)
[14:03] Alex3000 has joined the channel
[14:06] MattJ has joined the channel
[14:07] syntheze has joined the channel
[14:07] bshumate has joined the channel
[14:07] bshumate has joined the channel
[14:08] lukegalea_ has joined the channel
[14:10] cognominal has joined the channel
[14:10] heavysixer has joined the channel
[14:10] torvalamo has joined the channel
[14:11] abraham has joined the channel
[14:13] chapel: well Im glad you like it
[14:13] jano has joined the channel
[14:14] chapel: it was annoying to write, had to remind myself how to do some things over again since it had been a while doing a cli tool
[14:16] montylounge has joined the channel
[14:17] beta_ has joined the channel
[14:17] piscisaureus has joined the channel
[14:18] cognominal has joined the channel
[14:20] EricL has joined the channel
[14:21] postwait has joined the channel
[14:22] chrischr_ has joined the channel
[14:23] Vertice has joined the channel
[14:23] boaz has joined the channel
[14:25] xla has joined the channel
[14:26] boaz has joined the channel
[14:28] montylounge has left the channel
[14:29] montylounge has joined the channel
[14:35] superdug has joined the channel
[14:36] chapel: tanepiper: added description support
[14:36] chapel: if you want to update
[14:36] davglass has joined the channel
[14:37] piscisaureus: mraleph: ping
[14:38] srid has joined the channel
[14:38] srid has joined the channel
[14:38] dspree: anyone know what the default setting is for stream.setKeepAlive, if you set it to true without specifiying initialDelay?
[14:39] Aria has joined the channel
[14:39] unomi has joined the channel
[14:39] nonnikcam has joined the channel
[14:39] sivy has joined the channel
[14:40] FireFly: Hrm, is there any better way to asynchronously execute a function, other than setTimeout(func, 0, args ...) ?
[14:40] FireFly: where "better" is "more semantic/proper", I suppose
[14:40] caolanm: FireFly: see nextTick
[14:41] FireFly: Oh, nice
[14:41] caolanm: FireFly: http://nodejs.org/docs/v0.4.0/api/all.html#process.nextTick
[14:41] caolanm: :)
[14:42] bzinger has joined the channel
[14:42] vonkow_ has joined the channel
[14:43] chapel: hey caolanm how is kanso doing?
[14:43] nook has joined the channel
[14:44] FireFly: Hm, nextTick doesn't do arguments though :(
[14:44] FireFly: guess I'll have to wrap it in a closure
[14:44] void_ has joined the channel
[14:44] pdelgallego has joined the channel
[14:47] c4milo has joined the channel
[14:48] iszak has joined the channel
[14:49] caolanm: chapel: hey
[14:49] caolanm: did some work over the weekend on module loading in the browser
[14:49] caolanm: should be easier to debug now
[14:50] caolanm: currently looking at adding better auth / session support
[14:51] alek_br has joined the channel
[14:51] iszak: caligula, oh/
[14:52] plusgut has joined the channel
[14:53] bx2 has joined the channel
[14:55] mraleph has joined the channel
[14:56] mraleph: piscisaureus: pong
[14:56] bradleymeck has joined the channel
[14:56] piscisaureus: ah you're here :-)
[14:56] mraleph: no I was not :-)
[14:56] piscisaureus: shortie: you think try..catch will be fast anytime soon?
[14:57] groom: i've done my first steps with node.js. strange: my script runs completely but doesn't return. any idea for that?
[14:57] piscisaureus: mraleph: we were talking about wrapping EventEmitter callbacks in a try catch block last night
[14:57] hoodoos: guys, is there anything like node-compress but that builds for 0.4.0 i woder..
[14:57] piscisaureus: but it turns out to be a big perf hit
[14:57] fatjonny has joined the channel
[14:59] mraleph: I see a JS perf benchmark. the 8x difference is a bit unexpected. let me do some local measurements.
[15:01] piscisaureus: mraleph: isaacs did some benchmarks on actual node code. turns out that a try/catch makes node ~35% slower when injected at that particular (hot) spot
[15:01] piscisaureus: which is less than 8x but unacceptable still
[15:02] mraleph: well. there is at least one known problem with try {} catch(e) {}: it will make everything in the same function go slower. so if you have say hot loop in that place... cabooom
[15:02] erwe has joined the channel
[15:02] mraleph: this should have been partially fixed. let me do some digging and I'll get back
[15:02] lukegalea: hey, has anyone used node http client with a socks proxy? Any hints to share? I don't see any easy way to tell it about the proxy..
[15:02] nerdEd has joined the channel
[15:03] zachsmith has joined the channel
[15:03] erwe: hi everyone
[15:03] Zenergy: good morning
[15:03] piscisaureus: mraleph: kewl :-)
[15:03] erwe: i'm trying to implement ecommerce on my nodejs project
[15:03] erwe: i've seen that there aren't many payment options with nodejs
[15:03] Fullmoon has joined the channel
[15:04] erwe: so I was thinking of using php code on port 80 and then with url rewrite routing everything to the node js server on another port
[15:04] astoon has joined the channel
[15:04] erwe: should that work? any better ideas?
[15:05] Nexxy has joined the channel
[15:05] joshpeek_ has joined the channel
[15:05] lukegalea: erwe: ya, you can do that. maybe use nginx instead of apache ;)
[15:06] lukegalea: depending on volume
[15:06] erwe: yeah that's exactly my problem
[15:06] erwe: :P
[15:06] erwe: i've switched to node.js because of its performances
[15:06] erwe: and I don't like to use PHP at all
[15:06] lukegalea: well, apache is always going to suck at large volumes.. so if you are still passing everything through apache to node, you aren't going to be much bettter. 
[15:06] lukegalea: We have nginx in front of our apache mod php.
[15:07] erwe: how about node and nginx?
[15:07] lukegalea: and we use the nginx to proxy stuff over before it hits apache.
[15:07] mraleph: piscisaureus: ah. it was only partially fixed.
[15:07] rikarends has joined the channel
[15:07] mraleph: piscisaureus: http://code.google.com/p/v8/issues/detail?id=1065
[15:08] rikarends: hi guys, i'm looking at this: https://github.com/nodester/nodester/blob/master/scripts/launch_chrooted_app.js and i wonder if this actually protects a nodeprocess against reimplementing 'kill' 
[15:08] dgathright has joined the channel
[15:08] bradleymeck: mraleph which try catch jsperf, one of those is really off
[15:08] erwe: lukegalea: how should the performance be with nginx as a webserver and node.js for the main app?
[15:08] erwe: nginx as a *php webserver
[15:10] lukegalea: I don't know.. for some reason we never migrated our PHP app to nginx..  not sure how well nginx behaves as a php web server, but with Nginx as a front end to Node or Apache (depending on the URL) we are all good. I'd say that Nginx will not be your limiting factor in that setup.. it'll be Node. but if you use apache, Apache will be your limiting factor so you'll never stress node.. apache will break first.
[15:10] mraleph: bradleymeck: there is a problem with try-catch so I am not surprised by a big difference
[15:11] mraleph: for some reason I thought that we fixed it, but no.
[15:11] Viper-7 has joined the channel
[15:11] erwe: lukegalea: ok.. i hope Node's mature enough to support a heavy load.. anyway I can still upgrade the hardware :)
[15:11] erwe: i don't know how good it is because i've been playing with it for a month
[15:11] kristsk has joined the channel
[15:11] lukegalea: lukegalea: I'm taking some liberties with our real setup (we are proxying to erlang too), but all this should hold true. ajaxim.com talks about how you have to use nginx in front of their node server rather than apache too. 
[15:11] erwe: less perhaps
[15:12] mraleph: it's an artifact from the times when V8 tried to properly implement catch-block semantics as described in ECMA-262. 
[15:12] devrim has joined the channel
[15:12] mraleph: for that reason we put with block into catch.
[15:12] mraleph: but nobody actually does that.
[15:12] lukegalea: erwe: Well, you can be sure it'll be faster than PHP... but hard to know what level of performance you are expecting.
[15:13] erwe: lukegalea: i expect it to be faster than PHP
[15:13] erwe: that's all.. good to know then
[15:13] mraleph: we need to remove that transformation and try-catch will become fast.
[15:13] bradleymeck: the with block has terrible perf so makes sense
[15:13] lukegalea: erwe: It will be a lot faster than PHP.. ..
[15:13] erwe: great
[15:13] erwe: ok thanks to everyone
[15:13] erwe: bye
[15:15] gosma has joined the channel
[15:15] bentruyman has joined the channel
[15:15] bmavity has joined the channel
[15:15] jakehow has joined the channel
[15:16] bmavity: mornin' peeps
[15:16] Zenergy: gooood morning
[15:16] mraleph: piscisaureus: I can't find anything about source changes that issacs tried, so I can't even advise whether it is possible to fix perf by slightly rearranging code.
[15:16] piscisaureus: mraleph: this is what we are trying to do: https://gist.github.com/826013
[15:17] gosma: hi, i'm trying to install node.js using cygwin and I got some problem: after I send the ./configure command, I get the error: python 4976 fork: child 4112 - died waiting for dll loading, errno 11
[15:17] piscisaureus: (i can get you more context if needed)
[15:17] lukegalea: to keep pushing on my earlier question, it seems trivial to use an HTTP proxy in 0.2.x, because you can create an http client pointing to the proxy, but request elsewhere.
[15:17] vyvea has joined the channel
[15:17] bentruyman has joined the channel
[15:17] gosma: sb help, please?
[15:17] lukegalea: but on 0.4.x the API hides the client connection.. so... any ideas?
[15:18] gosma: after that I got: wscript:190: error: could not configure a cxx compiler!
[15:18] gosma: What is that?
[15:18] fairwinds: how do I add multiple middlewares to my my express route? ie. for a single is this form: app.get('/some/route', middeware, function(req, res) { .. render with template }
[15:20] lukegalea: gosma: Sorry I can't help with windows stuf.. but have you considered using a vm and running linux on it? virtualbox or something? Or do you actually need to run on windows?
[15:20] sriley: how can you compare 2 buffers, do you need to convert them to strings? alternatively what's the best way to compare 2 files?
[15:20] sirkitree has joined the channel
[15:20] kristsk: man diff 
[15:20] gosma: no, I didn't try to use a VM, maybe I do that. Where can I find a good one?
[15:21] sriley: yea but in node, i guess i could exec diff and get the response
[15:21] wink_: gosma: virtualbox
[15:21] lukegalea: gosma: I'd recommend virtualbox + vagrant
[15:21] kristsk: what is the purpose of comparison? equal/notequal or somthing more ?
[15:22] sriley: just need to know if they are identical
[15:22] Imperion has joined the channel
[15:22] kristsk: check lenghts and byte-by-byte in for(...) ?
[15:23] kristsk: or just make md5 of both buffers heh
[15:23] gosma: thank you
[15:23] kristsk: how large the files ?
[15:23] mraleph: piscisaureus: yeah. this function will go slow-case...
[15:23] sriley: 2 small files
[15:24] kristsk: byte-by-byte will do then, i suppose
[15:24] fairwinds: ah, found it, pass them in as an array
[15:24] wao has joined the channel
[15:25] sriley: k, just thought there might have been something a little more elegant than a for loop to compare each byte :)
[15:25] yhahn has joined the channel
[15:25] springify has joined the channel
[15:26] Ari-Ugwu has joined the channel
[15:26] montylounge has joined the channel
[15:27] devrim has joined the channel
[15:27] unomi has joined the channel
[15:28] aklt: mscdex: I had a look at your imap code, are you planning to add IDLE, LITERAL+, etc?
[15:28] iFire` has joined the channel
[15:28] piscisaureus: mraleph: that's sad. is making it fast on the short-term or the long-term roadmap?
[15:29] mraleph: piscisaureus: the only option here will be to create a level indirection: function emit () { try { real_emit() } catch (e) {} } <- but I doubt that will help much.
[15:29] mraleph: piscisaureus: we do not discuss road-maps... you can star the issue.
[15:31] mscdex: aklt: i initially had those two on the todo list, but we already have to keep the connection alive by sending noop, which checks for new mail anyway.
[15:31] nerdEd has joined the channel
[15:32] piscisaureus: mraleph: starred it
[15:32] mscdex: aklt: as far as literal+ goes, i don't think it's needed afaik since node-imap never sends literals
[15:32] piscisaureus: ACTION surpressing the urge to discuss v8 not discussing the roadmap :-)
[15:32] mscdex: er continuations rather
[15:32] mscdex: whichever :)
[15:32] losing has joined the channel
[15:33] brianc: augustl: hey sorry I was on vacation, i missed your messages from earlier
[15:34] kristsk: anyone using netbeans ide for node.js stuff ?
[15:34] amacleod has joined the channel
[15:34] heavysixer has joined the channel
[15:34] kristsk: is there some patch or guide how to add, say, "exports" as a known variable?
[15:34] mraleph: piscisaureus: well. patches speeding up try catch are welcome as they say :-)
[15:36] testuale has joined the channel
[15:36] Evet has joined the channel
[15:36] mscdex: aklt: there are several extensions on the readme todo list that i'm thinking about adding support for though
[15:37] sivy has joined the channel
[15:38] piscisaureus: mraleph: actually I was considering to try and write one. 
[15:38] piscisaureus: but seriously, not knowing what issues are considered important by the v8 team doesn't make such very attractive
[15:39] brianm has joined the channel
[15:39] brianm has joined the channel
[15:39] nerdEd_ has joined the channel
[15:41] piscisaureus: plus you never really know what has been tried already
[15:42] mraleph: "what has been tried"?
[15:43] nerdEd has joined the channel
[15:43] kjeldahl has joined the channel
[15:43] piscisaureus: mraleph: well another issue: (new Date) is very slow
[15:44] Sebmaster has joined the channel
[15:44] aklt: mscdex: Ok, that is interesting.  Why do we have to send the NOOP?
[15:44] mscdex: apparently to keep the connection alive
[15:44] piscisaureus: mraleph: probably you know about it and tried to do something about it, but it didn't work out
[15:44] mscdex: otherwise the server disconnects you after whatever time they see fit
[15:44] mscdex: from my experience
[15:44] piscisaureus: mraleph: so now I go around and try to fix it, likely trying the same, then finding out that I can fix it
[15:45] piscisaureus: *can't fix it
[15:45] aklt: mscdex: For some servers probably, but not for oothers,...  You have not considered tailoring how node.imap works with the CAPABILITY string?
[15:46] aklt: mscdex: I guess that it is Gmail you have experimented with mostly, or also other servers?
[15:46] Yuffster has joined the channel
[15:46] kubrow has joined the channel
[15:47] mscdex: aklt: i personally test with gmail, yes. what do you mean about the capability?
[15:47] MattDiPasquale has joined the channel
[15:47] piscisaureus: v8: var start = new Date(); for (var i = 0; i < 1000; i++) (new Date()); var end = new Date(); "took " + (end-start) +  "msecs";
[15:47] v8bot: piscisaureus: "took 0msecs"
[15:48] eresair has joined the channel
[15:48] aklt: mscdex: I thought that it would be nice to tailor node-imap communicates with a server by using the CAPABILITY  string... thats all
[15:49] mscdex: aklt: it already does get the server capabilities on login
[15:49] aklt: mscdex: And I guess that literal+ could save a round trip here and there.
[15:50] mscdex: literal+ would?
[15:50] mscdex: i haven't run into a situation where the client needs to send literals
[15:50] warz has joined the channel
[15:51] piscisaureus: mraleph: forget about the date issue itself. don't remember quite well
[15:51] herbySk has joined the channel
[15:51] piscisaureus: ... what the problem was exactly
[15:51] fairwinds: anyone familiar with express or connect that could advise on whether routes could be added dynamically
[15:51] aklt: mscdex: Regarding the NOOP, do you mean that you have experienced server disconnection even though IDLE was used?
[15:51] chapel: fairwinds: dynamically in what way?
[15:52] aklt: mscdex: I am no IMAP expert, but it seems sensible to literal+ when using append, for example
[15:52] samsonjs has joined the channel
[15:53] dguttman has joined the channel
[15:53] larsemil has joined the channel
[15:53] mscdex: aklt: no, i haven't tried using IDLE yet. although the rfc doesn't mention anything about interfering with connection timeouts
[15:53] larsemil: any hint on how to get client.ID from client when using socket.io? cant seem to get it
[15:53] mscdex: so my guess is that you would still be disconnected, but you'd get async mail updates
[15:54] hoodoos: hmm, I can't seem to find how to send http request over https in node 0.4.0 :/
[15:54] hwinkel has joined the channel
[15:54] chapel: hoodoos: client?
[15:54] hoodoos: yep
[15:54] chapel: same way you would for http
[15:54] mscdex: aklt: yes, that's when you'd use literals. however append and the like aren't on the todo list for now, i don't see it as a very common operation
[15:54] chapel: but https = require https
[15:54] squeeks: err, to anyone wondering, servers that have sockets put into IDLE mode can have the connection cut due to timeout or lack of keep-alive and it's the client's job to reopen the socket.
[15:54] hoodoos: ah
[15:54] chapel: and port 443
[15:54] hoodoos: nice
[15:55] hoodoos: okay, good :)
[15:55] mraleph: piscisaureus: well creating a new Date is surely not as fast as it can be. you need to call to runtime, get current time milliseconds as double, floor it, put this number into heap number, return to generated code.
[15:55] aklt: mscdex: I think that when moving mails, append can come in handy.  
[15:55] hoodoos: chapel, hmm, it changed greatly in compare with 0.2.5 :/
[15:55] aklt: mscdex: And I think to be abe to get updates when in IDLE, the connection needs to be kept open.
[15:56] mscdex: aklt: when moving them?
[15:56] softdrink has joined the channel
[15:56] chapel: hoodoos: yes, but for the better
[15:56] aklt: mscdex: When moving mails between mailboxes
[15:56] hoodoos: chapel, no createClient at all anymore :)
[15:56] larsemil: any hint on how to get client.ID from client when using socket.io? cant seem to get it
[15:56] chapel: http://nodejs.org/docs/v0.4.0/api/ hoodoos read that
[15:56] mscdex: aklt: messages can already be moved between mailboxes without append
[15:56] aklt: mscdex: Again I am no expert, but I was told that that is not the case for all servers
[15:57] hoodoos: chapel, yes there atm. but strange now I need to have 2 separate implementations to do http or https requests..
[15:57] mraleph: in theory one can optimize this by inlining all this into generated code. but... well... I do not think that new Date is an operation that should be highly optimized. 
[15:58] devdazed has joined the channel
[15:58] piscisaureus: v8: var count = 0, start = new Date(), delta; do { count++; delta = (new Date()) - start; } while (delta < 1000); (count / delta) + " ops/sec";
[15:58] v8bot: piscisaureus: "903.867 ops/sec"
[15:58] chapel: hoodoos: well it makes it simpler on the api side
[15:58] chapel: what are you doing?
[15:59] devdazed: hi all, using the new http.request api in 0.4.0, how can i convert an object to proper post data?
[15:59] piscisaureus: mralpeh: ^^ -- that's >1M cycles each iteration
[15:59] bradleymeck: anyone know how hard it would be to get a hold of the code generated for a v8::Function if it is a pure function (no side effects, only affects arguments this keyword and return value) and if it would work across contexts?
[15:59] piscisaureus: mraleph: ^
[15:59] hoodoos: chapel, just a https request, but on 0.2.5 i can easily switch to http without changing anycore, just set secure false :)
[15:59] hoodoos: *any code
[15:59] mraleph: creating 1000000 dates in a loop takes ~800ms, while creating 1000000 empty objects cost 29 ms.
[15:59] chapel: devdazed: http://nodejs.org/docs/v0.4.0/api/querystring.html#querystring.stringify
[16:00] devdazed: chapel, thanks! i didnt even think to look in the qs class
[16:00] mraleph: that means that creating one date takes 0.0008 ms.
[16:00] luke` has joined the channel
[16:00] piscisaureus: v8: var count = 0, start = new Date(), delta; do { count++; delta = (new Date()) - start; } while (delta < 1000); (count / delta) + " ops/sec";
[16:00] v8bot: piscisaureus: "893.211 ops/sec"
[16:00] piscisaureus: mraleph: ^ way slower than that
[16:00] piscisaureus: oh wait it's msecs heh
[16:00] piscisaureus: yeah you got that right
[16:01] piscisaureus: well anyway
[16:01] mraleph: if this is bottleneck in someones code... well. I think you should switch to C 
[16:01] chapel: devdazed: you just querystring.stringify(formObject)
[16:01] hoodoos: chapel, there's no http.createClient at all now? I can't find it in API docs, but if I call it works
[16:01] squeeks: 3346.666 ops/sec bring on the penis contest
[16:01] chapel: hoodoos: its depreciated
[16:01] mscdex: aklt: afaik the only time you'd use append to move messages would be if it was between two separate accounts/servers
[16:02] mraleph: or submit a patch :-)
[16:02] chapel: meaning, it still works atm, but wont in the future
[16:02] Imperion: chapel: deprecated
[16:02] Imperion: please
[16:02] chapel: yes
[16:02] chapel: sorry
[16:02] mscdex: aklt: which i don't have support for that just yet either
[16:02] chapel: Imperion: twice now :(
[16:02] Imperion: depreciated means something different
[16:02] chapel: deprecated
[16:02] hoodoos: chapel, ah okay
[16:02] Imperion: thank you
[16:02] aklt: mscdex: Ok, good to know
[16:02] arpegius has joined the channel
[16:02] hoodoos: Imperion, i hope it's not depreciated..
[16:02] khaije|minder has joined the channel
[16:03] chapel: heh
[16:03] arpegius_ has joined the channel
[16:03] Imperion: ACTION glares at hoodoos
[16:03] gattuso has joined the channel
[16:03] balaa has joined the channel
[16:04] halfhalo: Dundundun....
[16:04] aklt: mscdex: How about the search extension?
[16:04] jessica-m: is there a way to restart a node server if it crashes?
[16:04] jessica-m: automatically
[16:04] mscdex: aklt: there is search functionality already, were you referring to a specific extension?
[16:05] muhqu_ has joined the channel
[16:05] aklt: mscdex: Sorry for all these questions, I am thinking of adding some features to node-imap, so I wanted to ask what the plans are
[16:05] mscdex: aklt: no problem :)
[16:05] piscisaureus: mraleph: if I understand it correctly try..catch is slow because in a `try { } catch(e) { }`  the variable 'e' is lexically scoped to the catch block, right?
[16:05] aklt: mscdex: I think there are a couple ESEARCH and WITHIN
[16:05] aklt: ..are some of them
[16:06] Me1000 has joined the channel
[16:06] chapel: jessica-m: you can use lots of things, from node specific like forever
[16:06] chapel: to distro based like upstart
[16:06] jessica-m: what is that?
[16:06] chapel: might be upstart, whatever that ubuntu one is
[16:06] mraleph: piscisaureus: well. yes and no. it is slow because we implemented this lexical scoping through a with statement (as spec describes it in terms of special object inserted into scope chain).
[16:06] jessica-m: we are on centos
[16:06] BillyBreen has joined the channel
[16:07] chapel: jessica-m: http://blog.nodejitsu.com/keep-a-nodejs-server-up-with-forever
[16:07] bradleymeck: mraleph do you know if there a way to store the code generated for functions and restore it later (assuming it has no side effects outside of the this variable/no closure use) ... that might be poorly worded
[16:07] mraleph: and with statement forces some other things to happen.
[16:07] mraleph: bradleymeck: you mean native code?
[16:07] softdrink has joined the channel
[16:08] bradleymeck: yea
[16:08] aklt: mscdex: Is your goal to be able to support as many servers as possible?
[16:08] mscdex: aklt: well, the WITHIN extension is mostly just for searching for messages with dates relative to the current date/time, which is something we can already easily do without needing the extension
[16:08] mraleph: any particular reason why you what to do that?
[16:08] mscdex: aklt: ideally, yes
[16:08] piscisaureus: mraleph: I guess a simple optimization where the with is skipped if the exception var doesn't hide a variable in the function scope would solve 99% of the issues
[16:08] aklt: mscdex: Oh, I wasn't aware of that.
[16:08] zlipp has joined the channel
[16:09] aklt: mscdex: Can one also easily search an arbitrary time period?
[16:09] piscisaureus: mraleph: like
[16:09] piscisaureus: function() { try { blah() } catch (e) { } )   <-- fast case
[16:09] piscisaureus: function() { var e; try { blah() } catch (e) { } )   <-- slow case
[16:10] jchris has joined the channel
[16:10] bradleymeck: mraleph, trying to test if sharing functions between node instances would be viable in a way that allows quick booting if it gets aborted etc, anywho not a big thing, just some r&d
[16:10] mraleph: piscisaureus: I think when I discussed this issue internally our consensus was that we should just rip with out from that place and resolve all references statically.
[16:10] mscdex: aklt: should be able to, there are several date-related search criteria
[16:10] jchris has left the channel
[16:11] davidsklar has joined the channel
[16:11] aklt: mscdex: But surely the extensions must provide something better? (I hope! :)
[16:11] [AD]Turbo has joined the channel
[16:12] mscdex: aklt: afaik WITHIN is the only date-related imap4 extension
[16:12] aklt: mscdex: True.  Then it must provide something further that vanilla IMAP.
[16:12] mraleph: bradleymeck: V8 has this feature called "snapshots", it basically creates serialized representation of initial clean JavaScript world. we use it for fast creation of a new JS contexts (instead of compiling/assembling all natives from scratch). 
[16:13] mraleph: bradleymeck: someone with enough persistence can probably adopt it to create snapshots for node apps.
[16:13] BillyBreen has left the channel
[16:13] bradleymeck: mmm
[16:13] bradleymeck: ACTION goes off to his trusty v8.h
[16:14] mraleph: there is no V8 API for that
[16:14] BillyBreen has joined the channel
[16:14] mraleph: it is internal stuff.
[16:14] mraleph: full of dark magic.
[16:15] ajcates has joined the channel
[16:15] mscdex: aklt: and as far as ESEARCH goes, the only usefulness that might bring would be if one was interested only in the number of messages matched by a search and not the actual results
[16:15] mraleph: snapshot is essentially a bytecode which says: "create object here", "wire this to this", "create this piece of code", "set state of this global var to this value" 
[16:15] bradleymeck: uggg then i guess ill get to reading
[16:15] mscdex: aklt: and i'm not sure how often that would occur
[16:15] aklt: mscdex: Maybe if bandwidth is limited?
[16:16] mscdex: aklt: maybe...
[16:18] kwik101 has joined the channel
[16:19] colinclark has joined the channel
[16:19] aklt: mscdex: Maybe if the goal is to be THE node imap lib, it would make sense to support as many extensions as possible?  Or are you saying that some of the extensions are very rare and some should even be avoided?
[16:20] Nexxy: Would anyone care to give me a recommendation on postgres packages for node.js? node-postgres? postgres-js?
[16:20] squeeks: If you're not going to support every IMAP profile, make it easy to extend to support others
[16:20] aklt: <--- Still an IMAP novice
[16:21] aklt: squeeks: Good point
[16:21] tjholowaychuk has joined the channel
[16:22] squeeks: nobody will expect you to immediately support IDLE, NAMESPACE, LITERAL+ etc. Get the basics and leave room for the others.
[16:22] mscdex: aklt: well, the capabilities list is a public property of a node-imap connection and i had planned on allowing people to use that information to decide whether to use extensions whose functionality cannot be reproduced with plain IMAP
[16:23] strmpnk has joined the channel
[16:23] mscdex: but i wasn't sure where to draw the line when it comes to how much knowledge the user needs to have with regards to imap
[16:23] montylounge has joined the channel
[16:23] raak has joined the channel
[16:24] mscdex: the protocol itself
[16:24] squeeks: as little about the protocol as possible.
[16:24] mscdex: exactly, so that's why i was hesitant about adding such extensions
[16:25] squeeks: people will want some of these things later on because they are important.
[16:25] ianward has joined the channel
[16:26] aklt: mscdex: How about some sort of plugin architecture to add IMAP extensions 
[16:27] mscdex: aklt: i've thought about that, but i haven't decided to the best way to go about it
[16:27] mscdex: yet
[16:27] mscdex: it really depends on the behavior of the extension
[16:28] aklt: mscdex: Yeah, I guess it is a bit complicated also because some extensions may introduce a new state
[16:28] samsonjs has joined the channel
[16:28] figital has joined the channel
[16:31] aklt: mscdex: I might have a go at literal+ or idle maybe, would you accept patches? (if the code ios reaonable)
[16:32] briznad has joined the channel
[16:32] geoffeg: Can someone helpe me figure out why this code isn't running in the order I specify in the loop? How can I force the new() of the objects to always block? https://gist.github.com/56bbed53c49a1c5f9812
[16:32] mscdex: aklt: sure
[16:32] perezd has joined the channel
[16:32] ceej: wow express/connect is still pretty slow at loading static public files
[16:32] tanepiper: ceej: are you caching?
[16:32] phpnode has joined the channel
[16:33] tanepiper: pass cache: true as an option to the static provider
[16:34] kwik101 has joined the channel
[16:34] mscdex: geoffeg: what do you mean, it doesn't run in the order you specify? :S
[16:35] kwik101_ has joined the channel
[16:35] kwik101_ has left the channel
[16:35] geoffeg: mscdex: right, the require() runs in order of the loop, but the objects that are getting created via new() seem to finish up their new() (constructor) in different orders which is screwing up the loading of those services (some services need to create prequisites in their constructor for other services to be able to start properly)
[16:35] kwik101 has joined the channel
[16:35] tjholowaychuk: ceej: node is slow lately
[16:35] tjholowaychuk: in general
[16:35] tjholowaychuk: lol
[16:36] hoodoos: strange thing, end event of clientResponse won't fire everytime.. :/
[16:36] tjholowaychuk: ceej: it just uses the fs read stream so all you can do is change the buffer size
[16:36] ceej: tjholowaychuk: actually seems pretty faster at running the app only 76 ms my php app gets about 300ms
[16:36] kwik101 has joined the channel
[16:36] blueadept has joined the channel
[16:37] mscdex: hoodoos: for https?
[16:37] ceej: tanepiper: https://gist.github.com/74f8101c02ba7d6fd15c is this what you mean?  doesn't seem to do anything
[16:37] syntheze has left the channel
[16:37] hoodoos: mscdex, yep
[16:37] mscdex: hoodoos: that's known, mikeal discovered that the other day
[16:37] hoodoos: mscdex, ah, damn it. is 0.4.0 considered stable?
[16:37] groom: my node application doesn't return. is there a way to debug that problem?
[16:38] tjholowaychuk: ceej: no thats not what i mean
[16:38] mscdex: hoodoos: yes, even numbered branches are stable. it's a bug
[16:38] arnorhs has joined the channel
[16:38] mscdex: groom: there's something still on the event loop
[16:38] hoodoos: mscdex,ooookay, I wonder is there any patch available to fix that?
[16:38] mscdex: geoffeg: is it the same order every time, or completely random?
[16:38] mscdex: hoodoos: i'm not sure if the cause is known yet
[16:38] jakehow has joined the channel
[16:38] tjholowaychuk: ceej: im just saying dont expect it to be magically faster than anything else
[16:38] tjholowaychuk: because its not
[16:38] aho has joined the channel
[16:39] ceej: tjholowaychuk: O I'm not, just trying to speed up static file serving
[16:39] groom: mscdex: yes. i have console log messages after each handled event and theyr'e all printed.
[16:39] geoffeg: mscdex: it seems to be the same order everytime, but i have to think it's simply timing. if i were to make the constructor of one service take longer than another it would instantiate in a different order
[16:39] tjholowaychuk: ceej: fs.readFile() used to be a faster alternative for small assets
[16:39] hoodoos: mscdex, i'm just trying to figure out will my app still leak in 0.4.0 :) and it's quite hard to even get it running. web-workers module wasn't updated for quite a long time and just hangs in 0.4.0, https won't work also.. 
[16:39] tjholowaychuk: but now it uses the ReadStream
[16:39] hoodoos: ACTION looking for rope..
[16:39] sprout has joined the channel
[16:40] drudge: yeah what is the deal with the slowness in 0.3/0.4
[16:40] mscdex: hoodoos: i'm sure there's probably quite a number of modules that aren't fully 0.4.0 compatible yet
[16:40] Evet: 0.4.0 \o/
[16:40] hoodoos: yep)
[16:40] ceej: tjholowaychuk: k, I'll play around with it later when I get more time.  Not that big of an issue right now
[16:40] daniellindsley has joined the channel
[16:40] hoodoos: mscdex, well everything I needed work, but that damn core https thing won't :)
[16:41] mscdex: groom: any timeouts or intervals set or servers still listening for connections or have existing connections?
[16:41] ceej: at least it serves static files... I remember when it didn't serve images properly at all :)
[16:43] throughnothing has joined the channel
[16:43] hoodoos: mscdex, can you please suggest where can I look status of bug?
[16:43] NuckingFuts: how long to an email from no.de?
[16:43] mscdex: geoffeg: are all the constructors for the modules you're loading pretty much doing the same thing?
[16:44] groom: mscdex no it's a very simple script, no timeouts, no connection. it creates a chart svg, spawns a process to convert it to png and that's it. every callback has a console.log at the end and each of them is executed.
[16:44] NuckingFuts: I want to try their tech lol
[16:44] mscdex: hoodoos: http://groups.google.com/group/nodejs-dev/browse_thread/thread/1af489b213bb50b4
[16:44] NuckingFuts: Even tech support tells me where I am in the queue
[16:45] mscdex: groom: mind gisting the code you're using?
[16:45] geoffeg: mscdex: some of them are doing some simple network checks and file loading before others, which i'm sure is what's causing the issue
[16:45] mscdex: geoffeg: yeah, anything async in the constructors will cause issues :)
[16:46] ryah: ACTION is ready for the onslaught of 0.4.0 bugs
[16:46] ryah: :~
[16:46] mscdex: ryah: it has begun!
[16:46] mscdex: :)
[16:46] tjholowaychuk: ryah: https://gist.github.com/821692
[16:47] tjholowaychuk: wouldnt be a big deal, but currently you have to choose either the new progressive api OR the old one
[16:47] tjholowaychuk: instead of mixing
[16:48] Evet: have you tested o4o on openbsd?
[16:50] ryah: tjholowaychuk: ok
[16:50] pt_tr has left the channel
[16:50] hoodoos: mscdex, thanks a lot
[16:50] hoodoos: ryah, fix https bug first please! ^_^
[16:51] hoodoos: ACTION taps a barrel of beer to fixer of https "end" event bug :)
[16:51] tjholowaychuk: :D
[16:51] root__ has joined the channel
[16:52] geoffeg: mscdex: so is there anyway to ensure that the constructor that the code that the serviceloader calls (the constructor) will block until it's completed? 
[16:53] mscdex: geoffeg: not really, you could pass in a callback i suppose and then not continue loading the other modules until the callback has fired
[16:53] pauls has joined the channel
[16:53] ske_ has joined the channel
[16:53] tanepiper: progressive api ++
[16:54] chapel: hoodoos: you sure its not something else?
[16:54] paulrobinson has joined the channel
[16:54] hoodoos: chapel, i'm not alone it seems
[16:54] geoffeg: mscdex: what about using something like this? https://github.com/caolan/async/tree/d0be8cdbdd3ad38e90ac6d82d19f957f7d528f2e#series
[16:54] paulrobinson has left the channel
[16:55] daveyjoe has joined the channel
[16:55] raidfive has joined the channel
[16:55] hoodoos: chapel, and it used to work on 0.2.5.. I can try to test it against http.. let me do it
[16:55] daveyjoe: Is there anyway to reference a github repo using npm/package.json?
[16:56] mscdex: geoffeg: you might use something like that to handle your async constructors, but that won't make async things blocking
[16:57] tanepiper: daveyjoe: you can install a package like this   npm install https://github.com/mikeal/request/tarball/master
[16:57] tanepiper: as long as the package itself has a package.json in it
[16:57] geoffeg: mscdex: thanks, i'll try some things, probably going with having the constructor for each take a callback that gets called when they're done
[16:57] daveyjoe: tanepiper: gotcha, thanks!
[16:58] groom: mscdex: https://gist.github.com/826156
[17:00] fairwinds: tjholowaychuck: I would like to add a route dynamically in express. How can I do that after the app has started? 
[17:00] tjholowaychuk: fairwinds: same way you normally do, app.get(myPath, fn)
[17:00] technoweenie has joined the channel
[17:01] JojoBoss has joined the channel
[17:01] robotarmy has joined the channel
[17:01] mscdex: groom: i don't see anything obvious, maybe jsdom has something internally that is on the event loop?
[17:03] tanepiper: ugh http://www.reddit.com/r/javascript/comments/fl6tk/i_hate_javascipt_1_very_good_reason_why/
[17:03] groom: mscdex: when i remove lines 22 and 24 from test.js it returns
[17:04] tjholowaychuk: tanepiper: haha, fail
[17:04] groom: mscdex could it be the on-exit part?
[17:04] saikat has joined the channel
[17:04] chapel: anyone interested in a command line gist tool written in node?
[17:04] elblobbo has joined the channel
[17:04] mscdex: groom: if the 'exit' event is being emitted, that shouldn't be the problem
[17:04] spaceinvader: chapel: my friend was writing something similar
[17:04] tc77 has left the channel
[17:04] spaceinvader: chapel: do you do language detection?
[17:04] chapel: spaceinvader: https://github.com/chapel/ngist
[17:05] chapel: just base it off of ext
[17:05] carcat has joined the channel
[17:05] chapel: since thats what the gist form takes
[17:05] spaceinvader: chapel: his was for random clipboard stuff
[17:05] tanepiper: tjholowaychuk: i suspect he reads w3c school
[17:05] spaceinvader: chapel: so he's using a bayesian network to work out the language
[17:05] chapel: ah, well its easy enough to supply a name
[17:05] chapel: seems like a lot of complexity for something like that
[17:05] tjholowaychuk: tanepiper: yeah no doubt. I dont even look at reddit, such a shitty site
[17:05] chapel: although to each their own
[17:06] sriley: surely if he learnt js then he wouldnt need to keep looking for examples :)
[17:06] tanepiper: sriley++
[17:06] v8bot:  tanepiper has given a beer to sriley. sriley now has 1 beers.
[17:06] mscdex: tanepiper: haha "If C# were more popular, you'd have the same problem."
[17:07] Imperion: where do I put static files in my NPM packages?
[17:07] sriley: i love these programmers who find an example of something similar to what they want to do on the net then try and adapt it to their needs
[17:07] saikat has joined the channel
[17:07] Imperion: HULK WANT PUBLISH NOW
[17:07] carcat has left the channel
[17:08] daveyjoe: tanepiper: How do I add github repos as dependancies in my package.json file?
[17:08] mike5w3c has joined the channel
[17:08] bingomanatee has joined the channel
[17:09] tanepiper: daveyjoe: dunno, never done it myself
[17:09] visnup has joined the channel
[17:09] tjholowaychuk: daveyjoe: i dont think you can
[17:09] tjholowaychuk: not sure
[17:09] mscdex: i don't think you can use github repos as dependencies can you?
[17:09] steffkes has joined the channel
[17:10] tjholowaychuk: would be nice if you could give a tarball url or something
[17:10] daveyjoe: tanepiper: Hmmm...
[17:10] tjholowaychuk: so you could use the github shas
[17:10] tjholowaychuk: i dunno
[17:11] sveimac has joined the channel
[17:11] tanepiper: isn't that what ndistro is for?
[17:11] tjholowaychuk: more or less yeah
[17:11] daveyjoe: tjholowaychuk: How would I add 2.0 branch of express.js as a dependency for example?
[17:11] scoates has joined the channel
[17:11] tjholowaychuk: daveyjoe: ah, yeah you cant. I talked to isaacs about that a little, we were going to add some kind of --pre support
[17:12] caz has joined the channel
[17:12] tjholowaychuk: not sure what the semver would look like
[17:12] tjholowaychuk: but allowing me to push 2.0.0-pre once and a while
[17:12] tjholowaychuk: but $ npm install express woudl still grab 1.x
[17:12] tjholowaychuk: since that is stable
[17:12] daveyjoe: tjholowaychuk: Is 1.x compatible with node 0.4?
[17:13] tjholowaychuk: daveyjoe: nope. 1.x will be 0.2.x
[17:13] tjholowaychuk: and 2.x will be 0.4.x
[17:13] daveyjoe: tjholowaychuk: Hmmm, suppose I'll just copy the lib directory for the time being, until there's a nicer solution.
[17:14] tjholowaychuk: yeah hopefully we will have something soon
[17:15] fairwinds: tjholowaychuk: here is a paste of something simple I tried. /two should only be accessible after sending request to /one. /one should be available immediately when app is started.
[17:15] fairwinds: http://pastebin.com/8rfAhA1u
[17:15] ajnasz has joined the channel
[17:16] tjholowaychuk: fairwinds: hm, well that would only work for one visitor
[17:16] sram_yh has joined the channel
[17:16] tjholowaychuk: since they do not each get their own process
[17:16] d0k has joined the channel
[17:16] tjholowaychuk: not sure why you would want that :p
[17:16] tjholowaychuk: if anything do req.session.visitedFirstPage = true;
[17:16] tjholowaychuk: and check in the other
[17:16] tjholowaychuk: or something
[17:17] testuale has left the channel
[17:18] amerine has joined the channel
[17:18] fairwinds: tjholowaychuk: heh, this was just some playing. what I want to do is make route pluggable to create modules that can be plugged into an app and get routing information from the plugin or db
[17:19] zylo has joined the channel
[17:19] tjholowaychuk: ah :)
[17:19] fairwinds: but I want this to be dynamic since I want a user to be able to create a route
[17:19] fairwinds: in a running app
[17:19] tjholowaychuk: yeah totally
[17:20] fairwinds: do you have advice
[17:20] nefD has joined the channel
[17:20] Max-Might has joined the channel
[17:20] overthemike has joined the channel
[17:21] overthemike has left the channel
[17:21] fairwinds: tjholowaychuk: was just going to do a lookup and add the app.get or what ever based on request url and method from lookup
[17:21] xla has joined the channel
[17:23] [[zzz]] has joined the channel
[17:25] mattly has joined the channel
[17:26] mjr_ has joined the channel
[17:26] fairwinds: tjholowaychuk: want these urls to be accessible without a restart
[17:26] Imperion: does anyone have an idea when isaacs should be in?
[17:27] piscisaureus: ryah: ping
[17:28] srid has joined the channel
[17:28] srid has joined the channel
[17:29] admc has joined the channel
[17:30] ryah: piscisaureus: hi
[17:30] piscisaureus: ryah: hi
[17:31] piscisaureus: ryah: add a newline to deps/v8/src/platform_cygwin.cc
[17:31] piscisaureus: (the end of it)
[17:31] piscisaureus: a simple patch to start the day
[17:31] piscisaureus: cygwin people are complaining that that is needed to make it work
[17:32] broofa has joined the channel
[17:32] noahcampbell has joined the channel
[17:33] jano has joined the channel
[17:33] marcab: n/win 10
[17:33] marcab: fail
[17:33] broofa has joined the channel
[17:34] perezd has joined the channel
[17:34] sprout has joined the channel
[17:36] saikat has joined the channel
[17:37] CIA-39: node: 03Ryan Dahl 07master * r485ce13 10/ src/node_version.h : Now working on v0.4.1 - http://bit.ly/hnSDev
[17:37] CIA-39: node: 03Ryan Dahl 07master * r5ceefec 10/ doc/v0.4_announcement.html : Add http client to v0.4 announcement - http://bit.ly/hane5e
[17:37] CIA-39: node: 03Ryan Dahl 07master * rc6712ce 10/ deps/v8/src/platform-cygwin.cc : Add newline to platform-cygwin.cc - http://bit.ly/fyTYtq
[17:39] huned has joined the channel
[17:39] huned: anyone know what the Russians are searching for w/ node?!! (this is kinda interesting.) http://www.google.com/trends?q=node.js&ctab=0&geo=all&date=all&sort=1
[17:40] pquerna: they are completing ryan's plan
[17:40] pquerna: for node.js to be the prefered language to write botnets in.
[17:40] halfhalo: DUNDUNDUN
[17:40] huned: also interesting: http://www.google.com/trends?q=node.js,+%22ruby+on+rails%22,+%22objective+c%22&ctab=0&geo=all&date=all&sort=0
[17:40] pauls: hey, some of smartest programmers have been russian 
[17:41] pquerna: +1
[17:41] piscisaureus: pquerna: ... ?
[17:41] visnup: not doubting that they're smart, just wondering what they're using node.js for..
[17:41] huned: not denying that. just didn't know the node.js community was so large there!
[17:41] huned: where search volume is a reasonable proxy for community/interest
[17:43] visnup: http://nodejs.ru/
[17:43] pquerna: I've not seen anyone specifically jump up and down saying they are russian and using node.js for X
[17:43] Ezku\: russia is a big country, and compared to norway/sweden/finland their search volume per capita must be quite a bit smaller
[17:43] samsonjs has joined the channel
[17:44] pauls: that's a good point
[17:44] hish has joined the channel
[17:45] visnup: according to google, just moscow node.js search volume is higher than seattle
[17:46] khaije|minder has left the channel
[17:46] hish: hello guys I need a good tutorial cover installatins the nodejs and npm in ubuntu , can I use the pre build package from apt ?
[17:47] AAA_awright: "While it seemed like a good idea at the time, and enabled a lot of useful experimentation, in practice a mutable require.paths list is often a troublesome source of confusion and headaches." <-- What is this about?
[17:49] huned: honestly it pleases me to imagine this little (big) pocket of node subculture in Moscow. it's pretty great.
[17:49] spaceinvader: AAA_awright: you can modify the search path for libraries within node.js
[17:49] AAA_awright: I know that much, but "often a troublesome source of confusion and headaches"?
[17:49] sriley: hish: you can but its probably hugely out of date, the guide on the node site covers it pretty well
[17:49] nejucomo has joined the channel
[17:50] spaceinvader: AAA_awright: maybe people accidently nuking the paths npm uses, etc
[17:50] AAA_awright: npm shouldn't be modifying the paths
[17:50] nilcolor has joined the channel
[17:51] AAA_awright: npm *SHOULDN'T* be modifying the paths
[17:51] brianc: Nexxy: node-postgres
[17:52] hish: sriley: I install the nodejs from the apt but when I try to install npm using curl http://npmjs.org/install.sh | sh it give me axconfig: port 2 not active
[17:52] hish: Please upgrade node before continuing.
[17:52] jdalton has joined the channel
[17:52] jdalton has left the channel
[17:52] aho has joined the channel
[17:52] sriley: yea use the instructions on the node site to install node, remove the one from apt
[17:53] b5avage has joined the channel
[17:53] spaceinvader: AAA_awright: http://pastie.org/1563398
[17:53] hish: I will do thanks sriley:
[17:53] aconran has joined the channel
[17:53] AAA_awright: spaceinvader: ...which npm does
[17:54] AAA_awright: NODE_PATH is great but really, we don't find normal package managers modifying it just to run their programs
[17:55] hish: npm is the  package manger
[17:55] AAA_awright: If I had more time I would be writing my universal semantic package manager
[17:55] AAA_awright: aakour: It's _a_ package manager
[17:55] AAA_awright: bah
[17:55] AAA_awright: hish: It's _a_ package manager
[17:55] hish: AAA_awright: yes 
[17:56] squeeks: npm isn't the only one, but in my opinion it sucks the least
[17:56] tmzt: thinking about ngm, using git submodules
[17:56] tmzt: but using the npm db
[17:56] hish: squeeks: is there another one 
[17:56] jetienne_ has joined the channel
[17:57] squeeks: tmzt: uhhh, what
[17:57] AAA_awright: It has the fewest bugs. It has the fewest unintentional bugs, at least, I can't even begin to wrap my head around the design choices that went behind it
[17:57] tmzt: squeeks: something I thinking about after talking with substack last night
[17:57] squeeks: the whole point of package management is to be version control independant to some extent. Gems, pypy, cpan, cran, none of those demand any given version control.
[17:58] hish: at cpan you can update but you can't commit as i guess 
[17:58] [[zz]] has joined the channel
[17:59] tmzt: sure, but I'm mostly looking for something to maintain the packages installed in a git repo alongside a sites code
[17:59] squeeks: hish: what do you mean?
[17:59] piscisaureus: ryah: you like the libev api?
[17:59] piscisaureus: (as in: should the iocp-based event loop export ev_async, ev_timer etc?)
[17:59] tmzt: since node won't have global search path anymore
[17:59] ryah: piscisaureus: yes
[18:00] hish: you can update the old package in your system but you can't modify and commit it 
[18:00] ryah: piscisaureus: it doesn't even matter if i like it so much - we're heavily tied to that
[18:00] ryah: but, yes, i like it
[18:00] squeeks: hish: err, no, you need auth privs assigned by the namespace owner, because it stops namespace clobbering
[18:01] squeeks: hish: if you do have auth privs, you can just make changes and release a new version.
[18:01] squeeks: (ps I'm a CPAN author)
[18:01] piscisaureus: ryah: ok, hopefully it will not require crazy tricks that hurts performance.
[18:01] piscisaureus: btw eio_custom should be macro_wrapped RUNINTHREADPOOL(threadproc, after), because windows won't use libeio
[18:02] squeeks: on the flipside, there's nothing stopping you running a darkpan and using CPAN::Mini::Inject and host your own version of any given dist.
[18:02] piscisaureus: ^- I mean, when used outside of node_file
[18:02] hish: squeeks: sorry maybe i was understand the idea in the wrong way
[18:03] dgathright has joined the channel
[18:03] hish: squeeks: what the other package manger for nodejs ?
[18:04] squeeks: seed.js can do node stuff too iirc
[18:04] squeeks: I wonder if anyone has adopted JSAN for node stuff.
[18:05] batok has joined the channel
[18:06] hish: what is the official website for seed.js ?
[18:06] AAA_awright: Looks like http://seedjs.org/
[18:06] AAA_awright: What is it?
[18:07] TomsB has joined the channel
[18:07] hish: it is another package manger for nodejs
[18:07] spaceinvader: also seems to be a way of writing gtk+ apps in JS
[18:07] hish: but the site Temporarily Unavailable
[18:07] trotter has joined the channel
[18:07] benburkert has joined the channel
[18:08] AAA_awright: Hmm I might need to fork that
[18:08] ximo has left the channel
[18:08] hish: AAA_awright: you write c ?
[18:09] AAA_awright: hish: I have, not C++ for V8 though
[18:09] AAA_awright: Some POSIX networking, file, daemons, etc
[18:09] bmavity has joined the channel
[18:10] clarkfischer has joined the channel
[18:10] hish: awesome :)
[18:10] AAA_awright: hish: Why do you ask?
[18:10] hish: Is there a real application using nodejs ?
[18:11] mjr_: real?
[18:11] sooli has joined the channel
[18:11] hish: I mean publish application 
[18:12] AAA_awright: A significant project for people to download and use?
[18:12] AAA_awright: End-user project?
[18:12] AAA_awright: As opposed to developer like Connect, etc
[18:13] softdrink1 has joined the channel
[18:13] dgathright has joined the channel
[18:14] technoweenie: hummingbird
[18:14] hish: AAA_awright: I ask you if you programing using C because I respect the C programmer and like to know them 
[18:14] technoweenie: http://projects.nuttnet.net/hummingbird/
[18:16] vipaca has joined the channel
[18:16] vipaca has joined the channel
[18:16] hish:  technoweenie: it use websocket ?
[18:17] jacobolus has joined the channel
[18:18] wdperson has joined the channel
[18:19] dguttman has joined the channel
[18:19] dguttman has joined the channel
[18:20] ziro` has joined the channel
[18:21] dtrasbo has joined the channel
[18:21] mjijackson has joined the channel
[18:22] hish has left the channel
[18:23] Country has joined the channel
[18:25] b5avage has joined the channel
[18:26] svenlito_ has joined the channel
[18:27] svenlito_ has joined the channel
[18:27] springmeyer has joined the channel
[18:28] w0rse_ has joined the channel
[18:29] isaacs has joined the channel
[18:30] marcosvm has joined the channel
[18:31] bentruyman has joined the channel
[18:32] srid has joined the channel
[18:32] srid has joined the channel
[18:33] perlmonkey2 has joined the channel
[18:33] stephank has joined the channel
[18:34] bentruyman has joined the channel
[18:34] liar has joined the channel
[18:36] mike5w3c has joined the channel
[18:39] Poetro1 has joined the channel
[18:39] q_no has joined the channel
[18:40] hosh_work has joined the channel
[18:41] TereskaPL has joined the channel
[18:42] pedrobelo has joined the channel
[18:43] TereskaPL: hi! I try to build nodejs v.0.4.0 on windows(cywgin) and i've got error: Build failed:  -> task failed (err #2): {task: libv8.a SConstruct -> libv8.a} (I've set SHELL env). Any ideas?
[18:43] TereskaPL: on Wiki i found: "Since v0.4.0 node builds again on Cygwin"
[18:43] qFox has joined the channel
[18:45] prinzdezibel has joined the channel
[18:45] brapse has joined the channel
[18:45] prinzdezibel: Does node.js have something like gettext for i18n ?
[18:45] hoodoos: hey, guys, npm won't install in wants some constants
[18:45] isaacs: hoodoos: huh?
[18:45] killfill: hey guys.. anyonw was install npm on win32?..
[18:45] prinzdezibel: Or how do you handle i18n in your app?
[18:45] isaacs: npm does not work on win32
[18:45] isaacs: use Cygwin for now
[18:46] killfill: i get this, when inside the mingw bash: http://pastebin.com/eXMN7iWn
[18:46] isaacs: or just install things manually
[18:46] hoodoos: ehh.. I'm on ubuntu :)
[18:46] isaacs: drop the package into ./node_modules
[18:46] isaacs: killfill: yeah
[18:46] isaacs: killfill: doesn't work
[18:46] killfill: hm..
[18:46] killfill: isaacs: node_modules?
[18:46] hoodoos: isaacs, https://gist.github.com/826332
[18:47] prinzdezibel: I'm actually looking for a client side javascript i18n solution. any tipps?
[18:47] hoodoos: i guess I have a wrong version..
[18:47] zemanel: prinzdezibel: i think Dojo has something
[18:48] killfill: isaacs: you mean inside my node proyect tree, right? 
[18:48] perlmonkey2: why do some Express examples have explicit calls to 'app.use(app.router)'? The app.HTTP_METHODS all work without that call.
[18:48] TereskaPL: anyone using nodejs v0.4.0 on Cygwin?
[18:48] killfill: and require it with ./
[18:48] isaacs: killfill: sure
[18:48] killfill: ah :)
[18:48] isaacs: killfill: in node 0.4.0, ./node_modules will be part of the require() path
[18:48] killfill: aah, its a special dir name.
[18:49] isaacs: killfill: see the "Modules" api doc.  http://nodejs.org/docs/v0.4.0/api/modules.html
[18:49] isaacs: killfill: yeah
[18:49] perlmonkey2: isaacs: on thanks, I was just unshifting that to make node_modules work like the docs said it should work :P
[18:49] rikarends has joined the channel
[18:49] isaacs: perlmonkey2: requires node 0.4
[18:49] killfill: greate. thans.
[18:49] perlmonkey2: isaacs: I'm on .4 so I guess I can remove that line :)
[18:49] isaacs: perlmonkey2: yep :)
[18:49] isaacs: '
[18:50] hoodoos: isaacs, what version of npm should I use to build it with 0.2.5 I wonder, will 0.2.5 version do? :)
[18:50] isaacs: hoodoos: i don't know what you're talking about.
[18:51] isaacs: hoodoos: version of npm or version of node?
[18:51] mraleph has joined the channel
[18:51] hoodoos: isaacs, 0.2.5 is version of node i'm currently on
[18:51] pedrobelo has joined the channel
[18:51] isaacs: hoodoos: ok
[18:51] isaacs: hoodoos: what operating system?  ubuntu you said?
[18:51] hoodoos: isaacs, yep
[18:52] isaacs: hoodoos: ok, that's fine.  i recommend using node 0.4, but it's a major change.
[18:52] isaacs: hoodoos: if you wanna stay on 0.2, that's okd
[18:52] kristsk: npm works jutst fine on 0.2.5 for me
[18:52] skm has joined the channel
[18:52] brapse has joined the channel
[18:52] isaacs: hoodoos: but npm 0.3 will require node 0.4
[18:52] hoodoos: i see this one https://gist.github.com/826332 on build
[18:52] hoodoos: errr on make install
[18:52] isaacs: hoodoos: oh, yeah.
[18:53] isaacs: what version of npm?
[18:53] jpstrikesback has joined the channel
[18:53] hoodoos: latest i belive, just cloned
[18:53] aklt has joined the channel
[18:53] hoodoos: yeah, it's beta
[18:53] hoodoos: 0.3.0
[18:53] isaacs: hoodoos: there ya go :)
[18:53] kristsk: git checkout v0.2.18
[18:53] hoodoos: yep, thanks guys
[18:53] TomY has joined the channel
[18:53] isaacs: hoodoos: yeah, what kristsk said 
[18:54] isaacs: ACTION should add that to the readme...
[18:55] NickP: Does anyone know of a module I can use to clean up the tags of a truncated html string? So if closes any unclosed tags?
[18:55] hoodoos: daaamn.. profiler won't work with 0.2.5, any idea from what version I can begin to use profiler?
[18:55] isaacs: hoodoos: you should just get node 0.4
[18:56] hoodoos: isaacs, would be just great, but my https client is somewhat buggy there.. won't call end
[18:56] hoodoos: not my actually, node's :)
[18:56] isaacs: hoodoos: upgrade your programs.  See https://github.com/ry/node/wiki/Migrating-from-v0.2-to-v0.3
[18:56] stride: NickP: htmlparser in the forgiving mode maybe, not sure though
[18:56] isaacs: hoodoos: https changed drastically in 0.4
[18:57] confoocious has joined the channel
[18:57] confoocious has joined the channel
[18:57] isaacs: hoodoos: in that, it works now.
[18:57] isaacs: and didn't before.
[18:57] isaacs: and the api changed
[18:57] ajcates has joined the channel
[18:57] NickP: stride: I'll take a look, thanks
[18:57] hoodoos: isaacs, well, it almost works for me, just end event won't get called on http.ClientResponse
[18:57] NickP: node.js htmlparser
[18:58] saschagehlich has left the channel
[18:58] hoodoos: isaacs, here's report http://groups.google.com/group/nodejs-dev/browse_thread/thread/1af489b213bb50b4
[18:59] isaacs: interesting
[18:59] isaacs: that does seem like a bug
[18:59] hoodoos: some server's ssl implementation issue?
[19:00] hoodoos: it was working well on 0.2.5.. i changed to 0.4.0, changed code to fit new API and now it's working from time to time
[19:00] paul_uk has joined the channel
[19:01] Coal has joined the channel
[19:01] hoodoos: oh, read doesn't instead of does sorry :)
[19:02] admc has joined the channel
[19:02] rburhum has joined the channel
[19:02] paul_uk: hey all, i understand to run node on port 80 you need to do it under sudo.  and i've read that spark can change the user of the account running node.  but are there other ways of doing this?
[19:03] bartt has joined the channel
[19:03] hoodoos: run on 80 port?
[19:03] rburhum has left the channel
[19:03] paul_uk: hoodoos: run on port 80 and not under a root account.
[19:03] tilgovi has joined the channel
[19:04] hoodoos: paul_uk, well, I guess it's not possible. everything that runs on 80, runs as sudo as far as I remember.. nginx atleast :)
[19:04] stride: paul_uk: you can forward stuff from a higher port to 80 via iptables as well
[19:04] pydroid has joined the channel
[19:04] spaceinvader: hoodoos: open the connection and then process.setuid('nobody')
[19:04] spaceinvader: ?
[19:05] brian_irish has joined the channel
[19:05] hoodoos: spaceinvader, oh, it works?
[19:05] paul_uk: spaceinvader, is that how to do it?
[19:05] spaceinvader: i am making a guess
[19:05] dgathright has joined the channel
[19:05] stride: process.setuid? meh, since when is that in there? :)
[19:06] hoodoos: my admin says it's not possible :)
[19:06] paul_uk: hoodoos: what i got from googling --  I'm not sure but I think spark can start your express app with a sudo and change the user to a unpriviledged one as soon as the server is listening.
[19:06] bingomanatee:  What has been the general experience with Mongoose 1.0?
[19:06] paul_uk: hoodoos: which apparently it can do
[19:06] jetienne_: hoodoos: this is usual to do that for get more security when binding port <1024
[19:06] bingomanatee: (or specific)
[19:07] devinus: who the hell invented SOAP
[19:07] jakehow has joined the channel
[19:07] bingomanatee: Mr. Clean!
[19:07] devinus: i need to have a word
[19:07] hoodoos: you mean who the hell invented XML? )
[19:07] bingomanatee: Mr. X!
[19:07] sh1mmer has joined the channel
[19:07] konobi: Tim Bray
[19:07] ph^ has joined the channel
[19:07] stride: Carmen Sandiego
[19:08] bingomanatee: XML is not inherently worse than JSON - other than the fact that the markup is twice as big (or bigger) than the data you are transmitting. 
[19:08] Sebmaster has joined the channel
[19:08] bingomanatee: Its how you use it. 
[19:09] batok has joined the channel
[19:09] spaceinvader: seems to work
[19:09] spaceinvader: process.getuid returns -2 on my mac though
[19:09] spaceinvader: but ps shows it running as nobody
[19:10] killfill: hm. socket.io is not working on win32.. :S
[19:10] killfill: suspiciusly, it throws an error on the file crypto.js.. :
[19:10] killfill: P
[19:10] swistak has joined the channel
[19:11] paul_uk: thanks spaceinvader !
[19:11] raidfive has joined the channel
[19:11] k04n has joined the channel
[19:11] ryah: SubStack: note that node already links to openssl which has a bignum library
[19:11] ryah: SubStack: so you should be able to do node-bitint without linking to anything else
[19:12] hoodoos: i just thought that i would be great to have people fixing bugs on node do a screen casts for that or just do a live broadcast and take 5$ for joining, I guess it would be popular.. 
[19:13] saikat has joined the channel
[19:13] bingomanatee: You want to make a pay for view show of devs debugging code?
[19:14] devdazed: hi all in version 0.4.0 querystring doesnt seem to return proper results
[19:14] SubStack: ryah: oh awesome!
[19:14] devdazed: querystring.stringify({ body: { email: '1dcd387da74abc4897529750ffb9071d', notification: { message: 'foobarbaz' } } })
[19:14] AAA_awright: bingomanatee: I didn't get to ask yesterday, are you usually around to ping?
[19:14] devdazed: return 'body='
[19:15] hoodoos: bingomanatee, well, for example there's a bug #XXXXX in node, and a live fixing will be performed on 20.03.2011 00:00 UTC, very good for education. I'd pay for that :)
[19:15] SubStack: ryah: except when I remove the `conf.env.append_value('LINKFLAGS', ['-lgmp'])` from the wscript it tells me: Dynamic Linking Error: /home/substack/projects/node-bigint/build/default/libbigint.so: undefined symbol: __gmpz_mul
[19:16] ryah: SubStack: it uses a different library
[19:16] dgathright has joined the channel
[19:16] ryah: SubStack: man bn
[19:17] ryah: ^-- these symbols are already linked into node
[19:17] devdazed: is there somehting i may be doing wrong?
[19:17] SubStack: reading
[19:17] k04n has joined the channel
[19:17] bx2 has joined the channel
[19:18] ryah: tjholowaychuk: where's that patch again?
[19:18] tjholowaychuk: ryah: https://gist.github.com/821692
[19:18] SubStack: awesome looks like everything is there
[19:18] SubStack: ryah++
[19:18] v8bot:  SubStack has given a beer to ryah. ryah now has 2 beers.
[19:18] bingomanatee: possibly  - I'm happy to wait for the patch in git
[19:18] bingomanatee: If there's one thing programmers LOVE its an audience. 
[19:18] bradleymeck: devdazed that looks right to me, i never have seen nested objects in querystring for node core
[19:18] SubStack: although I want to finish node-ssh-server before I swap out the bigint backend
[19:19] bingomanatee: ACTION types for s**t when people are watching
[19:19] squeeks: bingomanatee: Hi, welcome to IRC. You can swear.
[19:19] hoodoos: bingomanatee, okay, so it's a startup idea :)
[19:19] ishi_ has joined the channel
[19:19] bingomanatee: I might pay if they had silly costumes. Nametags or something. Not sure that watching people type as such makes for good TV. 
[19:19] ryah: tjholowaychuk: is that on your github? there's some formatting problem with it...
[19:20] bradleymeck: ACTION is frustrated w/ documentation of v8 snapshots
[19:20] ryah: tjholowaychuk: can you send me a pull-req?
[19:20] devdazed: bradleymeck: so i have to write out the bracket by hand? for each subobject?
[19:20] bingomanatee: There's a reason that "Real Coders of Silicon Valley" hasn't much of a market presence.
[19:20] tjholowaychuk: ryah: yeah sure one sec
[19:20] hoodoos: bradleymeck, oh, you're looking into snapshots too?
[19:20] bradleymeck: devdazed or you could use a diff querystring / roll your own wrapper
[19:20] bradleymeck: hoodoos yes, but its more spray and pray segfaults
[19:21] devdazed: bradleymeck: this is to communicate with an external service, i cant use a diff querysting
[19:21] tjholowaychuk: ryah: https://github.com/visionmedia/node/commit/91a46a2a953bd28d534a768968e82355e42b9714
[19:21] hoodoos: bradleymeck, i'm just trying to find a leak in my code, thought it would help. but i'm on 0.2.5 node currently
[19:23] torvalamo has joined the channel
[19:25] ajcates_ has joined the channel
[19:26] Imperion: isaacs: ping
[19:26] isaacs: Imperion: yo
[19:26] Imperion: isaacs: finally
[19:26] Imperion: isaacs: question
[19:26] Imperion: isaacs: where should I put a static JSON file in my package?
[19:26] isaacs: Imperion: anywhere you like :)
[19:26] isaacs: Imperion: what's the static file?
[19:27] Imperion: isaacs: it's just a hunk of JSON describing the methods of a REST API
[19:27] isaacs: Imperion: ok.  are your users intended to touch it, or is it just internal gunk?
[19:27] Imperion: isaacs: also, your current package.json for npm has a non-semver-compliant version string
[19:28] Imperion: internal gunk
[19:28] isaacs: re: semver, I'm not strictly following semver.org.  I'm following node-semver.
[19:28] isaacs: which is like semver.org + reality
[19:28] Imperion: ah, k
[19:28] Imperion: <Imperion> internal gunk
[19:28] isaacs: so, if the file is internal, then yeah, put it literally anywhere.
[19:28] devdazed: bradleymeck: when i try to put in my own beackets, querystring escapes them.
[19:28] devdazed: is there a way to stop the behavior?
[19:28] isaacs: get the contents iwth fs.readFile("./my-json-stuff.json")
[19:29] isaacs: (relative path)
[19:29] Imperion: in the lib dir?
[19:29] isaacs: Imperion: or anywhere.
[19:29] Imperion: cool
[19:29] aheckmann has joined the channel
[19:29] Imperion: thanks
[19:29] isaacs: Imperion: you can read ../my-json.json too
[19:29] bradleymeck: devdazed no, you will need a diff querystring (built by you or something on npm im sure)
[19:29] isaacs: Imperion: the important thing is that you access it with a relative path
[19:29] Imperion: now I need to get back the past day of development
[19:29] Imperion: of course
[19:29] Imperion: wasn't sure about that
[19:29] Imperion: mention it in the docs, please
[19:29] isaacs: Imperion: adding a faq now.
[19:29] Imperion: thanks
[19:30] AAA_awright: "semver.org + reality"?
[19:31] jpick has joined the channel
[19:31] bmizerany has joined the channel
[19:32] mraleph: SubStack: sorry. I am being too evil today. I've purified my twit with fire. :-)
[19:33] benburkert has joined the channel
[19:33] kkaefer: so... when I pass a Buffer object to a callback function, do I have to call scope.Close() on that handle?
[19:33] SubStack: hah it's cool
[19:33] SubStack: incidentally node-ffi is great for whipping shit up fast
[19:34] SubStack: mraleph: look at how pretty this is compared to what it would look like in v8 c++ https://github.com/substack/node-bigint/blob/master/bigint.cc 
[19:34] mraleph: kkaefer: the rule is simple. do scope.Close(handle) if and only if handle was created inside the scope.
[19:34] ziro`: i'm havign problems with kiwi - it doesnt seem to download the seed
[19:34] kkaefer: even if I pass the handle to a function that I call with ->Call() directly inside the function?
[19:35] mraleph: SubStack: yeah. I know :-( I have a fast ffi library in my todo list but no time unfortunately to implement it.
[19:35] charlenopires has joined the channel
[19:35] mraleph: kkaefer: can you show some code?
[19:35] kkaefer: sure, sec
[19:36] bradleymeck: substack beware of the abort()s done by gmp :(
[19:36] kkaefer: mraleph: https://gist.github.com/0aed1c9576103cea7e3e 
[19:36] kkaefer: mraleph: on line 24, I call the callback with the handle I just created
[19:36] kkaefer: however, I get a segfault on gc
[19:36] bradleymeck: ziro` kiwi is pretty dead, npm won that battle
[19:36] ziro`: noted 
[19:36] ziro`: ta
[19:37] kkaefer: doing a scope.Close(retbuf->handle_) resolves that, but is that the right thing to do?
[19:37] bartt has joined the channel
[19:37] kkaefer: all instance of scope.Close I've seen so far have a return before them
[19:38] piscisaureus has joined the channel
[19:39] mraleph: is not retbuf->handle_ persistent?
[19:40] maushu has joined the channel
[19:40] jetienne has joined the channel
[19:40] SubStack: it would be super great if there was a magic hack to hook onto the GC from the javascript side
[19:40] killfill: hm.. how do i disable a protocol for socket.io, so it doesnt try to use it?
[19:40] bingomanatee has joined the channel
[19:40] kkaefer: mraleph: I don't think it's declared as persistent
[19:40] erichynds has joined the channel
[19:40] ziro`: i'm trying to check out the growl lib
[19:40] kkaefer: but I'm not sure
[19:40] ziro`: package
[19:41] ziro`: but when i'm requiring it, it's not finding it
[19:41] bradleymeck: substack there is
[19:41] erichynds: what's the simplist way to move a file?
[19:41] kkaefer: actually, it is persistent
[19:41] mraleph: kkaefer: I just checked sources. it is persistent. you should not do close on retbuf->handle_
[19:41] kkaefer: yeah, that's what I thought too
[19:41] mraleph: kkaefer: also you should do close only when leaving scope.
[19:41] mraleph: not when you invoke something
[19:42] skm has joined the channel
[19:42] SubStack: bradleymeck: any docs / example code I can read?
[19:42] kkaefer: without the scope.Close(), I'm getting:
[19:42] kkaefer: node(54408,0x7fff70a8bca0) malloc: *** error for object 0x1280d8400: pointer being freed was not allocated
[19:42] kkaefer: *** set a breakpoint in malloc_error_break to debug
[19:42] kkaefer: and when I do that, I get:
[19:42] bingomanatee has joined the channel
[19:42] kkaefer: https://gist.github.com/43ff11696141d347658a 
[19:43] kkaefer: what's weird though is that it can get past the assert guard in unref
[19:43] kkaefer: blob_unref
[19:43] bingomanatee has joined the channel
[19:44] jetienne_ has joined the channel
[19:44] colinclark has joined the channel
[19:44] mraleph: kkaefer:  can it be that node is trying to free closure->im_string.data()?
[19:44] kkaefer: yeah probably, but I'm doing a memcpy of that, I believe
[19:44] kristsk: nity.
[19:44] kkaefer: https://gist.github.com/0aed1c9576103cea7e3e
[19:45] kkaefer: line 20
[19:45] kkaefer: (I'm still using 0.2.6)
[19:45] benreesman has joined the channel
[19:46] mraleph: ah
[19:47] killfill has joined the channel
[19:47] MikhX has joined the channel
[19:48] jetienne_ has joined the channel
[19:48] lukes: if i run node server using 'sudo node server.js' it appears that the NODE_PATH env var isn't found
[19:48] lukes: and so all the npm packages aren't found.
[19:48] lukes: any ideas how to get around that?
[19:49] saikat has joined the channel
[19:49] isaacs: lukes: i think you can add sudo env things, right?
[19:49] kkaefer: mraleph: also, when not deleting `closure`, I still get the same problem :/
[19:49] mraleph: kkaefer: can it be a bug in node?
[19:50] lukes: isaacs: hm, dunno. when i do 'sudo export ...' it says 'sudo: export: command not found'
[19:50] lukes: i just want to get the server to return the flashpolicy.xml file on port 443
[19:50] isaacs: lukes: i mean, there's some way to make sudo take certain environs...
[19:50] isaacs: ACTION reading man sudo
[19:50] mraleph: kkaefer: you can throw some printf's into blobs managment (allocation/deallocation) to see what's getting malloced and freed
[19:50] lukes: erm, port 843 i mean
[19:50] kkaefer: into node_buffer.cc?
[19:51] mraleph: yeah
[19:51] isaacs: lukes: sudo -E node server.js
[19:51] mikeal has joined the channel
[19:51] isaacs: lukes: requires the "setenv" option in sudoers
[19:52] lukes: isaacs: that looks promising, thanks :)
[19:53] sonnym has joined the channel
[19:53] miccolis has joined the channel
[19:53] herbySk has joined the channel
[19:53] brianmario has joined the channel
[19:54] langworthy has joined the channel
[19:54] inky_ has joined the channel
[19:54] inky_: encountering something weird here... my code is saying it can't load the 'geoip' module, but i've installed it via NPM and verified that it is there.
[19:55] isaacs: inky_: ls -laF $(npm get root)/geoip/
[19:55] pandeiro has joined the channel
[19:55] isaacs: inky_: what's that say?  also, what's `npm get root` report?
[19:55] inky_: let me check
[19:56] MikhX has joined the channel
[19:56] inky_: first one displays the files
[19:56] inky_: so they're there
[19:56] inky_: npom get root reports ok
[19:56] inky_: npm get root***
[19:56] inky_: and also, every other module seems to be loading.
[19:56] inky_: isn't there a way to load based on version. i could try that. like require('geoip@v')
[19:56] isaacs: inky_: i mean, what's the output on stdout, where it writes the actual path that is your `root` config?
[19:57] inky_: my apologies, it says /usr/local/lib/node
[19:57] isaacs: inky_: is there an index.js in there?
[19:57] isaacs: inky_: in geoip?
[19:57] inky_: no, maybe this is the problem
[19:57] saikat has joined the channel
[19:57] inky_: there is a package.json.js...?
[19:57] inky_: weird. i thought it was supposed to be package.json, and include an index.js
[19:58] konobi: index.node too
[19:58] konobi: since it's likely an addon
[19:59] rikarends has left the channel
[19:59] isaacs: inky_: yeah, the package.json.js is so you can do require('geoip/package.json') to get a data object about hte package
[19:59] inky_: so shall i replace the require('geoip') line with that one??
[19:59] isaacs: inky_: nono
[19:59] isaacs: require('geoip') should work..
[19:59] isaacs: what's require.paths in your program?  Can you console.log that?
[20:00] Gruni has joined the channel
[20:00] Coal has joined the channel
[20:00] isaacs: oh, i see, it *only* has  apackage.json.js
[20:00] inky_: sure thing. it's spread out in multiple files. like, i have one file we'll call app.js and in there i load a file in /lib called class1.js
[20:00] isaacs: derp
[20:01] inky_: and let me pause and note that all of that works fine, it was upon adding in geoip that this all got screwy
[20:01] mikedeboer has joined the channel
[20:01] isaacs: yeah, geoip doesn't have a main module.
[20:01] inky_: but anyway, i have another file now in /lib called class2.js, class1.js is trying to load this file, and class2.js is loading geoip
[20:01] isaacs: yeah
[20:01] isaacs: figured it out
[20:01] isaacs: geoip doesn't have a main module.
[20:01] inky_: sweet, u rock.
[20:02] inky_: why would they do that?
[20:02] isaacs: cuz it used to work, but i removed that auto-main-ifying stuff, and the auto-linking of everything in the lib dir.
[20:03] inky_: right on.
[20:03] inky_: well what do i need to do to get it working? should i just look at another module and kind of mimic what they're doing in the package.json/index.js files?
[20:03] isaacs: so... in teh next version of npm, it'll actually work
[20:03] isaacs: in teh meantime, it should have "main":"./index.js" in the package.json
[20:03] konobi: inky_: there's also https://github.com/bcantrill/node-geoip
[20:03] konobi: supposedly, it's saner
[20:04] konobi: oh hold on
[20:04] konobi: https://github.com/bcantrill/node-libGeoIP
[20:04] chrischr_ has joined the channel
[20:04] inky_: ok, i was gonna say i'd seen this one. let me check the 2nd
[20:05] inky_: right on, this looks pretty slick. i just didn't like the idea of having to install a separate library and all that.
[20:05] inky_: anyway i have to head to class but i really appreciate you guys!
[20:05] inky_: thanks a lot, ill do some more work on all this later tonight. cya
[20:06] bradleymeck: cloud9 is being painful today...
[20:06] stride: does cloud9 run on 0.4 already?
[20:06] DoNaLd`: yes
[20:07] blaines has joined the channel
[20:07] stride: ok,  thanks
[20:10] fairwinds: tjholowaychuk: think I am good on the routes. btw, I would also like to supply templates from various modules. I am currently doing app.set('views', __dirname + '/views');
[20:11] dnolen has joined the channel
[20:11] naneau has joined the channel
[20:12] fairwinds: tjholowaychuk: would like to be able to use templates from a mulitiple folders. when a module is plugged in I want the templates available to app
[20:14] kkaefer: mraleph: I think I solved the problem; our fork of node-sqlite just called free() on the chunk of memory
[20:15] doki_pen: is anyone using chef to deploy node apps?
[20:15] kkaefer: mraleph: thanks for your help
[20:15] zachsmith has joined the channel
[20:17] fairwinds: tjholowaychuk: so would like to do this without symlinking if possible.
[20:17] tc77 has joined the channel
[20:21] Vertice: hey tjholowaychuk, i was wondering something about epress
[20:21] Vertice: expresss
[20:21] Vertice: tjholowaychuk : http://gist.github.com/826409
[20:23] mnot has joined the channel
[20:23] Vertice: basically i am trying to use app.all to pre-load certain requests with additional information, in a  way that i can extend other module's err. page handlers
[20:23] possibilities has joined the channel
[20:23] Vertice: but the order in which app.get and app.all is in the code seems to make a difference
[20:24] isaacs: <3 red diffs: https://github.com/isaacs/npm/commit/dff0da380b40082fec449a06423afc9c395ebdc1
[20:25] Remoun has joined the channel
[20:25] jano: isaacs: w00t :)
[20:27] boaz_ has joined the channel
[20:30] Ratty_: DELETED!
[20:30] mraleph: kkaefer: great. no problem
[20:31] ezmobius has joined the channel
[20:31] tjholowaychuk: Vertice: they execute in order of definition
[20:31] tjholowaychuk: fairwinds: yeah it might be nice to add something like that eventually
[20:34] fairwinds: tjholowaychuk: Could you make views setting a list instead. That would do the job.
[20:35] patcito has joined the channel
[20:35] patcito: hi
[20:35] patcito: anyone could help with that one please? http://pastie.org/private/gniiwnk2u7jvurzih7ogua
[20:35] fairwinds: so could consult paths in list for template
[20:35] tjholowaychuk: fairwinds: what is the use-case?
[20:35] hornairs has joined the channel
[20:35] tjholowaychuk: i dont want to needlessly slow things down
[20:36] erichynds has left the channel
[20:38] bingomanatee has joined the channel
[20:40] hosh_work has joined the channel
[20:46] fairwinds: tjholowaychuk: this is to allow the express to be pluggable. I am constructing modules I want to plugin to express. A plugin contains logic and templates. I would like to pass in paths for plugin templates. ie app.set('views', [__dirname + '/views','plugin1/views', 'plugin2/views']);
[20:46] richcollins has joined the channel
[20:47] fairwinds: tjholowaychuk: unless you can think of a better way without breaking up plugin.
[20:47] tjholowaychuk: fairwinds: yeah basically require.paths
[20:47] tjholowaychuk: nah, i can add array support
[20:47] fairwinds: k, cool
[20:47] tjholowaychuk: probably wont get in to 1.x though, bigger tasks right now
[20:48] ezmobius_ has joined the channel
[20:48] tjholowaychuk: fairwinds: although that should be transparent some how, instead of explicitly mentioning the plugin's path
[20:48] ncb000gt has joined the channel
[20:49] derferman has joined the channel
[20:49] fairwinds: tjholowaychuk: that would be ideal. 
[20:50] aklt has joined the channel
[20:50] tjholowaychuk: you could use app mounting
[20:50] ziro`: tjholowaychuk: does jade have any settings to control indentation?
[20:51] tfe_ has joined the channel
[20:51] tfe_ has joined the channel
[20:51] tjholowaychuk: fairwinds: but you want the ability to override the plugin views correct?
[20:51] bingomanatee: So I have yet to connect to mysql from node - what is the project for that?
[20:51] tjholowaychuk: ziro`: nope
[20:51] tjholowaychuk: not right now
[20:52] hornairs has joined the channel
[20:52] ncb000gt: bingomanatee: i'd check out https://github.com/felixge/node-mysql
[20:52] bingomanatee: Thx
[20:52] patcito: tjholowaychuk: any idea about this one? :) https://groups.google.com/d/topic/express-js/E83yeVnzWe8/discussion
[20:52] ziro`: tjholowaychuk: i'm not enjoying the two indents ;/
[20:53] ncb000gt: yep, felix's stuff tends to rock pretty hard, so it should work
[20:53] tjholowaychuk: ziro` what is wrong with two? :p
[20:53] ziro`: tjholowaychuk: I usually have four :)
[20:53] stride: ctrl-shift-f
[20:54] mtwdmn has joined the channel
[20:54] fairwinds: tjholowaychuk: yes, would want to keep things flexible. In most cases, the views in my case would not be overridden however.
[20:55] tjholowaychuk: fairwinds: ideally "mounting" an app would lookup its view path, and then try the parent's (it doesnt right now)
[20:55] bingomanatee: its ... so ... simple
[20:55] bingomanatee: I take it there's no "mongoose for SQL" yet?
[20:56] tjholowaychuk: patcito: not sure what the question is
[20:56] ziro`: tjholowaychuk: would be awesome if Jade's indentation was like CoffeeScripts
[20:56] tjholowaychuk: lol
[20:57] ziro`: tjholowaychuk: ??
[20:57] patcito: tjholowaychuk: I'm using that example https://github.com/visionmedia/express/blob/master/examples/form/app.js#L60 except that instead of saving the uploading file to /tmp I would like to post it to facebook (see the curl example)
[20:57] fairwinds: ziro: I seem to be getting used to 2. All my other code 4 (python)
[20:58] fairwinds: but a bit strange at the onset
[20:58] tjholowaychuk: patcito: ohhh, well, express does not have an http client
[20:58] tjholowaychuk: so
[20:58] tjholowaychuk: just use node's
[20:58] tjholowaychuk: but you will have to constructor the multipart body
[20:58] tjholowaychuk: i think node-formidable has outgoing stuff too
[20:58] tjholowaychuk: not sure
[20:58] tjholowaychuk: fairwinds / ziro`: you will get used to it
[20:58] tjholowaychuk: 2
[20:58] tjholowaychuk: is nicer
[20:59] fairwinds: :-)
[20:59] tjholowaychuk: i had to use 4 when i was with sencha, moved most my stuff back to 2 again
[20:59] tjholowaychuk: 4 sucked
[20:59] fairwinds: well 2 is more compress so get more on a line :-)
[20:59] fairwinds: s/ compressed
[21:00] fairwinds: that's one plus
[21:00] jetienne_: tjholowaychuk: if i do a new style/ for dox, would you accept it? 
[21:00] patcito: ok, thanks
[21:00] tjholowaychuk: jetienne_: if it was decent yeah
[21:00] ziro`: tjholowaychuk, fairwinds : YAML and CoffeeScript are both case in point that it's not necarsary to fix the number of whitespace indentations to parse indentation delimited structures
[21:00] jetienne_: tjholowaychuk: ok
[21:00] tjholowaychuk: ziro`: for sure
[21:00] tjholowaychuk: a quick option would do
[21:01] tjholowaychuk: or we can deduce it from the first indent
[21:01] ziro`: deduce it whenever whitespace appears  in the column after the previous line
[21:01] eyesUnclouded has joined the channel
[21:02] ziro`: e.g. in coffeescript I can start off using 4, then use 2, then use 1, then use 4 again
[21:02] tjholowaychuk: oh
[21:02] tjholowaychuk: no
[21:02] tjholowaychuk: that is stupid
[21:02] ziro`: as long as the columns line up
[21:02] tjholowaychuk: i dont want that
[21:02] ziro`: ok, well using the first indentation works for me :/
[21:03] mtwdmn has left the channel
[21:03] tjholowaychuk: forcing consistency is a good thing lol
[21:03] ziro`: sure
[21:03] hellp has joined the channel
[21:04] ziro`: I just don't really want to have to change my ide settings and avoid the temptation of pushing tab twice to get the code looking 'right'
[21:06] hoodoos: u just wonder is there any chance that I can't detect leak when my configuration all inside one machine and no network relations occur, because on cluster I use my applications eat much more memory.. is it possible at all?
[21:06] tjholowaychuk: ziro`: yeah im fine with it, just not the sporadic implementation
[21:06] tjholowaychuk: that seems weird to me
[21:07] ziro`: tjholowaychuk: also, I don't know how you feel about this but perhaps avoiding templating in Jade would be to it's advantage? for example, templating and html generation are two different things and focussed templating tools could fill that gap
[21:08] ncb000gt: ziro`: jade is templating
[21:08] deepthawtz has joined the channel
[21:08] tjholowaychuk: ziro`: no clue what you are getting at
[21:08] ziro`: jade generates html, with some token replacement
[21:09] tjholowaychuk: mm no
[21:09] tjholowaychuk: it has a compiler lol
[21:09] tjholowaychuk: it walks the nodes
[21:09] ziro`: sorry, i refer to the foo= bar syntax
[21:10] tjholowaychuk: oh
[21:10] tjholowaychuk: what about it?
[21:10] ziro`: interpolation? is that what it's called?
[21:10] tjholowaychuk: it just buffers the output of that expression
[21:11] tjholowaychuk: foo #{bar} baz
[21:11] tjholowaychuk: is interpolation
[21:11] ziro`: yep
[21:11] ziro`: ok
[21:11] ziro`: ]
[21:11] ziro`: i'm using jade with dust
[21:11] pietern has joined the channel
[21:11] tjholowaychuk: if you could not buffer expressions it would not be a template engine lol
[21:11] ziro`: jade generates html with my {tokens} and are replaced by dust
[21:12] LarsSmit has joined the channel
[21:12] ziro`: dust does funky stuff like inheritence
[21:12] ziro`: jade doesnt necarsarily need to 'compete' in that market
[21:12] ziro`: specialisation is what i'm suggesting
[21:13] ziro`: anyway, it's your tool, it's great - keep up the good work :) gotta run
[21:13] tjholowaychuk: i dont get it :p
[21:13] ziro`: ok, well I suck at explaining, take it easy - if what I said sounds interesting, hit me up tomorrow
[21:14] tjholowaychuk: later
[21:14] fairwinds: tjholowaychuck: while we are talking about templates, is it possible to just return some html from a template without passing in response. ie var html = render('my_template', vars)
[21:14] tjholowaychuk: fairwinds render('foo', function(){})
[21:14] tjholowaychuk: or with options in there
[21:15] fairwinds: k, thanks
[21:16] derferman has joined the channel
[21:17] tim_smart has joined the channel
[21:17] jano_ has joined the channel
[21:18] zachsmith has joined the channel
[21:21] fairwinds: tjholowaychuk: I guess in short term, will symlink plugin views to views folder
[21:22] tmzt: bingomanatee: something like LINQ would be good, but don't know of one yet
[21:22] tmzt: (for mysql)
[21:24] piscisaureus has joined the channel
[21:24] tmzt: guys, tell me if this makes sense for a signup workflow. enter an email address, checks if it exists, gives you a shortened link, click that link (and if the cookie is good) asks to confirm the email address you already entered
[21:25] chilts: you mightn't have a cookie at that stage
[21:25] Coal has joined the channel
[21:25] tmzt: chilts: well, true but the shortened link is secret a js button anyway :)
[21:25] chilts: a better solution: enter an email address, give them a short link (with a token), check the token in the DB and just confirm their email
[21:25] tmzt: the cookie is just if they decide to type it in
[21:25] chilts: that excludes people without Javascript
[21:25] tmzt: ah
[21:26] chilts: and also excludes people who walk away from their computer and log on on a different one at a later date
[21:26] tmzt: so does the rest of the site, at least the profile creater
[21:26] tmzt: true, but will they remember that link anyway? they can just retype their email and get another one
[21:26] chilts: (in my description above, the short link is in an email to their address)
[21:26] tmzt: or the same one, as you said
[21:26] chilts: that way, you're also confirming they can accept email there
[21:27] chilts: a better solution (updated): enter an email address, send them a short link (with a token), they click on it, check the token in the DB and just confirm their email
[21:27] chilts: I used that when people sign up AND when they change their email
[21:27] chilts: that way we always know they have a valid email address
[21:27] n00dles has joined the channel
[21:28] tmzt: send them to their email? I want them to create a profile as quickly as possible, they only need to confirm the email when they click the short link but they can already see the editor, it just blocks the fun part of it
[21:29] chilts: that's ok too, I mean it's up to you whether you log them into your app with a valid email or not :)
[21:29] tmzt: they need an email confirmed to actaully do anything, I just don't want them forgetting to click the confirmation and it's hard to explain the site up front
[21:29] squeeks: make sure you can clean up expired tokens too.
[21:30] chilts: also, I'd say we're on the same page, I'm just saying that you don't necessarily need a valid cookie (therefore takes that out of the equation)
[21:30] Remoun has joined the channel
[21:30] tmzt: squeeks: redis :)
[21:30] chilts: I usually expire tokens after 2 or 3 days
[21:30] EMCAScriptZen has joined the channel
[21:30] EMCAScriptZen: If I pass a variable called METASYNTACTICAL_VARIABLE to a function as an argument and that function modifies the variable (assigns another value to it), will the original METASYNTACTICAL_VARIABLE variable be changed in the scope of the function that called the other function after that function returns?
[21:30] aro has joined the channel
[21:31] kubrow has joined the channel
[21:31] sveimac has joined the channel
[21:32] ryanfitz has joined the channel
[21:32] nonnikcam has joined the channel
[21:32] huloft has joined the channel
[21:33] huloft: So, the 2.x docs are gone from nodejs.org... can someone point me to another source for them?
[21:33] mikeal: does anyone know if paperboy is working with 0.4.0?
[21:33] arpegius has joined the channel
[21:33] tilgovi has joined the channel
[21:34] mattly has joined the channel
[21:34] samsonjs: doki_pen: i deploy a node app with chef
[21:34] ryah: huloft: http://nodejs.org/docs/v0.2.6/api.html
[21:34] huloft: ryah: thanks
[21:34] tmzt: chilts: what do you do?
[21:35] ryah: huloft: http://nodejs.org/docs/
[21:35] huloft: ryah: excellent, that's what I was looking for
[21:35] huloft: Deploying an app to a staging server and trying to figure out how to get the app to know it's in staging now;)
[21:36] EMCAScriptZen: v8: var test = 3;   function foo() {     test = 5;   }   foo();   alert(test);
[21:36] v8bot: EMCAScriptZen: ReferenceError: alert is not defined
[21:36] sveimac has joined the channel
[21:36] EMCAScriptZen: v8: var test = 3;   function foo() {     test = 5;   }   foo(); console.log(test);
[21:36] v8bot: EMCAScriptZen: CONSOLE: [5], OUTPUT: undefined
[21:36] francescop has joined the channel
[21:37] Jaye_ has joined the channel
[21:37] samsonjs: huloft: set an environment variable on your staging systems and then just check for that in your node app
[21:37] tjholowaychuk: samsonjs: you the guy from vic?
[21:37] n00dles has left the channel
[21:37] huloft: samsonjs: thanks. It looks like process.env looks for something... NODE_ENV maybe? NODE_ENVIRONMENT?
[21:38] tjholowaychuk: huloft: NODE_ENV
[21:38] tjholowaychuk: is what most people use
[21:38] huloft: tjholowaychuk: thanks
[21:38] samsonjs: tjholowaychuk: that's me, _sjs on twitter
[21:38] tjholowaychuk: samsonjs: awesome!
[21:38] tjholowaychuk: fellow victorians haha
[21:39] langworthy has joined the channel
[21:39] samsonjs: heh, yeah one day the uprising will begin :p ... and everyone shall drink tea or something
[21:39] EMCAScriptZen: v8: var test = 3;   function foo(myvar) {     myvar = 5;   }   foo(test); console.log(test);
[21:39] v8bot: EMCAScriptZen: CONSOLE: [3], OUTPUT: undefined
[21:39] zemanel: ACTION wonders if anyone's hiring remote devs. overlandlord appreciates 
[21:39] jesusabdullah: overlandlord?
[21:40] zemanel: it's when you have an overlord for landlord
[21:40] jesusabdullah: ah :D
[21:40] dustinwhittle has joined the channel
[21:40] CIA-39: node: 03Tj Holowaychuk 07master * rfe83861 10/ (lib/http.js test/simple/test-http-mutable-headers.js): Fixed field merging with progressive fields on writeHead() - http://bit.ly/gxUZy4
[21:41] hunterloftis has joined the channel
[21:42] richcollins has joined the channel
[21:43] EMCAScriptZen: Damn, we need a malloc wrapper
[21:43] EMCAScriptZen: ACTION can't find any malloc/realloc wrappers in npm
[21:44] ryah: EMCAScriptZen: new Buffer(1024)
[21:44] EMCAScriptZen: ryah: What is Buffer used for in practice though, besides making memory leaks a reality in a managed memory language? :)
[21:44] CIA-39: node: 03isaacs 07master * rf07041e 10/ lib/repl.js : (log message trimmed)
[21:44] CIA-39: node: Make the repl respect node_modules folders.
[21:44] CIA-39: node: This is important so that in the future, this will work:
[21:44] CIA-39: node:  $ cd ~/dev/js/some-project
[21:44] CIA-39: node:  $ npm install redis
[21:44] CIA-39: node:  $ node
[21:44] CIA-39: node:  > require.resolve('redis')
[21:45] ryah: EMCAScriptZen: buffers are GCed
[21:45] EMCAScriptZen: ah
[21:45] tmzt: SubStack: it wouldn't be difficult to get multiple screenshots of a website and display them as a slide show with your service would it? will you have an api?
[21:46] chilts: tmzt: what do I do in terms of day job, or in terms of that problem?
[21:46] EMCAScriptZen: ryah: Do you think Buffers are faster for random access?
[21:46] chilts: :)
[21:46] tmzt: day job
[21:46] chilts: am self-employed
[21:47] tmzt: I'm curious where somebody would learn front end dev, I've been doing html+js for years but am not a designer
[21:47] ryah: EMCAScriptZen: faster than what?
[21:47] chilts: I've worked on two of the biggest sites in NZ in my recent history (at a previous job)
[21:47] tmzt: +css
[21:47] EMCAScriptZen: ryah: Faster than using a string
[21:48] ryah: of what size?
[21:48] bartt has joined the channel
[21:48] GasbaKid has joined the channel
[21:49] ryah: i think there is probably some threshold where strings become slower
[21:49] ryah: in size
[21:49] squeeks: chilts: oh, both of them?
[21:49] squeeks: I thought you lot just got your news from ninemsn and the age :V
[21:50] tmzt: stuff?
[21:51] kjeldahl has joined the channel
[21:52] EMCAScriptZen: ryah: Can you manipulate the buffer at the bit level?
[21:52] ryah: yes
[21:52] EMCAScriptZen: And have different types like 1-byte chars, octets, etc
[21:53] kubrow_ has joined the channel
[21:53] konobi: Buffers just hold binary data... they're of fixed size (marked during creation)
[21:54] EMCAScriptZen: Okay, very much like malloc
[21:54] ryah: EMCAScriptZen: if you're dealing with binary data, you should use buffers
[21:54] EMCAScriptZen: Buffers are a node thing or a v8 thing?
[21:54] ncb000gt: EMCAScriptZen: node thing afaik
[21:55] francescop has left the channel
[21:55] chris6F has joined the channel
[21:55] ncb000gt: EMCAScriptZen: http://nodejs.org/docs/v0.4.0/api/buffers.html
[21:55] EMCAScriptZen: ncb000gt: Reading it now :)
[21:55] ncb000gt: EMCAScriptZen: "A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap."
[21:55] mraleph: we are in the process of adding proper webgl typed arrays support in crankshaft pipeline. so access to buffers will be faster.
[21:55] EMCAScriptZen: Hopefully Google will add buffers to v8
[21:56] elblobbo has joined the channel
[21:56] ncb000gt: mraleph: :)
[21:57] EMCAScriptZen: It would be cool to be able to write executable data, flip the NX bit, and then run it as a child process
[21:58] hunterloftis has joined the channel
[21:58] hassox has joined the channel
[21:58] EMCAScriptZen: ACTION is interested in using node.js in OS dev.
[21:58] tc77 has joined the channel
[21:59] ncb000gt: EMCAScriptZen: :)
[22:01] pHcF has joined the channel
[22:01] GasbaKid has joined the channel
[22:03] pdelgallego has joined the channel
[22:03] bingomanatee: NuckingFuts has an interest in that area - he wants to do cross OS development UI components with Node. 
[22:03] bingomanatee: OS == operating system or open source?
[22:04] jetienne_: the web is good as cross os dev UI
[22:05] bsdguru has joined the channel
[22:05] bsdguru: is there a decent resource on how to build libraries that interface with remote apis?
[22:05] tmzt: crankshaft?
[22:06] tmzt: ryah: how can buffers be GCd but outside of the heap?
[22:06] charlenopires has joined the channel
[22:06] tmzt: you mean the underlying data is freed when the reference is lost?
[22:07] bradleymeck: tmzt, they are notified when a gc occurs and the object representing the data (not the dat itself) is up for GC
[22:07] tmzt: the js object is GCd and takes the malloc'd portion with it?
[22:07] bradleymeck: v8::Persistent::MakeWeak in v8.h for more info
[22:07] v8bot: bradleymeck: SyntaxError: Unexpected token :
[22:08] mraleph: tmzt: crankshaft — adaptive optimizing compilation pipeline introduced in v8 3.0
[22:08] bradleymeck: tmzt the js object is GCd then a callback is performed that deallocs the memory for the buffer, yes
[22:08] tmzt: okay
[22:12] ryah:  tmzt yes
[22:14] fly-away has joined the channel
[22:16] michaelficarra has joined the channel
[22:19] bradleymeck: mikeal about?
[22:19] n00dles has joined the channel
[22:20] mikeal: huh?
[22:20] bradleymeck: what were you wanting in a standalone cookie api?
[22:21] mikeal: something very simple
[22:21] mikeal: that parses and sets cookie data reliably
[22:21] mikeal: something like the url or querystring api
[22:24] bradleymeck: mikeal thats still rather hard since domains are needed, but other than that could prolly whip something up over cookiejar if i knew the api to strive for
[22:25] cadorn has joined the channel
[22:26] tjholowaychuk: bradleymeck: i think he just means the really basic split/map stuff for the headers
[22:26] tjholowaychuk: not a cookie jar
[22:27] bradleymeck: ah
[22:27] losing has joined the channel
[22:27] Sebmaster has joined the channel
[22:28] CIA-39: node: 03Ryan Dahl 07master * rf11e730 10/ src/node_version.h : Working on v0.5.0 - http://bit.ly/fzoyDu
[22:28] CIA-39: node: 03Ryan Dahl 07master * r909a5b3 10/ (src/node_buffer.cc test/simple/test-buffer.js): buffer.toString() shouldn't include null values - http://bit.ly/i2kZ70
[22:29] trotter has joined the channel
[22:29] mikeal: braddunbar: the url api is domain aware
[22:29] mikeal: dammit
[22:29] mikeal: bradleymeck: ^^
[22:29] mikeal: too many people in this room :)
[22:29] mikeal: ryah: did you see that HTTPS bug against encrypted.google.com?
[22:30] ryah: mikeal: which?
[22:30] mikeal: http://groups.google.com/group/nodejs-dev/browse_thread/thread/1af489b213bb50b4
[22:30] mikeal: the test is here http://www.google.com/url?sa=D&q=https://gist.github.com/825187
[22:30] mikeal: different people are seeing different errors
[22:30] mikeal: but it doesn't pass for anyone
[22:31] bradleymeck: mikeal its more than just domains in strings, when you set a cookie you need to know the domain to set it on (which can usually be retrieved by http.Request.headers.host), and when you retrieve cookies as a client you need to know which domain to retieve them as. ontop of that you need to know if it is secure / httponly / expired / in the right path. whew
[22:32] mikeal: yup
[22:32] bradleymeck: expired is easy the rest is kinda hard w/o coupling to something
[22:32] mikeal: but i don't think that it should pull that automatically
[22:32] xla has joined the channel
[22:32] mikeal: off of headers.host
[22:32] mikeal: i think you should set that in the parser or set phase
[22:32] bradleymeck: cookiejar doesn't if you dont use the connect middleware
[22:33] AAA_awright: bingomanatee: ping
[22:33] AAA_awright: bingomanatee: Are you usually pingable?
[22:34] mikeal: cool
[22:34] Evet_ has joined the channel
[22:34] ryah: mikeal: well, the local cline tworks..
[22:34] mikeal: right
[22:35] mikeal: but the one in the wild fails
[22:35] mikeal: and it's the site referenced in the docs :)
[22:35] aguynamedben has joined the channel
[22:35] stephen_mcd has joined the channel
[22:35] ryah: mikeal: indeed.
[22:35] mikeal: for you, does it not emit end?
[22:35] ryah: it doesn not
[22:35] mikeal: or does it fail in ECONNREFUSED?
[22:36] ryah: mikeal: you need to wait for the server to begin listening
[22:36] dmcquay has joined the channel
[22:36] ryah: for the localhost one, that's why you're getting ECONNREFUSED
[22:36] mikeal: does listen have a callback?
[22:36] ph^ has joined the channel
[22:36] bingomanatee: At the ioffice - on and off
[22:36] bingomanatee: WAssup AAA?
[22:37] ryah: mikeal: yes
[22:37] dmcquay has joined the channel
[22:37] bingomanatee: AAA_awright: pong
[22:38] AAA_awright: bingomanatee: Hey
[22:38] mikeal: ryah: updated test https://gist.github.com/825187
[22:38] AAA_awright: bingomanatee: Nothing in particular, are you usually around?
[22:38] isaacs: ryah, mikeal: this test aside, now having actually used it, i've gotta say, this new http/https client rocks a lot of socks
[22:38] AAA_awright: I didn't get to ask yesterday
[22:38] isaacs: all the way off.
[22:39] bingomanatee: I am on site - my evennings are usually better. 
[22:39] mikeal: i like the new api a lot more
[22:39] kriszyp has joined the channel
[22:39] ryah: isaacs: thanks
[22:39] mikeal: and if it was emitting end, i would love it functionally as well :)
[22:39] AAA_awright: bingomanatee: kk, just until I get some more formal mailing list or something
[22:39] jesusabdullah: I haven't had a chance to check out the new api
[22:40] bingomanatee: I'm mailable as bingomanatee@me.com - always up for meatfests or drinking. 
[22:40] jpstrikesback1 has joined the channel
[22:41] isaacs: ryah: also, for what it's worth, i'm downloading stuff and uploading stuff to the npm https api flawlessly
[22:41] ryah: isaacs: great
[22:41] isaacs: ryah: no more "uploading over insecure channel" warnings!
[22:41] mikeal: that's good to know
[22:41] mikeal: so, we work against a random erlang HTTPS server
[22:41] mikeal: just not google :(
[22:42] isaacs: google should move their stuff over to couchone
[22:42] isaacs: that'd solve the problem
[22:42] mikeal: hahaha
[22:42] isaacs: it's what, just a database or something right?  you guys got searching, right?
[22:42] isaacs: er... "those" guys.
[22:42] isaacs: ACTION keep forgetting
[22:43] bronson has joined the channel
[22:45] raidfive has joined the channel
[22:45] tc77 has joined the channel
[22:47] TomY has joined the channel
[22:47] ossareh has joined the channel
[22:47] bronson: Just curious...  anyone here like chainsaw?  Or some other way of reducing typing when chaining calls?
[22:49] jesusabdullah: I haven't had a chance to try it yet, but it looks nice
[22:50] chrissanz has joined the channel
[22:50] chrissanz: hello
[22:50] bmizerany has joined the channel
[22:50] jetienne_: bronson: url?
[22:52] bronson: jetienne_: http://substack.net/posts/92a7f7/Build-chainable-interfaces-in-node-js-with-chainsaw
[22:52] eyesUnclouded has joined the channel
[22:54] aguynamedben has joined the channel
[22:54] jetienne_: bronson: thx. interesting im writing a chained api atm
[22:54] aguynamedben has joined the channel
[22:54] bx2 has joined the channel
[22:55] bronson: jetienne_: there's also seq by the same author http://substack.net/posts/e0741f/Seq-Chainable-Asynchronous-Flow-Control-in-Node-js
[22:55] bronson: it's enough to make your head spin...
[22:57] sveimac has joined the channel
[22:57] robotarmy has joined the channel
[23:02] tmzt: how would you recommend installing node so that new sites can be using a git current version or 0.3.8 etc.
[23:03] tanepiper: use n
[23:03] tanepiper: https://github.com/visionmedia/n
[23:04] tanepiper: and this is about the 5th time i've answered that same question in here, need to go in a FAQ
[23:04] JimRoepcke has joined the channel
[23:04] chrischris has joined the channel
[23:06] bradleymeck: tanepiper, https://github.com/ry/node/wiki/FAQ done
[23:07] tanepiper: i would have but i've had a few glasses of wine tonight :D
[23:07] piscisaureus: ryah: ping
[23:08] zzak: tanepiper++
[23:08] v8bot:  zzak has given a beer to tanepiper. tanepiper now has 2 beers.
[23:08] tanepiper: *hick*
[23:08] ryah: piscisaureus: yo
[23:08] piscisaureus: ryah: yo
[23:09] piscisaureus: do I need to check out node from git to set up this buildslave
[23:09] piscisaureus: I set everything up but `buildslave start /c/slave-mingw32` just does nothing
[23:09] piscisaureus: no error, no message, just exit immediately
[23:09] ryah: piscisaureus: hm, not sure
[23:10] aguynamedben_ has joined the channel
[23:10] tmzt: tanepiper: sorry, I'm using a practically ancient ubuntu packaged version still
[23:11] srid has joined the channel
[23:11] srid has joined the channel
[23:11] aguynamedben__ has joined the channel
[23:11] tanepiper: tmzt: shouldn't matter, n works on any 0.2 version
[23:11] tmzt: of course that doesn't help when I'm using spark
[23:12] MikhX_ has joined the channel
[23:12] tanepiper: it downloads and compiles any version you pass it from git and sets it as the default
[23:14] piscisaureus: ryah: oh it seems that you need to register my buildbot first. pm
[23:18] inky_: do you guys have any trouble with setInterval() and setTimeout() in node? they don't seem to be calling the callback, but it definitely pauses.
[23:18] tanepiper: inky_: post a gist of what your doing?
[23:19] inky_: tanepiper, i had just given up and came here, and then naturally i figured it out >.< i was enclosing the callback in quotes
[23:19] inky_: thanks =]
[23:19] tanepiper: ahh :)
[23:19] tanepiper: old-stylee js
[23:20] inky_: :P yep, just been getting back into JS lately. love it though.
[23:20] murz has joined the channel
[23:21] piscisaureus: ryah: strnlen, does that work for you?
[23:21] tanepiper: what lang you been doing more recently inky_ ?
[23:22] blueadept has joined the channel
[23:23] srid has joined the channel
[23:23] srid has joined the channel
[23:23] yhahn has left the channel
[23:23] bradleymeck has joined the channel
[23:24] WarriorSl has joined the channel
[23:25] pastak has joined the channel
[23:28] eee_c has joined the channel
[23:31] zachsmith has joined the channel
[23:33] inky_: sorry for long response, doing some tests. well actually i coded a whole, whole lot when i was about 10-17. i didn't code very much from then til lately, though i did keep up with what was going on. then i saw node.js, and i was blown away, because i'd been wanting something like it for so long.
[23:33] inky_: but i had been dabbling in ruby, which i liked.
[23:33] arlolra has joined the channel
[23:33] dguttman has joined the channel
[23:34] isaacs: ryah: ok, so... i still like the api, but the connection pooling causes some issues
[23:34] inky_: all the same, i haven't coded with this kind of passion since i was young. it's nice to feel that drive again.
[23:34] isaacs: {agent:false} fixes it
[23:34] arlolra: piscisaureus: np. they will be up shortly
[23:35] Evet has joined the channel
[23:35] dgathright has joined the channel
[23:35] piscisaureus: arlolra: thanx
[23:37] springmeyer has joined the channel
[23:38] orospakr: hmmm.  I just found an issue in node.js 0.2 that screws me up pretty good.  it appears to still exist in 0.4, although that code is better explained.  The problem is, the "Pragma" HTTP header isn't in its whitelist of HTTP headers that can be comma-separated.
[23:38] tanepiper: isaacs: i think there was a pull request in mikeal's request that i seen around that a well
[23:38] orospakr: The RFC says that it is.  (1#pragma-directive)
[23:39] mikeal: yup, {agent:false} disabled pooling
[23:39] Coal has joined the channel
[23:40] jetienne_: orospakr: for such specific issue, i would recommend the mailing list. you will get a more focused audience there
[23:40] orospakr: jetienne_, fair enough. thanks.
[23:41] eyesUnclouded has joined the channel
[23:41] admc1 has joined the channel
[23:42] n00dles has left the channel
[23:43] NuckingFuts has joined the channel
[23:45] Ratty_: dammit. "apt-get install node" wasn't what I expected
[23:45] Ratty_: "Amateur Packet Radio Node program"
[23:45] Ratty_: Screw those guys
[23:46] sh1mmer has joined the channel
[23:46] sh1mmer: screw you tmobile. why the hell are you blocking irc ports
[23:46] mnot: such anger
[23:46] Ratty_: rage
[23:46] NuckingFuts: Fuck it, I'm switching back to SysReset.
[23:46] NuckingFuts: mIRC, you've been a bitch for too long.
[23:47] Ratty_: mIRC? Like from the 90s?
[23:47] Zenith77 has joined the channel
[23:47] NuckingFuts: Ratty_: It's still one of the best Windows clients :P
[23:47] sh1mmer: mnot: I'm done with carriers/telcos
[23:47] sh1mmer: I mean there are some good things about them but in general they cause me a fair amount of pain
[23:48] mnot: orosparkr: we really need to get it to a list of ones that *aren't* comma-separated; i.e., the default should be a list 
[23:48] NuckingFuts: sh1mmer: I'm with Comcast.  They were the first ones to break net neutrality.
[23:48] sh1mmer: That's why I didn't get comcast installed recently.
[23:48] mnot: sh1mmer: I try to avoid them. no cable, voip for phone. try not to get into contracts for mobile
[23:49] sh1mmer: mnot: there is no alternative in the United lounge
[23:49] mnot: sh1mmer: sure there is; I call it "Air New Zealand"
[23:49] miccolis has joined the channel
[23:49] sh1mmer: haha, not in this airport
[23:49] mnot: sh1mmer: where?
[23:49] sh1mmer: SFO
[23:49] mnot: sh1mmer: yes there is
[23:49] sh1mmer: Where is the ANZ lounge then?
[23:49] mnot: sh1mmer: intl terminal, at least
[23:49] sh1mmer: Ah
[23:49] sh1mmer: yeah I'm in T3
[23:49] mnot: sh1mmer: sucks to be you :)
[23:49] dgathright has joined the channel
[23:50] Nuck has joined the channel
[23:50] sh1mmer: Oh it's so terrible.
[23:50] mnot: tho the koru club in SFO isn't that great; LAX/SYD/MEL/AKL are all much better.
[23:50] sh1mmer: The Koru club in SYD is nice for sure
[23:51] arlolra: piscisaureus: are there any differences to building on cygwin / mingw32 ... that the bb should account for?
[23:51] isaacs: npm 0.3 is close.  i can smell it
[23:51] sh1mmer: isaacs: what does it smell like?
[23:51] isaacs: sh1mmer: cookies and bacon
[23:51] sh1mmer: :(
[23:51] bmizerany has joined the channel
[23:51] sriley has joined the channel
[23:51] NuckingFuts: isaacs: sounds tasty.
[23:51] piscisaureus: arlorla: what kind of differences are you talking about?
[23:51] isaacs: sh1mmer: didn't you know? npm isn't vegan.
[23:51] mnot: did someone put forth the idea of bacon cookies?
[23:51] sumit has joined the channel
[23:51] isaacs: i write every line of code in pigs' blood.  then in viom.
[23:51] isaacs: *vim
[23:52] piscisaureus: arlorla: if you control that, the mingw build currently requires ./configure --without-ssl
[23:52] NuckingFuts: isaacs: I use the blood of dead babies.
[23:52] sumit: Is there any one who is using mongoose by chance ?
[23:52] sh1mmer: isaacs: real men code in pigs' blood?
[23:52] NuckingFuts: It's far more potent.
[23:52] arlolra: configure / make / make test-all / make bench
[23:52] sumit: Is there any one who is using mongoose by chance ?
[23:52] sprout has joined the channel
[23:52] sumit: Is there any one who is using mongoose by chance ?
[23:52] easternbloc: echo echo ;)
[23:53] arlolra: piscisaureus: configure / make / make test-all / make bench
[23:53] piscisaureus: arlolra: I don't know if make bench works. and mingw needs --without-ssl
[23:53] arlolra: ok
[23:53] piscisaureus: arlolra: both currently fail a lot of tests
[23:53] NuckingFuts: So, anyone feel like helping me get 0.4.0 on Cygwin?
[23:54] piscisaureus: NuckingFuts: should just work
[23:54] NuckingFuts: Cause I'm running into an issue that, although listed, the solution is failing.
[23:54] arlolra: a lot of tests are failing http://buildbot.nodejs.org/waterfall
[23:54] sumit: Anybody feel like helping on : http://groups.google.com/group/nodejs/browse_thread/thread/74580c39458a482
[23:55] piscisaureus: arlolra: so windows won't stand out that much :-)
[23:55] arlolra: unfortunately, it sticks out like a sore thumb
[23:56] NuckingFuts: Do we not have a cygwin system in the buildbot?
[23:56] NuckingFuts: I think they need one :D
[23:57] arlolra: i'm adding it now nuckfut
[23:57] NuckingFuts: If I had a spare Windows computer, I'd more than happily offer to host one :P
[23:57] visnup: in the spirit of npm buttons, I made some ryah buttons: http://www.zazzle.com/ryah_button-145709191391039056
[23:57] visnup: ACTION hides from ryah
[23:57] NuckingFuts: arlolra: Awesome!
[23:57] piscisaureus: ryah: ping
[23:57] piscisaureus: https://github.com/piscisaureus/node/commit/ca44edae9f8e4a6ac36621d10b4f5be2fd5a5418
[23:58] piscisaureus: NuckingFuts: who needs one?
[23:58] tmzt: what is everybody using for static files now?
[23:58] NuckingFuts: piscisaureus: The buildbot :P
[23:59] NuckingFuts: I didn't even know NodeJS had a buildbot, to be honest
[23:59] sumit: Is there any one who is using mongoose by chance ?
[23:59] arlolra: the set of things we don't know ...
[23:59] NuckingFuts: sumit: No need to keep asking.
[23:59] sumit: :-)
[23:59] sh1mmer: visnup: are those covered under fair use or satire?
[23:59] tmzt: I'll just check subs examples
