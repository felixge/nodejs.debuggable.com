[00:02] kohai: @mstepniowski: @sh1mmer Does the Node.js server do anything? If not, you are basically measuring the performance of select/epoll system call.
[00:02] kohai: @mstepniowski: @sh1mmer Does the Node.js server do anything? If not, you are basically measuring the performance of select/epoll system call.
[00:03] matyr has joined the channel
[00:03] kohai: @sh1mmer: With a 30 seconds keep alive packet exchange it's 5% CPU and 310MB stack for 250k connections. Node.js is awesomesauce.
[00:03] kohai: @sh1mmer: With a 30 seconds keep alive packet exchange it's 5% CPU and 310MB stack for 250k connections. Node.js is awesomesauce.
[00:05] xastey` has joined the channel
[00:06] jonaslund has joined the channel
[00:06] davidcoallier has joined the channel
[00:06] kohai: @cmlndz: #nodejs + #express + #coffeescript + #coffeekup + #mongodb = pure bliss &lt;3
[00:06] kohai: @cmlndz: #nodejs + #express + #coffeescript + #coffeekup + #mongodb = pure bliss &lt;3
[00:07] gtramont1na has joined the channel
[00:07] mihar has joined the channel
[00:08] xandrews has joined the channel
[00:08] baoist has joined the channel
[00:08] tim_smart: ryah: Around and not busy? Playing with a idea that is starting to look similar to your deployment tool.
[00:09] maushu has joined the channel
[00:09] kohai: @ifandelse: having some challenges getting #npm installed when #nodejs is under /opt and not /usr.  #argghh #ubuntu
[00:09] kohai: @ifandelse: having some challenges getting #npm installed when #nodejs is under /opt and not /usr.  #argghh #ubuntu
[00:09] AvianFlu has joined the channel
[00:11] Marak: !part #Node.js
[00:12] kohai has left the channel
[00:12] Marak: lol
[00:12] apanda has joined the channel
[00:12] c4milo1 has joined the channel
[00:13] tim_smart: I must have the bot on ignore haha
[00:13] AvianFlu has joined the channel
[00:13] matyr has joined the channel
[00:14] brettgoulder has joined the channel
[00:14] jakehow has joined the channel
[00:18] c4milo1 has joined the channel
[00:19] tmpvar: what up
[00:20] jaywastaken has joined the channel
[00:20] jerrysv: not much, just waiting on a pull ...
[00:21] tim_smart: tmpvar: Bacon on the grill, and hacking node stuff
[00:21] tbranyen: hot
[00:21] tbranyen: tim_smart: woah, your bbqs sound awesome
[00:21] tbranyen: lemme get some of that bacon on a bun
[00:21] jerrysv: tim_smart: bacon on the grill? how do you stop it from falling in? (serious question)
[00:21] halfhalo: bacon is ALWAYS serious
[00:21] tbranyen: foil...
[00:22] jerrysv: tbranyen: just not the same :/
[00:22] tbranyen: jerrysv: huh...
[00:22] tim_smart: jerrysv: My grill has 15mm gaps, and I don't get pussy bacon
[00:22] topaxi has joined the channel
[00:23] jerrysv: tim_smart: i see.
[00:23] tbranyen: hehehe crazy dude screaming outside my window at a cemetary gate
[00:24] tk has joined the channel
[00:25] hij1nx_ has joined the channel
[00:25] matyr_ has joined the channel
[00:25] davidbanham has joined the channel
[00:27] jerrysv: tbranyen: cemetery gates? http://www.youtube.com/watch?v=TbBdWNqxkR0
[00:29] insin: Expected Smiths, got Smiths
[00:29] kf__ has joined the channel
[00:29] insin: ACTION -> o/ \o <- jerrysv
[00:29] guest42343 has joined the channel
[00:30] igl has joined the channel
[00:30] matyr has joined the channel
[00:30] jerrysv: insin: ha
[00:30] tbranyen: jerrysv: i live right outside a cemetary
[00:31] tbranyen: jerrysv: http://www.flickr.com/photos/tbranyen/sets/72157625845073185/ its cool looking :D
[00:31] avalanche123 has joined the channel
[00:32] jerrysv: tbranyen: very nice.
[00:34] matyr has joined the channel
[00:35] Mrfloyd has joined the channel
[00:36] patrickjst has joined the channel
[00:40] AAA_awright: How do I use fs.createWriteStream to write to a file?
[00:40] AAA_awright: Does fs.createWriteStream return a file descriptor?
[00:40] xandrews has joined the channel
[00:41] oatkiller has joined the channel
[00:41] chapel: tjholowaychuk: ping
[00:41] tjholowaychuk: yo
[00:41] tim_smart: AAA_awright: It returns a stream.
[00:42] AAA_awright: So I can call .write()?
[00:42] chapel: does ejs sanitize html included in a variable
[00:42] AAA_awright: Heh I should probably try this on the REPL
[00:42] tim_smart: var log = fs.createWriteStream('/tmp/log'); log.write('etc'); log.end()
[00:42] indexzero has joined the channel
[00:42] tjholowaychuk: chapel by default it escapes
[00:42] AAA_awright: kk thanks tjholowaychuk
[00:42] tjholowaychuk: <%= %>
[00:42] tjholowaychuk: escapes
[00:42] AAA_awright: bah
[00:42] AAA_awright: tim_smart: 
[00:42] chapel: okay
[00:42] tjholowaychuk: <%- foo %> doesnt
[00:43] chapel: sweet
[00:43] chapel: I guess I didn't catch that
[00:44] patrickjst has joined the channel
[00:45] bradleymeck has joined the channel
[00:50] jacobolus has joined the channel
[00:51] jaywastaken has joined the channel
[00:52] kzh has joined the channel
[00:53] jaywasta_ has joined the channel
[00:54] mikeal has joined the channel
[00:55] be4u has joined the channel
[00:57] Vertice has joined the channel
[00:57] tshpaper has joined the channel
[00:58] matyr_ has joined the channel
[00:58] bitwise has joined the channel
[00:58] pifantastic has joined the channel
[00:59] shiawuen has joined the channel
[01:01] justinTNT has joined the channel
[01:01] materialdesigner has joined the channel
[01:01] kzh: ACTION is trying to kill them tiny clouds.
[01:02] guest42343 has joined the channel
[01:04] indexzero has joined the channel
[01:08] _beau: yeah whats up with the topic URL?
[01:09] KingJamool has joined the channel
[01:09] tonymilne has joined the channel
[01:10] ParadoxQuine has joined the channel
[01:10] Marak: @estenh: I am enjoying Twitter this evening entirely too much, having just got into an actual 3 tweet convo with @NodeKohai, the Node.js bot.
[01:10] kohai has joined the channel
[01:10] unomi: perhaps despondancy over most people going "Node.js, awesome! Lets build a chat app!!11oneone"
[01:11] bentruyman has joined the channel
[01:12] Marak: I just did a reverse turing test on zedshaw, let's see if he passes. https://twitter.com/#!/NodeKohai/status/80441713113567233
[01:12] kersny:  _beau: ryah was at Norwegian Developers Conference a few days ago and was doing a demo (http://twitter.com/#!/ryah)
[01:15] stepheneb has joined the channel
[01:15] sth has joined the channel
[01:15] _beau: ah interesting
[01:16] _beau: woa wtf http://www.pubsub.io/s/docs.html
[01:16] kohai: @zedshaw: @NodeKohai Hmm, I thought I blocked you. Let me guess, you work at twitter and unblock yourself periodically.
[01:16] tbranyen: _beau: its pubsub?
[01:17] kohai: @maraksquires: @zedshaw @NodeKohai was trying out the ole reverse turing test on you. Did you think it was a bot response or human? :-D
[01:17] abraxas has joined the channel
[01:17] _beau: just never saw it :D
[01:17] unomi: Marak: whats with the zedshaw friction btw? 
[01:17] amerine has joined the channel
[01:18] kohai: @hnfirehose: Node.js gets name-spaced EventEmitter with EventEmitter2:  http://bit.ly/m0dcZP (link: http://thechangelog.com/post/6502909452/eventemitter2-namespaced-events-in-node-js-and-the)
[01:18] insin: man, zed is paranoid
[01:18] bentruyman has joined the channel
[01:18] tbranyen: zeds dead
[01:18] Marak: unomi: what friction?
[01:18] kzh: I have node question... https://gist.github.com/1024127
[01:18] tbranyen: its a chopper baby
[01:18] Marak: people take the internet too seriously
[01:18] _beau: lol
[01:19] _beau: agreed
[01:19] tbranyen: kzh: nope
[01:19] _beau: its all for the lulz
[01:19] tbranyen: kzh: each module has sandboxed natives
[01:19] tbranyen: kzh: return the math object from your module
[01:19] tbranyen: then using o.add
[01:19] tbranyen: use*
[01:19] unomi: mongrel2 looks pretty sexy, and seems a perfect fit for node.js btw, unless I am missing something
[01:20] kzh: exports = Math
[01:20] kzh: like that?
[01:20] unomi: though the whole: "work for the money, have fun on your free time" ethos is a bit of a shame
[01:20] tbranyen: kzh: module.exports = Math
[01:21] kzh: One other (last) question... What browser client side commonJS lib should I use?
[01:21] kzh: preferably one that does async require
[01:21] Swizec has joined the channel
[01:21] tjholowaychuk: ewWww
[01:21] tjholowaychuk: you should be bundling that up
[01:21] kzh: ewWww @ what?
[01:21] tjholowaychuk: async require
[01:22] tjholowaychuk: i guess it's fine in dev
[01:22] tbranyen: async require sucks
[01:22] tbranyen: def need a build step
[01:22] insin: ACTION just realised what the dhh/tj thing was about, reading a video attached to a blog post featuring one of the most douchey hipster hacker comments he's ever seen
[01:22] ben_alman: yay, i now have an npm module
[01:22] k1ttty has joined the channel
[01:22] ben_alman: i am supar special
[01:22] kzh: nobody likes yepnope?
[01:22] tbranyen: kzh: thats not what yepnope does particularly well...
[01:23] bitwise: how would you test if something is truthy in the repl? I tried -1 == true which returns false, but if( -1 ) will pass
[01:23] tbranyen: bitwise: -1 is truthy
[01:23] _beau: insin: links
[01:23] tbranyen: 0, null, undefined, '' and maybe one more thing are falsy
[01:23] MooGoo: .. !![]
[01:23] Calvin: 02true
[01:23] pyrony has joined the channel
[01:23] kzh: !!(-1) === true
[01:23] MooGoo: .. !!-1
[01:23] Calvin: 02true
[01:23] _beau: sup moo
[01:23] bitwise: ah
[01:23] bitwise: cool
[01:24] MooGoo: sup
[01:24] tbranyen: MooGoo: arrays are objects regardless if they are empty they will be truthy
[01:24] insin: _beau: http://blog.stevecoast.com/what-the-hell-is-happening-to-rails
[01:24] kzh: .. -1 + 1
[01:24] Calvin: 130
[01:24] hanzomon has left the channel
[01:24] kzh: thanks, Calvin.
[01:24] Calvin: thanks alot
[01:24] _beau: !insult Yo momma
[01:24] Calvin: Yo momma HATES TREES
[01:24] kzh: .. 1/0
[01:24] Calvin: 13Infinity
[01:24] kzh: .. console.log('die');
[01:24] Calvin: 03'die'
[01:24] Calvin: 14undefined
[01:24] ben_alman: tbranyen: null, undefined, 0, empty string, and NaN are falsy
[01:24] euforic has left the channel
[01:25] ben_alman: NaN != NaN
[01:25] tbranyen: NaN ha i knew i forgot one
[01:25] tim_smart:  /ignore Calvin me thinks
[01:25] Calvin: ignore the buffer after i've allocated the memory for that reason thinks
[01:25] ben_alman: and undefined == null while 0, empty string, and false are == each other
[01:25] tbranyen: tim_smart: you don't need to think that one :-p
[01:25] kzh: .. setInterval(function() {console.log('derp');}, 1000);
[01:25] Calvin: ReferenceError: setInterval is not defined
[01:25] tim_smart: tbranyen: I wanted to see his response
[01:25] bitwise: !!~('foo').indexOf('f')
[01:25] tbranyen: haha
[01:25] kzh: lol
[01:25] kohai: @arneldomingo: Finally got the coupon for #nodejs from #joyent
[01:26] tim_smart: tbranyen: It was not satisfactory so he is now ignored
[01:26] kzh: .. Math.PI
[01:26] Calvin: 133.141592653589793
[01:26] kzh: .. Date
[01:26] Calvin: [Function]
[01:26] kzh: .. setTimeout
[01:26] Calvin: ReferenceError: setTimeout is not defined
[01:26] tbranyen: hahaha
[01:26] tbranyen: owned Calvin, hope you're happy
[01:26] Calvin: you're misunderstanding how node is compiled for owned
[01:26] MooGoo: hm?
[01:27] _beau: that sounds like a good npm package
[01:27] _beau: 'owned'
[01:27] kohai: @NukulB: @amichaelwinter  It means move to Node.js and forget about J2EE
[01:27] isaacs: Calvin: are you making trouble again?
[01:27] Calvin: trouble with creating a bin folder someplace with node yet
[01:28] kzh: I made my first npm package today.
[01:28] isaacs: kzh: huzzah!
[01:28] kzh: It's kinda lame. rand
[01:28] kzh: rand utilities.
[01:28] isaacs: kzh: oh, ok.
[01:28] kzh: name: rand
[01:28] MooGoo: not as lame as my rm -rf / module
[01:28] isaacs: kzh: anything like my srand binding?
[01:28] kzh: I fucked up on the first two publishings.
[01:28] kzh: nope.
[01:28] isaacs: https://github.com/isaacs/node-srand#readme
[01:28] isaacs: oh, ok
[01:28] isaacs: what are rand utilities?
[01:29] kzh: It is like the python random module.
[01:29] MooGoo: yo yo
[01:29] kzh: rand.int
[01:29] kzh: rand.key
[01:29] isaacs: oic
[01:29] MooGoo: you guys know how to make a node/v8 extension that exposes the scope chain to javascript?
[01:29] isaacs: just wrappers around Math.random()
[01:29] isaacs: neat
[01:29] kzh: yeah.
[01:29] oatkiller has joined the channel
[01:29] kzh: I made it for a math quiz game for my neice.
[01:30] tmpvar: tim_smart, lulz. just saw your "pussy bacon" response. love it.
[01:30] isaacs: kzh: https://github.com/kaleb/js-rand/blob/master/rand.js#L113-117
[01:30] tbranyen: duck bacon is the best
[01:30] tim_smart: tmpvar: Home kill bacon ftw
[01:30] cloudhead has joined the channel
[01:30] piscisaureus has joined the channel
[01:30] isaacs: kzh: you know, Object.keys(obj).length is faster
[01:31] kzh: isaacs: rand from streams
[01:31] tim_smart: tmpvar: Benefits of living rural
[01:31] isaacs: kzh: or Object.keys(obj).forEach(function (key) { ... }) to iterate over them
[01:31] kzh: the algorithm is from knuth
[01:31] unomi: Marak: lol at blograge
[01:31] kzh: isaacs: see https://github.com/kaleb/js-rand/blob/master/rand.js#L124
[01:31] isaacs: oh, i guess you use that only when you don't have Object.keys :)
[01:32] kzh: yeah ;-)
[01:32] kzh: I am kind to the dinosaurs.
[01:32] isaacs: kzh: i'd recommend not exposing your privates on the exports object.
[01:32] isaacs: kzh: even with a _
[01:32] isaacs: kzh: you can just do `function key (obj) { ... }` and then if (!Object.keys) key(...)
[01:32] isaacs: kzh: vars and function decls are module-private by default.
[01:33] kzh: If somebody wants to touch my privates, they can.
[01:33] tbranyen: those are pubes not privates
[01:33] tbranyen: publics*
[01:33] isaacs: hehe
[01:33] isaacs: oh lordy, that one never gets old.
[01:33] kzh: btw, I hate jsdoc.
[01:33] dyer has joined the channel
[01:33] dyer has joined the channel
[01:33] tbranyen: my maturity level nevers get older either :-/
[01:34] isaacs: kzh: preach it, brother
[01:34] kzh: I want a doc string / markdown type doc generator that will also work with closure :-D
[01:34] kohai: @Nodester: We are excited to help sponsor the SoCal Node.JS meetup (http://is.gd/FLDgTo) on August 4th in LA. Everyone gets a free hosting coupon! (link: http://www.meetup.com/SoCal-Node-JS/)
[01:35] kzh: I am working on a lib to take the @exports tag and run doctests, though.
[01:35] tbranyen: kzh: i like natural docs, but it takes forever to style
[01:35] kohai: @dev_links: node.js using mustache.js for templating http://bit.ly/iApoJR (link: http://www.dzone.com/links/rss/nodejs_using_mustachejs_for_templating.html)
[01:35] ianward has joined the channel
[01:35] yenz: Anyone here prefer / using CouchDB over Mongo for their node projects?
[01:36] _beau: <3 mongo
[01:36] isaacs: yenz: <3 couchdb
[01:36] _beau: :D
[01:36] _beau: never learned couch, i feel nub
[01:36] bitwise: how can i debug with expresso?
[01:37] MooGoo: <3 sqlite
[01:37] deedubs has left the channel
[01:37] bitwise: (might be a node-wide question)
[01:37] tbranyen: MooGoo: yeah sqlite is nice and portable
[01:37] tbranyen: also interesting that libgit2 which had a waf based build system just switched to cmake
[01:37] MooGoo: no lumbering server needed
[01:38] MooGoo: wish it delt better with multiprocess writes
[01:38] yenz: isaacs: i'm trying really hard to <3 couchdb... but got-damn if it doesn't make you work for it
[01:39] MooGoo: I dont like the syntax for these NoSql's
[01:39] isaacs: yenz: in some ways.  really, though, you should go complain/request-help in #couchdb
[01:39] MooGoo: not that I like SQL either
[01:39] yenz: isaacs: way ahead of ya... ;)
[01:39] isaacs: yenz: map-reduce was hard to grok at first, and the docs for lesser used features in couchdb are not great.
[01:39] yenz: isaacs: just wondering what everyone else is up to, is all :)
[01:40] jerrysv has joined the channel
[01:40] chapel: isaacs: yeah, I agree
[01:40] chapel: but once you get it, map/reduce is nice
[01:40] yenz: isaacs: i actually for the most part like the couchdb "way" ... just that some of the surrounding support/project management seems lacking
[01:40] isaacs: chapel++
[01:40] v8bot:  isaacs has given a beer to chapel. chapel now has 9 beers.
[01:40] chapel: also, the docs, they lack
[01:40] yenz: the only major annoyance i have w/ couchdb from a functionality standpoint is the pagination "problem"
[01:40] jerrysv: i *heart* map/reduce
[01:41] yenz: chapel: the wiki is pretty good i find
[01:41] yenz: i'm just grumpy b/c i got burned attempting to upgrade to 1.1.0
[01:41] chapel: could be better, is all
[01:43] paul_k has joined the channel
[01:43] tmpvar: chapel, I'm not aware of that problem, can you explain?
[01:44] chapel: huh?
[01:44] tmpvar: pagination
[01:44] kohai: @stevestarges: node.js using mustache.js for templating: Using mustach.js to help with the templating for node.js. http://bit.ly/lm0CZS (link: http://www.dzone.com/links/rss/nodejs_using_mustachejs_for_templating.html)
[01:44] chapel: thats yenz
[01:44] yenz: ACTION waves
[01:44] tmpvar: oh shit, misread.. hi yenz!
[01:44] ryanmcgrath has joined the channel
[01:44] yenz: tmpvar: the issue of needing an exact startkey :)
[01:44] Vertice has joined the channel
[01:44] yenz: otherwise all you've got is skip/limit, which has to blow through every node before the start node
[01:45] tmpvar: resulting in a double query?
[01:45] yenz: or at least, that's the best i can find with a lot of googling/experimentation :)
[01:45] tmpvar: ah
[01:45] kohai: @proggitarticles: Node.js is Backwards: submitted by  mistawobin  [link] [1 comment] http://bit.ly/ixWPzt (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards?utm_source=twitterfeed&utm_medium=twitter)
[01:46] yenz: tmpvar: thanks for jsdom, btw :)
[01:46] tmpvar: yenz, thank the community :)
[01:47] tmpvar: community++
[01:47] v8bot:  tmpvar has given a beer to community. community now has 1 beers.
[01:48] yenz: so yeah, i could just be Totally Missing Something (wouldn't be at all surprised), but i haven't been able to discover any better / more efficient way to paginate couchdb results (?)
[01:50] davidwalsh has joined the channel
[01:51] devrim has joined the channel
[01:51] skm has joined the channel
[01:52] kohai: @ifandelse: Forget installing #nodejs under /opt.  #npm and #nave FOR THE WIN.  #HolyAwesomeVersionManagementBatman
[01:52] AntelopeSalad has joined the channel
[01:57] jscheel: hey guys, is anyone using cluster? I'm trying to get cluster working with monit, so should I be monitoring the master.pid?
[01:57] jimt has joined the channel
[01:58] tmpvar: SubStack, yo. can I DM?
[01:59] tbranyen: Dungeon master?
[01:59] tbranyen: nerdz...
[01:59] tmpvar: yes
[02:00] sean``` has joined the channel
[02:00] sean```: hi all - would there be a particular reason why nodejs will output to tty stdout fine, but when redirected to a file, it fails to output the results correctly?
[02:02] nibblebot has joined the channel
[02:03] tmpvar: sean```, we'll need more info
[02:03] fakewaffle has joined the channel
[02:04] fakewaffle: good evening
[02:04] tmpvar: yo
[02:05] febits has joined the channel
[02:06] sean```: http://pastebin.com/Z0HCKhAy
[02:07] oatkiller has joined the channel
[02:09] nannto has joined the channel
[02:09] mattstevens has joined the channel
[02:10] copongcopong has joined the channel
[02:11] kohai: @benslavin: "Node.js’s concurrency mechanisms are simply an approximation of Erlang’s." // Node.js is Backwards http://bit.ly/lGoywS (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[02:12] kohai: @davetroy: @benslavin Node.js is a scam. EventMachine, Libev, Erlang, et al predate it. Nothing new to see here.
[02:13] chilts: except JavaScript pre-dates Erlang
[02:14] ebryn has joined the channel
[02:14] dgathright has joined the channel
[02:15] brettgoulder has joined the channel
[02:15] chilts: or maybe not, who cares, I like node :)
[02:15] ezl has joined the channel
[02:17] shiawuen has joined the channel
[02:18] kawaz has joined the channel
[02:18] jslatts_ has joined the channel
[02:19] shiawuen_ has joined the channel
[02:19] justinTNT: hey fw
[02:21] kohai: @chris_ys: @sofish 阿姨, 我这用那 vps 很悲剧, apache 和 ssh 爆慢, 但是 node.js 很快
[02:23] kawaz has joined the channel
[02:24] SubStack: tmpvar: moo?
[02:24] MrWarGames has joined the channel
[02:25] kohai: @pedroreys: @roniuj @gridlockd e o webos roda node.js nativo, amigos.
[02:27] kzh: kohai: bot?
[02:27] shajith_ has joined the channel
[02:27] dgathright has joined the channel
[02:27] MooGoo: kohai is a dedicated ircer
[02:28] dyer has joined the channel
[02:28] dyer has joined the channel
[02:29] kzh: ..
[02:29] Calvin: 14undefined
[02:29] kzh: .. typeof typeof void
[02:29] Calvin: SyntaxError: Unexpected end of input
[02:29] kohai: @benslavin: @davetroy I am smiten with Erlang, but Node.js opens up the power of select(2) to the masses. Still undecided about Javascript Everywhere™
[02:29] tbranyen: kzh lol that crashes my chrome
[02:30] cha0s has joined the channel
[02:30] cha0s has joined the channel
[02:30] kohai: @TopHackerNews: Node.js is Backwards http://bit.ly/jGKnqw http://ff.im/-FGvIZ (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[02:30] kzh: tbranyen: What?
[02:30] jtsnow has joined the channel
[02:30] gavin_huang has joined the channel
[02:30] jacter has joined the channel
[02:30] kzh: tbranyen: Is Calvin your bot?
[02:30] Calvin: tbranyen too bad they've gone the route , otherwise , its awful to look at it
[02:31] tbranyen: kzh: no...
[02:31] tbranyen: but typeof typeof in general seems to be a bad thing to try
[02:31] kzh: Yeah... I was just trying to see what Calvin would do.
[02:31] kzh: .. typeof typeof void 0
[02:31] Calvin: 03'string'
[02:32] MooGoo: wtf
[02:32] MooGoo: .. void 0
[02:32] Calvin: 14undefined
[02:32] kzh: .. typeof void typeof 'moo'
[02:32] Calvin: 03'undefined'
[02:32] MooGoo: hm
[02:32] MooGoo: fuckinv void
[02:32] MrWarGames has joined the channel
[02:32] oatkiller has joined the channel
[02:33] kzh: .. typeof ({hello: 'world'}).world
[02:33] Calvin: 03'undefined'
[02:33] Emmanuel__ has joined the channel
[02:34] jerrysv: tmpvar: speaking of jsdom ...
[02:34] kohai: @chris_ys: @sofish 你咋会想到我老婆... 重点是他人在美国上我 blog 也慢哇... 我 ssh 也慢... 就不知道为啥 node.js 很快, html 不知道
[02:34] kzh: .. typeof ({undefined: 'variables are'})[typeof what]
[02:34] Calvin: 03'string'
[02:35] jerrysv: v8: typeof /a/
[02:35] v8bot: jerrysv: "function"
[02:35] MooGoo: what exactly are you trying to do...
[02:35] kzh: .. typeof /a/
[02:35] Calvin: 03'function'
[02:35] dgathright has joined the channel
[02:35] kzh: LOL
[02:35] MooGoo: its true
[02:35] jerrysv: it really is
[02:35] kzh: I just never thought of it.
[02:35] MooGoo: /dude/('dudeman')
[02:35] kzh: .. typeof []
[02:35] Calvin: 03'object'
[02:35] MooGoo: .. /dude/('dudeman')
[02:35] Calvin: [ 03'dude' ]
[02:36] boehm has joined the channel
[02:36] kzh: .. require
[02:36] Calvin: ReferenceError: require is not defined
[02:36] jerrysv: v8: f=function(s){a={};while(b=/[.]/g(s))a[b[0]]?a[b[0]]++:a[b[0]]=1;return a;}; f('ababa');
[02:36] v8bot: jerrysv: {}
[02:37] jerrysv: huh, that's not right
[02:37] kzh: .. f=function(s){a={};while(b=/[.]/g(s))a[b[0]]?a[b[0]]++:a[b[0]]=1;return a;}; f('ababa');
[02:37] Calvin: {}
[02:37] jerrysv: v8: (function(s){a={};while(b=/[.]/g(s))a[b[0]]?a[b[0]]++:a[b[0]]=1;return a;})('ababa');
[02:37] v8bot: jerrysv: {}
[02:38] kohai: @steel_thread: NodeJS - From “Yea Right” to “Hell Ya”. A bit of an intro to the framework and how I'm using it in production.  http://t.co/Lgc0D6I #nodejs (link: http://seanmcdaniel.tumblr.com/post/6360548055/from-yea-right-to-hell-ya)
[02:38] kzh: .. f=function(s){a={};while(b=/[.]/g(s))a[b[0]]?a[b[0]]++:a[b[0]]=1;return a;}; f('ababa') + ''
[02:38] Calvin: 03'[object Object]'
[02:39] jerrysv: i screwed up my regex
[02:39] jerrysv: hold on
[02:40] MooGoo: .. f=function(s){a={};while(b=/./g(s))a[b[0]]?a[b[0]]++:a[b[0]]=1;return a;}; f('ababa')
[02:40] Calvin: Error: Timeout
[02:41] kohai: @mikeal: LA got itself a node.js meetup! http://t.co/eGeZbh3 (link: http://www.meetup.com/SoCal-Node-JS)
[02:42] sechrist has joined the channel
[02:43] jamescarr has joined the channel
[02:44] kzh: .. http://nodejs.org
[02:44] Calvin: SyntaxError: Unexpected end of input
[02:45] JasonSmith has joined the channel
[02:45] mykul has joined the channel
[02:45] JasonSmith: jerrysv: I heard you were looking for me about Iris Couch
[02:46] oatkiller has joined the channel
[02:46] yokoe has joined the channel
[02:47] kzh: .. [0] == false
[02:47] Calvin: 02true
[02:47] idefine has left the channel
[02:49] patrickjst has joined the channel
[02:49] matyr has joined the channel
[02:50] andrewfff has joined the channel
[02:57] ion- has joined the channel
[02:57] andrewfff has joined the channel
[02:57] jerrysv: jasonsmith: not about iris couch, was just trying to remember your name so i could follow you on twitter, etc
[02:58] jerrysv: jasonsmith: have hooked up with almost everyone else that i had breakfast with :)
[02:58] edude03 has joined the channel
[03:00] JakeyChan has joined the channel
[03:01] kohai: @mitechie: Sweet, have node.js server fetching content for the #bookie server to parse into the readable content for bookmarks. much faster
[03:02] pyrony has joined the channel
[03:04] iammerrick has joined the channel
[03:04] harth has joined the channel
[03:05] themiddleman has joined the channel
[03:05] iammerrick: Can someone point me to a good resource on Promise()'s
[03:05] jerrysv: v8: (function(s){a={};c=/./g;while(b=c(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;})('ababacadab');
[03:05] v8bot: jerrysv: {a:5,b:3,c:1,d:1}
[03:06] jerrysv: .. function(s){a={};c=/./g;while(b=c(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;}
[03:06] Calvin: SyntaxError: Unexpected token (
[03:06] MrsWarGames1 has joined the channel
[03:06] jerrysv: ..(function(s){a={};c=/./g;while(b=c(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;})('ababacadab');
[03:06] Skola has joined the channel
[03:06] jerrysv: .. (function(s){a={};c=/./g;while(b=c(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;})('ababacadab');
[03:06] Calvin: { a: 135, b: 133, c: 131, d: 131 }
[03:07] jerrysv: booya, though i shouldn't have needed to do that
[03:07] davidascher has joined the channel
[03:07] MooGoo: ?
[03:07] jerrysv: moogoo: move the regex to an assignment
[03:07] MrsWarGames has joined the channel
[03:08] jerrysv: c=/./g;
[03:08] MooGoo: its recreating the regex object each time otherwise
[03:08] Yuffster has joined the channel
[03:09] dipser has joined the channel
[03:09] MooGoo: or at least reseting it
[03:09] jerrysv: moogoo: but it was working before in that context, which is the weird part for me
[03:10] jerrysv: and no matches were happening
[03:10] kohai: @hermanjunge: I have some ideas for the #hookio automats :D  (Piled High and Deeper) #nodejs in action
[03:10] jerrysv: while(b=/./g('abc')) wasn't running
[03:10] jerrysv: er, was nooping
[03:10] MooGoo: .. (function(s){a={};while(b=/./g(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;})('ababacadab'); 
[03:10] Calvin: Error: Timeout
[03:11] MooGoo: .. (function(s){a={};while(b=/./g.exec(s))a[b[0]]?a[b[0]]++:a[b[0]] = 1;return a;})('ababacadab'); 
[03:11] Calvin: Error: Timeout
[03:12] jerrysv: hm.
[03:14] kohai: @buckleysangel: Node.js is for droopy-drawered PHP developers who need another hinge in their crutch #bigmistake
[03:14] cha0s has joined the channel
[03:14] cha0s has joined the channel
[03:15] jerrysv: haha. that's a nice one
[03:15] erictj has joined the channel
[03:18] broofa has joined the channel
[03:18] tshpaper has joined the channel
[03:20] sean``` has left the channel
[03:21] yozgrahame has joined the channel
[03:22] bradleymeck has joined the channel
[03:22] dgathright has joined the channel
[03:26] newy_ has joined the channel
[03:26] Corren has joined the channel
[03:27] jamescarr has joined the channel
[03:28] fakewaffle has joined the channel
[03:31] dgathright has joined the channel
[03:32] jamescarr: any mongoose users lurking?
[03:32] JasonSmith has left the channel
[03:33] jamescarr: anyway to do something like Lead.removeAll() ?
[03:37] matwill has joined the channel
[03:39] tonymilne: Peeps, what are your thoughts on something like node-cron - which runs an interval every second? Is this ok, because of the non-blocking async nature of node? Or is it still a bit lame? 
[03:40] jslatts_: why would it be lame?
[03:42] kohai: @corbanb: Trying out #nave tonight: http://j.mp/kCyIga It's a #nodejs #virtualenv which is nice for testing legacy projects. (link: https://github.com/shinout/nave)
[03:42] tonymilne: just that it's running every second.
[03:42] jslatts_: but if you have the need to run something once per second how else would you do it?
[03:42] jslatts_: or am i missing your gist
[03:42] srid has joined the channel
[03:42] jerrysv: tonymilne: what happens if something run blocks for more than a second?
[03:43] srid has joined the channel
[03:43] tonymilne: jamescarr: Does Lead.remove({}); do it for ya?
[03:43] tk has joined the channel
[03:43] tonymilne: jerrysv: not sure, I'm just looking into using this module.
[03:43] kriskowal has joined the channel
[03:43] tonymilne: I'd imagine you might want to spawn a process and run some heavy stuff in there.
[03:44] jslatts_: tonymilne: I would say it is lame if you use the 1-second check to avoid figuring out how to do something w/ callbacks
[03:45] tonymilne: Maybe try this as an example: I want to publish something in the future on 2pm on Wednesday ... and i have other things to publish at random other times too.  
[03:45] ryanfitz has joined the channel
[03:46] tonymilne: So i schedule something to periodically check if there are anything pending to publish. I don't just want to have a published date in  my db and query my way around it. I actually want to have a piece of code that runs upon publishing etc.
[03:46] jslatts_: that seems reasonable to me then
[03:46] tonymilne: Yeah, the thing i found maybe lame, was that if i am scheduling to run 1 per hour or only once a day - it is checking every second if its that time yet.
[03:47] tonymilne: Surely, you could schedule larger intervals, or is it that it just doesnt matter that it's running every second?
[03:47] jerrysv: tonymilne: why not just a setInterval() for some discrete time period ?
[03:47] jerrysv: every second is a little much :)
[03:47] tonymilne: jerrysv: yeah, so that's ok - except if i kill my app,
[03:47] tonymilne: where'd the interval go?
[03:47] matyr_ has joined the channel
[03:47] jerrysv: when you restart your app, the first setInterval() run will pick up any stragglers
[03:48] tonymilne: Yeah, possibly something like that could be neat, but i think a little more fragile.
[03:49] jerrysv: i would disagree, as long as your check checks for anything that is overdue and publishes it
[03:49] kohai: @jodooshi: NODE.JS IS BACKWARDS? http://t.co/0VxCz7a by @ankrgyl (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[03:49] jerrysv: kohai: i am working on fixing you now.
[03:50] jslatts_: tonymilne: if you consider that node is an event loop that checks constantly for the next event, seems like checking for a pending date once per second isn't too much OH
[03:50] perezd has joined the channel
[03:50] jerrysv: jslatts_: depends on how many records you need to search through, and what mechanism you're using
[03:50] jslatts_: It will be O(n) though
[03:51] jslatts_: jerrysv: yes. But I think the jobs themselves will be the bigger concern in terms of runtime
[03:51] jerrysv: exactly, so why run so often?
[03:51] tonymilne: the thing running often is just saying:
[03:51] tonymilne: is it time to run the job
[03:52] tonymilne: not actually running the job and seeing if anything needed operating on.
[03:52] jslatts_: jerrysv: i would detune unless ~1 sec accuracy is very important
[03:52] tonymilne: yeah, I think I will detune cron to 1 minute.
[03:52] tonymilne: and then run my job every 5 minutes. 
[03:52] jerrysv: me too. even in publishing 1 second is a little too much
[03:52] tonymilne: or less frequently.
[03:52] jerrysv: i think we run every 20 minutes
[03:53] tonymilne: cool, thanks lads for the pep talk ;) coding time.
[03:53] jslatts_: ACTION is trying to code and watch F1 at the same time. Not working
[03:53] jerrysv: tonymilne: happy coding
[03:53] jerrysv: jslatts_: i'm trying to code, watch sarah jane adventures, and drink at the same time
[03:54] jslatts_: jerrysv: yes, I didn't mention the drinking b/c it is assumed :)
[03:54] jerrysv: jslatts_: no comment :)
[03:54] jslatts_: coding w/o a beer is like real work
[03:56] tbranyen: i can't drink and code
[03:56] tbranyen: doesn't work well
[03:57] jerrysv: i wrote my first interpreted language with a bottle of vodka, and a depeche mode cd
[03:57] jerrysv: back in ... um ...
[03:57] igl has joined the channel
[03:57] jslatts_: heh
[03:57] tbranyen: depeche mode fuck yea
[03:57] jerrysv: 91?
[03:57] Bogh has joined the channel
[03:57] tbranyen: that cancels out the booze
[03:57] jerrysv: tbranyen: hahaha. i didn't realize until the next morning that it had been on repeat the whole night
[03:59] srid has joined the channel
[03:59] srid has joined the channel
[03:59] MrsWarGames has left the channel
[04:00] hermanjunge has joined the channel
[04:00] X-Scale has left the channel
[04:00] hermanjunge: Expressjs: Best practice to destroy and create a new sesion in one or two lines??
[04:01] meso_ has joined the channel
[04:01] saschagehlich has joined the channel
[04:02] patrickarlt has joined the channel
[04:02] Zelest has joined the channel
[04:02] Zelest has joined the channel
[04:06] aheckmann has joined the channel
[04:09] AvianFlu has joined the channel
[04:09] jamescarr: charlie!
[04:11] AvianFlu has joined the channel
[04:13] oatkiller has joined the channel
[04:14] jacobolus has joined the channel
[04:14] matjas has joined the channel
[04:16] kohai: @jatorre: @javisantana if you are thinking in node.js check out Bones http://bit.ly/mpimcr to share code between server and client (link: https://github.com/developmentseed/bones/wiki)
[04:21] neoesque has joined the channel
[04:23] unlink has joined the channel
[04:23] unlink has joined the channel
[04:24] Aria has joined the channel
[04:24] pplante has joined the channel
[04:28] matyr has joined the channel
[04:28] kohai: @jsjohnst: @dong1225 a specific very awesome and popular node.js hosting provider runs all their VMs on Solaris... ;)
[04:29] jerrysv: marak: you around?
[04:30] ballantyne has joined the channel
[04:31] bradleymeck has left the channel
[04:31] Emmanuel__ has joined the channel
[04:32] kohai: @buckleysangel: "Let's watch this Node.js Peepcode, bro" (last words of a dead faggot)
[04:35] mykul has joined the channel
[04:37] clee has joined the channel
[04:38] brownies has joined the channel
[04:39] shajith_ has joined the channel
[04:40] pifantastic has joined the channel
[04:42] kohai: @tramchamploo: Node.js 究竟是什么 - 讨论区 - 开源中国社区 http://bit.ly/jDWgyq (link: http://www.oschina.net/question/129540_21801)
[04:42] burrito has joined the channel
[04:43] meso_ has joined the channel
[04:43] jmoyers has joined the channel
[04:44] kohai: @indexzero: If you open an issue on an open source #nodejs project save some time: include the version of npm, node, and the library you're using
[04:46] chbrown has joined the channel
[04:46] Tobsn has joined the channel
[04:47] matjas has joined the channel
[04:48] skm has joined the channel
[04:54] sreeix has joined the channel
[04:55] davidascher has joined the channel
[04:55] tilgovi has joined the channel
[05:00] admc has joined the channel
[05:00] harth has joined the channel
[05:02] kohai: @robmerrell: As someone who has actually used Erlang in a large project I don't think Erlang and Node.js solve the same kinds of problems.
[05:03] Wizek has joined the channel
[05:05] kohai: @robmerrell: The Erlang community needs to chill out and let Node.js grow into its own niche. Different programming models, different use cases.
[05:07] leahculver has joined the channel
[05:09] AvianFlu has joined the channel
[05:11] paznicul has joined the channel
[05:11] hdon- has joined the channel
[05:13] Lorentz: Erlang's just mad it's not popular
[05:13] unomi: hehe
[05:13] guest42343 has joined the channel
[05:14] cconstantine_ has joined the channel
[05:17] Aria: Plus, node's runtime isn't horribly terribly so weird by unix standards.
[05:17] Aria: Node doesnt' feel like it was built by a telco
[05:18] kohai: @adnanrashidar: Working on Node.js and MongoDB http://t.co/108Gwel (link: http://www.slideshare.net/ggoodale/getting-started-with-mongodb-and-nodejs)
[05:19] Skola has joined the channel
[05:22] Xano has joined the channel
[05:23] kohai: @alvarez_tomas: Tengo que dejar de pensar: "Me encantaría agregar X" al momento de acostarme y hacer push de una vez #github #nodejs #nodecv U_U
[05:24] kohai: @varunkumar: Node.js From the Enterprise Java Perspective http://goo.gl/fb/JJm0u (link: http://feeds.feedburner.com/~r/varunkumar/reader/~3/l5aeMf8O6Do/?utm_source=feedburner&utm_medium=twitter&utm_campaign=varunkumar)
[05:26] mendel_ has joined the channel
[05:27] guest42343 has joined the channel
[05:28] tim_smart: Node actually feels very unixy
[05:28] tim_smart: The whole piping concept etc
[05:28] framlin: yeah, feeling unixy rocks ;)
[05:29] stride: it sometimes feels mac-cy with all the html5 unicorns around
[05:29] stride: :>
[05:30] tim_smart: I have never seens a html5 unicorn while hacking on node. I am on a linux machine though...
[05:30] framlin: and  .... best of all ... it feels like JavaScript ;)
[05:32] fangel has joined the channel
[05:32] kohai: @gwtstuff: #GWT gwt-node - Complete node.js implementation in GWT http://bit.ly/meTv4L (link: https://github.com/cretz/gwt-node)
[05:34] matjas has joined the channel
[05:35] isaacs has joined the channel
[05:37] matyr has joined the channel
[05:38] dgathright has joined the channel
[05:40] saurabhverma has joined the channel
[05:41] dguttman has joined the channel
[05:41] Sidnicious has joined the channel
[05:42] yogurt_truck has joined the channel
[05:42] harth has joined the channel
[05:42] masylum has joined the channel
[05:42] donaldpcook has joined the channel
[05:43] matyr_ has joined the channel
[05:45] matyr_ has joined the channel
[05:46] frewsxcv has joined the channel
[05:46] ngs has joined the channel
[05:46] ph^ has joined the channel
[05:46] coderendezvous has joined the channel
[05:47] frewsxcv: i'm looking to store stock information (which are in json). what would be the best database to use? i originally thought mongo/couch since it works great with json, but i heard redis is much faster
[05:47] brettgoulder has joined the channel
[05:48] sgimeno has joined the channel
[05:49] yozgrahame has joined the channel
[05:49] harth has joined the channel
[05:51] kohai: @DamonOehlman: @nambor There's a bit of cleaning going on :( Thankfully my work in progress #nodejs xmlslicer (http://t.co/mDu6qFR) helps... (link: https://github.com/DamonOehlman/xmlslicer)
[05:55] Xano has joined the channel
[05:55] kohai: @reddit_prog_hot: Node.js is Backwards http://bit.ly/jG6aVL http://bit.ly/itxILF [6 comments] (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[05:57] Shinuza has joined the channel
[06:02] brownies has joined the channel
[06:05] kohai: @rohan_p: Going for a beer with one of the core node.js devs tonight. Not for work reasons, but because we have a shared interest. In beer. #tw
[06:07] Aria: Mmm, beer.
[06:10] replaca has joined the channel
[06:11] kohai: @nephics: hook.io, a distributed node.js event emitter. http://t.co/dfXZECz #notErlang (link: https://github.com/Marak/hook.io)
[06:11] AvianFlu has joined the channel
[06:12] tahu has joined the channel
[06:15] hassox has joined the channel
[06:19] simenbrekken has joined the channel
[06:21] __doc__ has joined the channel
[06:23] kohai: @underbluewaters: Scoping out potential toy projects to learn node.js & socket.io. Thinking about a "python ./manage.py shell" replacement, but web based.
[06:27] kohai: @amanelis: @warmwaffle, check this game out via #nodejs http://bit.ly/mQRYJe (link: https://github.com/dhoelzgen/snake)
[06:27] kohai: @euforic: Node.Js video tutorial - Node.js video tutorial now available on O’Reilly oreil.ly/gaMsmw http://tumblr.com/xjk2zqpj4e
[06:28] kohai: @euforic: Learning Node.js Series Become a Node.js Pro - Here is a great series on learning node.js I used a lot of... http://tumblr.com/xjk2zqpmyr
[06:28] kohai: @euforic: No more excuses: Try Node.js for $0.02 or less in just a few minutes No more excuses: - Try Node.js for... http://tumblr.com/xjk2zqpr6u
[06:28] kohai: @euforic: HTML to Jade Converter Node.js Express - Got a great template, but you really want to use jade then here is... http://tumblr.com/xjk2zqpukj
[06:29] AvianFlu has joined the channel
[06:30] kmiyashiro has joined the channel
[06:31] bosphorus has joined the channel
[06:31] tim_smart: frewsxcv: Mongo is pretty quick
[06:31] kmiyashiro has joined the channel
[06:31] NetRoY has joined the channel
[06:36] butu5 has joined the channel
[06:36] butu5: building node.js in cygwin.. configure successful failed in make
[06:37] matjas has joined the channel
[06:37] butu5: ccessors.cc
[06:37] butu5: g++: no input files
[06:37] butu5: sh: ./tmp/node/deps/v8/src: No such file or directory
[06:37] butu5: scons: *** [obj/release/accessors.o] Error 127
[06:37] butu5: scons: building terminated because of errors.
[06:37] butu5: Waf: Leaving directory `/cygdrive/c/home;./tmp/node/build'
[06:37] butu5: Build failed:  -> task failed (err #2):
[06:37] butu5:         {task: libv8.a SConstruct -> libv8.a}
[06:37] butu5: make: *** [program] Error 1
[06:37] butu5: I am following https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-(Windows)
[06:37] Bonuspunkt: butu5 node version?
[06:38] butu5: latest
[06:38] butu5: v.4.80.4.8
[06:38] butu5: sorry
[06:38] butu5: v0.4.8
[06:40] butu5: any idea? I m trying now with v0.4.7 hope it will work
[06:40] pietern has joined the channel
[06:40] kohai: @thelynchpin_: Dying to use node.js in my tiny web app but dunno where to start ? Will try to study some howtonode tuts and see if that helps.
[06:41] jbpros has joined the channel
[06:41] Bonuspunkt: no, worked like at charm for me - u have gcc4-g++ installed / it wont compile with gcc-g++
[06:42] jacter has joined the channel
[06:43] lackac has joined the channel
[06:43] butu5: ok then trying to install again
[06:43] gozala has joined the channel
[06:44] xSmurf has left the channel
[06:45] tk has joined the channel
[06:47] HerrTopf has joined the channel
[06:50] tonymilne: Does anyone use cluster and mongoose?
[06:50] kohai: @pandalog: EventEmitter2 - Namespaced events in Node.js and the Browser http://t.co/eruH4Li (link: http://thechangelog.com/post/6505651372/eventemitter2-namespaced-events-in-node-js-and-the)
[06:50] `3rdEden has joined the channel
[06:50] groom has joined the channel
[06:52] Yoric has joined the channel
[06:52] ph^ has joined the channel
[06:53] jakeg has joined the channel
[06:53] Skola has joined the channel
[06:54] jacter1 has joined the channel
[06:54] viz has joined the channel
[06:55] hellp has joined the channel
[06:55] mykul has joined the channel
[06:56] pplante has joined the channel
[06:57] jspiros has joined the channel
[06:57] jeremyselier has joined the channel
[06:58] MonsieurLu has joined the channel
[06:58] JoESanche_z has joined the channel
[06:58] MonsieurLu has left the channel
[07:01] kohai: @mathemagie: Kinect talking to Flash via Node.js http://t.co/sTOAYsV via @make #node.js (link: http://blog.makezine.com/archive/2011/01/kinect-talking-to-flash-via-nodejs.html)
[07:02] butu5: Bonuspunkt: I tried installing gcc4-g++ but still same issue
[07:02] butu5: how to check which compiler it is taking
[07:03] simenbrekken has joined the channel
[07:03] kohai: @thisiskwarc: [uniknotions.com] YouTube        - Introduction to Node.js with Ryan Dahl‏: Node.js is a system for building n... http://bit.ly/m6pmz9 (link: http://uniknotions.com/url/?id=104010)
[07:04] JoshC1 has joined the channel
[07:04] Bonuspunkt: g++ -v
[07:05] butu5: Configured with: /gnu/gcc/releases/respins/4.3.4-4/gcc4-4.3.4-4/src/gcc-4.3.4
[07:05] butu5: gcc version 4.3.4 20090804 (release) 1 (GCC)
[07:05] dgathright has joined the channel
[07:05] butu5: looks ok?
[07:05] jspiros has joined the channel
[07:05] fangel has joined the channel
[07:06] Bonuspunkt: yes
[07:06] emattias has joined the channel
[07:06] AvianFlu has joined the channel
[07:07] butu5: any other issue?
[07:07] butu5: working with windows only wasting of time
[07:08] butu5: actually i do dev on mac@home..
[07:08] butu5: never ever found this kind of stupid issue
[07:08] Bonuspunkt: want to do any special? if u just need the node binary u could downloat it at http://node-js.prcn.co.cc/
[07:08] butu5: I did that
[07:08] butu5: it went fine
[07:09] newy has joined the channel
[07:09] butu5: but again can I install npm?
[07:09] woot130803534312 has joined the channel
[07:09] butu5: it causes issues with npm and installing other modules
[07:09] isaacs: butu5: what's this?
[07:10] butu5: first node installed fine with the binary but had some issue with npm... (tried long back) don't remember now.. will do a quick installation again
[07:10] topaxi has joined the channel
[07:11] isaacs: ok.  good luck.  ask for help if you can't get unstuck.
[07:11] isaacs: good night
[07:11] butu5: isaacs: Thanks
[07:11] butu5: so any problem using binaries
[07:11] butu5: rather than going through cygwin route
[07:13] STUPIDWIFI has joined the channel
[07:16] DelvarWorld has joined the channel
[07:16] DelvarWorld: is Ahola the javascript editor that i want?
[07:19] tolaine has joined the channel
[07:19] S1kx has joined the channel
[07:20] framlin: no, you want eclipse ;)
[07:21] _jgr has joined the channel
[07:21] DelvarWorld: I mean the editor written in javascript
[07:21] DelvarWorld: for editing javascript it's obviously vim
[07:22] MonsieurLu has joined the channel
[07:22] DelvarWorld: (or emacs)
[07:22] MonsieurLu has left the channel
[07:23] RC1140 has joined the channel
[07:25] hdon- has joined the channel
[07:26] Shinuza: DelvarWorld: Kod has some node in it 
[07:26] davidbanham: Anybody know of a ticketing/project management system implemented in node? I like Redmine, but I don't use Ruby anywhere else in my shop.
[07:26] davidbanham: Shinuza: I really like Kod, but development on it seems to have stalled.
[07:26] tonymilne: Or this? http://cloud9ide.com
[07:27] DelvarWorld: no no no I mean like a javascript editor for editing rich text areas
[07:27] leoherrick has joined the channel
[07:27] Shinuza: davidbanham: yes, there's so much missing as well
[07:27] jetienne has joined the channel
[07:27] DelvarWorld: if it's not vim I do not want to edit javascript code in it
[07:27] Shinuza: DelvarWorld: WYM is ok I guess
[07:28] DelvarWorld: I did see that. kinda bulky
[07:28] jetienne: DelvarWorld: dd is best
[07:28] bergie has joined the channel
[07:29] davidbanham: DelvarWorld: http://ace.ajax.org/ ?
[07:29] msucan has joined the channel
[07:29] tonymilne: davidbanham: I am in the exact same boat. Keep me posted if you hear of anything. ;)
[07:30] DelvarWorld: not a code editor
[07:30] SvenDowideit has joined the channel
[07:30] davidbanham: tonymilne: Will do! I can't see anything out there, though, and I've got a bit too much on my plate at the moment to get tempted to roll something myself.
[07:30] vikstrous has joined the channel
[07:31] tonymilne: davidbanham: Sooner or later, i probably will! :)
[07:31] jetienne: DelvarWorld: dd is a code editor
[07:32] jetienne: davidbanham: dd /dev/kmem nothing can beat that
[07:32] DelvarWorld: no, I'm not looking for a code editor
[07:32] davidbanham: tonymilne: In that case, give me a shout when you finally cave in!
[07:33] romanb has joined the channel
[07:33] kohai: @DaleJefferson: Loving learning #nodejs Async is the future.
[07:34] Shinuza1 has joined the channel
[07:35] [AD]Turbo has joined the channel
[07:36] [AD]Turbo: yo all
[07:37] MrMonster has joined the channel
[07:37] MrMonster: Hey Guys. Anybody have any experience with the node-http-proxy module?
[07:37] kohai: @delicious50: Felix's Node.js Beginners Guide http://bit.ly/jRCrSm (link: http://nodeguide.com/beginner.html)
[07:37] herbySk has joined the channel
[07:38] uchuff has joined the channel
[07:39] mvta has joined the channel
[07:39] ShreeKavi has joined the channel
[07:40] framlin: DelvarWorld: are you looking fpr something like that: http://ckeditor.com/ ?
[07:41] matyr has joined the channel
[07:41] DelvarWorld: no, I'm really looking for something more like http://www.aloha-editor.org/about.php
[07:41] unomi: Aloha is slick
[07:42] DelvarWorld: where you can edit text on your web page so that it will look exactly like it does in the editor - no bulky editor changing the layout of your page
[07:42] unomi: sadly it is not quite there yet, at least last I checked
[07:42] butu5: DelvarWorld: try which ever editor finally everyone going to stick with vim or emacs :)
[07:42] framlin: it think thats like the ckeditor, isnt it?
[07:42] DelvarWorld: ckeditor is kind of a beast
[07:42] mscdex: Calvin: javascript
[07:42] mscdex: oops, forgot
[07:43] mscdex: MooGoo: calvin is broken? :(
[07:43] unomi: ckeditor is oldschool
[07:43] DelvarWorld: I used ck editor when it was fuckeditor
[07:43] DelvarWorld: overkill
[07:44] unomi: DelvarWorld: well, what isn't working for you with Aloha?
[07:44] DelvarWorld: haven't tried implementing it yet, just didn't know if there was anything else out there along the same seamless editor variety
[07:44] unomi: Not that I have seen
[07:45] __jgr has joined the channel
[07:45] unomi: the contentEditable feature brings that to 'modern' browsers, but you will need something Aloha if you want to work with less capable ones
[07:46] unomi: something *like
[07:46] framlin: DelvarWorld: the only other editor of that kind I know is http://tinymce.moxiecode.com/ but this may be overkill for you, too ...
[07:46] DelvarWorld: yeah, tiny/ckeditor are too big for what I want
[07:46] matyr_ has joined the channel
[07:46] DelvarWorld: at least, so far
[07:46] framlin: ;)
[07:47] kohai: @morgancheng: Node.js的API曾经使用Promise这种异步模式，后来经过激烈争吵之后，还是改为用最原始的callback模式。callback最土，但是也最容易看懂，我看其他的异步模式都有点吃力。 #nodejs #async
[07:48] mehlah has joined the channel
[07:49] gozala has joined the channel
[07:50] unlink has joined the channel
[07:51] mc_greeny has joined the channel
[07:52] kohai: @loic_d: Express NodeJS - Un framework web MVC dédié à Node.js http://t.co/kSRXetT #node.js (link: http://www.lafermeduweb.net/billet/express-nodejs-un-framework-web-mvc-dedie-a-node-js-1129.html)
[07:54] DelvarWorld has joined the channel
[07:55] framlin: does anybody know a counterpart to  node-xml2js? I want to manipulate the output-json of xml2js and than to store it back into its xml-file
[07:55] kohai: @kewah: node.js using mustache.js for templating http://ow.ly/5h7sM #nodejs #mustachejs (link: http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/node-js-using-mustache-js)
[07:56] saurabhverma has joined the channel
[07:56] matyr has joined the channel
[07:56] robhawkes has joined the channel
[07:57] rudebwoy has joined the channel
[07:59] swistak has joined the channel
[07:59] kohai: @rmat0n: @loic_d un must-have framework ! très simple mais très puissant, un petit article pour compléter http://bit.ly/9AsqlP #nodejs #express (link: http://howtonode.org/express-mongodb)
[08:00] jakeg has joined the channel
[08:01] kohai: @FurqanR: the more i play with #nodejs the more im itching to get it into some of our stack. #patience
[08:01] Marak has joined the channel
[08:01] Marak: http://i.imgur.com/pYCZn.png
[08:01] Marak: cant sleep, vcs will shoot me
[08:05] markwubben has joined the channel
[08:05] aliem has joined the channel
[08:06] tahu has joined the channel
[08:07] bibac has joined the channel
[08:09] michaelhartau has joined the channel
[08:10] MrsWarGames1 has joined the channel
[08:12] tuhoojabotti: Morning
[08:12] Shinuza1: yop
[08:12] tuhoojabotti: Marak: Nice deleted photo. :3
[08:12] tuhoojabotti: oh wait
[08:12] tuhoojabotti: failing urls
[08:12] tuhoojabotti: prolly thanks to that wtf-8 text
[08:13] asabil has joined the channel
[08:14] kohai: @daisuke: むむむぅー。 EventEmitter2 - Namespaced events in Node.js and the Browser - thechangelog: http://tumblr.com/xat2zrnnvb
[08:17] coreb has joined the channel
[08:18] fly-away has joined the channel
[08:18] fangel has joined the channel
[08:19] bkozal has joined the channel
[08:19] walkah has joined the channel
[08:19] Marak: tuhoojabotti: sup?
[08:20] jbpros: Hi everyone. It's been a few days the JS implementation of cucumber was announced. It only supports basic features for now and still has a long way to go. I'm fairly new to JS and would really love to get feedback about the code -- its style, specs, etc. -- from you guys. If you have some time, I would really appreciate it. https://github.com/cucumber/cucumber-js
[08:20] rodasc has joined the channel
[08:20] tuhoojabotti: Marak: Back at work
[08:20] jamey-uk has joined the channel
[08:21] tuhoojabotti: Added nice error messages to my website
[08:21] indexzero has joined the channel
[08:21] tuhoojabotti: you can try the global function ShowWarning(warning); :P
[08:22] tuhoojabotti: It stacks same errors!
[08:22] kohai: @alexdumont: High performance, high class web development for Node.js http://expressjs.com
[08:22] zomgbie has joined the channel
[08:22] [[zz]] has joined the channel
[08:23] shafire has joined the channel
[08:23] kohai: @xenyou: またバグみっけ。https://github.com/joyent/node/issues/1180 #nodejs
[08:24] tuhoojabotti: Marak: Is kohai your bot btw?
[08:25] shafire: hi
[08:25] shafire: are there only the webframeworks express and geddy out?
[08:25] hkjels_ has joined the channel
[08:25] tuhoojabotti: I wrote my own½
[08:25] tuhoojabotti: !*
[08:26] shafire: tuhoojabotti: yes? :)
[08:26] viz has joined the channel
[08:26] mscdex: shafire: there's probably several others, but express is the most common for sure
[08:26] tuhoojabotti: It's closed source. >:|
[08:26] mscdex: shafire: any problems with it?
[08:26] tuhoojabotti: Prolly so bad no one wants to use it either (including me)
[08:27] shafire: mscdex: i want to take a look at all before choosing ne
[08:27] jamesbroad has joined the channel
[08:28] ebaxt has joined the channel
[08:28] stonebranch has joined the channel
[08:30] eikaas has joined the channel
[08:31] Yoric has joined the channel
[08:31] SamuraiJack has joined the channel
[08:34] Marak: fucking npm 1.0.10 is a bitch, i must be doing something wrong but i really want to global link my packages for dev
[08:34] Marak: having to npm link inside each folder is killing me
[08:34] Marak: gotta figure out the right workflow 
[08:34] hybsch has joined the channel
[08:34] matyr_ has joined the channel
[08:37] kohai: @maraksquires: @nephics That is a typo. It should read, "hook.io creates a distributed node.js event emitter"
[08:38] ewdafa has joined the channel
[08:39] jeremyselier has joined the channel
[08:40] euforic has joined the channel
[08:40] marvin_ has joined the channel
[08:41] kohai: @MIKEGAO: @jamiebullock node.js is really easy!
[08:41] Bj_o_rn has joined the channel
[08:41] mauritslamers_ has joined the channel
[08:42] kohai: @kulor: feeling fully inspired after a weekend of talks on and around node.js at #nodecamp
[08:42] emattias has joined the channel
[08:42] euforic: Anyone have a good resource for app design patterns in node.js
[08:43] euforic: I feel like my exports and requires look pretty sloppy 
[08:43] jhurliman: that whole magic expressjs does with rendering a jade template and passing the output to another jade template called layout.jade with the previous output stuffed in the body variable... is that part of expressjs or the jade library?
[08:43] Bj_o_rn has left the channel
[08:44] gausby has joined the channel
[08:44] matyr has joined the channel
[08:44] kohai: @stefounet: Nice pub/sub messaging server for #nodejs : http://t.co/0643VCe (link: http://faye.jcoglan.com/)
[08:44] troessner has joined the channel
[08:45] stagas_ has joined the channel
[08:45] STUPIDWIFI has joined the channel
[08:46] k1ttty_ has joined the channel
[08:48] zeade has joined the channel
[08:48] bzinger has joined the channel
[08:48] markwubben has joined the channel
[08:49] NetRoY has joined the channel
[08:49] SamuraiJack has joined the channel
[08:49] Shinuza1: jhurliman: express
[08:49] jhurliman: thanks
[08:49] Shinuza1: jade doesn't support extends/including templates AFAIK
[08:52] euforic has left the channel
[08:52] jamey-uk has joined the channel
[08:55] SamuraiJack has joined the channel
[08:55] kohai: @rtweed: SimpleDB performance issues on day of #awssummit London http://t.co/IIbAWxb  Perhaps they need a standby :-) http://t.co/h2GS2b9 #nodejs (link: http://cloudfail.net/426166)
[08:55] nsolsen has joined the channel
[08:55] SamuraiJack has joined the channel
[08:55] davidbanham has joined the channel
[08:59] philhawksworth has joined the channel
[08:59] philhawksworth has left the channel
[09:01] sudhirjonathan has joined the channel
[09:02] apanda has joined the channel
[09:02] STUPIDWIFI has joined the channel
[09:03] user____: /exit
[09:04] jamey-uk: Does anyone know how to do form validation with Express?
[09:06] matwill: Have you seen express form?
[09:06] matwill: http://dandean.github.com/express-form/
[09:06] adrianmg has joined the channel
[09:07] jamey-uk: matwill: thanks, I'm using connect-form to do some image uploads and wanted to add validation to it, maybe I should just be looking at express-form, I have no idea what can be used in conjunction with what
[09:08] pyrony has joined the channel
[09:08] bnoordhuis has joined the channel
[09:09] sfoster has joined the channel
[09:09] k1ttty has joined the channel
[09:09] topaxi has joined the channel
[09:09] pdonald has joined the channel
[09:09] mike27 has joined the channel
[09:10] sourcode has joined the channel
[09:10] HerrTopf has joined the channel
[09:10] kohai: @johanstn: Up and running with Kanso from @caolin and local @couchbase - nice! http://t.co/SUKRepa #nodejs #javascript #couchdb (link: http://kansojs.org/)
[09:11] copongcopong has joined the channel
[09:12] jonaslund has joined the channel
[09:14] unomi has joined the channel
[09:14] lackac_ has joined the channel
[09:18] hybsch has joined the channel
[09:20] STUPIDWIFI has joined the channel
[09:21] kohai: @roguejs: I'm beginning to see the power of TDD and BDD now... #vows #nodejs
[09:22] sreeix_ has joined the channel
[09:22] lackac has joined the channel
[09:22] Shrink has joined the channel
[09:24] thalll has joined the channel
[09:24] jamey-uk: does anyone know how to do validation *and* file uploads at the same time with Express?
[09:25] petrjanda has joined the channel
[09:28] butu5 has left the channel
[09:30] kohai: @RyanONeill1970: @garyshort So Gary, you up for doing a node.js in Hereford in August?
[09:30] sreeix has joined the channel
[09:31] bkozal has joined the channel
[09:31] kohai: @tile5js: @goashley jodoc - it's pretty good.  Any failings in the generated docs are purely my fault ;)  There's a #nodejs port in the wings too :)
[09:32] kohai: @tile5js: @goashley See http://t.co/cMAIMko for the current perl version, and http://t.co/KKTlLRt for the in dev #nodejs version. (link: https://github.com/davebalmer/jodoc)
[09:32] Shinuza has joined the channel
[09:33] pastak_ has joined the channel
[09:35] Poetro has joined the channel
[09:37] djcoin has joined the channel
[09:40] mscdex: Calvin doesn't like us anymore
[09:40] Marak has joined the channel
[09:40] Marak: boom , https://github.com/Marak/hook.io/blob/master/lib/hookio/hook.js#L27
[09:40] Marak: check that shit out and think about that
[09:40] Marak: quad directional communication
[09:40] mscdex: i felt a url coming on
[09:41] Marak: just refactor hook.io core logic a little bit more, its really actually like doing what its suppose to know and kinda okay
[09:41] Marak: im amazed
[09:41] mscdex: jamey-uk: what kind of validation?
[09:42] kohai: @nicktelford: @ryah PHP's winning formulae was a low barrier to entry; node.js is very similar in this respect.
[09:45] kohai: @NodeJSAtSO: Node.js connection error, missing property? http://bit.ly/jpZpnd (link: http://stackoverflow.com/questions/6341510/node-js-connection-error-missing-property?utm_medium=twitter&utm_source=twitterfeed)
[09:51] kohai: @CubataKolectiv: Good but no surprises in Werner's keynote. Now customer talks. ForwardInernet. They deploy all day nonstop. They use node.js too
[09:51] kohai: @halfageekinfo: Amir Salihefendic: Comet with node.js 2/6 http://is.gd/Le7X0J #javascript (link: http://javascript.halfageek.info/2011/06/01/amir-salihefendic-comet-with-node-js-26/)
[09:51] chjj: hmm, i wonder what nicktelford means by that
[09:52] viz: kohai is by far the chattiest one in here..
[09:53] eldar has joined the channel
[09:55] chjj: https://github.com/bfirsh/jsnes - pretty cool, i had always heard of it but never bothered to look
[09:57] woot130804541998 has joined the channel
[09:58] ebaxt has joined the channel
[10:01] kohai: @edu: Frameworks are great. jQuery is cool. Node.JS is awesome. Base it on a solid basement of pure JavaScript, and... http://j.mp/l8L0tU (link: http://javascript.info/)
[10:01] elsig` has joined the channel
[10:02] jamey-uk: mscdex: checking whether fields are set, for example a text input and a file input.
[10:04] kohai: @shhdesign_: Just completed a quick #nodeJS workshop and peek at #jade. I like!! Must delve deeper. What are people's thoughts?
[10:04] kohai: @jbpros: Frameworks are great. jQuery is cool. Node.JS is awesome. Base it on a solid, powerful basement of pure JavaScript... http://t.co/T09tYqD (link: http://javascript.info/)
[10:04] hojberg has joined the channel
[10:04] kohai: @hhariri: @JeremySkinner my next personal goal is to get a a CRUD up and running with node.js / express.js
[10:05] kohai: @_____C: @sj_mackenzie "Node.js is backwards" = opinionfest. He starts by assuming node.js WANTS to be like Erlang, which is just wrong!
[10:05] Mrfloyd has joined the channel
[10:07] matyr has joined the channel
[10:10] bx2 has joined the channel
[10:10] ianward has joined the channel
[10:10] fermion has joined the channel
[10:10] kohai: @roidrage: Excellent follow-up @peepcode on EventMachine: http://t.co/o4yhM3G. I'll take it over Node.js any day. (link: http://peepcode.com/products/eventmachine-ii)
[10:11] Jalava_: posting twitter feed to irc channel is just wrong
[10:13] Jalava_: i get reposting tweets to facebook group, but in irc posting text that is potentially taken out of context is bad
[10:16] NetRoY has joined the channel
[10:17] fermion has joined the channel
[10:18] boaz has joined the channel
[10:18] rauchg has joined the channel
[10:18] GasbaKid has joined the channel
[10:18] AvianFlu has joined the channel
[10:22] riven has joined the channel
[10:22] FireFly has joined the channel
[10:26] Shinuza has joined the channel
[10:28] AvianFlu has joined the channel
[10:29] fiscus has joined the channel
[10:29] Leonidas: what is the recommended couchdb module? I found a load of libraries on github, npm etc.
[10:31] fiscus: he guys anyone done some work with JSON Schema? I'm new to all of this but I'm just working out my ideal stack. I was looking at MongoDB (Mongoose) and using that as an ORM but can something like JSV compare to that?
[10:33] tshpaper has joined the channel
[10:34] kohai: @shaikhmshariq: All about object oriented JavaScript, for those who has now reason #nodejs to learn js http://goo.gl/oYjgW #js #javascript #objectoriented (link: http://www.developer.com/lang/jscript/object-oriented-javascript-demystified.html)
[10:34] fairwinds_ has joined the channel
[10:36] HerrTopf has joined the channel
[10:37] empt has joined the channel
[10:38] slaskis: Leonidas: i liked the couch-client by creationix
[10:39] tuhoojabotti: fiscus: JSON Schema? :o
[10:40] tuhoojabotti: I save data in my mysql in json format
[10:40] tuhoojabotti: some data
[10:40] fiscus: yeah but I'm not planning on using MySQL
[10:40] tuhoojabotti: I also used plaintext json!
[10:41] fiscus: i've seen a couple of projects use JSV and sharing backbone.js models on the server and on the client
[10:41] tuhoojabotti: So what are you planning on using?
[10:41] fiscus: MongoDB
[10:41] tuhoojabotti: Okay
[10:42] fiscus: dunno - just looking at some options - I'm fairly new to the whole node.js env
[10:42] ion- has joined the channel
[10:43] fiscus: thought if I could share my models between server and client I could just use one of the JSON Schema validators rather than using an ORM like Mongoose (that's what I was considering intiially)
[10:43] adambeynon has joined the channel
[10:43] materialdesigner has joined the channel
[10:44] tuhoojabotti: Me too.
[10:44] tuhoojabotti: I chose mysql because I already had a database so it was just a matter of adding a table and using it. ;)
[10:45] fiscus: what connector do you use for MYSQL
[10:45] tuhoojabotti: mysql
[10:45] tuhoojabotti: ":D"
[10:46] tuhoojabotti: "npm install mysql"
[10:46] matyr has joined the channel
[10:46] tuhoojabotti: that works the best I've found
[10:46] MonsieurLu1 has joined the channel
[10:46] frodenius has joined the channel
[10:47] fiscus: heh right ok
[10:48] k1ttty has joined the channel
[10:48] MonsieurLu has joined the channel
[10:48] MonsieurLu has left the channel
[10:50] guybrush: kriskowal you are arround (maybe with another nick)?
[10:51] CIA-92: node: 03Ryan Dahl 07master * r55636e5 10/ src/tcp_wrap.cc : tcp_wrap: Remove listener deck - http://bit.ly/jOWZBF
[10:52] kohai: @roidrage: Challenge: build your next Node.js hosting project in Erlang.
[10:52] ryanmcgrath has joined the channel
[10:53] CIA-92: node: 03Mark Cavage 07v0.4 * r88552c5 10/ (5 files in 4 dirs): 
[10:53] CIA-92: node: Support for signature verification with RSA/DSA public keys
[10:53] CIA-92: node: Fixes #1166. - http://bit.ly/kwspoS
[10:53] kohai: @indutny: @roidrage hehe... I have one Node.js + Riak big project, don't you want to participate when I'll finish prototype?
[10:53] JakeyChan: I want to make color for text too :D
[10:53] tahu has joined the channel
[10:53] JakeyChan: can you teach me ?
[10:53] robhawkes has joined the channel
[10:54] guy has joined the channel
[10:54] JakeyChan: who knows this one : https://github.com/developmentseed/bones
[10:55] andrewfff has joined the channel
[10:56] indutny: JakeyChan: can I help you?
[10:57] JakeyChan: indutny: yeah, I do not know where to start :D
[10:58] indutny: JakeyChan: what do you want to create?
[10:58] tahu has left the channel
[10:58] JakeyChan: indutny: just simple project buildd on the bones :)
[10:58] Pierrot has joined the channel
[10:58] fiscus: indutny: is bones your project?
[10:58] JakeyChan: indutny: do you know the guy who build the project ?
[10:58] indutny: JakeyChan: so you'll need node.js and npm installed
[10:58] framlin: Leonidas: I use cradle
[10:59] indutny: JakeyChan: fiscus: no
[10:59] fiscus: but your familiar with it?
[10:59] JakeyChan: indutny: I have installed 
[10:59] indutny: btw, that's my new github account : https://github.com/indutny
[10:59] fiscus: I'm also looking at working out my ideal development stack for node.js
[11:00] fiscus: Bones looks inteesting
[11:00] framlin: Leonidas: are yot *the* Leonidas from node-xml2js?
[11:00] indutny: JakeyChan: I'm not really familiar with Bones, but from first look I can say that it's pretty simple
[11:00] indutny: JakeyChan: what problems are you experiencing?
[11:02] JakeyChan: indutny: I clone this example project and use node index.js to start project but failed. 
[11:02] Dreamer3 has joined the channel
[11:02] JakeyChan: indutny: the error is TypeError: object is not a function
[11:02] indutny: JakeyChan: ok, can you create gist with full stacktrace of error?
[11:03] indutny: JakeyChan: have you run `npm install bones`
[11:03] JakeyChan: sure. please wait for while
[11:03] indutny: JakeyChan: ?
[11:03] JakeyChan: indutny: no, I put the bones under the node_modules/ folder
[11:03] indutny: JakeyChan: better install it via npm, b/c latest github version can be not stable
[11:04] indutny: JakeyChan: but that should work though
[11:04] Mrfloyd_ has joined the channel
[11:04] framlin: Leonidas: cradle is described at http://blog.nodejitsu.com/6-must-have-nodejs-modules too
[11:04] JakeyChan: indutny: here :https://gist.github.com/1024690
[11:05] JakeyChan: indutny: I think so. I just want to learn how does the project works
[11:06] indutny: JakeyChan: lets see
[11:06] JakeyChan: indutny: guy, you look cool, ha :D
[11:06] indutny: JakeyChan: what are you talking about?
[11:07] indutny: JakeyChan: btw, what node.js version are you using?
[11:08] NetRoY has joined the channel
[11:08] wilhelm: :q
[11:08] wilhelm: Eh, #wrong window.
[11:09] framlin: ;)
[11:09] indutny: wilhelm: wrong app :)
[11:09] matyr_ has joined the channel
[11:09] jarek has joined the channel
[11:09] jarek has joined the channel
[11:09] JakeyChan: indutny: v0.5.0-pre
[11:09] indutny: JakeyChan: ok, install 0.4.8
[11:09] indutny: JakeyChan: ;)
[11:09] JakeyChan: induty: :)
[11:09] andrewff1 has joined the channel
[11:09] indutny: JakeyChan: do you know how to do that?
[11:10] JakeyChan: indutny: have to ?
[11:10] JakeyChan: indutny : don't know :)
[11:10] kohai: @steeve: doing some #nodejs. it's nice, but #javascript is a bitch. seriously wtf !
[11:10] indutny: JakeyChan: ok. `git clone git://github.com/joyent/node.git && cd node && git checkout v0.4.8 && ./configure && make && sudo make install"
[11:10] indutny: something like that
[11:10] indutny: JakeyChan: What OS are you using?
[11:11] andrewff2 has joined the channel
[11:12] Leonidas: framlin: yep, I'm Leonidas from xml2js :)
[11:12] sreeix_ has joined the channel
[11:12] JakeyChan: induyny: ubuntu 10.04
[11:12] xerox: what is xml2js?
[11:12] framlin: I use your module, to read XMI-Files
[11:12] Leonidas: framlin: cradle might be a bit too high level but I'll give it a try.
[11:12] JakeyChan: indutny: sorry, I make error with your name :D
[11:13] neoesque has joined the channel
[11:13] Leonidas: xerox: https://github.com/Leonidas-from-XIV/node-xml2js
[11:13] framlin: and I want to write the File (better the JSON) back, after changing the JSON. Is that possible with your module?
[11:13] Leonidas: framlin: cool, hope you're satisfied :)
[11:13] framlin: Leonidas: ....
[11:13] xerox: o ok
[11:13] Leonidas: framlin: no, not at the moment
[11:14] eee_c has joined the channel
[11:14] Leonidas: framlin: there is an issue about converting the tree back to XML but I haven't looked into this in detail, sorry.
[11:14] kohai: @ariejan: Been toying with Node.js, Zombie.js, Express and Vows. Check out JSONToolbox! http://aj.gs/jtb (source: http://aj.gs/4f ) #nodejs RFC (link: http://jsontoolbox.com/)
[11:14] framlin: :-(   ;) ok, so I will do that fo myself ....
[11:14] indutny: JakeyChan: np. this cmd should work for ubuntu. but you should have git-core and libssl-dev and g++ installed
[11:14] JakeyChan: indutny: are you mad ?
[11:14] indutny: JakeyChan: "sudo apt-get install git-core libssl-dev g++"
[11:14] JakeyChan: indutny: I have now :D
[11:14] indutny: JakeyChan: are you trying to offend me? :)
[11:15] JakeyChan: indutny :no no no.. 
[11:15] framlin: Leonidas: no problem, your module works very well for the one ay, so it helps me a lot!
[11:15] neaf has joined the channel
[11:16] indutny: JakeyChan: if I won't be online, you can ask anyone other from #nodejitsu team, we're always open for any questions
[11:17] JoshC1 has joined the channel
[11:17] bx2 has joined the channel
[11:18] JakeyChan: indutny: thanks a lot :D
[11:21] kohai: @cscotta: "My node.js project spreads all i/o across infinite amount of processes with distributed message passing between each node." #somanychildren
[11:21] d0k has joined the channel
[11:22] Ian_Corne: good way to kill your disk?
[11:24] Esteb has joined the channel
[11:25] mendel_ has joined the channel
[11:25] tim_smart: Ian_Corne: A hammer?
[11:25] Bonuspunkt: killdisk ?
[11:26] Bonuspunkt: but only if u just want to remove all data
[11:26] callumacrae: Has anyone in here got any experience with express-resource?
[11:27] ianward has joined the channel
[11:27] sreeix has joined the channel
[11:27] mendel_ has joined the channel
[11:29] adnam: callumacrae: a little bit... what are you wondering about?
[11:30] Swizec has joined the channel
[11:30] callumacrae: How to access DELETE requests on /
[11:30] Ian_Corne: tim_smart: i was talking about that tweet
[11:30] callumacrae: I can only find how to do it for /:something/
[11:30] tim_smart: Ian_Corne: I have the bot ignored ;)
[11:31] viz: besides seo, what are the advantages of doing routing server-side (express) vs client side (backbone)?
[11:31] kohai: @roidrage: @Lenary Of course, they know their shit. I'm challenging the up and coming Node.js hosting products/projects.
[11:36] dane_: viz I'm also interested in that
[11:36] kriszyp has joined the channel
[11:37] dane_: I'm also playing around with backbone and express and was wondering th same thing - what routing engine to use
[11:37] Workrella has joined the channel
[11:37] dane_: and what the pros and cons are
[11:37] zeade has joined the channel
[11:39] viz: dane_: as far as i know, the only disadvantage to backbone routes is the seo (#! uris are necessary for google to index it)
[11:39] Mrfloyd has joined the channel
[11:41] forzan has joined the channel
[11:42] _jgr has joined the channel
[11:43] andree has joined the channel
[11:44] dane_: yeah fair enough I don't plan on going down the #! path anyway
[11:44] dane_: so I'll just stick to the express routes
[11:44] AAA_awright: Who here uses RDF with Node.js?
[11:44] tiagoa has joined the channel
[11:46] kohai: @simonech: I really need to have a look and play a bit with node.js http://bit.ly/l8JF62 (link: http://codeofrob.com/archive/2011/04/30/5-reasons-to-give-node-js-some-love.aspx)
[11:48] leahculver has joined the channel
[11:49] temp01 has joined the channel
[11:50] dyer has joined the channel
[11:50] dyer has joined the channel
[11:52] bibabot has joined the channel
[11:53] kohai: @lyomi: node.js 보니까 상당히 매력적이다. 자바스크립트가 애초부터 이렇게 되었었다면 파이썬은 생길 필요가 없었을지도 몰라
[11:54] kohai: @old_sound: Netty node.js comment: http://t.co/pELKcq4 /cc @kevsmith (link: http://news.ycombinator.com/item?id=1088823)
[11:54] andrewfff has joined the channel
[11:54] _jgr has joined the channel
[11:57] andrewff1 has joined the channel
[11:57] kohai: @roidrage: @old_sound also, here's two node.js guys trying to run multiple processes: http://t.co/hCK2HBR (link: http://i.imgur.com/jUwzR.jpg)
[11:57] kohai: @old_sound: @kevsmith sure. I heard that ZeroMQ is fast because uses node.js in the background actually.
[11:59] shafire has joined the channel
[11:59] shafire: hi
[11:59] shafire: isn't there any express irc channel?
[11:59] augustl has joined the channel
[11:59] mfussy has joined the channel
[12:00] jmazzi has joined the channel
[12:01] jonasen has joined the channel
[12:02] Mrfloyd has joined the channel
[12:02] framlin: shafire: it seems, that *this* is the express irc channel ;)
[12:03] sudhirjonathan has joined the channel
[12:03] shafire: okay
[12:03] shafire: i am looking for a postgre and couchdb library, there are too much outside there
[12:03] shafire: which one is maintained? :S
[12:04] andrewfff has joined the channel
[12:04] kohai: @grantmichaels: everytime somene compares node.js to erlang, my confidence grows.
[12:04] stalled has joined the channel
[12:04] shafire: :-)
[12:05] jamey-uk has joined the channel
[12:05] framlin: shafire: I use cradle for couchdb and it works very well for me
[12:06] radicality has joined the channel
[12:06] andrewff1 has joined the channel
[12:07] sharkbird has joined the channel
[12:08] andrewff2 has joined the channel
[12:10] andrewff3 has joined the channel
[12:10] andrewff4 has joined the channel
[12:12] andrewfff has joined the channel
[12:12] supster has joined the channel
[12:13] kohai: @flyoung: node.js 를 만났다  오픈마루 지원을 위해서 RoR 를 만났던 참신한 느낌 자꾸 꿈틀거린다
[12:13] kohai: @fdiotalevi: 5 reasons to give node.js some love -  http://t.co/Y8cipg3 (link: http://codeofrob.com/archive/2011/04/30/5-reasons-to-give-node-js-some-love.aspx)
[12:13] jmazzi has left the channel
[12:13] bernd has joined the channel
[12:14] matyr has joined the channel
[12:14] jomoho has joined the channel
[12:14] okuryu has joined the channel
[12:16] jakeg has joined the channel
[12:17] andrewff1 has joined the channel
[12:17] Swizec has joined the channel
[12:18] hdon- has joined the channel
[12:19] andrewff2 has joined the channel
[12:20] dsirijus has joined the channel
[12:23] replore_ has joined the channel
[12:24] mfussy has left the channel
[12:27] eee_c has joined the channel
[12:27] s0enke has joined the channel
[12:29] blueadept: anyone know of a page which explains pagination with mongoose more clearly?
[12:30] fumanchu182 has joined the channel
[12:31] SvenDowideit has joined the channel
[12:31] MrGoodbyte has joined the channel
[12:32] jakeg: i agree with Jalava_ - i find kohai annoying
[12:32] NetRoY: +1 on on that
[12:34] kohai: @silentbicycle: @old_sound When people talk about node.js & erlang, I focus on how node.js handles errors.
[12:36] jakeg: it's just completely taken over the chat room
[12:36] ditesh|cassini has joined the channel
[12:36] kohai: @chucre: quiz: quanto tempo para o #nodejs dominar o mundo? 2 anos, 1 ano, 6 meses, menos?
[12:36] `3rdEden: !help
[12:37] `3rdEden: ;D
[12:37] `3rdEden: kohai y u no have help
[12:37] kohai: @jakeg82: Oi, Kohai, shut up with your tweets already! #nodejs
[12:37] xerox: lol
[12:37] jakeg: :D
[12:37] xerox: because people don't talk third eden
[12:37] Xano has joined the channel
[12:38] aabt has joined the channel
[12:39] kohai: @old_sound: @silentbicycle for me node.js is a fine tech. Still I don't get why it's compared to Erlang. The only thing in common is the word node.
[12:39] beta_ has joined the channel
[12:40] faiqR has joined the channel
[12:40] robinhoode has joined the channel
[12:40] thomblake has joined the channel
[12:40] Dreamer3 has joined the channel
[12:41] framlin: there is only one chance: /ignore kohai ;)
[12:41] mvta has joined the channel
[12:42] tuhoojabotti: framlin: I find it useful to ignore kohai messages starting with @
[12:42] sonnym has joined the channel
[12:43] skm has joined the channel
[12:43] kohai: @patxangas: interesante critica que hacer @ankrgyl sobre node.js  | Node.js is backwards - http://t.co/osa4xSE #nodejs (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[12:44] kriszyp has joined the channel
[12:44] kohai: @mstepniowski: If you need to solve c10k problem, go Erlang. If you want your frontend engineers to work on backend, go Node.js http://t.co/ssFIlQM (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[12:45] aklt has joined the channel
[12:45] Badababuba has joined the channel
[12:46] tuhoojabotti: kohai say something
[12:46] aklt: bnoordhuis: Hi, I was wondering if you have any pending updates to node-iconv?
[12:46] shafire: how can i execute a function, which I have in an array?
[12:46] davidbanham has joined the channel
[12:46] mikegerwitz: shafire: foo.name() or foo['name']()
[12:47] tuhoojabotti: did kohai say something? :D
[12:47] mikegerwitz: shafire: (only the latter if the former contains invalid chars work)
[12:47] vegard has joined the channel
[12:47] mikegerwitz: ...I honestly don't know why "work" is on the end of that. clearly my mind is elsewhere
[12:48] andrewfff has joined the channel
[12:49] vegard: hi, javascript newbie here. how do I access my new object's members from inside event handlers? http://pastebin.com/Trqf6EW8
[12:50] blueadept: would anyone happen to know why this isn't working? http://pastie.org/private/imnx4be0oab75vezqmuqra
[12:50] blueadept: i'm just trying to count all the users in the collection
[12:50] piscisaureus has joined the channel
[12:50] blueadept: using mongoose
[12:50] bnoordhuis: aklt: yes, no, maybe - i have streaming iconv support in the works but i kind of lost focus :-/
[12:50] jscheel has joined the channel
[12:50] jscheel has joined the channel
[12:50] stepheneb has joined the channel
[12:51] sirkitree has joined the channel
[12:51] bnoordhuis: aklt: i'll force myself to pick it up and finish this week
[12:51] niftylettuce has joined the channel
[12:52] mikegerwitz: vegard: 'this' is bound to the function it's referenced in, in that case (there are exceptions, but we'll ignore that for now). So you'd have to do: var self = this, then use self in the closure, or something similar to that
[12:53] xandrews has joined the channel
[12:53] blueadept: bah figured it out, needed an err
[12:54] l90r has joined the channel
[12:54] ph^ has joined the channel
[12:55] ewdafa has joined the channel
[12:55] vegard: mikegerwitz: aha, that works. great! is that the standard way of doing things or should I be doing this differently?
[12:55] jscheel_ has joined the channel
[12:55] jscheel_ has joined the channel
[12:57] Broady has joined the channel
[12:57] bbttxu has joined the channel
[12:57] dyer has joined the channel
[12:57] dyer has joined the channel
[12:57] Broady: has anyone played around with hook.io?
[12:57] blueadept: not yet
[12:57] mikegerwitz: vegard: it's fairly standard
[12:57] blueadept: looks interesting
[12:58] Broady: blueadept: yeah, i was just looking for some opinion on it :)
[12:59] AaronMT has joined the channel
[13:00] kohai: @niklasl: Is node.js backwards? http://t.co/JrWFBUz (don't forget to read the comments, and a sense of perspectives) (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[13:00] Broady: read the comments on hacker news
[13:00] tuhoojabotti: oh damn my ignore failed
[13:01] unomi has joined the channel
[13:01] descipher_ has joined the channel
[13:01] kriszyp has joined the channel
[13:02] Druide_ has joined the channel
[13:03] swistak has joined the channel
[13:03] shafire: how can i call the variable request/repsone in expressjs?
[13:03] jscheel: shafire: where are you trying to pull in request and response? They are passed automatically to routes.
[13:04] Skola: how do I set this.something within a callback?
[13:05] jtrudeau has joined the channel
[13:05] Broady: Skola: callback.call({something: 'foo'})
[13:05] shafire: jscheel: http://pastie.org/private/h2qx2aefchbzytke1s5dw <- the comment line, there is the function with variables request/response in it
[13:05] devrim has joined the channel
[13:06] aklt: bnoordhuis: Cool, but pleas don't be under pressure :-)
[13:06] aklt: bnoordhuis: I was just curious if anything was on the way because I have been away for a while :-)
[13:07] chrischris has joined the channel
[13:08] jscheel: shafire: you would define the incoming parameters in your function definition, like so: http://pastie.org/2066495
[13:09] jscheel: shafire: also, you don't want to do actions["index"](), as that would call the function immediately, you just want to reference the function as a callback, so remove the ()
[13:09] leahculver has joined the channel
[13:11] davidsklar has joined the channel
[13:11] edude03 has joined the channel
[13:13] Skola: Broady, it's in a db model where I'm setting this.title, this.body etc before this.save
[13:14] davidsklar has joined the channel
[13:14] Skola: but the value of one of them is set with a callback
[13:14] Skola: however within the callback this.property obviously doesn't refer to the actual property anymore
[13:14] shafire: jscheel: thank you
[13:15] shafire: how to name variables and functions in javasript?
[13:15] jscheel: shafire: welcome!
[13:15] shafire: boot_controller, bootController?
[13:15] Skola: bootControllerrrr
[13:15] Broady: bootControllr
[13:15] shafire: variables also?
[13:15] jscheel: Skola: is that pirate? ;)
[13:15] Skola: ja
[13:15] Skola: I'm not a pirate as far as I know
[13:15] shafire: :-)
[13:16] slaskis has joined the channel
[13:16] shafire: Skola is from somalia
[13:16] Skola: lol nor that
[13:16] stonebranch has joined the channel
[13:16] beta_ has joined the channel
[13:16] Broady: wow, the speakers on the cr-48 are really terrible
[13:18] tuhoojabotti: laptop speakers ♡
[13:18] jakeg has joined the channel
[13:18] brianseeders has joined the channel
[13:18] jscheel: shafire: I prefer lower camel-case for variables (thisIsMyVar), and full camel-case for classes (MyUser)
[13:18] coleGillespie has joined the channel
[13:19] tuhoojabotti: I prefer mixed case mixed names and mixed classes
[13:19] tuhoojabotti: it's all mixed
[13:19] ebaxt has joined the channel
[13:19] bbttxu has joined the channel
[13:19] tuhoojabotti: THISIsmyVar
[13:19] Skola: yeah nice except you'll mix up your classes with your vars :[]
[13:19] tuhoojabotti: perkele!
[13:20] Skola: yes vittu
[13:20] tuhoojabotti: Skola: vittu is not correct, please don't use it.
[13:20] tuhoojabotti: okay it's correct, but just bad.
[13:20] tuhoojabotti: :S
[13:20] Skola: I know
[13:20] eee_c1 has joined the channel
[13:20] kohai: @mikkoruokojoki: Single page apps explained. They suit for certain needs and have certain advantages - http://t.co/R0LxHyI #nodejs #webapps #websocket #html5 (link: http://blog.nodejitsu.com/single-page-apps-with-nodejs)
[13:20] Skola: but it's the first thing you learn when playing video games with fins
[13:21] tuhoojabotti: Wrong kind of fins
[13:21] Skola: no
[13:21] Skola: just teenage finns
[13:21] avalanche123 has joined the channel
[13:21] hellp has joined the channel
[13:21] tuhoojabotti: I'm teenage win!
[13:21] tuhoojabotti: I mean finn
[13:21] Skola: :[]
[13:22] sfoster has joined the channel
[13:22] tuhoojabotti: 17 that is
[13:22] olegp: are there many people from Finland here? we should get a nodejs meetup going
[13:22] ianward has joined the channel
[13:22] avalanche123 has joined the channel
[13:22] tuhoojabotti: join #Node.js-fi :D
[13:23] boaz has joined the channel
[13:24] jtsnow has joined the channel
[13:24] mikegerwitz: shafire: however you want
[13:24] mikegerwitz: oops. Up in wrong window.
[13:24] kohai: @Outsider__: 서버 내려간 김에 node.js 버전업 좀 할려고 했더니만 jsdom 많이 바뀌었네...
[13:25] mbrevoort has joined the channel
[13:27] xerox: node.kr
[13:27] olegp: hey everyone, I just pushed out an initial release of my lib which allows you to run sync commonjs apps on top of node, would love some feedback
[13:27] olegp: https://github.com/olegp/common-node
[13:27] _jgr has joined the channel
[13:29] Skola: http://hpaste.org/47785
[13:29] ShreeKavi has left the channel
[13:29] Skola: could someone have a look?
[13:29] confoocious has joined the channel
[13:29] Shrink has joined the channel
[13:29] confoocious has joined the channel
[13:29] Shrink has joined the channel
[13:30] kohai: @gbraad: /me is happy with having #javascript on the frontend (addon and webpage) and backend #nodejs code; lot of code re-use.
[13:31] MattJ has joined the channel
[13:31] nayrb has joined the channel
[13:32] Destos has joined the channel
[13:33] _jgr has joined the channel
[13:34] gtramont1na has joined the channel
[13:35] devrim has joined the channel
[13:35] bibot has joined the channel
[13:35] kohai: @hvitorino: não acredito em nada dominando o mundo @chucre: "quiz: quanto tempo para o #nodejs dominar o mundo? 2 anos, 1 ano, 6 meses, menos?"
[13:36] kohai: @dev_links: Comparing clojure and node.js for speed http://bit.ly/j7q05R (link: http://www.dzone.com/links/rss/comparing_clojure_and_nodejs_for_speed.html)
[13:36] jlecker has joined the channel
[13:37] shoe has joined the channel
[13:38] hellp has joined the channel
[13:38] azeroth__ has joined the channel
[13:38] shoe: I get: "ImportError: No module named js2c" when running node-waf
[13:39] MooGoo: sounds like you need to get the python module js2c
[13:39] tcurdt has joined the channel
[13:39] ngs has joined the channel
[13:40] shoe: but, it comes in the /tools directory, so I guess it's an installation bug?
[13:40] shoe: I did a standard configure && make install
[13:40] Skola: I'm doing it wrong: http://hpaste.org/47785 How do I assign this.body_code within the callback before calling this.save
[13:40] jtsnow has joined the channel
[13:41] shoe: I can try to manually finish the installation, but I'm not sure which files to copy where.
[13:41] Esteb has joined the channel
[13:43] ryanfitz has joined the channel
[13:43] davidwalsh has joined the channel
[13:43] bnoordhuis: shoe: where did you get your version of node from?
[13:43] ceej has joined the channel
[13:44] shoe: bnoordhuis: http://nodejs.org/dist/node-v0.4.8.tar.gz
[13:45] bnoordhuis: shoe: what happens if you do `make distclean && ./configure --prefix=/where/node/should/go && make install` ?
[13:45] Plouj has left the channel
[13:45] shoe: --prefix=/usr/local ?
[13:46] shoe: I thought it was the default
[13:47] ngs has joined the channel
[13:47] azeroth__ has joined the channel
[13:47] kohai: @stevestarges: Comparing clojure and node.js for speed: For the longest of whiles I’ve been working on a speed comparison betwe... http://bit.ly/l7qjdl (link: http://www.dzone.com/links/rss/comparing_clojure_and_nodejs_for_speed.html)
[13:47] bentruyman has joined the channel
[13:47] shoe: bnoordhuis: notice that js2c is not installed: http://pastie.org/2066652
[13:48] patrickarlt has joined the channel
[13:48] bnoordhuis: shoe: it's part of the source tree
[13:49] kohai: @streampunks: The inability of the node.js community to admit there are other more mature event based systems out there is their biggest weakness.
[13:49] Skola: @all nvm the hpaste, got it
[13:49] kohai: @kelvw: A node.js opensource hosting platform (in Apache License 2.0). Seems promising! // Nodester http://t.co/DqQ8SK8 (link: http://nodester.com/)
[13:49] bnoordhuis: shoe: and it's used only when building node
[13:50] kzh has joined the channel
[13:50] jamey-uk has left the channel
[13:50] patricnordmark has joined the channel
[13:50] baudehlo has joined the channel
[13:50] kohai: @rockncode: For the curious ones, the Stuff We Say web app is an attempt to make #nodejs #mongodb and #twitter work together in real time! YEAH!
[13:51] shoe: bnoordhuis: well, it seems that the daemon package requires node-waf, which requires js2c
[13:51] Skola: in real time
[13:51] c4milo has joined the channel
[13:51] Skola: how about that
[13:51] baudehlo: real time AND web scale
[13:52] kzh: I published a npm module twice under two different names, how do I get one deleted to free up the name for somebody else?
[13:52] Skola: in the cloud too?
[13:52] cbibler_ has joined the channel
[13:53] tahu_ has joined the channel
[13:53] bnoordhuis: shoe: node-waf doesn't require js2c but maybe daemon's wscript file does
[13:53] tahu has joined the channel
[13:53] baudehlo: kzh: npm unpublish
[13:53] Shinuza: kzh: I think there are authoring features
[13:53] Shinuza: oh well
[13:54] kzh: baudehlo: thanks
[13:54] bnoordhuis: shoe: what happens if you drop tools/js2c.py in the same directory as node-daemon?
[13:55] miccolis has joined the channel
[13:56] kzh: So I just created my 2nd npm package. op: useful for functional programming
[13:56] dall has joined the channel
[13:56] dall: hello everybody!
[13:57] kzh: hi.
[13:57] dall: guys, i'm using 0.7 socket.io library (i know is not stable...is not a problem i'm testing it locally....so no problem).... this is a simple test: http://nopaste.info/a228512fee.html
[13:58] shoe: bnoordhuis: node-waf requires it's own wscript, right? which requires js2c, right?
[13:58] kohai: @enterprise4j: Comparing clojure and node.js for speed: dzone.com: javaFor the longest of whiles I’ve been working on a speed c... http://bit.ly/lpzhni (link: http://javablogs.com/Jump.action)
[13:58] dall: http://nopaste.info/70c91bf258.html    <----- this is the server code
[13:58] bnoordhuis: shoe: no :)
[13:58] dall: when i visit the page nothing happen...
[13:58] shoe: bnoordhuis: http://pastie.org/2066704  (still recompiling)
[13:58] dall: there is not new connection
[13:59] bnoordhuis: shoe: just so we're on the same page: node-waf is used to compile add-ons, it's not used by node's build process itself
[13:59] bnoordhuis: shoe: node's build process does use js2c - but that's a completely separate matter
[13:59] shoe: bnoordhuis: I'm referring to line 5 in above paste
[14:00] jtsnow has joined the channel
[14:00] shoe: I interpreted that as evidence that node-waf used node's wscript
[14:00] dall: what could be the problem?
[14:01] dall: if i visit http://127.0.0.1:8000/   <------ i see "new connection"     so the server is listening
[14:01] bnoordhuis: shoe: ah, i understand what you mean - don't run `node-waf` from node's source dir :)
[14:01] zeade has joined the channel
[14:02] shoe: ah!
[14:02] azeroth___ has joined the channel
[14:02] jensn_ has joined the channel
[14:02] kohai: @OhMeadhbh: interesting... o'reilly has a #nodejs book in the works. here's the early access url: ttp://http://j.mp/lUqOzL - some …http://lnkd.in/z-A2F8 (link: http://ofps.oreilly.com/titles/9781449398583/)
[14:02] matyr_ has joined the channel
[14:03] shoe: bnoordhuis: good point, I'll try after the recompile.
[14:03] jomoho2 has joined the channel
[14:05] k1ttty has joined the channel
[14:05] pifantastic has joined the channel
[14:06] sourcode has joined the channel
[14:06] mikeal has joined the channel
[14:06] kohai: @nadouani: @rmat0n @mathildelemee @jblemee @tonyskn @paulgreg je sais même pas si ça existe, des missions avec #nodejs
[14:07] kohai: @trronning: @ryah Many will never understand why #VHS was the superior technology. #Betamax. Takes certain skills to figure it out #nodejs #erlang
[14:07] spasquali has joined the channel
[14:07] Shinuza: dall: what are you expecting?
[14:07] tahu has joined the channel
[14:08] chrischris has left the channel
[14:08] dall: Shinuza, that nodejs print "something on the console)
[14:08] Shinuza: except if socket.io has an implicit message queue, your send call won't have any effect unless you put in in socket.on('connect') callback
[14:08] dall: Shinuza, "nuova connessione" (take a look at the console.log
[14:08] bradleymeck has joined the channel
[14:09] edude03 has joined the channel
[14:09] dall: yes yes, Shinuza is not a problme i know this is an error...i just copied from socket.io
[14:09] dall: the question is....why nodejs doesn't show new connection ?
[14:10] Corren has joined the channel
[14:11] kohai: @OhMeadhbh: (this time without the munged URL) http://j.mp/lUqOzL - this is the early access link to o'reilly's #nodejs book in th…http://lnkd.in/U5-q7t (link: http://ofps.oreilly.com/titles/9781449398583/)
[14:11] tahu has joined the channel
[14:11] kohai: @otjanet: Why would anyone compare #javascript / #nodejs with #erlang? Their use-cases and business cases are so completely different and subjective.
[14:12] Shinuza: dall: I think they renamed send to broadcast
[14:12] sub_pop has joined the channel
[14:12] woot130806075654 has joined the channel
[14:13] febits has joined the channel
[14:13] jamey-uk has joined the channel
[14:13] AvianFlu has joined the channel
[14:13] jamey-uk: what's the best way to avoid lots of nested callbacks?
[14:13] JJMalina has joined the channel
[14:13] dall: https://github.com/learnboost/socket.io
[14:13] Epeli: jamey-uk:  async.js?
[14:14] dall: Shinuza, i think .send() works on 0.7
[14:14] fakewaffle has joined the channel
[14:14] EyePulp has joined the channel
[14:14] Shinuza: okay, I thought `3rdEden say otherwise
[14:14] skyler_brungardt has joined the channel
[14:14] mikegerwitz: jamey-uk: you don't have to nest them. Instead, define the callback elsewhere and pass in the function name / var
[14:14] kohai: @OhMeadhbh: also... this caught my attention: a simple 2.5D game by @diaswrd in a web browser written with #nodejs - http://j.mp/j3kamr (link: https://github.com/diaswrd/Singd)
[14:14] dall: but is not the the problem.....i mean..... ok send() doesn't work ok no problem....myquestion is: why the server doesn't receive the "connection" ?
[14:15] Vertice: TIL about app.params in express. - https://github.com/visionmedia/express/blob/master/examples/params/app.js
[14:15] jamey-uk: mikegerwitz: yeah I thought that might be the idea, then I don't even have to use async.js for now, correct?
[14:15] kohai: @yesonline: Welcome to Cloud Foundry http://www.cloudfoundry.com/ #nodejs #vmware
[14:15] Vertice: heh
[14:16] mikegerwitz: jamey-uk: It's preference, I suppose. I've never used any libraries for my callbacks.
[14:16] jamey-uk: I think it's cleaner for now to just factor it into functions to use as callbacks, thanks :)
[14:16] mikegerwitz: jamey-uk: np
[14:16] Nican has joined the channel
[14:17] liar has joined the channel
[14:17] sharkbird has left the channel
[14:17] Shinuza: dall: your code works here, so I don't really get what's wrong
[14:17] `3rdEden: Shinuza: it's named differently here
[14:18] `3rdEden: Shinuza: its now socket.broadcast.json.send
[14:18] `3rdEden: instead of socket.broadcast()
[14:19] dall: Shinuza, what do you mean with works?
[14:19] dall: nodejs print "nuova connessione" on the console ?
[14:19] Shinuza: dall:  yes
[14:19] Shinuza: twice but, meh
[14:20] Shinuza: also socket.io is involded in your server
[14:20] Shinuza: involved
[14:20] dall: hmmm
[14:20] dall: i have package.json
[14:20] dall: with
[14:20] dall: "socket.io": "0.6.18"  <----- i donwload it with npm install (on the server directory)
[14:20] mapleman has joined the channel
[14:21] Shinuza: the second connection is probably the favicon.ico
[14:21] raidfive has joined the channel
[14:21] pkarl has joined the channel
[14:21] dall: Shinuza, node_modules/socket.io
[14:21] `3rdEden: dall did you read my response in the socket.io channel?
[14:21] dall: Shinuza, maybe it wrong?           <script src="lib/socket.io/dist/socket.io.js"></script>  ?
[14:22] Shinuza: dall this won't work
[14:22] dall: ooh nooo, sorry! i go there
[14:22] Shinuza: you are now even serving the file containing the script
[14:22] dall: OMG `3rdEden ........... it's true!!!
[14:23] `3rdEden: ;D
[14:23] leahculver has joined the channel
[14:23] leahculver has joined the channel
[14:23] dall: big mistake :-D
[14:23] dall: i didn't attach socket.io
[14:23] dall: omg i'm crazy :-D
[14:23] dall: thank you!!!
[14:23] Shinuza: ah :D
[14:23] Shinuza: should sleep more at night
[14:23] Shinuza: :p
[14:23] guy has joined the channel
[14:24] tuhoojabotti: >:D
[14:24] `3rdEden: yw
[14:24] dall: :P
[14:26] boehm has joined the channel
[14:26] sivy has joined the channel
[14:27] empt has left the channel
[14:27] blueadept: how do you cache views in express?
[14:27] tuhoojabotti: I made my own cache!
[14:27] pita has joined the channel
[14:27] qhead: is there any efficient way to communicate between node instances? except using redis etc.
[14:27] fermion has joined the channel
[14:29] jamey-uk: mikegerwitz: I'm having trouble passing the files, thumb_filename variables from within upload_complete() through to the subsequent four functions: http://pastebin.com/6cfMsnRS am I going about this the wrong way?
[14:30] qhead: I wish somebody would get inspiration to do multicore node VM that would take care of scheduling and using available cores in the most efficient way
[14:30] Lorentz: I gotta learn hook.io now
[14:30] dall: guys.....
[14:30] dall: i see
[14:30] dall: 14 Jun 16:30:37 - Your node instance does not have root privileges. This means that the flash XML policy file will be served inline instead of on port 843. This will slow down initial connections slightly.
[14:30] dall: 14 Jun 16:30:37 - socket.io ready - accepting connections
[14:30] dall: what is the first line?
[14:31] mikegerwitz: jamey-uk: you could use a partially applied function. Have imaged_resized, for example, accept the filename as the first argument. Then instead of passing image_resized, pass: function() { return image_resized( thumb_filename, ... ); }
[14:32] kohai: @ronkorving: So #nodejs, when will we see webworkers? I could use some, you know...
[14:32] qhead: hmm.. that multicore part would have to sit between node and V8
[14:33] mikegerwitz: jamey-uk: (I have no idea if image_resized actually *needs* the filename, it was just an example)
[14:34] jamey-uk: mikegerwitz: thanks, trying to restructure it now with partially-applied functions :)
[14:34] eee_c has joined the channel
[14:34] jamey-uk: mikegerwitz: that anonymous function should take those three arguments, then return image_resized() with that extra argument plus those three, does that sound correct?
[14:35] mikegerwitz: jamey-uk: Yes. If you have many arguments, you can also do something like: function() { var args = Array.prototype.slice.call( arguments ); args.unshift( filename ); my_func.apply( this, args ); }
[14:36] jerrysv has joined the channel
[14:36] mikegerwitz: jamey-uk: which one is cleaner depends entirely on how many arguments you have :)
[14:36] jamey-uk: mikegerwitz: to simplify it for now, I'm going to put that thumb_filename variable within the files object :) but thanks, gonna save what you've just written for reference later
[14:36] mikegerwitz: jamey-uk: yep, np. Partially applied functions is just one solution. Do whatever works best and makes sense for you
[14:36] mikeal has joined the channel
[14:37] jamey-uk: mikegerwitz: what other sort of solutions would you use?
[14:37] mikegerwitz: jamey-uk: The benefit of course being that the function does not depend on any external vars and therefore is independent
[14:38] mikegerwitz: jamey-uk: If I'm using only a function, then that is the solution I use. I try to keep my functions isolated. If I'm using an object (an instance) and I'm calling a method on it, then I'll set the data on the object and call the method, if that makes more sense
[14:38] mikegerwitz: jamey-uk: But they're two different approaches (OO, which is stateful vs functional)
[14:39] dall: what does it mean? ------> 14 Jun 16:30:37 - Your node instance does not have root privileges. This means that the flash XML policy file will be served inline instead of on port 843. This will slow down initial connections slightly.
[14:41] kohai: @cdaven: Today is going to be a great day with NoSQL, Node.JS and other web performance workshops at #velocityconf. First, time for breakfast.
[14:41] jamey-uk: mikegerwitz: I understand the OO instantation, data, object method, this partially-applied method of passing an object around using anonymous functions I sort of get, but now I'm making it a bit messy by putting all of the variables I want to pass around within one object, to save slicing together the args like you suggested
[14:42] jerrysv: dall: ports under 1024 are reserved ports, and it needs root access to bind to them
[14:42] jerrysv: dall: and since it couldn't bind, it's serving the flash xml policy file from the same port
[14:43] mikegerwitz: jamey-uk: Oh so you're actually passing the object as an argument rather than having multiple argments? That may be fine. It's sort of like passing around a value object / DTO in OOP. It's recommended over large argument lists generally
[14:43] xerox: any lib provides something like a range(_,_) function, or something similar to create stupid arrays, like zero(_) ?
[14:43] mikegerwitz: jamey-uk: I misinterpreted what you had originally said. I thought the object was external to the function
[14:43] kohai: @sleeptillseven: “@sh1mmer: With a 30 seconds keep alive packet exchange it's 5% CPU and 310MB stack for 250k connections. Node.js is awesomesauce.” Erlang?
[14:44] jamey-uk: mikegerwitz: I didn't realize that… hmm, maybe I should make this an Uploader class with methods, and so it can store data internally, that sounds better right? (I also find thinking in that OOP way a bit cleaner.)
[14:45] nowjs2 has joined the channel
[14:45] huge has joined the channel
[14:46] mikegerwitz: jamey-uk: I personally uses "classes"/prototypes. OOP is excellent for separating logic, loose coupling and encapsulation. All important to long-term maintenance.
[14:46] mikegerwitz: jamey-uk: Then I mix in functional style where appropriate. They can marry fairly well. Scala's something to look into if you're interested in that (too bad it uses JVM/.NET! the language itself is beautiful though)
[14:47] BillyBreen has joined the channel
[14:47] cognominal has joined the channel
[14:47] bentruym_ has joined the channel
[14:47] dall: jerrysv, ?? i'm using 8080
[14:48] BillyBreen has joined the channel
[14:48] Pilate has joined the channel
[14:48] dall: jerrysv, ops no 8000, so i'm not using reserver ports
[14:48] dall: no?
[14:48] mikegerwitz: jamey-uk: and in this case, yes, will help cut down on your argument lists ;) And the value of passing objects instead of 100,000 arguments is (a) users don't have to remember argument order and (b) you don't need to add in a ton of nulls/etc to get to the argument you want to set, while ignoring optional
[14:48] Swimming_bird has joined the channel
[14:48] eee_c1 has joined the channel
[14:49] jtsnow has joined the channel
[14:49] nowjs5 has joined the channel
[14:49] jamey-uk: mikegerwitz: yeah that sounds much more maintainable :)
[14:49] z8000 has joined the channel
[14:50] colinclark has joined the channel
[14:50] nowjs5: is there a node membership/login module/framework that handles the complexity of storing passwords securely (correct enc, salt, db storage), recovery etc.. like asp.net membership provider but not shit
[14:50] jerrysv: dall: correct
[14:51] jerrysv: dall: and that means because it couldn't bind to 843, the xml file is being served out of 8000
[14:51] trotter has joined the channel
[14:52] dall: jerrysv, i don't understand you.... do i have to use a port below 1024 ? at the moment i test the code with 8000 and 8080 both shown this message
[14:52] kohai: @NodeJSAtSO: What is the most mature/stable mysql node.js module http://bit.ly/ikfGWO (link: http://stackoverflow.com/questions/6345090/what-is-the-most-mature-stable-mysql-node-js-module?utm_medium=twitter&utm_source=twitterfeed)
[14:53] mason has joined the channel
[14:54] kohai: @zephrax: http client interface binding patch for #nodejs https://gist.github.com/9476d3d2fc4fbf61a878 (works for 0.4.8 too)
[14:54] leahculver__ has joined the channel
[14:54] leahculver__ has joined the channel
[14:54] jerrysv: dall: by default, socket.io wants to open up port 843 as well as the port you've bound to. port 843 is the port flash wants to connect to by default.
[14:54] pdonald has left the channel
[14:54] jerrysv: dall: since it cannot bind port 843 to serve up the flash xml security policy (telling the flash fallback what it can connect to, etc), it is instead serving it up under your original port (8000)
[14:55] jerrysv: dall: in this case, it's just informing you what happened
[14:55] __tosh has joined the channel
[14:55] mason: hi everyone - hopefully an easy question - on OSX, is there a way to have node ignore all the .DS_Store files?  Currently it's throwing an exception trying to parse them
[14:56] jerrysv: dall: for more information on the flash xml security policy file, and port 843, see: http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html
[14:56] dall: jerrysv, btw i started node with root privileges and now i don't see that message
[14:56] kohai: @jblemee: @rmat0n @nadouani @mathildelemee @tonyskn @paulgreg Node.js c'est l'avenir :)
[14:57] jerrysv: dall: correct, but i wouldn't suggest running node as root :)
[14:58] dall: jerrysv, btw it seems not working
[14:58] kohai: @indutny: Hey, are you a #node.js ninja? Time to start following node.js rockstar: http://j.mp/le9FYl I'm so close to 100 followers, we can do this! (link: https://github.com/indutny)
[14:58] Sidnicious|Home has joined the channel
[14:59] dall: jerrysv, SERVER: http://nopaste.info/0e3904562f.html
[14:59] jerrysv: !help
[14:59] Emmanuel__ has joined the channel
[14:59] Rodtusker has joined the channel
[14:59] dall: jerrysv, CLIENT: http://nopaste.info/147a5422dd.html
[14:59] kohai: @nadouani: @jblemee @rmat0n @mathildelemee @tonyskn @paulgreg bon jb, je note qu'après javascript, c'est #nodejs l'avenir :p (je ne désapprouve pas:)
[14:59] strmpnk_ has joined the channel
[15:00] cjm has joined the channel
[15:00] bradleymeck has joined the channel
[15:00] herbySk has joined the channel
[15:00] eresair has joined the channel
[15:01] davidascher has joined the channel
[15:01] groom has joined the channel
[15:01] RORgasm has joined the channel
[15:03] jakehow has joined the channel
[15:04] shafire has joined the channel
[15:04] shafire: hi
[15:04] adambeynon has joined the channel
[15:04] shafire: when I require a library into a variable. how can I make this variable globally, so that I do not need to do anylib.someMethod(), just someMethod()... ?
[15:05] zeade has joined the channel
[15:05] ryanfitz has joined the channel
[15:06] xerox: no
[15:06] philtor has joined the channel
[15:06] colinclark_ has joined the channel
[15:06] baudehlo: var someMethod = require('anylib').someMethod;
[15:07] dguttman has joined the channel
[15:07] shafire: baudehlo: thank you ...:)
[15:08] matjas has joined the channel
[15:09] asabil has joined the channel
[15:09] Corren: has anyone written a munin plugin for node
[15:10] mason has left the channel
[15:10] BillyBreen has joined the channel
[15:11] softdrink has joined the channel
[15:11] markc has left the channel
[15:12] jamesbroad has joined the channel
[15:12] newy_ has joined the channel
[15:13] Quex has joined the channel
[15:13] Quex: niggers
[15:13] softdrink has joined the channel
[15:14] iFire has joined the channel
[15:14] Quex: ACTION np: Johnny Rebel jr. - Ship those Niggers back [02:00]
[15:14] stonebranch has joined the channel
[15:14] baoist has joined the channel
[15:14] kohai: @LazycoderLinks: Less Than Dot - Blog - node.js using mustache.js for templating http://j.mp/j957Z0 (via Instapaper) (link: http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/node-js-using-mustache-js)
[15:15] Rodtusker has joined the channel
[15:15] davidascher has joined the channel
[15:15] dnjaramba has joined the channel
[15:16] BillyBreen has joined the channel
[15:16] kohai: @MathildeLemee: Le probleme de #nodejs c est surtout l hebergement pour l instant !!! Ni #heroku ni #dotcloud ne supportent websocket :/
[15:16] Yoric1 has joined the channel
[15:17] EyePulp: anyone want to +kb Quex?
[15:17] Quex: suck me
[15:17] yozgrahame has joined the channel
[15:17] EyePulp: nice
[15:17] Will|: EyePulp: /ignore is your friend
[15:17] huge has left the channel
[15:18] Will|: lol
[15:18] brettgoulder has joined the channel
[15:18] EyePulp: Will|: yeah, but then every new visitor has to put up with his idiocy at least once.
[15:18] matjas has joined the channel
[15:18] EyePulp: =P
[15:19] devdazed has joined the channel
[15:19] Will|: EyePulp: I meant as a temporary fix until… well ^ that
[15:19] dyer has joined the channel
[15:19] dyer has joined the channel
[15:21] leoherrick has joined the channel
[15:21] kohai: @Rapiere: @MathildeLemee faudrait pas monter un hébergeur #nodejs en France ? :p
[15:22] saurabhverma has joined the channel
[15:22] saschagehlich has joined the channel
[15:24] mhausenblas has joined the channel
[15:25] __class__ has joined the channel
[15:25] kohai: @london_ajax: Two events in July: 1-day mobile conference on July 2nd, and free meetup on Node.js on the 12th: http://t.co/JH4odPh for more details (link: http://londonajax.com/)
[15:26] Poetro1 has joined the channel
[15:26] jamey-uk: Can anyone tell me why line 99 says this.files.image is undefined yet it is set and available in the .uploadComplete() function above it? I've just converted it into a "class", not completely sure what I'm doing. http://pastebin.com/Wh1H5jBM 
[15:26] kohai: @cedric_exbrayat: @MathildeLemee  #nodejs  tu as essayé nodester ou no.de  ?
[15:26] harth has joined the channel
[15:27] dnjaramba has joined the channel
[15:28] luke` has joined the channel
[15:28] BillyBreen has joined the channel
[15:28] erictj has joined the channel
[15:29] saurabhverma has joined the channel
[15:29] wookiehangover has joined the channel
[15:29] kohai: @grahamlyons: Just joined @bundlr and created this little bundle of #nodejs stuff: http://t.co/R72xPFR Not convinced yet; do really I need a bookmarklet? (link: http://gobundlr.com/b/node-js-stuff)
[15:29] kohai: @_funkyboy: A geek with a hat » Comparing clojure and node.js for speed: http://swizec.com/blog/comparing-clojure-and-node-js-for-speed/swizec/1593
[15:30] kohai: @paulbjensen: @rubyflow You might want to tag that last post with Node.js and @CoffeeScript as well ;)
[15:31] framlin: jamey-uk: assuming immageResized is a callback the this refers to the object that is calling the callback
[15:32] framlin: so you have to do var self = this; ..... self.files.image.path ...
[15:32] sreeix has joined the channel
[15:32] unlink has joined the channel
[15:32] unlink has joined the channel
[15:33] jamey-uk: framlin: thanks, so I should do var self = this; at the beginning of every function
[15:33] jamey-uk: ?
[15:34] framlin: no, you hate to declare selv OUTSIDE the function/closure
[15:34] bagock has joined the channel
[15:34] framlin: above the thsi.imageResized = function(.....
[15:34] Swimming_bird has joined the channel
[15:34] framlin: not haTe but have ... ;)
[15:35] bentruym_ has joined the channel
[15:35] jamey-uk: framlin: thanks, do you mean above the this.uploadComplete() function though? so that it's available to all of those functions?
[15:35] meat_popsicle has joined the channel
[15:35] briznad has joined the channel
[15:36] mikegerwitz: jamey-uk: the problem here is that you're not defining the functions on the prototype, therefore 'this' is bound to the method rather than the instance itself
[15:36] framlin: jamey-uk: yepp, I think line 73 would a good place
[15:36] mikegerwitz: jamey-uk: if you instead did ImageUpload.prototype.uploadComplete = function(), you'd be fine
[15:36] meat_popsicle has joined the channel
[15:36] mikegerwitz: jamey-uk: (outside of the ctor, though) - the way you're doing it also redefines the methods for each new instance
[15:36] nibblebot has joined the channel
[15:37] mikegerwitz: v8: function Foo() { this.stuff = 'foobar'; } Foo.prototype.doStuff = function() { return this.stuff }; ( new Foo() ).doStuff();
[15:37] v8bot: mikegerwitz: "foobar"
[15:37] jamey-uk: mikegerwitz: so if I do that prototype syntax for each of the functions like you say, it'd all work much better?
[15:38] jamey-uk: ah okay so the functions are defined after it, using the prototype syntax?
[15:38] mikegerwitz: jamey-uk: yes
[15:38] jamey-uk: I'll give it a go, thanks :)
[15:38] framlin: mikegerwitz: it seems, that he passes the function as a callback to im.resize
[15:39] framlin: so it does no matter if he declares it into the objects or into the prototype of the object, because the chontext is im
[15:39] jamey-uk: framlin: is that not wise? what should I do instead? I've just rearranged the functions outside using the prototype syntax
[15:39] jamey-uk: I'd like to do it the most correct way
[15:39] mikegerwitz: framlin: Ah, so you're right.
[15:39] framlin: it is very very wise to use the prototypes
[15:40] kohai: @obazoud: @MathildeLemee essaie #nodejs + @Nodester , voir http://t.co/mW4BqTr la mise à jour du dashboard est faite avec uniquement du #socketio (link: http://statusdashboard.nodester.com/)
[15:40] jamey-uk: this is my first time doing JavaScript properly
[15:40] framlin: it is IMHO best practice
[15:40] jamey-uk: do I need the "var self" thing still then?
[15:40] mikegerwitz: jamey-uk: pass in function() { return self.imageResized() }; instead if 
[15:40] mikegerwitz: jamey-uk: yep
[15:40] framlin: but as I read yourt coud it would not sove your probleme ... where this depends on the kind im is calling the prototype
[15:41] saschagehlich has joined the channel
[15:41] pkarl has left the channel
[15:41] framlin: the callback
[15:41] jamey-uk: I can't just put self.imageResized as the callback, I need to do the anonymous functions like you wrote?
[15:42] mikegerwitz: jamey-uk: yes
[15:42] sirdancealot has joined the channel
[15:42] framlin: no you do'nt if you declare them like you did. Then you have a clousure and refereto this as me ....
[15:43] CrypticSwarm has joined the channel
[15:43] jamey-uk: mikegerwitz: but should I put the two/three arguments those functions are expected into the call within that anonymous function? or is that automatically picked up?
[15:43] mikegerwitz: Yes - if you use prototypes, you have to use th eclosure, otherwise if you keep the code the same, then framlin is right
[15:43] framlin: if you use prototypes, you have to use the anonymous-style
[15:43] jamey-uk: okay, I'm definitely using prototypes, just have to get it all working now
[15:43] framlin: but because prototypes are best practice, you should do it like mikegerwitz adviced you
[15:44] jamey-uk: so to get to this.files, do I use self.files or this.files?
[15:44] mikegerwitz: jamey-uk: in that case you can do: return self.imageResized.apply( this, arguments );
[15:44] mikegerwitz: jamey-uk: then you don't have to pass the args manually
[15:44] jamey-uk: ta
[15:44] mikegerwitz: actually
[15:44] kohai: @clacote: @cramforce Some friends (@MathildeLemee) desperatly looking for Node.js (free) hosting : any advice?
[15:44] kuya_ has joined the channel
[15:44] mikegerwitz: the apply might screw things up..let me doble-check that
[15:44] mikegerwitz: double*
[15:44] jamey-uk: okay
[15:45] broofa has joined the channel
[15:46] samuelkadolph has joined the channel
[15:46] mikegerwitz: jamey-uk: Yeah the apply screws it up. If you do it in that way, then you'd have to replace 'this' (the first argument) with the actual instance of the object
[15:46] mikegerwitz: jamey-uk: if you pass the arguments manually, you don't have to do that. apply() binds 'this' to the first argument passed to it
[15:46] thalll has joined the channel
[15:46] jamey-uk: okay that's probably a bit too confusing for me right now, I just want to get it working in the less elegant way with prototypes, then I'll mess about with .apply()
[15:47] bentruym_ has joined the channel
[15:49] jamey-uk: mikegerwitz: is there any chance you can take a look and see what I'm doing wrong? http://pastebin.com/VgtiS30R
[15:49] aliem has joined the channel
[15:49] jamey-uk: I'm getting self is not defined on line 97
[15:49] kohai: @jquery_dennis: Reading: Node.js Step by Step: Blogging Application: Advertise here In the previous episode in this session, you... http://bit.ly/kHqI8N (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=twitterfeed&utm_medium=twitter)
[15:50] mikegerwitz: jamey-uk: you defined self in the ctor
[15:50] pixel13 has joined the channel
[15:50] mikegerwitz: jamey-uk: so it's only available in that function
[15:50] context: jamey-uk: self is not defined.
[15:50] jamey-uk: mikegerwitz: ctor?
[15:50] context: constructor
[15:50] mikegerwitz: jamey-uk: put the declarationat the top of uploadComplete
[15:50] pixel13 has left the channel
[15:50] jamey-uk: var self = this; ?
[15:50] mikegerwitz: jamey-uk: The constructor is the function you call 'new' on - in this case, ImageUpload
[15:50] mikegerwitz: Yep
[15:50] kohai: @allwebdesign: Node.js Step by Step: Blogging Application http://bit.ly/m2LEUx (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+nettuts+%28Nettuts%2B%29)
[15:50] context: node is not ruby. there is no self. there is 'this'
[15:50] kohai: @webdesignedu: Node.js Step by Step: Blogging Application: Advertise here In the previous episode in this session, yo... http://bit.ly/ilDg4R #Tutorial (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+nettuts+%28Nettuts%2B%29)
[15:51] jamey-uk: context: it's what someone else advised me to do, add a self variable which points to this
[15:51] mikegerwitz: jamey-uk: The purpose of `var self = this;` is to get around the fact that 'this' is rebound. That's fine. But you need to define it in the same scope
[15:51] jamey-uk: mikegerwitz: okay, so I've moved it to the top of uploadComplete(), why do I have to define "self" at all?
[15:51] mikegerwitz: jamey-uk: Because otherwise 'this' will refernce the closure, rather than the instance of the object
[15:51] troessner has joined the channel
[15:51] jamey-uk: yep I get the scope bit, just trying to understand the first part of your sentence now :) why is 'this' rebound? because it's an instance rather than the definition?
[15:52] kohai: @developerluke: "Bulletproof Node.js Coding" - http://bit.ly/iJP2HG (link: http://stella.laurenzo.org/2011/03/bulletproof-node-js-coding/)
[15:52] context: jamey-uk: yes. its very useful.
[15:52] eb4890 has joined the channel
[15:52] level09: is it a good idea to turn my php cron jobs in to a nodejs ones ? 
[15:52] context: jamey-uk: it also helps to know why it helps
[15:52] pyrony has joined the channel
[15:52] level09: does that significantly improve performance
[15:52] mikegerwitz: jamey-uk: 'this' is bound to the function, unless the caller binds it with call() or apply(). If part of a prototype, 'this' is bound to the method instance, unless using call() or apply()
[15:52] level09: my php crons are currently locking the db alot
[15:52] mikegerwitz: object instance*
[15:53] tmpvar has joined the channel
[15:53] jamey-uk: mikegerwitz: okay I think I understand, but I still don't understand why I can't do return this.imageResized() instead of self.imageResized(), surely because it is a prototype, 'this' refers to the instance, and because we're mapping self to 'this', then it is pointing to the same thing? :(
[15:54] troessner has joined the channel
[15:54] adambeynon has joined the channel
[15:54] Yuffster_work has joined the channel
[15:54] mikegerwitz: jamey-uk: uploadComplete is part of the prototype
[15:54] mikegerwitz: jamey-uk: the closure is not
[15:54] jamey-uk: ohhh
[15:54] mikegerwitz: jamey-uk: unless explicitly defined on foo.prototype
[15:55] jamey-uk: so we're making "this" available (the scope of the object, rather than of the closure itself) within the little anonymous closure at the bottom :)
[15:55] dyer has joined the channel
[15:55] jamey-uk: yeah I think I finally understand it!
[15:55] kohai: @Olmo_INXCO: Node.js is for ppl who already know Javascript and don’t want to learn a new language, not systems optimization ppl. http://bit.ly/k7vJ0x (link: http://blog.ankurgoyal.com/post/6433642218/node-js-is-backwards)
[15:55] aliem has joined the channel
[15:55] mikegerwitz: jamey-uk: we're just storing the reference to 'this' so we can still use it when it's clobbered by the callback, yes :)
[15:56] jamey-uk: I can see why that's quite an important thing to understand :)
[15:56] framlin: at my first days with JavaScript I called that the "this-hell" ;)
[15:56] mikegerwitz: jamey-uk: it can be confusing
[15:57] mikegerwitz: v8: var obj = { foo: 'bar'; } function foo() { return this.foo; } foo.call( bar );
[15:57] v8bot: mikegerwitz: SyntaxError: Unexpected token ;
[15:57] kohai: @thefrontend: Node.js is backwards http://bit.ly/lmLZpA (link: http://www.dzone.com/links/rss/nodejs_is_backwards.html)
[15:57] mikegerwitz: v8: var obj = { foo: 'bar' }; function foo() { return this.foo; }; foo.call( bar );
[15:57] v8bot: mikegerwitz: ReferenceError: bar is not defined
[15:57] jamey-uk: I was reading John Resig's JS book recently to try and understand "this", but I think you finally just got me to understand it
[15:57] mikegerwitz: v8: var obj = { foo: 'bar' }; function foo() { return this.foo; }; foo.call( obj ); // dmanitT!
[15:57] v8bot: mikegerwitz: "bar"
[15:57] mikegerwitz: but it can be powerful. Jesus haha that was my point
[15:59] jerrysv: now, if only "this" were a 1 letter/symbol word.
[15:59] mikegerwitz: jamey-uk: It's hard to read about. I'd just play around with nested closures, call(), apply(), prototypes, and doing things like Array.prototype.slice.call(). Seeing what it all does
[15:59] isaacs has joined the channel
[16:00] jamey-uk: Yeah, the Array.prototype.slice.call() stuff has always confused me
[16:00] jakehow has joined the channel
[16:01] mikegerwitz: v8:  var arr = [ 1, 2, 3 ]; Array.prototype.slice.call( arr, 1 );
[16:01] v8bot: mikegerwitz: [2,3]
[16:01] mikegerwitz: v8: var arr = [ 1, 2, 3 ]; arr.slice( 1 );
[16:01] v8bot: mikegerwitz: [2,3]
[16:01] sandropadin has joined the channel
[16:02] sirdancealot has joined the channel
[16:03] kohai: @KevinHazzard: @BlessYahu node.js has a good chance of becoming what I want in a JavaScript web server framework, at least a 60% chance at this point.
[16:03] mikegerwitz: jamey-uk: That's the same concept we were just talking about with prototypes. Since arr is an instance of Array, it contains all members of Array.prototype, and 'this' will be bound to the instance of the array. Calling Array.prototype.slice.call() just does what JS is doing in the background. Binding slice() to arr.
[16:03] troessner has joined the channel
[16:03] Emmanuel__ has joined the channel
[16:03] Cover|Gone:  v8: var obj = { foo: 'bar' }; var foo2 = (function foo() { return this.foo; }).bind(obj); console.log(foo( obj ),foo2());
[16:03] CIA-92: node: 03Ryan Dahl 07master * r1261b17 10/ (src/tcp_wrap.cc src/timer_wrap.cc): libuv wraps: Dispose of JS object on close() - http://bit.ly/lQthzM
[16:03] CIA-92: node: 03Ryan Dahl 07master * r5fd9adc 10/ src/node_buffer.h : Remove confusing comment in node_buffer.h - http://bit.ly/mCxe3G
[16:03] CIA-92: node: 03Ryan Dahl 07master * r86214c9 10/ (3 files in 3 dirs): tcp_wrap: Initial wrap of uv_read_start - http://bit.ly/jwv8zM
[16:03] kohai: @dreamerslab: 怎用 nginx 當 node.js frontend req/s 馬上掉一千
[16:03] RC1140 has left the channel
[16:04] Emmanuel__ has joined the channel
[16:05] burg has joined the channel
[16:06] tmpvar has joined the channel
[16:07] Swizec has joined the channel
[16:07] framlin: jamey-uk: you may have a look at http://pastebin.com/nu3CNuHJ 
[16:07] donaldpcook has joined the channel
[16:08] framlin: there you can see how to use a function to bind every function to every object/context you want
[16:08] jamey-uk: framlin: thanks, looking now
[16:09] mikegerwitz: Function.bind() is predefined and will do that, but framlin's example shows what it does, which is still essential to understand
[16:09] patrickarlt has joined the channel
[16:09] framlin: ;)
[16:09] kohai: @cuppster: Go #nodejs or go home!
[16:10] kohai: @KPhoen: fait joujou avec du Node.js et des WebSocket. So far so good comme on dit =P
[16:10] jamey-uk: framlin: tis hurting my brain right now, but I'm going to keep coming back to that pastebin, thanks
[16:10] mikegerwitz: So actually, you could just use Function.bind() instead of using a closure manually. Sorry - nearly all the code I have to write has to be compatiable all the way back to IE 6, so I rarely use Function.bind()
[16:10] gkmngrgn has joined the channel
[16:10] kohai: @adrienjoly: à 3 lignes de javascript près, {{mustache}} s'entend bien avec node.js :-)
[16:10] jamey-uk: mikegerwitz: okay so I don't have to understand doing it within a closure for now, I'm using node.js so no need to worry about client-side stuff for me yet :)
[16:11] kohai: @DestMoonDesigns: #Node.js Step by Step: Blogging Application http://goo.gl/fb/csu0T #design #javascriptajax #javascript #nodejs (link: http://feeds.feedburner.com/~r/DestMoonDesigns/~3/wxy5rfprq7E/?utm_source=feedburner&utm_medium=twitter&utm_campaign=DestMoonDesigns)
[16:12] jamey-uk: i'm very close to the end of this now, one final problem: 'res' isn't being passed between the functions (188-190) where it is needed on line 169: http://pastebin.com/C3LqDDZX
[16:12] temp01 has joined the channel
[16:13] fly-away has joined the channel
[16:14] jomoho has joined the channel
[16:14] vitez has joined the channel
[16:14] framlin: res in line 188 is not the same as in line 189
[16:14] Mrfloyd has joined the channel
[16:14] framlin: in line 189 its the argument that the function that is calling the callback is passing
[16:15] framlin: and the res in 190 ist that local res
[16:15] Sidnicious has joined the channel
[16:15] svend has joined the channel
[16:15] sirdancealot has joined the channel
[16:15] samuelkadolph: Is there a way to make fs.read not call your callback until there is data to read from the file?
[16:16] jamey-uk: framlin: hmm, so should I take res out of line 189 and then put a 'var something = res;' after line 188? then line 190 would see that? not sure how to fix it
[16:16] caolanm has joined the channel
[16:16] jerrysv: isaacs: you around?
[16:17] helloMoto has joined the channel
[16:17] kohai: @Mischievous_INC: Node.js Step by Step: Blogging Application  #WebDesign #NetTuts # Tutorial http://t.co/uea2GpY (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+nettuts+%28Nettuts%2B%29)
[16:17] adrianmg has joined the channel
[16:17] rick_ has joined the channel
[16:17] ewdafa has joined the channel
[16:18] tmpvar has joined the channel
[16:18] framlin: jamey-uk: what res should be passed to what function-call?
[16:18] Sami_ZzZ has joined the channel
[16:18] kohai: @phpbangla: Node.js Step by Step: Blogging Application:- SERVICE_DISCONTINUED|Service has been discontinued - see http://u.nu/unu-discontinued
[16:18] TooTallNate has joined the channel
[16:19] jamey-uk: framlin: good point… I think it's the outermost one (app.post…)
[16:20] dmcquay has joined the channel
[16:20] framlin: ah, then it should be enough to rename res in line 189
[16:20] jamey-uk: inside the .complete() function?
[16:20] jtsnow has joined the channel
[16:21] framlin: you are declaring an anonymous callback-funtion, that you are passing to complete
[16:21] jamey-uk: framlin: oh wait, no, I think I see - outside of the callback, so before the .complete(…) line, correct?
[16:21] Vertice: oh neat - https://github.com/ignacio/LuaNode
[16:21] framlin: that callback is called with res as 2nd param
[16:22] framlin: depends on what of all this res you need ;)
[16:22] mundanity has joined the channel
[16:23] eee_c has joined the channel
[16:24] kohai: @dreamerslab: @godfat 比起直接用 node.js :S 但是我又不想讓 node.js host static file, 所以還是用 nginx 當 frontend...
[16:24] CoverSlide: jeez
[16:24] CoverSlide: ok if comes to the point where someone mentions node every 5 seconds on twitter, can we filter the bot somehow?
[16:24] jamey-uk: framlin: okay this is what I ended up doing (which is working!) http://pastebin.com/xA4DKc1M on line 186, used on line 166. 
[16:25] framlin: if you want to pass the parameter passed by the /upload-callback as second param to the ctor of ImageUpload, you have to rename res in line189
[16:25] kohai: @dreamerslab: @godfat 要是用現成的 node.js framework 像是 express.js 那更是慢到爆炸, 比純 node.js 慢十倍
[16:25] jamey-uk: framlin: isn't that what I've just done? renamed it to 'test'?
[16:25] kriskowal has joined the channel
[16:25] iammerrick has joined the channel
[16:26] framlin: I think you do not need this test var
[16:26] jamey-uk: I can just do away with it completely?
[16:26] Cleer has joined the channel
[16:27] DTrejo has joined the channel
[16:27] framlin: yepp, you have to
[16:27] jamey-uk: well, it worked with the pointless rename but now i've removed it and just put 'res' in there it works too of course :) thanks!
[16:28] framlin: its enough to have no param res in the callback-signiture of the function you are passing to complete
[16:28] jamey-uk: yeah because it's inherited through the fact that it's a closure?
[16:28] framlin: welcom ;)
[16:28] framlin: yepp, its a closoure too
[16:28] gazumps has joined the channel
[16:28] framlin: you got it ;)
[16:28] ewdafa has joined the channel
[16:29] jamey-uk: awesome! my code is way, way, way better than it has ever been before
[16:29] jamey-uk: prototypes == very useful
[16:29] framlin: YEPP!
[16:29] dnjaramba has joined the channel
[16:29] framlin: and you save memory ;)
[16:29] pigmej has joined the channel
[16:29] framlin: and you can inherit them
[16:29] matjas has joined the channel
[16:30] jamey-uk: ooh, that's probably going to be further down the line, but should be interesting
[16:31] framlin: the prototype-based inheritance of JavaScript rocks! ;)
[16:31] kohai: @mtaydn: Node.js - It says; “Node.js is a server-side JavaScript environment that uses an asynchronous event-driven... http://tumblr.com/xxd2zw7a3r
[16:31] jamey-uk: wow this bot is annoying
[16:32] context: so ignore it
[16:32] framlin: ACTION is ignoring it ;)
[16:33] context: /ignore every irc client for the past 20 years has had that command
[16:33] context: doesn't mean its no good. it still does exactly what it was designed to do
[16:33] jamey-uk: true that, just don't see the point in such a loud bot
[16:34] context: jamey-uk: a few people have access to tweet directly from the bot, and thus help people / correct people 
[16:34] context: i dont think it hurts personally :/ kinda like it. might see a tweet or two showing you something you dont know
[16:34] framlin: yepp, if would like to read all that twitter-stuff I would follow it ... but I don't
[16:34] jerrysv: i kind of like it too, though i find myself saying something in response to it, and half of the people on channel are ignoring it
[16:34] jamey-uk: well, it's being ignored now :)
[16:35] NetRoY has joined the channel
[16:37] Corren has joined the channel
[16:37] Tidwell has joined the channel
[16:39] kohai: @miksago: @jcoglan yes, I'll be there. I'll also be at the node.js meetup tonight.
[16:39] amerine has joined the channel
[16:40] kohai: @milsonian: I heard you like json and node.js with your bash... Termkit, modernized unix shell - looks interesting.  http://t.co/08BShFi (link: http://acko.net/blog/on-termkit)
[16:41] erictj has joined the channel
[16:41] kohai: @chicostartuprss: London Ajax User Group Meetup: Beyond Node.js, 12th July 2011: London Ajax User Group Meetup: Beyond Node.js - 1... http://bit.ly/jZTOzT (link: http://lanyrd.com/2011/laugjuly/?utm_source=twitterfeed&utm_medium=twitter)
[16:41] kohai: @trzewiczek: I wanna code in node.js - please, please let me!! #nodejs #javascript
[16:41] adambeynon has joined the channel
[16:41] perezd has joined the channel
[16:42] xastey has joined the channel
[16:44] hojberg has joined the channel
[16:44] uchuff has joined the channel
[16:44] jakeg has joined the channel
[16:44] pixel131 has joined the channel
[16:45] pixel131 has left the channel
[16:45] kris_will has joined the channel
[16:46] knuthy has joined the channel
[16:46] pyrony has joined the channel
[16:47] steffkes has joined the channel
[16:47] kohai: @autofill: What's everyone's favorite couchdb package for node? #nodejs #couchdb
[16:48] jamey-uk has left the channel
[16:48] kohai: @stevestarges: Node.js is backwards: I read an interview with James Duncan, who is part of the company backing Node.js. One que... http://bit.ly/jDPSt5 (link: http://www.dzone.com/links/rss/nodejs_is_backwards.html)
[16:51] polyrhythmic has joined the channel
[16:52] galaxywatcher has joined the channel
[16:52] newy_ has joined the channel
[16:53] context: noce.
[16:53] context: nice* yet another blog article thats completely fucking wrong
[16:53] baudehlo: lol
[16:53] baudehlo: yeah i read it earlier
[16:54] jerrysv: context: get used to it
[16:54] Xano has joined the channel
[16:54] baudehlo: it doesn't help that what James said didn't make a lot of sense.
[16:54] jerrysv: "I certainly don’t think Node.js is completely a bad thing"
[16:55] jerrysv: i certainly don't think that mercury is a completely bad thing
[16:55] olauzon has joined the channel
[16:55] srid has joined the channel
[16:55] srid has joined the channel
[16:56] context: haha
[16:56] context: jerrysv: its fun to play with
[16:56] context: so swimming in
[16:56] sharkbone has joined the channel
[16:56] context: go* wow i cant type today
[16:56] jerrysv: i like how it shines when it runs down my hand
[16:57] kohai: @NodeJSAtSO: creating a tcp socket with net.createConnection(port, [host]) in node.js http://bit.ly/jKvxs4 (link: http://stackoverflow.com/questions/6346911/creating-a-tcp-socket-with-net-createconnectionport-host-in-node-js?utm_medium=twitter&utm_source=twitterfeed)
[16:57] sechrist has joined the channel
[16:57] dgathright has joined the channel
[16:57] kohai: @ednapiranha: YES! it's alive!! http://greatbrain.herokuapp.com/?debug=true #greatbrain #nodejs
[16:58] _Sorensen: what in the hell
[16:58] reid has joined the channel
[16:58] langworthy has joined the channel
[16:59] aperiodic has joined the channel
[17:00] asobrasil has joined the channel
[17:00] kohai: @gafferongames: I guess you could also consider Node.js for server stuff as well, if you wanted to dev HTTP based server really quickly.
[17:00] nphase has joined the channel
[17:01] kruckenb: I'm trying to debug an issue with node 0.4.8 as https client. socket closes w/o data xfer and w/o error. looks like SSL or encoding issue, AFAICT. any suggestions on how to debug?
[17:01] baudehlo: lots of print statements
[17:01] kohai: @dylanevl: digs through node.js projects.  So many promises, so few functional.
[17:02] dmcquay_ has joined the channel
[17:02] dguttman has joined the channel
[17:02] sreeix has joined the channel
[17:03] Mrfloyd has joined the channel
[17:03] kruckenb: TLS debug msgs show secure session is established, and looks like it sends the HTTP req and starts getting back (encrypted) data, but socket closes before data is decrypted
[17:03] Murvin has joined the channel
[17:04] Murvin: hi
[17:05] kruckenb: curl works fine against the same https server, wget doesn't, so it's gotta be some corner case where curl is more tolerant than node.js https
[17:07] kruckenb: any suggestions welcome :)
[17:07] skyler_brungardt has joined the channel
[17:08] Shinuza has joined the channel
[17:10] context: i get internet rage sometimes :( i need to stop that
[17:11] kmiyashiro has joined the channel
[17:11] kohai: @_sjs: Pretty cool to see async module definitions coming to #nodejs. I'll have to update some of my cross-platform libs on npm.
[17:11] `3rdEden has joined the channel
[17:12] Dinosaurus has joined the channel
[17:12] Dinosaurus has left the channel
[17:12] harth has joined the channel
[17:12] joshthecoder has joined the channel
[17:13] Skola: http://www.google.com/insidesearch/
[17:13] Skola: pretty exciting
[17:13] vikstrous has joined the channel
[17:13] azend has joined the channel
[17:14] kmiyashiro has joined the channel
[17:14] viz has joined the channel
[17:14] AaronMT has joined the channel
[17:17] mjr_ has joined the channel
[17:17] samsonjs has joined the channel
[17:17] jacobolus has joined the channel
[17:19] butu5 has joined the channel
[17:19] kohai: @chris_ys: 虽然 node.js 的发展势头很好, 但是实际编写项目就发现完成度不高
[17:19] sirkitree has joined the channel
[17:19] NetRoY has joined the channel
[17:20] Murvin_ has joined the channel
[17:21] Shrink has joined the channel
[17:22] SamuraiJack has joined the channel
[17:22] kohai: @creativeatmosO: Nettuts+: Node.js Step by Step: Blogging Application:     Advertise here     In the previous episode in ... http://bit.ly/ilDg4R #design (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+nettuts+%28Nettuts%2B%29)
[17:23] Murvin_: yesterday I posted a problem regarding socket hang up.  and it is reproducible.   I have a http server that uses http.request to get data from remote site.   I run load testing with 500 concurrent threads. and I set agent.maxSockets be 1024.   When I run it, no problem.  But I let it run without any acitivity after work, and today when I come back, there is a socket hangup error.  I can't even connect to the http.server.   HOWEVER,
[17:23] Murvin_: as normal
[17:24] samuelkadolph has left the channel
[17:26] AvianFlu has joined the channel
[17:26] bshumate has joined the channel
[17:26] bshumate has joined the channel
[17:27] shafire has joined the channel
[17:27] shafire: hi
[17:27] shafire: var test = function() { this.a = "a"; }; test.prototype.a = function() { console.log(this.a); }   <-- why is the output undefined?
[17:28] Murvin_: this.a is a function, right?
[17:28] tbranyen: shafire: because you didn't use new
[17:28] erictj has joined the channel
[17:28] Murvin_: yes.. new it
[17:28] dyer has joined the channel
[17:28] dyer has joined the channel
[17:29] tbranyen: you never actually set the prototype chain
[17:29] tbranyen: you just set the chain for the instances
[17:29] shafire: i don't know, if i can make a new anywhere ... :S
[17:30] tbranyen: shafire: your code is fine
[17:30] tbranyen: just do new test().a
[17:30] hojberg has joined the channel
[17:30] shafire: ah okay thank you
[17:31] Murvin_: so, anyone knows why socket die after idle for hours, and then when I try to connect to it.. node server will have socket hang up error message?
[17:31] kohai: @AlexGorbatchev: @robertfoleyjr no, that's just node.js home page :)
[17:31] Murvin_: does http.server and http.request share the same connection pool or something like that?
[17:32] fizx has joined the channel
[17:33] mikeal has joined the channel
[17:33] kriszyp has joined the channel
[17:34] LowValueTarget has joined the channel
[17:34] Murvin_: ...
[17:34] indexzero has joined the channel
[17:34] shafire: when I use require("a"), can require automatically use the new? should do this: new a();
[17:36] bradleymeck has joined the channel
[17:36] tbranyen: shafire: how so? do you want a singleton?
[17:36] tbranyen: you can just set the prototype explicity with __proto__ and save yourself the new step
[17:36] Skola has joined the channel
[17:36] tbranyen: that might work a bit better
[17:37] shafire: yes
[17:37] kohai: @huskyr: #amsterdamjs meetup about node.js (@ Ajax.org) http://4sq.com/lGQgGh (link: /login?continue=%2Fhuskyr%2Fcheckin%2F4df79c471838c789e8ba15a2)
[17:37] shafire: how to do that, do you have an example?
[17:38] Badababuba has joined the channel
[17:39] tbranyen: shafire: i guess i don't really know what you want to do :-/
[17:39] shafire: okay I will try myself :)
[17:39] `3rdEden: Does someone know how to revert back to npm 0?
[17:40] jerrysv: `3rdEden: build a cryo chamber, wake up when they invent a backward time travel machine, go back in time. 3 easy steps.
[17:40] c4milo: ahaha
[17:41] `3rdEden: jerrysv thanks for your help
[17:41] c4milo: npm 1.0.10 is pretty decent though 
[17:41] c4milo: compare to the previous versions 
[17:41] jerrysv: `3rdEden: any "time"
[17:41] c4milo: now I think npm is more SCM aware which is good 
[17:41] pt_tr has joined the channel
[17:42] ager has joined the channel
[17:43] simenbrekken has joined the channel
[17:43] miccolis has joined the channel
[17:44] Charuru has joined the channel
[17:47] pt_tr has joined the channel
[17:48] saurabhverma has joined the channel
[17:48] swistak has joined the channel
[17:49] dnjaramba has joined the channel
[17:50] tilgovi has joined the channel
[17:50] tilgovi has joined the channel
[17:51] huba has joined the channel
[17:51] Workrella has joined the channel
[17:52] jakeg has joined the channel
[17:53] dmcquay has joined the channel
[17:53] kohai: @ibmkhd: Node.js From the Enterprise Java Perspective: Node.js currently is getting much attention because it uses a conc... http://bit.ly/kpwzbF (link: http://www.dzone.com/links/rss/nodejs_from_the_enterprise_java_perspective.html)
[17:54] ager has joined the channel
[17:54] uchuff has joined the channel
[17:54] butu5 has left the channel
[17:54] cronopio has joined the channel
[17:55] gsmcwhirter has joined the channel
[17:58] indexzero has joined the channel
[17:58] jmoyers has joined the channel
[17:58] Yoric has joined the channel
[18:02] Druide_ has joined the channel
[18:03] kohai: @EuropeVAN: Reminder: Me, Myself and I on Taking Baby Steps with Node.js starts in ~1 hour: http://bit.ly/iO99p5 (link: http://europevan.blogspot.com/2011/05/me-myself-and-i-on-taking-baby-steps.html?utm_source=twitterfeed&utm_medium=twitter)
[18:03] Swimming_bird has joined the channel
[18:03] kohai: @prudhviy: build http://t.co/bbaXRNm with mochiweb, congrats you just killed node.js (link: https://github.com/basho/erlang_js)
[18:04] darshanshankar has joined the channel
[18:04] dmcquay has joined the channel
[18:05] jerrysv: if someone thinks embedding javascript into another webserver "kills" node.js, they don't know what node.js is
[18:05] AvianFlu has joined the channel
[18:05] tbranyen: jerrysv++
[18:05] v8bot:  tbranyen has given a beer to jerrysv. jerrysv now has 1 beers.
[18:05] ctide: and certainly is ignoring all the problems related to erlang
[18:05] kohai: @seetheprogress: node.js als eine sprache für server und klient das hätte schon was, hab zwar kein frontend aber browser ext. sind ja .js #unentschlossenheit
[18:06] jerrysv: tbranyen: i embedded spidermonkey into apache. didn't kill node.js
[18:06] jerrysv: and thanks :)
[18:06] tbranyen: nah i just hate how everyone assumes node is just a webserver, maybe that was the original goal, but its certaintly evolved past that
[18:06] tbranyen: minus the extraneous t
[18:06] xastey has joined the channel
[18:07] kriszyp has joined the channel
[18:07] wadey has joined the channel
[18:07] sreeix has joined the channel
[18:08] vipaca has joined the channel
[18:08] bentruym_ has joined the channel
[18:08] levi501d has joined the channel
[18:08] copongcopong has joined the channel
[18:08] RC1140 has joined the channel
[18:09] kohai: @jerrysievert: @prudhviy if that's all it takes, netscape killed node.js 15 years ago. it gets killed off at least every few days as someone else embeds js
[18:09] fille has joined the channel
[18:09] fille: hello
[18:09] fille: wondering whats your opinoin on mongodb and node.js
[18:09] Murvin_: tbranyen: but, in fact, the first few paragraphs in node.js already give people impression that it is a server. :)
[18:10] tbranyen: Murvin_: thats been there for ages
[18:10] tbranyen: like i said def original intention
[18:10] tbranyen: but taking that site at face value is bad
[18:10] Murvin_: i know. but that's what give people impression. and wihtout further exploration, it is what most people will use it.
[18:11] kohai: @BrendanAdkins: @wadetandy Add more RAM. Failing that: rewrite the app in node.js
[18:11] MooGoo: if people really expect nodejs to be a webserver, I suspect they wont use it for long
[18:11] RC1140 has left the channel
[18:11] shafire:  function() { test(arguments); };  <-- how can i split arguments up as parameters, not as one array?
[18:11] Murvin_: you are experienced node.js user, of course you will know more what node.js can apply.  but for general people who first know node, it is http server for them.  (also kinda for me).
[18:11] Murvin_: :)
[18:12] MooGoo: that example on the front page is terribly misleading
[18:12] Murvin_: i want to go beyond that but I need to come up some idea first. lol
[18:12] MooGoo: they make it sound like you can write apache in 5 lines of code
[18:12] fille: node.js is what ever i whant it to be
[18:12] jerrysv: murvin_: for me, it's a general repl, a decent webserver, a great monitoring system, and it handles my freezer's tweets for me
[18:12] tbranyen: shafire: what do you mean? arguments is an array like object just use the indexes
[18:12] tbranyen: [0] [1] [n]
[18:13] Murvin_: MooGoo:  yes.. agree.  but that's how it catch people eyes.   5 lines to replace apache!  omg.  right?
[18:13] shafire: tbranyen: i want to bypass all arguments to a function
[18:13] shafire: 0 should be parameter on position 0, 1 on 1, n on n
[18:13] Murvin_: jerrysv: monitoring system?  that's cool.   I'm using it as a rest server, and later doing load testing. lol
[18:14] tbranyen: shafire: i think call/apply might help you if i understand right
[18:14] MooGoo: I use it as a general purpose scripting language...
[18:14] tbranyen: check out Function.call Function.apply
[18:14] framlin: Murvin_: I use it as a plattform that converts my JavaScript to xmi and back ;)
[18:15] jslatts has joined the channel
[18:15] framlin: ... like MooGoo 
[18:15] kohai: @prudhviy: @jerrysievert im not against node.js however given erlang's capability of concurrency and distributed computing, server js has no bounds :)
[18:16] Murvin_: framlin: :)
[18:17] MooGoo: node having a better way to create, communicate with, and control child processes would be nice tho
[18:17] shafire: tbranyen: var a = new a(); var b = function() { a.call/apply ... (arguments); };
[18:17] shafire: something like this?
[18:17] NetRoY has joined the channel
[18:17] Murvin_: while there are so many people here,  I wanna ask you guys for help.. a socket problem bothering me for days.   In brief, it is about socket hang up after I run the node.js server and left it idle for hours.  When I come back and send request to the http server, it will throw socket hang up error. 
[18:18] l90r has joined the channel
[18:18] Murvin_: the http.server actually makes the remote call (http.request).     but when the error shows up, it stops right at the http.server, before running any further or reaching the code with http.request
[18:18] sechrist_ has joined the channel
[18:18] MooGoo: I've had Sockets seemingly just disapear before but I always figured it was somehow my fault
[18:19] Dinosaurus has joined the channel
[18:19] Dinosaurus: can read console input from node?
[18:19] Shinuza has joined the channel
[18:19] Murvin_: However, when I send more request to the server, after several socket hang up error, there will be no error again, and everything becomes normal
[18:19] adambeynon has joined the channel
[18:19] Murvin_: MooGoo:  any hints?  what was your socket problem and how did you solve it?
[18:19] patcito has joined the channel
[18:20] MooGoo: I havent...it just happens rarely enough that I can live with it
[18:20] MooGoo: I cant reproduce it
[18:20] MooGoo: it just...happens
[18:20] MooGoo: and usualy without any error message
[18:20] rabidewok has joined the channel
[18:21] MooGoo: but I'm using node .5 so...
[18:21] Murvin_: i can reproduce it..  after load testing (500 threads, 50 times), then I left the server running and idle.   come back in few hours and send a request , then I will see the socket hang up error 
[18:22] Murvin_: i m using 0.4.8.
[18:22] Murvin_: where can i download 0.5?
[18:22] MooGoo: any requests in the mean time?
[18:22] MooGoo: I just pulled it from github'
[18:22] MooGoo: and that's what I got
[18:22] Murvin_: ooo
[18:22] MooGoo: but most people here seem to recomend against using the latest
[18:22] Murvin_: not stable?
[18:22] MooGoo: guess not
[18:23] kohai: @hij1nx: Dang. already 76 followers on EventEmitter2. Was only expecting a few #nodejs hackers to look at it, @github &gt; great. http://bit.ly/l8C433 (link: https://github.com/hij1nx/EventEmitter2)
[18:23] MooGoo: tho besides the rare socket issue it seems fine
[18:23] kohai: @rubbyist: What do node.js and erlang REALLY have in common? They're both just cheap EventMachine imitations.
[18:23] tbranyen: its usually not recommended to pull any os project from master head
[18:23] MooGoo: I'm still thinking it is probably my fault somehow
[18:23] DTrejo: !tweet @hij1nx we love you hihihijy :)
[18:23] kohai: @NodeKohai: @hij1nx we love you hihihijy :)
[18:23] tbranyen: which is why they have versioning
[18:23] fangel has joined the channel
[18:23] hij1nx has joined the channel
[18:24] MooGoo: meh
[18:24] MooGoo: I run nightlys all the time
[18:24] dgathright has joined the channel
[18:24] Murvin_: MooGoo:  I m discussing with my friend, and he thinks it may be related to VM..
[18:24] DTrejo: I run chrome beta, im badass
[18:24] abraham has joined the channel
[18:24] Xano has joined the channel
[18:24] MooGoo: you mean chromium?
[18:24] copongcopong1 has joined the channel
[18:24] DTrejo: lol no, im not actually badass
[18:25] MooGoo: unless your chome icon is pale blue
[18:25] MooGoo: if you want to be a true badass you should use Firefox+Vimperator
[18:25] kohai: @NodeKohai: @rubbyist If Erlang is imitating ruby, Erlang must have made a time machine to go back 15 years before ruby was invented.
[18:25] tbranyen: MooGoo: nah vimium
[18:25] DTrejo: I don't like ff
[18:25] tbranyen: is real badass
[18:26] MooGoo: until you can get a decent side tabs extension for chrome I'm sticking with FF
[18:26] kohai: @netavatar: Node.js Step by Step: Blogging Application: Advertise here In the previous episode in this ses... http://bit.ly/jfaHQ1 #web #development (link: http://net.tutsplus.com/tutorials/javascript-ajax/node-js-step-by-step-blogging-application/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+nettuts+%28Nettuts%2B%29)
[18:26] tbranyen: until ff or chrome can have inline private tabs i'll stick with opera
[18:27] DTrejo: yeah I wanted that just 10 minutes ago
[18:27] MooGoo: hey I got nothing to hide
[18:27] DTrejo: pr()n + email is so important to my git workflow
[18:27] tbranyen: I tried proposing it several times, they don't want it
[18:27] tbranyen: MooGoo: has nothing to with hiding
[18:27] isaacs has joined the channel
[18:27] tbranyen: personal/work google account logins
[18:28] tbranyen: i'd rather have side by side
[18:28] tbranyen: instead of in two separate windows
[18:28] kohai: @dhruvbird: #nodejs #jabber #xmpp #bosh node-xmpp-bosh v0.3.0 is out http://t.co/jm3yoLr bugs fixed & security holes plugged in this one (link: http://code.google.com/p/node-xmpp-bosh/downloads/list)
[18:28] DTrejo: yeah, I don't like that recent change they made
[18:28] Sidnicious has joined the channel
[18:28] Sidnicious has joined the channel
[18:28] MooGoo: unless you have 2 seperate windows how will anything be side by side
[18:28] MooGoo: unless you are talking about just the tabs
[18:28] Murvin_: MooGoo: a quick question, if a socket hang up, and throws error,    will this broken socket still occupy the connection pool? or eventually it will be recycled?
[18:29] shafire: a.b(arguments) works well, but there is only one arguments and it's and array ->  a.b.apply(arguments) won't work. what's wrong?
[18:29] tbranyen: MooGoo: maybe you should give opera a shot :)
[18:29] framlin: shafire: you miss the context
[18:30] framlin: a.b.apply(ctx, arguments)
[18:30] MooGoo: Murvin_: not sure....sometimes attempting to write to the socket will throw an error
[18:30] MooGoo: the object is still around at least
[18:30] MooGoo: tbranyen: I've used opera in the past....since chrome and FF are a lot faster now I generaly dont anymore
[18:31] MooGoo: and I have Tile Tabs for FF
[18:31] MooGoo: and even some vimperator hacks to get them to work somewhat like they would in vim
[18:31] shafire: framlin: but whats ctx?
[18:31] framlin: shafire: what you want, usualy this
[18:32] tbranyen: context
[18:32] insin has joined the channel
[18:32] Murvin_: MooGoo: that's a weird problem with socket. hmmm 
[18:32] framlin: the object, that should be this inside of b
[18:32] kohai: @AJAX_bz: Node.js Step by Step: Blogging Application: Read full article submitted by vladocar [link] [comment] http://bit.ly/kIvIQ8 #AJAX #JavaScript (link: http://www.ajax.bz/node-js-step-by-step-blogging-application/?utm_source=twitterfeed&utm_medium=twitter)
[18:32] MooGoo: well
[18:32] MooGoo: thats why I think it might be my fault
[18:32] MooGoo: and I have two problems really
[18:32] Murvin_: MooGoo: what are those?
[18:33] Murvin_: I had several socket problems but i solved down to one now.
[18:33] MooGoo: I have a sync sqlite module running in a seperate process...to kinda force it to be async...
[18:33] MooGoo: and every now and then I lose all ability to communicate with that child process
[18:33] MooGoo: without any error messages
[18:33] kkaefer: MooGoo: can I recommend https://github.com/developmentseed/node-sqlite3?
[18:33] MooGoo: ill probably try one of those at some point
[18:34] H2S04 has joined the channel
[18:34] MooGoo: when I originaly went looking for a sqlite module....nothing much worked right
[18:34] euforic has joined the channel
[18:34] kkaefer: yeah, that's why we wrote one
[18:35] gozala has joined the channel
[18:35] Murvin_: oh. u wrote that? :)  cool
[18:35] unlink has joined the channel
[18:35] unlink has joined the channel
[18:35] euforic: Any project management systems out there built on  node?
[18:36] c4milo: emitter.removeListener('event', handler) doesn't work well definitively 
[18:36] Murvin_: why a PM systems need node?  just curious.. what kind of advantage it will bring and over the existing one. :)
[18:36] MooGoo: kkaefer: does that module use a child process for asyncness or native sqlite async functions?
[18:36] blueadept: anyone know of a good library or method that can resize a photo on the fly?
[18:37] euforic: Murvin_  mainly just for me to have a base to build when i actually have time
[18:37] kkaefer: libsqlite doesn't have async functions
[18:37] kkaefer: it runs them in another thread though
[18:37] kohai: @draco2002: #velocityconf : statsd : if you aren't on the node.js bandwagon there is a ruby gem : http://rubygems.org/gems/statsd
[18:37] MooGoo: I thought it had some limited ones
[18:37] kkaefer: so the main JS event loop isn't blocked
[18:37] kkaefer: MooGoo: not that I'm aware of
[18:38] kkaefer: MooGoo: that said, if you find any issues with that library, please grab me on IRC or post an issue on the project
[18:38] c4milo: ryah: ? 
[18:39] ryah: c4milo: what's up
[18:39] c4milo: ryah: why nodejs doesn't use identifiers for the listeners installed for some sort of event?
[18:39] MooGoo: sounds cleaner than what I'm doing anyways
[18:39] ryah: c4milo: ?
[18:39] MooGoo: making a new thread in C++ instead of relying on node spawn child functions
[18:39] c4milo: ryah: removeListener is not doing what it's suppose to do 
[18:39] kkaefer: MooGoo: what library are you using?
[18:39] MooGoo: https://github.com/grumdrig/node-sqlite
[18:39] tilgovi has joined the channel
[18:39] tilgovi has joined the channel
[18:40] Murvin_: euforic: not that i know at this moment. 
[18:40] ryah: c4milo: ?
[18:40] euforic: Murvin_ thanks anyway looks like i will be coding from scratch lol
[18:40] slloyd has joined the channel
[18:40] c4milo: ryah: I am not sure why nodejs doesn't have this https://github.com/joyent/node/blob/master/lib/events.js#L169 
[18:41] kkaefer: that still runs on node 0.4?
[18:41] Murvin_: euforic:  in nodejitus, there is a blog about ten node apps that need to exist.  may be u should add this there. :)
[18:41] c4milo: ryah: sorry, I'm just a little frustrated 
[18:41] kkaefer: MooGoo: oh, node-sqlite3 isn't compatible with the Web SQL standard (which is deprecated anyway)
[18:41] c4milo: ryah: let me explain myself better 
[18:42] kohai: @thegetpr: Sleepless Inc. | Expert Node.js development, software and internet development, consulting http://bit.ly/jj1qll (link: http://www.thegetpr.net/site/sleepless.com)
[18:42] ryah: c4milo: preferably in a github issue - im pressed for time atm
[18:42] euforic: Murvin_ yea I will start it later today and post source on github 
[18:42] c4milo: ryah: got it 
[18:42] MooGoo: kkaefer: no biggie, I already have a simple wrapper between it and my code
[18:42] fille: wondering whats your opinoin on mongodb and node.js
[18:43] kohai: @cddin: #nodejs installed http://twitpic.com/5bk855
[18:43] kohai: @richardvanstark: #Mongoose is awesome tool, but not so flexible as the standart #mongodb console. So, if you use #Nodejs and #mongo - you can use #mongoskin
[18:44] Murvin_: euforic:  :)  replacing JIRA...etc?  :-)
[18:44] rpj8 has joined the channel
[18:45] luke` has joined the channel
[18:45] rpj8: In jade, if I'm trying to do something like <p><input type='radio'>  No</p>, what would the syntax look ilke for that? I'm having trouble doing that
[18:46] xeodox has joined the channel
[18:46] pigmej has joined the channel
[18:47] brownies has joined the channel
[18:48] jetienne has joined the channel
[18:48] kzh has joined the channel
[18:48] kohai: @flotjs: Ability to pass in width and height as well as your own canvas element added. Next, ability to run #flojs on #nodejs
[18:50] kohai: @trzewiczek: Node.js is exactly as "low-level" and as "high-level" as I like. Not too high, not too low. #nodejs #javascript
[18:50] dnjaramba: Under SEH Team
[18:50] cronopio has joined the channel
[18:50] STUPIDWIFI has joined the channel
[18:52] wlkh has joined the channel
[18:53] fille12: rpj8  p\n input(type="radio")
[18:54] fille12: \n as newline
[18:54] rpj8: fille12: that No part is tripping me up though.
[18:54] rpj8: I understand what you have though
[18:55] fille12: what do u mean
[18:55] rpj8: I want to literally display `<p><input type='radio'> No</p>'. I can't figure out how to get 'No' in there. I am curerntly getting it as <no> tags
[18:56] fille12: javascript(type="text/javascript")  as input(type="radio")
[18:56] kohai: @fzawada: Just joined @EuropeVAN meeting about Node.js - it starts in 5 minutes http://bit.ly/iO99p5 (link: http://europevan.blogspot.com/2011/05/me-myself-and-i-on-taking-baby-steps.html?utm_source=twitterfeed&utm_medium=twitter)
[18:56] fille12: p-No
[18:56] fille12: p = NO
[18:56] fille12: time for black ops
[18:58] captain_morgan has joined the channel
[18:58] bergie has joined the channel
[18:58] kohai: @fredb001: I'm going to a Meetup with Chicago  Node.js http://meetu.ps/1sQ01 (link: http://www.meetup.com/Chicago-Nodejs/events/19689211/)
[18:59] shafire: node.js looses my class instance, when I use http.createServer(this.onRequest).listen(1234); :(
[18:59] shafire: it can't found this anymore :(
[18:59] kohai: @Fabryz: @seantron I'm trying to make an HTML5 Canvas + JQuery + Node.js + Socket.io game =)
[19:00] cha0s has joined the channel
[19:00] cha0s has joined the channel
[19:00] kohai: @indutny: Hey, #node.js community, awesome node.js rockstar is looking for 6 more followers: http://j.mp/le9FYl (link: https://github.com/indutny)
[19:00] fille12: rpj8 did u get it
[19:01] fermion has joined the channel
[19:01] indexzero has joined the channel
[19:01] ceej has joined the channel
[19:02] nodejsnoob has joined the channel
[19:02] insin: non-ironic use of the word rockstar makes me feel stabby these days
[19:03] nodejsnoob: hi... i was wondering if using nvm is a good idea to get started with node.js
[19:03] killfill: hi
[19:03] jacobolu_ has joined the channel
[19:03] nodejsnoob: https://github.com/creationix/nvm/
[19:04] stagas_ has joined the channel
[19:04] killfill: i just installed 'eyes' with npm, and cannot require it with node.. what can i check?
[19:05] killfill: i see there is /usr/local/lib/node_modules
[19:05] nodejsnoob: as you can see i am a ruby developer getting his toes wet with node.js
[19:05] sirkitree has joined the channel
[19:06] Murvin_: killfill: sudo?
[19:06] mbrevoort has joined the channel
[19:06] framlin: shafire: sounds like you miss the context-stuff
[19:06] shafire: yes
[19:06] killfill: Murvin_: sudo?
[19:07] shafire: i am trying the singleton pattern
[19:07] shafire: but fails hard
[19:07] framlin: shafire: this within a function is always the object that is calling the callback
[19:07] fille12: pleeese why cant nividia port optimus to ubuntu
[19:07] framlin: so this is not where its declared, but where its called
[19:07] shafire: framlin: but something goes wrong at my code
[19:08] adambeynon has joined the channel
[19:08] rpj8: fille12: no I don't think that was it
[19:08] framlin: what is going wrong with your code?
[19:08] fille12: hrm strange
[19:08] killfill: Murvin_: what do you mean?
[19:09] dnjaramba has joined the channel
[19:09] framlin: shafire: usually, if this is not "found" you have declaf�red a function and pass it as a callback to another function
[19:09] fille12: rpj8 i need to be honest i never tried write :D
[19:09] fille12: but p="hello"
[19:09] rpj8: fille12: ah :P
[19:09] fille12: p=PageTItle
[19:09] rpj8: well, I understand the basic syntax
[19:09] romanb has joined the channel
[19:09] framlin: if you declare that callback within an object and use "this" you intend "this" to be the object, but it isnt
[19:09] fille12: did p=hello work
[19:09] kohai: @mrtazz: reading about node.js for a fun side project. I hear it's like Erlang only better/worse/easier/more complicated and different.
[19:10] fille12: p="hello" work?
[19:10] rpj8: fille12: it wouldn't becuase I don't have a local variable named hello
[19:10] fille12: buth as a string
[19:10] __tosh has joined the channel
[19:10] killfill: hm.. before npm 1.x i just did sudo npm install and the modules were installed in a global path, i.e. /usr/local/lib/node/something
[19:10] fille12: p="hello"
[19:10] kohai: @KPhoen: @tcpc_ thx :) je viens de faire la même chose avec du Node.js + websockets et je manquais d'exemples pour le mettre en forme
[19:10] rpj8: p="hello" would work to put hello out
[19:10] killfill: 1.x doesnt installes globally anymore?
[19:10] fille12: okej, so what was your problem again
[19:10] framlin: shafire:at the moment the callback is called "this" ist the object that is calling the callback
[19:11] shafire: i will try
[19:11] rpj8: but what I'm specifically trying to do is keep the "no" part within the same <p> tags as the input item, but display the text after the input
[19:11] bradleymeck: killfill no it does it locally, which solves a lot of problems
[19:11] rpj8: so
[19:11] rpj8: for example
[19:11] bradleymeck: killfill you can use -g if you *must
[19:11] framlin: is my callback-assumption right? do you have declared a callback?
[19:11] killfill: aaAAh, this explains it all..
[19:11] killfill: :P
[19:11] killfill: im working with 3 users.. :P
[19:11] killfill: thanks
[19:12] rpj8: http://paste2.org/p/1470219
[19:12] rpj8: This does <p>Yes <input type='radio'></p>
[19:12] fille12: so it worked that way?
[19:12] rpj8: But I want <p><input type='radio'>/ Yes</p>
[19:13] framlin: shafire: if its wright, you have to use the var self = this; ... function(){ setl.foo}-pattern
[19:13] rpj8: fille12: it worked as expected, yes, but I want the 'Yes' to be displayed inline after the input radio button.
[19:13] fille12: nod
[19:13] fille12: i understand
[19:13] fille12: u dont whant to use
[19:13] fille12: span
[19:13] fille12: either then
[19:13] rpj8: i mean
[19:13] rpj8: i'd prefer to not have a workaround
[19:14] rpj8: if I want to edit my html a certain way with a jade template
[19:14] fille12: :D
[19:14] rpj8: ;)
[19:14] rpj8: but yes I'd thought about a span
[19:14] rpj8: and that would work
[19:14] rpj8: but I shouldn't HAVE to do that
[19:14] fille12: hahah
[19:14] jj0hns0n has joined the channel
[19:15] fille12: you know the
[19:15] kohai: @brianlmoon: I really want to go to the Node.JS talk next but really want to see @allspaw talk any time I can. #velocityconf
[19:15] kohai: @lwalk: Have we reached the end of the LAMP age? - http://bit.ly/fIk5Bd #js #nodejs (link: http://metamarketsgroup.com/blog/node-js-and-the-javascript-age/)
[19:15] fille12: { } syntax
[19:15] rpj8: ah I got it.
[19:15] fille12: !{}  #{}
[19:15] rpj8: http://paste2.org/p/1470231
[19:15] fille12: did it work?
[19:15] rpj8: fille12: yes, but that's for use with local variables passed from the server, I believe?
[19:15] rpj8: Yes that one worked as I wanted it to
[19:15] rpj8: thanks :)
[19:16] fille12: nice
[19:16] guy has joined the channel
[19:16] fille12: thank u, sometimes u only need someone to listen
[19:16] fille12: and u will figure it out by your self
[19:16] rpj8: heh yeah
[19:16] rpj8: thanks very much
[19:16] rpj8: i ask a LOT of questions.
[19:17] shafire: framlin: thank you :)
[19:17] fille12: i cant really say the jade is well documented
[19:17] framlin: shafire: ur welcome ;)
[19:17] rpj8: fille12: it's nto the worst documentation ever
[19:17] rpj8: tj does a butt-load of projects, though
[19:18] rpj8: and a lot of node.js stuff is learn by the seat of your pants
[19:18] rpj8: so i'm not too jarred by it ;)
[19:18] patrickarlt has joined the channel
[19:18] mapleman: amen
[19:20] niftylettuce has joined the channel
[19:23] AhtiK has joined the channel
[19:24] Druide_ has joined the channel
[19:25] xeodox has joined the channel
[19:27] pifantastic_ has joined the channel
[19:28] ewdafa has joined the channel
[19:30] fizx has joined the channel
[19:30] STUPIDWIFI has joined the channel
[19:30] kmiyashiro has joined the channel
[19:34] kohai: @wong_jim: I just read that Rails 3 requires node.js just to minify JS, and has a guy working on perf for a yr and ended up making it slower. Nice job.
[19:34] klovadis has joined the channel
[19:34] dmcquay_ has joined the channel
[19:37] devrim has joined the channel
[19:37] devrim1 has joined the channel
[19:38] sidorares has joined the channel
[19:41] m00p has joined the channel
[19:41] jonaslund has joined the channel
[19:41] sfoster has joined the channel
[19:42] jacobolus has joined the channel
[19:44] fangel has joined the channel
[19:45] kohai: @cromwellryan: Why would I have to add the bin path for node module vows to my PATH after installing from npm? #nodejs
[19:46] kohai: @cromwellryan: Maybe the better question is: Is it normal that I need to fully qualify the vows path? No examples or install docs suggest this #nodejs
[19:47] jeremyselier has joined the channel
[19:50] STUPIDWIFI has joined the channel
[19:50] bnoordhuis has joined the channel
[19:50] dall has joined the channel
[19:50] dall: hello
[19:50] xerox: hi
[19:51] dall: xerox, i have a problem with node (or socket.io)
[19:51] dall: i don't know
[19:51] dall: i have wrote a very simple http server with socket.io
[19:52] jetienne: any news on the speedy thing ?
[19:52] kohai: @racsonp: awesome node.js --&gt;  var httpServer = http.createServer(); httpServer.on('request', funtion(request, response) {....
[19:52] dall: the server print the debug - served client
[19:52] dall: but i don't see the string i wrote on console.log
[19:52] dall: :(
