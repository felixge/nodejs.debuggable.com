[00:00] SubStack: I don't have a problem with a forEach coming after a map
[00:00] polotek: in general I don't have a problem with it either
[00:00] polotek: I think it's a bit much in this instance
[00:00] hunterloftis: polotek: I've also definitely seen map in several of the libs... quite node specific (as opposed to client side), but I think that's the point of the article, right?
[00:01] chrisdickinson: pretty much -- it's kind of a "hey, the old way works, but there are better ways."
[00:01] chrisdickinson: (or terser, or more laconic ways, I guess)
[00:01] polotek: gotta be careful when using the word "better"
[00:01] chrisdickinson: agreed.
[00:02] chrisdickinson: (hence the immediate backpedaling :)
[00:02] robotarmy has joined the channel
[00:02] polotek: I like doing map -> foreach occasionally too
[00:02] polotek: but in your example all you're doing is looping once to create a function and then looping again just to call it
[00:03] polotek: it's a fine example, but I don't think you want people actually doing that in this trivial case.
[00:03] chrisdickinson: makes sense. it seemed like a nice place to note that those array iteration methods could be chained.
[00:05] xla has joined the channel
[00:06] umesh has joined the channel
[00:06] hunterloftis: chrisdickinson: dude. Your article just helped me answer a question I was trying to solve last night, on here. Thanks!
[00:06] chrisdickinson: awesome!
[00:06] perezd has joined the channel
[00:07] noahcampbell has joined the channel
[00:08] hunterloftis: chrisdickinson: Maybe <title>Not Your Father's JavaScript</title (apostraphe)
[00:08] polotek: chrisdickinson: I like that you progressively go through a few styles
[00:09] polotek: in most cases the final version is not my style
[00:09] polotek: I usually stop a few steps back
[00:09] polotek: but that's good
[00:09] polotek: people can make their own decision
[00:09] umesh: is there any example using jade, express and socket.io?
[00:10] chrisdickinson: thanks -- yeah -- I've gotten a little binding happy, and I thought it'd probably be good to note that "You really don't have to go this far. Really.", esp. as regards the last example.
[00:10] potatodemon has joined the channel
[00:10] chrisdickinson: ACTION fixes the apostrophes
[00:12] potatodemon: Hey folks, I want to write a TCP server, where each connection will  publish data to a queue when data is received, and for each connection a queue would be subscribed to and data pushed to that connection when there is data to send. Is this something node.js would be good for?  How would I go about doing it?
[00:13] hunterloftis: chrisdickinson: I dig the bits about bind. I also like the currying to remove nests, I hadn't thought of that. I would love it if the examples used something easier to keep in your head (findByTitle(), checkOut()?) instead of stuff like doSomething(), and it would be even better for that section if the various methods were highlighted the same color in the various examples, so you could see where things moved and how they 
[00:13] hunterloftis: shifted.
[00:13] x_or has joined the channel
[00:13] polotek: potatodemon: node is awesome for that
[00:14] nodelover has joined the channel
[00:14] hunterloftis: (for example, the 2 "getJSON" calls get sort of confusing because the only thing that differentiates them is the arguments being passed)
[00:14] chrisdickinson: cool. I'll change that
[00:16] hunterloftis: I wish Chrome supported RSS feeds. I'd like to check out any further posts you do in that vein
[00:17] nodelover: i want an example of jade and express
[00:17] chrisdickinson: hunterloftis: thanks :)
[00:17] chrisdickinson: if it's any consolation, my (completely janky) doesn't do RSS, yet
[00:17] nodelover: if anyone has idea?
[00:17] chrisdickinson: *completely janky blog engine
[00:17] hunterloftis: haha ok
[00:18] hunterloftis: chrisdickinson: Is it wheat?
[00:18] chrisdickinson: (it just compiles flat files using markdown and django templates)
[00:18] hunterloftis: oh k nm
[00:18] chrisdickinson: no, it's home-grown. i call it "heartburn", for the significant amount of stress involved in actually using it
[00:18] chrisdickinson: i've been meaning to rewrite it using node
[00:18] sivel has left the channel
[00:19] ossareh has joined the channel
[00:21] hunterloftis: Hey guys I'm trying to sell my boss on why node is revolutionary, interesting, and useful
[00:22] hunterloftis: Give me talking points
[00:22] SubStack: http://socket.io/ <-- this
[00:22] piscisaureus: ACTION gives up ...
[00:22] iFire`: hunterloftis well the language shootout says it's faster than python...
[00:23] hunterloftis: Ok so far we've got speed/performance, and websockets
[00:23] chrisdickinson: hunterloftis: unfortunately python has websockets, too ):
[00:23] hunterloftis: I'm going to toss in the fact that all the major browser players are highly invested in making javascript a faster/better language (thus v8)
[00:23] robtmr has joined the channel
[00:23] chrisdickinson: hunterloftis: cuts down on the number of languages new hires have to learn, potentially.
[00:23] polotek: hunterloftis: the real talking point isn't websockets
[00:23] polotek: it's the ease with which you can do that type of network programming
[00:24] iFire`: the evented model
[00:24] SubStack: events are great for concurrent connections
[00:24] SubStack: building that kind of thing in ruby or python is not as much fun
[00:24] chrisdickinson: lots of programmer interest in node == lots of talent looking to work in that environment?
[00:25] hunterloftis: Yep, agreed. Keep going, I'm distilling into simple non-technical talking points
[00:26] iFire`: hunterloftis there's a archive of useful nodejs libraries [so social?]
[00:26] iFire`: npm
[00:26] iFire`: kinda like ruby gems
[00:26] liar has joined the channel
[00:27] stephen_mcd has joined the channel
[00:27] hunterloftis: Yeah, I'm definitely mentioning the huge momentum and developer interest, and high level of dev activity
[00:29] chrisdickinson: Since everything is in (more-or-less, considering JScript's interpretation of JavaScript) one language, building rich client applications and integrating them with the server is easy?
[00:29] chrisdickinson: Only have to invest developer knowledge in one test framework?
[00:29] Jaye has joined the channel
[00:29] iFire`: chrisdickinson people like vows
[00:29] webben: hunterloftis: Non-blocking code. Potential to share the code between client and server.
[00:30] iFire`: trying to find where he is to bug him about fixing coffescript support
[00:30] SubStack: I like expresso
[00:30] chrisdickinson: ACTION 's NIH leads him to like the one he wrote
[00:30] webben: hunterloftis: I don't think the other aspects (e.g. lots of libraries, people wanting to improve performance, hype) are peculiar to node.
[00:30] chrisdickinson: ACTION says a dozen hail mary's to atone for the sin
[00:31] potatodemon has joined the channel
[00:37] mies has joined the channel
[00:39] hunterloftis: Isn't there a graph somewhere that shows apache, nginx, and node measured side by side for memory, or response time, or something?
[00:39] jimt_ has joined the channel
[00:40] hunterloftis: think I found a couple
[00:44] Qbix1 has joined the channel
[00:44] Qbix1 has left the channel
[00:44] sh1mmer has joined the channel
[00:45] polotek has left the channel
[00:46] Qbix1 has joined the channel
[00:47] janne has joined the channel
[00:48] altamic has joined the channel
[00:49] jacobrel_ has joined the channel
[00:51] maushu has joined the channel
[00:53] saschagehlich: mjr_: ping, are you there?
[00:55] jimt has joined the channel
[00:55] hunterloftis: Trying to find a way to explain to my (non-technical) manager, why async non-blocking event loops are interesting contrasted with threads
[00:56] pyrotechnick: hunterloftis: the talk by ryah is very good for that
[00:56] hunterloftis: pyrotechnick: In 1 or 2 sentences in an email
[00:58] RustIndy has joined the channel
[00:59] mjr_: saschagehlich: hey there
[00:59] saschagehlich: ah, just wanted to ask you about that reauthorization thing in node_redis
[00:59] mjr_: Yeah, we should probably just have it re-auth on reconnect, I think.
[00:59] mjr_: What do you think?
[01:00] saschagehlich: didn't really understand your answer - did you mean it's already implemented or was that a correction to my question?
[01:00] saschagehlich: yea exactly
[01:00] mjr_: It's something I've been meaning to do for a while.
[01:00] saschagehlich: I tried to implement that but failed since I didn't have enough time to understand the code actually
[01:00] mjr_: If you send an auth command, it should probably remember the password, and then re-send auth if it ever reconnects.
[01:01] mjr_: It is a little magical, but I think it's the right amount of magic.  
[01:01] saschagehlich: well that password storing is the easiest point I guess
[01:01] saschagehlich: let me have a look at that
[01:01] mjr_: Otherwise, people get really confused if it ever reconnects.
[01:01] jimt has joined the channel
[01:01] mjr_: I've recently been battling with several reconnect bugs in my own apps that use node_redis
[01:02] mjr_: It's tricky logic sometimes if you are using blpop or subscribe.
[01:02] saschagehlich: hm okay
[01:03] mjr_: Anyway, I'll have a look at this hopefully tomorrow.  
[01:03] saschagehlich: that'd be really cool
[01:04] malkomalko has joined the channel
[01:04] mikeal has joined the channel
[01:08] RustIndy: i've installed node.js on my centos box, but get a "V8 is no longer usable" when i try to run anything (like the "Hello World" script at nodejs.org). if i "su" first, all is well. what permissions have i screwed up?
[01:08] mikeal: man, my email client really doesn't like to read Felix's email address
[01:09] tanepiper: do buffers have a max amount of memory that can be allocated?
[01:10] mikeal: tanepiper: not that i know of
[01:11] tanepiper: hmm, getting this: FATAL ERROR: CALL_AND_RETRY_0 Allocation failed - process out of memory
[01:12] saikat has joined the channel
[01:13] prettyrobots_ has joined the channel
[01:14] jacobolus has joined the channel
[01:15] saschagehlich: tanepiper: which version of node are you running?
[01:15] tanepiper: 0.3.4
[01:15] saschagehlich: I had a lot of memory issues with 0.2.2 but when I updated to 0.3.5-pre everything was fine (almost)
[01:15] tanepiper: may have fixed it actually, running some tests
[01:16] zentoooo has joined the channel
[01:17] sechrist: anybody have any idea when 3 will become the stable release?
[01:17] skm has joined the channel
[01:18] EyePulp has joined the channel
[01:20] skm has joined the channel
[01:23] tfe_ has joined the channel
[01:23] hornairs has joined the channel
[01:32] mikeal: you had memory issues with buffers or with memory that is in the heap?
[01:33] yhahn has left the channel
[01:34] tokumine has joined the channel
[01:34] micheil has joined the channel
[01:34] boaz has joined the channel
[01:38] yhahn has joined the channel
[01:44] hunterloftis: Is there a compiled list of apps built on top of node?
[01:44] hunterloftis: I should say, non-trivial apps?
[01:45] hunterloftis: Lots of the stuff on the wiki are cool, but I'd like sort of larger projects (again, convincing a manager)
[01:47] bingomanatee: Aria's got a good set of stuff. 
[01:47] bingomanatee: Depends on whether you consider express to be an app. 
[01:47] bingomanatee: My suggestion is you start to use Node for small tasks - file servers, scanners, text parsers, custom REST based apps. 
[01:48] Kenta has joined the channel
[01:48] bingomanatee: There is no "ROR" or SugarCRM or Drupal in Node yet. 
[01:48] pyrotechnick: hunterloftis: we're making an MMO
[01:48] pyrotechnick: github.com/feisty
[01:48] perlmonkey2 has joined the channel
[01:48] hunterloftis: pyrotechnick: I tried your demo earlier, it was awesome
[01:48] pyrotechnick: you tried it?
[01:49] pyrotechnick: ToE?
[01:49] hunterloftis: I think? Maybe I'm wrong. Is it the dogs vs cats thing?
[01:49] pyrotechnick: no… lol
[01:49] hunterloftis: hah sorry then
[01:49] pyrotechnick: ToE is like minecraft
[01:49] bingomanatee: that would be an added value. 
[01:49] pyrotechnick: MMO minecraft in node and WebGL
[01:49] Lorentz: Another mmorpger!
[01:49] hunterloftis: I've definitely been to feisty so I thought that was it
[01:49] bingomanatee: Feisty, or Fisty?
[01:49] hunterloftis: pyrotechnick: that sounds like a ton of fun, and a perfect time to implement something like that as webGL won't be common for a little while
[01:49] pyrotechnick: fysty
[01:50] pyrotechnick: hunterloftis: yeah we're racing the big players to the finish line
[01:50] charlenopires has joined the channel
[01:50] hunterloftis: pyrotechnick: Do you have anything try-able? I'd love to check it out
[01:50] hunterloftis: pyrotechnick: Minecraft was exceptionally fun for a couple of days, until you feel like it should really be MMO
[01:51] bingomanatee: Huntercrarft: try robolox
[01:51] pyrotechnick: hunterloftis: our experience exactly. that's why we redirected ToE to be voxel-based
[01:52] pyrotechnick: hunterloftis: as for demo not really yet
[01:52] hunterloftis: pyrotechnick: Did you check out that voxel online game recently on proggit?
[01:52] pyrotechnick: hunterloftis: no link me
[01:52] pyrotechnick: there's dozens and dozens
[01:52] hunterloftis: pyrotechnick: well add hunter.loftis@gmail.com to your beta list then ;)
[01:52] pyrotechnick: havent seen a webgl one yet
[01:52] pyrotechnick: sure!
[01:52] pyrotechnick: and please watch it on github
[01:53] hunterloftis: done
[01:53] pyrotechnick: haven't touched it for a few days due to the hardcore flooding here in brisbane and a new job this week
[01:54] pyrotechnick: but we're still very much going to finish on time ^w^
[01:54] riven has joined the channel
[01:55] davidc_ has joined the channel
[01:56] tanepiper: holy crap, got multipart, async downloading done in nodejs in a night :D
[01:59] RustIndy: i've installed node.js on my centos box, but get a "FATAL ERROR: V8 is no longer usable" when i try to run anything (like the "Hello World" script at nodejs.org). if i "su" first, all is well. what permissions have i screwed up?
[02:00] hunterloftis: tanepiper: nice, are you not using a framework? (like express/connect?)
[02:00] hunterloftis: pyrotechnick: Any screens available?
[02:00] tanepiper: hunterloftis: nope, but it's for a client so it's not open source either
[02:00] wdperson has joined the channel
[02:01] tanepiper: but i downloaded a 694mb Ubuntu ISO in less than 30 seconds
[02:01] tanepiper: using 100 connections
[02:01] yhahn: lol
[02:02] tanepiper: and the ISO mounts properly :D  woop
[02:02] hunterloftis: tanepiper: Does adding more connections for a single user actually help? It seems like it would just provide more overhead
[02:02] tanepiper: hunterloftis: you have used download accelerators before?
[02:03] hunterloftis: tanepiper: Yeah, in the 90s
[02:03] hunterloftis: tanepiper: Usually to get around server send limits
[02:03] hunterloftis: tanepiper: I'm not saying that it doesn't help, I'm asking... I didn't realize that opening 100 connections would be better, if you controlled both the client and the server.
[02:04] tanepiper: well i don't know what the client will do with it in the end ,it's the fact that I got it working in a night that amazed me :D
[02:04] hunterloftis: yeah that's cool, congrats
[02:05] skm has joined the channel
[02:06] skm has joined the channel
[02:07] emacsen: how can I simulate a sleep?
[02:07] AAA_awright: emacsen: Do you want to execute an event after a delay?
[02:08] emacsen: AAA_awright, yes
[02:08] AAA_awright: Because sleep literally sleeps the entire process
[02:08] AAA_awright: emacsen: Same as on web browsers, setTimeout
[02:08] AAA_awright: and sibling setInterval
[02:09] emacsen: AAA_awright, you assume I know JS too well :)
[02:09] AAA_awright: (or should I say, literally sleep()s the entire process)
[02:10] AAA_awright: emacsen: Actually, it's in the documentation
[02:10] emacsen: okok
[02:11] AAA_awright: Which just became a little more ugly for some reason...
[02:11] liar has joined the channel
[02:14] brianmario has joined the channel
[02:14] Wizek has joined the channel
[02:15] Intel_iX has joined the channel
[02:15] bradleymeck has joined the channel
[02:15] ryah_: this looks pretty neat:
[02:15] ryah_: https://github.com/drtyhbo/drty/blob/master/example/blog/views.js
[02:15] ron_frown has joined the channel
[02:15] bradleymeck: whats the command that installs npm but doesnt require root? (only installs locally in ~/npm for example)
[02:16] SubStack: a port of jango!
[02:16] SubStack: *dj
[02:16] Intel_iX: Can anyone see at a glance why this doesn't work? http://pastebin.com/5CfUEmDg
[02:16] Intel_iX: The get requests don't update
[02:17] Lorentz: Get, or post
[02:17] SvenDowideit_ has joined the channel
[02:18] Intel_iX: get 
[02:18] Intel_iX: On chat.node
[02:18] Intel_iX: It's supposed to push the connections onto an array.
[02:18] Intel_iX: Then fufill them all later
[02:19] Intel_iX: when updateUsers() is called
[02:20] bingomanatee_ has joined the channel
[02:21] cronopio has joined the channel
[02:23] bradleymeck: fin npm is hard to install on a default ec2
[02:24] Intel_iX: Ok, now it's just being wierd
[02:24] Intel_iX: It's updating every 2 messages, or randomly
[02:24] mikew3c: ACTION wonders if the plan to add Workers support to node is still on the todo list
[02:25] stephen_mcd: is there a standard approach for specifying an application's dependencies that need to be installed via npm?
[02:25] ryah_: mikew3c: soething like that, but not exactly
[02:25] mikew3c: oh
[02:25] mikew3c: OK
[02:25] ryah_: there's good reason to deviate from html5 workers.
[02:26] ryah_: but a small shim will make it compatibile to web browsers, i think
[02:26] ryah_: more about this later... im working on it secretly :)
[02:26] Intel_iX: is it possible my server is only listening for one connection at a time?
[02:26] mikew3c: heh
[02:26] mikew3c: I'll keep the secret :)
[02:26] ryah_: Intel_iX: what do you mean by that
[02:26] Intel_iX: I have no idea
[02:27] Intel_iX: I started this 3 days ago.
[02:28] Intel_iX: It's updating randomly.
[02:28] Intel_iX: I have no idea why
[02:29] Intel_iX: oh wait
[02:29] Intel_iX: how do I turn off nales algorithm?
[02:29] Intel_iX: ._.
[02:31] ryah_: https://github.com/drtyhbo/drty/blob/37065d47cc1618193c8936e9a1e159334ef961cd/example/blog/views.js
[02:31] ryah_: this really looks awesome.
[02:31] pquerna: +1
[02:31] charlenopires has joined the channel
[02:31] ryah_: i think having the "step"-like library built-in really simplifies things.
[02:32] ryah_: https://github.com/drtyhbo/drty/blob/37065d47cc1618193c8936e9a1e159334ef961cd/example/blog/views.js#L19
[02:32] ryah_: proper abstractins /can/ be built
[02:32] ryah_: without resorting to more complex programming models
[02:33] pquerna: the hack around decorators
[02:33] pquerna: having an array of functions
[02:33] pquerna: is kinda neat.
[02:33] pquerna: https://github.com/drtyhbo/drty/blob/37065d47cc1618193c8936e9a1e159334ef961cd/example/blog/views.js#L110-114
[02:34] SubStack: it's amusing when people claim that introducing threads or coroutines will make node easier for newbiew
[02:34] SubStack: s/.$/s/
[02:35] charlenopires_ has joined the channel
[02:35] SubStack: Thread safety! No thanks.
[02:35] bradleymeck: it will be! you just need to know semaphores and memory corruption
[02:36] liar has joined the channel
[02:36] bradleymeck: it will be just like every other place where multithreading is painfully hard, except this time it wont be
[02:36] SubStack: every statement could be paused by the scheduler and another thread could hop in, overwrite your state, and resume!
[02:36] SubStack: bradleymeck: hah totally
[02:36] bradleymeck: whacha, the few concurrency problems we have are enough
[02:37] jesusabdullah: SubStack: I agree
[02:37] pquerna: well. I'm torn. personally, I think in say, 20 years, we should just have a langauge whose compiler/jit autoparalized everything
[02:37] SubStack: callbacks are easy and you can build stuff like step on top of them to give your programs a more sequential feel
[02:37] pquerna: and maybe that means something like co-routines
[02:37] SubStack: without compromising the awesome
[02:37] pquerna: but let smarter peolpe than me work on compilers/jits to do that magic stuff
[02:38] SubStack: even in haskell where you have strict mutability constraints you still have to fight the scheduler in my experience
[02:38] bradleymeck: pquerna i think it would be easier to make single into multiple than fixing memory resolution nightmares, i mean the i7 had that corruption error for a lil bit
[02:38] charlenopires has joined the channel
[02:39] ryah_: pquerna: not until the languages understand network stuff
[02:39] bradleymeck: then again, erlang is darn close to that
[02:39] SubStack: message passing <#
[02:39] ryah_: bradleymeck: agreed - but i'm pretty sure the erlang compiler is optimizing ipc
[02:40] ryah_: not in the same way g++ is, like, unrolling loops
[02:41] bradleymeck: it does heavy optimization for both ipc and threads, but even then you can see pretty bad perf if you have slow nodes for scalled erlang
[02:41] ryah_: paul wants to for-loop over a list and have the language decide if it should be run on 1 core or N
[02:41] bradleymeck: scaled*
[02:41] jesusabdullah: SubStack: <#?
[02:41] SubStack: jesusabdullah: typo
[02:41] jesusabdullah: < * perhaps?
[02:42] ryah_: bradleymeck: i'm sure it's very fast at that - but it doesn't modify the ipc that you command it to do.
[02:42] bradleymeck: yea, optimizing that stuff out would be pretty hard if you ever include runtime code gen
[02:42] SubStack: jesusabdullah: not at all, message passing is great
[02:42] bradleymeck: which js does XD
[02:43] jesusabdullah: Yeah, SubStack --- What's why I'm a bit confuzzled
[02:43] SubStack: modifying shared memory is too difficult to warrant much use
[02:43] jesusabdullah: STM?
[02:43] SubStack: jesusabdullah: (#) - (shift) == 3
[02:43] jesusabdullah: Someday I'll learn me a clojure and try out this so-called STM
[02:43] jesusabdullah: Oh, of course
[02:43] jesusabdullah: herp derp
[02:43] jesusabdullah: Also, drinking
[02:49] cloudhead has joined the channel
[02:50] pHcF has joined the channel
[02:50] mikeal has joined the channel
[02:50] liar has joined the channel
[02:51] ryah_: do people lie the new stylesheet for the docs? http://nodejs.org/docs/v0.3.5/api/all.html
[02:52] brapse has joined the channel
[02:52] bradleymeck: i thought stm was just a wrapper around locks
[02:52] yozgrahame has joined the channel
[02:52] bradleymeck: code segments are a bit hard to read ryah_, that yellow for keywords in particular
[02:53] ryah_: think so too..
[02:53] ryah_: if i was better at css i'd modify it ;)
[02:54] ryah_: (like how i subtly request for contribs)
[02:54] saikat has joined the channel
[02:55] bradleymeck: sec ill mess w/ it a bit
[02:55] jesusabdullah: I know nobody else liked the old colors, but I do
[02:57] Me1000 has joined the channel
[02:58] SubStack: bradleymeck: stm is a more optimistic approach to locking
[02:59] jesusabdullah: YOU're an optimistic approach to locking!
[02:59] SubStack: write first, check for conflicts later!
[03:00] jacobrel_ has joined the channel
[03:01] MattDiPasquale has joined the channel
[03:04] bradleymeck: substack, that means possible thrashing :(
[03:05] SubStack: bradleymeck: but only when your db is getting lots of hits anyway
[03:06] bradleymeck: true but isnt that the time where it is most important not to thrash?
[03:07] admc has joined the channel
[03:09] bradleymeck: i would be interested in raw object passing through shared but with fake pipes where you can only pass not keep memory far more than shared stuff. its a hard topic though
[03:10] bradleymeck: through shared memory*
[03:10] Sonja has joined the channel
[03:10] Sonja: hi
[03:10] SubStack: bradleymeck: as I recal optimistic locking works best when you have lots of reads and few writes
[03:11] bradleymeck: that makes sense
[03:11] liar has joined the channel
[03:12] Qbix1 has joined the channel
[03:12] Qbix1: hi
[03:12] bradleymeck: yo
[03:12] Qbix1: what do you use Node.js for?
[03:13] zzak: makin copies
[03:13] Lorentz: For coding
[03:13] Qbix1: I mean what do you guys build with it
[03:14] Bosmon2: Node.js WILL BE THE SOURCE OF ALL DECENCY :P
[03:14] Sonja: i made a toaster
[03:14] bradleymeck: various things, my old company used it for scraping websites, personally i use it for scripting various tasks, have a web server lying about
[03:14] zzak: Qbix1 actually, so far, just a repl
[03:14] Bosmon2: Just as soon as "yield" enters the language spec....
[03:14] bradleymeck: boo yield
[03:14] bradleymeck: use a fin closure
[03:14] Bosmon2: hee hee :)
[03:15] Qbix1: Woohoo.
[03:15] Qbix1: Why do you need "yield"?
[03:15] Bosmon2: To write an RDP, as that cogent questioner observes during the video
[03:15] Qbix1: Node.js seems awesome. Javascript was pure, no language constructs like puts
[03:15] Bosmon2: But yes, it is awesome
[03:15] Qbix1: pooh. I doubt it.
[03:15] Bosmon2: I don't need to write an RDP right now :P
[03:16] Bosmon2: But someday
[03:16] Bosmon2: It would be the fine final cherry on a tasty cake
[03:16] ttpva: is there a way to increase the speed of a node.js app? more cores is not a solution I think, so what can improve the speed of the app? thanks!
[03:16] bradleymeck: yield is interesting, but i largely feel that it does not really give new capabilities to the language
[03:16] Qbix1: have more processes?
[03:16] ryah_: ttpva: what's slow?
[03:16] Lorentz: ttpva: Solve bottlenecks
[03:17] ttpva: I have a simple app that just makes a GET request to 50 websites. I'd like to make it as fast as possible
[03:17] Bosmon2: It doesn't give new capabilities, but it does facilitate some programming styles which can sometimes be the best choice
[03:17] aelaguiz: I think I'm misunderstanding something about the super class when using a prototyped inheritance model..do all subclasses share a single instance of the super class?
[03:17] Bosmon2: I wouldn't like to write a complex parser "upside down"... but then, I wouldn't like to write a complex parser at all
[03:18] bradleymeck: bosmon2, i never consider a continuation best practice
[03:19] Qbix1: ttpva: Node spawns threads to do socket I/O, and if you have only 50 websites, I am pretty sure the thread pool will grow that large. If you had an unlimited amount of websites, or at least 5k, then you would probably have to implement a throttle.
[03:19] bradleymeck: aelaguiz the super class changes are visible down the chain yes, if you set the prototype using new SuperClass it will be anew instance for each
[03:19] robotarmy has joined the channel
[03:19] Jaye: ryah_: changing the keyword color to blue instead of that bright yellow would make the code segments much more readable
[03:20] ttpva: Qbix1: ok thanks ;)
[03:21] Qbix1: ask ryah though, I think he knows more ;-)
[03:22] skm has joined the channel
[03:22] aelaguiz: bradleymeck: Using new superclass even though it may be a new instance for each, the values of the last object are carried over into the new one
[03:23] ryah_: Qbix1, ttpva: no, it does not spawn threads to do socket I/O
[03:23] ryah_: socket i/o is purely non-blocking
[03:23] ryah_: and node uses that...
[03:23] Qbix1: but what does the buffering, then?
[03:23] c0nundrum has joined the channel
[03:23] aelaguiz: bradleymeck: Here's like a super small reproduction of that including output: http://pastebin.com/2Vi5xbxP
[03:23] daveyjoe: Is it possible to access session data (using standards express/connect sessions) from Socket.IO?
[03:24] ttpva: ryah_: if I want to make the code run faster, the only solution is to get a faster machine ?
[03:24] ryah_: Qbix1: your program :)
[03:24] ryah_: ttpva: i don't know what you're asking.
[03:24] bradleymeck: aelaguiz, you forgot to newView.call(this) in your subclass
[03:24] Qbix1: ryah_: oh. I thought I heard in your talk at google that node.js does have threads for buffering stuff, and it's just not exposed to the main process.
[03:25] aelaguiz: god I think that means its time to go to bed
[03:25] aelaguiz: thanks
[03:26] ryah_: Qbix1: file i/o uses threads. It also does not buffer.
[03:26] wasabist` has joined the channel
[03:26] Qbix1: That's probably what I was thinking of. But I just assumed that sockets i/o was a special case of file i/o
[03:27] Qbix1: and therefore used a thread pool basically
[03:29] robotarmy has joined the channel
[03:29] Ond has joined the channel
[03:31] mikeal: ryah_: what do you think about #node.js-dev?
[03:33] ryah_: mikeal: i don't want to split up the groups - there's not that much traffic...
[03:33] mikeal: it seems like a lot :)
[03:33] mikeal: i think it's more than #python already
[03:34] jacobolus has joined the channel
[03:36] bradleymeck: dont say the p word in here
[03:40] clarkfischer has joined the channel
[03:41] sechrist: perl
[03:41] Aria: pickles!
[03:42] Qbix1: node.js rox0rs, no need for more groups
[03:44] yozgrahame has joined the channel
[03:44] sechrist: Anybody know of a device that lets me plug in headphones/mic into >=2 machines and switch between?
[03:44] sechrist: I can wire my own I'm just positive that somebody has one on the market
[03:44] Aikar: this channels activity level is pretty mild, -dev talk in here wouldnt hurt a thing, #-dev would be dead
[03:45] bradleymeck: male to female headphone switch sechrist?
[03:45] Aikar: sechrist: kvm switch?
[03:45] sechrist: not kvm but similar
[03:45] Aikar: doesnt kvm do usb, just get usb headset
[03:45] sechrist: you're not following me
[03:45] sechrist: I want the same headset on 3 machines
[03:45] sechrist: not usb
[03:46] Lorentz: I think most pre-amps would do something like that, if they have the line switcher feature.
[03:46] Lorentz: Multiple inputs, single output, etc.
[03:46] Aikar: i doubt anyone would make such hardware, your prolly 1 of the 20 people in the world whod want that
[03:46] Aikar: or i guess an audio person might too lol
[03:46] bradleymeck: he wants a single input multiple output
[03:46] Aikar: yea
[03:46] Aikar: he wants a kvm switch but for speaker/headphone ports
[03:47] sechrist: I guess I just have to wire one
[03:47] sechrist: and shield it and stuff
[03:47] sechrist: easy enough
[03:47] Aikar: looking at the docs for the new js stuff, imo yield doesnt really seem that useful but the destructuring stuff looks really handy
[03:47] sechrist: actually I don't need mics -- I have about 30 microphones around me that are built into webcams
[03:48] sechrist: so just headphones really -- that should be easy
[03:48] bradleymeck: sechrist just searching headphone switch in google shopping brought up quite a few
[03:48] philipharrison has joined the channel
[03:48] sechrist: those are generally for toggling though
[03:49] bradleymeck: oh you want all out all the time?
[03:49] sechrist: uhm 
[03:49] sechrist: I want three options
[03:49] sechrist: pc 1, pc 2, and pc 3
[03:49] sechrist: I have a linux mac and windows workstation around me
[03:49] bradleymeck: they had a couple with 4 in there i thought *goes to look*
[03:50] sechrist: neat
[03:50] philipharrison has joined the channel
[03:51] sechrist: now when only something exists that does x-trickery amongst multiple machines
[03:51] sechrist: so I can drag mac windows onto windows and vice versa
[03:52] philipharrison has joined the channel
[03:53] philipharrison has joined the channel
[03:55] Lorentz: Maybe even a hardware mixer
[03:55] bradleymeck: i could prolly head down to radio shack and build a decent headphone switcher, but meh
[03:55] sechrist: I was surprised I couldn't find one at a local place called weird stuff
[03:56] sechrist: but I certainly found the components to build one
[03:58] shinmei has joined the channel
[03:58] ron_frown has joined the channel
[04:03] noahcampbell has joined the channel
[04:03] piscisaureus: [02:11|% 100|+ 113|-  47]: Done
[04:04] dgathright has joined the channel
[04:05] ryah_: piscisaureus: good or bad?
[04:05] piscisaureus: well. down from 52
[04:05] piscisaureus: just fixed some child process bugs
[04:05] ryah_: that's good
[04:05] ryah_: can i merge with you again?
[04:05] piscisaureus: umm
[04:05] piscisaureus: soon
[04:06] ryah_: let me know
[04:06] piscisaureus: will do
[04:06] piscisaureus: still have to finish the tty work tho
[04:06] piscisaureus: on windows it's done, but not posix
[04:06] ryah_: yeah
[04:06] ryah_: ok
[04:07] bingomanatee: I'm nearly done with noogle, my node.js IRC channel digester.
[04:07] bingomanatee: Doing a word frequency poll - any Joyent people interested in those metrics?
[04:07] ryah_: pquerna: can openssl understand ssh-style keys?
[04:08] ryah_: bingomanatee: yes
[04:08] bingomanatee: ryah_: I'll keep you guys abreast - hope to have the data by end of week. 
[04:08] ryah_: what does it do?
[04:08] bingomanatee: I'm word indexing all the content on debuggable.
[04:08] bingomanatee: Hope to be able to turn a word search in to a thread result. 
[04:09] bingomanatee: i.e., once I find a line with a given word, you should be able
[04:09] bingomanatee: to click on that line and find the responses.
[04:09] bingomanatee: Basically trying to turn IRC chat into a limited expert system. 
[04:09] sechrist: interesting
[04:09] bingomanatee: yeah - project is at noogle.com
[04:09] philipharrison has joined the channel
[04:10] bingomanatee: You can get the jist of it from github. Most of the hard stuff n terms of searching/polling/stuffing IRC lines into a MongoDB database is done
[04:10] bingomanatee: I just have to work out the ui/search stuff. 
[04:10] bingomanatee: sorry project is at github.com/bingomanatee/noogle
[04:11] bingomanatee: arg: https://github.com/bignomanatee/noogle
[04:11] philipharrison has joined the channel
[04:11] bingomanatee: the last link is the right one
[04:11] bingomanatee: When I'm closer to release I'll post a URL where the service can be found and better documentation
[04:11] bingomanatee: Its a good kind of "teaching site" for those wanting to get into MongoDB + Node.js too. 
[04:12] bingomanatee: +express.
[04:13] piscisaureus: ryah_: ping
[04:14] bingomanatee: Might be fun to graph out lines per user against time and stuff like that. 
[04:14] jetheredge has joined the channel
[04:16] Intel_iX: I would like to thank everyone who responded to my noobish questions.
[04:17] Intel_iX: I now have a working chat.
[04:17] ryah_: piscisaureus: yes?
[04:17] piscisaureus: ryah_: if you ever want to work on tty again, you'll need this:
[04:17] piscisaureus: https://github.com/piscisaureus/node/commit/61dee883de03dce28bf9d8305a1b71b00892e931
[04:18] ryah_: piscisaureus: that's my interface?
[04:18] piscisaureus: yeah. well, if you don't mind
[04:18] robtmr has joined the channel
[04:18] piscisaureus: patch looks intrusive but it isn't really
[04:18] cgutierrez has joined the channel
[04:19] ryah_: piscisaureus: api looks ncie
[04:19] piscisaureus: good to hear :-)
[04:19] robtmr: anyone know whether using the vm module on v0.2.6 is alright?
[04:19] SubStack: NICE
[04:19] piscisaureus: would hate to redo it
[04:20] ryah_: https://github.com/piscisaureus/node/blob/61dee883de03dce28bf9d8305a1b71b00892e931/lib/readline.js#L356-438
[04:20] ryah_: this is much better than it was
[04:21] robtmr: I found I could get at it using process.binding('evals').Script, but I'm not certain whether I _should_
[04:23] Intel_iX: can someone tell me how to set focus on a forum field on page load?
[04:23] piscisaureus: ryah_: the only caveat is that in stdin.keypress(char, key) either key or char can be undefined
[04:23] Intel_iX: oops, wrong room
[04:23] Intel_iX has left the channel
[04:24] ryah_: piscisaureus: the event?
[04:24] piscisaureus: because some keys don't map to a char, and sometimes you don't know anything about the key in a meaningful way (e.g. when u press the += key)
[04:24] piscisaureus: umm yeah
[04:24] piscisaureus: I mean stdin.on('keypress', function(char, key) {
[04:24] ryah_: nod
[04:24] piscisaureus: ryah_: nod back
[04:25] SubStack: what about keydown/keyup?
[04:25] SubStack: browser-style
[04:25] piscisaureus: SubStack: it can't be done on posix afaict
[04:25] SubStack: pesky!
[04:25] piscisaureus: besides, you are not writing a gui app tgat runs in a tty with node, eh?
[04:26] piscisaureus: this keypress stuff is just to make the repl portable
[04:26] jdalton has joined the channel
[04:26] jdalton has left the channel
[04:30] AAA_awright_ has joined the channel
[04:39] AAA_awright_ has joined the channel
[04:39] devdrinker has joined the channel
[04:39] chilts has joined the channel
[04:41] admc has joined the channel
[04:47] k04n has joined the channel
[04:47] k04n: hey, does anyone know how i can use node.js to make a "pass thru" of an http request -- sort of like a proxy -- for instance, i want http://localhost/myapp/123 to return the contents of http://othersite.com/123
[04:48] prettyrobots has joined the channel
[04:50] PyroPeter has joined the channel
[04:53] Qbix1: k04n: should be pretty straightforward
[04:53] k04n: qbix1: yeah, im sure...very new to node.js, just getting my feet wet
[04:54] k04n: i am trying to create an app that is a nice AJAX/HTML5 interface for a more "old-school" website
[04:54] k04n: i want to create the app in node.js and have certain requests to my app pull data from the other site (it has an api)
[04:54] k04n: i do not believe i can have the client side pull data direct from the other site due to cross-domain issues
[04:54] Qbix1: sure. It's just that the resources <img> <script> etc. would still be relative to that site, if they ahve relative urls
[04:55] Qbix1: you'd need to insert a "base" tag at least
[04:55] k04n: yeah...actuall i dont have to worry about that becaus ethere is a json api
[04:55] k04n: i just dont think i can have the the client's browser pull the json directly from the site
[04:56] fairwinds: k04n: thought I saw a work around on that with node but can't remember where I saw it
[04:57] k04n: fairwinds: interesting -- any clue as to how it worked?
[04:57] k04n: or search ideas?
[04:59] fairwinds: I am like you just getting my feet wet, so have been consuming a lot from google and everything I can read. will look back on my history in browser
[04:59] fairwinds: see if I can find anything
[04:59] k04n: aha. ok...for those interested, i think i just found the answer...it's possible through jquery using $.getJSON 
[04:59] k04n: thanks
[05:00] k04n: fairwinds -- your comment spurred me to do more searching down those lines and i think i found it
[05:06] devdrin__ has joined the channel
[05:07] piscisaureus: ACTION to bed
[05:09] philipharrison has joined the channel
[05:09] yhahn has left the channel
[05:12] piscisaureus has joined the channel
[05:13] fairwinds: k04n: you might want to look at the client code here to get some ideas. This shows a twitter client. Your circumstances are not the same but json is json. http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/
[05:13] k04n: fairwinds: thanks
[05:14] fairwinds: the part that shows the httpclient is the part that is important for you there
[05:14] fairwinds: for sending and receiving the json
[05:15] fairwinds: k04n: you should also look at the express framework. I am playing with it and am very impressed with what you can do with very little code
[05:16] fairwinds: plenty of examples to see what is possible 
[05:17] fairwinds: so re-skinning should not be an issue if you've got json to work with
[05:19] Me1000 has joined the channel
[05:21] echosystm: when i use the static file serving thing in connect, files always seem to not refresh properly
[05:21] echosystm: anyone got any idea what is causing this?
[05:22] Evet: nodejs.org is using nginx :\
[05:29] bingomanatee: Beats .NET
[05:30] mscdex: nodejs.net? :p
[05:30] ryah_: Evet: i'm a lazy admin. node would be too much to worry about.
[05:32] Evet: ryah_: im trying to stay away from nginx due to laziness
[05:32] MikhX has joined the channel
[05:33] daveyjoe: Is it possible to use Mongoose for querying without models? There used to be a mongoose.noSchema() function but it's been removed in recent versions.
[05:34] brianmario has joined the channel
[05:36] kawaz_air has joined the channel
[05:36] razvandimescu has joined the channel
[05:38] ossareh has joined the channel
[05:47] fairwinds: Evet: what is wrong with nginx on front end. It is solid and tested. I plan on reverse proxying my apps with it also
[05:48] fairwinds: Evet: config is not too bad, not like apache anyway
[05:49] jdalton has joined the channel
[05:49] Lorentz: I dunno, I like apache's config ways
[05:49] jdalton: any hires timer modules available for node ?
[05:49] Lorentz: Maybe I'm just used to it, but it's very flexible.
[05:50] Lorentz: jdalton: Not that I know of. Never had something that had to be done finer than a millisecond.
[05:51] fairwinds: Lorentz: I still use apache but just in conjunction with svn anymore
[05:51] Lorentz: fairwinds: I'm moving on to git anyway
[05:51] fairwinds: yeah
[05:51] Lorentz: And my svn didn't use apache in hte first place.
[05:52] fairwinds: git is pretty damn fast
[05:53] Lorentz: It is. Starting to open up my code onto github got me into using git.
[05:53] Lorentz: Still long way until I write some decent amount of code, hehe
[05:54] jesusabdullah: Gotta start somewhere
[05:54] mfernest has joined the channel
[05:59] mfernest has left the channel
[06:01] erlnoob has joined the channel
[06:01] erlnoob: hi there
[06:01] erlnoob: i was wondering, how do i turn output escaping with expressjs + ejs ?
[06:02] spetrea has joined the channel
[06:04] mikew3c has joined the channel
[06:04] mape: erlnoob: turn off? <%-%> <%0%>
[06:04] mape: *<%=foo%>
[06:05] erlnoob: yeah I'm migrating away from jade to ejs
[06:05] mape: - is raw, = is escaped
[06:05] erlnoob: mape: for example, I have a body variable (in layout.ejs)
[06:05] erlnoob: and I need to do <%= body %>
[06:06] Evet: fairwinds: no keepalive support. isnt suitable for reverse proxying
[06:06] erlnoob: but not have the body output be escaped (> to &gt; etc)
[06:06] mape: erlnoob: Like I said, <%-body%> is raw
[06:07] erlnoob: mape: ok thanks, am clear on that now :)
[06:11] MonetizedCulture has joined the channel
[06:11] MonetizedCulture: Does node.js benefit from load balancing?
[06:11] MonetizedCulture: Like, a load balancing router
[06:11] meso has joined the channel
[06:12] mape: MonetizedCulture: I'm using spark2 with great results
[06:14] MonetizedCulture: I suppose with multiple servers running identical node.js code a load balancing router helps to use the servers in parallel
[06:14] confoocious has joined the channel
[06:14] confoocious has joined the channel
[06:14] MonetizedCulture: How well does node.js make use of multi-core CPUs?
[06:15] mape: MonetizedCulture: scales linearly
[06:15] brianmario has joined the channel
[06:16] mape: At least from my experience using spark
[06:16] MonetizedCulture: If node.js async and handles each request sequentially in serial fashion, how can it benefit from a multicore CPU?
[06:17] mape: MonetizedCulture: https://github.com/davglass/spark2
[06:17] MonetizedCulture: mape: Scaling linearly means that the benefits of two servers is not more than twice the level of capacity that one server has?
[06:17] mape: MonetizedCulture: If I have 1 core and it can serve 1k req/sec, if I use spark and start 4 instances it can serve 4k req/sec on the same port
[06:18] kawaz_air has joined the channel
[06:18] MonetizedCulture: Cool. So sort of a proxy
[06:18] MonetizedCulture: Or load balancing router analogue
[06:19] MonetizedCulture: mape: So you have 4 cores on your CPU?
[06:19] mape: MonetizedCulture: Yeah the kernel keeps track on which request goes to which instance so less overhead
[06:19] mape: MonetizedCulture: Yeah
[06:21] MonetizedCulture: So spark itself is node
[06:21] mape: Yes
[06:22] MonetizedCulture: It looks like node.js is a lot more geared towards managing high traffic than traditional LAMP
[06:22] mape: I have it running on an app that serves around 140k visits a day using socket.io saving data to mongodb on each visit and the server usually stays under 0.4 load
[06:22] MonetizedCulture: I'm going to be starting my first node.js project, but I"m using websockets so it will be interesting to see how well spark handles websockets.
[06:23] mape: MonetizedCulture: ^ :)
[06:23] mape: Using express + socket.io for that
[06:23] MonetizedCulture: Is mongodb more responsive than say Postgresql?
[06:24] mape: That I wouldn't know, but it worked nicely for my needs
[06:24] gregerolsson has joined the channel
[06:24] MonetizedCulture: I might check that out too
[06:25] mape: That or couch, seems more people like couch in here :)
[06:25] MonetizedCulture: ACTION likes to use things written in C
[06:27] prettyrobots has joined the channel
[06:28] aschw has joined the channel
[06:29] Figaroo has joined the channel
[06:29] Figaroo: Hi, so how do I make my HTTP server listen to different subdomains?
[06:30] Ond: You mean
[06:30] Ond: Respond accordingly for different subdomains
[06:31] Figaroo: Ond, yeah, more specifically.
[06:31] Ond: It's very simple in Express
[06:32] eags_ has joined the channel
[06:32] Ond: (I think) 
[06:32] erlnoob: just check the host header
[06:33] meso_ has joined the channel
[06:34] Lorentz: Probably read in the request object, it should be host in headers.
[06:34] Lorentz: And then parse it.
[06:34] Rixius has joined the channel
[06:34] erlnoob: node.js is OK for some things (websockets) but really fails in the long term at least for now (not mature enough) pls don't ban me
[06:34] Rixius: what happens when you require() a file that modifies the core objects (Object, Number, etc)
[06:34] mape: fails in the long term right now?
[06:35] Rixius: Wishing for a module that does something like Prototypejs does to the native objects
[06:35] erlnoob: yea my engrish is not very good
[06:35] jdalton has left the channel
[06:35] Rixius: `(9).times(function(){})' is awesome
[06:36] Figaroo: erlnoob, what does it fail at?
[06:36] mischief has joined the channel
[06:36] erlnoob: Figaroo: tools, decent templating language, not necessarily node.js's fault
[06:37] erlnoob: memory limitation
[06:37] erlnoob: the pain of programming in callback style
[06:38] SubStack: on the template front there's jade, ejs, jspp
[06:38] Figaroo: I think Node blows PHP out of the water for me, as far as the level of control I have.
[06:38] Figaroo: yeah ejs looks like a perfect templating library
[06:39] erlnoob: Figaroo: I'm not sure about that, if it wasn't for long running processes and websockets, I'd be back to PHP in a jiffy
[06:39] Figaroo: there are HAML template language implementations.
[06:39] erlnoob: Figaroo: I'm in the process of moving from jade to ejs because of jade's limitations and awkwardness
[06:39] SubStack: callback style just takes some getting used to and familiarity with abstractions
[06:39] Figaroo: Node doesn't only do HTTP which is why it's so great/powerful.
[06:40] Figaroo: callback style is no different than DOM scripting or jQuery
[06:40] Figaroo: so it fits the web
[06:40] nook has joined the channel
[06:40] Lorentz: PHP's been around long enough that there are powerful libraries and frameworks for it.
[06:40] Lorentz: PHP laughs at templating, for instance, I mean it was made for templating.
[06:41] mape: And warped into something else later on
[06:41] Figaroo: But with ejs, you can do just the same things that you do with PHP
[06:41] Lorentz: Eh, the argument of "you can do the same things in x language than y language" never goes anywhere.
[06:42] Lorentz: For all I know, I could write webapps in C++ for hooking into apache or something.
[06:42] Figaroo: and erlnoob, you said tools. Ever heard of node-inspector, simply amazing IMO
[06:42] erlnoob: that's strictly nodejs 0.3.x right?
[06:42] Lorentz: Time to go home.
[06:47] erlnoob: another example is a problem I'm having right now.. using expressjs + ejs, a request just displays "Cannot GET /" without any further explanation
[06:47] erlnoob: no stack dump, nothing
[06:47] mape: You you haven't supplied a path in express for / ?
[06:48] erlnoob: mape: I have
[06:48] erlnoob: I'm looking at it right now
[06:48] mape: And is it express serving that error?
[06:48] erlnoob: other paths are OK
[06:49] erlnoob: yes, it's express
[06:49] mape: paste?
[06:50] Figaroo: erlnoob, idk
[06:50] devdrinker has joined the channel
[06:50] x_or has joined the channel
[06:50] erlnoob: mape: can't paste the code (not my property) but is there a way to tell ejs to NOT exit silently on errors?
[06:51] Figaroo: if I'm running a localhost how do I do subdomains?
[06:51] mape: ejs doesn't silently exit if there is an error
[06:51] mape: if anything you should see something in the terminal
[06:51] erlnoob: Figaroo: smackaho.st points to 127.0.0.1
[06:51] rodasc has joined the channel
[06:52] erlnoob: mape: that's the thing, the terminal shows nothing at all
[06:52] Figaroo: erlnoob, not sure what you mean
[06:52] erlnoob: I'm sure this is a problem with the template
[06:53] Figaroo: oh, so it's a free domain for localhosts?
[06:53] erlnoob: Figaroo: well, I just use user1.smackaho.st (which always points to 127.0.0.1) etc
[06:53] jchris has joined the channel
[06:53] erlnoob: or you can use user2whatever.smackaho.st
[06:53] Figaroo: but now the host header is foo.smackaho.st
[06:53] erlnoob: yes, you can parse it now
[06:53] Figaroo: and what's with the nagetive conotation? :\
[06:54] erlnoob: I have no idea, not mine
[06:54] erlnoob: saw it on HN a while ago
[06:54] Figaroo: any other similar domain/services that do this
[06:56] erlnoob: Figaroo: it's because of the name isn't it?
[06:56] masahiroh has joined the channel
[06:57] Figaroo: haha, it's fine, but out of curiousity, is there another name?
[06:58] erlnoob: none that I know of
[07:00] bingomanatee has joined the channel
[07:01] matjas has joined the channel
[07:03] zentoooo has joined the channel
[07:03] jkridner|work has joined the channel
[07:05] dthompson has joined the channel
[07:06] erlnoob: fixed the template, it was my fault, but still curious on why/how ejs just silently fails
[07:07] Figaroo: how should I handle subdomains.. hmmm
[07:07] mape: erlnoob: What was the issue?
[07:07] erlnoob: I used a variable that has not been initiated
[07:08] erlnoob: this was in a for loop
[07:08] erlnoob: and it borked the entire template
[07:08] Figaroo: I love Node.js!
[07:09] fille12 has joined the channel
[07:09] Figaroo: Is it a good idea to just run one node process?
[07:10] mape: Figaroo: Should be sufficent in most cases
[07:10] Figaroo: like if I were google, I wouldn't want only one?
[07:10] Figaroo: what cases?
[07:10] mape: Creating something that doesn't have insane amounts of traffic
[07:11] Country has joined the channel
[07:11] MrWarGames has joined the channel
[07:12] mape: :)
[07:12] mr_daniel has joined the channel
[07:13] sstephenson has joined the channel
[07:13] mrkurt has joined the channel
[07:13] meso_ has joined the channel
[07:15] rawberg has joined the channel
[07:15] Jaye has joined the channel
[07:16] MikhX has joined the channel
[07:19] devdrink_ has joined the channel
[07:19] mscdex: node.js rules!
[07:20] herbySk has joined the channel
[07:21] pkrumins: rulez!
[07:22] mscdex: heck yeah!
[07:23] jesusabdullah: Yeah guys!
[07:27] bingomanatee: douchebags.
[07:27] razvandimescu has joined the channel
[07:27] halfhalo: lol
[07:28] mscdex: come on bingomanatee, don't be a hater
[07:28] bingomanatee: Fagaroo: Any system of sufficient scale needs workers and load distribution. 
[07:29] bingomanatee: Multiple servers, load balancing, parallel databases, work queues. 
[07:30] bingomanatee: That being said you might see Node workers being more efficient than other server side products. 
[07:30] bingomanatee: But until people use it in large scale projects you'd have to run some simulations of load to determine that threshold for yourself. 
[07:32] bingomanatee: Keep in mind its not all about node - node interacts with a data source to produce content so like any other database driven system, at some point the data source itself will create bottlenecks and require scaling strategy. 
[07:34] bingomanatee: If you look at todays log, some have claimed node to be about as efficient as (I belive) ngnix - a system I've not used myself - for static files (images, video et all). 
[07:35] zentoooo has joined the channel
[07:36] Figaroo: what should one do if they had large amounts of traffic using a Node environment?
[07:37] mape: start more instances, cache things
[07:37] mape: get a faster server
[07:37] mikeal has joined the channel
[07:37] mikeal: jsdom master is like super broken
[07:39] erlnoob: Figaroo: celebrate :P
[07:39] Figaroo: haha would definitely be something I would do
[07:39] briznad has joined the channel
[07:40] MikhX has joined the channel
[07:40] Figaroo: I'd party like there is no tomorrow, then tomorrow will come and my server would be down, and so would I
[07:40] Figaroo: >.<
[07:40] Figaroo: Mape, so what does starting more node instances do? By instances you mean node processes?
[07:40] mape: Figaroo: Yup
[07:40] Jonasbn_ has joined the channel
[07:41] Figaroo: So what would multiple processes do?
[07:42] Bosmon2: They would run Concurrently, Docktour!
[07:42] Figaroo: what's concurrency?
[07:43] erlnoob: Figaroo: you should probably take a look at fugue https://github.com/pgte/fugue
[07:44] Figaroo: erlnoob, I don't understand what that does. :\
[07:44] SamuraiJack has joined the channel
[07:46] Figaroo: What does it do?
[07:50] saikat has joined the channel
[07:51] Utkarsh has joined the channel
[07:51] erlnoob: Figaroo: load-balanced worker process, see its wiki
[07:52] void_ has joined the channel
[07:53] ivanfi has joined the channel
[07:54] Utkarsh has joined the channel
[07:58] ph^ has joined the channel
[07:58] TomY has joined the channel
[07:59] sveimac has joined the channel
[08:01] clarkfischer has joined the channel
[08:01] nooder has joined the channel
[08:03] booo has joined the channel
[08:03] sveimac_ has joined the channel
[08:05] nook: Are there any ways to synchronize some parts of functions in node?
[08:05] Rixius: is it possible to require() something into the global scope?
[08:06] Bosmon2: Into *your* global scope.... clearly not into anyone else's
[08:06] Rixius: of course
[08:07] Bosmon2: The whole point of the CommonJS modules system is to isolate the global scopes in different modules
[08:07] Bosmon2: And it does :P
[08:08] Rixius: yeah liek in my current global scope, I want to require a file that exports {"foo": true} and have access to foo from my current global scope
[08:08] Rixius: like**
[08:08] stagas has joined the channel
[08:09] JimBastard has joined the channel
[08:10] mAritz has joined the channel
[08:10] Rixius: Solution: extend the properties onto `global' and they can be accessed normally
[08:11] wyverald has joined the channel
[08:14] mikew3c has joined the channel
[08:14] bingomanatee has joined the channel
[08:14] JimBastard: i need a name for an application that does photo uploads and gallery streams. something like imgur
[08:14] JimBastard: bonus points: dont use the word drop
[08:15] bingomanatee: facebook?
[08:15] JimBastard: let me see if thats available
[08:15] JimBastard: bingomanatee: its not, got another one?
[08:15] bingomanatee: Flickr?
[08:15] JimBastard: okay, i concede defeat
[08:15] JimBastard: any real suggestions?
[08:16] JimBastard: ^_^
[08:16] bingomanatee: Galleria?
[08:16] Rixius: +1 for Galleria
[08:16] stagas: JimBastard: try this domain generator http://impossibility.org/
[08:16] JimBastard: i was thinking maybe it could be more generic eventually and just be and drag and drop thing for all files
[08:16] bingomanatee: Bingomanatee?
[08:17] JimBastard_ has joined the channel
[08:17] JimBastard_: sigh
[08:19] JimBastard_: FrodoDrop
[08:19] JimBastard_: :-(
[08:19] altamic has joined the channel
[08:19] JimBastard_: im not using drip.io, i hate that domain
[08:19] mape: dropthingsinto.it
[08:20] JimBastard_: how about, Injoy 
[08:20] SubStack: gallivantingimagepictureuploadsite.com
[08:20] Rixius: does anyone talk in #prototype?
[08:20] dnolen has joined the channel
[08:20] mape: how about taking a look?
[08:21] Rixius: I'm sitting in there and just asked a question, was wondering if it's just unusually quiet right now
[08:21] gkatsev: isn't drop.io dead?
[08:21] JimBastard_: yeah
[08:21] JimBastard_: how about, Drrrop
[08:21] gkatsev: stupid facebook :(
[08:22] bingomanatee: Pord?
[08:22] JimBastard_: DrDrop
[08:22] JimBastard_: DrDropper
[08:22] JimBastard_: i think Drop is it, fuck it
[08:22] bingomanatee: Droppler?
[08:22] JimBastard_: pronounced, drrrrrrrop
[08:22] bingomanatee: dRop?
[08:23] bingomanatee: Myfol.io?
[08:23] herbySk: JimBastard_: BringBox
[08:23] bingomanatee: BringBox is fun
[08:24] bingomanatee: Rixus: its sunday at 12 am - everything is kind of quiet. That being said, jQuery is kind of kicking Prototype's ass ...
[08:25] q_no has joined the channel
[08:27] bingomanatee: or is it 12 PM? I always screw those up. 
[08:27] felixge has joined the channel
[08:27] felixge has joined the channel
[08:28] sechrist: did it say that I just joined?
[08:28] sechrist: curious if my znc is working ok
[08:31] ph^ has joined the channel
[08:32] muhqu has joined the channel
[08:33] daglees has joined the channel
[08:35] Wyverald has joined the channel
[08:37] romeo_ordos has joined the channel
[08:37] romeo_ordos has left the channel
[08:37] [AD]Turbo has joined the channel
[08:38] [AD]Turbo: hi there
[08:39] JimBastard_: sup [AD]Turbo 
[08:40] Utkarsh_ has joined the channel
[08:40] virtuo has joined the channel
[08:41] Wyverald has joined the channel
[08:41] Wyverald: ls
[08:41] Wyverald: oops sorry
[08:42] Kingdutch has joined the channel
[08:45] Rixius: While there are still Problems, check out https://github.com/Rixius/protoype.node.js ; I'm implementing the Native Object manipulations and Class features of Prototypejs
[08:46] Rixius: being able to do Number#times makes a big improvement for me
[08:47] Kingdutch: You're gonna do
[08:47] Kingdutch: 5#2 = 10?
[08:47] Kingdutch: o.O
[08:47] alek_br has joined the channel
[08:47] pietern has joined the channel
[08:49] d0k has joined the channel
[08:49] Rixius: no
[08:49] Rixius: (9).times(function(x){console.log(x);})
[08:49] Rixius: outputs 0-8
[08:50] Rixius: I've been reading Ruby documentation a lot lately, and they document as Class#method
[08:50] Kingdutch: Don't you mean
[08:50] Kingdutch: (function(x){console.log(x);}).times(9);
[08:50] Kingdutch: makes more sense to me
[08:50] Kingdutch: But still
[08:50] Kingdutch: y not
[08:51] Kingdutch: for (i=0;i<9;i++) { console.log(i); }
[08:51] Kingdutch: It's faster and a few chars shorter
[08:53] Rixius: my biggest problem with for loops is having to manage the variables such as i
[08:53] Rixius: that example would leak i to global
[08:53] ROBOd has joined the channel
[08:54] Kingdutch: for(var i=0;i<9;i++){console.log(i);}
[08:54] Kingdutch: Still shorter
[08:55] mikedeboer has joined the channel
[08:55] AAA_awright has joined the channel
[08:55] glenngillen has joined the channel
[08:55] Kingdutch: I can understand where you're coming from, but I don't see the point in replacing a for loop with something less fast just because you can learn to type out 'var'
[08:55] Rixius: I do it for readibility
[08:56] Rixius: that couple of ms vs the ugliness of a for loop
[08:56] Rixius: is a worthwile trade for me
[08:56] Kingdutch: I don't really see how a for loop is ugly :'
[08:56] Kingdutch: :'(
[08:56] Kingdutch: for (start;condition;modify)
[08:56] Kingdutch: Clear as water
[08:56] x_or1 has joined the channel
[08:56] eags_: is 0.3.5 stable enough to really use and are the examples on the website still compatible?  Without thinking I built against master which gives a version of 0.3.6pre and the basic example on the node.js website didn't work.
[08:57] Figaroo has joined the channel
[08:57] Kingdutch: But I'm sure you'll help out some people :D
[08:57] Rixius: Thanks Kingdutch :-\
[08:57] glenngillen: *rides in as the sherrif* I demand to see examples of both, and I will then pass down my judgement! :P
[08:57] stagas: running a function n times is different than a for loop
[08:57] Kingdutch: eags_: The examples should just work, how did it not work?
[08:57] MrTopf has joined the channel
[08:57] Kingdutch: eags_: Also it should be stable enough, atleast I haven't had any problems
[08:58] Kingdutch: damn forgot my coffee brb
[08:59] Rixius: is there a node module to test a functions calls per second?
[08:59] eags_:  Kingdutch: https://gist.github.com/782633
[08:59] eags_: The file I ran against was literally copy/paste from the node.js example.js
[08:59] eags_: Also 100% of tests pasts when I ran make tests
[09:00] Kingdutch: Show me some code
[09:00] Kingdutch: afaik eone isn't defined
[09:00] joaojeronimo has joined the channel
[09:01] glenngillen has left the channel
[09:01] joaojeronimo: Hi everyone, I declared a variable in the global scope (an array), pushed items to the array in a local function scope, and now outside the function's local scope I can't see the contents of the array... what is wrong ?
[09:01] Kingdutch: Rixius: Just time(); at the strat (or w/e the js function is)
[09:01] eags_: Kingdutch: https://gist.github.com/782636
[09:01] Kingdutch: Store it
[09:01] eags_: I ran: node example.js
[09:02] Kingdutch: make a for loop, execute code a few thousand times, store end time like you did at ths tart, take the difference
[09:02] Kingdutch: Then you could calculate function calls per sec
[09:02] Rixius: Imma run a  quick calls per second on the for loop and the Number.times
[09:02] Kingdutch: eags_: Take out that eone at the end, where'd you get this code? Because that's not part of it afaik
[09:02] eags_: oh shit, my bad
[09:02] Kingdutch: :')
[09:03] Kingdutch: See? It told you just what's wrong, exactly where lol
[09:03] eags_: Man stupid copy paste, sorry
[09:03] Kingdutch: (Don't worry, I've blamed node for one of my coding mishaps too at some point, took me 2 hours to find out, error takes some getting used to)
[09:03] Kingdutch: np
[09:04] ziro` has joined the channel
[09:05] q_no has joined the channel
[09:10] meso_ has joined the channel
[09:10] AAA_awright has joined the channel
[09:10] tfcoding has joined the channel
[09:13] Rixius: Kingdutch: the for loop is significantly faster than the function approach I concede.
[09:13] Kingdutch: Can't beat native 
[09:14] Rixius: I know, I just hate the carry-overs from C
[09:14] Rixius: they're so ugly IMHO
[09:14] robotarmy has joined the channel
[09:14] Kingdutch: Why?
[09:16] yozgrahame has joined the channel
[09:17] Jonathon has joined the channel
[09:17] Rixius: the order of the declarations and the use of the semicolon is disorienting
[09:17] Jonathon: hiya guys. I need some help with a cygwin install of node.js
[09:17] Rixius: again, just a personal opinion
[09:17] Rixius: no forcing it on anyone else
[09:17] Kingdutch: Ah ok I see
[09:17] Kingdutch: I admit it takes some getting used to
[09:18] Kingdutch: But I've been using them for like 7 years now so they stopped being bothersome
[09:18] joaojeronimo: can someone help me with this please ? http://pastebin.com/qHMsNj9G
[09:18] Kingdutch: for (var i=0; i < someothervar; i++) { }
[09:18] Kingdutch: CAn't be much more concise
[09:18] aklt has joined the channel
[09:18] Kingdutch: joaojeronimo: What's the problem?
[09:19] joaojeronimo: Kingdutch: I push things in the array inside the function's scope and then outside the function's scope I can't view things in the array...
[09:19] Jonathon: I'm getting this build issue: Build failed: -> task failed (err #2): {task: libv8.a SConstruct -> libv8.a}
[09:19] Rixius: joaojeronimo:  the client.open finding looping may be asyncronous, then it hasn't happened yet when you check tracks at the end
[09:20] Kingdutch: ^
[09:20] Kingdutch: Rixius: beat me to figuring it out lol
[09:20] Kingdutch: I was just gonna say it
[09:20] Rixius: joaojeronimo: try doing a setTimeout for a couple of seconds just to check
[09:20] Rixius: >.<
[09:20] joaojeronimo: ok Rixius, just a sec
[09:22] seemann has joined the channel
[09:22] joaojeronimo: Rixius: everything works fine with a timeout... thanks :)
[09:23] clarkfischer has joined the channel
[09:23] nooder: hello :)
[09:23] Kingdutch: Hola muchacha
[09:23] nooder: i have problems with timeouts. setTimeout(function () {}, 120000)
[09:23] Kingdutch: Jup, that'll do nothing every 2 min.
[09:23] nooder: firstly it triggers on 120, then 240
[09:23] Rixius: nope once only
[09:24] Rixius: setinterval is once every 2 mins
[09:24] Rixius: setInterval**
[09:24] Kingdutch: Meh >.> it's too early
[09:24] Kingdutch: And I've already been to school today lol
[09:24] Rixius: it's cool
[09:24] Rixius: I'm still up from last night
[09:24] Kingdutch: So what time is it there then?
[09:24] nooder: hm. you mean i have to redefine timeout every loop?
[09:25] Kingdutch: nooder IF you want it to trigger every 2 min. use setInterval instead of setTimeout
[09:25] Kingdutch: Otherwise, yes you'll have to use setTimeout
[09:25] nooder: oh thx!
[09:26] Kingdutch: ACTION notes we should just make something setInterval with an optional parameter specifying the times to repeat, -1 = infinity, 0 = stop, 1-* = x times
[09:26] Kingdutch: And then remove setTimeout
[09:26] Kingdutch: Unless there's other functional differences I'm not aware of
[09:26] Rixius: not that I know of, I liek that
[09:26] Rixius: like**
[09:27] Rixius: maybe, setInterval(fn, time[, count = -1])?
[09:27] Kingdutch: ryah_: We has a suggestion! 
[09:27] Kingdutch: Yeh that's what I mean
[09:27] Rixius: pretty sweet
[09:29] nook: Is anyone here using node + mongodb-native?
[09:32] Kingdutch: Rixius: I send it off to the dev mailing list
[09:32] Rixius: awesome
[09:32] stagas: Kingdutch: function setInterval(fn, time, count) { for (var i = 1; i <= count; i++) { setTimeout(fn, time * i) } }
[09:33] stagas: although I wouldn't replace setInterval :) name it 'repeat' or something
[09:33] Rixius: I was working on a much cooler pure js implementation :/
[09:33] Kingdutch: stagas: That's a way to make a current implementation, although I think we can do better on the C side
[09:33] Rixius: wait
[09:33] Kingdutch: And how'd you handle infinity stagas?
[09:34] Rixius: just what I thought of
[09:34] Rixius: back to my TextMate
[09:34] stagas: if (!!~count) return setInterval(fn, time)
[09:35] stagas: provided it's not named setInterval of course :)
[09:35] Kingdutch: !!~count
[09:35] Kingdutch: WTF is that? O.o
[09:36] stagas: obfuscation :P
[09:36] dding_ has joined the channel
[09:36] stagas: v8: !!~-1
[09:36] v8bot: stagas: false
[09:36] Kingdutch: v8bot: -1
[09:36] v8bot: Kingdutch: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[09:36] stagas: v8: !~1
[09:36] v8bot: stagas: false
[09:36] Kingdutch: v8bot: if(-1)
[09:36] v8bot: Kingdutch: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[09:36] Kingdutch: v8bot: if(-1) { return false; }
[09:37] v8bot: Kingdutch: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[09:37] Kingdutch: fu
[09:37] dding_: \v
[09:37] dding_: `v
[09:37] Node-Bot has joined the channel
[09:37] Kingdutch: !start
[09:37] Node-Bot: Node interactive shell started
[09:37] stagas: just do === -1 :P
[09:38] Kingdutch: if (-1) { console.log('false'); } else { console.log('true') }
[09:38] Kingdutch: console.log('Hola');
[09:38] Kingdutch: WTF
[09:38] Kingdutch: Must've forgotten to put my own nick back in to listen >.>
[09:38] dding_: v8: "HI";
[09:38] v8bot: dding_: "HI"
[09:38] Kingdutch: !ned
[09:38] Kingdutch: !end
[09:38] Node-Bot: Node interactive shell ended
[09:39] Node-Bot has joined the channel
[09:39] Kingdutch: Gotta love case-sensitivity
[09:39] Kingdutch: !start
[09:39] Node-Bot: Node interactive shell started
[09:39] Kingdutch: if (-1) { console.log('false'); } else { console.log('true') }
[09:39] Node-Bot: > false
[09:39] Kingdutch: // lol -1 evaluates to true :O
[09:39] Kingdutch: var x=0;
[09:39] Kingdutch: if (x==-1) console.log('true');
[09:40] Kingdutch: console.inspect(x);
[09:40] Node-Bot: > TypeError: Object [object Object] has no method 'inspect'
[09:40] dding_: v8: Boolean("I'm a pretty girl");
[09:40] v8bot: dding_: true
[09:40] dpino has joined the channel
[09:40] Kingdutch: var log = console.log;
[09:40] Kingdutch: log(Boolean('I\'m an interactive shell'));
[09:40] Node-Bot: > true
[09:41] Kingdutch: console.inspect(log);
[09:41] Node-Bot: > TypeError: Object [object Object] has no method 'inspect'
[09:41] stagas: ya !!~ turns -1 to false and >= 0 to true. it's used for turning indexOf to boolean
[09:41] Kingdutch: // D'or
[09:41] Kingdutch: // Never knew tht
[09:41] Kingdutch: // Never knew that*
[09:41] Kingdutch: require('util').inspect(log);
[09:41] Rixius: check it: https://gist.github.com/782658
[09:41] Node-Bot: > '[Function]'
[09:41] xla has joined the channel
[09:41] Rixius: Interval
[09:42] stagas: v8: if (!~-1) console.log('infinity')
[09:42] v8bot: stagas: CONSOLE: ["infinity"], OUTPUT: undefined
[09:42] Kingdutch: process.end();
[09:42] Node-Bot: > TypeError: Object [object EventEmitter] has no method 'end'
[09:42] Kingdutch: Humm
[09:42] Node-Bot: > ReferenceError: Humm is not defined
[09:42] Kingdutch: !end
[09:42] Rixius: 24 lines of cool
[09:42] Node-Bot: Node interactive shell ended
[09:42] Kingdutch: !start
[09:42] Node-Bot: Node interactive shell started
[09:42] Kingdutch: process.end();
[09:43] Node-Bot: > TypeError: Object [object EventEmitter] has no method 'end'
[09:43] Kingdutch: process.exit();
[09:43] Node-Bot: Node interactive shell ended
[09:43] Kingdutch: Right...
[09:43] Kingdutch: Rixius: What's with 0 || 1?
[09:43] Kingdutch: Why not just 1
[09:43] Kingdutch: >.>
[09:43] Rixius: 0 or 1 does it once
[09:43] sveimac has joined the channel
[09:43] Kingdutch: 0 should stop it
[09:43] Kingdutch: :<
[09:43] Rixius: >_<
[09:44] dding_: T.T
[09:44] Rixius: would have to keep a record of the return values
[09:44] Rixius: mapped to the function
[09:44] skm has joined the channel
[09:44] Kingdutch: How do you figure that?
[09:44] Rixius: how would you suggest the 0 be used
[09:45] Kingdutch: How do you normally stop a setTimeout?
[09:45] Kingdutch: or a setInterval
[09:45] tanepiper: Kingdutch: clearTimeout and clearInterval
[09:45] Rixius: pass clearInterval the return value of setInterval
[09:45] Kingdutch: Oh dang
[09:45] tanepiper: so var foo = setInterval();  clearInterval(foo)
[09:45] Kingdutch: I thought this was just like removeListener
[09:45] gaYak: Urf, how good is node.js with SSL? Or should I use something infront of it?
[09:46] booo has joined the channel
[09:46] tanepiper: for now, use something infront
[09:46] dding_: push the power button
[09:46] gaYak: tanepiper: Ok, thanks.
[09:49] Kingdutch: !start
[09:49] Node-Bot: Node interactive shell started
[09:49] Kingdutch: console.log('now what? =/');
[09:49] Node-Bot: > now what? =/
[09:52] luke` has joined the channel
[09:52] Rixius: !start
[09:52] Rixius: process.exit()
[09:52] Kingdutch: process.exit();
[09:52] Node-Bot: Node interactive shell ended
[09:52] Kingdutch: nick limited ;)
[09:52] Rixius: sad day >_>
[09:52] Kingdutch: I don't feeil like getting require('child_process').exec('harmful code');
[09:53] Rixius: wanted to end your process
[09:53] Rixius: but I see your problem
[09:53] Node-Bot has joined the channel
[09:53] Kingdutch: process.exit() only ends the interactive shell
[09:53] Kingdutch: Not my bot
[09:53] Kingdutch: ;)
[09:53] Rixius: >_> you win
[09:53] Rixius: bot public code?
[09:53] julienXX has joined the channel
[09:54] Kingdutch: Not at the moment
[09:54] Rixius: and is it based on Jerk?
[09:55] Kingdutch: Nope written from scratch
[09:55] Rixius: Im looking for a good IRC Bot script, and I'm not fond of Jerk
[09:55] bzinger has joined the channel
[09:55] Kingdutch: But I want some way to make a !restart command
[09:55] Node-Bot has joined the channel
[09:55] Kingdutch: Not sure how to do that yet
[09:55] Kingdutch: Ok go ahead now
[09:55] Kingdutch: !start
[09:55] Node-Bot: Node interactive shell started
[09:55] Rixius: !start
[09:55] Kingdutch: // Anything anyone says is processed now :X
[09:55] Node-Bot: > ReferenceError: start is not defined
[09:55] Rixius: process.exit()
[09:55] Kingdutch: // With the exception of anything containing process
[09:56] Ond: Oh
[09:56] Node-Bot: > ReferenceError: Oh is not defined
[09:56] Kingdutch: // ;)
[09:56] Ond: I thought that after you initialized it, it ignored everyone who isn't the initializer
[09:56] Node-Bot: > ... 
[09:56] Kingdutch: !end
[09:56] Node-Bot: Node interactive shell ended
[09:56] dding_: v8 : require('child_process');
[09:56] dding_: v8: require('child_process');
[09:56] v8bot: dding_: ReferenceError: require is not defined
[09:56] Kingdutch: lol
[09:56] Rixius: v8: console.dir(process);
[09:56] v8bot: Rixius: ReferenceError: process is not defined
[09:57] Rixius: :-/
[09:57] Twelve-60 has joined the channel
[09:57] dding_: i can't use exec at cygwin
[09:57] Rixius: v8: console.log(global)
[09:57] v8bot: Rixius: ReferenceError: global is not defined
[09:57] tfcoding has joined the channel
[09:57] Rixius: Kingdutch: if you want to github your IRCBot I'll jump on a fork
[09:59] matjas has joined the channel
[10:00] Rixius: v8: console.log(typeof this);
[10:00] v8bot: Rixius: CONSOLE: ["object"], OUTPUT: undefined
[10:00] Rixius: v8: console.log(this);
[10:00] v8bot: Rixius: CONSOLE: [{}], OUTPUT: undefined
[10:00] Rixius: v8: this.foo = "asdasd"
[10:00] v8bot: Rixius: "asdasd"
[10:00] Rixius: v8: console.log(foo);
[10:00] v8bot: Rixius: ReferenceError: foo is not defined
[10:00] Rixius: v8: console.log(this);
[10:00] v8bot: Rixius: CONSOLE: [{}], OUTPUT: undefined
[10:01] Kingdutch: Rixius: Adding a way for other users to attach to the shell after it's started
[10:01] Rixius: v8: console.log("one of these days, Rixius will crack me");
[10:01] v8bot: Rixius: CONSOLE: ["one of these days, Rixius will crack me"], OUTPUT: undefined
[10:01] Rixius: do you want other users affecting the same sub repl?
[10:02] Kingdutch: Hmm I could work on setting up more nodes I suppose
[10:02] Kingdutch: But that's harder
[10:02] Rixius: true
[10:05] booo: can someone tell me how to install node-waf?
[10:05] booo: she tells me that she is missing a scripting module
[10:06] Kingdutch: Ok now anyone can attach using !start and detach using !end
[10:06] Node-Bot has joined the channel
[10:06] Kingdutch: And it'll allow me to do anything, and other people anything without the word 'process' in it
[10:06] dding_: v8: console.log(Object.getOwnPropertyNames);
[10:06] v8bot: dding_: CONSOLE: [function getOwnPropertyNames() { [native code] }], OUTPUT: undefined
[10:06] stagas: !start
[10:06] Kingdutch: !start
[10:06] Node-Bot: Node interactive shell started
[10:06] stagas: !end
[10:06] Kingdutch: // Try now, I still need to start it as master user ;)
[10:06] dding_: v8: console.log(Object.getOwnPropertyNames(this));
[10:06] v8bot: dding_: CONSOLE: [["TypeError", "decodeURI", "print", "parseFloat", "Number", "URIError", "encodeURIComponent", "RangeError", "ReferenceError", "RegExp", "Array", "isNaN", "console", "Date", "Infinity", "Boolean", "Error", "NaN", "execScript", "String", "Function", "Math", "undefined", "encodeURI", "escape", "unescape", "decodeURIComponent", "EvalError", "SyntaxError", "Object", "eval", "parseInt", "JSO [Output truncated...]
[10:06] stagas: !start
[10:06] Kingdutch: // Humm
[10:07] stagas: needs some testing :)
[10:07] Kingdutch: Nope it actually works
[10:07] Kingdutch: But it messes up the writing to IRC
[10:07] Node-Bot: > ... 
[10:08] Kingdutch: Now it's fixed again
[10:08] Node-Bot: > ... 
[10:08] mraleph has joined the channel
[10:08] Kingdutch: !end
[10:08] Node-Bot: Node interactive shell ended
[10:08] stagas: !start
[10:08] stagas: !end
[10:08] stagas: doesn't like me :(
[10:08] Kingdutch: It's what I get for forgetting \r\n behind my messages :<
[10:08] Node-Bot has joined the channel
[10:08] Kingdutch: !start
[10:08] Node-Bot: Node interactive shell started
[10:08] Kingdutch: // Ok try now :)
[10:08] Rixius: console.log(typeof this);
[10:08] stagas: !start
[10:09] Node-Bot: Added you to the users
[10:09] stagas: !end
[10:09] stagas: !start
[10:09] Node-Bot: Added you to the users
[10:09] Rixius: !start
[10:09] stagas: console.log('hello, world')
[10:09] Rixius: crash
[10:09] Kingdutch: lool that crashed it
[10:09] Rixius: and burn
[10:11] pietern has joined the channel
[10:12] sveimac has joined the channel
[10:12] Kingdutch: Ok let's try that again
[10:13] Node-Bot has joined the channel
[10:13] Kingdutch: !start
[10:13] Node-Bot: Node interactive shell started
[10:13] markwubben has joined the channel
[10:13] Kingdutch: / Anyone wanna attach? stagas? Rixius quit :O
[10:13] Node-Bot: > ... 
[10:13] Kingdutch: !end
[10:13] Node-Bot: Node interactive shell ended
[10:14] Kingdutch: !start
[10:14] Node-Bot: Node interactive shell started
[10:14] stagas: !start
[10:14] Node-Bot: Added you to the users
[10:14] Kingdutch: // urgh lol had a / too little
[10:14] stagas: console.log('hi')
[10:14] Ond: !start
[10:14] stagas: !start
[10:14] Kingdutch: users gets corrupted somewhere
[10:14] Kingdutch: :XD
[10:15] Kingdutch: Ok now it'll not crash 'n burn :D
[10:16] stagas: !start
[10:16] Node-Bot has joined the channel
[10:16] Kingdutch: !start
[10:16] Node-Bot: Node interactive shell started
[10:16] stagas: !start
[10:16] Node-Bot: Added you to the users
[10:16] Node-Bot: > ReferenceError: start is not defined
[10:16] stagas: console.log('hi')
[10:16] Node-Bot: > hi
[10:16] stagas: !end
[10:16] Kingdutch: // Eeps I smell an incoming crash
[10:17] Kingdutch: !end
[10:17] Node-Bot: Node interactive shell ended
[10:17] Kingdutch: nvm the message to tell you you got removed from the users just failed
[10:18] Kingdutch: Can now also just use ! to make it ignore your messages
[10:19] Node-Bot has joined the channel
[10:19] Kingdutch: !start
[10:19] Node-Bot: Node interactive shell started
[10:19] Kingdutch: !ignore this
[10:19] Node-Bot: > ... 
[10:19] Kingdutch: or not....
[10:19] Node-Bot: > ... 
[10:19] Kingdutch: !end
[10:19] Node-Bot: Node interactive shell ended
[10:19] Node-Bot has joined the channel
[10:21] x_or has joined the channel
[10:21] bzinger has joined the channel
[10:21] HerrTopf has joined the channel
[10:22] JimBastard has joined the channel
[10:22] JimBastard: sweet https://gist.github.com/782693
[10:22] mikeal has joined the channel
[10:24] mysterion` has joined the channel
[10:26] stagas: JimBastard: nice!
[10:26] JimBastard: stagas: updating readme and publishing now
[10:26] JimBastard: i wanna clean that library up
[10:26] stagas: it makes more sense as a middleware
[10:27] JimBastard: yeah
[10:28] shimondoodkin has joined the channel
[10:28] Kingdutch: Somehow the Webgl feels more 3D than OpenGL on the desktop lol
[10:30] kubrow has joined the channel
[10:32] teemow has joined the channel
[10:32] zomgbie has joined the channel
[10:32] Evet: one http server per application isnt overkill?
[10:33] Kingdutch: You can add more if you want
[10:35] Evet: which one is the most scalable way?
[10:37] kawaz_air has joined the channel
[10:37] dsirijus has joined the channel
[10:38] dsirijus has joined the channel
[10:39] MikhX has joined the channel
[10:39] dsirijus has joined the channel
[10:40] eikke has joined the channel
[10:43] sveimac has joined the channel
[10:45] tanepiper: ok, with http client - where the hell does 'Killed' come from if a connection dies - I don't see it in http.js
[10:45] common- has joined the channel
[10:47] Rixius has joined the channel
[10:47] booo: what's the problem here http://pastebin.com/4g4AM7Hu
[10:48] Kingdutch: Rixius: !start
[10:48] tmzt: tanepiper: c library in response to a sigkill or sigpipe (etc.)
[10:48] Kingdutch: !start
[10:48] Node-Bot: Node interactive shell started
[10:48] tmzt: in general an unhandled signal
[10:48] ewdafa has joined the channel
[10:48] AAA_awright_ has joined the channel
[10:48] tmzt: waz it do?
[10:48] tanepiper: tmzt: hmm - ok, i have a process listner for unhandleException, so that's not getting fired
[10:49] tmzt: how are you registering it?
[10:49] tanepiper: i just get this: https://gist.github.com/c5e646809aba198331db
[10:49] tanepiper: process.addListener("uncaughtException", function(exception) { 
[10:49] tanepiper: probably have to put a listner onto 'close' for the client
[10:50] tmzt: hmm
[10:50] tmzt: yeah
[10:50] tmzt: but you cant handle 15 anyway
[10:50] tmzt: strace might help
[10:51] Kingdutch: !Rixius you here?
[10:51] tanepiper: basically, my script checks to see if a HTTP request can handle accept-range and if so, sets up X http connections, each with a chunk of that range
[10:51] tanepiper: and puts the data into buffers, and when done outputs to a file
[10:52] tmzt: bittorrent?
[10:52] tanepiper: it's worked so far on downloading the Ubuntu 10.10 ISO, i tested with 1000 connections, downloaded in 15s
[10:52] tanepiper: not bit torrent, just HTTP connections, like a download accelerator
[10:52] tmzt: sure but you could implement a light (one client) torrent proceedure
[10:53] tanepiper: that was like a insane upper limit test, this one i am testing just now is a file that's a couple of Gb but only 5 connections
[10:53] Kingdutch: ! tmzt want a node shell? Type !start :')
[10:53] tanepiper: tmzt: it's a client request, to handle HTTP connections, not torrent files
[10:53] tmzt: isnt it started?
[10:53] tmzt: and how do you stop it
[10:53] tanepiper: (client as in paying client, not http client)
[10:53] Kingdutch: ! I started it, but with !start you'll get attached
[10:53] Kingdutch: ! THe ! can be used as a // comment so it's not parsed, and you detach using !end
[10:54] tmzt: tanepiper: I mean the part that files in missing parts of a sparse file progressively
[10:55] tmzt: how did you download a file so fast?
[10:55] tanepiper: no throttling for a start :)
[10:55] tmzt: node just multiplexes a process
[10:55] tmzt: it can be faster then the raw packets
[10:55] tmzt: cant
[10:56] tanepiper: https://gist.github.com/b720f79b8c7a9da87b91
[10:56] tanepiper: this is the ugly hack
[10:57] Kingdutch: console.log('Tmzt try me out lol');
[10:57] Node-Bot: > Tmzt try me out lol
[10:58] tanepiper: !start
[10:58] Node-Bot: Added you to the users
[10:59] tanepiper: var foo = setInterval(function() { console.log('foo bar'); }, 5000); clearInterval(foo);
[10:59] tmzt: fs.readSync('/etc/passwd') ???
[10:59] Kingdutch: ! Hmm tmzt, that might actually work :')
[10:59] Kingdutch: ! Although you can't shut down my pc
[11:00] tmzt: node isnt running as root?
[11:00] Kingdutch: var foo = setInterval(function() { console.log('foo bar'); }, 5000);
[11:00] Kingdutch: ! Oh nope
[11:00] Node-Bot: > foo bar
[11:00] Node-Bot: > foo bar
[11:00] Kingdutch: clearInterval(foo);
[11:00] tmzt: 1start
[11:00] tmzt: !start
[11:00] Node-Bot: Added you to the users
[11:01] tanepiper: !end
[11:01] Node-Bot: Removed you from users
[11:01] tmzt: require('os').getpid()
[11:01] Node-Bot: > TypeError: Object [object Object] has no method 'getpid'
[11:01] tmzt: require('unix').getpid()
[11:01] Node-Bot: > Error: Cannot find module 'unix'
[11:01] shimondoodkin has left the channel
[11:01] tmzt: require('os').geteuid()
[11:01] Node-Bot: > TypeError: Object [object Object] has no method 'geteuid'
[11:01] fly-away has joined the channel
[11:01] MrNibbles: hye guys
[11:01] Kingdutch: require('os').getuid();
[11:01] Node-Bot: > TypeError: Object [object Object] has no method 'getuid'
[11:02] Kingdutch: process.getuid();
[11:02] Node-Bot: > 1000
[11:02] Kingdutch: ! Anything with process in it is blocked for everyone except me
[11:02] MrNibbles: i am in a bit of a conundrum at the moment
[11:02] tmzt: yeah that
[11:02] Node-Bot: > ... 
[11:02] Kingdutch: !end
[11:02] Node-Bot: Node interactive shell ended
[11:02] tmzt: eval('process.getuid()')
[11:02] Kingdutch: Also you just blew it with that false statement lol, haven't figured how to get out of the triple dot yet =(
[11:02] Kingdutch: !start
[11:02] Node-Bot: Node interactive shell started
[11:02] Kingdutch: !Reattach yourself and try that eval
[11:02] tmzt: !start
[11:02] Node-Bot: Added you to the users
[11:02] tmzt: eval('process.getuid()')
[11:02] Node-Bot: Can't use 'Process' in commands
[11:02] tmzt: nice
[11:03] Node-Bot: > ReferenceError: nice is not defined
[11:03] Vertice has joined the channel
[11:03] tmzt: server
[11:03] Kingdutch: ! It's just a case insensitive string for 'process', which as a nice side feature also kills off require('child_process');
[11:03] Node-Bot: > ReferenceError: server is not defined
[11:03] tmzt: thats what I thought
[11:03] Node-Bot: > ... 
[11:03] Kingdutch: !end
[11:03] Node-Bot: Node interactive shell ended
[11:04] tmzt: eval('pro'+'cess')
[11:04] Kingdutch: How do you get out of the triple dot lol
[11:04] tmzt: oh well
[11:04] tmzt: ctrl-d
[11:04] Kingdutch: Hmm I guess that might work
[11:04] Kingdutch: Ah, so not from IRC :') 
[11:04] tmzt: welcome to the halting problem
[11:07] Node-Bot has joined the channel
[11:07] tmzt: by the way chr() might do it
[11:07] tmzt: !start
[11:07] tmzt: nothing?
[11:07] Kingdutch: !start
[11:07] Node-Bot: Node interactive shell started
[11:07] Kingdutch: Test this
[11:07] Node-Bot: > ... 
[11:07] Evet has joined the channel
[11:07] Kingdutch: !restart
[11:07] Node-Bot: Node interactive shell ended
[11:08] tmzt: !start
[11:08] tmzt: you killed it
[11:08] Kingdutch: Yeh
[11:08] Kingdutch: shouldn't have died though
[11:08] Rixius: !start
[11:09] Node-Bot has joined the channel
[11:09] Kingdutch: !start
[11:09] Node-Bot: Node interactive shell started
[11:09] Kingdutch: this
[11:09] Node-Bot: > {}
[11:09] Rixius: !start
[11:09] Node-Bot: Added you to the users
[11:09] Kingdutch: Tryin this
[11:09] Node-Bot: > ... 
[11:09] tmzt: !start
[11:09] Kingdutch: !restart
[11:09] Node-Bot: Added you to the users
[11:09] Node-Bot: Reset shell
[11:09] Node-Bot: Node interactive shell ended
[11:10] Rixius: this
[11:10] Kingdutch: !start
[11:10] Node-Bot: Node interactive shell started
[11:10] Kingdutch: ! Hmmm somehow that reset kills the shell
[11:10] Neil___ has joined the channel
[11:10] Rixius: ! is `!' a comment now?
[11:10] Kingdutch: ! Yeh because otherwise I had to type a triple slash
[11:11] Kingdutch: ! and I didn't want to put !start and !end through to the parser either
[11:13] A83 has joined the channel
[11:13] sveimac has joined the channel
[11:15] Node-Bot has joined the channel
[11:15] Kingdutch: !start
[11:16] Kingdutch: I wish connect was a bit faster
[11:16] Node-Bot has joined the channel
[11:16] Kingdutch: !start
[11:16] Node-Bot: Node interactive shell started
[11:16] Kingdutch: test this
[11:16] Node-Bot: > ... 
[11:16] Kingdutch: !restart
[11:16] Node-Bot: Reset shell
[11:16] Node-Bot: Node interactive shell ended (1,null)
[11:16] Kingdutch: test
[11:17] romainhuet has joined the channel
[11:19] Rixius: looks like a no Kingdutch 
[11:19] Node-Bot has joined the channel
[11:19] Kingdutch: !strat
[11:19] Kingdutch: !start
[11:19] Node-Bot: Node interactive shell started
[11:19] Kingdutch: test this
[11:19] Node-Bot: > ... 
[11:19] Kingdutch: !restart
[11:19] Node-Bot: Reset shell
[11:19] Node-Bot: Node interactive shell ended (1,null)
[11:19] Kingdutch: Blergh
[11:25] Node-Bot has joined the channel
[11:25] Kingdutch: !start
[11:25] Node-Bot: Node interactive shell started
[11:25] Kingdutch: !reset
[11:27] Bob_ has joined the channel
[11:28] Bob_: Can anyone compile the latest node.js git repo for cygwin?
[11:28] Bob_: it errors with Build failed: libv8a. SConstruct -> libv8.a. I have the correct SHELL env var set too
[11:30] fermion has joined the channel
[11:31] Kingdutch: Ok Rixius got it all working now
[11:31] Node-Bot has joined the channel
[11:31] Rixius: awesome
[11:31] Kingdutch: an easier way to reset the shell and keep the attached users
[11:31] Kingdutch: !start
[11:31] Node-Bot: Node interactive shell started
[11:31] Rixius: !start
[11:31] Node-Bot: Added you to the users
[11:31] Rixius: process
[11:31] Node-Bot: Can't use 'Process' in commands
[11:31] skm has joined the channel
[11:32] tfcoding has joined the channel
[11:32] Rixius: console.log("Rixius is awesome")
[11:32] Node-Bot: > Rixius is awesome
[11:32] mape: console.log('\n\n\n?\n\n');
[11:32] mape: aww, booo
[11:32] Kingdutch: ! mape attach first with !start
[11:32] Rixius: !have to do !start
[11:33] mape: !start
[11:33] Node-Bot: Added you to the users
[11:33] Rixius: console.log("\n\n?\n\n")
[11:33] Node-Bot: > 
[11:33] mape: console.log('\n\n\n?\n\n');
[11:33] Node-Bot: > 
[11:33] Kingdutch: ! It's so you can just talk in here without everything being interpreted, also ! is a comment
[11:33] mape: !end
[11:33] Node-Bot: Removed you from users
[11:33] Rixius: ! only outputs the first line
[11:33] Rixius: console.dir({})
[11:33] Node-Bot: > {}
[11:33] mape: Kingdutch: perhaps send personal commands to the user rather then spamming the channel?
[11:33] Rixius: !end
[11:33] Node-Bot: Removed you from users
[11:33] Kingdutch: !end
[11:33] Node-Bot: Node interactive shell ended
[11:34] Rixius: or put him in #nodeBot
[11:34] Kingdutch: Now you can use it to show off some code though, or prototype something together
[11:35] Wizek has joined the channel
[11:36] Rixius: !start
[11:36] Rixius: you still have to start it?
[11:36] pyrotechnick has joined the channel
[11:37] Kingdutch: Jup
[11:37] Kingdutch: !start
[11:37] Node-Bot: Node interactive shell started
[11:38] Kingdutch: ! I suppose I could let anyone start it if it's not started and just end it if the last user detaches
[11:38] sangpire has joined the channel
[11:39] zorzar has joined the channel
[11:39] MattJ has joined the channel
[11:41] bluegene: "Currently the implementation does not pipeline requests." <- does that mean that i need to wait for a response event until i can issue a new request?
[11:43] sveimac has joined the channel
[11:44] daglees has joined the channel
[11:44] sveimac has joined the channel
[11:45] Kingdutch: !end
[11:45] Node-Bot: Node interactive shell ended
[11:46] erlnoob has joined the channel
[11:47] messju has joined the channel
[11:51] Jonasbn_ has joined the channel
[11:58] matjas has joined the channel
[12:04] ttpva has joined the channel
[12:05] Aaaarg has joined the channel
[12:10] mikew3c has joined the channel
[12:24] Wizek_ has joined the channel
[12:28] herbySk has joined the channel
[12:30] ttpva: hey. node.js hosting heroku-like, is there one out of beta?
[12:40] jbpros has joined the channel
[12:40] lukegalea has joined the channel
[12:43] djanowski has joined the channel
[12:46] stagas: did you see my new baby? http://fonts.stagas.com
[12:47] vineyard has joined the channel
[12:47] Thorn has joined the channel
[12:48] Kingdutch: lol interesting
[12:48] stagas: they're all fontsquirrel typekits so they're free for commercial use
[12:48] stagas: need to add a download link to fontsquirrel though
[12:50] saschagehlich_ has joined the channel
[12:51] aheckmann has joined the channel
[13:01] A83 has joined the channel
[13:02] marienz has joined the channel
[13:03] proppy has joined the channel
[13:03] ivanfi has joined the channel
[13:15] Druid_ has joined the channel
[13:17] herbySk has joined the channel
[13:21] tapwater has joined the channel
[13:23] hosh_work has joined the channel
[13:24] chrischris has joined the channel
[13:24] martinciu has joined the channel
[13:26] pagameba has joined the channel
[13:26] fairwinds has joined the channel
[13:28] skm has joined the channel
[13:29] altamic_ has joined the channel
[13:29] herbySk has joined the channel
[13:30] devdrinker has joined the channel
[13:30] everzet has joined the channel
[13:31] bradleymeck has joined the channel
[13:31] alek_br has joined the channel
[13:31] devdrinker: going crazy, a linode 10.04 ubuntu node
[13:31] zum has joined the channel
[13:31] devdrinker: cant seem to find any modules
[13:31] chrischr_ has joined the channel
[13:32] devdrinker: what the best approach to debugging this - reinstalled node and npm several times now
[13:33] pagameba: devdrinker: are you installing in /usr/local/ ?
[13:36] devdrinker: found it. its a bug. had a dependency on connect@0.5.4, npm doesnt to like when you uninstall @0.5.5 and then install @0.5.4 and then express
[13:36] devdrinker: but if you install @0.5.4 explicitly then express its okay
[13:36] devdrinker: any modules - it looks like it was failing at first one -  so presumed issue was more general
[13:38] Ezku\ has joined the channel
[13:40] pagameba: good catch
[13:41] charlenopires has joined the channel
[13:43] tfcoding has joined the channel
[13:44] WarriorSl has joined the channel
[13:46] krizsa has joined the channel
[13:46] maru_cc_ has joined the channel
[13:47] maru_cc_ has joined the channel
[13:51] vineyard has joined the channel
[13:58] tfcoding has joined the channel
[14:03] perlmonkey2 has joined the channel
[14:04] fumanchu182 has joined the channel
[14:04] everzet has joined the channel
[14:12] nsswb has joined the channel
[14:12] Gruni has joined the channel
[14:14] Node-Bot has joined the channel
[14:14] mscdex: !start
[14:14] Kingdutch: !start
[14:14] Node-Bot: Node interactive shell started
[14:15] mscdex: :-D
[14:15] Kingdutch: var events = new require('events').EventEmitter;
[14:15] Kingdutch: events.on('test', console.log);
[14:15] Node-Bot: > TypeError: Object function EventEmitter() { [native code] } has no method 'on'
[14:16] Kingdutch: var event = require('events');
[14:16] Kingdutch: var newEvent = new event.EventEmitter;
[14:16] Kingdutch: newEvent.on( 'test', console.log);
[14:16] Node-Bot: > { _events: { test: [Function] } }
[14:16] Kingdutch: newEvent.emit('on', 'Test');
[14:16] Node-Bot: > false
[14:16] Kingdutch: ! How does this not work?
[14:17] Kingdutch: newEvent.emite('test', 'data');
[14:17] Node-Bot: > TypeError: Object [object EventEmitter] has no method 'emite'
[14:17] Kingdutch: newEvent.emit('test', 'data');
[14:17] Node-Bot: > data
[14:17] Node-Bot: > true
[14:18] Kingdutch: ! OH right, so it does work ok, good to know
[14:18] Kingdutch: !end
[14:18] Node-Bot: Node interactive shell ended
[14:18] Kingdutch: Also mscdex I need to master start it before you can attach yourself ;)
[14:20] herbySk has joined the channel
[14:20] arpegius has left the channel
[14:21] pagameba: holy geekiness!
[14:21] pagameba: ... and that's why I love hanging out here!
[14:22] Aikar: wouldnt it make sense to make it only parse lines starting with a special character and not expect everyone else to prefix their message wit ha ! lol?
[14:23] Kingdutch: Aikar, that's why there's the !start and !end
[14:23] Kingdutch: It allows me to start or stop the node interpreter
[14:23] Kingdutch: And anyone else to hop on or off as they please once it's started
[14:23] rfranknj has joined the channel
[14:23] Aikar: i know but what if you do start then i type process.exit(); is really cool
[14:23] Kingdutch: !start
[14:23] Node-Bot: Node interactive shell started
[14:23] Kingdutch: process.exit();
[14:23] Node-Bot: Node interactive shell ended (0,null)
[14:23] Aikar: you should make it be ! process.exit()
[14:23] Kingdutch: !start
[14:24] Node-Bot: Node interactive shell started
[14:24] Aikar: only eval lines prefixed with !
[14:24] Kingdutch: ! You try it
[14:24] Aikar: process.exit();
[14:24] Aikar: oh so its you only
[14:24] Kingdutch: ! Type !start first so it listens to you
[14:24] Aikar: makes more sense for eval to be the special case and standard talking to be ignored lol
[14:25] Kingdutch: ! Aikar type !start
[14:25] Aikar: !start
[14:25] Node-Bot: Added you to the users
[14:25] Aikar: yo
[14:25] Node-Bot: > ReferenceError: yo is not defined
[14:25] Aikar: see
[14:25] Node-Bot: > ReferenceError: see is not defined
[14:25] Kingdutch: !end
[14:25] Node-Bot: Node interactive shell ended
[14:25] Aikar: it shouldnt be blowing up from me talking lol
[14:25] Kingdutch: Well yeh, it's just expecting that once you !start, you want to use the shell
[14:25] prettyrobots has joined the channel
[14:25] Kingdutch: If you don't, just type !end
[14:26] Kingdutch: Or don't type !start to begin with
[14:28] trotter has joined the channel
[14:30] weepy has joined the channel
[14:30] weepy: hi - I've starting seeing code like   :    require("./lib/a.js")
[14:30] weepy: can someone tell me what the ".js" is for ?
[14:30] Kingdutch: .js = .javascript
[14:30] Kingdutch: Which is the filetype
[14:31] fangel: yeah, but require doesn't need you to add in the extension, so.. :)
[14:31] Kingdutch: It's just saying there's a file under the current working directory (.) in the folder lib, that's called a and of type javascript
[14:31] Kingdutch: fangel: Not for native libs, if you want to require a certain specific file you can do it this way
[14:32] Kingdutch: iirc
[14:32] weepy: erm
[14:32] weepy: still don't get it
[14:32] rsms has joined the channel
[14:32] weepy: the old node used to barf if you added an extension
[14:33] weepy: does it mean anything ?
[14:33] Kingdutch: Nope, just part of the filename
[14:33] weepy: so why did they add it in ?
[14:33] weepy: seems pointless
[14:34] Kingdutch: You have the native modules, which are in a standard path and have a standard format
[14:34] Kingdutch: So the .js is unneeded
[14:34] sivy has joined the channel
[14:34] Kingdutch: You have non-native modules which also adhere to a specified format and thus you can omit the path and do i.e. require('somemodule');
[14:35] weepy: "native" 
[14:35] Kingdutch: However, if I have a lot of function declarations that I would want to spread among files I wouldn't want to have to make a module out of them
[14:35] weepy: what does that mean ? 
[14:35] Kingdutch: so I can just do require('./myfunctionfile.js'); which is the filename (myfunctionfile) and the file extension (.js) which specifies what the data is that it holds
[14:35] Kingdutch: "Native" as in bundled with node
[14:36] JusticeFries has joined the channel
[14:36] femtoo has joined the channel
[14:37] Node-Bot has joined the channel
[14:40] tjholowaychuk has joined the channel
[14:42] weepy: hmm
[14:42] weepy: you could do  require('./myfunctionfile'); anyway
[14:42] weepy: require only load JS anyway
[14:43] Kingdutch: You could
[14:43] Kingdutch: But then if you just see myfunctionfile floating around
[14:43] Kingdutch: how are you going to know that it's a javascript file?
[14:43] cferris has joined the channel
[14:43] Kingdutch: You could open it, but that costs time, especially if you have 10 files of different types
[14:43] weepy: what else would it be ?
[14:43] xavier08 has joined the channel
[14:43] Kingdutch: Hence the file-extension
[14:43] weepy: what other file types can require load ?
[14:43] Kingdutch: A shell file, a text file, a perl file, a python file
[14:44] xavier08: What content header do you use for downloadable files?
[14:44] Kingdutch: The file extension is not for the require() function
[14:44] Kingdutch: It's for the OS, and for other users when browsing files through a file browser
[14:45] russ_nyc has joined the channel
[14:45] khug has joined the channel
[14:45] weepy: gosh i know that
[14:45] weepy: ive been coding for 10 years
[14:45] weepy: i know what a file extension is :)
[14:46] Kingdutch: So you're wondering why we have to specify .js and require will not just fill it in for us
[14:46] mscdex: v8: console.log('lol')
[14:46] v8bot: mscdex: CONSOLE: ["lol"], OUTPUT: undefined
[14:46] Kingdutch: ?
[14:46] Kingdutch: v8bot: process.exit();
[14:46] v8bot: Kingdutch: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[14:46] Kingdutch: v8bot: process.exit();
[14:46] v8bot: Kingdutch: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[14:47] Kingdutch: Screw auto-completion >.>
[14:47] Kingdutch: v8\: process.exit();
[14:47] nook has joined the channel
[14:47] Kingdutch:  v8: process.exit();
[14:47] mscdex: heh
[14:47] Kingdutch: v8: process.exit();
[14:47] v8bot: Kingdutch: ReferenceError: process is not defined
[14:47] Kingdutch: How is it not >.>
[14:47] AAA_awright has joined the channel
[14:47] mscdex: it's v8, not node
[14:48] mscdex: with a couple exceptions
[14:48] Kingdutch: Oh console is part of v8?
[14:48] cgutierrez has joined the channel
[14:48] weepy: require does fill it in
[14:48] Kingdutch: brb
[14:48] weepy: here is some code that works :
[14:48] weepy: User = require("../models/user")
[14:48] weepy: refers to a file called user.js
[14:51] Kingdutch: weepy: Ah ok
[14:52] Kingdutch: Well you might still wanna put it in there, maybe you give it another extension? .javascript i.e.
[14:52] Kingdutch: or .project
[14:52] Kingdutch: So ya
[14:53] Kingdutch: Btw mscdex Did you make v8bot?
[14:53] Kingdutch: `v commands
[14:53] v8bot: Kingdutch: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[14:54] Kingdutch: `v google
[14:54] v8bot: Kingdutch: No search results found.
[14:54] Kingdutch: `v help re
[14:54] v8bot: Kingdutch: No manual page for this command.
[14:54] Kingdutch: `v help `re
[14:54] v8bot: Kingdutch: `re Command: The "`re" command evaluates regular expressions. Usage: `re text /regex/flags
[14:54] Kingdutch: `v help `ref
[14:54] v8bot: Kingdutch: `ref Command: Uses Google search on authority websites to return a link for a specific topic. For example, the Javascript 					reference will provide only results from MDC.  The RegExp reference will only provide results from regular-expressions.info
[14:54] v8bot: Kingdutch: Currently supported references: js, jquery, regex, perl, php, java, mdc, w3c, html, css, dom, wiki, msdn
[14:54] v8bot: Kingdutch: Usage: `ref <language> <search>
[14:54] v8bot: Kingdutch: Example: `ref js array *or* `ref regex groups
[14:54] Kingdutch: Woa shush
[14:55] sth: anyone used socket.io in here?
[14:55] sth: I'm having issues connecting
[14:55] sth: to a server I've created.
[14:58] Kingdutch: sth what's the problem?
[14:58] Kingdutch: !start
[14:58] Node-Bot: Node interactive shell started
[14:58] Kingdutch: !ned
[14:58] Kingdutch: !end
[14:58] Node-Bot: Node interactive shell ended
[14:58] Remoun has joined the channel
[14:59] perlmonkey2: In the Express framework is app.set('env', 'production'); the same as setting the NODE_ENV env variable to 'production'?
[14:59] Kingdutch: sth: did you port forward corectly?
[15:00] ttpva: is there a Devise-like for node.js?
[15:00] tjholowaychuk: perlmonkey2: depends when you set
[15:00] tjholowaychuk: perlmonkey2: this.set('env', process.env.NODE_ENV || 'development'); is within the Server() constructor
[15:01] xSmurf: what's the easiest way to use a file as a json store, without using some nosql engine?
[15:01] xSmurf: obviously I can't just keep appending to the file as the json is already formed
[15:02] ron_frown has joined the channel
[15:02] perlmonkey2: tjholowaychuk: if that is in the constructor I don't see that I can possibly call app.set('env') and it make a difference.  Any object I call set on is already going to be initialized with 'dev', right?
[15:03] riven: xSmurf: read file, json.parse, append, json.stringify, write file?
[15:03] tjholowaychuk: perlmonkey2: yeah but that will override it, the configure() blocks are not called until you listen() or listenFD()
[15:03] tjholowaychuk: perlmonkey2: so it should work, although I would recommend just running tests etc with $ NODE_ENV=test node test.js
[15:03] tjholowaychuk: etc
[15:03] tjholowaychuk: but yeah give that a go
[15:04] xSmurf: riven: I meant append to the file, if it ever gets very large writing the whole file might be quite long
[15:04] perlmonkey2: tjholowaychuk: If you recommend it, I'll do it that way. But why is that better?  More obvious when I'm making a mistake?
[15:05] perlmonkey2: Always seeing exactly which environment I'm in?
[15:05] sth: Kingdutch: Using the native WebSockets object in a browser doesn't seem to connect to the node instance
[15:05] tjholowaychuk: perlmonkey2: the whole point of the env stuff is not to hard-code it, but for tests it would be fine, I use NODE_ENV though
[15:05] Kingdutch: sth: You got a router/firewall blocking the port?
[15:05] Kingdutch: Can you connect using telnet from localhost?
[15:06] Kingdutch: Can you connect using telnet from another machine?
[15:06] Kingdutch: Does your browser support WebSockets?
[15:07] c0nundrum has joined the channel
[15:08] shaver: wait, how does NODE_ENV work?
[15:08] jacobolus has joined the channel
[15:08] tjholowaychuk: shaver: with express it just toggles which configure() callbacks are invoked
[15:08] shaver: ah
[15:08] shaver: I thought it was maybe like a virtualenv for node
[15:09] tjholowaychuk: ohh nope
[15:09] tjholowaychuk: it used to be EXPRESS_ENV
[15:09] tjholowaychuk: but I wanted to generalize it
[15:09] tjholowaychuk: for connect etc
[15:10] prettyrobots has joined the channel
[15:10] sth: Kingdutch: it's local and no
[15:10] Kingdutch: No tow which of the four questions? All of them?
[15:11] AAA_awright_ has joined the channel
[15:11] Kingdutch: Then your server might be doing something wrong when trying to listen
[15:11] Kingdutch: Can only guess without any code though
[15:11] backthatzachup has joined the channel
[15:11] bzinger has joined the channel
[15:11] bradleymeck has joined the channel
[15:11] sth: Kingdutch: https://gist.github.com/782948
[15:12] luke` has joined the channel
[15:12] sth: the browser.js is being performed in the browser console
[15:12] nefD has joined the channel
[15:13] bzinger has joined the channel
[15:13] Kingdutch: sth, can you go to http://localhost:8080/
[15:13] herbySk has joined the channel
[15:13] Kingdutch: ?
[15:13] akahn has joined the channel
[15:13] yhahn has joined the channel
[15:13] Kingdutch: See if your node logs 'connected!'
[15:13] sth: only if I visit it with a browser
[15:13] sth: The websockets attempt doesn't produce anything
[15:14] Kingdutch: Wait, you're running from your console?
[15:14] Kingdutch: why not just as a browser script?
[15:14] xSmurf: I think I'm gonna end up using memcachedb...
[15:14] sth: It doesn't matter at this point.
[15:14] Kingdutch: It might
[15:14] Kingdutch: Anyway what's with
[15:14] Kingdutch: ws://localhost:8080?
[15:15] jtrally has left the channel
[15:15] Kingdutch: Why not http://localhost:8080
[15:15] sth: ...do you know anything about websockets?
[15:15] Kingdutch: You got a http server listening on 8080
[15:15] Kingdutch: Nope
[15:15] sth: Sure, but the websocket protocol uses ws://
[15:16] sth: Does anyone in here use socket.io with websockets?
[15:16] Kingdutch: Just humor me and try
[15:16] mikew3c_ has joined the channel
[15:16] Kingdutch: new WebSocket('http://localhost:8080/');
[15:17] clarkfischer has joined the channel
[15:17] sth: ...it errors.
[15:17] sth: I don't have to try.
[15:17] Kingdutch: Fine
[15:17] figital has joined the channel
[15:17] sth: WebSockets uses ws:// as defined in the spec.
[15:18] adambeynon has joined the channel
[15:18] Kingdutch: add a ws.onerror = function(evt) { console.log(evt); }
[15:19] fairwinds: devdrinker, pagamedba: were you guys talking about issue with connect 0.5.5? I discovered that session just needed secret to be set
[15:19] fairwinds: an it works just fine
[15:19] fairwinds: s /an and
[15:20] hunterloftis has joined the channel
[15:20] tjholowaychuk: fairwinds: yeah the secret is required now
[15:20] tjholowaychuk: "hackme" is no longer the default haha :)
[15:20] sth: onerror doesn't take any params
[15:20] jbergstroem:     
[15:21] softdrink has joined the channel
[15:21] piscisaureus has joined the channel
[15:21] MonetizedCulture: .
[15:22] MonetizedCulture: .msg nickserv identify KeyboardWarrior freenode1520
[15:22] MonetizedCulture: FUCK
[15:22] riven: Good job.
[15:22] MonetizedCulture: damn ipad keyboard
[15:23] x_or has joined the channel
[15:23] riven: Strong passwords ftw.
[15:23] mAritz: MonetizedCulture: don't worry, irc is smart and just writes ***********
[15:23] wasabist` has joined the channel
[15:23] mAritz: see: /msg nickserv maritz identify hunter2
[15:23] fairwinds: devdrinker, pagameba, tjholowaychuk: just doing app.use(express.session({'secret':'put your secret here'})); and is fine
[15:23] nook has joined the channel
[15:23] Kingdutch: sth: How does onerror not.. meh Iduno
[15:23] x_or: I am getting this error with node v0.3.3, not seeing it when I switch to v0.2.6.  Any idea whether there is a simple fix to errors like this:  "E: { message: [Getter/Setter], stack: [Getter/Setter], type: 'unexpected_token', arguments: [ 'ILLEGAL' ] }"
[15:23] tjholowaychuk: fairwinds: yup
[15:23] robotarmy has joined the channel
[15:23] MonetizedCulture: ACTION hopes node.jsers are cool enough not to mess with him
[15:24] blueadept has joined the channel
[15:24] fairwinds: anyone have any opinion about using mootools in node?
[15:24] mAritz: MonetizedCulture: change it anyways. this chat is logged and the logs are publicly available to chinese bots.
[15:24] Kingdutch: MonetizedCulture: Change your pass, and learn the lesson of not typing that in a channel but in the status window
[15:24] fairwinds: was thinking of using classes
[15:24] MonetizedCulture: Kingdutch: wtf
[15:25] fairwinds: but will take care no to put mootools in global scope
[15:25] Kingdutch: I'll go hide in a cave and be ashamed of myself now
[15:25] mAritz: uhm... what?
[15:25] trotter has joined the channel
[15:25] Kingdutch: -NickServ- You are now identified for KeyboardWarrior. -NickServ- MonetizedCulture has been ghosted.
[15:25] MonetizedCulture has joined the channel
[15:25] Kingdutch: Sorry man, I'll hide in a cave and be ashamed of my behaviour :$
[15:25] riven: haha
[15:25] MonetizedCulture: Kingdutch: Okay you proved your point
[15:26] Kingdutch: Was just tooo tempting
[15:26] MonetizedCulture: ACTION hopes Kingdutch is some bored teenager
[15:26] Kingdutch: I already moved back to my own account, d/w
[15:26] sth: As it stands, with my super simple example of socket.io, I can't connect to the server with the browser's native WebSocket object, everytime I do, I get an immediate disconnect. 
[15:26] MonetizedCulture: okay thnx
[15:26] Kingdutch: I've been home from school since 9:30, so yeah
[15:27] Kingdutch: sth: Try net.createServer instead of the http server?
[15:27] jtrally has joined the channel
[15:29] akahn has left the channel
[15:29] sth: ...
[15:29] nonnikcam has joined the channel
[15:30] ceej has joined the channel
[15:30] fairwinds: tjholowaychuk: express is very nice. I am extending the mvc example out for my work, put in an inflection lib last night and extending for models.
[15:31] tjholowaychuk: fairwinds: awesome :)
[15:32] fairwinds: tjholowaychuk: I like working with classes with models. What do you think? I playing with mootools this morning but also have a class lib to work with if I think that is too much
[15:33] tjholowaychuk: nothing wrong with that, whatever works for you
[15:33] MonetizedCulture: Okay genius, what did you set my password to?
[15:34] tjholowaychuk: x/clear
[15:34] tjholowaychuk: baha
[15:34] tjholowaychuk: pulled a MonetizedCulture
[15:34] nilcolor has joined the channel
[15:35] sth: Kingdutch: I can't help but think you've never used websockets or socket.io...
[15:35] MonetizedCulture: sth: I'm about to try websockets with node.js today. :)
[15:35] nilcolor: Hello!
[15:35] Aikar: sth: are you using socket.io websocket server or your own implementation?
[15:36] sth: I'm using socket.io-node to create server, but using the native websocket object to connect
[15:36] sth: (or at least attempting to)
[15:36] Kingdutch: sth: True I haven't, but I've used node, and I'm trying to suggest things to see if the problem is with node not acceepting the connection
[15:36] Kingdutch: But I'll stop bothering
[15:36] Aikar: can you paste some of your code? create an http server, then do var socket = io.listen(httpServer); then socket.on('connect', function(client) {}); should work
[15:37] MonetizedCulture: sth: Are you sending the "Upgrade: WebSocket\r\n" header from websocket?
[15:37] xSmurf: works for me
[15:37] Aikar: Kingdutch: its accepting the connection but it does stuff to process the request
[15:37] Aikar: ie handling HTTP Upgrade, handshake, etc
[15:37] Aikar: its probally failing handshake
[15:37] sth: Aikar: https://gist.github.com/782948
[15:37] Aikar: sth: you're not using chrome 4 are you?
[15:37] sth: NO
[15:37] sth: -caps
[15:37] sth: Safari 5.
[15:37] fairwinds: tjholowaychuk: k, thanks. The other thing I am looking to do is create a simple access control list lookup that could be applied to views so it can review permissions. Then users just assigned roles that imply certain permissions
[15:38] Aikar: sth: check to make sure that uses websocket draft 76 and not 75
[15:38] sth: I have websockets working with another node.js npm, ncr's ws.js
[15:38] sth: Aikar: It will using draft 76
[15:38] Aikar: sth: also, its 'connect' not 'connection'
[15:38] sth: it will be*
[15:38] Aikar: for the socket.on('connect'
[15:38] charlenopires has joined the channel
[15:38] alek_br has joined the channel
[15:38] tjholowaychuk: fairwinds: yeah that is what I do. user m-m roles m-m perms
[15:38] fairwinds: tjholowaychuck: unless you know of something similar that could help at this point
[15:39] Aikar: sth: line 17 change the event name to be connect and see if it works
[15:39] sth: mm, I copied it from the docs as well
[15:39] dgathright has joined the channel
[15:39] Aikar: http://socket.io/
[15:39] fairwinds: tjholowaychuck: k, cool
[15:39] Aikar: the very first example on page shows 'connect'
[15:39] sth: I still get a onclose event immediately after
[15:39] cgutierrez_ has joined the channel
[15:40] Aikar: wait thats client
[15:40] Aikar: you're right
[15:40] sth: https://github.com/LearnBoost/Socket.IO-node/blob/master/example/server.js
[15:40] boaz has joined the channel
[15:40] Aikar: inconsistency ftl :|
[15:42] everzet has joined the channel
[15:43] sudoer has joined the channel
[15:43] daniellindsley has joined the channel
[15:45] sth: so, anyway. This still doesn't work :x
[15:46] khug has joined the channel
[15:46] sth: The docs are less than useless when you're not using socket.io client libs
[15:46] sth: Which I can't use
[15:46] mnbvasd has joined the channel
[15:47] gf3` has joined the channel
[15:49] paulrobinson has joined the channel
[15:49] nsswb has joined the channel
[15:50] Qbix1 has joined the channel
[15:51] Throlkim has joined the channel
[15:51] mscdex: Kingdutch: no, v8bot is not mine
[15:53] ashleydev has joined the channel
[15:54] mscdex: `v about
[15:54] v8bot: mscdex: v8bot is an IRC bot written entirely in Javascript using Google's v8 Javascript engine and Node.js.  Credits: eisd, Tim_Smart, gf3, MizardX, inimino.  Join us at #v8bot !
[15:56] nsswb has joined the channel
[15:56] bingomanatee has joined the channel
[15:57] Aikar: sth: why cant you use it?
[15:57] jamund has joined the channel
[16:02] TheEmpath has joined the channel
[16:03] jashkenas has joined the channel
[16:05] sonnym has joined the channel
[16:07] eee_c has joined the channel
[16:09] Apple has joined the channel
[16:10] KyleXY has joined the channel
[16:12] jherdman has joined the channel
[16:12] JusticeFries has joined the channel
[16:12] ph^ has joined the channel
[16:13] blueadept has joined the channel
[16:13] edw has joined the channel
[16:14] claudiu__ has joined the channel
[16:14] briznad has joined the channel
[16:15] A83 has joined the channel
[16:16] kjeldahl has joined the channel
[16:16] edw: fs.readFile() doesn't seem to close files; I'm trying to read a couple thousand files and I get a "too many open files" error.
[16:16] edw: Is this a known bug in earlier (0.2.4) versions? Should I be running on the bleeding edge (0.3.5)?
[16:17] rsms has joined the channel
[16:17] Kingdutch: edu: It's an OS limitation
[16:17] Kingdutch: There's a way you can change it, google the error (has to do with ulimit or something)
[16:17] josephhitchens has joined the channel
[16:18] jetienne has joined the channel
[16:18] jchris has joined the channel
[16:18] edw: Actually, I think it's a bug in node; fs.readFile() should close the file descriptor after reading the data and before calling my callback.
[16:20] everzet has joined the channel
[16:20] Kingdutch: It's probably a bug in your code
[16:20] Kingdutch: Because fs.readFile will close when it's done
[16:20] Kingdutch: But if you do
[16:21] Kingdutch: for(i=0;i<filesToRead.length;i++) fs.readFile(filesToRead[i]); 
[16:21] Kingdutch: You'll read all the files at the same time
[16:21] edw: On second thought, the problem's more subtle: I'm calling fs.readFile() 2K+ times ...
[16:21] edw: Right.
[16:21] Kingdutch: As I said :')
[16:21] Kingdutch: That's non blocking IO for you
[16:21] Kingdutch: Could do something like
[16:21] dnolen has joined the channel
[16:22] Kingdutch: for (i=0;i<500;i++) (500 is a save number, not sure on specifics)
[16:22] Kingdutch: And in the callback just read the next file
[16:22] edw: Asynchronicity isn't important in this case; I can do a sync read.
[16:22] Kingdutch: Eew :O why'd you want that
[16:22] Kingdutch: It slows stuff down by factor 500
[16:22] edw: This program's going to run once.
[16:23] edw: Evar.
[16:23] edw: But in the name of correctness, I feel compelled to follow your advice.
[16:24] Kingdutch: http://pastebin.com/287pmtSq
[16:24] tjholowaychuk: m
[16:24] Kingdutch: That's untested
[16:24] Kingdutch: but should work
[16:25] Kingdutch: Applying something I picked up like half an hour ago (The arguments.callee :'))
[16:25] sudoer has joined the channel
[16:26] edw: Thanks.
[16:27] x_or has joined the channel
[16:28] Kingdutch: np
[16:30] gartenstuhl has joined the channel
[16:30] tanepiper: i read somewhere arguments.callee is being dropped in ES5
[16:30] Kingdutch: :O
[16:31] Kingdutch: Hmm edw I guess better practice is just to give the function a name and use that instead
[16:32] tanepiper: seems it might be in "use strict"; only
[16:32] tanepiper: http://whereswalden.com/2010/09/08/new-es5-strict-mode-support-now-with-poison-pills/
[16:32] Kingdutch: so fs.readFile(file, function name(x) { /* parse */ fs.readFile(name(files[counter++], name); });
[16:32] Kingdutch: tanepiper: It's unneeded according to stackoverflow, hence being dropped
[16:32] Kingdutch: http://stackoverflow.com/questions/103598/why-was-the-arguments-callee-caller-property-deprecated-in-javascript
[16:33] tanepiper: yea, i've never used it myself afaik
[16:33] bingomanatee: Kingdutch: what are you trying to do, parse all files in a series of paths?
[16:34] Kingdutch: bingomanatee: that line is called in a for loop 500 times, so it limits your open files to 500 which avoids having too many open files and crashing
[16:34] bingomanatee: ah. 
[16:34] bingomanatee: I'd use an event emitter myself. 
[16:35] khug has joined the channel
[16:35] Kingdutch: It already emits events
[16:35] Kingdutch: Why add another one =/
[16:35] bingomanatee: Because you can use it to throttle your opens. 
[16:35] Kingdutch: This wont open more than 500 either
[16:35] Kingdutch: Or however many you launch
[16:36] Kingdutch: Although I see how you might be able to throttle them during execution
[16:36] Kingdutch: But still, just extra overhead
[16:36] Kingdutch: and not needed in this case
[16:36] noahcampbell has joined the channel
[16:38] sivy has joined the channel
[16:38] confoocious has joined the channel
[16:39] dnyy has joined the channel
[16:41] shinmei has joined the channel
[16:42] matt_c has joined the channel
[16:44] bingomanatee: Kingdutch: this is what I mean by using events: http://pastebin.com/4HXHqYEQ
[16:44] siculars has joined the channel
[16:44] bradleymeck: tanepiper, yes use the function name, save my stack traces
[16:45] Kingdutch: more like edw use function names :')
[16:46] Kingdutch: bradleymeck: Your code will never open more than 1 file
[16:46] tfcoding has joined the channel
[16:46] Kingdutch: readFileSync, really? O.o
[16:46] bingomanatee: Yeah I could do the example without it - but I wanted a more terse example. 
[16:46] bradleymeck: kingdutch what code?
[16:47] Kingdutch: ugh
[16:47] bingomanatee: If I were to deploy this I would of course just unsynchronise. 
[16:47] Kingdutch: confusing names is confusing
[16:47] garrensmith has joined the channel
[16:47] enotodden has joined the channel
[16:47] bradleymeck: sync ops are fine for setup and teardown i think
[16:47] Kingdutch: http://pastebin.com/hkFPNS8s
[16:47] Kingdutch: Try that
[16:47] Kingdutch: Yeh they are
[16:48] Kingdutch: But the whole point of the events was to do it asynch
[16:48] Kingdutch: If you do it synch like you did, you might as well just use a for loop
[16:48] Kingdutch: instead of unneeded events which will always open 1 file at a time anyway
[16:48] djanowski has joined the channel
[16:48] Kingdutch: Or read 1 file at a time anyway
[16:48] garrensmith: anyone get an error has no method 'response' when testing express apps with expresso?
[16:49] muk_mb has joined the channel
[16:49] rauchg_ has joined the channel
[16:50] tjholowaychuk: garrensmith: did you require('assert') ?
[16:50] perezd has joined the channel
[16:50] garrensmith: tjholowaychuk: I'm using the default test in the express test dir, the server works and serves pages but when I run the test I get that error. Very weird
[16:51] tjholowaychuk: hmm
[16:51] garrensmith: I'm not requiring assert, is it not passed through on the function?
[16:51] hij1nx has joined the channel
[16:51] tjholowaychuk: not anymore
[16:51] garrensmith: ok, let me try again.
[16:52] garrensmith: ok it pretty much worked. 
[16:52] fille12 has joined the channel
[16:52] MattJ has joined the channel
[16:52] garrensmith: tjholowaychuk it jst never ends the test, my guest is the server is never getting shut down?
[16:53] tjholowaychuk: garrensmith: the generated tests work for me
[16:53] tjholowaychuk: with $ expresso
[16:53] tjholowaychuk: if you have db connects etc you need to close them
[16:54] cgutierrez has joined the channel
[16:56] garrensmith: weird, no db connections but just not finishing the tests... Thanks for the help. I'll look into it further. 
[16:56] w0rse has joined the channel
[17:00] ph^_ has joined the channel
[17:00] rsms_ has joined the channel
[17:00] x_or has joined the channel
[17:01] bingomanatee: Kingdutch: you're right. I could blow out that part of the code with a readFile() on end block - I just didn't want to. 
[17:02] kiranryali has joined the channel
[17:03] yorick: is it possible to set execution scope for new Function('/*code*/') ?
[17:05] bingomanatee: for the purposes of illustrating the structure of what I was talking about I made a shortuct but if you insist.... http://pastebin.com/D9bU83yc
[17:05] Kingdutch: Fuck, I locked my browser with while(true)
[17:06] noahcampbell has joined the channel
[17:06] miccolis has joined the channel
[17:06] yorick: Kingdutch: oh lol
[17:06] bingomanatee: Blessed be the onInterval
[17:06] yorick: aww you got out
[17:07] bingomanatee: while(true){ study_programming(); }
[17:07] Kingdutch: How you mean I got out?
[17:07] Kingdutch: Oh btw yorick
[17:07] Kingdutch: !start
[17:07] Node-Bot: Node interactive shell started
[17:08] Wizek has joined the channel
[17:08] dgao has joined the channel
[17:09] yorick: Kingdutch: you did not?
[17:09] booo has joined the channel
[17:09] mikeal has joined the channel
[17:09] Fullmoon has joined the channel
[17:09] d0k has joined the channel
[17:09] Kingdutch: ! Yeh I did, but you couldn't know that, moz ended my non running script, my browser != my web client, also type !start for me, you were one of the people who wanted to play around with it right?
[17:10] hdon has joined the channel
[17:10] Apple: Kingdutch while (true) { alert('pwnage'); } is even better
[17:10] eee_c has joined the channel
[17:10] norviller has joined the channel
[17:10] Apple: At least for Firefox victims ;p
[17:10] Kingdutch: Will die out eventually
[17:10] Node-Bot: > ... 
[17:10] yorick: !start
[17:10] Node-Bot: Added you to the users
[17:10] Kingdutch: !restart
[17:10] Node-Bot: Reset shell
[17:10] yorick: !start
[17:10] Node-Bot: Added you to the users
[17:11] yorick: require('child_process')
[17:11] Node-Bot: Can't use 'Process' in commands
[17:11] yorick: :(
[17:11] Node-Bot: > ... 
[17:11] Kingdutch: !restart
[17:11] Node-Bot: Reset shell
[17:11] yorick: !restart
[17:11] yorick: !start
[17:11] Node-Bot: Added you to the users
[17:11] Apple: console.log("wtf");
[17:11] Kingdutch: ! You can use ! to jsut talk without it interpreting, and if I !restart you'll still be subscribed ;)
[17:11] Kingdutch: ! Apple, !start first
[17:11] Apple: < console.log("wtf");
[17:11] yorick: console.log("v8> print(\"!start\"))
[17:11] Node-Bot: > ... 
[17:11] Apple: > console.log("wtf");
[17:12] yorick: console.log("v8> print(\"!start\")")
[17:12] Node-Bot: > ... 
[17:12] yorick: !restart
[17:12] Kingdutch: !restart
[17:12] Node-Bot: Reset shell
[17:12] yorick: !start
[17:12] Node-Bot: Added you to the users
[17:12] yorick: console.log("v8> print(\"!start\")")
[17:12] Node-Bot: > v8> print("!start")
[17:12] yorick: console.log("\nv8> print(\"!start\")")
[17:12] Node-Bot: > 
[17:12] yorick: ! aww
[17:12] Kingdutch: !end
[17:12] Node-Bot: Node interactive shell ended
[17:12] Kingdutch: !start
[17:12] Node-Bot: Node interactive shell started
[17:12] Kingdutch: ! You're in the user list 5 times lol
[17:12] Kingdutch: ! Now you're out though :X
[17:12] yorick: while(true) console.log("\nv8> print(\"!start\")")
[17:12] yorick: !start
[17:12] Node-Bot: Added you to the users
[17:12] yorick: while(true) ;
[17:13] yorick: :)
[17:13] Kingdutch: console.log('Hmm meany');
[17:13] Kingdutch: !end
[17:13] Node-Bot: Node interactive shell ended
[17:13] Kingdutch: !start
[17:13] Node-Bot: Node interactive shell started
[17:13] Kingdutch: console.log('fixed :O');
[17:13] Node-Bot: > fixed :O
[17:13] yorick: require('sys')
[17:13] yyamano has joined the channel
[17:13] Kingdutch: console.log(':)');
[17:13] Node-Bot: > :)
[17:13] yorick: !start
[17:13] Node-Bot: Added you to the users
[17:13] creationix has joined the channel
[17:13] yorick: require('sys')
[17:13] Node-Bot: > 2
[17:13] yorick: require('sys').kill(1)
[17:13] Node-Bot: > TypeError: Object [object Object] has no method 'kill'
[17:14] yorick: require('process')
[17:14] Node-Bot: Can't use 'Process' in commands
[17:14] fairwinds: tholowaychuck: one thing I have been looking for is a bit of a template for a directory structure for an express project. Am coming to node from python, am looking for a good project structure that will keep me in good stead.
[17:14] yorick: setInterval(console.log, 10, "lol")
[17:14] Node-Bot: > { repeat: 0, callback: [Function] }
[17:14] Node-Bot: > lol
[17:14] Node-Bot: > lol
[17:14] Node-Bot: > lol
[17:14] Node-Bot: > lol
[17:14] yorick: :-)
[17:15] wink_: thank god
[17:15] wink_: :p
[17:16] yorick: ACTION rofl
[17:16] Kingdutch: Yeh that's kinda mean
[17:16] aheckmann_ has joined the channel
[17:16] wink_: you're never going to sandbox that thing well enough and its just going to spam the shit out of us <3
[17:16] fairwinds: tjholowaychuk: ^^^^^^ perhaps something that also provides a directory to develop a lib along with a project also
[17:17] yorick: putting the interval at 2000 would actually not make it quit
[17:17] creationix: fairwinds: the "express" executable that gets installed generates a project template
[17:17] Apple: hahahaha, Node-Bot fail
[17:17] tjholowaychuk: fairwinds: yeah express(1) does that for you
[17:18] yorick: Apple: I wonder how he's going to solve this
[17:18] Apple: yorick: You suck at writing channel flooding scripts :p
[17:18] yorick: Apple: no I don't, I just wanted to see if it would work
[17:18] fairwinds: creatonix, tjholowaychuck: cool, did not even know existed :-)
[17:18] Apple: heheh ;)
[17:18] yorick: setInterval(console.log, 2000, "lol")
[17:19] yorick: v8> "hi"
[17:19] v8bot: yorick: "hi"
[17:19] Node-Bot has joined the channel
[17:19] yorick: !start
[17:19] yorick: setInterval(console.log, 20, "lol")
[17:19] Kingdutch: v8> setInterval(console.log, 2000, "test");
[17:19] v8bot: Kingdutch: ReferenceError: setInterval is not defined
[17:19] Apple: !start
[17:19] fille12 has joined the channel
[17:19] Kingdutch: Hmm shame
[17:19] qFox has joined the channel
[17:19] Kingdutch: !exclude yorick
[17:19] Node-Bot: Added yorick, to exclude list
[17:19] Kingdutch: !start
[17:19] Node-Bot: Node interactive shell started
[17:19] Kingdutch: console.log(':)');
[17:19] yorick: !start
[17:19] yorick: :-)
[17:19] kolbyjack has left the channel
[17:19] Kingdutch: Oh that's a typoe
[17:19] Apple: v8> setInterval(console.log, 2000, "I LOVE MADONNA")
[17:19] v8bot: Apple: ReferenceError: setInterval is not defined
[17:20] yorick: v8> setTimeout
[17:20] Apple: setInterval(console.log, 2000, "I LOVE MADONNA")
[17:20] v8bot: yorick: ReferenceError: setTimeout is not defined
[17:20] yorick: v8> while(true);
[17:20] v8bot: yorick: Error: Timeout
[17:20] yorick: see this thing works
[17:20] yorick: v8> for(var i = 0; i < 10; i++) console.log("hi")
[17:20] v8bot: yorick: CONSOLE: ["hi", "hi", "hi", "hi", "hi", "hi", "hi", "hi", "hi", "hi"], OUTPUT: undefined
[17:21] femtoo has joined the channel
[17:21] Apple: v8> console.log("\"\n rm -rf /");
[17:21] v8bot: Apple: CONSOLE: [""\n rm -rf /"], OUTPUT: undefined
[17:21] yorick: Kingdutch: you suck at bots
[17:21] Kingdutch: yorick: why?
[17:21] yorick: Kingdutch: I could have used it to flood the channel
[17:21] yorick: which is kinda sucky
[17:21] Apple: hehe :)
[17:22] yorick: v8> for(var i = 0; i < 10; i++) console.lo("hi")
[17:22] v8bot: yorick: TypeError: Object [object Object] has no method 'lo'
[17:22] hdon has joined the channel
[17:22] yorick: v8> for(var i = 0; i < 10; i++) print("hi\n")
[17:22] v8bot: yorick: CONSOLE: ["hi\n", "hi\n", "hi\n", "hi\n", "hi\n", "hi\n", "hi\n", "hi\n", "hi\n", "hi\n"], OUTPUT: undefined
[17:22] Node-Bot has joined the channel
[17:22] yorick: meh
[17:22] yorick: !start
[17:22] Kingdutch: !exclude yorick
[17:22] Node-Bot: Added yorick, to exclude list
[17:22] Kingdutch: !start
[17:22] Node-Bot: Node interactive shell started
[17:22] yorick: for(var i = 0; i < 10; i++) console.log("hi\n")
[17:22] yorick: !start
[17:22] Node-Bot: Added you to the users
[17:22] Kingdutch: console.log(':)'); //Happy now
[17:22] yorick: for(var i = 0; i < 10; i++) console.log("hi\n")
[17:22] Kingdutch: Not happy :O
[17:22] yorick: :-D
[17:23] Kingdutch: I fail at typing
[17:23] yorick: Kingdutch: you're just going to exclude everyone?
[17:24] yorick: setInterval(console.log, 2000, "Apples LOVES MADONNA")
[17:24] Kingdutch: No I'm just gonna trust people to not abuse shit or exclude em
[17:24] wink_: of course they're going to abuse it, thats all its good for
[17:24] yorick: you have trust issues
[17:24] Kingdutch: v8> for(var i=0; i<10;i--) { console.log('yorick <3'); }
[17:24] Kingdutch: Now I hung v8
[17:24] v8bot: Kingdutch: Error: Timeout
[17:24] Kingdutch: Ok maybe not, but still
[17:24] Kingdutch: That's also why _you_ can't start it, and I can
[17:25] EyePulp has joined the channel
[17:25] mape: Perhaps better moving it to a bot channel?
[17:25] Apple: mape: Bot channels are too noisy
[17:25] wink_: mape: you're such a diplomat
[17:25] wink_: :p
[17:26] yorick: v8> var a = []; a = a.push(a)
[17:26] v8bot: yorick: 1
[17:26] mape: wink_: No need to get stressed out by it, but I do prefer channels to not have tons of bot debugging in them
[17:27] Node-Bot has joined the channel
[17:27] Kingdutch: It's not really debugging though, there was just a typoe in there >.> it happens, and it doesn't get highlight untill it's hit
[17:27] Kingdutch: !exclude yorick
[17:27] Kingdutch: !start
[17:27] Kingdutch: *rolls eyes*
[17:27] yorick: lol
[17:27] wink_: haha
[17:28] creationix: there is always #nodejs
[17:28] creationix: it's pretty quite in there
[17:28] ewdafa has joined the channel
[17:28] creationix: Quiet even
[17:28] Kingdutch: Yeh if I expect it to crash/not work I take it there, been doing that all day
[17:28] yorick: var a = []; while(true) a.push.apply(a, a);
[17:28] Kingdutch: I just love JS' typelessness
[17:28] Node-Bot has joined the channel
[17:28] Kingdutch: !exclude yorick
[17:28] Node-Bot: Added yorick, to exclude list
[17:28] Kingdutch: !start
[17:28] Node-Bot: Node interactive shell started
[17:28] yorick: !start
[17:28] Node-Bot: Added you to the users
[17:29] yorick: var a = []; while(true) a.push.apply(a,a);
[17:29] yorick: someone else do it :P
[17:29] Kingdutch: !end
[17:29] Node-Bot: Node interactive shell ended
[17:29] yorick_: !start
[17:29] yorick_: aww
[17:29] Kingdutch: change your nick over a sec
[17:29] Kingdutch: k thx
[17:30] kubrow_ has joined the channel
[17:30] yorick_: Kingdutch: why?
[17:31] Kingdutch: Wanted to check something
[17:31] Kingdutch: Weird that exclude fails though
[17:31] yorick_: wanted to check what
[17:31] booo has joined the channel
[17:32] wink_: !start
[17:32] yorick: Kingdutch: change your nick over a sec
[17:33] strmpnk has joined the channel
[17:33] kingdutch_: Ah huh
[17:33] yorick: ACTION working...
[17:33] bradleymeck: http://www.wikihost.org/w/nodejs , started dumping info, posting it up here if others want to edit, might move it to a node hosted wiki later but syntax conversion wouldnt be an issue
[17:33] yorick_ has joined the channel
[17:33] kingdutch: !start
[17:33] yorick: hmm it doesn't work
[17:34] kingdutch_: lol quit?
[17:34] Kingdutch: !start
[17:34] Node-Bot: Node interactive shell started
[17:34] Kingdutch: !end
[17:34] Node-Bot: Node interactive shell ended
[17:34] Kingdutch: Yes it does
[17:34] wink_: !start
[17:34] yorick: Kingdutch: what does it verify it by?
[17:34] Kingdutch: Capital K
[17:34] yorick: OMG
[17:34] yorick: rly?
[17:34] jamescarr has joined the channel
[17:34] yorick_ has joined the channel
[17:35] yorick: :/
[17:35] Kingdutch: Really
[17:35] yorick: stupid bot
[17:35] Kingdutch: I should just move it to my hostname
[17:35] Kingdutch: but oh well
[17:35] Kingdutch: I should also rewrite the entire thing
[17:36] yorick: you should make it less easily exploitable
[17:36] Node-Bot has joined the channel
[17:36] wink_: !start
[17:36] Kingdutch: !exclude kingdutch
[17:36] Node-Bot: Added kingdutch, to exclude list
[17:36] jamescarr: anyone else besides me think all of these anti-callback discussions are silly?
[17:36] Kingdutch: !start
[17:36] Node-Bot: Node interactive shell started
[17:36] Kingdutch: !end
[17:36] Node-Bot: Node interactive shell ended
[17:36] jamescarr: sheesh. If you don't like it, go back to php :)
[17:37] wink_: jamescarr: they're as silly as most language discussions
[17:37] Kingdutch: jamescarr: Nah they're interesting
[17:37] jamescarr: wink_, I think it's more silly since node was designed to be asynchronous and leverage callbacks
[17:37] Kingdutch: yorick: How do you propose making it less explioitable? I'm not going to one line execution like v8
[17:37] Kingdutch: 1) Eval is evil
[17:37] Kingdutch: 2) It doesn't require prototyping like
[17:37] Kingdutch: var soemthing = require(something); 
[17:37] Kingdutch: something.test();
[17:37] yorick: 1#) eval is not as eval as spawning a child process and interfacing with that
[17:37] Aikar: Kingdutch: vm.createScript
[17:38] Ari-Ugwu has joined the channel
[17:38] wink_: jamescarr: sure, but these types of discussions are always charged and full of people asserting their personal opinions as how things should be, always and forever
[17:38] Kingdutch: yorick: You're right, the child process is way more fun, and is a seperate context from the bot
[17:38] wink_: its usually a big waste of time :p
[17:39] Kingdutch: Also allows you 'n me to work colaboratively
[17:39] yorick: I wonder how quickly var a=[];while(1)a.push.apply(a,a) can crash a system
[17:40] yorick: var a=[this];while(1)a.push.apply(a,a)
[17:41] Kingdutch: It makes the loadavg climb quite fast
[17:41] Kingdutch: but my sys is still running
[17:41] yorick: check your mem
[17:41] Kingdutch: how lol
[17:41] yorick: no idea
[17:42] Kingdutch: MemTotal:       963828 kB
[17:42] Kingdutch: MemFree:        780040 kB
[17:42] stagas: tjholowaychuk: ping
[17:42] yorick: Kingdutch: are you using the one with or without the initial array
[17:42] tjholowaychuk: stagas: ey
[17:42] Kingdutch: Without
[17:42] Kingdutch: Not gonna run the one with, seeing as it's not responsive to kill command =/
[17:42] dandorman has joined the channel
[17:43] bingomanatee has joined the channel
[17:43] creationix: pushing an array onto itself only adds one link per iteration
[17:43] yorick: creationix: hence the apply
[17:43] stagas: tjholowaychuk: what's up? I just pushed a package with express goodies. http://github.com/stagas/express-helpful or npm install helpful
[17:43] creationix: if you really want to chew cpu and memory do deep copies via JSON.parse and JSON.stringify
[17:43] yorick: but it can only push 131072 at a time
[17:44] sudoer has joined the channel
[17:44] bingomanatee: that would chew.
[17:44] stagas: tjholowaychuk: this sums it up: https://github.com/stagas/express-helpful/blob/master/examples/simple-server.js
[17:44] Aria has joined the channel
[17:44] tjholowaychuk: stagas: cool man, will check it out
[17:44] creationix: nah, I've got that script running on my desktop
[17:44] creationix: it's 100% cpu, but constant 6mb ram
[17:45] creationix: V8 has some really smart optimizations
[17:45] Kingdutch: RangeError: Maximum call stack size exceeded
[17:45] Kingdutch: Teeheee
[17:46] creationix: this will hit the memory limit real fast
[17:46] creationix: a = [];while(1){a.push(JSON.stringify(a))}
[17:46] A83 has joined the channel
[17:46] mraleph has joined the channel
[17:46] yorick: Kingdutch: use var a = [this]; while(1) a.push.apply(a, a.slice(0, 130631))
[17:46] creationix: or a  = '"';while(true){a = JSON.stringify(a)}
[17:46] Kingdutch: FATAL ERROR: Allocation failed - process out of memory
[17:47] Kingdutch: On creationix' code
[17:47] Kingdutch: That locked my machine up pretty fast
[17:47] yorick: raise the memory limits
[17:47] Kingdutch: No..
[17:47] creationix: the memory limit is compile time set in v8
[17:47] Kingdutch: Then I run into swap
[17:47] Kingdutch: You kill your pc
[17:47] creationix: but buffer objects are excluded from it
[17:47] creationix: I once had 16gb of buffers objects
[17:48] yorick: hmm your code is swapping after 18 iterations
[17:49] yorick: v8> JSON.stringify
[17:49] v8bot: yorick: function stringify() { [native code] }
[17:49] yorick: hrrm
[17:49] yorick: ACTION diabolically bad idea
[17:49] astoon has joined the channel
[17:49] bingomanatee: sounds like a use case for a file system.
[17:50] Kingdutch: v8> a='"'; while(true){a=JSON.stringify(a)}
[17:50] v8bot: Kingdutch: Error: Timeout
[17:50] bingomanatee: or mongodb
[17:50] Kingdutch: v8> a='"'; while(true){a=JSON.stringify(a)}
[17:50] Kingdutch: v8> a='"'; while(true){a=JSON.stringify(a)}
[17:50] Kingdutch: v8> a='"'; while(true){a=JSON.stringify(a)}
[17:50] Kingdutch: Hmmmm
[17:50] v8bot: Kingdutch: 
[17:50] v8bot: Kingdutch: 
[17:50] v8bot: Kingdutch: Error: Timeout
[17:50] balaa has joined the channel
[17:50] creationix: var s = JSON.stringify;JSON.stringify = function (b) { return JSON.stringify(s(b))}
[17:50] creationix: JSON bomb
[17:50] matjas has joined the channel
[17:51] yorick: creationix: that would just stackoverflow
[17:51] yorick: ACTION gone
[17:52] kuhrt has joined the channel
[17:52] creationix: yorick: nah, the s(b) is evaluated first in each call, it will explode memory usage long before running out of stack
[17:52] bingomanatee: no - you just need more RAM
[17:53] creationix: bingomanatee: ram won't help, v7 has a hard upper limit
[17:53] bingomanatee: Have you tried running it on Amazon?
[17:53] creationix: *v8
[17:53] JonKirkpatrick has joined the channel
[17:53] Yuffster has joined the channel
[17:54] janne has joined the channel
[17:54] fille12 has joined the channel
[17:55] davidascher has joined the channel
[17:57] mraleph: creationix: not completely true. there is "hard" memory limit (currently 1.9gb for x64) but to reach it you have to increase "soft" limit with --max-old-space-size flag.
[17:57] bingomanatee: well then load balance it :D
[17:57] jakehow has joined the channel
[17:57] Kingdutch: Ok let's just spam v8bot every 1 second with one of those stringifies
[17:58] creationix: mraleph: that's true
[17:58] creationix: but still, it's never going to hit my machine's 4gb limit with a stock node compile
[17:58] mraleph: never say never :-)
[17:58] creationix: unless I put stuff outside V8's watch like in node buffers
[17:59] Kingdutch: v8> console.log('speed');
[17:59] v8bot: Kingdutch: CONSOLE: ["speed"], OUTPUT: undefined
[17:59] mraleph: or you cat replace stock nodes'v v8 with one from experimental/gc branch :-)
[17:59] mraleph: s/cat/can
[17:59] creationix: mraleph: what does that branch do?
[17:59] creationix: oh, you mean v8's branch, not node's
[18:00] mraleph: creationix: basicly it's new gc. but it's a work in progress.
[18:00] creationix: mraleph: any idea when it will be stable, or is that all up in the air still?
[18:00] creationix: especially for arm
[18:00] mraleph: not ready for any kind of use now. 
[18:00] mraleph: no dates are defined.
[18:01] creationix: thought so, just wondering
[18:01] creationix: mraleph: what about crankshaft for arm
[18:01] creationix: that's closer I assume
[18:02] mraleph: creationix: it's veeeeeery hot nowadays there.
[18:02] ttpva has left the channel
[18:02] mraleph: that is the only thing I can say :-) 
[18:02] ttpva has joined the channel
[18:03] creationix: mraleph: awesome
[18:03] mraleph: are you using node on ARM?
[18:03] creationix: mraleph: I work on node for webos, so yes
[18:03] mraleph: ah. are you working for Palm/HP?
[18:03] brianleroux has joined the channel
[18:03] creationix: yep
[18:04] creationix: but we can still be friends ;)
[18:04] mraleph: then you probably know Mark Lam
[18:04] creationix: yep
[18:04] mraleph: great :-)
[18:05] creationix: mraleph: are you on the V8 team, or just work close with them?
[18:05] mraleph: on the team
[18:05] creationix: cool, awesome work btw
[18:05] sechrist: high five
[18:06] altamic has joined the channel
[18:07] Kingdutch: creationix: Try using v8
[18:07] khug has joined the channel
[18:08] tfcoding has joined the channel
[18:08] arpegius has joined the channel
[18:09] brianmario has joined the channel
[18:13] Kingdutch: mraleph: Sorry if I'm still flooding v8, I got it on ignore
[18:13] Kingdutch: Kept telling me timeout :X
[18:13] bingomanatee: ACTION could have had a v8
[18:13] lukegalea has joined the channel
[18:16] A83 has joined the channel
[18:16] bingomanatee_ has joined the channel
[18:16] khug has left the channel
[18:18] claudiu__ has joined the channel
[18:19] dmcquay has joined the channel
[18:19] eddanger has joined the channel
[18:20] MikhX has joined the channel
[18:21] hobodave has joined the channel
[18:21] ossareh has joined the channel
[18:21] gbot2 has joined the channel
[18:23] cloudhead has joined the channel
[18:24] fairwinds has left the channel
[18:26] msekimura has joined the channel
[18:31] rtuin has joined the channel
[18:32] emacsen has joined the channel
[18:32] kubrow has joined the channel
[18:38] brapse has joined the channel
[18:43] bingomanatee: has anyone tried connecting to a remote auth-gaurded system with christkov's native mongodb drivers?
[18:43] x_or has joined the channel
[18:44] k04n has joined the channel
[18:46] matclayton has joined the channel
[18:48] keeto_ has joined the channel
[18:50] kiddphunk has joined the channel
[18:53] davidwalsh has joined the channel
[18:54] josephhitchens has left the channel
[18:54] charlenopires has joined the channel
[18:57] piscisaureu_ has joined the channel
[18:57] mjr_ has joined the channel
[18:58] bingomanatee: or for that matter any remote mongodb connection via christkov-mongodb-native?
[18:59] wink_: :x
[19:00] bingomanatee: hey wink_ trying to connect to mongolabs with christkov - a little help?
[19:01] bingomanatee: https://gist.github.com/783277
[19:01] Country has joined the channel
[19:01] bingomanatee: btw tried 'u' / 'p' and '-u'/ '-p'; validated I can connect from the console. 
[19:03] batok has joined the channel
[19:03] prettyrobots has joined the channel
[19:04] sveisvei has joined the channel
[19:04] prettyrobots: creationix: How would I repeat an action until completed using Step.js?
[19:04] creationix: prettyrobots: you don't
[19:04] creationix: Step is just a tool
[19:04] creationix: what kind of action?
[19:04] backthatzachup has left the channel
[19:04] prettyrobots: Open an file fs.open
[19:04] prettyrobots: And read it using fs.read 
[19:05] prettyrobots: Until I've read N bytes.
[19:05] creationix: yeah, step won't do that
[19:05] prettyrobots: Okay. Cool.
[19:05] creationix: but node's fs.readFile might be good code to look at
[19:05] creationix: it's very close, except it reads the entire file
[19:05] bradleymeck_ has joined the channel
[19:05] bingomanatee: I think you can read chuniks with fs. 
[19:05] prettyrobots: I'm reading /dev/urandom.
[19:05] sveimac has joined the channel
[19:05] bradleymeck_: does object.freeze() force slower lookup times?
[19:06] prettyrobots: Want some entropy.
[19:06] emacsen: creationix, hi
[19:06] creationix: prettyrobots: https://github.com/ry/node/blob/master/lib/fs.js#L45
[19:06] prettyrobots: I'm just going to use fs.readSync.
[19:06] creationix: prettyrobots: oh, nevermind, that uses streams now
[19:06] gbot2 has joined the channel
[19:06] creationix: I thought it was the same code I wrote a while back
[19:07] bingomanatee: fs.createReadStream('sample.txt', {start: 90, end: 99});
[19:07] herbySk has joined the channel
[19:07] creationix: yeah, the readStream accepts defined ranges
[19:07] prettyrobots: Oh....
[19:07] creationix: only a test will tell if it works on /dev/* things
[19:07] prettyrobots: Cool.
[19:07] bingomanatee: just loop your load stuff back on itself with the end handler.
[19:07] prettyrobots: I'll let you know.
[19:07] bingomanatee: its amazing what happens when the manual becomes part of your development cycle.
[19:08] v8bot has joined the channel
[19:08] creationix: bingomanatee: my problem is I know all the older APIs and sometimes forget the new stuff
[19:08] halfhalo: tsktsktsk
[19:08] bingomanatee: v.0.2.6?
[19:08] creationix: and for most things I don't have to use the docs, so I don't notice new things
[19:08] bingomanatee: well new is relative :D
[19:08] Max-Might has joined the channel
[19:08] stephank has joined the channel
[19:09] creationix: bingomanatee: when I started node there was no Buffer
[19:09] creationix: that was one API I was very much glad to have
[19:09] bingomanatee: okay then ... sounds like someone needs a user group :D
[19:09] eddanger has joined the channel
[19:10] emacsen: creationix, is there a #wheat? ;)
[19:10] creationix: emacsen: nope, it was never meant to be a framework
[19:10] creationix: emacsen: have a question?
[19:10] emacsen: creationix, I have a question or two about it
[19:11] emacsen: creationix, yup, as per my msges to you :)
[19:11] creationix: ahh, I see...
[19:11] matclayton has left the channel
[19:11] emacsen: creationix, you grab metadata about posts in the file
[19:11] emacsen: where do you do that? I can't find the code that handles it
[19:12] springmeyer has joined the channel
[19:12] creationix: emacsen: good question
[19:12] creationix: ACTION digs through his own old code...
[19:12] creationix: emacsen: which meta data in particular?
[19:12] emacsen: creationix, title, date, etc?
[19:13] prettyrobots: Do hashes operate on Buffer or String.
[19:13] emacsen: creationix, also, I see you put a bunch of libs into your own repo. Isn't there some node equivilant of lieningen?
[19:13] prettyrobots: That is crypto.createHash.
[19:14] prettyrobots: and hash.update
[19:14] nerickson has joined the channel
[19:14] prettyrobots: Does hash.update accept a Buffer? 
[19:14] creationix: prettyrobots: I would hope it accepts buffers, not sure though
[19:14] creationix: emacsen: closure's lieningen?
[19:14] prettyrobots: creationix: How do you know the length of the contents a buffer?
[19:14] emacsen: yeah, where you just tell it what you need for the project and it goes and fetches them per project
[19:14] creationix: prettyrobots: .length?
[19:15] prettyrobots: Or does chunk always send just the correct length?
[19:15] prettyrobots: Okay, so there is not a discrepancy between length of content and allocated capacity?
[19:15] creationix: prettyrobots: what is correct length?
[19:15] prettyrobots: Guess not.
[19:15] creationix: prettyrobots: not normally, 
[19:15] creationix: emacsen: oh, npm
[19:15] creationix: emacsen: npm install wheat
[19:15] prettyrobots: Okay. I'm remembering this to be the case.
[19:15] creationix: and it will grab all the deps
[19:16] creationix: using package.json
[19:16] pdelgallego has joined the channel
[19:16] emacsen: creationix, yeah just a bit messy
[19:18] creationix: emacsen: what's messy?
[19:18] emacsen: creationix, npm installs it globally or per user, not per project AFAIK
[19:19] bradleymeck_: has anyone been able to get node-canvas up on an ec2?
[19:19] creationix: emacsen: no, it's really smart
[19:19] creationix: each project need only declare it's deps
[19:19] creationix: and it will get that versions
[19:20] creationix: the actual files are global to that node install
[19:20] tjholowaychuk: bradleymeck_: we use it on ec2
[19:20] emacsen: oh, and so you'd package your software somewhere npm can get it?
[19:20] bradleymeck_: AMI? i cant get it to detect cairo
[19:21] creationix: emacsen: you can even depend on two different libraries A and B that both depend on a shared C, but at different versions
[19:21] creationix: and A will see it's own version of C and B will see a different version of C
[19:21] bradleymeck_: then again i installed cairo using yum
[19:21] creationix: all in the same process
[19:21] tjholowaychuk: bradleymeck_: hmm yeah that could be your issue haha, i hate yum
[19:21] tjholowaychuk: I didnt use a PM
[19:21] tjholowaychuk: so cant help you there
[19:21] creationix: emacsen: npm is repository based, so the easiest thing to do is to put your library in the public repo
[19:21] stagas: creationix: crazy! :)
[19:21] creationix: emacsen: but it supports custom local repos if you want
[19:22] tjholowaychuk: if needed feel free to chuck some includes in the wscript
[19:22] bradleymeck_: if i submit a patch that makes it work off yums install would that be ok? oh nice
[19:22] emacsen: creationix, right, that's fair. Anyway... the metadata in markdown code?
[19:22] creationix: emacsen: ahh, I have  a function somewhere that pre-processes the markdown and strips it out
[19:22] emacsen: creationix, because it turns out what I wanted to do was very similiar to wheat so I was going to just steal big parts of it
[19:22] creationix: just a sec...
[19:23] creationix: emacsen: feel free to steal whatever you want, that's the goal of it
[19:23] tjholowaychuk: bradleymeck_: what version does yum install?
[19:23] creationix: emacsen: I think this is it https://github.com/creationix/wheat/blob/master/lib/wheat/data.js#L8
[19:24] creationix: emacsen: wheat was meant to be an example of how to write a blog, not a framework for all future blogs
[19:24] emacsen: creationix, thanks!
[19:24] emacsen: creationix, too bad! ;-P
[19:24] creationix: emacsen: nothing fancy, the code is pretty ugly and old
[19:24] creationix: If I ever find time, I'll write a proper wheat-like blog engine
[19:24] creationix: that's clean and modular
[19:24] fairwinds has joined the channel
[19:24] creationix: so people can use it like wordpress is used and customized
[19:25] emacsen: creationix, *nod*
[19:25] jdalton has joined the channel
[19:27] chapel has joined the channel
[19:27] tokumine has joined the channel
[19:27] benburkert has joined the channel
[19:28] Apple: Damn, perl still bans me for trolling them back in the 2003 when I was in grade school wtf
[19:28] Apple: err #perl
[19:29] Kingdutch: lol
[19:29] fly__ has joined the channel
[19:31] Gregor: Apple: So? It's #perl ...
[19:32] bingomanatee: How do they feel about Mapple?
[19:32] jamesarosen has joined the channel
[19:33] Gregor: I think when you've got the nick "Apple", you don't give it up.
[19:33] Gregor: Sort of like when you get the nick "Gregor" :P
[19:33] bingomanatee: or dingomanatee
[19:33] Apple: Or Madonna. :)
[19:33] Evet has joined the channel
[19:33] bingomanatee: The whore formerly known as....
[19:34] Gregor: bingomanatee: Are you lamenting that somebody took dingomanatee so you had to go with bingomanatee? :P
[19:34] Kingdutch: Apple: http://pastebin.com/eaMKaACp
[19:34] Apple: ACTION likes Louise Ciccone
[19:35] pekim has joined the channel
[19:35] Apple: Kingdutchlol
[19:35] matt_c has joined the channel
[19:35] Apple: thnx
[19:36] Gregor: "The Newark Troll" is pretty much the most awesome nickname a person could hope for though.
[19:36] Apple: :p
[19:36] CrabDude has joined the channel
[19:36] Apple: ACTION used to live in Newark, but moved to Manhattan to evade the ban :p
[19:36] Apple: j/k
[19:37] nsswb has joined the channel
[19:37] nsswb has left the channel
[19:37] Qbix1 has joined the channel
[19:37] CIA-121: node: 03Ryan Dahl 07master * rcf2e4f4 10/ (221 files in 18 dirs): Upgrade V8 to 3.0.8 - http://bit.ly/g4pCqZ
[19:38] ossareh has joined the channel
[19:39] sandymahalo has joined the channel
[19:40] bingomanatee: \me is not here right now -- you're talkint to dingomanatee
[19:40] bingomanatee: dammit
[19:41] admc has joined the channel
[19:44] enotodden has joined the channel
[19:45] booo has joined the channel
[19:46] eddanger has left the channel
[19:49] pekim has joined the channel
[19:52] str3iber has joined the channel
[19:53] str3iber: hi, are there any laternatives to dbslayer for nodejs easy db connectivity?
[19:53] djanowski has joined the channel
[19:54] MrTopf has joined the channel
[19:54] str3iber: (except the mysql module)
[19:54] bingomanatee: alternative alternatives?
[19:54] str3iber: hehe
[19:54] bingomanatee: and where do you want us to put the cherry?
[19:55] mscdex: str3iber: which db are you wanting to use, mysql?
[19:55] str3iber: mscdex: postresql and/or mysql
[19:55] str3iber: *postgresql
[19:57] mscdex: well, for mysql there's pretty much node-mysql for async and node-mysql-libmysqlclient for sync
[19:57] mscdex: and there's several postgres modules
[19:57] mscdex: i've never used them though
[19:57] str3iber: okay thanks
[19:57] mscdex: only because i've never used postgres
[19:57] mscdex: :)
[19:57] str3iber: hehe
[19:58] Ond has joined the channel
[19:58] mscdex: there's the module list: https://github.com/ry/node/wiki/modules
[19:58] matt_c has joined the channel
[19:58] str3iber: postgresql look nicer to me at the first "look"
[19:58] str3iber: thx
[19:58] fairwinds: hi. what are alternatives to npm when it fails. Am just sticking libs in a support folder for libs that don't import properly with a package or tar file.What do others do?
[19:59] bradleymeck_: i just stick it in a libs folder, then be sure what im require'ing matchers the main in package.json for that file
[19:59] bradleymeck_: matches*
[19:59] bingomanatee: sounds like you're on the right track fairwinds.
[19:59] str3iber: a module that uses mysql and postgresql C api would be nice, just a small wrapper for this libs
[20:00] bingomanatee: In fact I prefer that method as it locks in a particular version of a library to a given project. 
[20:00] banjiewen has joined the channel
[20:00] bradleymeck_: *wishes he could have a npm clone command that clones the current version of a module into cwd*
[20:01] fairwinds: bingomanatee, bradleymeck_: thanks
[20:01] fairwinds: bingomanatee: is there anything equivalent to pinning versions with the package manager?
[20:01] fairwinds: for a project
[20:02] fairwinds: in python, I would put versions of dependent libs in file with version number of lib and require it
[20:03] void_ has joined the channel
[20:03] ryah_: bradleymeck_: me too
[20:04] dsirijus has joined the channel
[20:04] dgathright has joined the channel
[20:04] jamesarosen has joined the channel
[20:05] creationix: fairwinds: yeah, package.json + npm supports that
[20:05] creationix: fairwinds: just be specific on what version you want in your depends section
[20:05] seemann has joined the channel
[20:06] fairwinds: bradleymeck_: so are you putting all your libs in this folder then and not using npm?
[20:06] bradleymeck_: i use both depending
[20:06] dspree has joined the channel
[20:06] bradleymeck_: generally dev w/ npm deploy w/o it
[20:07] fairwinds: bradleymech_: I like that idea
[20:08] clarkfischer has joined the channel
[20:08] aheckmann has joined the channel
[20:08] Kingdutch: You know what's cool about WebGL and Canvas?
[20:09] bradleymeck_: their terrible font support?
[20:09] Kingdutch: It's all Javascript, so you can just make the interface in HTML and have links to external webpages or load a FAQ in a little div over the canvas :D
[20:09] Kingdutch: Since when does OpenGL have font support? O.o
[20:10] piscisaureus: ACTION getting sick of all those requireNative api changes
[20:10] webr3 has joined the channel
[20:11] c0nundrum has joined the channel
[20:11] pedrobelo has joined the channel
[20:12] fairwinds: bradleymeck_: I might be consistent and put it all in a folder so when I finish dev it is all ready to put up for deployment. Have been just settling into node so just want to establish some decent pattern for working
[20:12] gartenstuhl has joined the channel
[20:12] Aria has joined the channel
[20:12] maushu has joined the channel
[20:14] martinciu has joined the channel
[20:14] femtoo has joined the channel
[20:15] piscisaureus: ryah_: curl https://github.com/piscisaureus/node/commit/04b684ae8474dc0777707e6c95e1e632be058e09.patch | git am -3
[20:16] creationix: piscisaureus: what does the "-3" do?
[20:16] piscisaureus: if patch doesn't apply, merge
[20:16] piscisaureus: use 3-way merge
[20:16] creationix: ahh, that's handy
[20:18] dmcquay has joined the channel
[20:18] blackmamba69 has joined the channel
[20:19] kriszyp has joined the channel
[20:21] eags_: Is geddy abandoned or has development moved to someone's fork?  Looks like no commits for a few months.
[20:21] huma has left the channel
[20:21] piscisaureus_ has joined the channel
[20:21] Kingdutch: I'm on ryah's fork
[20:21] paulrobinson has left the channel
[20:21] creationix: eags_: I do know that mde has been really busy
[20:22] creationix: not sure about adonded
[20:22] creationix: eags_: express is very active, it has an mvc example in the docs
[20:23] eags_: mde is the main developer?  last commit on geddy was nov 10th.
[20:24] chrelad has joined the channel
[20:24] eags_: creationix: thanks.
[20:24] creationix: eags_: yeah, mde is the author of geddy
[20:24] bradleymeck_ has joined the channel
[20:25] langworthy has joined the channel
[20:25] arpegius has joined the channel
[20:27] pieterv has joined the channel
[20:29] booo has joined the channel
[20:29] CIA-121: node: 03Bert Belder 07master * r595509b 10/ deps/v8/src/platform-win32.cc : 
[20:29] CIA-121: node: Fix v8 build on windows
[20:29] CIA-121: node: reported to v8 in http://codereview.chromium.org/6056006/ - http://bit.ly/fMpqiN
[20:32] charlenopires_ has joined the channel
[20:33] martinciu has joined the channel
[20:34] markwubben has joined the channel
[20:36] creationix: does anyone have windows binaries for the latest node release
[20:36] pandark_ has joined the channel
[20:36] creationix: I haven't had time to setup a windows build environment
[20:37] creationix: and the cloud9 binaries are fairly old (0.2.4)
[20:38] konobi: creationix: you should chase ryan up about build.nodejs.org =0)
[20:39] creationix: that would be cool
[20:39] banjiewen_ has joined the channel
[20:39] mnbvasd: ooh, I managed to hack tls.js to do what I want... :)
[20:39] creationix: but ryah has better things to work on right now
[20:39] Utkarsh__ has joined the channel
[20:39] mnbvasd: now to see if I can turn it into a sane patch :)
[20:40] tjholowaychuk: creationix: ask Jim, he gave me access but I havent had time to look into it
[20:40] creationix: ...like finish out 0.3.x so we can have a 0.4.0 release
[20:41] creationix: tjholowaychuk: who's Jim?
[20:41] eags_: Can anyone comment or point to something online that discusses the current state/pros/cons/etc of various node platforms (express, geddy, zappa, grasshopper).  There are several and they all look pretty decent with a lot of activity.
[20:41] creationix: eags_: nothing unbiased
[20:41] tjholowaychuk: creationix: Jim Pick from joyent
[20:41] eags_: biased is fine
[20:41] creationix: tjholowaychuk: ahh, that makes sense
[20:42] creationix: eags_: I can help, what are you looking for
[20:42] creationix: (warning, I'm biased towards things I wrote)
[20:42] eags_: I'm coming from rails but I'm not exactly attached to that way of doing things.
[20:42] creationix: geddy is the closest thing to rails, but I'm not sure it ever got much traction
[20:43] creationix: express is the most popular and is a lot like Sinatra
[20:43] creationix: connect is kinda like rack, it's the middleware that poweres express
[20:43] bingomanatee: I've been doing well with express for noogle
[20:43] creationix: I made a minimal connnect-style stacker called "Stack"
[20:43] eags_: Seems like most of the platforms I mentioned are built on connect
[20:43] bingomanatee: with a few painful exceptions...
[20:43] eags_: maybe "on" is no the right word
[20:44] tjholowaychuk: bingomanatee: that locals thing?
[20:44] tjholowaychuk: it seemed like you were doing 1.x stuff with 2.x
[20:44] creationix: eags_: also tjholowaychuk is the express man, I just helped him write connect
[20:44] jamescarr: php is such a mess
[20:44] jamescarr: good fucking god
[20:44] bingomanatee: yes - I'm pretty attached to my local variables. 
[20:44] opengeard has joined the channel
[20:44] tjholowaychuk: jamescarr: what are you talking about, php namespace syntax is amazing
[20:44] tjholowaychuk: haha
[20:44] Ari-Ugwu has joined the channel
[20:45] tjholowaychuk: bingomanatee: did you get back to me on that issue? I will take a look, gotta reproduce it
[20:45] jamescarr: http://us.php.net/manual/en/function.array-map.php
[20:45] creationix: eags_: are you looking for a full-stack solution, or just trying to build out something yourself?
[20:45] jamescarr: tjholowaychuk, damn amazing ;)
[20:46] konobi: creationix: sure... but ryan can also chase stuff up =0)
[20:46] w0rse: Hello. Is there a way to serve streaming files in express/connect? I'm having trouble displaying video files.
[20:46] gryzzly_ has joined the channel
[20:47] tjholowaychuk: w0rse: just as you would with regular node
[20:47] boaz_ has joined the channel
[20:47] gryzzly_ has joined the channel
[20:47] tjholowaychuk: there are some convenience methods though https://github.com/visionmedia/express/blob/master/examples/downloads/app.js#L20
[20:47] Kingdutch: Let's engineer to this song: http://www.youtube.com/watch?v=zKJFiWyG2cQ A particle show like so: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/google/particles/index.html
[20:48] Kingdutch: (Note webgl required)
[20:48] w0rse: tjholowaychuk: i'm so addicted to staticProvider. I should give it up for video?
[20:48] eags_: creationix: well somewhere in between most likely.  I just want something that is going to make easy things no work and as the app gets big or there are hard things to implement it happens in a consistent and manageable way so if I have to build a lot myself it won't turn into a mess and it will be consistent enough that other people will be able to work with what I do.  
[20:48] seemann has joined the channel
[20:48] charlenopires has joined the channel
[20:49] jamescarr: heh
[20:49] tjholowaychuk: w0rse: we used readFile since it used to be faster, but now that it uses streams internally I will be updating that sometime
[20:49] tjholowaychuk: to support range n whatnot
[20:49] jamescarr: I minimized the amount of php I have to muck around with by using REST services hosted by node.js :)
[20:49] fairwinds: tjholowaychuk: is there a method for inspecting server request to see what Ive got there for server
[20:49] jamescarr: so I do as much business logic as possible in the REST services ;)
[20:49] tanepiper: oh snap, so Array.prototype already has .map on it.  FTW!
[20:49] zzak has joined the channel
[20:49] zzak has joined the channel
[20:49] jamescarr: tanepiper, yes, node implements array extras from ES5
[20:50] jamescarr: map, filter, reduce, etc. :)
[20:50] jamescarr: for an extreme FTW it even has Function.prototype.bind ;)
[20:50] tjholowaychuk: fairwinds: what do you mean? "got there for server"?
[20:50] tanepiper: jamescarr: i didn't even know the array prototypes had them, though i would have to use underscore
[20:50] tanepiper: at least i'll have to on the client side, but that saves a server-side dependency
[20:50] jamescarr: that guy on the mailing list clamoring that node.js needs to be accessible to php devs...
[20:51] jamescarr: needs to be shot!
[20:51] jamescarr: :-P
[20:51] JCS^ has joined the channel
[20:51] Kingdutch: Is my internet going down? :O
[20:51] jamescarr: ACTION is currently going through lots and lots of bad php code
[20:51] Kingdutch: I'm a php-dev, I find node plenty accessible :O
[20:51] fairwinds: tjholowaychuk: just want to see what is in the request
[20:51] tanepiper: clearly someone who is bad at PHP
[20:51] Kingdutch: But I took the time to read up on closures and the like
[20:51] tjholowaychuk: fairwinds: oh :) well console.log(req)
[20:51] tanepiper: who is going to be even worse with nodejs
[20:51] Kingdutch: And I've done Java, C#, C++ to help me get a taste of other things <3
[20:51] tjholowaychuk: or check req.body etc
[20:52] bingomanatee: Hey... I'm great at PHP and still jsut mediocre at node. 
[20:52] tanepiper: Kingdutch: ditto, I did PHP, JavaScript (jQuery DOM stuff), Python and Java (well Android Java)
[20:52] bingomanatee: it just takes time to get good at anything. 
[20:52] tanepiper: and many years of basic, some perl, some C/C++ before that
[20:52] Kingdutch: I did android java too! :D
[20:53] Kingdutch: Although I also did some otehr java including GUI and IRC Bots :')
[20:53] bingomanatee: surprisingly less time at node... but experience translates to some degree. 
[20:53] Kingdutch: Oh and web crawlers :)
[20:53] tanepiper: although ihaven't touched C/C++ in about 10 years, i really should go back and look at it
[20:53] jamescarr: tanepiper, nah
[20:53] tanepiper: last time it was messing with the Quake source and adding proper skyboxes and mirrored surfaces n stuff like that
[20:53] Kingdutch: bingomanatee: Yeh I find that the more languages I see and learn, the easier it gets to pick up a new one, it's all similair syntax, just gotta get good at looking up the right stuff and pasting it :')
[20:54] matjas has joined the channel
[20:54] saschagehlich_: mjr_: did you manage to fix that auth-on-reconnect bug yet? :S
[20:55] jamescarr: array_search is an annoying php function
[20:55] jamescarr: sheesh
[20:55] Kingdutch: jamescarr How is it?
[20:55] tanepiper: <insert here> is an annoying php function
[20:55] Kingdutch: lol
[20:55] tanepiper: also php.js for the lolz
[20:55] jamescarr: it returns false if not found, the array index if it is found. array index 0 also evals to false ;)
[20:55] aklt has joined the channel
[20:55] jamescarr: gott use strict checking
[20:55] bradleymeck_: global functions, non-gc'ed gcable objects, and broken namespacing. oh my
[20:55] jamescarr: but still annoyance
[20:56] Kingdutch: Ah === false
[20:56] Kingdutch: Right
[20:56] Kingdutch: It should just return -1
[20:56] jamescarr: YES
[20:56] tanepiper: so - what's different between .bind and .apply/call ?
[20:56] tanepiper: (well call since it's passed parameters rather than an array of args)
[20:56] jamescarr: tanepiper, bind allows for partial functions
[20:56] bradleymeck_: a ton, .bind gives you a new function it doesnt execute it yet
[20:56] Kingdutch: function in_array(array, value) { for (var i=0;i<array.length;i++) { if (array[i] == value) return true; } return false; }
[20:57] jamescarr: function sum(a,b){return a+b; }
[20:57] jamescarr: var addFive = sum.bind(5);
[20:57] jamescarr: addFive(10); // 15
[20:57] tanepiper: oh, so lambdas
[20:57] emacsen has joined the channel
[20:57] Kingdutch: Although I probably should have rewritten that as: Array.prototype.in(value) { for (var i=0; i<this.length;i++) if (this[i] == value) return true; } return false; }
[20:57] fairwinds: tjholowaychuk: super, thanks
[20:57] jamescarr: I've had cases where it is handy
[20:57] jimmybaker has joined the channel
[20:58] tanepiper: so basically lets you bind default parameters to create new functions
[20:58] tanepiper: so
[20:58] Kingdutch: What's the difference between call and apply
[20:58] Kingdutch: otehr than the arguments
[20:58] sstephenson has joined the channel
[20:58] Kingdutch: Seems pointless to have both imo, or use both in the same code anyway
[20:58] tanepiper: var addBar = sum.bind('foo');  addBar('bar');  output: foobar
[20:58] FMJag has joined the channel
[20:59] mrkurt has joined the channel
[20:59] tanepiper: Kingdutch: well you can .apply straight with arguments within a function call, .call you need to specify the exact parameters
[20:59] creationix: eags_: I'd recommend express then
[20:59] rbranson has joined the channel
[20:59] bradleymeck_: kingdutch nothing really just with .call you can get a tiny allocation optimization instead of making an array for .apply
[20:59] creationix: it's a good start, gives some structure, but is very modular and extensible
[20:59] tanepiper: so function() { otherFunction.call(otherFunction, arguments); }
[20:59] tanepiper: eh sorry, .apply
[21:00] Kingdutch: ah right
[21:00] Kingdutch: so I could do
[21:00] tanepiper: whereas call would be otherFunction.call(otherFunction, foo, bar, baz)
[21:00] creationix: eags_: or if that is too much, then try stack + creationix (my stack)  But it defined no structure at all other than the interface between middleware layers
[21:00] Kingdutch: function foo(oneArg) {} something.apply(foo, [ 'one', 'twoargs']); ?
[21:00] Kingdutch: But I can only do something.call(foo, oneARg);
[21:01] tanepiper: you can call with as many parameters as you like
[21:01] tswicegood has joined the channel
[21:01] Kingdutch: Or is that array really the only difference? >.< that's pointless lol
[21:01] tanepiper: the first is always scope, then the remaining values are the passed arguments
[21:02] Sembiance has joined the channel
[21:02] sstreza has joined the channel
[21:02] creationix: Kingdutch: it's a huge difference
[21:02] inimino has joined the channel
[21:02] dnolen has joined the channel
[21:02] tanepiper: Kingdutch: https://gist.github.com/8ad298d9411c0e51bf7a
[21:03] creationix: fn.call(scope, arg1, arg2, arg3, ...) vs fn.apple(scope, [arg1, arg2, arg3, ...])
[21:03] creationix: use whatever is most convenient for your use case
[21:03] creationix: sometimes you have an array of arguments
[21:03] creationix: sometimes you have a fixed number of known arguments
[21:04] w0rse: tjholowaychuk: still no luck with the video. I've tried res.sendfile() with the same result. Any obvious things I might miss?
[21:04] chapel has joined the channel
[21:04] creationix: w0rse: creationix/static from npm works with streaming video
[21:04] tjholowaychuk: w0rse: by no luck you mean it's just flat-out not transferring? causing an exception?
[21:04] creationix: https://github.com/creationix/creationix/blob/master/static.js
[21:04] ziro` has joined the channel
[21:04] Kingdutch: Hmm ok
[21:05] Kingdutch: I see how this could work if you have like dynamically generated arguments
[21:05] Kingdutch: just don't have a use case for this yet
[21:05] w0rse: tjholowaychuk: it only sends first 2k of the file
[21:05] creationix: Kingdutch: that's pretty common I find
[21:05] creationix: tjholowaychuk: does your static provider stream by default now?
[21:05] Kingdutch: creationix: Ah ok
[21:05] dmcquay has joined the channel
[21:05] tjholowaychuk: creationix: connect's? no
[21:06] keeran has joined the channel
[21:06] freeformz has joined the channel
[21:06] creationix: tjholowaychuk: have you had to stream video yet, or not hit that use case
[21:06] tjholowaychuk: I have that logic in express, but I will move it back into connect now that readFile has no benefit
[21:06] tjholowaychuk: nah
[21:06] tjholowaychuk: I wouldnt use node for streaming videos
[21:06] creationix: guess so, anything with enough bandwidth to stream video probably doesn't support node
[21:07] brianc has joined the channel
[21:07] w0rse: tjholowaychuk: these are the kind of headers I get for the video https://gist.github.com/783491
[21:07] martinciu_ has joined the channel
[21:08] eddanger has joined the channel
[21:08] creationix: cool, I didn't know express/connect has 206 support
[21:09] tjholowaychuk: w0rse: looks ok
[21:09] tjholowaychuk: :s
[21:09] Kingdutch: Time for bed, good night folks
[21:10] tjholowaychuk: w0rse: what node --version ?
[21:10] Druid_ has joined the channel
[21:10] w0rse: tjholowaychuk: yes, but it don't continue that way, just stops
[21:10] tjholowaychuk: 0.2.4 I believe had issues
[21:10] tjholowaychuk: at least it did for me
[21:10] tjholowaychuk: and a few others
[21:10] creationix: yeah, 0.2.4 seemed to not send all the data for me
[21:10] creationix: or omit parts
[21:10] tjholowaychuk: haha yeah same
[21:10] brianmario has joined the channel
[21:11] w0rse: tjholowaychuk: v0.3.6-pre
[21:11] tjholowaychuk: w0rse: hm, have not tried with 3.x
[21:11] pedrobelo has joined the channel
[21:12] jamescarr: gimme some jade templates ;)
[21:12] jamescarr: some pretty ones
[21:12] eddanger has joined the channel
[21:12] tjholowaychuk: what lol
[21:12] yhahn: lol
[21:12] tanepiper: tjholowaychuk: did you see jade was on reddit :)
[21:12] tjholowaychuk: oh lol no
[21:12] creationix: w0rse: try this one, just to see if it works https://github.com/creationix/creationix/blob/master/static.js
[21:12] tjholowaychuk: reddit sucks
[21:12] creationix: it works for me on 0.3.4
[21:13] tanepiper: http://www.reddit.com/r/javascript/
[21:13] creationix: then you'll know if it's a node thing or an express/connect thing
[21:13] tanepiper: at no. 3
[21:13] jacobolus has joined the channel
[21:13] w0rse: creationix: thanks, I'll give it a try
[21:13] swistak has joined the channel
[21:14] m64253 has joined the channel
[21:14] creationix: w0rse: it should just work as a drop-in replacement to connect's static provider (probably different config arguments though)
[21:14] tjholowaychuk: tanepiper: nice :)
[21:16] tjholowaychuk: fuck reddit sucks so bad haha
[21:16] tjholowaychuk: crashing all over
[21:17] femtooo has joined the channel
[21:19] matjas: Node.js noob here — how do Node servers / applications continue to run? do node apps automatically restart when they quit/crash?
[21:20] tanepiper: no, unless you have a loop your script will end
[21:20] tanepiper: and you have to handle crashes and restarts
[21:20] richcollins has joined the channel
[21:20] jesusabdullah: There are a number of projects that address this sort of thing, though
[21:20] miccolis has joined the channel
[21:20] matjas: tanepiper: so all these node.js hosting providers don't take care of that for you?
[21:20] tanepiper: you can check out fugue
[21:20] Bonuspunkt: --> https://github.com/pgte/fugue was posted this morning
[21:20] benburkert has joined the channel
[21:21] bradleymeck_: yes, the hosting providers handle it for you
[21:21] matjas: jesusabdullah: yeah, i read about Forever.js or something that does this, but i can't imagine all the node.js hosting providers using something like that
[21:21] matjas: so it's all up to you to write good apps that loop or restart themselves or w/e
[21:21] matjas: ?
[21:21] jesusabdullah: Maybe not forever.js, but there are lots of other solutions.
[21:21] saikat has joined the channel
[21:22] jesusabdullah: Many providers may use something more akin to Monit
[21:23] strmpnk_ has joined the channel
[21:23] xla has joined the channel
[21:23] bradleymeck_: its fairly hard to take down no.de or nodejitsu app (though if you restart too much the service will try to roll back)
[21:24] matjas: I’m not familiar with Monit — could you explain how it usually works when you pay for Node hosting? do you have to ssh into the server every time you want to start/restart your app or what?
[21:24] mikew3c has joined the channel
[21:24] jesusabdullah: http://en.wikipedia.org/wiki/Monit
[21:25] jesusabdullah: With no.de, you just git push to the production server, and joyent takes care of the rest
[21:25] jesusabdullah: including restarts
[21:26] bradleymeck_: even keeps track of old deploys for swapping the default one
[21:26] tjholowaychuk: w0rse: even really basic node streaming stuff fails to stream a movie for me
[21:26] tjholowaychuk: 0.2.6
[21:26] tjholowaychuk: really slow
[21:27] jesusabdullah: I'd imagine nodejitsu is similar in nature
[21:28] jamescarr: yeah, reddit kind of blows these days
[21:28] tjholowaychuk: w0rse: hmm k yeah it works for me
[21:29] jesusabdullah: What did reddit do THIS time?
[21:29] w0rse: tjholowaychuk: cool. so it's the node version thing?
[21:29] tjholowaychuk: w0rse: I will try 0.3.x
[21:30] w0rse: creationix: can't figure out the init params for your lib
[21:30] tjholowaychuk: w0rse: works for me with 0.3.5 as well
[21:30] Qbix1 has joined the channel
[21:31] creationix: w0rse: mount point, filesystem root, index file
[21:31] creationix: so ("/", __dirname + "/www/", "index.html") for example
[21:31] creationix: and index file is optional
[21:32] creationix: tjholowaychuk: http://creationix.com/BigBuckBunny_640x360.m4v
[21:32] creationix: readstream on 0.3.4 I think
[21:33] creationix: seeking works too
[21:33] prettyrobots has joined the channel
[21:33] tjholowaychuk: bunnay
[21:34] creationix: really eats my bandwidth, but seems to work fine
[21:34] creationix: I'm down to *onle* 193gb left this month
[21:34] everzet has joined the channel
[21:34] tanepiper: creationix: what do you use to generate your front page?
[21:34] creationix: the graphic?  That's a wordle
[21:34] creationix: gave it the rss to my twitter as a data input
[21:35] tanepiper: ahh, so it's not a lib, it's the wordle site outputs the image?
[21:35] creationix: yep
[21:35] creationix: I wish it was dynamic
[21:35] creationix: that would be awesome
[21:35] w0rse: tjholowaychuk: i must be missing something then.. here's my code https://gist.github.com/783528
[21:35] creationix: http://www.wordle.net/create
[21:36] tjholowaychuk: w0rse: I was trying with res.sendfile() (or res.download() etc)
[21:36] CIA-121: node: 03Ryan Dahl 07master * ra51063c 10/ doc/api/globals.markdown : docs: Add note about global scope - http://bit.ly/g9eDD5
[21:36] CIA-121: node: 03Ryan Dahl 07master * r86bf330 10/ doc/api/globals.markdown : docs: style - http://bit.ly/gqaFjF
[21:36] creationix: tjholowaychuk: I found res.sendFile too unreliable
[21:36] tjholowaychuk: w0rse: staticProvider wont work with a massive file right now
[21:36] tanepiper: hmm ok, not gonna put that up - Lemon Party for some reason is really big D:
[21:37] creationix: tjholowaychuk: do you want my streaming static lib in connect?
[21:37] creationix: or let people pull in their own as needed?
[21:37] dandorman_ has joined the channel
[21:37] creationix: tanepiper: a streaming provider like mine uses very little memory
[21:37] tjholowaychuk: creationix: I will just port the express stuff over. was cool to optimize for small assets before but no point now
[21:37] creationix: cool
[21:37] dandorman_ has left the channel
[21:37] w0rse: tjholowaychuk: yeah, pasted the old version. now it has what I used
[21:39] tjholowaychuk: w0rse: works for me man
[21:39] tanepiper: i managed to get rid of express as a dependency, but now i'm wondering if i can get rid of connect too and just use Stack :)
[21:39] tjholowaychuk: I did sendfile() on that video from tim's site there
[21:39] tjholowaychuk: tanepiper: haha for what?
[21:40] rsms has joined the channel
[21:40] w0rse: tjholowaychuk: ok, will try 0.3.4 then
[21:40] tanepiper: tjholowaychuk: most of my site logic is now in DNode, i only use connect to serve static content and handle file upload/download
[21:40] tanepiper: and the client side is all ExtJS, so no templates
[21:41] tjholowaychuk: tanepiper: ah I see, yeah straight-up node would be fine
[21:45] jesusabdullah: Why use stack instead of connect?
[21:46] jesusabdullah: Connect doesn't seem exactly bloated to me
[21:46] tjholowaychuk: stack is smaller obviously, but connect is small as well
[21:46] tanepiper: jesusabdullah: yea, just seeking ways to reduce the overall dependencies i need, but that may not need to be one
[21:46] tjholowaychuk: neither have deps
[21:47] tjholowaychuk: well actually i guess with stack you would have an extra dep
[21:47] tjholowaychuk: for the static middleware
[21:47] tanepiper: although really i;ve managed to cut it down to Dnode, Connect, Seq (for sanity) and Cradle, and just added fugue to test failover prevention
[21:48] Pilate has joined the channel
[21:48] tanepiper: although can't decide between optimist and cli for my command line script stuff
[21:48] tanepiper: so at the moment, have both :)
[21:48] tjholowaychuk: pff
[21:49] MaSch: http://pastebin.com/e7SrbBGA <-- does someone have seen somethink like this before (its from dmesg) 
[21:49] tjholowaychuk: you dont need a lib for that
[21:49] Gruni has joined the channel
[21:49] tanepiper: i know, but i'm lazy and it makes the output pretty :)
[21:49] tjholowaychuk: haha
[21:50] tanepiper: probably go with cli for that, because it has cli.progress and .ok, .error output, etc
[21:54] w0rse: ls
[21:55] w0rse: whoops :)
[21:56] bmizerany has joined the channel
[21:56] booo has joined the channel
[21:56] cgutierrez_ has joined the channel
[21:57] MaSch: okay i solved my problem 
[21:57] MaSch: paxctl -m /usr/bin/node did it
[21:58] w0rse: tjholowaychuk: in the end it looks like a firefox bug. tried chrome and it just worked
[21:59] tjholowaychuk: w0rse: ah! good call, I only tried in chrome
[21:59] tanepiper: The lament of the web developer
[22:01] fille12 has left the channel
[22:03] stephen_mcd has joined the channel
[22:05] w0rse: tjholowaychuk: thanks for your help. i'll give it up for now
[22:05] arpegius has joined the channel
[22:05] bingomanatee: All browsers render gifs the same. Make your life easy - generate pages as server side gifs. 
[22:06] dmcquay has joined the channel
[22:07] bradleymeck_: actually gif animation is different so not entirely the same
[22:08] deepthawtz has joined the channel
[22:12] formido has joined the channel
[22:17] tanepiper: man that async thread....:(
[22:17] tanepiper: so close to becoming bat country
[22:17] Bonuspunkt: we cant stop here
[22:18] stbuehler has left the channel
[22:19] softdrink: async thread?
[22:20] tanepiper: if you haven't read it yet, i'd recommend avoiding it
[22:20] tanepiper: people trying to push things into core that shouldn't (and will probably never) be there
[22:21] tanepiper: people getting butthurt because of ryah_, tjholowaychuk, issacs etc being (sane) gatekeepers
[22:21] softdrink: ah
[22:22] softdrink: because of node, i feel dirty writing *any* blocking code now.
[22:23] bingomanatee: I find in general if something makes me feel dirty I am not doing it hard enough. 
[22:23] tanepiper: you shoudln;t - blocking code has it's uses
[22:23] tanepiper: but 90% of cases, async is fine and there are plenty libs out there to handle syntax sugar around it
[22:24] clarkfischer: The only problem I have with async code is that code littered with anonymous functions is often more obtuse.
[22:24] bingomanatee: Although it is the norm there is no mandate to using anonymous functions in node. 
[22:24] tanepiper: name functions, arguments.callee is going in ES5 anyway so named functions is the way to go
[22:25] softdrink: mootools' classes and event system has spoiled me ;)
[22:25] bingomanatee: me\ moos
[22:25] bingomanatee: ACTION moos
[22:25] bingomanatee: there we go!
[22:25] softdrink: hehe
[22:26] tanepiper: i come from jQuery so it's callbacks all the way down :)
[22:26] softdrink: *nod*
[22:26] kolbyjack has joined the channel
[22:26] bingomanatee: callbacks a good programmer makes you not.
[22:26] clarkfischer: Has anyone patched JSLint to have a node option (kinda like it's rhino option?)
[22:27] tanepiper: node-lint ?
[22:28] clarkfischer: node-lint is a linter for the node environment
[22:28] tanepiper: https://github.com/as-jpolo/node-lint  https://github.com/tav/nodelint
[22:28] clarkfischer: but I can't put node: true in the /*jslint*/ declaration
[22:28] tanepiper: oh you mean the actual JSLint to copy + paste in stuff
[22:28] tanepiper: gottcha
[22:28] clarkfischer: just something as simple as adding require, module, exports globals
[22:29] w0rse: tjholowaychuk: in fact, I didn't give up and got it nailed. the thing was the content-type header.
[22:29] tjholowaychuk: w0rse: oh really? haha
[22:29] tjholowaychuk: w0rse: you said it was  FF ?
[22:29] w0rse: ff wanted to have video/webm
[22:30] w0rse: not just application/octet-stream
[22:30] tjholowaychuk: ah I gotcha
[22:30] tanepiper: so a non-standard video format has a standard mimetype :D
[22:31] w0rse: stole it from youtube, so I guess it's almost official
[22:32] mikeal: NEED NODECONF PROPOSALS!
[22:32] mikeal: more more more
[22:32] bradleymeck_: i want it on the moon
[22:32] olegp_ has joined the channel
[22:33] jamesarosen has joined the channel
[22:33] tanepiper: mikeal: i'd do a talk on DNode + Real time apps (if SubStack isn't already doing one)
[22:33] mikeal: tanepiper: http://www.nodeconf.com/#/proposal/8bf31813eef7c0b7e37d1ea259038eeb
[22:34] tanepiper: bahh
[22:34] bradleymeck_: and a presentation on how to make a serious authentication (against openid and oauth) work for web while maintaining your own user data
[22:34] jamescarr: lol...
[22:34] jamescarr: the async thread
[22:34] jamescarr: makes me laugh
[22:35] tanepiper: jamescarr: well it was a java dev that started it
[22:35] tanepiper: the death-throws of developers using a dying language
[22:35] tanepiper: and trying to keep their little bits
[22:35] jamescarr: i use java
[22:35] bingomanatee: All languages are dying. 
[22:35] bradleymeck_: the async thread makes me cry
[22:35] mikeal: Java is what it is
[22:35] jamescarr: sadly, java has the most intellectual factory workers
[22:36] jamescarr: as i call em
[22:36] bingomanatee: Node will be in ten years or so where PHP is nowl 
[22:36] mikeal: but you can't complain about the verbosity of working with callbacks in JavaScript is you write Java
[22:36] mikeal: s/is/if
[22:36] jamescarr: mikeal yes
[22:36] sechrist: javascript is the eternal programming language
[22:36] sechrist: my grandkids will write javascript
[22:36] jamescarr: i try to use scala or groovy when possible
[22:36] sechrist: groovy lol
[22:36] jamescarr: in jvm based apps
[22:36] sechrist: grails
[22:37] bradleymeck_: verbosity > sugar that has too much spice due to kinks (aka, the snake language that shall not be named)
[22:37] mikeal: i don't have this intellectual investment in the jvm
[22:37] mikeal: so i have no interest in jvm languages 
[22:37] tanepiper: javascript is pretty embedded in the web now, it'll be hard to replace
[22:37] jamescarr: anonymous inner classes for callbacks sucks :)
[22:37] tanepiper: Java, Flash etc are easy to replace because they are basically plugins
[22:37] jamescarr: tanepiper, no
[22:37] mikeal: yeah, the fact that you really can't do
[22:38] mikeal: var x = new Obj();
[22:38] mikeal: request(x.handler)
[22:38] jamescarr: java is rarely used for aaplets
[22:38] mikeal: because handler won't have proper this
[22:38] mikeal: is super annoying
[22:38] wink_: jamescarr: link me to that thread please, i havent seen it since last week, im assuming it's better now :>
[22:38] tanepiper: but all browser chrome also uses javascript, as well as the webpage content itself
[22:38] jamescarr: heck, dont think anyone writes applets these days
[22:38] bingomanatee: aaaaaaaaaaaaaaplets!
[22:38] bingomanatee: Anyone ever try JavaFX?
[22:38] mikeal: but Java is still in the browser by default
[22:38] tanepiper: jamescarr: well there you go, java was easy to replace on the web
[22:39] tanepiper: flash is going that way too
[22:39] mikeal: it's the number one cause of security vulnerabilities if you poll the exploits in rootkits
[22:39] bingomanatee: i disagree.
[22:39] jamescarr: tanepiper, java is still quite a contender for heavy lifting on the serverside. Remember twitter is written in scala iirc
[22:39] bingomanatee: I think Flash will become an OpenGL editor pretty quickly 
[22:39] tanepiper: and server side ruby/python will never take off because too much bloat
[22:39] jamescarr: scala runs on the jvm 
[22:39] mikeal: jamesarosen: they just dropped most of their scala
[22:39] tanepiper: jamescarr: i'm pretty much talking exclusivly client side here
[22:39] wink_: java was easy to replace because java applets were one of the worst abortions ever
[22:39] mikeal: whoos
[22:39] wink_: rednul: web
[22:39] wink_: erm
[22:39] mikeal: jamescarr: ^^
[22:40] tanepiper: because server side can be replaced with the next thing at any time
[22:40] jamescarr: but yes, sadly java has the highest % of devs who want to just work and not learn new things
[22:40] tanepiper: you just need someone to write it
[22:40] bingomanatee: but you can't underestimate the financial impact of Flash on micromarkets on Facebook. Nobody's going to make that industry go away any time soon
[22:40] sechrist: jamescarr: the python paradox
[22:40] sechrist: s/python/nodejs paradox imo
[22:40] bingomanatee: I always feel itchy about the number of languages I don't know. 
[22:41] mikeal: i'm ecstatic to be able to never write Python again
[22:41] mikeal: i want to know less languages and be productive building real things in one
[22:41] bingomanatee: me\ misses HyperTalk
[22:42] tanepiper: mikeal: ^5
[22:42] bingomanatee: \me misses hypertalk
[22:42] tanepiper: same with PHP
[22:42] sechrist: my company thinks that python is new fangled awesomeness and that's what the cool kids use
[22:42] bingomanatee: ACTION misses hypertalk
[22:42] mikeal: sechrist: it's fun to watch the adoption curve come around
[22:42] tanepiper: the fact that i'm using JavaScript 100% across my app from db to clientside is just mind-blowing
[22:42] sechrist: mikeal: I'm slowly trying to infiltrate our codebase with node
[22:43] bingomanatee: seachrist: what is your starting codebase at present?
[22:43] sechrist: c++ and python
[22:43] sechrist: django webapp
[22:43] EyePulp: ACTION loves his time in python
[22:43] bingomanatee: oh. 
[22:43] sechrist: django seems inherently cool but a lot of the modules available suck
[22:43] bingomanatee: well from wierd to wierder shouldn't be too much of a stretch.
[22:43] sechrist: which is why people choose frameworks
[22:44] sechrist: I mean we're an early stage startup
[22:44] EyePulp: pretending any solution is one-size fits all is foolhardy.
[22:44] sechrist: so the people that chose django are seeing my node work and going "woah"
[22:44] sechrist: so that's good
[22:44] sechrist: like zombiejs -- blows minds
[22:45] tanepiper: sechrist: the app i am writing now, i started writing as django
[22:45] tanepiper: and got so frustrated it forced me to learn node + couchdb
[22:45] sechrist: we're gearing up for a launch in march so it's hard to pivot now
[22:45] sechrist: I figure we're going to launch with the architecture we have now -- and then watch it fail
[22:45] bingomanatee: couch is cool. 
[22:45] sechrist: not django but other parts
[22:45] bingomanatee: I've been doing mongodb but plan to pick up couch soon. 
[22:46] bradleymeck_: if python was not a cluster due to the "principle of least surprise" it might have made me happy, alas it makes me cry
[22:46] tanepiper: i've done apps in django before, but an e-commerce site which works on django, this site is very data heavy and doesn't really work - too much forcing django to do what I want
[22:46] herbySk has joined the channel
[22:46] tanepiper: and it throws a fit
[22:46] strmpnk has joined the channel
[22:47] bingomanatee: I suspect the ideal platform til node stabilizes is RoR upfront with node doing the heavy lifting as a REST service. 
[22:47] tanepiper: although i'll probably do out website in Drupal just because it's just content
[22:47] tanepiper: and really once it's up, it's not me dealing with it
[22:47] jamescarr: bingomanatee, whatever. I'd say use whatever works best
[22:47] bingomanatee: just kind of start with Ruby then eat away at it until its gone :D
[22:47] jamescarr: language arguments are pointless
[22:48] EyePulp: jamescarr ++
[22:48] EyePulp: =)
[22:48] bingomanatee: Does that mean I win?
[22:48] jamescarr: I prefer Spring MVC on the front end, REST services powered by RoR, SOAP services powered by node.js...
[22:48] tanepiper: EyePulp: except for hating on Ruby
[22:48] jamescarr: and a data access abstraction layer written in python
[22:48] mikeal: i don't think people realize that to be a real member of the ECMA committee on javascript you need to pay 100K per year
[22:49] jamescarr: mikeal, it's okay, he's just goingt o fork v8 
[22:49] jamescarr: then fork node.js too
[22:49] mikeal: i hope he has fun with that
[22:49] mikeal: it's insane btw
[22:49] tanepiper: because Rails brought a whole new generation of Latte sipping Mac owners who *thought* they could be web devs because it was the cool thing to do
[22:49] jamescarr: I'm guessing he's also going to fork chronium
[22:49] mikeal: not even the insanity that is happening ECMA-Harmony is good enough
[22:49] jamescarr: but my guess it's just a strawman argument to convince smarter people to implement what he wants 
[22:50] brianmario has joined the channel
[22:50] softdrink: whatever happened to freaking *learning* a language and exploiting the best of it?
[22:50] mikeal: i really don't have a lot of respect for people who have such little humility that they basically ignore all prior art and momentum to go off and do their own thing
[22:50] tanepiper: jamescarr: at least it'll keep him busy and off the nodejs list
[22:50] dmcquay has joined the channel
[22:50] mikeal: everyone is clearly wrong and nobody has thought about this like I have
[22:50] mikeal: time to for the world
[22:50] mikeal: fork
[22:51] tanepiper: mikeal: reminds me of David Mark
[22:51] tanepiper: "Every JS library is wrong, except MyLib"
[22:53] jamescarr: mikeal, once in awhile its a good thing, but I often find the people who produce better things usually dont whine on mailing lists first
[22:54] tanepiper: jamescarr: agreed, they just release and let the world see it
[22:54] mikeal: i'm 90% none of this shit will materialize 
[22:54] mikeal: people love to talk on that list
[22:54] astoon has joined the channel
[22:54] mikeal: it's getting annoying
[22:55] tanepiper: I quite happily make bold statements on IRC because, well it's IRC, but i haven't stuck my oar in on the mailing list because that's just stupid
[22:55] eikke has joined the channel
[22:56] ryah_: for the record, i whined on commonjs (then 'serverjs') for a while before i made node
[22:56] mscdex: oars are old school
[22:56] tanepiper: one day I'll release something thats worthwhile posting on the mailing list, until then i'll just occasionally send an email
[22:56] mikeal: man, commonjs must have been like 7 people talking about Rhino back then :)
[22:57] ryah_: tanepiper: what's your feature that you're wanting?
[22:57] perlmonkey2 has joined the channel
[22:57] tanepiper: me?  nothing right now, i'm happy - just looking forward to stable TLS/SSL but i know that will come naturally
[22:58] mikeal: i really need the HTTPS client :)
[22:58] blueadept has joined the channel
[22:58] linnk has joined the channel
[22:58] ryah_: yeah...
[22:58] mikeal: Salvatore is on the ChangeLog
[22:58] ryah_: my gf is going out of lunch now - maybe i can try to work on it :)
[22:58] ryah_: it's almost done
[22:58] mikeal: i don't know if i have the energy to make out what he is saying right now
[22:59] saschagehlich_: rauchg_: for which draft of the websockets implementation did you build socket.io?
[22:59] sonnym has joined the channel
[22:59] tanepiper: if anything i'd like better file system support, but i know that's for userland not core (like if something is a file or directory, if a dir does it have children, get the last modified + created time, and return it all as a nice object)
[23:00] perlmonkey2: Am I doing something wrong here?  I've ran 100,000 curl requests to this route in Express, and memory usage for node is well over 100MB and still climbing.  http://pastebin.com/hk3u0dm8
[23:00] Me1000 has joined the channel
[23:00] tjholowaychuk: perlmonkey2: what middleware are you using?
[23:01] perlmonkey2: bodydecoder, logger, cookieDecoder and session
[23:01] tanepiper: perlmonkey2: are you hammering it?  maybe gc hasn't had time to catch up?
[23:01] tj has joined the channel
[23:02] perlmonkey2: yes, I am hammering it.  Just a bash script looping 100K times over curl http://localhost:3000/rpc/test
[23:02] bingomanatee: Is there a way to listen for an event once only or do you have to code that yourself
[23:02] Guest33020: perlmonkey2: session middleware without a store will use the MemoryStore
[23:02] tanepiper: try using ab instead (apache testing tool) - lets you test more realistic connections
[23:02] perlmonkey2: tanepiper: ok, thanks :)
[23:02] tjholowaychuk: perlmonkey2: which.. of course bloats the process
[23:02] tjholowaychuk: use connect-redis etc
[23:02] tanepiper: bingomanatee: .once
[23:03] mjr_: Good HTTPS is pretty crucial.
[23:03] perlmonkey2: what's wrong with MemoryStore?
[23:03] tjholowaychuk: perlmonkey2: it stores them in memory lol
[23:03] tjholowaychuk: so, that takes memory :p
[23:03] tanepiper: bingomanatee: http://nodejs.org/docs/v0.3.5/api/events.html#emitter.once
[23:03] tjholowaychuk: it also references the request, so basically a memory leak, but you should not use it for production regardless
[23:03] perlmonkey2: hah.....but.....oh.....I'm not storing cookies with curl, so probably creating a unique session for each connection.
[23:03] hunterloftis_ has joined the channel
[23:04] perlmonkey2: wow...... tjholowaychuk that's really good to know :)
[23:04] bradleymeck_: setInterval prune! (sadly sometimes i do use it to stop leaking)
[23:05] c0nundrum has joined the channel
[23:06] mikeal: rauchg_, tjholowaychuk: is there somewhere that I can patch the socket.io website?
[23:07] mikeal: the examples are wildly out of date
[23:07] tjholowaychuk: mikeal: no clue man
[23:07] severla has joined the channel
[23:07] mape: rauchg_: Any idea when the pull request for fixing the TypeError: Cannot call method \'destroy\' of null' bug will be merged?
[23:09] rabc has joined the channel
[23:09] rabc: how can I include an external JS file to use inside node.js server ?
[23:09] tanepiper: mikeal: speak to rauchg_ ?
[23:09] mikeal1 has joined the channel
[23:10] bradleymeck_: rabc what do you mean by external? on another server?
[23:11] bitdrift has joined the channel
[23:12] jamescarr: man
[23:12] jamescarr: I love rabbitmq
[23:12] jamescarr: got php, node.js, and java all communicating over a common messaging buss
[23:12] jamescarr: *bus
[23:13] [[zz]] has joined the channel
[23:14] tanepiper: yea, someone just added a zmq endpoint to couchdb, i'd love to look at it and if it can improve my app at all - would be nice to have a common bus that can be shared over apps
[23:14] jamescarr: tanepiper, orly!?
[23:14] jamescarr: fuck fuck fuck
[23:14] tanepiper: https://github.com/benoitc/couch_zmq
[23:14] jamescarr: I need to check that shit out. ZeroMQ is pretty sweet and currently I'm doing something similar
[23:15] jamescarr: I hide a couchdb instance behind a rabbitmq broker
[23:16] rabc: bradleymeck_ yes, it's hosted on another server (like I was including in html using <script>)
[23:18] dgathright has joined the channel
[23:18] bitdrift: rauchg_: does subset retrieval currently work in mongoose?
[23:18] mikeal1: benoit *just* started that project
[23:18] sonnym has joined the channel
[23:18] mikeal1: so don't expect it to be finished yet
[23:19] bradleymeck_: rabc, you dont unless you copy it down, in general it was agreed requiring over the net was too much of an issue due to the lazy require nature we use
[23:22] amerine has joined the channel
[23:24] rabc:  bradleymeck_ yes, exactly what I thought, it makes no sense in what node.js propose
[23:27] bitdrift: anybody have experience doing subset queries with mongoose?
[23:27] bitdrift: trying to do a $slice and it just ignores me
[23:28] bitdrift: always sends the entire set back
[23:28] techwraith has joined the channel
[23:29] bitdrift: doesn't seem to let me omit properties either
[23:31] ryah_: mraleph: ping
[23:32] ryah_: mraleph: i want an SMI that represents a pointer
[23:32] tanepiper: ryah_: your comment on the list about http code, could that be the reason why a script I wrote I just get 'Killed' instead of any actual error?
[23:32] ryah_: i.e. memory address in the host platform
[23:33] alek_br has joined the channel
[23:34] davidc_ has joined the channel
[23:34] tanepiper: my assumption is it's coming from C++ land, when a remote server kills a connection because i've hammered it but i haven't had time to test it yet
[23:36] fairwinds has joined the channel
[23:36] ryah_: tanepiper: *shrug*
[23:36] ryah_: it segfaulted?
[23:37] tanepiper: no, just 'Killed'
[23:37] tanepiper: one word, no stacktrace
[23:37] formido has joined the channel
[23:37] ryah_: uh
[23:37] ryah_: do you have a core dump?
[23:38] tanepiper: no, i need to run it through a debugger, but haven't had time, but i can provide the code and what i did to test.  Basically the script checks for accept-range on a file, then sets up X connections each with a range, downloads into buffers then when done reconstitutes the file
[23:39] tanepiper: (i.e. download accelerator)
[23:40] tanepiper: i'm suspecting it's either: The request from the IP is too much and the remote server kills the connection or b) Got too much in buffers and something weird is going on 
[23:40] tanepiper: because the file i was testing was over 2Gb, so i probably hit a limit somewhere
[23:40] tanepiper: works fine with ISO-sized files
[23:41] skm has joined the channel
[23:41] eikke has joined the channel
[23:42] tanepiper: but if it's A then i should be able to handle that somehow, so i'll try debug it tomorrow evening
[23:42] tanepiper: also: Must remember to NEVER open 1000 connections again
[23:43] rabc has joined the channel
[23:43] mikeal has joined the channel
[23:44] bingomanatee: ryah_ do you have a feeling about what I asked in priv re: organizing node meetups in SF?
[23:44] tanepiper: bingomanatee: just do it already :)
[23:45] mikeal: i'm preparing for jsBBQ
[23:45] bingomanatee: thanks for the vote of support - I do want to work with the people who started node - not against them. 
[23:46] bingomanatee: If Joyent has stuff in the works that I'm working contrary to I'm not interested in diffusing their efforts. 
[23:47] mikeal: there isn't a space at Joyent HQ that can hold more than like 30 people confortably 
[23:47] mikeal: so if you have a better space you should use it
[23:47] oncenull has joined the channel
[23:48] SubStack: bbq!
[23:50] tanepiper: right, to bed or i'll end up staying up till 3am again!
[23:50] bingomanatee: Alright then I'm going to check out a space on meetup.com
[23:51] ryah_: SubStack: if you guys weren't so far, i'd come
[23:52] ryah_: ACTION cannot be shaken out of the mission
[23:54] Aikar: tanepiper: thats usually SELinux when you see "Killed" so yeah your process used too much resources for your account.
[23:55] tfe_ has joined the channel
[23:56] Qbix1 has joined the channel
[23:57] chiragrules has joined the channel
[23:59] SubStack: ryah_: oh I was just reading mikeal's mention of some kind of jsbbq
