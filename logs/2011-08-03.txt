[00:00] isaacs: what i was getting at is that you mgiht have some subclass of EventEmitter, which has some *different* "init" method 
[00:00] isaacs: hij1nx: so, when the EE ctor calls "this.init()" it'll call the child init(), not the one on EE.prototype
[00:00] matomesc has joined the channel
[00:00] just_monkey_code: only readable streams have a pipe() method.  As far as sending it somewhere else, this works in the case of my own code, but if I want to capture the error output of any (arbitrary) third party module, that solution wouldn't wor.
[00:00] caolanm has joined the channel
[00:03] TheEmpath: anyone familiar with facebook frictionless payments to know if the app callback is sync or async?
[00:05] stepheneb_ has joined the channel
[00:05] robertfw has joined the channel
[00:06] ryanfitz has joined the channel
[00:07] Laurent4 has joined the channel
[00:09] hassox has joined the channel
[00:09] CIA-65: libuv: 03Bert Belder 07master * r642d97c 10/ src/win/process.c : Windows: make process arguments buffer computation better - https://github.com/joyent/libuv/commit/642d97ced865307600a9d85257b23d61f1caa0c3
[00:10] shoe has joined the channel
[00:10] themiddleman has joined the channel
[00:11] chjj has joined the channel
[00:12] rchavik has joined the channel
[00:12] rchavik has joined the channel
[00:15] mrryanjohnston: when using everyauth, how should I store my consumer keys?
[00:15] mrryanjohnston: or any oauth protocol, for that matter
[00:15] secoif has joined the channel
[00:15] xerox: mrryanjohnston: I've seen them stored in the environment
[00:15] xerox: in some real software
[00:16] xerox: and then fetched from process.env at runtime
[00:16] mrryanjohnston: xerox: what if I wanted to eventually host it on something like nodester?
[00:16] luke` has joined the channel
[00:16] xerox: I don't think that's a problem?
[00:17] paulwe has joined the channel
[00:17] mrryanjohnston: xerox: alright i'll look into that then :) thank you
[00:17] xerox: np
[00:19] mrryanjohnston: I guess i'm just a little confused as to how I would set an environment variable on a service like nodester. don't they offer a fairly limited and defined set of commands you can issue into the ~cloud~?
[00:19] hassox has joined the channel
[00:21] korch: so i'm having a problem getting stylus to auto-recompile my css
[00:21] korch: http://pastebin.com/uFdGxGJv
[00:21] korch: looks simple, should work.
[00:22] skm has joined the channel
[00:22] xerox: mrryanjohnston: npm help json
[00:22] korch: nit picky annoyance with express: having to put things before/after defining the static directories, which seem to cause silent errors when put in the wrong order
[00:22] xerox: mrryanjohnston: /configuration
[00:22] MooGoo: hey u guys
[00:22] MooGoo: someone here pasted a link to a nodejs markov chat module
[00:23] MooGoo: catb0t needs srs help
[00:23] catb0t: needs one
[00:23] MooGoo: .quote markov http
[00:23] catb0t: 954661 <MooGoo> .quote markov http
[00:23] MooGoo: argh
[00:24] MooGoo: .quote markov http
[00:24] mrryanjohnston: xerox: sweet.
[00:24] catb0t: 954661 <MooGoo> .quote markov http
[00:24] mrryanjohnston: xerox: learn something new every day. thanks!
[00:24] xerox: mrryanjohnston: : )
[00:24] MooGoo: .quote markov
[00:24] catb0t: 510972 <SubStack> it had better be using node-markov
[00:24] SubStack: https://github.com/substack/node-markov
[00:25] MooGoo: this was something different....
[00:25] stagas_ has joined the channel
[00:25] MooGoo: perhaps it used that
[00:26] korch: oh duh, fixed my issue: tell stylus middleware to use src: /public instead of src: /public/css
[00:26] korch: thanks!
[00:26] DTrejo: korch: that has happened to about 2000 people now
[00:26] Laurent4: Hey guys, I just recently got into node.js and I am wondering what is the most popular MVC framework for node.js (or at least the most reliable for a company)?
[00:26] DTrejo: and twice to each one of them
[00:26] kenperkins has joined the channel
[00:26] DTrejo: Laurent4: probably expressjs is most widely used
[00:27] mrryanjohnston: xerox: hmmm. what if I later wanted to share this code on github, though? Would I just be sure to remove the consumer key lines from package.json before pushing?
[00:27] mrryanjohnston: (maybe a stupid question)
[00:27] boaz has joined the channel
[00:27] Laurent4: DTrejo: thanks :)
[00:28] qbit_ has joined the channel
[00:28] _bat has joined the channel
[00:29] Laurent4: I am also wondering if there are particular applications where node.js makes more sense and some other where node.js would be a big no no? (I have read a lot of articles but I cannot see where does it makes the difference) note that I am also a junior programmer less than a year xp
[00:30] bronson: Anyone know why    require('mongodb/lib/commands/query_command');  doesn't work?
[00:30] bronson: 'npm help folders' seems to indicate that it should.
[00:30] elijah has joined the channel
[00:31] tk has joined the channel
[00:33] Cromulent has joined the channel
[00:33] bronson: dammit, never mind.
[00:33] bronson: require('mongodb/lib/mongodb/commands/query_command'); works.
[00:34] bronson: endofday
[00:35] theCole has joined the channel
[00:37] brianseeders has joined the channel
[00:37] ditesh|cassini has joined the channel
[00:38] akshatj has joined the channel
[00:38] bayousoft has joined the channel
[00:38] ericmuyser has joined the channel
[00:39] admc has joined the channel
[00:42] evlapix has joined the channel
[00:42] mrryanjohnston: xerox: sorry to keep bothering you, but I set the property "config": { "twitterconsumerkey": "foo" } in the package.json file. However, this does not show up in process.env when the server is run
[00:42] storrgie has joined the channel
[00:42] cafesofie has joined the channel
[00:42] xerox: you should ask nodester people
[00:42] xerox: I don't know
[00:43] mrryanjohnston: xerox: this is locally :)
[00:43] themiddleman has joined the channel
[00:44] evlapix: Anybody have an idea why my node process would just drop mid output at different points in the program without any error?
[00:44] balupton: Hey everyone - I've created a now.js showcase wiki page - https://github.com/Flotype/now/wiki/Showcase - can everyone add their now.js apps there - will be awesome to see what everyone else is working on
[00:45] apanda has joined the channel
[00:45] xerox: mrryanjohnston: you sure
[00:46] mrryanjohnston: xerox: http://jsfiddle.net/hENBg/
[00:46] mrryanjohnston: pretty sure. i could be blind though :3
[00:47] mrryanjohnston: i've been known to do stupid things in the past
[00:47] xerox: mrryanjohnston: and then what do you do to start the program and fetch them
[00:47] Elems has joined the channel
[00:48] mrryanjohnston: ...oh.
[00:48] mrryanjohnston: welp.
[00:48] xerox: RTF(ine)M
[00:51] juli0w has joined the channel
[00:51] themiddleman has joined the channel
[00:55] tim_smart has joined the channel
[00:55] mrryanjohnston: xerox: I did read it, but it just didn't fully sink in 100% :3
[00:56] AAA_awright has joined the channel
[00:57] catb0t has joined the channel
[00:58] tauren has joined the channel
[00:58] k1ttty has joined the channel
[01:00] blaenk has joined the channel
[01:00] blaenk has joined the channel
[01:01] Sami_ZzZ____ has joined the channel
[01:02] themiddleman has joined the channel
[01:03] ngs has joined the channel
[01:04] AAA_awright has joined the channel
[01:04] JoshC has joined the channel
[01:05] tauren has joined the channel
[01:05] blaenk: meh express requires node.js below 0.5 and I have 0.5.2 :(
[01:06] ryanfitz has joined the channel
[01:06] ruprict: Anyone seen this error with jade: Object #<Object> has no method 'compile'  It was working fine, then I tried to do a clean 'npm install' and it started happening.  Happens when I try to render index.jade.
[01:07] Sami_ZzZ____ has joined the channel
[01:07] Laurent4 has joined the channel
[01:07] ruprict: https://gist.github.com/1121665 might be a bit easier to follow.
[01:08] bronson: OAKLAHOMA OAKLAHOMA OAKLAHOMA
[01:08] McMAGIC--Copy has joined the channel
[01:08] ruprict: *banging pots*
[01:11] abraxas has joined the channel
[01:12] Sami_ZzZ____ has joined the channel
[01:13] sonnym has joined the channel
[01:13] JoshC1 has joined the channel
[01:13] apalmer has joined the channel
[01:14] ruprict: Actually, getting the error on any jade view
[01:14] Swimming_bird has joined the channel
[01:15] luke` has joined the channel
[01:15] CrypticSwarm has joined the channel
[01:16] luke`_ has joined the channel
[01:17] boaz has joined the channel
[01:17] Sami_ZzZ____ has joined the channel
[01:19] eastender2 has joined the channel
[01:19] neoesque has joined the channel
[01:19] kartmetal_ has joined the channel
[01:19] kartmetal_ has joined the channel
[01:20] cjm has joined the channel
[01:20] blaenk: is there any way to force npm to install a package?
[01:21] blaenk: I want to install express and it's complaining that I have node.js 0.5.2 when it needs < 0.5
[01:22] Drakonite has joined the channel
[01:22] skm has joined the channel
[01:23] Emmanuel__ has joined the channel
[01:24] patrickgamer has joined the channel
[01:24] patrickgamer has left the channel
[01:24] jacobolus has joined the channel
[01:25] bnoordhuis: blaenk: express doesn't work with node 0.5.x
[01:25] Vertice has joined the channel
[01:25] jbrokc has joined the channel
[01:25] blaenk: bnoordhuis: oh, really. so I should revert to something before that then :/
[01:26] bnoordhuis: blaenk: yep, try 0.4.10
[01:26] blaenk: will do thanks bnoordhuis
[01:26] blaenk: bnoordhuis: do you use nvm or something like that?
[01:26] blaenk: currently I just installed it using make install
[01:26] blaenk: installed 0.5.2 I mean
[01:26] ruprict: So, no help on the jade view compile issue?  *puppy dog eyes*
[01:26] bnoordhuis: blaenk: i mostly `git clone` stuff
[01:26] blaenk: I'll do that too then :) thanks
[01:32] _bat: isaacs and marak aren't quite ready for prime time
[01:32] mjr_ has joined the channel
[01:33] elijah has joined the channel
[01:38] hassox has joined the channel
[01:39] ph^ has joined the channel
[01:40] ditesh|cassini has joined the channel
[01:42] Anton_ has joined the channel
[01:44] _bat: the packages, that is. nothing two tiny edits won't fix. https://github.com/substack/node-isaacs/pull/1
[01:45] d0na1d has joined the channel
[01:47] ale: How can I access localhost/mypage/khEsud2 with expressjs? khEsud2 is a random id created, so what should I put app.get('/:id?... ?
[01:48] mrryanjohnston: is there any reason to salt something like a twitter user id returned in an oauth transaction?
[01:48] mrryanjohnston: before putting it into a db
[01:48] mrryanjohnston: salt + hashing **
[01:48] samsonjs has joined the channel
[01:49] JumpMast3r has joined the channel
[01:49] WarriorSl has joined the channel
[01:52] harthur has joined the channel
[01:52] te-brian: Im trying to write tests for a simple REST API .. but the app requires you to be authenticated.  Not sure how to simulate authentication in the tests.  Using tobi and vows.
[01:52] hij1nx has joined the channel
[01:53] tk has joined the channel
[01:53] balaa has joined the channel
[01:55] mrryanjohnston: te-brian: how do you qualify a user as "authenticated" in your app?
[01:56] Stythys has left the channel
[01:56] te-brian: mrryanjohnston: Using mongoose-auth with twitter oauth implemented.  Will eventually add password auth and facebook.  mongoose-auth uses everyauth.
[01:57] te-brian: mrryanjohnston: Ultimately my route has a middleware that checks for req.user which is loaded my everyauth's middleware.
[01:57] eastender has joined the channel
[01:57] mrryanjohnston: ok, but within your app, a user is authenticated when a session id is set or something?
[01:58] te-brian: mrryanjohnston: I'd have to dive into everyauth to uderstand how that is loaded... but yes.. it is through connect sessions at the base level.
[01:59] te-brian: I suppose.. the easiest way would to be to use() a test-specific middleware that just sets the appropriate req vars?
[01:59] [[zz]] has joined the channel
[02:02] mrryanjohnston: well, what you'd have to do after a user authenticates, is somehow store that the user is logged in
[02:02] mrryanjohnston: so could you just say something like session.isLoggedIn = True in your tests?
[02:02] mrryanjohnston: to satisfy this condition
[02:04] monokrome has joined the channel
[02:05] kawaz has joined the channel
[02:05] brownies has joined the channel
[02:06] blaenk: are there any docs out there on how I can create middleware for connect?
[02:06] ale: How can I access localhost/mypage/khEsud2 with expressjs? khEsud2 is a random id created, so what should I put app.get('/:id?... ?
[02:06] blaenk: I actually need it for express but my understanding is one just writes it for connect since express is built on connect
[02:06] boaz has joined the channel
[02:07] mrryanjohnston: te-brian: I take that back. It looks like everyauth does that behind the scenes.
[02:07] juli0w has joined the channel
[02:07] towski has joined the channel
[02:08] mike5w3c has joined the channel
[02:09] zeade has joined the channel
[02:09] boehm has joined the channel
[02:10] blaenk: does anyone know of a good express-based project which I can use to learn how one usually structures an express project
[02:11] Sorella has joined the channel
[02:11] tjholowaychuk has joined the channel
[02:12] ale: can someone help me please?
[02:13] d0k has joined the channel
[02:13] Laurent3 has joined the channel
[02:14] yhahn has joined the channel
[02:14] eboyjr has joined the channel
[02:14] mrryanjohnston: ale: http://expressjs.com/guide.html#routing
[02:14] mrryanjohnston: ale: pretty straight forward. just grab the :id with req.params.id
[02:14] towski has joined the channel
[02:15] bartt has joined the channel
[02:15] ale: yes, but I don't understand how the url is sent
[02:16] stepheneb has joined the channel
[02:16] ale: mrryanjohnston: I mean localhost/mypage/khEsud2
[02:17] eboyjr has joined the channel
[02:17] mrryanjohnston: ale: '/' is your root (localhost in this case)
[02:17] perezd has joined the channel
[02:17] mrryanjohnston: so then '/mypages/:id'
[02:17] towski has joined the channel
[02:19] baudehlo has joined the channel
[02:19] ale: mrryanjohnston: I get The requested URL /testnode "The requested URL /testnode/yes was not found on this server."
[02:19] jMerliN has joined the channel
[02:20] apalmer has joined the channel
[02:22] ale: mrryanjohnston: Can you please help me?
[02:22] allnatelong has joined the channel
[02:22] puffpio has joined the channel
[02:25] mrryanjohnston: ale: post your code in a jsfiddle
[02:25] mrryanjohnston: little hard to help without the source
[02:26] ale: http://jsfiddle.net/VgKKg/
[02:27] mrryanjohnston: ale: get rid of the ?
[02:28] airportyh has joined the channel
[02:28] ale: mrryanjohnston: then I should access to http://localhost/testnode/123 ??
[02:28] mrryanjohnston: yep
[02:29] ale: I get 404
[02:29] ale: mrryanjohnston: maybe because it should not be inside io.sockets.on('connection',...???
[02:30] mrryanjohnston: ah I didn't even see that
[02:30] eboyjr has joined the channel
[02:30] mrryanjohnston: yeah dont' decalre routes insite of sockets.on
[02:30] mrryanjohnston: yikes that's pretty bad. I need sleep.
[02:30] mrryanjohnston: gnmight
[02:30] cccaldas has joined the channel
[02:31] ale: where should I put it?
[02:31] ale: mrryanjohnston
[02:32] michaelh_ has joined the channel
[02:33] guillermo has joined the channel
[02:37] ale: someone else?
[02:38] ale: where should I put the app.get('/testnode/:id',....?? on the server.js on the html? where?!
[02:39] _bat has joined the channel
[02:39] chjj: usually people put routes wherever they created their server/app object
[02:39] chjj: you can organize them differently though
[02:40] ale: Pardon me? In the server.js then?
[02:40] chjj: sure
[02:41] ale: The thing is that it's not entering to it, I mean is this alright? http://jsfiddle.net/VgKKg/1/
[02:42] tauren has joined the channel
[02:42] Robin has joined the channel
[02:43] ale: chjj, any idea?
[02:43] niftylettuce: jesusabdullah: herro preesh
[02:44] niftylettuce: tjholowaychuk: hey do you have any Canada/Bell retailers near you that sell HTC Desire Z?
[02:44] tjholowaychuk: niftylettuce no clue
[02:44] tjholowaychuk: i have an htc... something haha
[02:44] tjholowaychuk: not a huge fan of it though
[02:45] __directory: i have a jitterbug mang
[02:45] niftylettuce: tjholowaychuk: i've been researching like a mad man, found the perfect model to take advantage of my carrier with and now I just need to get it
[02:45] __directory: best phone ever
[02:45] emmanuel has joined the channel
[02:45] chjj: ale: whats the problem?
[02:46] niftylettuce: tjholowaychuk: apparently this particular phone made by Bell/HTC can get around a lot of restrictions by my carrier since it is not in its database
[02:46] tjholowaychuk: weird
[02:46] niftylettuce: go canada!
[02:46] isaacs has joined the channel
[02:47] ale: chjj, I put a static .get, see: http://jsfiddle.net/VgKKg/2/ but then I access http://localhost/testnode/hey and I get 404 Not Found! Why can this be?
[02:47] ale: chjj: maybe because of folder structure??
[02:48] chjj: ale: is that your entire file? youre not listening on your http server
[02:48] chjj: try just doing app.listen(8080) for starters
[02:48] chjj: also, `alert` is not a js function
[02:49] willwhite has joined the channel
[02:49] dhasenan_ has joined the channel
[02:50] joshthecoder has joined the channel
[02:50] dherman has joined the channel
[02:51] boaz has joined the channel
[02:52] jerrysv has joined the channel
[02:52] ale: chjj: but I am listening on port 81 with socket.io
[02:52] brianloveswords has joined the channel
[02:52] ale: chjj, should I open 2 ports? 1 for http and other one for express?
[02:52] __directory: !
[02:53] odie5533: Is there a way to compile nodejs programs into a single exe file?
[02:53] gg777 has joined the channel
[02:53] ag4ve has joined the channel
[02:54] __directory: I don't think so
[02:54] d0k has joined the channel
[02:56] sethetter has joined the channel
[02:56] odie5533: the node.exe is 10MB. I could probably just package it with my programs. But for comparison, my packaged exe of a python program is only 6MB.
[02:57] mikeycgto has joined the channel
[02:57] mikeycgto has joined the channel
[02:57] tiglionabbit_ has joined the channel
[02:58] rgmarcha has joined the channel
[02:58] odie5533: UPX packs node to 5MB
[02:59] blaenk: anyone know of some way to parse versions? I'm looking through the npm source to see how it does it
[02:59] blaenk: like to compare 0.8.6 with 0.8.7 and realize the latter is higher
[02:59] xerox: node-semver
[03:01] blaenk: xerox: thank you very much :)
[03:01] xerox: no problem ( :
[03:02] yuroyoro has joined the channel
[03:02] blaenk: xerox: oh man THAT'S AWESOME!!!
[03:02] blaenk: thanks again!!
[03:02] xerox: same as before!
[03:03] jasong_at_apache has joined the channel
[03:05] CrabDude has joined the channel
[03:05] azeroth__ has joined the channel
[03:06] __directory: whoops
[03:10] eastender has joined the channel
[03:13] willwhite has joined the channel
[03:13] te-brian has joined the channel
[03:18] newy has joined the channel
[03:22] raphael has joined the channel
[03:23] willwhite has joined the channel
[03:23] raphael: has anyone used node.js on arm?
[03:24] stepheneb has joined the channel
[03:24] nightshift has joined the channel
[03:24] domo: raphael: not here, but what are you doin gwith it
[03:24] domo: just curious :)
[03:25] bradleymeck has joined the channel
[03:25] piscisaureus has joined the channel
[03:26] raphael: domo> I work an embedded software engineer for my day job. We currently run on PPC, but we're moving to ARM soon. I basically wrote my own light weight, event based HTTP server/proxy for AJAX and COMET calls.
[03:26] raphael: After we move to ARM, I'm really looking forward to using something like node.js
[03:27] raphael: I believe it should be faster, and leaner than something like python twisted, or tornado, yes?
[03:29] raphael: I use libevent for my current implementation. 
[03:30] perezd has joined the channel
[03:32] konobi: raphael: nodejs runs on webos =0)
[03:32] raphael: konobi: good to know.
[03:33] konobi: so runs on arm on the palm pre 2/3 and the touchpad
[03:33] alexhq has joined the channel
[03:33] konobi: there's a few articles online on how to cross-compile node for arm
[03:33] raphael: yes. 
[03:33] blaenk: how do I pass a relative path (a file in the same dir) to fs.readFile ? do I concat it to __dirname ?
[03:33] konobi: http://fastr.github.com/articles/cross-compiling-node.js-for-arm.html
[03:34] konobi: (for example)
[03:34] blaenk: yeah __dirname + '/' + file works
[03:34] konobi: raphael: not only is nodejs on webos, it's an integral part
[03:34] blaenk: is that the preferred way?
[03:34] willwhit_ has joined the channel
[03:35] konobi: blaenk: http://nodejs.org/docs/v0.4.10/api/path.html
[03:35] hassox has joined the channel
[03:35] raphael: konobi> Thanks. I struggle compiling my own modules at times using the built in waf.
[03:35] CrabDude_ has joined the channel
[03:36] blaenk: konobi: so I should use join? like join('.', 'fileindir')
[03:36] konobi: raphael: yeah, getting some libs to cross-compile correctly might be fun and require some manual work, but should be doable
[03:36] konobi: blaenk: there's also normalize
[03:36] caolanm has joined the channel
[03:37] blaenk: konobi: so normalize('./fileindir')
[03:37] willwhite has joined the channel
[03:37] konobi: blaenk: TIAS
[03:37] raphael: konobi: doing a few days of cross compilation isn't bad if you can do away with writing everything in C. 
[03:38] blaenk: yup normalize didn't work
[03:38] caolanm has joined the channel
[03:38] blaenk: neither did join
[03:38] blaenk: I think it's cause I'm in an express app and this code is required in the actual app.js
[03:38] konobi: caolanm: oioi
[03:38] mattcodes has joined the channel
[03:42] newy has joined the channel
[03:43] replore_ has joined the channel
[03:45] willwhit_ has joined the channel
[03:47] vipaca has joined the channel
[03:47] perezd has joined the channel
[03:47] mike5w3c_ has joined the channel
[03:48] willwhite has joined the channel
[03:51] willwhit_ has joined the channel
[03:52] newy has joined the channel
[03:52] boehm has joined the channel
[03:52] caiges has joined the channel
[03:53] tmzt: how does this affect node?
[03:53] tmzt: Neither the inner nor the outer functions may contain heap-allocated variables. (In practice, this means that neither function may contain lexical closures.)
[03:54] Isaiah has joined the channel
[03:54] tmzt: (referring to inlining in v8)
[03:54] jed has joined the channel
[03:54] tmzt: http://wingolog.org/archives/2011/08/02/a-closer-look-at-crankshaft-v8s-optimizing-compiler
[03:54] hacksparrow has joined the channel
[03:56] kenperkins has joined the channel
[03:56] caolanm has joined the channel
[03:56] ryanfitz has joined the channel
[03:57] theCode has joined the channel
[03:58] airportyh has joined the channel
[03:58] tiglionabbit_ has joined the channel
[04:00] jslatts has joined the channel
[04:02] puffpio has joined the channel
[04:02] caiges has joined the channel
[04:07] materialdesigner has joined the channel
[04:11] willwhite has joined the channel
[04:11] pifantastic has joined the channel
[04:11] kriszyp has joined the channel
[04:13] AvianFlu has joined the channel
[04:13] wookiehangover has joined the channel
[04:15] odie5533: whats the best book/site for learning nodejs?
[04:15] wookiehangover: odie5533: the site you build yourself ;)
[04:15] odie5533: but it only says hello world. and I stole like 99% of the code.
[04:16] mscdex: odie5533: here's a start: http://nodebeginner.org/ http://nodetuts.com/ http://www.youtube.com/watch?v=jo_B4LTHi3I http://nodeguide.com/ http://howtonode.org/
[04:16] tjholowaychuk: odie5533 dig in and create a little web framework or something
[04:16] tjholowaychuk: referencing existing projects is the best way to learn
[04:16] wookiehangover: are you trying to learn about servers in general, or just about the node api?
[04:16] wookiehangover: ya, express is a good place to start
[04:16] odie5533: wookiehangover: Node API. I want to work with sockets, not build websites.
[04:16] hij1nx has joined the channel
[04:16] tjholowaychuk: ah well maybe create a little tcp chat or something i dunno
[04:17] tjholowaychuk: no substitute for diving right
[04:17] tjholowaychuk: in
[04:17] cccaldas has joined the channel
[04:17] wookiehangover: odie5533: listen to tj
[04:17] tmzt: express is a good place to progress to
[04:17] tmzt: but learn to work without it first
[04:17] tjholowaychuk: i can only speak for myself but i dont really retain information without using it
[04:18] tjholowaychuk: which is partly why I make so much shit
[04:18] tjholowaychuk: haha
[04:18] Nexxy: tjholowaychuk, !
[04:18] tjholowaychuk: Nexxy !
[04:18] mscdex: !
[04:18] Nexxy: !
[04:19] hij1nx: !
[04:19] odie5533: @
[04:19] Nexxy: wow, you had to ruin it didn't you odie5533 
[04:19] mscdex: c(_8(|)
[04:19] odie5533: D:
[04:19] Nexxy: ;P
[04:19] jakehow has joined the channel
[04:19] AvianFlu: >8^)
[04:20] wookiehangover: (╯‵Д′)╯彡┻━┻
[04:20] Nexxy: (>^-^)>
[04:20] mscdex: crazy unicode bytes!
[04:20] hij1nx: tjholowaychuk: insightful comments. thx for your input. i'll leave it at that.
[04:20] mscdex: bytes/boxes
[04:20] mscdex: :-D
[04:20] aoberoi has joined the channel
[04:20] tjholowaychuk: hij1nx np. it's a really tough call
[04:20] Nexxy: in soviet russia, unicode byte you!
[04:21] tjholowaychuk: but at least it will help everyone figure out some rules for what gets into core
[04:21] tmzt: byte unicode you
[04:21] mscdex: in soviet node.js, logos design you?
[04:21] Nexxy: lol
[04:21] tmzt: are there supposed to spaces in that thing?
[04:21] tjholowaychuk: ACTION sucks at naming projects
[04:21] tjholowaychuk: chaos is probably not a good name
[04:22] Nexxy: I'm amazing at naming projects
[04:22] tjholowaychuk: doesn't sound very trust worthy haha
[04:22] mscdex: tjholowaychuk: formula: node-{main function/feature}
[04:22] tjholowaychuk: haha
[04:22] tjholowaychuk: this isn't a node project actually
[04:22] tmzt: tj, let substack do it
[04:22] wookiehangover: http://www.codinghorror.com/blog/2011/04/working-with-the-chaos-monkey.html
[04:22] wookiehangover: choas monkey
[04:22] tjholowaychuk: ahaha
[04:22] Nexxy: when in doubt, go with a portmanteau
[04:22] mscdex: if it's not a node project, it's not worth naming
[04:23] tmzt: oh, way ot but I need a message queue that works with php
[04:23] tmzt: anybody know one
[04:23] theCode has joined the channel
[04:23] mscdex: zeromq?
[04:23] mscdex: rabbitmq?
[04:23] mscdex: nodeturtlemq?
[04:23] tmzt: okay
[04:23] tmzt: hah
[04:24] tmzt: there's a lot of stuff I could do easily in node, but we use php
[04:24] Nexxy: well stop it
[04:24] mscdex: http://www.rabbitmq.com/devtools.html#php-dev
[04:24] mscdex: fwiw
[04:24] AvianFlu: the only way to make it go away is to stop acknowledging that it exists
[04:25] tmzt: thanks
[04:25] tmzt: AvianFlu: I'm going to play with evented php when such a thing exists, if it ever does
[04:25] Nexxy: AvianFlu, that doesn't work with people though
[04:25] Nexxy: (I tried it)
[04:25] tmzt: but first it needs to stop trying to be a preprocessor/ssi replacement
[04:25] AvianFlu: well of course not, you can't just get rid of people
[04:25] AvianFlu: I'm talking about bad ideas
[04:25] Nexxy: oh can't I? >;3
[04:26] willwhite has joined the channel
[04:26] AvianFlu: ...............................................where's the door again?
[04:26] mscdex: heh! http://phpdaemon.net/
[04:26] mscdex: node.php!
[04:26] Lorentz: node-powered php?
[04:27] mscdex: php-powered node?
[04:27] willwhite has joined the channel
[04:27] tmzt: oh, what's that really cool analytics package for node, it might have been a featured project or something
[04:27] tmzt: there' sa bout 1000 in google now :)
[04:27] perezd has joined the channel
[04:27] tmzt: mscdex: amazing, we have to upgrade to 5.3 first though :) it has anonymous functions and stuff
[04:29] Guest90749: wow node.php!!!
[04:30] AvianFlu: 4PHP is the devil
[04:30] tmzt: still has threads though
[04:31] AvianFlu: 4Oh no who gave the devil threads!
[04:31] willwhite has joined the channel
[04:31] Guest90749: its russian
[04:31] Guest90749: this could be _huge_
[04:32] mscdex: it'd be interesting to benchmark phpdaemon against node
[04:32] mscdex: see how they compare
[04:32] tmzt: would be good to get fastcgi actually supported in node, I I know samcday was working on it
[04:33] tmzt: oh yeah, parse_str is still in php
[04:34] blaenk: hey guys are there specialized functions or libraries out there which have a method for merging two arrays into a key/value object?
[04:34] tmzt: I can't belive it, it's something like take this random string and assign it's parts to any variables you choose
[04:34] secoif has joined the channel
[04:34] blaenk: currently the way I did it was to iterate and form it, was just wondering if there were a more elegant way :)
[04:34] Guest90749: some ab it
[04:35] JakeyChan has joined the channel
[04:35] mscdex: blaenk: you mean one as keys and the other as values?
[04:35] blaenk: mscdex: yep exactly. one array for values and one for keys, both same sized
[04:35] tmzt: tjholowaychuk: is express-resource yours? is there a good example of controllers/resources in their own *.js files loaded by a core app.js?
[04:35] blaenk: on ruby I did something like h = Hash[a.zip b]
[04:35] tjholowaychuk: tmzt: i'd just use fs.readdir and auto-load them in
[04:36] tjholowaychuk: https://github.com/visionmedia/express/blob/master/examples/route-loading/boot.js
[04:36] tjholowaychuk: something like that
[04:36] AvianFlu: tmzt: honest question: what do you want fastcgi in node for?
[04:36] tmzt: AvianFlu: easier to plug into apache (if you must)
[04:36] blaenk: underscore has .zip but I don't know how to go from there to a k/v: http://documentcloud.github.com/underscore/#zip
[04:36] tmzt: for instance, with cpanel, I must :)
[04:37] AvianFlu: makes sense
[04:37] tmzt: also means it can be spawned easier, as the core script becomes something like dispatch.njs
[04:37] tmzt: which is just AddType'd like anything else
[04:38] tmzt: I had this working on another shared host
[04:38] tmzt: without root access or anything like that
[04:38] tmzt: just shell :)
[04:38] AvianFlu: interesting
[04:38] mscdex: blaenk: there is no more efficient way with js
[04:39] blaenk: mscdex: I appreciate it thanks
[04:39] AvianFlu: that's kind of a neat idea... don't take it personally if I continue not using apache though lol
[04:39] tmzt: so you just add a #!/home/user/bin/node to the top of dipatch.njs
[04:39] tmzt: AvianFlu: I won't, I don't either :)
[04:39] AvianFlu: that's definitely some clever shit, there, though
[04:40] newy has joined the channel
[04:40] tmzt: but it makes little sense to have a real time api that has to wait for the php interpreter to start, load a session from disk, and process an event
[04:41] tmzt: and as far as I can tell, php fastcgi still starts an interpreter for each request, even if it keeps somethings around between them
[04:43] aoberoi has joined the channel
[04:43] caolanm has joined the channel
[04:43] edude03 has joined the channel
[04:44] tmzt: 23:49 < jasong_at_apache> after backbone does it's thing i use express and express form for further validation
[04:44] tmzt: 23:50 < jasong_at_apache> (on the nodejs side of things)
[04:44] tmzt: from #documentcloud 
[04:45] tmzt: express-resource needs more publicity :)
[04:45] tmzt: since the model should match backbone quite well
[04:45] aoberoi has joined the channel
[04:46] Peniar has joined the channel
[04:46] tjholowaychuk: tmzt i have auto-rest stuff for that too
[04:47] tjholowaychuk: not open source yet
[04:47] tmzt: sweet
[04:47] tjholowaychuk: but for example if you define app.get('/forum/:fid') and '/forum/:fid/thread/:tid'
[04:47] tjholowaychuk: you'll get:
[04:47] tmzt: what about orm layer? I know there's quite a few of them
[04:47] tjholowaychuk: (on the client side)
[04:47] loveshine_ has joined the channel
[04:47] tjholowaychuk: forum(5).thread(2).get(function(thread){ ... })
[04:48] tjholowaychuk: forum(5).del(function(){}) etc
[04:48] tmzt: on the client side?
[04:48] tjholowaychuk: well anywhere i guess
[04:48] tjholowaychuk: so you could apply it to /api only
[04:48] tmzt: I mean how does that work
[04:48] tjholowaychuk:  /api/*
[04:49] tjholowaychuk: magic
[04:49] chrisdickinson: tjholowaychuk: sort of in the style of slumber? http://slumber.in/
[04:49] tmzt: I'm missing the context of those lines
[04:49] tjholowaychuk: looks kinda similar
[04:50] tjholowaychuk: tmzt basically intead of doing $.get('/api/users/5').complete(fn) blah blah in jquery or whatever
[04:50] tjholowaychuk: user(5).get(fn)
[04:50] tjholowaychuk: etc
[04:50] tmzt: ah, cool
[04:51] tjholowaychuk: the transport itself is pluggable but it's easy to plugin jquery or whatever
[04:51] tmzt: it's also like to see a dnode that works outside of it's callback (yo SubStack)
[04:51] Nuck: I've come to realize I suck at using git.
[04:52] tmzt: Nuck: what's the issue?
[04:52] Nuck: Somebody know a good intro to gitting?
[04:52] mikeal has joined the channel
[04:52] Nuck: tmzt: I understand it through analogies to stuff like SVN :P
[04:52] tmzt: everything is a sha1
[04:52] tmzt: if you cat stuff in .git/info like tags and branches that's what you'll find
[04:52] tmzt: they act like symlinks
[04:53] ph^ has joined the channel
[04:53] tmzt: you can checkout any sha1 in the repo, whether it's a named branch/tag or not
[04:53] Lorentz: Nuck: You just gotta keep using it to get it slowly, there's only so much pictures/graphics/description can do
[04:53] Lorentz: It's a bit of a jump from svn for sure
[04:53] tmzt: it's very clean, elegant and consistent
[04:53] tmzt: and not really like svn :)
[04:54] mikeal has joined the channel
[04:55] felixge has joined the channel
[04:55] felixge has joined the channel
[04:55] Nuck: I can push, I can clone, I can pull.
[04:55] Nuck: And I can tag and branch
[04:56] Lorentz: But you can't commit?
[04:57] Nuck: no, I'm afraid I can't :P
[04:57] Nuck: lol
[04:57] tmzt: git add <whatever>
[04:57] tmzt: git commit -a -m 'message'
[04:57] Nuck: ACTION just uses TortoiseGit lol
[04:57] Nuck: (though I can use the CLI one, it's just hard on Windows)
[04:57] tmzt: it works fine, use msysgit
[04:57] Nuck: I use the git command directly on Linux
[04:58] tmzt: and cygwin as as the shell
[04:58] Nuck: tmzt: The integration into the OS sucks on that
[04:58] tmzt: nah, git bash here :)
[04:58] Nuck: Getting into my normal OS filesystem is a bitch
[04:58] tmzt: ln -sf /cygdrive/c /c
[04:58] tmzt: ln -sf /c/Users/%user%/Documents docs
[04:59] tmzt: is what I do, then if I want something else shared between the windows home and cygwin home I can symlink it too
[04:59] Nuck: tmzt: I still prefer TortoiseGit
[04:59] Nuck: Though once I have more people programming with me
[04:59] tmzt: cool, haven't used it
[04:59] Nuck: I'm gonna probably eventually switch to SmartGit
[04:59] losing has joined the channel
[04:59] Lorentz: I don't do git on windows
[04:59] Nuck: Since it's better for team management (more focus on code review)
[04:59] Lorentz: I have a seperate machine on the network with linux on it to develop linux stuff, if I want stuff done on windows, if that makes sense
[05:00] tmzt: there's also gerrit, you need a java server but it's free
[05:00] Lorentz: Never liked cygwin either
[05:00] Nuck: I don't mind Cygwin for my testing
[05:00] Nuck: I do use it
[05:00] tmzt: I also use gitolite for hosting repos in a central place
[05:00] Nuck: I just prefer a GUI for my VC
[05:00] Nuck: tmzt: Same
[05:00] Lorentz: I generally don't use windows for development, period. Entertainment and vidya and etc only.
[05:00] tmzt: Lorentz: makes sense, I"m running gedit off a netbook on by windows 7 laptop
[05:00] Nuck: I was so proud yesterday, I set up gitolite on my snazzy new VPS without fucking up once.
[05:00] tmzt: using cygwin X because I haven't gotten the other one compiled yet
[05:01] tmzt: Nuck: it's awesome, the only thing I can't get working is per repo hooks installed from the home directoy, they work if I put them in the repository directly
[05:01] Nuck: The main thing I have problems with on git is the shit like "fast-forward" and such
[05:01] Nuck: It doesn't make sense to me :S
[05:01] tmzt: when it works it doesn't have to
[05:02] tmzt: but basically it's walking a linked list looking for commits in common between to repositories
[05:02] Nuck: I know, but I have had issues where I accidentally get my remote and working copies all fucked up to where it has this odd issue if I try to push
[05:02] tmzt: if they diverge but don't conflict (patch hunk level) it merges them automatically
[05:02] Lorentz: Nuck: It just means you need to fast forward, literally, your branch is old etc
[05:02] Lorentz: git pull and it'll be right up
[05:02] tmzt: with gitolite use + when you push
[05:02] tmzt: a fast forward
[05:02] tmzt: or non-fast forward
[05:02] Nuck: Lorentz: Yes, but HOW did I fuck up.
[05:03] Lorentz: Did you get a merge conflict?
[05:03] Nuck: When I'm the only one on my team
[05:03] tmzt: Nuck: you tried to push a branch without merging the new changes
[05:03] Nuck: merging new changes?
[05:03] Nuck: Isn't that what commit does?
[05:03] tmzt: it's a warning, but gitolite will block it unless you have + permission *and* you use + in the name of the remote
[05:03] Lorentz: See, git isn't like svn where there's only one absolute file structure thing
[05:03] tmzt: Nuck: no, commit commits to your local copy
[05:03] tmzt: only
[05:03] Lorentz: There are branches, and by branches it means it literally, not svn's way of "oh just copy everything"
[05:04] Nuck: tmzt: I grasp the distributed concept, it makes sense to me.
[05:04] perezd has joined the channel
[05:04] Nuck: Lorentz: What's the difference in results?
[05:04] Nuck: Doesn't git store by deltas?
[05:04] tmzt: yeah
[05:04] Nuck: So as I commit, shouldn't it just toss more deltas onto my branch?
[05:05] tmzt: it does
[05:05] Nuck: And then if I merge back, that's easy
[05:05] Nuck: I can use a merge tool easily
[05:05] mhauri has joined the channel
[05:05] Nuck: But what is fast-forward?
[05:05] tmzt: it *is* a merge tool
[05:05] Nuck: ...
[05:05] Nuck: WAT
[05:05] tmzt: but it merges commits, not files
[05:06] Nuck: fast-forward does?
[05:06] tmzt: Nuck: fast forward just means your branch was behind another one
[05:06] necrodearia has joined the channel
[05:06] tmzt: or the one you are pushing to is behind you
[05:06] mike5w3c has joined the channel
[05:06] Nuck: Shouldn't a branch be the same way?
[05:07] tmzt: so you are fast forwarding that branch to the same place
[05:07] tmzt: huh?
[05:07] Nuck: I'm used to the traditional VC system, where you keep the stable "master", and work on branches
[05:07] unlink has joined the channel
[05:07] Nuck: Then you merge back when you've got stable code
[05:07] tmzt: you can work anyway you choose
[05:07] mwhooker has joined the channel
[05:07] tmzt: in that case you can merge, or you can cherrypick
[05:07] Nuck: So whenever I merge a branch, do I fast-forward?
[05:07] bronson: No, git does not store by deltas.  It stores snapshots of entire files.
[05:08] Nuck: Since the master is not being committed to?
[05:08] bronson: It just uses delta compression to store them
[05:08] tmzt: git is a dvcs but with something like gitolite you can use it as a central vcs
[05:08] tmzt: bronson: but if a blob is a diff what's the difference?
[05:08] bronson: gah, uses delta compression to save the blobs.  But the blobs themselves are the full file contents.
[05:08] lupomontero has joined the channel
[05:08] bronson: tmzt, that's the point.  Blobs aren't diffs.
[05:09] bronson: They
[05:09] Lorentz: are blobs
[05:09] bronson: 're the actual file contents.
[05:09] JakeyChan: hi, How can I create JSON server ?
[05:09] bronson: Lorentz, thanks.  :)
[05:09] tmzt: JakeyChan: listen to requests and parse and emit json
[05:09] Nuck: tmzt: I know, but my master is just stable code, the branches are what I'm working on.
[05:09] JakeyChan: do you have document ?
[05:09] lupomontero has joined the channel
[05:09] tmzt: expressjs.com
[05:09] tmzt: work from there
[05:09] tmzt: we'll help if you have specific  questions
[05:09] Nuck: So what's the usual process for merging a working branch?
[05:09] JakeyChan: tmzt, but sometimes the server should have security issue. so do I need token or some another  solution ?
[05:10] tmzt: JakeyChan: you need some solution but that has little to do with it being a JSON server
[05:10] JakeyChan: tmzt, the client get the JSON data from javascript
[05:10] Xano has joined the channel
[05:10] tmzt: Nuck: that's up to you, there are workflow questions all over stackoverflow if you want to read up on it
[05:10] Nuck: So, with fast-forward, the branch's history gets flattened into the branch I'm merging into?
[05:10] Nuck: Or what?
[05:10] tmzt: JakeyChan: right
[05:11] tmzt: Nuck: no, there are commands to do that but I belive FF just moves a pointer to the HEAD
[05:11] JakeyChan: tmzt, do you know which framework can do this job ? :)
[05:11] pquerna: mjr_: always wanted to go, never was able/had time off/not too busy before... this year, fuck it, just take vacation days
[05:11] tmzt: Nuck: which is why I mentioned sha1's being what branches/tags refer to internally
[05:11] tmzt: JakeyChan: express, the url I just gave you
[05:11] ryanj has joined the channel
[05:11] Nuck: JakeyChan: Session Store, which uses Cookies?
[05:11] tmzt: I use it for json all the time
[05:11] Nuck: tmzt: Oi, git is fucking complex. :/
[05:11] AvianFlu has joined the channel
[05:12] tmzt: Nuck: it's simple in it's complexity
[05:12] tmzt: Nuck: basic work flow
[05:12] Nuck: I'll just stick to my lack of knowledge for now D:
[05:12] JakeyChan: thanks :DD
[05:13] tmzt: git init' git commit -a -m 'initial commit'; git add test.c; git branch working-branch; git remote add origin git@server:new-project; git push origin master; git checkout working-branch; git push origin working-branch; vi test.c; git commit -a -m 'made it do something'; git push; git checkout master; git merge working-branch; git push
[05:14] Nuck: I know how to do the basics
[05:14] Nuck: I just thought there was more to it than what I knew lol
[05:14] Nuck: It seems so powerful
[05:15] iFire has joined the channel
[05:15] tmzt: there are, but you can learn the additional things when either something basic doesn't work, or you do want to flatten, cherrypick, rebase, etc.
[05:15] ecin has joined the channel
[05:15] Nuck: How do I apply a patch and have it include the author's name?
[05:15] Nuck: I've seen that on github a lot
[05:15] tmzt: git apply < patch.patch
[05:16] Nuck: And that keeps the author's name?
[05:16] tmzt: there's also git am which I think uses a mime message, not sure about that
[05:16] loveshine_ has joined the channel
[05:16] Nuck: hmmm
[05:16] tmzt: which you prepare with git prepare-patch or prepare-mail or whatever
[05:16] tmzt: er, git prepare
[05:16] Nuck: Now, does anyone know of a good deployment system using hooks on gitolite?
[05:17] Nuck: For Node, namely
[05:17] Nuck: Or will I hafta write it myself? :P
[05:17] Waha has joined the channel
[05:17] fangel has joined the channel
[05:17] tmzt: I just do ssh GITDIR= git pull
[05:17] tmzt: or something like that
[05:17] tmzt: which, if you use cluster will restart the node instance
[05:18] skm has joined the channel
[05:19] Nuck: I just want it to be set up where I can push to a branch, and it'll check that I was the one who committed it, and have it do rolling restarts among my servers
[05:19] tmzt: there's examples to do that, the hook gets a bunch of info about the commit as env vars
[05:22] Nuck: There any adaptors built to call a Node task to handle that?
[05:22] ph^ has joined the channel
[05:22] mikeal has joined the channel
[05:22] Nuck: I need a very basic way to do deployments
[05:23] tmzt: you can watch file changes
[05:23] tmzt: or maybe get it to handle a signal
[05:23] Nuck: I just want it to pull code from my git repo and then restart the node instance.
[05:23] Nuck: I can probably communicate via a socket.
[05:23] Swizec has joined the channel
[05:23] tmzt: ssh and run a script
[05:24] tmzt: from the hook
[05:24] Nuck: eh
[05:24] Nuck: that could work, I guess.
[05:24] Nuck: but it'd make scaling a bitch
[05:24] tmzt: it's a little slow, but at least it reports back to the calling git process
[05:24] tmzt: hmm
[05:24] __class__ has joined the channel
[05:25] Nuck: I want a setup where I can add servers to some list with "batches" and have them restart a batch at a time
[05:25] Nuck: So I never go under capacity
[05:25] Nuck: I can implement that via JSON, I imagine.
[05:25] tmzt: on the same server?
[05:25] Nuck: Could a secondary node instance on each server be used to recieve commands to restart?
[05:26] Nexxy: Nuck, are you describing haibu?
[05:26] Nexxy: https://github.com/nodejitsu/haibu
[05:27] EvRide has joined the channel
[05:28] davidascher has joined the channel
[05:28] mscdex: it's like haiku, but with a b instead of a k!
[05:29] mscdex: i wonder if node compiles on haiku
[05:29] Nuck: WTF is Haiku?
[05:30] materialdesigner: how the hell do I print out a function?
[05:30] mscdex: BeOS clone
[05:30] mscdex: materialdesigner: the source code?
[05:30] mikeal has joined the channel
[05:30] materialdesigner: it's in an object
[05:31] mscdex: materialdesigner: you want to print out the function's source code or what?
[05:31] materialdesigner: yeah
[05:31] mscdex: materialdesigner: just use .toString() on it
[05:31] aah has joined the channel
[05:31] materialdesigner: aha
[05:32] blaenk: what is the library that makes some things sync?
[05:32] blaenk: er, badly worded. I'll try to find it myself
[05:32] Me1000 has joined the channel
[05:32] Nuck: sync? ewwwwwwwwww
[05:33] materialdesigner: I'm getting a 411 length required error when returning to a callback uri from within everyauth
[05:33] materialdesigner: if I curl it with the appropriate data, I get a proper JSON response
[05:33] mscdex: blaenk: do not want!
[05:33] blaenk: well maybe you have some advice
[05:33] mscdex: :p
[05:34] Nuck: hmmmm
[05:34] blaenk: when I initiate my object I have it do some things at initialization
[05:34] Nuck: Haibur looks nice
[05:34] Nuck: But too heavy for my taste
[05:34] blaenk: for example, contact an api to figure out how to set itself up
[05:34] joshthecoder has joined the channel
[05:34] Nuck: I might tear it down and study it a bit though
[05:34] blaenk: how can I ensure that this process has finished before the object actually gets used
[05:34] materialdesigner: use callbacks
[05:35] tmzt: Nuck: cluster is a little more basic
[05:35] materialdesigner: blaenk: that was at you
[05:35] jed has joined the channel
[05:35] mscdex: blaenk: don't set the variable until the api response has come back
[05:35] blaenk: yup that's what I'm doing
[05:36] blaenk: actually, you mean dont return new Thing until it has come back?
[05:36] Nuck: BAsically, with callbacks, there's very little "return"
[05:37] Nuck: like, fs.readFile() doesn't return anything useful, AFAIK
[05:37] Nuck: But it takes a callback
[05:37] Nuck: Which recieves the stuff you want
[05:38] Nuck: oh goody, cluster is one of tj's things
[05:38] Nuck: sweet
[05:38] blaenk: yeah, I'm familiar with that. I'm actually also using fs.readFile on initiation
[05:38] EvRide has joined the channel
[05:38] blaenk: see basically what I'm doing is that, on the constructor, I ask an api what version it's on, then based on that I read a file.json into a variable of that object
[05:38] blaenk: other methods in that 'class' depend on that variable
[05:39] blaenk: so I'm wondering how I can ensure that the variable is set before any methods are used
[05:39] Nuck: ACTION shuts up at the mention of "classes" and "constructors" because they are not his forte
[05:39] blaenk: I had read that in some cases, like this (app initialization) sync was ok, but maybe your approach is better
[05:39] mscdex: blaenk: pass in a callback to the constructor, or provide a separate init function
[05:40] blaenk: let me process that xD
[05:40] materialdesigner: how do I dynamically calculate a "content-length" ?
[05:40] mscdex: blaenk: var foo = new Bar(); foo.init(function (err) {  });
[05:41] blaenk: mscdex: right but what's stopping people from doing foo.someMethod(); right after var foo = new Bar();
[05:41] mscdex: materialdesigner: depends on what you're using as the request body
[05:41] AvianFlu_ has joined the channel
[05:41] blaenk: or should I just tell people they shouldn't do that
[05:41] mscdex: materialdesigner: usually just .length
[05:41] materialdesigner: mscdex: .length of what?
[05:41] materialdesigner: whatever I'd normally put in a curl -d " " ?
[05:41] mscdex: materialdesigner: i meant within node
[05:42] mscdex: materialdesigner: curl should automatically set content-length
[05:42] mscdex: iirc
[05:42] materialdesigner: yeah, it does
[05:42] materialdesigner: which is why using curl works
[05:42] materialdesigner: but node doesn't
[05:42] mscdex: blaenk: just document it
[05:42] Nuck: materialdesigner: The shit you shove in the body, that's the thing you .length
[05:42] blaenk: mscdex: oh okay so that's the solution
[05:43] blaenk: oh so I should make it like http server right, how the code that uses it is written within the callback?
[05:43] blaenk: actually nevermind that's not really true
[05:44] mscdex: materialdesigner: if the server doesn't support chunked encoding, then you will have to have the content already ready, so therefore you will know what to set the content-length header to
[05:44] mscdex: materialdesigner: by doing content.length
[05:44] tmzt: blaenk: more like http client, there's examples for that too
[05:44] materialdesigner: I'm unsure if the server supports chunked encoding
[05:44] blaenk: tmzt: I'll take a peek at that thanks
[05:44] materialdesigner: mscdex: the problem is I'm not the one who is setting all of the data
[05:44] mscdex: materialdesigner: if you don't explicitly specify content-length in http requests in node, it'll automatically use chunked encoding
[05:45] materialdesigner: and I'm unsure of where to reference a body that I can just .length
[05:45] mscdex: materialdesigner: if it's an issue with a module and it's on github, post an issue
[05:46] tmzt: mscdex: save it to a string first
[05:46] tmzt: uh
[05:46] tmzt: materialdesigner: 
[05:46] mscdex: heh
[05:46] materialdesigner: heh
[05:46] materialdesigner: I am going to try that
[05:46] materialdesigner: it may be ghetto, but it just may work
[05:47] blaenk: argh this has me very confused now
[05:48] stagas_ has joined the channel
[05:52] maru_cc_ has joined the channel
[05:53] stephank has joined the channel
[05:53] newy has joined the channel
[05:54] Anton_ has joined the channel
[05:54] temp01 has joined the channel
[05:55] felixge has joined the channel
[05:56] yhahn has left the channel
[05:57] perezd has joined the channel
[05:57] Tyilo has joined the channel
[05:57] Wizek has joined the channel
[05:59] elifou` has joined the channel
[06:00] kimico has joined the channel
[06:01] blaenk: tmzt: "blaenk: more like http client, there's examples for that too"
[06:01] blaenk: http.ClientResponse?
[06:01] darnold has joined the channel
[06:02] Aikar has joined the channel
[06:02] zedas has joined the channel
[06:02] termie has joined the channel
[06:02] blaenk: oh, just http.request?
[06:03] hassox has joined the channel
[06:03] tmzt: http.request
[06:04] blaenk: alright thanks
[06:05] metellus has joined the channel
[06:05] bshumate has joined the channel
[06:05] bshumate has joined the channel
[06:07] loveshine_ has joined the channel
[06:07] kenperkins: are there any authoritative articles on managing specific versions of packages for production with npm
[06:07] mattp_ has joined the channel
[06:08] materialdesigner: best xml parser?
[06:08] materialdesigner: xml to js, not to json
[06:09] loob2 has joined the channel
[06:10] ns5 has joined the channel
[06:12] ericmuyser has joined the channel
[06:12] robhawkes has joined the channel
[06:14] ditesh|cassini has joined the channel
[06:14] ns5: Imagine many node.js processes (one process per connection) running a server, and from time to time, every node receives a message from user and forwards this message to a core process (running on the same server), how to implement the communication between many nodes to this one process?
[06:14] elifou`` has joined the channel
[06:14] stagas_ has joined the channel
[06:15] mikl has joined the channel
[06:15] mikl has joined the channel
[06:18] mikl has joined the channel
[06:18] mikl has joined the channel
[06:19] kimico has joined the channel
[06:19] Swizec has joined the channel
[06:19] apanda has joined the channel
[06:20] wenbert has joined the channel
[06:20] cl0udy has joined the channel
[06:22] Nuck: materialdesigner: You DO realize that any translation into JS entails changing it into JSON, right?
[06:22] SamuraiJack has joined the channel
[06:22] Nuck:  Because here's a fun fact about JSON: it's just JS object syntax.
[06:23] `3rdEden has joined the channel
[06:23] yozgrahame has joined the channel
[06:23] materialdesigner: it's a subset of JS object literal notation
[06:23] materialdesigner: JSON = JS Objects, JS Objects does not necessarily = JSON
[06:24] balupton has joined the channel
[06:24] materialdesigner: otherwise there'd be no need for such a thing as JSON.parse
[06:24] Nuck: materialdesigner: Why can't it convert it to JSON?
[06:24] Nuck: materialdesigner: There isn't a need.
[06:24] Nuck: you can seriously eval() that shit
[06:24] Nuck: IT's just not safe because there could be malicious code in there
[06:24] Nuck: That's the only reason JSON.parse exists
[06:25] materialdesigner: not really the point
[06:25] Nuck: Anyways, jsdom might, not sure?
[06:25] materialdesigner: I used o3-xml
[06:26] Nuck: How does cluster communicate I wonder
[06:27] perezd has joined the channel
[06:29] guest_506 has joined the channel
[06:30] blaenk: Nuck: cup and string
[06:30] ghost has joined the channel
[06:30] Nuck: blaenk: lol
[06:31] te-brian has joined the channel
[06:33] Nuck: okay, let's say I want to use a node script as a hook on my gitolite server, and I want to have node exit with a code designating success or failure (and thus affecting the behavior of the gitolite server's response)
[06:33] Nuck: How would I have a shell script or whatever hook exit with the code that the node script exited with?
[06:36] NetRoY has joined the channel
[06:38] Nuck: God
[06:38] d0na1d has joined the channel
[06:38] Nuck: #git may be the most unhelpful chat ever.
[06:38] jesusabdullah: Have you been to #python? ;)
[06:38] Nuck: They seem to just solve everything with a cold "WTFM"
[06:38] Nuck: *RTFM
[06:39] jesusabdullah: "WHAT THE FUCK MAAAAN"
[06:39] jesusabdullah: They helped me once
[06:39] jesusabdullah: Maybe I came in at a good time
[06:39] mhauri has joined the channel
[06:39] Nuck: They just tossed me the man page for git :I
[06:39] Nuck: I just want to know how the fuck to use a git hook
[06:39] Nuck: Specifically, how does it recieve variables.
[06:41] Nuck: All I wanna do is make a node daemon that restarts every time I push a new commit to the repo's master branch.
[06:42] __directory: lol
[06:42] xonev has joined the channel
[06:42] __directory: use rails, brah.
[06:42] jesusabdullah: That's weird
[06:42] jesusabdullah: I mean
[06:42] jesusabdullah: I've read up on githooks a little
[06:42] Nuck: I assume it's possible
[06:42] jesusabdullah: but you'd think that questions about them wouldn't be met with a link to the man page
[06:42] jesusabdullah: Well
[06:42] jesusabdullah: What do you mean by "receive variables?"
[06:43] Nuck: jesusabdullah: Well, gitolite says hooks get environment variables
[06:43] jesusabdullah: Because I just assumed that it executed the script without passing any command line args, and that you had to get at anything you needed to know another way
[06:43] __directory: wait
[06:43] jesusabdullah: Oh?
[06:43] __directory: you mean hooks from police academy?
[06:43] Nuck: I was assuming that's how they shoved info in there
[06:43] jesusabdullah: So, like, bash environment vars?
[06:43] jesusabdullah: That sounds reasonable
[06:43] Nuck: jesusabdullah: But it's quite limited
[06:43] jesusabdullah: I wonder what the gitolite guys are like to talk to
[06:44] jesusabdullah: because their product is nice and their docs are good, but they also say right on them, "fucking read the docs"
[06:44] Nuck: It only lists things like repo and user
[06:44] jesusabdullah: hmm
[06:44] jesusabdullah: I see
[06:44] Nuck: the docs are verbose
[06:44] jesusabdullah: verbose in a bad way?
[06:44] Nuck: If you want somebody to read your docs, don't make them so goddamn verbose :V
[06:44] mikeal has joined the channel
[06:44] MrTopf has joined the channel
[06:44] Nuck: The only people who need that verbosity are those capable of reading the code
[06:45] __directory: hmm
[06:45] jesusabdullah: I didn't find gitolite's docs so bad
[06:45] topaxi has joined the channel
[06:45] Nuck: So it's pointless to have such crazy verbosity.
[06:45] jesusabdullah: at least for the install
[06:45] Nuck: jesusabdullah: The install docs are fine
[06:45] jesusabdullah: and such
[06:45] jesusabdullah: Yeah, that's what I'm thinking of
[06:45] Nuck: But admining is a bitch
[06:45] jesusabdullah: they're very comprehensive, but also say, "fucking rtfm dick"
[06:45] Nuck: Anything beyond the default is headachy.
[06:45] jesusabdullah: Oh, you tried to go above and beyond?
[06:45] jesusabdullah: Whups
[06:45] Nuck: lol
[06:46] jesusabdullah: I almost wrote a node thing to show off webstuff for gitolite repos
[06:46] Nuck: assuming gitolite has the same hooks, I need to study this and such: http://www.kernel.org/pub/software/scm/git/docs/githooks.html#post-receive
[06:46] jesusabdullah: but didn't have time, and now I don't care
[06:47] jesusabdullah: Oh, something you CAN do, Nuck, is just pipe the standard input into a file or something, commit, see what you get
[06:47] shapeshed has joined the channel
[06:47] jesusabdullah: *shrug*
[06:47] jesusabdullah: I think githooks are a really neat idea but I feel like they kinda suck as-implemented
[06:47] Nuck: jesusabdullah: I agree.
[06:48] Nuck: I want to see a full git server (to the level of gitolite) implemented on Node.
[06:48] Nuck: That'd be badass/
[06:48] jesusabdullah: idea: hook.io-based githooks
[06:48] jesusabdullah: ie, when executed, all the information is fired out into your hook.io cloudness
[06:48] Nuck: I love how .io is now the standard TLD for all things nerdy.
[06:48] emmanuel has joined the channel
[06:49] jesusabdullah: and then you can have a service listen in and based on the events you receive do fun things
[06:49] MrTopf_ has joined the channel
[06:50] vid__ has joined the channel
[06:50] chrisdickinson: Nuck: that wouldn't be too hard.
[06:50] groom has joined the channel
[06:51] Nuck: chrisdickinson: I'm not so sure about that, honestly.
[06:51] Nuck: The SSH-based auth shit is a bit more complex
[06:51] chrisdickinson: not really; unless you're thinking they're doing anything more complicated than running autocommands on your public key?
[06:53] towski has joined the channel
[06:54] chrisdickinson: it basically boils down to prepending the pubkeys in a special git user's .ssh/authorized_keys with `command="your-node-git-thing <username>"`.
[06:54] emattias has joined the channel
[06:54] cliffano has joined the channel
[06:54] AvianFlu: 13Nuck: learn to read.
[06:54] emmanuel_ has joined the channel
[06:55] MonsieurLu has joined the channel
[06:56] tobmaster has joined the channel
[06:57] TomY has joined the channel
[07:00] jbpros has joined the channel
[07:00] ttpva has joined the channel
[07:01] harthur has joined the channel
[07:03] isaacs has joined the channel
[07:04] odie5533: Are NPM files maintained? Does it just checkout the latest files from github for that module?
[07:04] booo has joined the channel
[07:04] isaacs: odie5533: no, someone has to explicitly publish
[07:05] isaacs: odie5533: `npm owner ls pkgname` to see the owner of any given package
[07:05] fangel has joined the channel
[07:05] odie5533: isaacs: wish I could try it, but npm doesn't work on windows yet =/
[07:05] isaacs: odie5533: get a linux vm, man
[07:06] isaacs: odie5533: works great :)
[07:06] odie5533: but then I can't complain about windows support =/
[07:06] ambroff has joined the channel
[07:06] bergie has joined the channel
[07:07] isaacs: haha
[07:07] odie5533: also, I'd install cygwin to use npm sooner than I'd install a vm. The only thing I need right now is npm, small application.
[07:07] isaacs: odie5533: you also need node :)
[07:07] meandi2 has joined the channel
[07:07] odie5533: node.exe
[07:07] isaacs: odie5533: and whatever else you install with npm
[07:08] isaacs: odie5533: in all seriousness, that's high on my todo list.
[07:08] perezd has joined the channel
[07:08] isaacs: highest, after getting this no.de release finished, in fact.
[07:08] odie5533: no.de release?
[07:08] isaacs: yeah
[07:08] isaacs: http://no.de
[07:08] isaacs: we're working on a new version
[07:08] odie5533: ah
[07:09] Generic_Dumbass has joined the channel
[07:10] blaenk: very noob question if anyone has the time: http://stackoverflow.com/questions/6922532/node-js-asynchronous-initialization-issue
[07:10] seivan has joined the channel
[07:10] djcoin has joined the channel
[07:11] jesusabdullah: blaenk: I don't know much about your question, but usually you do things like this with nested callbacks <_<
[07:11] blaenk: yeah someone mentioned callbacks earlier but I'm confused as to how to apply them to this situation
[07:12] jesusabdullah: so, createClient(function(client) { if (client.version > 3.0) { ... } else { ... }}) or some such
[07:12] max8613 has joined the channel
[07:12] jesusabdullah: oh
[07:12] jesusabdullah: here
[07:13] blaenk: I wanted the version check within the initialization, so when you got the object it was already configured based on the version check
[07:13] blaenk: I mean, if it's possible
[07:13] jesusabdullah: program.createClient(function(client) { client.doSomething(); });
[07:13] blaenk: yeah I was thinking about something like that, but I would've really liked to not be jailed inside a callback
[07:13] tuhoojabotti: I have array of objects, what is the cool trick to join one attribute from the the objects to a string? :D
[07:14] jesusabdullah: Learn to love the callback, brah. There's no getting around it sometimes.
[07:14] jesusabdullah: at least, in node.
[07:14] tuhoojabotti: prolly filter :o
[07:14] mrtrosen has joined the channel
[07:14] k1ttty has joined the channel
[07:14] blaenk: yeah I have nothing against callbacks haha, it's just that I would've liked to have a var client and use it anywhere, not just within a callback
[07:14] tuhoojabotti: yes
[07:14] tuhoojabotti: no
[07:14] blaenk: if I can't find a solution I'll just make it a configuration thing
[07:14] jesusabdullah: Just have a REALLY BIG callback, blaenk
[07:14] blaenk: hahaha, yeah I'd rather not
[07:15] jesusabdullah: Sometimes, your callback ends up being most of the program. It happens!
[07:15] blaenk: see once I have the client I don't mind using callbacks no doubt, for stuff like client.getAge(function(error, data) {} )
[07:15] jesusabdullah: Yeah, sure
[07:15] jacobolus has joined the channel
[07:15] blaenk: but I wanted to have client around and use it anywhere, cause it's not the focus of my application
[07:15] blaenk: so having to use it within a callback all the time would be messy, I think at least
[07:15] jesusabdullah: I know it sounds pesky, but a lot of the time it's really the best way (in node anyway)
[07:15] jesusabdullah: It's probably not as messy as you imagine.
[07:16] jesusabdullah: Especially if you factor out stuff into functions and/or submodules
[07:16] jesusabdullah: s/submodules/modules/
[07:16] blaenk: I know synchronous is an evil word here but I would much rather make my operation synchronous, like fs.readFileSync on https servers to read keys
[07:16] Aiden has joined the channel
[07:16] blaenk: after all this is only for the instantiation
[07:16] blaenk: app init
[07:17] blaenk: or just make the version number manually configured
[07:17] jesusabdullah: Well, it really depends on whether createClient is a syncronous or asyncronous function as well
[07:17] blaenk: createClient basically returns a 'new ProgramClient'
[07:17] jesusabdullah: I mean, everything that comes with node is async, sure, but that doesn't necessarily mean your code will be
[07:17] blaenk: which basically just sets some options
[07:18] blaenk: and I wanted to also ask the program I'm connecting to what version it was, to set my api definitions based on that
[07:18] jesusabdullah: yeah, sure
[07:18] blaenk: so I would have some variables that say to use 'getName' instead of 'get_name' based on the version
[07:18] jesusabdullah: if it does all that syncronously then you're okay
[07:18] isaacs: jesusabdullah: you very very rarely need a "very big callback"
[07:18] confoocious has joined the channel
[07:18] confoocious has joined the channel
[07:19] blaenk: yeah, it does it asynchronously because of the xmlrpc library I use which does it in async, which I like, like I said I don't have any problems with callbacks/async it's just for this, being new, I don't know where to go xD
[07:19] jesusabdullah: Now that I think about it, I haven't seen too many large callbacks, just really short programs <_<
[07:20] blaenk: I guess a configuration option will be the best way around this
[07:20] ablomen has joined the channel
[07:20] blaenk: I wanted to be fancy and make it query the program itself for the version number, but oh well :)
[07:21] jesusabdullah: isaacs: Do you have any advice for this guy? You're better at this than me. :(
[07:21] isaacs: jesusabdullah: don't get me wrong, i've seen (and written() a lot of really long callbacks
[07:21] jesusabdullah: yeah, totally
[07:21] isaacs: just that it's an antipattern
[07:21] isaacs: best to split the function up
[07:21] jesusabdullah: Yeah, definitely
[07:21] isaacs: blaenk: what's your issue?
[07:21] jesusabdullah: What I meant more like, was this sort of entry point thing
[07:22] isaacs: oh, right
[07:22] blueadept has joined the channel
[07:22] blueadept has joined the channel
[07:22] isaacs: i did that in npm by having npm.load()
[07:22] mrtrosen has joined the channel
[07:22] jesusabdullah: configureThing(function(config) { aLotOfYourProgram(); moreOfYourProgram(); })
[07:22] jesusabdullah: Oh? Hmm
[07:22] isaacs: so, npm.load() goes through and reads all the ini files and whatnot, and then calls the cb
[07:22] jesusabdullah: I see
[07:22] ns5 has left the channel
[07:22] isaacs: sorta like that, yeah
[07:22] blaenk: isaacs: basically I'm writing a module as a client for a program (communicating via xmlrpc). the program's api changed recently and so I wanted to query the program to ask it its version, then configure the client/object based on that
[07:22] blaenk: http://stackoverflow.com/questions/6922532/node-js-asynchronous-initialization-issue
[07:23] blaenk: so basically on createClient I wanted it to ask the program, through xmlrpc, its version, then configure the client's variables based on that, but then since it's done asynchronously, the client ends up being used before its properly instantiated/configured (since the xmlrpc response hasn't come in)
[07:23] blueadept has joined the channel
[07:24] isaacs: this function does more than i'd like (it's one of those "long callbacks") but the general idea is demonstrated https://github.com/isaacs/npm/blob/master/npm.js#L161-232
[07:24] blaenk: I can solve this by just making it an option to configure, 'oldapi' or 'newapi' for example, but thought it would be neat if the module automatically queried the program to ask it its version
[07:24] blaenk: is that for me? taking a look
[07:24] isaacs: blaenk: sure, just queue up the requests until the config is done
[07:24] isaacs: ACTION gisting
[07:24] jesusabdullah: ooh, that's a good idea^^
[07:24] blaenk: oh yeah!!!
[07:24] blaenk: WOW
[07:25] blaenk: >=O that is amazing I can't believe I didn't think of it haha
[07:25] jesusabdullah: derp :P
[07:25] bbrandon has joined the channel
[07:25] blaenk: in fact I had to have done that eventually
[07:25] jesusabdullah: haha, I know right? I feel dumb too
[07:25] blaenk: wow thanks isaacs :)
[07:25] jesusabdullah: It happens! XD
[07:25] hwinkel has joined the channel
[07:25] blaenk: thanks jesusabdullah for keeping me company :D
[07:25] jesusabdullah: Anytime dudesky
[07:25] jesusabdullah: ^5
[07:25] isaacs: what, i miss something?
[07:25] mhauri_ has joined the channel
[07:26] blaenk: nothing. that the queueing idea is a good one
[07:26] hlindset has joined the channel
[07:26] blaenk: I didn't really want to use the callback approach
[07:26] blaenk: I wanted to be able to use 'client' outside of that callback in other words
[07:26] pig has joined the channel
[07:26] blaenk: queueing should fix it :)
[07:26] gozala has joined the channel
[07:27] blaenk: after all, I was gonna have to queue requests anyways
[07:27] simenbrekken has joined the channel
[07:27] isaacs: blaenk: https://gist.github.com/1122098
[07:28] blaenk: reading
[07:28] isaacs: blaenk: if you *do* require an explicit "load" call, then it'd be good to at least warn that the request is being queued, and won't be sent until confs are loaded.
[07:29] blaenk: I understand. thanks a lot I appreciate it
[07:29] isaacs: np
[07:30] AD7six_ has joined the channel
[07:31] __directory: that npm snippet is neat-o
[07:31] isaacs: oh, i guess there's a bug there.  you'd have to actually call blah() again post-load.  eh, you get the idea
[07:32] blaenk: yeah I saw :) I get the idea :D
[07:33] luke` has joined the channel
[07:34] Aiden_ has joined the channel
[07:34] [AD]Turbo has joined the channel
[07:35] [AD]Turbo: hi there
[07:35] isaacs: __directory: thanks
[07:35] blueadept has joined the channel
[07:35] AvianFlu has joined the channel
[07:37] k1ttty has joined the channel
[07:39] zeade1 has joined the channel
[07:39] andree has joined the channel
[07:44] stagas_ has joined the channel
[07:45] whitman has joined the channel
[07:46] vortec2 has joined the channel
[07:48] hellp has joined the channel
[07:49] stagas has joined the channel
[07:49] __tosh has joined the channel
[07:50] dgathright has joined the channel
[07:51] Generic_Dumbass has left the channel
[07:54] radiodario has joined the channel
[07:56] mehlah has joined the channel
[07:58] pickels has joined the channel
[07:59] delian66 has joined the channel
[08:01] michaelhartau has joined the channel
[08:01] simenbrekken has joined the channel
[08:02] cosmincx has joined the channel
[08:02] scas_ has joined the channel
[08:03] meso_ has joined the channel
[08:03] bergie has joined the channel
[08:04] darshanshankar has joined the channel
[08:05] mikl has joined the channel
[08:05] mikl has joined the channel
[08:05] mpavel has joined the channel
[08:07] gozala has joined the channel
[08:07] davidbanham has joined the channel
[08:08] juli0w has joined the channel
[08:11] uchuff has joined the channel
[08:11] odie5533: hmm, how can I use CoffeeScript with NodeJs?
[08:14] blueadept has joined the channel
[08:14] blueadept has joined the channel
[08:14] markwubben has joined the channel
[08:15] MrTopf has joined the channel
[08:16] Guest94333 has joined the channel
[08:17] perezd has joined the channel
[08:18] eboyjr: odie5533: Google "Coffeescript with node.js"
[08:18] odie5533: things always seem so much easier with google.
[08:18] cjm has joined the channel
[08:19] odie5533: I managed to get in a coffee shell, but am not sure how to run a program within the shell.
[08:20] odie5533: I got it working. was easier than I expected.
[08:22] margle has joined the channel
[08:22] DevX101 has joined the channel
[08:22] mhauri has joined the channel
[08:22] davidascher has joined the channel
[08:23] thalll has joined the channel
[08:26] loveshine has joined the channel
[08:28] bbrandon has joined the channel
[08:29] gozala has joined the channel
[08:31] kulor-uk has joined the channel
[08:31] neshaug has joined the channel
[08:31] davidbanham has joined the channel
[08:32] bzinger has joined the channel
[08:33] socketio\test\98 has joined the channel
[08:34] Brandonn has joined the channel
[08:34] jbpros_ has joined the channel
[08:34] fivetwentysix has joined the channel
[08:34] juli0w has joined the channel
[08:38] unlink has joined the channel
[08:38] zaach has joined the channel
[08:42] shanebo has joined the channel
[08:42] jbpros_ has joined the channel
[08:43] shinuza has joined the channel
[08:45] craigm has joined the channel
[08:46] __doc__ has joined the channel
[08:49] dsirijus has joined the channel
[08:49] craigm has joined the channel
[08:49] kulor-uk has joined the channel
[08:52] asabil has joined the channel
[08:52] socketio\test\41 has joined the channel
[08:52] AvianFlu_ has joined the channel
[08:55] skohorn has joined the channel
[08:59] radiodario: does anybody know how to parse named parameters to express?
[08:59] dexter_e has joined the channel
[09:00] radiodario: i.e. get parameters
[09:00] TheJH has joined the channel
[09:00] TheJH has joined the channel
[09:01] brianloveswords has joined the channel
[09:01] juli0w has joined the channel
[09:01] gg777 has joined the channel
[09:03] wenbert has joined the channel
[09:04] wenbert: anyone here worked with redis_node?
[09:05] wenbert: node_redis :P
[09:05] wpl has joined the channel
[09:06] markwubben has joined the channel
[09:07] hellp has joined the channel
[09:08] theCode: Couch or Redis?
[09:08] wenbert:  in node_redis, why does this return only "true"? client.get("card") and not the value?
[09:08] wenbert: theCode redis
[09:08] theCode: why :) /
[09:08] theCode: ?
[09:08] JakeyChan has joined the channel
[09:08] rendez has joined the channel
[09:09] rendez: hi every1
[09:09] wenbert: theCode?
[09:09] rendez: has anybody worked with Https request with certificate in pem files?
[09:09] theCode: why redis and not Couch?
[09:09] wenbert: i have not looked at couch yet
[09:10] theCode: hmm
[09:10] liar has joined the channel
[09:11] theCode: wenbert, any reason why you chose Redis?
[09:11] wenbert: no reason theCode... just trying to play with things
[09:11] theCode: ok
[09:13] wenbert: theCode any idea why client.get("card") for node_redis returns only true but not the value of the key "card"?
[09:14] mugsie has joined the channel
[09:14] Nexxy has joined the channel
[09:14] wpl has left the channel
[09:16] confoocious has joined the channel
[09:16] confoocious has joined the channel
[09:17] perezd has joined the channel
[09:20] andrewvos has joined the channel
[09:20] andrewvos: so, what's everyone using for tdd'ing node stuff?
[09:21] tuhoojabotti: tdd?
[09:22] TheJH: what's tdd?
[09:23] felixge: tear driven development
[09:23] andrewvos: unit testing
[09:23] felixge: ;)
[09:23] andrewvos: s/tdd'ing/unit testing/
[09:23] felixge: I think most people use expresso
[09:23] hij1nx has joined the channel
[09:23] andrewvos: expresso = all the code in one file
[09:23] felixge: or http://vowsjs.org/
[09:24] andrewvos: it's very early in the morning and it's making me feel ill
[09:24] felixge: andrewvos: well, you can have as many test files with expresso as you want afaik
[09:24] andrewvos: felixge: I'm talking about the code base
[09:24] felixge: oh yeah
[09:24] andrewvos: felixge: the expresso code.. it's all in one file
[09:24] felixge: expresso is a big hacky thingie
[09:24] felixge: :)
[09:24] felixge: most of TJs other stuff is muchos more awesome
[09:25] felixge: I can highly recommend http://sinonjs.org/  for mocking / stubbing so
[09:25] versicolor has joined the channel
[09:25] felixge: andrewvos: I'm currently working on this: https://github.com/felixge/node-fast-or-slow
[09:25] AndChat- has joined the channel
[09:26] andrewvos: i like that felixge 
[09:26] felixge: andrewvos: this is what it looks like to do tests with it: https://github.com/felixge/node-mysql/blob/refactoring/test/slow/test-client-connect.js
[09:26] felixge: andrewvos: I still haven't announced it, but it's getting stabbleish
[09:27] juli0w has joined the channel
[09:27] felixge: let me update the readme a tiny bit in case you want to try it out
[09:27] xippi has joined the channel
[09:27] andrewvos: felixge: wait. so it's a test framework too?
[09:28] blup has joined the channel
[09:28] jj0hns0n has joined the channel
[09:28] felixge: andrewvos: yes
[09:29] felixge: it will probably ship with sinon integration for mocking / stubbing
[09:29] felixge: and substack's bunker for code coverage
[09:29] felixge: but for now it's just a simple test framework
[09:29] felixge: handling the async crazy
[09:29] felixge: timeouts
[09:29] felixge: and good error reporting
[09:29] felixge: shit, getting a useful file / line number out of my test failures is my #1 priority
[09:30] confoocious has joined the channel
[09:30] confoocious has joined the channel
[09:31] luke` has joined the channel
[09:31] andrewvos: hmmm, I just want test:unit for js :|
[09:31] andrewvos: or minitest :)
[09:31] thalll has joined the channel
[09:32] felixge: there is no shortage of things for you to look at
[09:32] felixge: !npm search test
[09:32] jhbot: packages (short format, truncated): johnny-mnemonic, keyjson, m1test, node-assert-lint-free, node-casa, unittest-jslint, async_testing, jslitmus, macrotest, mjsunit.runner, node-build, nodeunit-dsl, patr, deckard, drain, plants.js, expressobdd, stories, bn-unit, gdata
[09:32] felixge: (and that's not the full list : )
[09:33] julienXX has joined the channel
[09:33] luke`_ has joined the channel
[09:34] Ramosa has joined the channel
[09:37] sfoster has joined the channel
[09:39] jomoho has joined the channel
[09:42] confoocious has joined the channel
[09:44] Kingdutch has joined the channel
[09:48] andrewvos: i'm very close to writing a minitest clone in JS
[09:52] juli0w has joined the channel
[09:54] asabil has joined the channel
[09:54] stagas_ has joined the channel
[09:56] stagas has joined the channel
[09:57] seivan has joined the channel
[09:58] SuMarDi has joined the channel
[10:01] vid__ has joined the channel
[10:05] rurufufuss has joined the channel
[10:06] jvduf has joined the channel
[10:07] fly-away has joined the channel
[10:10] wenbert: anyone know the answer to this? http://stackoverflow.com/questions/6924639/value-from-client-get-is-true-instead-of-the-real-value
[10:10] jhurliman has joined the channel
[10:12] perezd has joined the channel
[10:12] SuMarDi has joined the channel
[10:13] stagas: wenbert: redis client is not sync
[10:13] TheJH: just wanted to say the same
[10:14] fermion has joined the channel
[10:16] seivan has joined the channel
[10:17] stagas: wenbert: answered
[10:18] wenbert: checking
[10:19] wenbert: wow thanks
[10:19] stagas: wenbert: edited
[10:19] FireyFly has joined the channel
[10:19] stagas: wenbert: well this isn't ideal but you get the point
[10:19] wenbert: thanks stagas!
[10:20] loveshine: anyone here know how to color text on github markdown?
[10:24] wenbert: i have to get used to the way you do things with nodejs
[10:24] wenbert: what's it called again? blah = function() { }...?
[10:26] stagas: wenbert: usually i/o need to be in callbacks, which are anonymous functions you pass as the last argument, so when the operation returns with the data it will call that
[10:27] confoocious has joined the channel
[10:28] adrianmg has joined the channel
[10:29] jbrokc has joined the channel
[10:30] wenbert: thanks stagas
[10:31] delian66_ has joined the channel
[10:32] skm has joined the channel
[10:34] okuryu has joined the channel
[10:34] akshatj has joined the channel
[10:35] stagas: np
[10:36] dexter_e has joined the channel
[10:37] jbpros has joined the channel
[10:40] akshatj has joined the channel
[10:41] hwinkel has joined the channel
[10:42] Anton_: i get segfault in node.js 0.5.2 at 
[10:42] Anton_: 0x0830628c in v8::internal::FlexibleBodyVisitor<v8::internal::StaticMarkingVisitor, v8::internal::FixedArray::BodyDescriptor, void>::Visit ()
[10:43] Anton_: does it say something helpful in the meaning of where in my sources it crashes?
[10:43] hwinkel has joined the channel
[10:47] wenbert: is redis good for storing permanent data?
[10:48] tshpaper has joined the channel
[10:49] dexter_e has joined the channel
[10:49] wenbert: stagas, let's say I have already set "card" previously - I am assuming that it saves the value and key. So when I restart my nodejs app, when I get("key"), the value should still be there?
[10:49] wenbert: (http://stackoverflow.com/questions/6924639/value-from-client-get-is-true-instead-of-the-real-value/6924916#6924916)
[10:50] thalll has joined the channel
[10:50] stagas: wenbert: assuming you didn't shut down redis before it had a chance to save, yes
[10:51] wenbert: stagas, you mean something like this? http://redis.io/topics/persistence
[10:52] thalll_ has joined the channel
[10:53] mikl has joined the channel
[10:53] mikl has joined the channel
[10:53] thalll__ has joined the channel
[10:54] Shrink has joined the channel
[10:54] wenbert: stagas thanks just confirmed it
[10:54] thalll___ has joined the channel
[10:54] wenbert: maybe not
[10:55] wenbert: going to take a break
[10:55] wenbert: brb
[10:55] H4ns` has joined the channel
[10:55] jeedey: If im using connect-js, should 'blocking' code make the server unable to fufil requests until it is completed? 
[10:55] confoocious has joined the channel
[10:55] confoocious has joined the channel
[10:57] TheJH: jeedey, yes
[11:01] skm has joined the channel
[11:01] gozala has joined the channel
[11:02] perezd has joined the channel
[11:02] CrisO has joined the channel
[11:03] indutny: ryanj: yt?
[11:05] michaelhartau has joined the channel
[11:05] markwubben has joined the channel
[11:06] Shrink has joined the channel
[11:07] jeedey: TheJH, ahhh I tried to not use any blocking code, so the server is unable to handle multiple requests when one set of code is processing?
[11:08] TheJH: jeedey, right
[11:09] TheJH: jeedey, however, you can handle a request while another one is waiting for data from the database or so, it doesn't mean that you can only handle one request at a time or so
[11:09] jeedey: thanks, but I'm struggling to see how a whole web app can never have blocking code 
[11:10] jeedey: hmm
[11:10] jeedey: well
[11:10] jeedey: what im experiencing is 
[11:10] jeedey: if i get say ab to make 100 identical requests, over a reasonable period
[11:10] jeedey: 30% will fail with 'cannot get route' (as a response error from connect-js)
[11:11] TheJH: jeedey, can you show me your code, maybe in a gist or so?
[11:11] jeedey: yeah 
[11:11] squeese has joined the channel
[11:12] enotodden has joined the channel
[11:13] jeedey: TheJH, pm'ed it.
[11:16] misterncw has joined the channel
[11:17] maru_cc_ has joined the channel
[11:18] Camacho has joined the channel
[11:20] kulor-uk has joined the channel
[11:20] mugsie has joined the channel
[11:23] Camacho has left the channel
[11:23] bentkus has joined the channel
[11:26] dexter_e has joined the channel
[11:27] socketio\test\20 has joined the channel
[11:27] sethetter has joined the channel
[11:28] loveshine_ has joined the channel
[11:30] paulwe has joined the channel
[11:31] perezd has joined the channel
[11:32] andrewvos has joined the channel
[11:34] materialdesigner has joined the channel
[11:38] framlin: TheJH: you may splitt your algorithm into small packages and instead of calling one big (blocking) function you ma emit('step_n_done') and have one listener on('step_n_done') that goes on with whe work. So you give other 'connections' give  chance to get their things done in between ... 
[11:39] framlin: if you have 10 steps you emit('step_1_done') and from the on_step_1_done you emit('step_2_done') etc
[11:39] sethetter has joined the channel
[11:43] fairwinds has joined the channel
[11:45] piscisaureus has joined the channel
[11:46] caden has joined the channel
[11:47] maru_cc_ has joined the channel
[11:47] stagas_ has joined the channel
[11:47] jeedey: framlin, got any links to good documentation on that method? 
[11:47] Rishi_ has joined the channel
[11:48] jbpros has joined the channel
[11:48] mehtryx has joined the channel
[11:49] framlin: no, sorry. But if you are not used with this, you may use one of this async-module-libs, I think they should do the most for you. so you only have to think, how to split your "action-block" into some smaller steps
[11:50] framlin: the problem is in principle the same as in goog old cooperative multitasking times
[11:50] davidcoallier has joined the channel
[11:51] bnoordhuis has joined the channel
[11:52] fangel has joined the channel
[11:52] framlin: there you had - to code 'clean' and fair - to give the OS the chance to swith the tasks by calling any UI-Methods, that emits events, that enables the OS let another app running
[11:53] jeedey: ok thanks framlin
[11:55] framlin: np ;)
[11:55] Rishikeshbabu has joined the channel
[11:55] jeedey: urgh not looking forward to rewriting this app again
[11:55] Rishikeshbabu: Hi...i am facing issue in compliing Node JS
[11:56] Rishikeshbabu: getting error as Build failed: -> task failed (err #2):
[11:56] mike5w3c has joined the channel
[11:56] Rishikeshbabu: please help me to resolve this
[11:57] bnoordhuis: Rishikeshbabu: can you pastie or gist the full build log?
[11:59] Rishikeshbabu: Not able to copy from Cygwin window
[11:59] scott_gonzalez has joined the channel
[12:01] Anton_: so, as I can see
[12:01] Anton_: segfault at 0x0830628c in v8::internal::FlexibleBodyVisitor<v8::internal::StaticMarkingVisitor, v8::internal::FixedArray::BodyDescriptor, void>::Visit ()
[12:01] sebastia_ has joined the channel
[12:01] Anton_: it's segfault of V8 mark-compact
[12:01] Anton_: garbage collection
[12:01] Anton_: can I switch off compacting?
[12:02] bnoordhuis: Anton_: are you using third-party modules?
[12:02] ditesh|cassini has joined the channel
[12:02] Anton_: yes
[12:02] Anton_: request
[12:03] sebastia_: is using child_process.fork && child.send(message) the best way to do IPC performance-wise?
[12:03] keeto has joined the channel
[12:04] jungly has joined the channel
[12:04] bnoordhuis: Anton_: okay, but no native a.k.a. c++ modules?
[12:04] Anton_: no
[12:05] bnoordhuis: Anton_: what version of node?
[12:05] Anton_: i've tried 0.5.2 and 0.4.10
[12:05] Anton_: same result
[12:05] bnoordhuis: they both do it?
[12:05] Anton_: yes
[12:05] bnoordhuis: weird
[12:05] Rishikeshbabu: Hi Bnoordhuis ---- here is the log
[12:05] Rishikeshbabu: # make Waf: Entering directory `/cygdrive/c/Documents and Settings/baburi/My Documents/ baburi/node/build' DEST_OS: cygwin DEST_CPU: ia32 Parallel Jobs: 1 Product type: program [ 5/36] libv8.a: deps/v8/SConstruct -> build/default/libv8.a /usr/bin/python "/cygdrive/c/Documents and Settings/baburi/My Documents/baburi/n ode/tools/scons/scons.py" -j 1 -C "/cygdrive/c/Documents and Settings/baburi/My Documents/baburi/node/build/defaul
[12:05] bnoordhuis: nooo
[12:05] bnoordhuis: don't paste that here
[12:06] bnoordhuis: for a second i thought you were going to post the full log
[12:06] maru_cc_ has joined the channel
[12:06] wenbert: is cradle for couchdb any good?
[12:06] bnoordhuis: Anton_: can you run `gdb --args node yourapp.js`, type `run` and when it crashes type `bt 25`?
[12:06] Rishikeshbabu: oh!! just the build error msg
[12:07] bnoordhuis: Rishikeshbabu: i need the full log, preferably the output of ./configure too
[12:07] Anton_: bnoordhuis: bt it's backtrace?
[12:07] Anton_: i ran it
[12:07] bnoordhuis: Anton_: yes
[12:07] Anton_: got nothing more
[12:07] Rishikeshbabu: ok
[12:08] Anton_: there were some addresses in ??
[12:08] Anton_: not very helpful
[12:08] bnoordhuis: Anton_: can you run `./configure --debug` and try it with node_g
[12:08] bnoordhuis: that binary's got debug symbols
[12:09] TheJH: wenbert, I think that many people use it
[12:09] Anton_: should i run it with 'gdb --args node_g myscropt.js'?
[12:09] bnoordhuis: Anton_: yes
[12:09] Anton_: ok, will try
[12:09] Anton_: the bad thing is it tokes about an hour to get that segfault
[12:10] Anton_: *takes
[12:10] bnoordhuis: good
[12:10] bnoordhuis: that means i have time for breakfast now :)
[12:10] Anton_: :)
[12:10] bnoordhuis: back in a bit
[12:10] Rishikeshbabu: # ./configure Checking for program g++ or c++          : /usr/bin/g++ Checking for program cpp                 : /usr/bin/cpp Checking for program ar                  : /usr/bin/ar Checking for program ranlib              : /usr/bin/ranlib Checking for g++                         : ok Checking for program gcc or cc           : /usr/bin/gcc Checking for gcc                         : ok Checking for library dl                  : ye
[12:13] boehm has joined the channel
[12:13] pandeiro has joined the channel
[12:13] Rishikeshbabu: bnoordhuis: duuno from which path to take the log...i have given the output of ./configure...
[12:14] wenbert: what would be the recommended datastorage to use with a nodejs app? i have to store card details (MTG) and then be able to access the storage fast
[12:15] wenbert: should I go for redis or couchdb?
[12:15] delian66 has joined the channel
[12:18] stagas: wenbert: couch is slow, go for mongo or redis
[12:19] igl1 has joined the channel
[12:19] maru_cc_ has joined the channel
[12:20] piscisaureus has joined the channel
[12:20] jimt has joined the channel
[12:20] akshatj has joined the channel
[12:21] agnat_ has joined the channel
[12:23] kulor-uk has joined the channel
[12:23] liar has joined the channel
[12:27] jtrudeau has joined the channel
[12:27] wenbert: stagas thanks. i think redis is it - but i tried to set a value, then shut down redis, then checked the value again - i get null
[12:27] fyskij has joined the channel
[12:29] bradleymeck has joined the channel
[12:30] margle has joined the channel
[12:31] eee_c has joined the channel
[12:33] andrewvos has joined the channel
[12:35] fumanchu182 has joined the channel
[12:36] brianseeders has joined the channel
[12:39] overra has joined the channel
[12:44] MarkMenard has joined the channel
[12:46] jimt_ has joined the channel
[12:46] ps_jinx has joined the channel
[12:48] perezd has joined the channel
[12:48] mikedeboer has joined the channel
[12:49] AaronMT has joined the channel
[12:50] bnoordhuis: Rishikeshbabu: (./configure 2>&1 | tee configure.log) && (make 2>&1 | tee make.log)
[12:50] dambalah has left the channel
[12:51] blueadept has joined the channel
[12:51] blueadept has joined the channel
[12:52] shanebo has joined the channel
[12:52] craigm has joined the channel
[12:54] stagas_ has joined the channel
[12:55] ttpva has joined the channel
[12:56] broofa has joined the channel
[12:56] gozala has joined the channel
[12:58] NetRoY has left the channel
[12:59] cccaldas has joined the channel
[13:01] sniper506th has joined the channel
[13:02] igl has joined the channel
[13:02] perezd has joined the channel
[13:03] sfoster has joined the channel
[13:03] Anton_: bnoordhuis: are you here?
[13:04] kulor-uk has joined the channel
[13:04] bnoordhuis: Anton_: i am. are you?
[13:04] Anton_: bnoordhuis: yap, i've got crash
[13:04] Anton_: but it looks different now
[13:04] bnoordhuis: can you gist the backtrace?
[13:05] Anton_: bnoordhuis: https://gist.github.com/1122585
[13:05] jimt has joined the channel
[13:06] davidbanham has joined the channel
[13:06] bnoordhuis: Anton_: thanks. i take it this is with 0.4.10?
[13:06] Anton_: yes
[13:06] Anton_: maybe get more bt?
[13:06] AaronMT has joined the channel
[13:07] bnoordhuis: Anton_: won't hurt. `bt 50`?
[13:07] Anton_: i don't see any 0x0830628c in v8::internal::FlexibleBodyVisitor
[13:07] Anton_: one sec
[13:08] Anton_: https://gist.github.com/1122590
[13:08] bnoordhuis: Anton_: if you have ASLR on, the addresses change every time
[13:08] bnoordhuis: `sysctl -w kernel.randomize_va_space=0` disables it
[13:09] Anton_: yes, FlexibleBodyVisitor doesn't apper at any address
[13:09] rfay has joined the channel
[13:09] DavidElias has joined the channel
[13:10] Anton_: bnoordhuis: so, do you have any thought about the root of the problem?
[13:10] ceej has joined the channel
[13:10] bnoordhuis: Anton_: well... apparently there's some kind of heap corruption
[13:10] bnoordhuis: but that's not saying much and you probably gathered that already
[13:11] bnoordhuis: is there any chance you can re-run it with the current master?
[13:11] bnoordhuis: and is your app sufficiently standalone that i can try it here?
[13:12] Anton_: I think I can give you the app
[13:12] tbassetto has joined the channel
[13:13] Anton_: but I'll need to check it
[13:13] Anton_: and I will try to run it on another machine
[13:13] bnoordhuis: Anton_: that would help
[13:13] davidcoallier has joined the channel
[13:13] bnoordhuis: what arch is your machine? 32 or 64 bits?
[13:13] Anton_: so, u'r saying to run debug version of current master? is it 0.5.4?
[13:13] Anton_: 32
[13:13] ttpva has joined the channel
[13:13] bnoordhuis: Anton_: latest master is 0.5.4-pre
[13:14] bnoordhuis: just `git clone` it from joyent/node and you'll have the latest one
[13:14] Anton_: right
[13:14] bnoordhuis: re 32 bits: do you have a 64 bits machine you can try it on?
[13:15] Anton_: I don't know for sure, maybe i can reinstall OS on one of machines
[13:15] wenbert: with redis, can I retreive data sequentially using the "range"?
[13:16] mugsie has joined the channel
[13:16] hdon- has joined the channel
[13:16] davidsklar has joined the channel
[13:17] jslatts has joined the channel
[13:19] Rishikeshbabu: hi Bnoordhuis: i have given the output of ./configure...can you please look and i am not sure from which location that i need to take the log
[13:20] jakehow has joined the channel
[13:20] bnoordhuis: Rishikeshbabu: log files are written to the current directory if you use that one-liner, please gist them
[13:21] Aiden has joined the channel
[13:22] jbrokc has joined the channel
[13:22] kriszyp has joined the channel
[13:23] JumpMast3r has joined the channel
[13:23] piscisaureus_ has joined the channel
[13:24] Creap has joined the channel
[13:24] Creap: when trying to do anything with npm, I get npm ERR! registry error parsing json / npm ERR! SyntaxError: Unexpected token H
[13:25] Creap: and "Host not found"
[13:25] Creap: any ideas what might be wrong?
[13:29] perezd has joined the channel
[13:29] dexter_e has joined the channel
[13:30] Kingdutch has joined the channel
[13:30] TheJH: Creap, are you behind a proxy?
[13:31] Kingdutch has joined the channel
[13:31] Creap: no, but I seem to have found an issue on github
[13:31] Creap: https://github.com/isaacs/npm/issues/1218
[13:31] Creap: which might be th same
[13:31] hacksparrow has joined the channel
[13:32] Creap: I only had node 0.2.6 in my repos so I compiled it from source, and now it's a too new version :\
[13:33] TheJH: Creap, I'd try v0.4.10
[13:34] Creap: I'll do that
[13:34] TheJH: Creap, it's the latest stable version
[13:34] __tosh has joined the channel
[13:35] miccolis has joined the channel
[13:36] ksheurs has joined the channel
[13:37] seivan has joined the channel
[13:38] stepheneb has joined the channel
[13:38] JoshC1 has joined the channel
[13:39] Poetro has joined the channel
[13:39] Poetro has joined the channel
[13:41] brianc has joined the channel
[13:43] Anton_ has joined the channel
[13:43] tk has joined the channel
[13:43] sethetter has joined the channel
[13:45] airportyh has joined the channel
[13:46] confoocious has joined the channel
[13:47] micheil has joined the channel
[13:47] Peniar has joined the channel
[13:47] dpritchett has joined the channel
[13:48] Bogh has joined the channel
[13:50] colinclark has joined the channel
[13:54] piscisaureus has joined the channel
[13:55] sub_pop has joined the channel
[13:55] DJBouche has joined the channel
[13:57] stepheneb has joined the channel
[13:57] hide has joined the channel
[13:59] baudehlo has joined the channel
[13:59] bayousoft has joined the channel
[14:00] nibblebot has joined the channel
[14:00] zanes has joined the channel
[14:01] fivetwentysix has joined the channel
[14:01] patrickgamer has joined the channel
[14:01] patrickgamer has left the channel
[14:02] devongovett has joined the channel
[14:02] Swimming_bird has joined the channel
[14:04] BillyBreen has joined the channel
[14:04] geetarista has joined the channel
[14:07] ben_alman has joined the channel
[14:07] springmeyer has joined the channel
[14:07] explodes has joined the channel
[14:08] thomblake has joined the channel
[14:08] thomblake has left the channel
[14:08] springmeyer has joined the channel
[14:08] springmeyer has left the channel
[14:08] objectiveous has joined the channel
[14:08] brez_ has joined the channel
[14:08] edude03 has joined the channel
[14:10] xippi has joined the channel
[14:10] jakehow has joined the channel
[14:11] tjholowaychuk has joined the channel
[14:11] EyePulp has joined the channel
[14:12] aheckmann has joined the channel
[14:14] soolwan has joined the channel
[14:15] maru_cc_ has joined the channel
[14:15] NetRoY has joined the channel
[14:18] jslatts has joined the channel
[14:19] Camacho has joined the channel
[14:20] Aikar: lrn2quitffxianddoothershit
[14:20] Aikar: mt
[14:20] sivy has joined the channel
[14:22] smtlaissezfaire has joined the channel
[14:22] eee_c has joined the channel
[14:24] catshirt has joined the channel
[14:25] perezd has joined the channel
[14:25] maushu has joined the channel
[14:28] jasong_at_apache has joined the channel
[14:29] emmanuel_ has joined the channel
[14:29] seb_m has joined the channel
[14:29] ale has joined the channel
[14:30] ale: Hello, can somebody explain me how can I work with routes? Let's say I want to access localhost/testnode/2749 which 2749 is the chat id. How can I do to mantain the messages of that chat's id on that link?
[14:31] Clex: ale: with express?
[14:31] explodes: 'abc' == ['abc']  but ['abc'] != ['abc'] whut
[14:31] digitaltoad has joined the channel
[14:31] vortec2 has left the channel
[14:31] jbrokc has joined the channel
[14:31] meat_popsicle has joined the channel
[14:31] amaudy has joined the channel
[14:32] digitaltoad has joined the channel
[14:32] ale: Clex: I have this: http://pastebin.com/gVic8H2A but when I access that localhost/testnode/hey static page, I get 404
[14:32] adrianmg has joined the channel
[14:32] seb_m: ale: app.get('/testnode/:routeid', function(req, res) { callback code in here })
[14:32] seb_m: req.params.id in your example isn't going to be set
[14:32] Clex: seb_m: that works with express.
[14:33] Clex: ale does not seem to use it.
[14:33] Clex: Even if he should. ;-)
[14:33] ale: Yes, I require express
[14:33] ale: createServer() and app.listen(8080)
[14:33] ale: But when I access localhost/testnode/hey static page, I get 404
[14:34] tjholowaychuk: ale the names used :<here> end up req.params.<here>
[14:34] Isaiah has joined the channel
[14:34] edude03 has joined the channel
[14:34] Clex: localhost:8080/testnode/hey
[14:34] wink_: anyone aware of any sound bindings to node? alsa, etc?
[14:35] ale: Clex: But I don't want the user to write :8080..how can I prevent that?
[14:35] davidsklar has joined the channel
[14:35] Clex: Then bind 80 instead of 8080.
[14:36] ale: But I am already running io on 81
[14:36] chjj: note that you have to be root to bind to low ports
[14:36] chjj: ;)
[14:36] Clex: app.listen(8080);
[14:36] Peniar has joined the channel
[14:36] Clex: That means you binds on 8080.
[14:36] Clex: The default http port is 80.
[14:36] seivan has joined the channel
[14:36] Clex: That's why localhost == localhost:80
[14:36] Clex: Otherwise you have to specify it.
[14:36] NeCkEr has joined the channel
[14:36] lukegalea: You can use authbind
[14:36] lukegalea: to get around the need to be root
[14:36] meat_popsicle_ has joined the channel
[14:37] Clex: But as chjj said, you must be root.
[14:37] ale: Clex: I know, but I put app.listen(80) and I get address in use
[14:37] Clex: You've got something already running.
[14:37] seb_m: ale: you must have another web process in use, like apache or nginx or something
[14:37] pixel13 has joined the channel
[14:37] Clex: Like apache, lighttpd or some shit.
[14:37] seb_m: ale are you on a mac
[14:37] Clex: You can check with netstat -nlpvt
[14:37] ale: seb_m: no, linux mint
[14:37] lukegalea: you can use netstat to see what's running on that port.
[14:37] ablomen: ale, if you are going to run multiple servers on there you can use something like mod_proxy for apache
[14:38] JJMalina has joined the channel
[14:38] clifton has joined the channel
[14:38] ale: I am not using apache, apache creates threads and I don't want that to happen
[14:38] ablomen: with that you can proxy for example a different domain name or subdomain to localhost:8080
[14:38] ale: maybe io is on that port, is this possible?
[14:38] ablomen: or whatever other port
[14:38] ale: ablomen: how's that?
[14:39] mikedeboer has joined the channel
[14:39] ablomen: ale, well with mod_proxy, you can use that in combination with vhosts to bind a virtual host to a different ip/port
[14:39] gozala1 has joined the channel
[14:40] Clex: Erk.
[14:40] ablomen: so it will proxy requests to example.org:80 to 12.34.56.78:8080 on the server, if you are only running node.js you can use that to proxy too
[14:40] ale: Ok..cool! Thanks
[14:41] ale: Listen guys, I got it working, I access to any localhost/testnode/:id but it's loading..loading and never stops..how can I prevent this?
[14:41] chjj: res.end()
[14:42] chjj: or res.send('') with express
[14:42] ale: Ok, and now, how can I do to keep the messages sent on that url, on that url?
[14:42] chjj: huh?
[14:42] tjholowaychuk: ACTION confused
[14:43] ale: I mean, making a multi-room chat
[14:43] Clex: Try the hello world stuff before. :p
[14:44] ale: Let's say I am in /2491 then all the messages sent on /2491 will be keep on /2491 and won't be seen from any other url
[14:44] chjj: yeah, try something simple first, dont overdo it
[14:44] tjholowaychuk: just use socket.io, express wouldn't have much to do with chat rooms
[14:44] ale: I am also using socket.io
[14:44] tjholowaychuk: other than showing the page and setting the room number or something
[14:44] Clex: ale: you're gonna need a database.
[14:44] ale: I am using a DB
[14:44] Clex: Then put your stuff in it.
[14:44] Clex: Then display it to people.
[14:44] ale: But for what? I don't want to keep anything on it
[14:45] tjholowaychuk: asking people how to do each step wont really help you learn :p
[14:45] ale: It will overload
[14:45] tjholowaychuk: take a look at the socket.io examples
[14:45] tjholowaychuk: i'm pretty sure there is a chat
[14:45] ale: There is, but not with multi-room
[14:46] pjacobs has joined the channel
[14:46] RORgasm has joined the channel
[14:46] mbrevoort has joined the channel
[14:46] Clex: ale: then try to think a little by yourself to do it. :)
[14:46] seb_m: ale: i asked a similar question on SO once and got quite a detailed answer : http://stackoverflow.com/questions/4445883 
[14:47] bksf has joined the channel
[14:47] danielzzz has joined the channel
[14:47] guydoingstuff has joined the channel
[14:48] ryanfitz has joined the channel
[14:48] dgathright has joined the channel
[14:48] bksf: hey everyone i followed this fast one on stackoverflow for setting up nginx and node.js so that i can host host multiple domains on my rackspace. / i've setup servers before, but have never worked with nginx + node.js. everything works fine .. except my socket.io is just timing out / on the client side it just polls and never gets a response back with a single get. on the server side, there is a timeout over and over 
[14:48] bksf: http://stackoverflow.com/questions/5009324/node-js-nginx-and-now
[14:48] davidascher has joined the channel
[14:48] mrryanjohnston_ has joined the channel
[14:49] danielzzz: hello, would anybody recommend a library to make simulated post calls to a website (like from a form)?
[14:49] gazumps has joined the channel
[14:49] mrryanjohnston_: Is there any nice module out there that will allow an event to be emitted when a certain time occurs (arbitrarily 3:30am Sunday morning)?
[14:49] __tosh has joined the channel
[14:50] mrryanjohnston_: I'd rather not have to have an interval check every 1 minute, but if that's the most efficient way, so beit
[14:50] Clex: danielzzz: what about telnet or netcat ?
[14:50] Clex: Or even curl.
[14:50] mrryanjohnston_: ^
[14:50] mrryanjohnston_: what Clex said
[14:50] EyePulp: mrryanjohnston: there's always cron
[14:51] danielzzz: Clex, I need it as a part of a node app
[14:51] pdonald: bksf: http://www.letseehere.com/reverse-proxy-web-sockets
[14:51] MooGoo: mrryanjohnston_: you could calculate how much time needs to elapse until your target then setTimeout based on that
[14:52] pdonald: mrryanjohnston_: setTimeout(function() { emit('wakeup'); }, new Date(future)-Date.now());
[14:52] bksf: thanks pdonald 
[14:52] Clex: danielzzz: then use a socket to write a POST HTTP data.
[14:52] mrryanjohnston_: pdonald: ah, that's pretty briliant actually.
[14:52] mrryanjohnston_: brilliant, too.
[14:52] Clex: That's quite simple actually.
[14:52] CrisO has joined the channel
[14:53] danielzzz: Clex: yep, I would probably fall back to this - I was just wondering if there is any higher lever lib to do it
[14:53] mrryanjohnston_: EyePulp: is there a way for node.js to interact directly with cron? if I were working on a nodester or nodejitsu or no.de server, I don't think I'd have access to cron
[14:53] danielzzz: something like jQuery.post()
[14:53] Clex: danielzzz: https://github.com/technoweenie/node-scoped-http-client ?
[14:53] Clex: Just looked for "node http client" in Google.
[14:54] danielzzz: Clex: have you used that one?
[14:54] danielzzz: I checked this site: http://blago.dachev.com/modules (which is great btw)
[14:54] EyePulp: mrryanjohnston: I used a tool, some call it "google" and found this (first result for "nodejs cron")  https://github.com/ncb000gt/node-cron
[14:54] Clex: Nope, even heard of it before 2 minutes ago.
[14:54] EyePulp: =P
[14:55] pdonald: danielzzz: https://github.com/mikeal/request
[14:55] newy has joined the channel
[14:55] tjholowaychuk: pdonald there are libs like tobi / zombie for testing
[14:55] danielzzz: pdonald: thx - checking
[14:56] perezd has joined the channel
[14:56] mrryanjohnston_: EyePulp: this google you speak of is an interesting tool
[14:56] losing has joined the channel
[14:56] EyePulp: mrryanjohnston: It's a fad
[14:57] mrryanjohnston_: EyePulp: i bet. yahoo is better.
[14:57] mrryanjohnston_: EyePulp: but seriously folks...
[14:57] mrryanjohnston_: EyePulp: have you used this module before?
[14:57] ctrimm has joined the channel
[14:58] ctrimm: Hello, everyone! Can anyone tell me the easiest way to update Node to the lastest stable version?
[14:58] danielzzz: ctrimm, nvm
[14:58] progme has joined the channel
[14:58] ctrimm: Ah-ha, thanks danielzzz!
[14:59] danielzzz: ctrimm, https://github.com/creationix/nvm
[14:59] danielzzz: it really takes most of the headaches away
[14:59] danielzzz: and installs with npm as a bonus ;)
[15:00] kevwil has joined the channel
[15:00] mrryanjohnston_: this module looks freakin' sweet
[15:00] robertfw has joined the channel
[15:01] explodes: With riak-js, is there any way to specify what vclocks your update is revising?
[15:01] ctrimm: Very, nice! Thanks so much!
[15:01] losing has joined the channel
[15:01] gg777 has joined the channel
[15:02] MonsieurLu has joined the channel
[15:03] spasquali has joined the channel
[15:03] spasquali has left the channel
[15:03] rfay has joined the channel
[15:03] xerox: PhpDaemon: An event-driven server-side framework - http://phpdaemon.net/
[15:04] xerox: is it just me or did they forget to configure the event "user wants to see the web page" ?
[15:04] xerox: xD
[15:04] jacobolus has joined the channel
[15:05] bshumate has joined the channel
[15:05] bshumate has joined the channel
[15:05] jbrokc has joined the channel
[15:06] hydrozen has joined the channel
[15:06] mrryanjohnston_: xerox: well it IS just a framework, afterall :P
[15:06] mrryanjohnston_: thanks for all of your help everyone. I really appreciate it
[15:07] shanebo: hey guys what's the best way to do a redirect?
[15:07] TomY has joined the channel
[15:07] MooGoo: it's PHP what do you expect
[15:07] xerox: shanebo: res.redirect(..)
[15:07] gazumps has joined the channel
[15:07] saschagehlich has joined the channel
[15:07] MooGoo: heh
[15:07] softdrink has joined the channel
[15:07] MooGoo: cute
[15:08] shanebo: xerox res.redirect(url) ?
[15:08] shanebo: xerox, error says there's no method redirect method on response
[15:09] xerox: turns out it's added by either connect or express
[15:09] yhahn has joined the channel
[15:09] xerox: http://expressjs.com/guide.html#res.redirect()
[15:09] xerox: so there' that.
[15:09] tjholowaychuk: express
[15:09] shanebo: i'm using connect
[15:09] Poetro has joined the channel
[15:09] Poetro has joined the channel
[15:10] xerox: https://github.com/visionmedia/express/blob/master/lib/response.js#L314
[15:10] tjholowaychuk: then you've gotta add that method or write 4 or 5 lines :p
[15:11] traph has joined the channel
[15:13] xerox: tjholowaychuk: is there syntax highlighting for jade somewhere?
[15:14] tjholowaychuk: for what editor?
[15:14] tjholowaychuk: im aware of https://github.com/digitaltoad/vim-jade
[15:14] tjholowaychuk: and
[15:14] tjholowaychuk: https://github.com/miksago/jade-tmbundle
[15:14] zane has joined the channel
[15:14] micheil: yeah, that bundle sucks and needs maintainers
[15:14] xerox: I'm using coda but I guess I can use something else for the views
[15:15] xerox: for some pretty colors
[15:15] micheil: if anyone wishes to maintain it, tell me and I'll make you able to commit to it
[15:15] tjholowaychuk: micheil i'd do it if i didnt hate textmate syntaxes so much :(
[15:15] sbisbee has joined the channel
[15:16] tjholowaychuk: wish there was a nice be all end all solution for those so youdont have to change it per editor
[15:16] tjholowaychuk: kinda lame
[15:16] xerox: gtk has something like that, but that does not help osx at all
[15:17] kenperkins has joined the channel
[15:17] softdrink: sublime edit 2 can use textmate bundles apparently
[15:18] Poetro: yes, that is mine
[15:18] d0k has joined the channel
[15:19] Poetro: there are a couple ones missing on top and on the middle
[15:19] Poetro: i removed when i reviewed
[15:19] Poetro: oh, i can log in through the destop client :P
[15:19] cjm has joined the channel
[15:20] ekryski has joined the channel
[15:21] vid__ has joined the channel
[15:21] aheckmann has joined the channel
[15:22] Swizec has joined the channel
[15:22] Pilate has joined the channel
[15:22] heavysixer has joined the channel
[15:23] mwhooker has joined the channel
[15:23] xerox: uh I never thought about this before, but, can one use require('...') in the browser, by including some magical file?
[15:24] tjholowaychuk: we're doing that with our latest project
[15:24] TheJH: xerox, not really, but there is stuff like "browserify"
[15:24] TheJH: !npm search browserify
[15:24] jhbot: packages (short format): progressify, fileify, jadeify, shimify, jquery-browserify, browserify, caustic-browserify
[15:24] liar has joined the channel
[15:24] tjholowaychuk: in dev it adds the list of scripts for easy debugging require() still works the same way though
[15:24] tjholowaychuk: and in prod
[15:24] tjholowaychuk: `make`
[15:24] tjholowaychuk: bundles them all up
[15:25] slifty has joined the channel
[15:25] tjholowaychuk: not sure if we'll open-source it, it's kinda like browserify but easy to debug
[15:25] tuxnsk has joined the channel
[15:25] tjholowaychuk: took like 10 minute to write though so i dunno
[15:25] xerox: yeah I will stick to script src
[15:26] xerox: thx both of you
[15:26] tjholowaychuk: automagical client-side scripts can get annoying
[15:26] perezd has joined the channel
[15:26] tjholowaychuk: but proxying them to inject require() functionality is slightly less annoying
[15:26] tjholowaychuk: so far at least
[15:26] eee_c1 has joined the channel
[15:26] ryanfitz has joined the channel
[15:27] kriszyp has joined the channel
[15:27] max8613 has left the channel
[15:28] stepheneb has joined the channel
[15:28] bzinger_ has joined the channel
[15:29] smus has joined the channel
[15:30] mpavel has joined the channel
[15:30] dguttman has joined the channel
[15:31] kevwil_ has joined the channel
[15:32] halfhalo-work has joined the channel
[15:32] dguttman has joined the channel
[15:32] Bogh has joined the channel
[15:34] nadirvardar has joined the channel
[15:34] balaa has joined the channel
[15:34] hij1nx has joined the channel
[15:35] caiges has joined the channel
[15:35] edude03 has joined the channel
[15:35] threecreepio has joined the channel
[15:36] brolin has joined the channel
[15:37] mjr_ has joined the channel
[15:37] jakehow has joined the channel
[15:38] isaacs has joined the channel
[15:38] Aiden__ has joined the channel
[15:39] stagas has joined the channel
[15:39] broofa has joined the channel
[15:39] smathy has joined the channel
[15:39] smathy has joined the channel
[15:40] kevwil_ has left the channel
[15:41] HenrikJoreteg has joined the channel
[15:41] mbrevoort: isaacs: strange question. is https://isaacs.iriscouch.com/registry/ and http://isaacs.iriscouch.com/registry/ (http vs https) - when I try to replicate via https I see this in the logs "no common ancestry -- performing full replication"
[15:42] isaacs: mbrevoort: yah, because i swapped out the db with a clean one that lacks the herpes record
[15:43] halfhalo-work: I... what?  herpes in a db?  what type of db are your running there? stdb?
[15:43] EyePulp: ACTION missed everything until the herpes part
[15:43] EyePulp: stdb - nice
[15:43] isaacs: halfhalo: hahahah
[15:43] EyePulp: It supports the unintentional inheritance model
[15:44] mbrevoort: isaacs: easily possible to point https to the same db as http? when I try to sync over http I think my connection is getting botched mid sync and it just stops and hangs with no error
[15:44] k1ttty has joined the channel
[15:44] isaacs: mbrevoort: they point at the same db
[15:44] isaacs: mbrevoort: yes, there is some case that rnewson was looking into where the target gets a 400 error with no body, and dies.
[15:45] isaacs: mbrevoort: if you just keep trying over and over again, it eventually gets past it
[15:45] jbrokc has joined the channel
[15:45] mbrevoort: isaacs: the only way I can get replication going again after it stops (over http) is to restart couchdb
[15:45] isaacs: mbrevoort: that's odd
[15:46] isaacs: i haven't seen that
[15:46] mbrevoort: isaacs: I know... it makes me very sad :(
[15:46] unlink has joined the channel
[15:46] unlink has joined the channel
[15:46] mbrevoort: isaacs: so should I be seeing the ancestry difference between https and http?
[15:46] isaacs: so, halfhalo, EyePulp: the couchdb herpes record is a record with an _id of "" (empty string), which would show up in couch 1.0 and before in some odd cases when a view function throws.
[15:46] isaacs: there's no way to delete it
[15:47] isaacs: and it breaks stuff sometimes
[15:47] Aiden__ has joined the channel
[15:47] EyePulp: And it causes a painful discharge... of data
[15:48] Circlefusion has joined the channel
[15:49] meso_ has joined the channel
[15:51] xerox: isaacs: http://pastebin.com/raw.php?i=mb4THBkG
[15:52] meso__ has joined the channel
[15:52] isaacs: yep, hold on
[15:52] xerox: sure
[15:53] amaudy has left the channel
[15:53] perezd has joined the channel
[15:53] sonnym has joined the channel
[15:54] stephank has joined the channel
[15:54] jan____ has joined the channel
[15:56] stagas_ has joined the channel
[15:56] jan____ has joined the channel
[15:57] isaacs: xerox: https://gist.github.com/1122990
[15:57] quest88 has joined the channel
[15:58] qbert has joined the channel
[15:58] xerox: sweet isaacs 
[15:59] yhahn has left the channel
[15:59] brianc: reading about the v8 optomizing compiler http://wingolog.org/archives/2011/08/02/a-closer-look-at-crankshaft-v8s-optimizing-compiler makes me feel so dhumb
[16:00] up_the_irons has joined the channel
[16:01] dgathright has joined the channel
[16:02] mikedeboer has joined the channel
[16:03] jslatts_ has joined the channel
[16:04] Clex: brianc: that's why being a web developper sucks.
[16:05] rich97 has joined the channel
[16:05] baudehlo: those guys probably couldn't create a web site to save their lives though ;)
[16:06] rich97: Hey, I'm just getting start with node and I'm getting a strange error when trying to install express: npm ERR! 404 'express' is not in the npm registry.
[16:06] isaacs: rich97: yep, on it.
[16:06] isaacs: https://gist.github.com/1122990
[16:06] tjholowaychuk: oh noes! haha
[16:06] perezd has joined the channel
[16:06] voodootikigod has joined the channel
[16:06] rich97: isaacs: Thanks I'm glad it wasn't just me begin stupid. :)
[16:06] yhahn has joined the channel
[16:07] jtsnow has joined the channel
[16:07] isaacs: registry fixed.
[16:07] isaacs: it was me being stupid
[16:08] AvianFlu has joined the channel
[16:08] xerox: <3
[16:08] isaacs: xerox, rich97 fixed
[16:09] xerox: acknowledged 
[16:09] softdrink: tjholowaychuk:  is there a way to *keep* a comment in stylus's output?
[16:10] tjholowaychuk: softdrink good question haha. i can't remember, i dont think so actually
[16:10] softdrink: dang
[16:10] colinclark has joined the channel
[16:10] zeropx has joined the channel
[16:11] eastender has joined the channel
[16:13] M_ has joined the channel
[16:13] balaa has joined the channel
[16:14] rich97: isaacs: Yup, all working here. :)
[16:14] romainhuet has joined the channel
[16:14] rhaen has joined the channel
[16:14] sub_pop has joined the channel
[16:15] softdrink: tjholowaychuk:  feature request? :3
[16:15] tjholowaychuk: softdrink add an issue, I'll check in a bit if we have that or not, i dont think so though
[16:15] softdrink: alrighty
[16:16] dannycoates has joined the channel
[16:16] softdrink: it's certainly no big deal though
[16:16] tanepiper has joined the channel
[16:17] shanez has joined the channel
[16:18] andrewvos has joined the channel
[16:18] jerrysv has joined the channel
[16:18] mraleph has joined the channel
[16:18] dscape has joined the channel
[16:19] spetrea has joined the channel
[16:19] mraleph: isaacs: ping? :-)
[16:19] softdrink: woot i have a workaround:  @css{/* my comment */}
[16:19] isaacs: hi
[16:19] Destos has joined the channel
[16:19] mraleph: hi. 
[16:19] tjholowaychuk: softdrink haha nice!
[16:20] mraleph: isaacs: I have kind of strange question. My friend is trying to use npm but gets strange stuff. let me gist it.
[16:20] _root_ has joined the channel
[16:20] isaacs: mraleph: Host not found and such?  404s?
[16:20] isaacs: mraleph: try again.
[16:20] balaa has joined the channel
[16:20] isaacs: mraleph: also, it's broken on node master
[16:20] mraleph: isaacs: exactly.
[16:20] isaacs: the 404s were because i fat-fingered a config
[16:20] mraleph: isaacs: ah. I see
[16:21] isaacs: the Host not found is because http2 has a typo we all missed.
[16:21] isaacs: mikeal's adding tests and fixing it.
[16:21] TooTallNate has joined the channel
[16:21] mraleph: isaacs: so he has to do what? roll back to some 0.5.x?
[16:21] McMAGIC--Copy has joined the channel
[16:21] isaacs: mraleph: roll back to 0.4.latest
[16:21] mraleph: k
[16:21] c4milo has joined the channel
[16:21] isaacs: mraleph: it's 0.5.3 that broke it
[16:21] mraleph: thanks for your help
[16:22] isaacs: but stable is usually best for npm.  master/unstable works *most* of the time, but breaks more often (as unstable branches tend to do)
[16:22] isaacs: np
[16:22] isaacs: mraleph: i think you can also compile node with --use-http1 now, and get the old behavior.  but really, if you're going to do that, may as well use stable :)
[16:23] pgte has joined the channel
[16:23] mundanity has joined the channel
[16:24] dberlinger has joined the channel
[16:24] mikeal: isaacs: 0.5.3 went out before http2 was made default
[16:24] JasonSmith has joined the channel
[16:24] mikeal: it's only default on master
[16:24] monokrome has joined the channel
[16:24] MooGoo has joined the channel
[16:24] seivan has joined the channel
[16:25] vid__ has joined the channel
[16:25] eee_c has joined the channel
[16:26] TheJH: what benefits does http2 give me?
[16:26] mikeal: it's unbroken :)
[16:26] Hosh has joined the channel
[16:26] optixx has joined the channel
[16:27] domo: if I'm writing a module that performs some task - lets say opens an http connection and does something with the response, should I write my module function with a callback built in? would it be considered "blocking" if I didn't? for example ..   foo = mymodulename.doSomethingWithHttp('bar'); vs foo = mymodulename.doSomethingWithHttp('bar', function(...) { ..... });
[16:27] sweetd has joined the channel
[16:27] chjj: domo: you kind of have to allow a callback
[16:28] chjj: http in node is async
[16:28] Me1000 has joined the channel
[16:28] JumpMast3r has joined the channel
[16:28] chjj: theres no way to make it synchronous
[16:29] chjj: unless you write your own http binding or something
[16:29] domo: yea but without a callback, I just returned what the http request gave me
[16:29] chjj: ...huh?
[16:29] chjj: http.request returns a request object, are you sure thats not what you got?
[16:30] chjj: theres no way to return the response
[16:30] chjj: because you get the response object in a callback
[16:30] domo: ok - haha, let me re-explain. let's wrap http.get in a function
[16:30] domo: inside http.get, i have res.on('data') which takes a callback function of course
[16:30] domo: so what if we call foo()
[16:31] kevindente has joined the channel
[16:31] chjj: ?
[16:31] domo: ill pastebin
[16:31] chjj: the only way to conveniently expose that data is through a callback
[16:32] chjj: or to "return" that data i mean
[16:32] domo: http://pastebin.com/iKJJDVBH
[16:32] domo: test wont be hello world, right?
[16:32] Me1000 has joined the channel
[16:33] domo: i would need to implement a callback in the function foo
[16:33] dshaw_ has joined the channel
[16:33] domo: to carry up what I return
[16:33] chjj: yes
[16:33] chjj: you cant just return something
[16:33] domo: ok.. now this brings me to my next question
[16:33] chjj: you need to execute a callback
[16:33] domo: what if im using crypto - where there is no async
[16:34] chjj: hhm?
[16:34] domo: I can just call the crypto functions and return normally without callbacks of course.. right?
[16:34] chjj: right
[16:34] domo: ok
[16:34] chjj: but if you doing anything that requires a callback, you yourself have to execute a callback
[16:34] domo: yes
[16:34] qbert has joined the channel
[16:35] domo: so using non async function wont hang the node process right?
[16:35] domo: other events will still fire
[16:35] chjj: well it will actually
[16:35] chjj: the point of node is to make the things that would block for a long time, asynchronous
[16:35] chjj: like IO
[16:36] chjj: other functions will block, just not for very long
[16:36] domo: I see
[16:36] domo: ah so theres async and sync read file functions
[16:36] heavysixer has joined the channel
[16:36] chjj: yes
[16:37] chjj: sync file io is useful if youre not doing it while youre serving requests on an http server for example
[16:37] domo: so what if somethign isn't async and you need it to be - say since you're serving an http request
[16:37] chjj: for example, `require` uses sync file io
[16:37] caolanm has joined the channel
[16:37] domo: for example, im using crypto lib builtin to node - and im using it on an http request
[16:38] chjj: theres no real way to make something async in JS land right now
[16:38] chjj: you can use eio_custom in C++ land
[16:38] chjj: the most you can do in js right now, is split up your work into process.nextTick's
[16:38] domo: yeah
[16:38] chjj: and hopefully serve some requests in between the ticks
[16:39] newy has joined the channel
[16:39] catb0t has joined the channel
[16:40] qbert: hmm, whats the best way to host more than one website with nodejs running on port 80 ?  I was hoping to have  a sub domain run an entirely different app, foo.bar.com and www.bar.com would run 2 apps
[16:40] terite has joined the channel
[16:40] chjj: you could use connect's "vhost" middleware
[16:40] domo: vhosts?
[16:40] domo: ^
[16:40] dnyy has joined the channel
[16:40] joshthecoder has joined the channel
[16:41] shinuza has joined the channel
[16:42] gg777 has joined the channel
[16:43] te-brian has joined the channel
[16:44] Leonidas_ has joined the channel
[16:44] Leonidas_ has joined the channel
[16:44] elijah has joined the channel
[16:44] pifantastic_ has joined the channel
[16:45] softdrink: freaking border radius content clipping problems
[16:45] Hosh has joined the channel
[16:46] gr-eg has joined the channel
[16:46] slajax has joined the channel
[16:48] catshirt has joined the channel
[16:48] patrickgamer1 has joined the channel
[16:49] patrickgamer1 has left the channel
[16:50] luke` has joined the channel
[16:51] towski has joined the channel
[16:51] fumanchu182: So has anyone ever noticed that NPM places .gitignore files in your module installations and that if you then try and add those files to your own git repository all hell breaks loose?
[16:52] aconbere has joined the channel
[16:53] xerox: you should add your dependencies to package.json fumanchu182 
[16:53] xerox: and then 'npm install' in the newly cloned repo will fetch them
[16:53] mehlah has joined the channel
[16:54] xerox: pro tip: you can npm install <module> --save to both add the dependency to node_modules/ AND to package.json at the same time!
[16:54] ank has joined the channel
[16:55] gg777 has joined the channel
[16:55] fumanchu182: xerox, no no that's not what I mean.  So in my own project I install locally two packages right, mysql and socket.io.  Then I want to add that to my repository, so I do git add *.  Since there are traces of .gitignore files left in the folders.  The dependencies never get added to the repository.
[16:55] jetienne has joined the channel
[16:55] xerox: you missed the first part
[16:55] xerox: you should add the dependencies to packages.json not to the repository
[16:56] mpoz2 has joined the channel
[16:56] fumanchu182: 1.) They need to be in the repository 2.) What you said would work if they didn't need to be in the repository.  :)
[16:56] TheJH: fumanchu182, why do they need to?
[16:56] stelleg: anyone here use the node messagepack module?
[16:56] fumanchu182: Because when I deploy I don't run npm commands on the server.  Just deploy the project and clean up.
[16:56] nail_ has joined the channel
[16:56] stelleg: msgpack
[16:56] stbuehler has joined the channel
[16:57] coffeecup has joined the channel
[16:58] fumanchu182: So therefore when I say hey lets add all these projects to my sites git repository, they won't be.  ".gitignore" files prevent that.
[16:58] meandi has joined the channel
[16:58] fumanchu182: Which then behooves me as to why locally install any packages anyway if the dependencies aren't going to be added.
[16:58] kavla has joined the channel
[16:59] xerox: to use them
[17:00] Me1000 has joined the channel
[17:01] optixx has joined the channel
[17:01] xerox: fumanchu182: different idea: make up a new directory, like vendor/ and put them there without the .gitignore
[17:01] rhaen has joined the channel
[17:02] puffpio has joined the channel
[17:02] adrianmg has left the channel
[17:02] airportyh has joined the channel
[17:02] Will| has joined the channel
[17:03] fumanchu182: xerox, yeah I wound up scrubbing all the .gitignore filse but it caused chaos.  it was working on my local dev machine but on the server all sorts of dependencies were missing
[17:03] ank has joined the channel
[17:03] mpavel has left the channel
[17:04] vid___ has joined the channel
[17:04] slifty has joined the channel
[17:04] gg747 has joined the channel
[17:05] admc has joined the channel
[17:06] maqr has joined the channel
[17:06] brainproxy: anyone experimenting with pinf's loader-js? thoughts on it?
[17:07] kenbolton has joined the channel
[17:07] guillermo has joined the channel
[17:07] kevwil has joined the channel
[17:07] Cleer has joined the channel
[17:08] jsj has joined the channel
[17:12] Xano has joined the channel
[17:12] `3rdEden has joined the channel
[17:13] topaxi has joined the channel
[17:13] ryanj has joined the channel
[17:14] patrickgamer has joined the channel
[17:14] __tosh has joined the channel
[17:14] booo has joined the channel
[17:16] jbrokc has joined the channel
[17:16] ekryski has joined the channel
[17:18] sveisvei_ has joined the channel
[17:18] davidascher has joined the channel
[17:21] kjeldahl_ has joined the channel
[17:23] springmeyer has joined the channel
[17:24] scott_gonzalez has joined the channel
[17:25] sreeix has joined the channel
[17:26] Yuffster_work has joined the channel
[17:26] davididas has joined the channel
[17:27] cadorn has joined the channel
[17:27] admc has joined the channel
[17:29] aheckmann has joined the channel
[17:30] mike5w3c_ has joined the channel
[17:31] dnjaramba has joined the channel
[17:31] samsonjs has joined the channel
[17:31] namelessnotion_ has joined the channel
[17:32] dmwuw has joined the channel
[17:32] maushu: Any idea on how to hijack the http server request?
[17:33] maushu: Like, getting a request event and going 'hold your horses! this is mine' and no other listener gets it.
[17:33] maushu: I don't mind monkey patching.
[17:34] joshfng has joined the channel
[17:34] jesusabdullah: BE A MAN MAUSHU
[17:34] jesusabdullah: donkey punch that shit
[17:34] Gregor has joined the channel
[17:34] maushu: I would went with a donkey puched server. Not really my goal.
[17:34] maushu: *end
[17:35] jesusabdullah: but yeah, to be serious, I can't think of a better way but that doesn't mean there isn't one
[17:35] materialdesigner has joined the channel
[17:35] jesusabdullah: FALCON PUNCH
[17:35] maushu: My server is not pregnant.
[17:35] jesusabdullah: Why not? :(
[17:35] jesusabdullah: Miscarriage?
[17:35] TheJH: maushu, someRequest.emit = function(...) { ... }
[17:36] jacobolus has joined the channel
[17:36] ksheurs has joined the channel
[17:36] jesusabdullah: Isn't that effectively a monkey patch?
[17:36] jesusabdullah: I could be wrong!
[17:36] TheJH: jesusabdullah, I think that it is
[17:36] maushu: TheJH: thought about that. wouldn't that make the whole server slow?
[17:36] jesusabdullah: I use express more often than I do the http module
[17:36] __tosh has joined the channel
[17:36] TheJH: maushu, a little bit
[17:36] jesusabdullah: Just load balance across moar servers
[17:36] jesusabdullah: it's cool
[17:37] jesusabdullah: I'm not very good at caring about performance :(
[17:37] maushu: ...the problem is that affects every event.
[17:37] csm_ has joined the channel
[17:37] isaacs has joined the channel
[17:37] jesusabdullah: I bet isaacs would know
[17:37] TheJH: maushu, yes, but you can redirect those you're not interested in
[17:38] Aiden has joined the channel
[17:38] jesusabdullah: He's a pretty cool guy. He writes npm and doesn't afraid of anything.
[17:38] jesusabdullah: He forgot to invite me to his birthday party, though :( ;)
[17:38] TheJH: maushu, with something like EventEmitter.prototype.emit.apply(someRequest, arguments)
[17:38] kimico has joined the channel
[17:39] maqr: what testing suite are you guys using for client-side code? jasmine and jslitmus look good, but i'm not sure what the community favors
[17:39] jesusabdullah: hmm
[17:39] jesusabdullah: I'm holding out for testling
[17:39] jesusabdullah: I think jasmine might be what's good for now, but idk
[17:39] jesusabdullah: Honestly, I'm a server side kinda guy
[17:40] Cleer has left the channel
[17:40] TheJH: maqr, http://bit.ly/n5pVWV :P
[17:41] maqr: oh internet :P
[17:41] d0na1d has joined the channel
[17:41] jesusabdullah: haha! Same >:P
[17:41] heavysixer has joined the channel
[17:42] stagas_ has joined the channel
[17:43] materialdesigner: any way to add in console logs for any url requests made in Restler (or everyauth)
[17:43] materialdesigner: so I can see the entirety of the requests and responses?
[17:44] TheJH: materialdesigner, can you just fire up wireshark?
[17:44] materialdesigner: sure, I'll try that
[17:45] bksf has joined the channel
[17:45] necromancer has joined the channel
[17:48] pixel13 has left the channel
[17:48] saschagehlich: tjholowaychuk: looks like uglify-js has some problems with shebangs?
[17:49] tjholowaychuk: oh maybe
[17:49] TheJH: saschagehlich, are you tring to minify server-side code?
[17:49] tjholowaychuk: uglify
[17:49] tjholowaychuk: is kinda lame
[17:50] tjholowaychuk: i have to modify some other things anyways so I might pull it into stats
[17:50] saschagehlich: TheJH: nope, just fixin and testing "stats"
[17:50] tjholowaychuk: it (obviously) isn't aware that our top-level is wrapped by a function either so
[17:50] tjholowaychuk: root level returns are not valid
[17:50] chrisdickinson: tjholowaychuk: so, based on the lukewarm response to that pull request on node-bunker, i might just spin off a different coverage library
[17:50] saschagehlich: yeah
[17:50] tbranyen: uglify lame?
[17:50] chrisdickinson: (that will languish in obscurity)
[17:50] tbranyen: what is this
[17:51] tjholowaychuk: chrisdickinson i started one last night haha
[17:51] chrisdickinson: tjholowaychuk: haha
[17:51] chrisdickinson: tjholowaychuk: well, early bird gets the worm. anything i can help with, or have you got it handled?
[17:51] tjholowaychuk: i hate test related stuff but i was really hoping bunker was going to polish that edge off
[17:51] chrisdickinson: yeah, me too
[17:52] tjholowaychuk: i have the line-based stuff done, not sure if we really need the rest for now
[17:52] chrisdickinson: the only thing i'd like is for him to separate out the context creation; then building a library on top of it would be a cinch.
[17:52] tjholowaychuk: that's at least enough to remove jscov
[17:52] chrisdickinson: probably not. is it a similar api to the pull request?
[17:52] tjholowaychuk: i cant remember what the api was
[17:53] mjijackson has joined the channel
[17:54] chrisdickinson: basically call '<coveragelib>([optionalPath | Regexp])', which returns a callback that you call when you're done running code.
[17:55] saschagehlich: tjholowaychuk: how would you fix that too many open files thing? reading the files one after another?
[17:55] tjholowaychuk: ulimit -n
[17:55] tjholowaychuk: or yeah just capping it to some reasonable number
[17:55] saschagehlich: mhm kk
[17:57] CrabDude has joined the channel
[17:57] patrickgamer has left the channel
[17:57] norviller has joined the channel
[17:58] tjholowaychuk: saschagehlich im not sure if i'll finish it but i had another part (shoudl be a separate project)
[17:58] tjholowaychuk: to do live code heatmaps
[17:58] norviller: hey all, is node.io the best solution for walking and processing multiple files within a directory tree?
[17:58] saschagehlich: oh okay
[17:58] hij1nx has joined the channel
[17:59] tjholowaychuk: so you could run your server and watch all the ast nodes light up as they are hit
[17:59] klovadis has joined the channel
[17:59] tjholowaychuk: not sure if it's overly useful but it's fun haha
[17:59] reid has joined the channel
[18:00] matomesc has joined the channel
[18:00] sweetd_ has joined the channel
[18:01] _sorensen_: tj: you should totally do it
[18:01] alvaro_o has joined the channel
[18:03] saschagehlich: node.js is the best solution for everything
[18:03] saschagehlich: ;)
[18:04] mjr_ has joined the channel
[18:04] patcito has joined the channel
[18:04] saschagehlich: okay that won't help you I guess. but yes, why not, norviller
[18:05] saschagehlich: ah and it's actually called node.js, not .io :D
[18:05] norviller: saschagehlich https://github.com/chriso/node.io
[18:07] piscisaureus has joined the channel
[18:07] tristanseifert has joined the channel
[18:08] jacobolus has joined the channel
[18:08] saschagehlich: oh lol
[18:08] saschagehlich: thought you were a newfag, sry
[18:10] yozgrahame has joined the channel
[18:10] AvianFlu has joined the channel
[18:11] bronson: actually, node.io looks pretty freakin cool.
[18:11] bronson: anyone using it for real?
[18:11] davidascher has joined the channel
[18:13] dgathright has joined the channel
[18:14] TheJH: bronson, yes. Although the "realest" thing I'm using it for is my bot here, jhbot - other people also use it for serious stuff.
[18:14] Aiden__ has joined the channel
[18:14] stepheneb has joined the channel
[18:14] bronson: TheJH, right on.  I'll give it a go.
[18:16] tauren has joined the channel
[18:16] vipaca has joined the channel
[18:18] sweetd has joined the channel
[18:18] bergie has joined the channel
[18:18] explodes has joined the channel
[18:18] dguttman has joined the channel
[18:19] patrickgamer1 has joined the channel
[18:19] schmidp has joined the channel
[18:21] bartt has joined the channel
[18:21] patrickgamer1 has left the channel
[18:23] hydrozen has joined the channel
[18:23] dherman has joined the channel
[18:23] Laurent3 has joined the channel
[18:25] TheFuzzball has joined the channel
[18:26] bradleymeck has joined the channel
[18:27] piscisaureus has joined the channel
[18:30] spadack has joined the channel
[18:31] AvianFlu has joined the channel
[18:31] eee_c has joined the channel
[18:33] zeade has joined the channel
[18:33] ank has joined the channel
[18:34] sub_pop has joined the channel
[18:36] TheJH: does Michael Ficarra have an IRC nick?
[18:36] Creap has left the channel
[18:41] dgathright has joined the channel
[18:41] simenbrekken has joined the channel
[18:42] mikeal has joined the channel
[18:43] Charuru has joined the channel
[18:43] binarypie has joined the channel
[18:44] AvianFlu has joined the channel
[18:44] brianc: saschagehlich: no need to be hostile towards new folks w/ the 'newfag' moniker. :(
[18:44] brianc: we don't want this turning into #rails now do we? ;)
[18:45] saschagehlich: true
[18:45] andrewvos has joined the channel
[18:45] saschagehlich: the js community is the friendliest coding community in my eyes and it will stay as it is
[18:45] brianc: first time I went into that irc room a few years ago I got mocked and trolled constantly. made me feel yucky towards rails for a long while
[18:46] __directory: popularity brings out the trolls
[18:47] Xano has joined the channel
[18:47] ryanfitz has joined the channel
[18:47] jhurliman has joined the channel
[18:47] dmwuw: register boots david@upwave.com
[18:47] dmwuw: Bah!
[18:48] brianc: __directory: in reference to your email I was thinking of something like this: post.select(post.title, post.content.substr(0, 500)).where(post.authorId.equals(10)); or something could generate {text: 'SELECT "post"."title", substr("post"."content", 0, 500) FROM "post" WHERE "post"."authorId" = $1', params: [10] }
[18:49] chjj: yeah, irc doesnt have a very good reputation for being nice to newcomers ;)
[18:49] saschagehlich: brianc: you mean #rails?
[18:49] __directory: brianc: yah, that would be nice.
[18:49] brianc: yeah I mean #rails. #node.js is generally very helpful & friendly.
[18:50] brianc: and I dunno what #rails is like nowadays
[18:50] sandropadin has joined the channel
[18:50] micheil has joined the channel
[18:51] TheJH: mhm... less than 100 people over there
[18:53] zanes has joined the channel
[18:54] blup has joined the channel
[18:58] ryanj has joined the channel
[18:58] piscisaureus has joined the channel
[18:59] kulor-uk has joined the channel
[19:00] temp01 has joined the channel
[19:02] AvianFlu has joined the channel
[19:02] __directory: buffer overflow on the mention of the word cloud
[19:04] Aiden has joined the channel
[19:04] TooTallNate has joined the channel
[19:04] markbao has joined the channel
[19:04] arlolra has joined the channel
[19:04] dmwuw has joined the channel
[19:04] xandrews has joined the channel
[19:05] Wizek has joined the channel
[19:05] nibblebo_ has joined the channel
[19:05] ohtogo has joined the channel
[19:05] cryptic has joined the channel
[19:05] sniper506th has joined the channel
[19:08] seivan has joined the channel
[19:12] shinuza has joined the channel
[19:12] saschagehlich: gnah still getting random parse errors from http.js
[19:12] migimunz: what would be the best way to share code (and I mean share code, not call server code from client) between node and browser? I
[19:12] saschagehlich: maybe I should really update to the latest stable node.js :(
[19:13] migimunz: I'd want to literally just load up the same files (and use the same functions) in my browser code
[19:13] shanebo: i can't seem to do two redirects in a row. any idea how to pull this off?
[19:13] piscisaureus has joined the channel
[19:14] saschagehlich: migimunz: have a look at http://nowjs.com/
[19:14] saschagehlich: shanebo: two redirects in a row? explain plz
[19:14] saschagehlich: you mean a 302 redirect to a url which does another 302?
[19:14] shanebo: saschagehlich yes
[19:14] saschagehlich: shanebo: should work - did you try it with curl -v -L "http://your.url"?
[19:14] saschagehlich: (which does verbose output and follows the Location: header automatically)
[19:16] shanebo: saschagehlich, I'm getting a "Can't render headers after they are sent to the client."
[19:17] saschagehlich: shanebo: could you gist your code?
[19:17] ank has joined the channel
[19:18] piscisaureus_ has joined the channel
[19:18] sweetd has joined the channel
[19:18] shanebo: saschagehlich, it's too much code/too many files
[19:19] shanebo: but basically I check for a session and if there's no session I redirect to /users/login
[19:20] saschagehlich: shanebo: did you check whether you did a double redirect?
[19:20] saschagehlich: so like doing res.redirect() twice?
[19:21] whitman has joined the channel
[19:21] shanebo: yeah I checked it and there's only one redirect
[19:21] localhost has joined the channel
[19:22] shanebo: saschagehlich this is it: http://pastie.org/private/yitlrh2fkippfbma64ijkg
[19:22] shanebo: then in my login action in users controller I have this
[19:23] lightcap has joined the channel
[19:23] shanebo: http://pastie.org/private/yitlrh2fkippfbma64ijkg
[19:23] saschagehlich: well
[19:23] felixge has joined the channel
[19:23] saschagehlich: req.url always stars with /
[19:24] saschagehlich: so it has to be req.url !== "/users/login"
[19:24] saschagehlich: otherwise you do a redirect and do res.render afterwards
[19:24] shanebo: that render method of the parent controller has a writeHead 200
[19:25] heavysixer has joined the channel
[19:25] alkema has joined the channel
[19:26] shanebo: saschagehlich oops added the slash in, still throwing the error though
[19:26] alkema: felixge ima here
[19:26] AvianFlu has joined the channel
[19:26] micheil: ryah: is simple/test-http-dns-fail meant to fail?
[19:27] saschagehlich: then try debugging it... put a console.log right before sending that redirect and look whether it's being sent on /users/login as well
[19:27] ryah: micheil: no
[19:27] micheil: okay
[19:27] saschagehlich: shanebo: you are definitely sending your status code twice, otherwise this error would not appear
[19:27] micheil: I've got it failing on v0.4.10 on os x 10.6
[19:28] micheil: https://gist.github.com/57799accb347c7e587f2
[19:28] patrickgamer has joined the channel
[19:28] shanebo: saschagehlich yeah I just don't know why it's doing it
[19:28] saschagehlich: Parse Error at Client.onData [as ondata] (http.js:1464:27) <-- has this already been fixed in a later nodejs version than 0.4.4=
[19:28] bradleymeck has joined the channel
[19:28] nibblebot has joined the channel
[19:29] sridatta has joined the channel
[19:30] jokil has joined the channel
[19:31] bayousoft has left the channel
[19:31] jokil: hey all. I have a node.js program that has a lot of network I/O. Does this mean that the process will get pre-empted immediately by the OS every time I do a socket.write ?
[19:32] micheil: jokil: what do you mean by pre-epmted?
[19:33] jokil: OS gives CPU time to another process
[19:33] augustl has joined the channel
[19:33] micheil: well, if node.js isn't doing anything with the CPU, then yes, that CPU time will be auto-allocated by the kernel to another process
[19:34] AvianFlu: where's the code for process.binding('stdio').writeError ? anybody know?
[19:34] micheil: (essentially node.js doesn't manage the CPU, the kernel does)
[19:34] micheil: that will be in src/node_stdio
[19:34] jokil: micheil: yeah, I get that. I am asking does socket.write cause node.js to idle?
[19:34] micheil: line 168 of src/node_stdio.cc
[19:35] patrickgamer has joined the channel
[19:35] micheil: well, as soon as socket.write has passed the data to the network and kernel, then it'll wait for events from the os on that socket
[19:35] patrickgamer has left the channel
[19:35] shanebo: saschagehlich do you think it may involve the server trying to redirect even on assets in the view?
[19:35] micheil: so I wouldn't call it idle.
[19:35] jokil: is socket.write non blocking?
[19:35] micheil: ys
[19:36] jokil: okay great. that's basically what I was asking
[19:36] jokil: thanks!
[19:36] micheil: everything in node is non-blocking, unless explicitly denoted
[19:36] micheil: (apart from require())
[19:36] unlink has joined the channel
[19:36] unlink has joined the channel
[19:36] saschagehlich: shanebo: well just try to find out where exactly you are sending status codes to - in the end - find out where you are sending them twice per response
[19:37] shanebo: saschagehlich well that's the thing, isn't a redirect supposed to hit the server and start over?
[19:37] micheil: ryah: yeah, test-http-dns-fail is definitely failing
[19:38] micheil: I'll try on 0.5.x
[19:38] CIA-65: node: 03Ben Noordhuis 07master * r12c8b27 10/ test/simple/test-child-process-kill.js : test: fix exec-after-fork race in test/simple/test-child-process-kill.js - https://github.com/joyent/node/commit/12c8b27e243724a40128b6e335713edc63993d5a
[19:38] CIA-65: node: 03Ben Noordhuis 07master * r88f416a 10/ doc/api/child_processes.markdown : docs: add race warning to `child_process.kill()` - https://github.com/joyent/node/commit/88f416a5edf248681f550741b38f93a3a6dd6472
[19:39] saschagehlich: shanebo: sure, but if you once respond with 302 and try to write another status code to the same response, node.js will throw an exception
[19:39] saschagehlich: which is exactly the one you are seeing
[19:39] maushu has joined the channel
[19:39] TheJH: shanebo, could you try to monkey-patch writeHead with "try{throw new Error('log')}catch(e){console.log(e.stack)}" or so?
[19:40] gazumps has joined the channel
[19:41] parshap has joined the channel
[19:42] slifty has joined the channel
[19:43] CrabDude has joined the channel
[19:43] shanebo: TheJH, saschagehlich, strange. This works --> http://pastie.org/private/yitlrh2fkippfbma64ijkg
[19:43] ank has joined the channel
[19:44] aconbere has joined the channel
[19:44] TheJH: shanebo, no, don't do that, remove the cause of the problem, that only hides it
[19:44] shanebo: agreed, but I can't find the problem
[19:45] shanebo: if I return in the if statement it should stop the code right?
[19:45] shanebo: or should I exit()?
[19:45] ryanj has joined the channel
[19:45] TheJH: shanebo, monkey-patch writeHead so that it prints the stack each time it gets invoked
[19:45] TheJH: shanebo, then you'll see two stack traces which show you two calls to writeHead for the same request
[19:46] shanebo: monkey patch it how?
[19:48] jetienne has joined the channel
[19:49] micheil has joined the channel
[19:50] sechrist has joined the channel
[19:50] sechrist: noooooode
[19:52] hij1nx has joined the channel
[19:52] milani has joined the channel
[19:52] TheJH: shanebo, just after the require, do something like 'var _writeHead=express.HTTPServer.prototype.writeHead; express.HTTPServer.prototype.writeHead = function() { try{throw new Error('log')}catch(e){console.log(e.stack)} _writeHead.apply(this, arguments)}'
[19:52] milani: can anyone help me with a module?
[19:52] milani: I have an object. I want my module to inherits all functions of this object.
[19:54] cjm has joined the channel
[19:54] TheJH: milani, is the thing your module returns a "constructor"?
[19:54] Generic_Dumbass has joined the channel
[19:55] TheJH: milani, in that case, "child.__super__ = parent.prototype;"
[19:55] milani: TheJH, here it is:
[19:55] milani: var mymodule = require('something');
[19:55] mbrevoort: isaacs: fyi: I'm going to switch my private registry to only have private packages and scrap the replication approach. As a stopgap I created a proxy that can be used for GETting packages, cascading through a list of registries
[19:55] milani: var myobj = mymodule.create();
[19:56] milani: myobj have some methods like view();
[19:56] __directory: brianc: i've started hacking up a similar sql generator - instance.select().where() etc.
[19:56] nibblebot has joined the channel
[19:56] __directory: brianc: yours is likely better but perhaps some of what I do can be pulled in to your work, etc
[19:56] Generic_Dumbass has left the channel
[19:57] milani: so I want have exports.view = myobj.view
[19:57] augustl has joined the channel
[19:57] brianc: __directory: sweet, let's compare soon
[19:57] kriszyp has joined the channel
[19:57] brianc: __directory: i keep starting over on it
[19:57] shanebo: so TheJH, basically code after the conditional isn't stopping. therefore it goes on eventually trying to render as 200
[19:57] brianc: __directory: thinking now I have to keep some sort of AST of the SQL 
[19:58] TheJH: milani, then you'll want something like for (key in myobj) { if (myobj.hasOwnProperty(key)) exports[key] = myobj[key]}
[19:58] brianc: __directory: especially for dealing w/ different sql syntaxes
[19:58] __directory: yah
[19:58] milani: TheJH, aha. is there any function for that? like util.inherits?
[19:59] mbrevoort: isaacs: FWIW here's the proxy I created for now http://pastebin.com/g4FxdaSm
[19:59] TheJH: milani, I don't know
[19:59] __directory: right now im just storing an array of sql pieces and joining them, in the instance.  That's not going to work for long
[19:59] brianc: __directory: yeah, had to reboot my idea after a few days of that
[20:00] shanebo: fixed: http://pastie.org/private/yitlrh2fkippfbma64ijkg
[20:00] milani: TheJH, thx
[20:00] jimt has joined the channel
[20:00] brianc: __directory: I will try to push this & let you know as soon as I get it a bit further along
[20:00] shanebo: thanks TheJH and saschagehlich
[20:00] __directory: sure - for now I'll follow you down the paths you've been to get more up to speed
[20:00] Sambasiva has joined the channel
[20:00] brianc: migimunz: check out browserify 
[20:01] Sambasiva: Hi all, in express, cookieParser() is not populating req.cookies
[20:02] shanebo: Sambasiva make sure it goes before session
[20:02] shanebo: http://senchalabs.github.com/connect/middleware-session.html
[20:02] tilgovi has joined the channel
[20:02] tilgovi has joined the channel
[20:04] __directory: there's rel for node
[20:04] __directory: arel port
[20:04] brianc: I know
[20:04] brianc: doesn't support parameterized sql
[20:04] brianc: and it's written in coffeescript
[20:04] __directory: i can't do coffeee
[20:04] __directory: s/can't/wont
[20:04] Camacho has joined the channel
[20:04] gazumps has joined the channel
[20:04] shanebo: __directory +1
[20:05] brianc: agreed
[20:05] TheJH: __directory, why? coffeescript is good :)
[20:05] andrewvos has joined the channel
[20:05] __directory: I'm a C guy and like js as it is
[20:05] shanebo: coffeescript is good in itself but why add another middle man?
[20:05] __directory: I think the coffee thing is good for people that enjoy that sort of syntax, though
[20:06] TheJH: __directory, do you like reading code where entire lines are used for brackets and curlies and so on? place on the screen is valuable!
[20:06] __directory: well, IM A MAN
[20:07] brianc: haha
[20:08] jbpros has joined the channel
[20:08] __directory: I like C, long sqls with a lot of joins, and believe knowing some assembler is good
[20:09] TheJH: you can't be helped :P
[20:09] brianc: should use that on an OKCupid profile
[20:09] puffpio has joined the channel
[20:09] __directory: haha
[20:09] __directory: Let me go run that line by my wife
[20:10] namelessnotion has joined the channel
[20:10] chjj: i love C, i love the old school feel of C
[20:10] malditogeek has joined the channel
[20:10] chjj: c syntax is underrated
[20:11] __directory: wife didn't enjoy it
[20:11] __directory: chjj: ya, me too!
[20:11] brianc: __directory: should the query generation only include table name qualified column names if that column name is duplicated (via a join or something of the like?)
[20:12] __directory: brianc:  probably
[20:12] brianc: k
[20:12] namelessjon: Pfft C.  FORTRAN is where it's at ;)
[20:12] brianc: kinda what i thought too.  less on the wire.  though it does complicate the generation
[20:13] __directory: it's going to get challenging with more complicated queries
[20:13] MrTopf has joined the channel
[20:14] __directory: but really, since it's not a more restrictive thing like an orm, we can just dump to hand written sql reallll easy
[20:14] mjr_ has joined the channel
[20:14] __directory: making it easier to not support every use case from the start
[20:14] brianc: __directory: yeah totes
[20:14] brianc: __directory: i think for start i'll include table names since it's easier
[20:15] qbert_ has joined the channel
[20:15] __directory: yah
[20:15] mikeal has joined the channel
[20:17] qbert_: anyone use express with connect vhost middleware ?
[20:17] localhost has joined the channel
[20:18] jvduf has joined the channel
[20:18] baudehlo has joined the channel
[20:19] xandrews has joined the channel
[20:19] __directory: select like is coming in faster then mongo on this too
[20:19] __directory: and im using field without an index
[20:24] Aiden has joined the channel
[20:24] jondot has joined the channel
[20:25] spcshpopr8r has joined the channel
[20:25] localhost has joined the channel
[20:25] elifou``: has anyone had problems with htmlparser using jsdom?
[20:25] jondot: hi guys. coming from ruby/java, the only thing that stops me at the gate with node.js every time and again is me questioning myself - how can I structure a javascript project in terms of directory tree, dependencies, and libraries. can anyone help me with pointers on that?
[20:26] __directory: what kind of project ?
[20:27] TheJH: jondot, dependencies/libraries automatically come into a node_modules folder when you install them via npm and are requireable via "require('libraryname')"
[20:28] TheJH: jondot, you can use any directory structure for your own code, you can require files with something like "require('./otherfile')" (without the .js)
[20:28] __directory: yah, and if you have your own just make a lib folder 
[20:28] jondot: TheJH: so when i'm done with playing around, and i want to start pushing tons of code, I imagine i'd need some kind of structure. since i can't structure around classes, modules, libraries, i'm kinda lost at how its done here.
[20:28] __directory: or something
[20:29] TheJH: jondot, I'd put every class or so in its own file
[20:29] slifty has joined the channel
[20:29] __directory: yah you could all the dog class files in the dog folder, but most people put a class per file,etc
[20:30] TheJH: jondot, you don't get to choose where your dependencies/needed libraries are, they're in the node_modules folder in the root folder of your project and you install them via npm
[20:30] jondot: as a reference, i'm looking at this: https://github.com/wycats/handlebars.js/tree/master/lib , however i'd like to know how did he get to this kind of structure in the first place.
[20:30] maushu_ has joined the channel
[20:30] piscisaureus has joined the channel
[20:31] Camacho has left the channel
[20:31] jondot: i know wycats comes from ruby and i do identify similarities in file structure, but i'm seeing idioms i've never seen in the day to day javascript i've used.
[20:32] __directory: jondot: http://howtonode.org/how-to-module
[20:36] monokrome has joined the channel
[20:37] jondot: yep, thats for npm i guess.
[20:37] dherman has joined the channel
[20:38] MarkMenard has joined the channel
[20:38] __directory: it discusses structure and making your own modules
[20:39] jondot: so 'require' belongs to npm?
[20:39] __directory: require belongs to node
[20:40] __directory: npm installs published modules
[20:40] __directory: if you had a 'class' Dog you would likely put it in dog.js, expose it's interfaces via exports, and require() it to use it
[20:41] __directory: var Dog = require('./lib/dog.js');
[20:41] jondot: i see. i guess thats what i was looking for, i'll read up on that, thanks.
[20:41] __directory: hold on i think i ahve something
[20:42] xerox: this is pretty self contained and clear http://nodejs.org/docs/v0.4.10/api/modules.html
[20:42] Ans5i1 has joined the channel
[20:42] __directory: read the api docs, look at other projects, and check out http://nodetuts.com/tutorials/17-building-nodejs-modules.html
[20:43] jondot: thanks guys. is this require pattern specific to node or is it adopted in other projects too?
[20:43] airportyh has joined the channel
[20:44] eee_c has joined the channel
[20:44] dgathright has joined the channel
[20:44] __directory: If I'm not mistaken it's taken from CommonJS - it's not specifically node but I've only used it with Node
[20:44] soolwan has left the channel
[20:45] __directory: "CommonJS is a project with the goal of specifying an ecosystem for JavaScript outside the browser"
[20:45] jondot: great, thanks
[20:45] akabhalle has joined the channel
[20:46] stepheneb has joined the channel
[20:46] brianc: is there a way to call a constructor passing in arguments from another function as the arguments to the constructor?  eg: function makeSomething() { return Ctor.apply(Ctor, arguments) } ?
[20:46] excellentdrums has joined the channel
[20:49] kulor-uk has joined the channel
[20:50] g4 has joined the channel
[20:50] chjj: brianc: ctor.apply({__proto__: ctor.prototype}, arguments)
[20:51] brianc: chjj: awesomeness
[20:51] chjj: i just made that up, should work
[20:51] chjj: another example of how amazing __proto__ is
[20:51] mikeal has joined the channel
[20:51] __directory: neat
[20:54] localhost has joined the channel
[20:54] febits has joined the channel
[20:56] slifty has joined the channel
[20:57] isaacs: chjj, brianc: Use Object.create!
[20:57] isaacs: chjj, brianc: Ctor.apply(Object.create(Ctor.prototype), arguments)
[20:58] chjj: proto is sexier
[20:58] isaacs: chjj: also gone from es strict
[20:58] brianc: <3 thanks guys
[20:58] lightcap has joined the channel
[20:58] isaacs: chjj: and not in the spec
[20:58] chjj: well, es strict is wrong then
[20:58] isaacs: hahha
[20:58] chjj: and so is the spec
[20:58] chjj: because __proto__ is amazing
[20:58] gde33 has joined the channel
[20:58] __directory: heh
[20:58] isaacs: chjj: you can also do Object.getPrototypeOf(obj) to read the prototype
[20:59] chjj: i realize that
[20:59] isaacs: having a writable __proto__ ref is kind of not so good in some cases.
[20:59] chjj: the full functionality of __proto__ does not exist in es5 though
[20:59] isaacs: otoh, i do use that in at least one case :)
[20:59] isaacs: chjj: yeah, there's no Object.setPrototypeOf(obj, newProto)
[20:59] chjj: yeah =/
[20:59] isaacs: you can *kind* of implement something like that with parasitic inheritance, but it's a little bit slower.
[21:00] andrewvo1 has joined the channel
[21:00] jbrokc has joined the channel
[21:01] isaacs: Object.setPrototypeOf = function (obj, newProto) { var n = Object.create(newProto); Object.getOwnPropertyNames(obj).forEach(function (name) { Object.defineProperty(n, name, Object.getOwnPropertyDescriptor(obj, name)) }); return n }
[21:01] srid has joined the channel
[21:01] __directory: working standing up is making me feel sexy
[21:01] isaacs: doesn't actually change the prototype of "obj", but it does return a new object which has all the same own props as obj, and the new proto
[21:02] isaacs: so n !== obj, but it is very much like obj with a swapped out __proto__
[21:02] Cromulent has joined the channel
[21:02] mpoz2 has joined the channel
[21:02] chjj: yeah that seems like it has too much overhead, good idea though
[21:02] sechrist has joined the channel
[21:03] robertfw has joined the channel
[21:04] chjj: als/o anything with a reference to the original object wouldnt be "updated"
[21:04] puffpio has joined the channel
[21:05] shanebo has joined the channel
[21:05] bbrandon has joined the channel
[21:05] mapleman has joined the channel
[21:05] Swizec has joined the channel
[21:06] sebastia_ has joined the channel
[21:06] gde33|2 has joined the channel
[21:06] chjj: if they added setPrototypeOf, i probably wouldnt complain that much, only thatIDontLikeReallyLongCamelCaseFunctionNames
[21:06] mikey_p has joined the channel
[21:06] binarypie has joined the channel
[21:07] jbc22 has joined the channel
[21:07] robi42 has joined the channel
[21:07] robi42 has joined the channel
[21:08] bosphorus has joined the channel
[21:08] broofa has joined the channel
[21:09] bksf has joined the channel
[21:10] Guest65727 has joined the channel
[21:10] dgathright has joined the channel
[21:11] jacobolus has joined the channel
[21:11] loveshine has joined the channel
[21:11] bartt has joined the channel
[21:12] temp01 has joined the channel
[21:12] nphase has joined the channel
[21:12] nphase has joined the channel
[21:13] qbert_: using express's vhost middleware I get, "error: vhost server required" , whats that about ?
[21:14] qbert_: http://pastebin.com/HpWaK5wB , also how would I use this testing localhost, I have formhog.com pointing to loopback ...
[21:14] tjholowaychuk: qbert_ console.log that .app
[21:14] tjholowaychuk: maybe it's not exported properly
[21:15] tjholowaychuk: qbert_ ps we have #express if you have more questions in the future
[21:15] tjholowaychuk: for connect/jade/express and friends
[21:16] qbert_: ok moving it to that channel :)
[21:16] materialdesigner has joined the channel
[21:16] mnaser has joined the channel
[21:16] blup: anyone know if there's a way to visually format json on stdout/zsh?
[21:17] bksf: how can i match any route but "/" ? im using express ...
[21:17] robotblake has joined the channel
[21:17] bksf: not sure of the expression for that :/
[21:17] tjholowaychuk: bksf jump in #express
[21:17] Draggor has joined the channel
[21:18] jj0hns0n has joined the channel
[21:18] pjacobs has joined the channel
[21:18] bksf: ty
[21:18] explodes has joined the channel
[21:19] michaelhartau has joined the channel
[21:20] alek_br has joined the channel
[21:21] slifty has joined the channel
[21:23] levity_island has joined the channel
[21:23] heavysixer has joined the channel
[21:23] levity_island has joined the channel
[21:24] fly-away has joined the channel
[21:25] fattytuna has joined the channel
[21:25] adambrault has joined the channel
[21:25] pixel13 has joined the channel
[21:27] puffpio has joined the channel
[21:30] touson has joined the channel
[21:31] admc has joined the channel
[21:32] jimt has joined the channel
[21:33] touson has joined the channel
[21:33] touson_ has joined the channel
[21:34] dreamdust has joined the channel
[21:34] mscdex: node.js rules!
[21:34] touson has joined the channel
[21:34] qbert_: its growing on me ;)
[21:35] chjj: its grown on me and eaten me alive
[21:35] chjj: wait til you get here
[21:36] nibblebo_ has joined the channel
[21:37] tonyskn has joined the channel
[21:37] tonyskn has left the channel
[21:38] tonyskn has joined the channel
[21:38] loveshine_ has joined the channel
[21:38] febits has joined the channel
[21:38] excellentdrums has joined the channel
[21:39] hij1nx has joined the channel
[21:39] tonyskn has left the channel
[21:40] ank has joined the channel
[21:45] brianc: yeah I'm with chjj
[21:45] smus: hey guys, what's the best practice for sharing JS between browserland and node.js? i currently use this hack: https://gist.github.com/1123866 but it has limitations
[21:45] brianc: smus: browserify
[21:46] brianc: smus: https://github.com/substack/node-browserify
[21:46] xerox: I rewrite it all
[21:46] xerox: also copy and paste
[21:46] xerox: v professional
[21:46] brianc: xerox: lol
[21:47] smus: brianc: right. looked at that, but was turned off because it seems to require that you rely on node.js to serve JS
[21:48] brianc: oh...yeah...i think you can compile with it too
[21:48] brianc: so you can serve it with a static file serve
[21:48] brianc: though I would have to say using node.js to serve JS is a turn _on_ for me
[21:49] tjholowaychuk: smus we have something similar
[21:49] tjholowaychuk: that allows you do use node in dev to proxy the files
[21:49] tjholowaychuk: and in prod `make` will build them up into one aggregated/minified thing
[21:49] tjholowaychuk: one giant file sucks for dev
[21:50] tjholowaychuk: well one giant dynamically generated file
[21:50] brianc: when tj says "we" he is referring to Canadians. They have special code not allowed into the US.
[21:50] tjholowaychuk: haha
[21:50] brianc: tjholowaychuk: totally agree 1 giant file sucks for dev
[21:50] smus: brianc: nice for dev, but not nice for deployment
[21:50] CrabDude: anyone looked at http://www.slideshare.net/brevoortm/nodejs-async-for-the-rest-of-us ?
[21:50] tjholowaychuk: nah we wrote it quickly for an internal project but it's really similar to browserify so i dont know if we'll OS it
[21:51] tjholowaychuk: didnt seem like browserify allows you to serve them individually for debugging etc
[21:51] CrabDude: it mentions "require('https').getAgent('browserpm.com', 80).maxSockets = 100;", but it appears to be deprecated in the 0.5.x docs
[21:51] alvaro_o has joined the channel
[21:51] heavysixer has joined the channel
[21:51] brianc: tjholowaychuk: totally I just like to politely troll you cause your ferret is such a baller
[21:51] tjholowaychuk: ahahaha tobi?
[21:51] tjholowaychuk: he's rad
[21:51] tjholowaychuk: loki is pretty cool too
[21:51] brianc: yeah I saw a picture on some repo or your blog or something & he was dressed up in ganster clothes
[21:51] smus: anyone tried using massaging require.js to get node-like loading to work in the client?
[21:51] brianc: gangster even
[21:51] tjholowaychuk: that's just photoshop haha
[21:52] alvaro_o has left the channel
[21:52] ChrisBuchholz has joined the channel
[21:52] tjholowaychuk: smus that's what we have
[21:52] tjholowaychuk: it's identical to node
[21:52] gozala has joined the channel
[21:52] brianc: smus: there's also something called "AMD" which is the async module definition which node v0.5 supports (not sure about v0.4.x) and that might be worth looking into. haven't really myself too much
[21:52] bnoordhuis: brianc: amd has been removed
[21:53] CrabDude: brianc: smus: not anymore. isaacs removed it :-/
[21:53] brianc: smus: do not listen to me
[21:53] bnoordhuis: don't tell me you've missed the epic bikeshed on the mailing list
[21:53] CrabDude: smus: i'm building a browser package manager that servers js via node, but doesn't require any server configuration
[21:54] CrabDude: it's not public yet thoug… :-/
[21:55] bksf has joined the channel
[21:55] Cleer has joined the channel
[21:57] qbert_: oh god no more talk of AMD
[21:58] saschagehlich has joined the channel
[21:58] smus: great, thanks all for the pro tips. anyone seen/using this sort of hack: https://gist.github.com/1123866 ?
[21:59] tjholowaychuk: smus https://gist.github.com/1123897
[21:59] tjholowaychuk: was part of our quick hack
[21:59] tjholowaychuk: gives you the basic idea though
[22:00] meso_ has joined the channel
[22:01] pspeter3 has joined the channel
[22:01] pspeter3: Is it possible to do basic command line scripts with node.js?
[22:01] tbranyen: of course
[22:01] tbranyen: its great for that
[22:01] tbranyen: =)
[22:01] qbert_: npm is written in node
[22:02] CrabDude: tjholowaychuk: using express, wanting to set https.Agent.maxSockets, should I just require('https').Agent.maxSockets = XXX?
[22:02] tjholowaychuk: CrabDude that's node, express doesn't alter any of thta
[22:03] pspeter3: tbranyen:  Are there any resources for that?
[22:03] CrabDude: tjholowaychuk: sure, but i guess is the setting global? i.e., effects express?
[22:03] meso__ has joined the channel
[22:03] TheJH: !@pspeter3 npm search command line
[22:03] jhbot: pspeter3, packages (short format, truncated): tav, arguments, nodelint, trollop, jsapp, scriptTools, jkwery, json-command, nmd, jasbin, json, sws, getopt, query, watch-tree, cmd, duostack, parseopt, nodysentary, yanop
[22:03] tjholowaychuk: doesn't have anything to do with express
[22:03] airportyh has joined the channel
[22:03] tbranyen: pspeter3: just write node code and include a shebang
[22:03] tbranyen: #!/usr/bin/env node
[22:04] mrryanjohnston: If I'm using everyauth, and I'd like for my users signing in with OAuth to have a display name, how should I store this so that it persists over the course of their session/expires when they hit /logout?
[22:05] CrabDude: tjholowaychuk: alright, just to clarify, if I set it, will it increase the default maxSockets of express, and if not, how can I set maxSockets for express?
[22:05] tjholowaychuk: express doesnt provide an http client
[22:05] pspeter3: Thanks tbrayen and TheJH
[22:06] johnhamelink has joined the channel
[22:07] ank has joined the channel
[22:07] cying has joined the channel
[22:07] MarkMenard has joined the channel
[22:09] CrabDude: ACTION facepalm
[22:10] airportyh has joined the channel
[22:11] davidbanham has joined the channel
[22:12] TheJH: ACTION wants to see the thing that made CrabDude want to cover his eyes
[22:14] CrabDude: TheJH: I was reading http://goo.gl/0dB3H (Slide 52) and stupidly thought http.Agent.maxSocket affected inbound connections
[22:14] themiddleman has joined the channel
[22:14] TheJH: heh
[22:14] TheJH: that would suck
[22:15] CrabDude: TheJH: yes. I feel stupid.
[22:17] shanebo: guys, any recommendations on smtp modules?
[22:18] CIA-65: libuv: 03Ryan Dahl 07gyp * r533fd5f 10/ (12 files in 3 dirs): gyp - https://github.com/joyent/libuv/commit/533fd5f237718bc7fe813c10fef5c18b653dfb98
[22:18] shanebo: I'm looking at these: https://github.com/joyent/node/wiki/modules#wiki-smtp
[22:18] shanebo: but not sure which is clean and simple and good
[22:19] bnoordhuis: shanebo: require('child_process').spawn('sendmail', ['-bm'])
[22:20] patcito_ has joined the channel
[22:20] CIA-65: libuv: 03Ryan Dahl 07gyp * r918e2fc 10/ Makefile : Remove makefile - https://github.com/joyent/libuv/commit/918e2fc3494b448ab13ba6c3dae6a59844449ebf
[22:22] Wa has joined the channel
[22:22] materialdesigner: does everyauth automatically deal with refreshing tokens?
[22:23] remysharp has joined the channel
[22:24] adrianmg has joined the channel
[22:27] ericmuyser has joined the channel
[22:27] jbrokc has joined the channel
[22:27] gozala has joined the channel
[22:28] pixel13: @bnoordhuis, @AvianFlu, @japj: I may have narrowed down the issue with my borked Python 2.7.2 issue on CentOS 5.5 (...so close to getting node.js v0.5.2). Using "strace", the issue seems related to hashlib. Unfortunately, yum install python-hashlib.x86_64 did not solve the problem :( ...any other ideas on a possible Python / hashlib issue?
[22:28] pixel13: if I run "python", then "import hashlib" - BAM! (seg fault)
[22:29] _bat has joined the channel
[22:30] AvianFlu: I can say 'good work', but I can't offer advice atm
[22:31] pixel13: AvianFlu, no worries..thx though
[22:31] bnoordhuis: pixel13: i think hashlib depends on openssl
[22:32] addisonj: okay, anyone tell me what I am doing wrong here? https://gist.github.com/1124008
[22:33] pixel13: bnoordhuis, that would make sense… libcrypto.so is the last fs reference in the stacktrace
[22:33] addisonj: do I need to release the file somehow, or do I need to use a worker to do something like this?
[22:33] pixel13: …the file exists, and openssl works fine, etc
[22:34] robertfw has joined the channel
[22:35] CIA-65: libuv: 03Ryan Dahl 07gyp * r2b59570 10/ (.gitignore build/all.gyp): Add rules for run-benchmarks - https://github.com/joyent/libuv/commit/2b59570ef84a9cd69b620d58e81ea6b5e3b2da3b
[22:35] johnhamelink has joined the channel
[22:36] bnoordhuis: pixel13: grep tools/wafadmin for hashlib
[22:36] bnoordhuis: it import hashlib but falls back on older modules
[22:36] bnoordhuis: *imports
[22:36] miccolis has joined the channel
[22:36] michaelhartau has joined the channel
[22:37] bnoordhuis: try commenting out / replacing the hashlib import
[22:38] pixel13: ok, worth a shot
[22:38] pixel13: thx
[22:39] pixel13: bnoordhuis: ok — Scripting.py, Utils.pyc, Utils.py, and Scripting.pyc
[22:39] al3xnull has joined the channel
[22:40] bnoordhuis: pixel13: ignore the pyc files, they're bytecode caches
[22:40] pixel13: hmm:  from hashlib import md5
[22:40] pixel13: ok, I see
[22:41] deadman87 has joined the channel
[22:42] cccaldas has joined the channel
[22:43] pixel13: interesting...
[22:43] Poetro has joined the channel
[22:43] Poetro has joined the channel
[22:43] pixel13: still get the segfault
[22:43] deadman87: hey everyone!
[22:44] pixel13: I pulled hashlib try from Utils/Scripting, falling back on md5 and sha1 ...
[22:44] radicality has joined the channel
[22:45] radicality: Hi. Anyone know what's better to use: mongodb-native-driver or Mongolian. I don't think I need a bigger ORM like Mongoose, and I'm already using Mongolian, but just thinking whether mongodb-native-driver is better / more maintained.
[22:45] CrabDude: Damn mongowians
[22:46] CrabDude: destroying my shitty wall
[22:46] deadman87: rofl
[22:46] deadman87: wercome to shitty wok!
[22:47] radicality: shitty sushi!
[22:47] deadman87: no offence to my asian brothers and sisters :)
[22:49] CIA-65: libuv: 03Ben Noordhuis 07gyp * r2a6d2f8 10/ build/all.gyp : gyp: add linux build section - https://github.com/joyent/libuv/commit/2a6d2f80df94796cfc25fcbab2b54ab747afd3b5
[22:49] DoNaLd` has joined the channel
[22:50] akisma has joined the channel
[22:51] Murvin has joined the channel
[22:51] k1ttty has joined the channel
[22:53] Cromulent has joined the channel
[22:53] Murvin: i've just created a public  AWS image last night for node.js   search for Ubuntu 11.04 Node.js  .  Anyone is interested can use it.  it saves you time to install node. :)
[22:53] bit_monger has joined the channel
[22:54] bit_monger has left the channel
[22:55] SubStack: .. escape('%SF')
[22:55] catb0t: '%25SF'
[22:55] SubStack: jesusabdullah: ^^
[22:56] jesusabdullah: hmm?
[22:56] jesusabdullah: What's .. escape ?
[22:57] deadman87: escapes special characters in a string
[22:57] TheJH: escapes a string for use in a querystring, I think
[22:57] deadman87: so the string can be sent via url ex. in a GET request
[22:57] jesusabdullah: okay, so where did %SF come from? o__o
[22:58] nibblebot has joined the channel
[22:59] deadman87: are you sure its not %2F?
[22:59] deadman87: and not SF
[22:59] SubStack: .. unescape('%2F')
[22:59] catb0t: '/'
[22:59] deadman87: %2F in a url decodes to a forward slash /
[22:59] deadman87: yep yep!
[23:00] CIA-65: libuv: 03Ben Noordhuis 07gyp * re94b435 10/ build/all.gyp : 
[23:00] CIA-65: libuv: gyp: add _GNU_SOURCE to defines, not cflags
[23:00] CIA-65: libuv: Fixes run-benchmarks. - https://github.com/joyent/libuv/commit/e94b435b90f391d4232974b91920a56ade09a61f
[23:00] jesusabdullah: oh, okay!
[23:00] jesusabdullah: .. unescape('%SF')
[23:00] catb0t: '%SF'
[23:00] jesusabdullah: tssch
[23:00] jesusabdullah: well! That's odd
[23:00] deadman87: the 2 characters after % can only be hex
[23:00] jesusabdullah: Maybe that's intentional
[23:01] deadman87: i.e. 1-0, a-f
[23:01] deadman87: S is invalid!
[23:01] pixel13: bnoordhuis: interesting…I noticed one difference…the CentOS 5 box that works has expat_1.95.7….the one I am struggling with is different, expat_1.95.2
[23:01] pixel13: however, according to Python (pyexpat), it states 2.0.0
[23:02] pixel13: may have to just give up for today...
[23:02] jesusabdullah: .. escape('-')
[23:02] catb0t: '-'
[23:02] yhahn has left the channel
[23:02] deadman87: pixel13: arent pyexpat and expat different packages with different version numbers?
[23:02] xerox: v8 2+2
[23:03] xerox: v8: 2+2
[23:03] xerox: too bad
[23:03] pixel13: deadman87, yes, I believe so
[23:04] pixel13: deadman87 …been a long day, it's just a shot in the dark, really, I have no idea what the source of the Python seg fault during "import hashlib" is coming from :(
[23:04] deadman87: as for expat version inconsistencies.. U can always compile the working version from source :)
[23:04] pixel13: …true. That may be very well my next step ;)
[23:04] pixel13: …else I'm stuck with node v0.5.0-pre
[23:04] pixel13: aaah
[23:05] methym has joined the channel
[23:05] bnoordhuis: pixel13: we're switching to gyp soon and gyp doesn't use hashlib (on linux anyway)
[23:05] bnoordhuis: the future is bright!
[23:06] pixel13: bnoordhuis: serious? Sweet!
[23:06] deadman87: on my local machine I have a ~/local installation of node with most node dependencies compiled from source.. works amazing!
[23:08] Toroid has joined the channel
[23:08] necrodearia has joined the channel
[23:09] mikeal has joined the channel
[23:11] pixel13: laters, will try some more tmrw. < poof! >
[23:11] eignerchris has joined the channel
[23:13] slifty_corsair has joined the channel
[23:14] jacobolus has joined the channel
[23:17] brianseeders has joined the channel
[23:17] CrisO has joined the channel
[23:18] vizzord has joined the channel
[23:18] agnat has joined the channel
[23:21] cying_ has joined the channel
[23:22] JoshC1 has joined the channel
[23:24] cliffano has joined the channel
[23:25] Elems has joined the channel
[23:26] scas_ has joined the channel
[23:28] pspeter3 has left the channel
[23:28] mcluskydodallas has joined the channel
[23:30] sridatta has joined the channel
[23:30] jokil has joined the channel
[23:30] mike5w3c_ has joined the channel
[23:32] cpetzold has joined the channel
[23:32] jslatts has joined the channel
[23:33] Laurent3: Hi guys, I've done the following command using npm: sudo npm install express mongoose jade less expresso --global but then when lauching node, if I'm trying to do require('express') it says Error: Cannot find module 'express'
[23:33] Laurent3: why is that?
[23:33] isaacs: Laurent3: because you installed those things globally.
[23:33] isaacs: Laurent3: global is for cli apps, not for require()
[23:34] isaacs: Laurent3: do the same thing, but without the --global, and then it'll work fine
[23:34] walkah has joined the channel
[23:34] walkah has joined the channel
[23:34] sweetd has joined the channel
[23:35] sweetd_ has joined the channel
[23:37] scott_gonzalez has joined the channel
[23:37] necrodearia has joined the channel
[23:40] greg has joined the channel
[23:40] Laurent3: thanks isaacs :)
[23:40] isaacs: np
[23:41] Laurent3: what do you mean by cli apps?
[23:41] kevindente has joined the channel
[23:42] isaacs: Laurent3: cli = command line interface
[23:42] TheJH: Laurent3, programs intended to be run directly, for example coffee-script: you can just type `coffee` in the console, hit enter and the application runs
[23:42] isaacs: (like "npm", for instance)
[23:43] jarek has joined the channel
[23:43] jarek has joined the channel
[23:43] losing has joined the channel
[23:45] _root_ has joined the channel
[23:47] Laurent3: so using global where would I be able to use that (sorry I just started with node 2 days ago)
[23:48] puffpio_ has joined the channel
[23:49] tmzt: what about things like jade that have both?
[23:49] TheJH: Laurent3, when you want to require() stuff, just install it without --global
[23:49] TheJH: tmzt, you may end up installing them both ways
[23:50] meveo has joined the channel
[23:51] meveo: hello there
[23:51] TheJH: hello meveo
[23:51] meveo: is here a centos expert
[23:52] meveo: i have a big problem with node build
[23:52] Lorentz: Try #centos yet?
[23:52] Lorentz: Ah, it's node related
[23:52] meveo: jes
[23:52] meveo: here the error
[23:53] JumpMast3r has joined the channel
[23:53] Laurent3: thanks TheJH
[23:55] puffpio has joined the channel
[23:56] slifty has joined the channel
[23:56] wookiehangover has joined the channel
[23:57] bwinton has joined the channel
[23:58] slifty has joined the channel
