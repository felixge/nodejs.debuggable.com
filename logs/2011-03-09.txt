[00:00] jesusabdullah: Also, it'd be funny, and also a good experience.
[00:00] sechrist: jesusabdullah: are you in the bay area?
[00:00] jesusabdullah: Not *yet*
[00:00] dguttman has joined the channel
[00:00] sechrist: get out here
[00:00] jesusabdullah: But I'm moving to Oakland this summer
[00:00] jesusabdullah: :D
[00:01] sechrist: what's up with node people in Oakland
[00:01] dguttman has joined the channel
[00:01] sechrist: southbay is where it's at
[00:01] jesusabdullah: Oakland rocks, alrite?
[00:01] jesusabdullah: lol
[00:01] mscdex: what's up with node people on the west coast
[00:01] mscdex: :-D
[00:01] sechrist: what's up with node people in NY
[00:01] sechrist: and boston
[00:01] piscisaureus: what's up with node people in the americas
[00:02] jesusabdullah: haha
[00:02] sechrist: touché
[00:02] broofa_ has joined the channel
[00:02] jesusabdullah: sechrist: It's because the stackvm guys are in Oakland
[00:02] sechrist: oh neat
[00:02] jesusabdullah: mmhmm
[00:02] sechrist: you're gonna work with substack and pkrumz?
[00:03] jesusabdullah: Probably!
[00:03] sechrist: or did they just convince you that oakland is cool
[00:03] sechrist: ok
[00:03] jesusabdullah: They also convinced me that Oakland is cool.
[00:03] sechrist: http://substack.net/images/npmdep/npm-fdp.png fffffffffffffffffff
[00:03] jesusabdullah: I stayed with them a few days during a conference in San Francisco
[00:07] postwait has joined the channel
[00:08] threetee has joined the channel
[00:09] seivan has joined the channel
[00:09] xla has joined the channel
[00:13] sechrist: I fear that silicon valley will implode
[00:13] jesusabdullah: Why for, sechrist ?
[00:13] sechrist: due to so many people moving here
[00:13] sechrist: I mean like everyday I hear of somebody moving here
[00:14] jesusabdullah: Ah
[00:14] sechrist: I just moved here myself in October
[00:14] jesusabdullah: Helps to be in the right "circles"
[00:14] jesusabdullah: I just named my linode "Altaria" because it's in the cloud
[00:14] jesusabdullah: http://bulbapedia.bulbagarden.net/wiki/Altaria_(Pok%C3%A9mon)
[00:14] jesusabdullah: :V
[00:15] sechrist: link is down
[00:15] fusspawn has joined the channel
[00:15] sechrist: the bulbapedia is down everybody freak out
[00:15] jesusabdullah: :C
[00:15] jesusabdullah: It's up for me!
[00:16] mjsx has joined the channel
[00:17] mjsx: how can i view the messages generated by debug()?
[00:17] fr0stbyte has joined the channel
[00:19] rfay has joined the channel
[00:20] mraleph has joined the channel
[00:20] Draggor: bradleymeck1: around?
[00:24] fr0stbyte has joined the channel
[00:25] tshpaper has joined the channel
[00:26] isaacs has joined the channel
[00:26] [[zz]] has joined the channel
[00:29] Hello71 has joined the channel
[00:29] Hello71 has joined the channel
[00:29] orls has joined the channel
[00:31] snafuz has joined the channel
[00:33] jakehow has joined the channel
[00:33] dguttman has joined the channel
[00:35] Jamool has joined the channel
[00:36] andrewfff has joined the channel
[00:37] Evet: i think i cant use nodejs efficiently
[00:38] Pilate: thats too bad
[00:38] yhahn has left the channel
[00:38] unlink has joined the channel
[00:38] Evet: there are nice modules. but i cant figure which combination is right for jobs
[00:38] unlink has joined the channel
[00:39] Emmanuel__ has joined the channel
[00:39] Evet: tutorials target on people who already familiar with web frameworks
[00:41] orls: Evet: you mean frameworks in general, or using node.js frameworks?
[00:41] Evet: orls: frameworks in general
[00:42] orls: I always found most nodejs info out there to be pretty low-level, altho cant think of examples now
[00:42] orls: there is a bit of "just like/unlike rails" talk, which isn't so gret for the non-rubyists amongst us
[00:44] Evet: orls: indeed
[00:46] andrewfff has joined the channel
[00:50] tilgovi has joined the channel
[00:51] skm has joined the channel
[00:51] zomgbie has joined the channel
[00:53] soulofpeace has joined the channel
[00:57] malkomalko has joined the channel
[00:58] Sam0t has joined the channel
[00:58] Sam0t: can't figure out how to stop server from crashing lol
[00:58] Sam0t: how to do a catch all on exceptions
[01:01] davidwalsh has joined the channel
[01:01] ajpiaNOU has joined the channel
[01:02] mnot has joined the channel
[01:04] Jamool has joined the channel
[01:04] MikhX has joined the channel
[01:06] marcello3d has joined the channel
[01:06] Sorella has joined the channel
[01:06] harth has joined the channel
[01:07] jashkenas has joined the channel
[01:08] ryah: mraleph: ping
[01:08] ryah: mraleph: is there an easy way to see if crankshaft is enabled?
[01:09] Spion has joined the channel
[01:09] Croms has joined the channel
[01:09] malkomalko: that's generally not wise, but you can do process.on('uncaughtException', function(err) {})
[01:09] ryah: i'm stracing node right now and don't see any SIGPROFs 
[01:10] unlink has joined the channel
[01:12] ivan has joined the channel
[01:13] mraleph: ryah: —trace-opt
[01:13] mickael has joined the channel
[01:15] saikat_ has joined the channel
[01:16] eventi has joined the channel
[01:17] secoif has left the channel
[01:17] mbrochh has joined the channel
[01:17] ryah: mraleph: is crankshaft off by default in x64 ?
[01:17] mlncn has joined the channel
[01:18] mraleph: ryah: we turned it on prev week
[01:19] mraleph: ryah: did you roll new v8 yesterday?
[01:19] mraleph: check flag-definitions.h
[01:19] mraleph: search for crankshaft
[01:19] Sorella has joined the channel
[01:20] ryah: #ifdef V8_TARGET_ARCH_IA32
[01:20] ryah: DEFINE_bool(crankshaft, true, "use crankshaft")
[01:20] ryah: #else
[01:20] ryah: DEFINE_bool(crankshaft, false, "use crankshaft")
[01:20] ryah: #endif
[01:20] mraleph: if your version still contains conditional
[01:20] mraleph: yeah
[01:20] mraleph: old v8
[01:21] gormer has joined the channel
[01:22] sprout has joined the channel
[01:24] secoif has joined the channel
[01:25] saikat_ has joined the channel
[01:27] xandrews has joined the channel
[01:27] Emmanuel__ has joined the channel
[01:28] jacobolus has joined the channel
[01:29] jetienne has joined the channel
[01:29] joshfng has joined the channel
[01:29] copenhas has joined the channel
[01:30] nciagra has joined the channel
[01:30] WRA has joined the channel
[01:30] WRA: hey guys
[01:31] lessthanzero has joined the channel
[01:31] WRA: so, HTML5 game engine with quad tree collision detection ;) http://jixel.org/ going to start coupling it with node for the multiplayer aspect
[01:32] jetienne: WRA: what is quad tree collision
[01:33] WRA: dividing the scene into quadrants to determine collision
[01:33] jetienne: nice term
[01:33] mlncn has joined the channel
[01:34] WRA: works out pretty well for lots of colliders
[01:34] sivy_ has joined the channel
[01:35] Gregor: What's the most immediate way in Node to determine whether a file exists? Can't find a binding to access(2), nor something like fs.exists ...
[01:35] p0ns has joined the channel
[01:35] mikzz has joined the channel
[01:35] glitterfang_ has joined the channel
[01:35] Gregor: I suppose I can stat it *shrugs*
[01:35] orls: Gregor: That's what I do -- try a syncStat in a try/catch
[01:36] themiddleman_itv has joined the channel
[01:36] Gregor: orls: Was just gonna check whether it throws or returns null, thanks :)
[01:36] orls: I thought it was a dirty hack until I saw it in node core ;)
[01:36] brapse has joined the channel
[01:36] orls: https://github.com/joyent/node/blob/v0.4/lib/module.js#L55
[01:37] andrewfff has joined the channel
[01:38] eee_c1 has joined the channel
[01:38] zentoooo has joined the channel
[01:39] postwait has joined the channel
[01:39] Croms_ has joined the channel
[01:40] possibilities has joined the channel
[01:42] jimt_ has joined the channel
[01:44] konobi: orls: that only happens at startup due to use of "require", if you do any Sync calls while processing data, you're going to block the entire vm until the stat returns
[01:44] sprout has joined the channel
[01:46] possibil_ has joined the channel
[01:46] orls: konobi: ah, hand't thought of that -- luckily i use it in a cached way
[01:48] Evet has joined the channel
[01:49] sivy has joined the channel
[01:50] JulioBarros has joined the channel
[01:50] seivan has joined the channel
[01:51] tladuke: I have a basic javascript module question... i made a gist https://gist.github.com/861540
[01:53] exitdescription: why doesn't it work?
[01:53] zakabird has joined the channel
[01:54] bigjay has joined the channel
[01:54] bigjay: Hi
[01:54] tladuke: can't set property foo of undefined
[01:55] Me1000 has joined the channel
[01:56] vipaca_ has joined the channel
[01:56] copenhas has joined the channel
[01:56] everton has joined the channel
[01:56] tim_smart: Anyone here used node-oauth for 2-legged oauth services like simplegeo?
[01:56] Sam0t: hey tladuke
[01:56] Sam0t: i think its suppose to be other way around
[01:57] Sam0t: wait nvm
[01:57] tladuke: heh
[01:57] Sam0t: what is foo suppose to be tho
[01:58] gazumps has joined the channel
[01:58] tladuke: anything
[01:58] malpeli has joined the channel
[01:58] tladuke: that could be a key
[01:58] malpeli: hy folks... anyone using mongoose?
[01:58] AAA_awright: tladuke: Where do you define some_states?
[01:59] pengwynn has joined the channel
[01:59] tladuke: AAA_awright: i dont' want it to be a function. i want an empty hash(i think) that i can stick stuff in
[01:59] AAA_awright: tladuke: where is some_function defined?
[02:00] tladuke: AAA_awright: same file, but it's not something that needs to be exported...
[02:00] AAA_awright: you want "var some_function = function(){...}" idk if that's your actual code
[02:00] malpeli: Im trying to bring records sorted by date where the date is superior to Date.now() anyone knows how to do that?
[02:01] AAA_awright: tladuke: Right, it looks like it's supposed to be an empty Object, but where do you define some_states to be an Objeject?
[02:01] tladuke: i guess that's my question
[02:01] possibilities has joined the channel
[02:03] tladuke: there's probably a better way to go about the whole thing. i just want some_states  available in the main code
[02:04] AAA_awright: tladuke: It looks like you can't figure out if you want to create instances of MyModule with new, or if you want people to call it as a function
[02:05] hosh_work has joined the channel
[02:05] FunkyFortune has joined the channel
[02:06] malpeli: someone are using mongoose?
[02:06] tladuke: hmm, well, the functions i define all work the way i want. i do my = new MyModule(); in the main part... the gist has everything stripped out
[02:06] kriszyp has joined the channel
[02:07] orls: tladuke: what's wrong with just var states = [...] near the top?
[02:07] orls: tladuke: if you don't export it, it won't be visible elsewhere
[02:07] Murugaratham has joined the channel
[02:07] tladuke: then how do i export states?
[02:08] sivy has joined the channel
[02:08] AAA_awright: export.states = {}? But that effectively creates a global and that's not a good idea
[02:09] AAA_awright: *exports
[02:09] paul_k has joined the channel
[02:09] marcello3d: how does that make a global?
[02:09] tladuke: i want... instances of MyModule to have a variable states, that i can manipulate
[02:09] AAA_awright: marcello3d: require('MyModule').states always refers to the same Object
[02:09] marcello3d: AAA_awright: ah
[02:10] marcello3d: thought you meant the other global :)
[02:10] orls: ...manipulate from (non-exported) functions inside the module, right?
[02:10] malpeli: nwhite: hy are you nathan white from mongoose??
[02:10] AAA_awright: tladuke: var MyModule = function(){...} MyModule.prototype.states = {}; var m = new MyModule; m.states.foo="baz"
[02:11] marcello3d: AAA_awright: that also is global, though?
[02:11] copenhas has joined the channel
[02:11] AAA_awright: marcello3d: No, you can refer to whatever instance of MyModule you wish
[02:11] marcello3d: right, but they'll all point at the same object
[02:12] AAA_awright: Uh, no, because you can refer to whatever instance of MyModule you wish
[02:12] AAA_awright: Or even create a new one
[02:12] orls: tladuke: (same thing as AAA_awrig is saying) Your some_function is currently referring to the MyModule func itself, not to an instance
[02:12] marcello3d: var a = new MyModule, b = new MyModule; a.states.foo = 5; b.states.foo == 5
[02:12] sugardave has joined the channel
[02:12] tladuke: AAA_awright: hmm, i think i see. that's weird if it works
[02:12] seivan_ has joined the channel
[02:13] AAA_awright: marcello3d: Oh is that prototype wierdness? I thought assigning like that would create a new Object...
[02:13] marcello3d: no, because it's in the prototype
[02:13] AAA_awright: marcello3d: Maybe you add this.states={} inside too... Actually I would make MyModule.prototype.states=null
[02:13] marcello3d: so when you do a.states, it looks in the instance for 'states', doesn't find it, then looks at the prototype, and finds it
[02:13] marcello3d: but there's only one prototype
[02:13] AAA_awright: Right right
[02:14] nciagra has left the channel
[02:14] marcello3d: I would just do this.states = {} in the constructor, and don't even bother with the prototype
[02:14] tladuke: marcello3d: go on...
[02:14] marcello3d: that's it.:)
[02:14] chiel has joined the channel
[02:14] tladuke: brb...
[02:14] postwait: here you go... node-iptrie: https://github.com/postwait/node-iptrie
[02:15] luke` has joined the channel
[02:16] AAA_awright: marcello3d: Yeah you're right and I should have caught that
[02:16] malpeli: nwhite: hy Nathan, are you from mongoose team?
[02:16] dguttman_ has joined the channel
[02:16] marcello3d: malpeli: what's up?
[02:16] tladuke: ok so
[02:16] tmpvar has joined the channel
[02:16] BillyBreen has joined the channel
[02:17] malpeli: marcello3d: Im trying to bring records sorted by date where the date is superior to Date.now() Did you know how could we do that?
[02:18] marcello3d: have you looked here? http://www.mongodb.org/display/DOCS/Advanced+Queries
[02:18] Murugaratham: wat IDE do you guys use for writing ur js files?
[02:18] marcello3d: intellij
[02:18] Murugaratham: oo
[02:19] luke`_ has joined the channel
[02:19] Yuffster_work has joined the channel
[02:19] malpeli: marcello3d: did you know how I could enter pure mongo queries using mongo find?
[02:20] marcello3d: malpeli: I've never used mongoose
[02:20] malpeli: marcello3d: Its like that ? "db.things.find({j: {$ne: 3}, k: {$gt: 10} });"
[02:20] Murugaratham has joined the channel
[02:20] arnaudsj- has joined the channel
[02:20] malpeli: marcello3d: oh thanks... well I will try that
[02:21] arnaudsj- has left the channel
[02:21] jacobolus has joined the channel
[02:23] marcello3d: it's probably worth learning raw mongodb queries anyway
[02:23] marcello3d: if you want to do that kind of thing
[02:23] softdrink has joined the channel
[02:23] marcello3d: [v0.1.3] https://github.com/marcello3d/node-mongolian
[02:25] malpeli: marcello3d: cool!!!!! I will try to use your drive instead of mongoose. Thanks!
[02:26] rvaj2 has joined the channel
[02:27] marcello3d: malpeli: it's a low level library
[02:31] tladuke: marcello3d: hwo do i refer to states after i do this.states ={} in the constructor?...
[02:31] marcello3d: well, how do you think?
[02:32] tladuke: MyModule.states, but nope
[02:34] axfraxfr has joined the channel
[02:34] tladuke: i don't have to make some kind of function to get and set (when i'm in the module...)
[02:34] marcello3d: can you gist your code?
[02:34] marcello3d: I need more context
[02:34] tladuke: yeah, this will make more sense now
[02:34] pedrobelo has joined the channel
[02:35] jetheredge has joined the channel
[02:36] tladuke: https://gist.github.com/861585
[02:37] brianc has joined the channel
[02:37] marcello3d: your main.js is right
[02:37] marcello3d: your MyMod.js isn't
[02:37] marcello3d: MyModule is the class itself
[02:37] tladuke: i knkow
[02:38] xla has joined the channel
[02:38] marcello3d: so MyModule.states is going to be a separate object
[02:38] tladuke: that's just do show what i want to do
[02:38] tladuke: maybe i can't do it
[02:38] marcello3d: do you want all instances to have the SAME states object?
[02:38] tladuke: no
[02:38] marcello3d: then delete this line: MyModule.states["fo o"] = "Bar";  //nope
[02:38] marcello3d: and you should be good
[02:38] tladuke: but i want the module, or main to be able to change that instances
[02:39] tladuke: instance's states
[02:39] brianc: isaacs: *ping*
[02:39] marcello3d: so you want each instance to have its own states object, but you want to be able to change all instances simultaneously?
[02:40] isaacs: brianc: yo
[02:40] tladuke: no...
[02:40] sprout has joined the channel
[02:40] brianc: isaacs: hello! question for you about npm...(been reading docs but haven't found answer)
[02:40] marcello3d: inside the module functions you'd just access it with "this"
[02:40] isaacs: k
[02:40] marcello3d: does node-inspector not work with node 0.4.2?
[02:40] tladuke: the module also has function that parse ...
[02:40] marcello3d: it's showing old versions of my source files
[02:41] marcello3d: tladuke: you'd just use this.states
[02:41] marcello3d: inside the module functions
[02:41] bingomanateeIpho has joined the channel
[02:41] ngs has joined the channel
[02:41] tladuke: but the function have to be Module.functions right?
[02:41] brianc: isaacs: I have a module which has a c++ binding and a "fallback" pure javascript version which export the same API.  Is there a way to 'try' and build the c++ bindings and if it fails still let the module install?  I can throw the appropriate runtime error if compiled.
[02:41] bingomanateeIpho: Launch party @ parisoma SF tonite
[02:41] brianc: isaacs: example: "npm install pg"
[02:41] ossareh has joined the channel
[02:42] brianc: if there is no libpq on the system
[02:42] brianc: still installs
[02:42] jimt has joined the channel
[02:42] WRA: heya, how do I run a module that npm installed?
[02:42] bingomanateeIpho: 11th btw mission & Howard
[02:42] brianc: but then you do "require('pg/native');" and I can throw an error since the binding file doesn't exist
[02:42] brianc: basically I want to TRY To compile something but still consider the install a success if the compile fails
[02:42] pHcF has joined the channel
[02:43] WRA: wow nevermind
[02:43] isaacs: brianc: sure, just supply a { "scripts" : "node-waf and make stuff || true" }
[02:43] brianc: I was thinking maybe make the pure javascript version a package and then another package (the c++ parts) which depend on the pure javascript version, so pure javascript always installs and then c++ installs as well afterwards...just kinda would rather have the package be a single repository since the code base is shared
[02:43] isaacs: brianc: er, { "scripts" : {"install" : "node-waf and make stuff || true" }}
[02:43] Nevtus has joined the channel
[02:43] Apes has joined the channel
[02:44] Nevtus has joined the channel
[02:44] isaacs: brianc: then in your js, do try { var native = require("./build/default/native-stuff") } catch (ex) { // deal with it // }
[02:44] harth has joined the channel
[02:44] c4milo1 has joined the channel
[02:45] brianc: isaacs: ah awesome! I can just exit with a "0" exit code even if the compilation fails, that way the non-c++ part of the package will still be available
[02:45] isaacs: brianc: you could also do something like redis does with hiredi
[02:45] isaacs: *hiredis
[02:45] isaacs: ie, if the native thing is installed, then it uses it, otherwise it doesn't
[02:45] isaacs: brianc: yeah
[02:45] isaacs: the exit code is everything
[02:45] isaacs: exiting with a 0 == i assume you know what yoer' doing
[02:45] brianc: isaacs: awesomeness! thanks.
[02:46] asimismo has joined the channel
[02:46] dspree has joined the channel
[02:47] isaacs: np
[02:48] rvaj2 has joined the channel
[02:48] Evet_ has joined the channel
[02:49] bentruyman has joined the channel
[02:50] malpeli: marcello3d: Hey it work... thanks marcello!!
[02:51] malpeli: marcello3d: mongoose also accepts this queries :D
[02:51] marcello3d: malpeli: mongolian?
[02:51] malpeli: marcello3d: the advanced queries save my day ... thankyou very much!
[02:52] malpeli: marcello3d: have a good week! I will try mongolian later too
[02:52] piscisaureus: d:\nodejs\node-src>node
[02:52] piscisaureus: > void setTimeout( function() { console.log('timer works'); }, 4000 );
[02:52] piscisaureus: > require('fs').readFile('node.exe', function(err, buf) { console.log(buf.length
[02:52] piscisaureus: ) });
[02:52] piscisaureus: > 9740485
[02:52] piscisaureus: timer works
[02:53] piscisaureus: ^-- IOCP backend :-)
[02:54] marcello3d: any ideas anyone? npm-fail https://gist.github.com/030bfefebd0d189f787c
[02:58] vipaca has joined the channel
[02:58] vipaca has joined the channel
[03:01] dguttman has joined the channel
[03:02] langworthy has joined the channel
[03:03] copenhas has joined the channel
[03:04] FunkyFortuneNone has joined the channel
[03:04] Evet has joined the channel
[03:04] jamescarr has joined the channel
[03:05] mikeal has joined the channel
[03:07] tladuke: thanks marcello3d https://gist.github.com/861633
[03:10] marcello3d: tladuke: looks good
[03:11] wilmoore_ has joined the channel
[03:12] harth has joined the channel
[03:13] WRA: is there a way to use npm to locate installed modules
[03:13] jimt_ has joined the channel
[03:13] ngs has joined the channel
[03:14] davidwalsh has joined the channel
[03:15] julienXX has joined the channel
[03:15] julienXX has joined the channel
[03:15] tladuke: i don't particularly want parse() exported, but i could just define it in the constructor i guess
[03:17] Aria has joined the channel
[03:17] kriszyp has joined the channel
[03:21] dthompson has joined the channel
[03:23] constantx has joined the channel
[03:26] evanmeagher has joined the channel
[03:26] perlmonkey2 has joined the channel
[03:26] pcardune has joined the channel
[03:27] eyesUnclouded has joined the channel
[03:27] abraham has joined the channel
[03:28] jimt has joined the channel
[03:33] seivan has joined the channel
[03:33] mikeal has joined the channel
[03:33] Murugaratham has joined the channel
[03:33] dnyy has joined the channel
[03:34] nwhite has left the channel
[03:35] joshfng has joined the channel
[03:36] eee_c has joined the channel
[03:40] nilyt has joined the channel
[03:43] glitterfang has joined the channel
[03:43] lakin has joined the channel
[03:46] harth has joined the channel
[03:46] HAITI has joined the channel
[03:49] FunkyFortune has joined the channel
[03:49] themiddleman has joined the channel
[03:50] noahcampbell has joined the channel
[03:52] kevinliu has joined the channel
[03:52] secoif has joined the channel
[03:59] mikeal1 has joined the channel
[04:00] ryah: piscisaureus: awesome!
[04:01] mbrochh]2 has joined the channel
[04:02] tim_smart has joined the channel
[04:05] Astro has joined the channel
[04:11] aredridel has joined the channel
[04:15] p0ns has joined the channel
[04:16] p0ns has joined the channel
[04:21] rhdoenges has joined the channel
[04:25] themiddleman has joined the channel
[04:28] ryah: piscisaureus: is your ev code up?
[04:30] luke` has joined the channel
[04:30] Jamool has joined the channel
[04:31] threetee has left the channel
[04:33] Murugaratham has joined the channel
[04:34] gazumps has joined the channel
[04:35] timmywil has joined the channel
[04:35] dguttman has joined the channel
[04:38] pcardune has joined the channel
[04:39] jgautier has joined the channel
[04:41] ngs_ has joined the channel
[04:43] zachsmith has joined the channel
[04:43] brianc has joined the channel
[04:44] kollektiv has joined the channel
[04:45] piscisaureus: ryah: no its a mess. soon.
[04:46] Murugaratham has joined the channel
[04:47] bradleymeck has joined the channel
[04:47] kollektiv: what am i doing wrong? url.format({host: "www.google.com", query: "page=1", pathname: "blah/blah", protocol: "http:"}) is omitting the query params
[04:51] aredridel has joined the channel
[04:51] amerine has joined the channel
[04:51] pHcF: kollektiv: query: "?page=1"
[04:52] ryah: ACTION is always amazed at the features in require('url')... (i signed off on those? :/)
[04:52] kollektiv: doesn't work pHcF
[04:52] pHcF: :/
[04:52] pHcF: oh thats for request
[04:53] tshpaper has joined the channel
[04:54] AAA_awright: The property names really ought to be the same
[04:54] AAA_awright: That confused me too
[04:54] AAA_awright: I think the RFCs define actual names for the components of various URIs
[04:54] Aria: Yeah, but they're a little inconsistent sometimes.
[04:55] muk_mb has joined the channel
[04:56] MikhX has joined the channel
[04:56] postwait has joined the channel
[04:59] Me1000 has joined the channel
[04:59] sav has joined the channel
[05:00] mbrochh has joined the channel
[05:00] mbrochh has joined the channel
[05:00] ryanfitz has joined the channel
[05:00] mike5w3c has joined the channel
[05:02] sivy has joined the channel
[05:02] isaacs has joined the channel
[05:03] dekz has joined the channel
[05:03] aredridel has joined the channel
[05:04] siong1987 has joined the channel
[05:09] kawaz_air has joined the channel
[05:09] kawaz_work has joined the channel
[05:12] langworthy has joined the channel
[05:18] f1lt3r_ has joined the channel
[05:19] f1lt3r_: hey guys, i'm getting an error (this is my first attempt at trying node)
[05:19] f1lt3r_: console.log(1);
[05:19] f1lt3r_: ^
[05:19] f1lt3r_: ReferenceError: console is not defined
[05:20] SubStack: f1lt3r_: how are you launching node?
[05:21] ybit: f1lt3r_: probably a bad install
[05:21] f1lt3r_: "nodejs test.js"
[05:21] ybit: oh
[05:21] f1lt3r_: bad?
[05:21] mikegerwitz: f1lt3r_: what happens when you just type `node` from the command line, then "console.log( 'foo' );"
[05:22] f1lt3r_: "node"
[05:22] Shrink has joined the channel
[05:22] f1lt3r_: or "nodejs" ?
[05:22] pHcF: node
[05:22] mscdex: should be just `node`
[05:22] f1lt3r_: it works then
[05:22] mikegerwitz: f1lt3r_: whatever it's installed as. I know some debian packages I've seen others using install it as "nodejs"
[05:22] f1lt3r_: got it
[05:22] f1lt3r_: thanks ;)
[05:22] mscdex: :S
[05:22] f1lt3r_: :D
[05:22] Shrink has left the channel
[05:23] Spion_ has joined the channel
[05:23] mikegerwitz: f1lt3r_: just curious..what does `which nodejs` say? and `nodejs --version`
[05:24] andrewfff has joined the channel
[05:24] mscdex: and `node --version`
[05:25] MetaJake has joined the channel
[05:26] tilgovi has joined the channel
[05:26] pHcF: https://github.com/pedrofranceschi/Blogode if someone wants to help, i have no time to finish it up :(
[05:26] f1lt3r_: i think it's 1.92 mikegerwitz 
[05:27] mscdex: :O
[05:27] mikegerwitz: never used 0.1.92. Did it lack console.log? heh
[05:27] mscdex: shouldn't have
[05:27] Murugaratham: it's 0.4.2 now?
[05:27] mikegerwitz: Murugaratham: think so
[05:27] mscdex: f1lt3r_: which version was that for? `node -v` or `nodejs -v` ?
[05:27] Murugaratham: node -v for me
[05:27] f1lt3r_: oh 0.5pre is what i'm on (node)
[05:28] f1lt3r_: 0.1.96 for nodejs
[05:28] mscdex: ah yes that's better
[05:28] f1lt3r_: *0.1.97
[05:28] Murugaratham: any idea which version will support multi-core?
[05:28] mscdex: `node` is what you want :)
[05:28] f1lt3r_: :)
[05:28] mikegerwitz: Murugaratham: Are there plans for that?
[05:28] Murugaratham: no idea
[05:28] Murugaratham: there are some projects trying to do that
[05:28] Murugaratham: i think cluster
[05:29] mscdex: Murugaratham: to take advantage of mult-core, just create multiple processes
[05:29] bradleymeck has joined the channel
[05:29] mscdex: there's several modules out there that handle that and IPC between them
[05:30] Murugaratham: hmm it would always be nice if nodejs can handle it nicely 
[05:31] admc has joined the channel
[05:31] ringomanatee: Is there no one-stroke file copy in node?
[05:32] ringomanatee: (core)
[05:32] fairwinds has joined the channel
[05:32] jasonTheNorris has joined the channel
[05:33] mscdex: ringomanatee: you could probably come pretty close with piping a read stream into a write stream
[05:33] ringomanatee: okie
[05:38] JaMeSiTeGeN has joined the channel
[05:38] cloudhead: anyone here use the redis module with pub/sub?
[05:38] JaMeSiTeGeN: redis, Why honestly mongo works fine and it has tables
[05:39] cloudhead: JaMeSiTeGeN: ?
[05:39] mscdex: Murugaratham: besides cluster, there's node-webworker (https://github.com/pgriess/node-webworker) and multi-node (https://github.com/kriszyp/multi-node)
[05:39] cloudhead: bananas are good too
[05:39] JaMeSiTeGeN: Mongo is far more powerful than redis
[05:40] cloudhead: JaMeSiTeGeN: right...
[05:40] seivan has joined the channel
[05:41] Murugaratham: mscdex: i see, but there are too many ways to do it
[05:42] mikegerwitz: Murugaratham: Yeah. Once the community grows and becomes more stable, things will settle..there's 500 ways of doing nearly everything atm.
[05:42] kollektiv has joined the channel
[05:42] kollektiv has joined the channel
[05:42] mscdex: well, web workers is a standard so maybe that's your best bet
[05:42] mikegerwitz: Murugaratham: Which is good..encourages innovation
[05:43] cloudhead: JaMeSiTeGeN: go back to the basics, I think all this db stuff is getting over your head
[05:44] ringomanatee: working and having tables is a pretty shallow analysis of a repositories' deliverables. 
[05:45] mikegerwitz: JaMeSiTeGeN: Mongo and redis are completely different. Document db vs key-value store. Different uses
[05:46] JaMeSiTeGeN: I know
[05:46] zemanel has joined the channel
[05:47] mike5w3c has joined the channel
[05:47] abraham has joined the channel
[05:48] mscdex: node.js rules!
[05:48] seivan has joined the channel
[05:49] mnot has joined the channel
[05:49] JaMeSiTeGeN: redis has quite a limmit, but can have its uses
[05:50] zpao has joined the channel
[05:51] p0ns has left the channel
[05:52] briznad has joined the channel
[05:52] unlink has joined the channel
[05:52] unlink has joined the channel
[05:53] fangel has joined the channel
[05:56] f1lt3r_: how do you stop a node process?
[05:56] f1lt3r_: i tried "kill" that does to seem to work
[05:56] andrewfff has joined the channel
[05:57] Aria: kill -9 if you must force it.
[05:57] seivan has joined the channel
[05:57] themiddleman_itv has joined the channel
[05:57] JaMeSiTeGeN: killall Aria
[05:57] SubStack: -SIGSTOP
[05:58] JaMeSiTeGeN: init 1 :)
[05:58] mscdex: there can be only 1!
[05:59] jimt_ has joined the channel
[05:59] xsyn has joined the channel
[05:59] mikegerwitz: There is no stopping node.
[05:59] ringomanatee: what is the "mode" argument of mkdir supposed to be?
[06:00] ryah: ringomanatee: http://www.kernel.org/doc/man-pages/online/pages/man2/mkdir.2.html
[06:00] mbrochh]2 has joined the channel
[06:01] admc1 has joined the channel
[06:03] flippyhead has joined the channel
[06:04] SamuraiJack has joined the channel
[06:04] meso has joined the channel
[06:06] harth has joined the channel
[06:07] JaMeSiTeGeN: mikegerwitz: you can kill node with `process.end()`
[06:07] wadey has joined the channel
[06:09] mbrochh has joined the channel
[06:12] mikegerwitz: JaMeSiTeGeN: Yeah, was a joke :) Like the Chuck Norris of software
[06:12] er1c_ has joined the channel
[06:13] themiddleman_itv has joined the channel
[06:13] andrewfff has joined the channel
[06:14] ryankirkman has joined the channel
[06:17] ryankirkman: I'm using CouchDB with node.js. I want a new UUID. I know I can do server.com:5694/_uuid, but I don't like the fact that I have to do another callback (more nesting). I chose to use node-uuid. Is there a better solution?
[06:18] seivan has joined the channel
[06:22] andrewfff has joined the channel
[06:24] soulofpeace_ has joined the channel
[06:27] malkomalko has joined the channel
[06:27] sub_pop has joined the channel
[06:27] briznad has joined the channel
[06:32] EyePulp has joined the channel
[06:32] andrewfff has joined the channel
[06:34] dguttman has joined the channel
[06:35] ossareh has joined the channel
[06:36] ossareh_ has joined the channel
[06:39] dguttman has joined the channel
[06:41] mytrile has joined the channel
[06:43] sriprasanna has joined the channel
[06:49] xsyn has joined the channel
[06:50] langworthy has joined the channel
[06:50] FireFly has joined the channel
[06:52] aredridel has joined the channel
[06:52] pau|c has joined the channel
[06:54] Kirill has joined the channel
[06:54] Kirill: hey guys, i have a trouble with installing node
[06:54] Kirill: my os is windows
[06:54] Kirill: and i`m trying to install above cigwin
[06:55] Kirill: it print me Project not configured
[06:55] JaMeSiTeGeN: ACTION killed windows this morning why have you still got it running, let me give you a virus that installs LMDE over windows
[06:56] tomask has joined the channel
[06:56] tomask has joined the channel
[06:56] Kirill: so any ideas?
[06:57] Murugaratham has joined the channel
[06:58] jesusabdullah: What's an LMDE?
[06:58] muhqu has joined the channel
[06:58] jesusabdullah: oh
[06:58] jesusabdullah: Kirill: ./configure
[06:58] jesusabdullah: Run the configure script
[06:58] jesusabdullah: THEN make
[07:00] mbrochh]2 has joined the channel
[07:00] soulofpeace has joined the channel
[07:01] razvandimescu has joined the channel
[07:02] mike5w3c has joined the channel
[07:03] mytrile has joined the channel
[07:03] abraham has joined the channel
[07:03] shiawuentan has joined the channel
[07:04] Kirill: it shows me unable to remap
[07:04] Kirill: fatal error
[07:04] luke` has joined the channel
[07:05] zentoooo has joined the channel
[07:05] Kirill: i find a solve at faq page
[07:05] Kirill: need to use rebaseall at ash.exe
[07:05] Kirill: but it not works
[07:06] Kirill: "not found"
[07:07] dguttman has joined the channel
[07:14] Viriix has joined the channel
[07:19] mraleph has joined the channel
[07:22] mad_v has joined the channel
[07:26] paul_k has joined the channel
[07:27] mytrile has joined the channel
[07:28] paul_k has joined the channel
[07:28] Evet_ has joined the channel
[07:32] andrewfff has joined the channel
[07:34] hwinkel has joined the channel
[07:39] Kir has joined the channel
[07:40] Kir: hi where i should save files for node.js?
[07:40] aways|bnc: ACTION Bonjour 
[07:41] Kir: i just installed it a few minutes ago
[07:41] pkrumins has left the channel
[07:41] atiti has joined the channel
[07:41] Kir: when i go to 127.0.0.1:8124 it shows me Hello world
[07:41] Kir: so where is this file?
[07:43] ajpiaNOU has joined the channel
[07:45] __tosh has joined the channel
[07:45] JaMeSiTeGeN has left the channel
[07:46] ajnasz has joined the channel
[07:46] sechrist has joined the channel
[07:46] axfraxfr has joined the channel
[07:48] bradleymeck has joined the channel
[07:49] gkatsev: Kir: wherever you saved it
[07:50] tedsuo has joined the channel
[07:50] stride has joined the channel
[07:51] johndahlstrom has joined the channel
[07:53] groom has joined the channel
[07:56] nyholt has joined the channel
[07:57] ivanfi has joined the channel
[07:57] bergie has joined the channel
[07:58] ttpva has joined the channel
[07:59] TomY has joined the channel
[08:00] ph^ has joined the channel
[08:00] statim has joined the channel
[08:00] mbrochh has joined the channel
[08:00] mbrochh has joined the channel
[08:01] msch has joined the channel
[08:01] Zil has joined the channel
[08:02] statim: anyone have hummingbird up and running? trying to figure out exactly how to use the tracking pixel for the public facing site i want to track, and the widgets for the internal UI.  looking through the code i see params being passed to the tracking pixel but its not adding up.  anyone gone through this?
[08:03] fangel has joined the channel
[08:04] saikat has joined the channel
[08:04] Fullmoon has joined the channel
[08:08] dewey___ has joined the channel
[08:09] emattias has joined the channel
[08:09] dewey___: does someone know why spawn('program', ['my_command 12']) isn't working and exec('program my_command 12') is?
[08:11] yozgrahame has joined the channel
[08:11] ttpva has joined the channel
[08:12] incon has joined the channel
[08:13] dubbe has joined the channel
[08:13] nivoc has joined the channel
[08:14] langworthy has joined the channel
[08:14] mnot has joined the channel
[08:14] Druid_ has joined the channel
[08:18] mhausenblas has joined the channel
[08:20] kal-EL_ has joined the channel
[08:21] ttpva has joined the channel
[08:22] ngw has joined the channel
[08:23] breccan has joined the channel
[08:25] Evet has joined the channel
[08:25] jetienne has joined the channel
[08:27] troessner has joined the channel
[08:31] pietern has joined the channel
[08:35] eventi has joined the channel
[08:35] Evet: which module can be used to manage multiple services, multiple hostnames and multiple ip addresses?
[08:36] incon has joined the channel
[08:36] q_no has joined the channel
[08:36] matjas has joined the channel
[08:36] matjas: anyone else having problems publishing to npm right now?
[08:37] [AD]Turbo has joined the channel
[08:38] [AD]Turbo: hi there
[08:38] paul_k has joined the channel
[08:39] dominic__: dewey___: try  spawn('program', ['my_command', '12'])
[08:39] msucan has joined the channel
[08:40] mjr_ has joined the channel
[08:41] zemanel has joined the channel
[08:43] nivoc has joined the channel
[08:45] altamic has joined the channel
[08:45] altamic has joined the channel
[08:47] FireFly|n900 has joined the channel
[08:47] herbySk has joined the channel
[08:48] jimt has joined the channel
[08:49] floby has joined the channel
[08:50] kawaz_air has joined the channel
[08:52] kawaz_air has joined the channel
[08:53] jbpros has joined the channel
[08:53] paul_k has joined the channel
[08:55] ttpva has joined the channel
[08:56] teemow has joined the channel
[08:58] mikeal has joined the channel
[08:59] incon has joined the channel
[08:59] gozala has joined the channel
[08:59] bradleymeck has joined the channel
[09:00] mAritz has joined the channel
[09:01] mbrochh]2 has joined the channel
[09:01] mikl has joined the channel
[09:01] mikl has joined the channel
[09:02] sveimac has joined the channel
[09:05] eschnou has joined the channel
[09:08] Murugaratham has joined the channel
[09:09] zab has joined the channel
[09:10] romainhuet has joined the channel
[09:10] Murugaratham has joined the channel
[09:10] zab: if writing a custom module, what should it return when someone 'requires' it?
[09:10] zab: an object, function, string...?
[09:10] zab: any?
[09:11] fangel: depends what your module does.. :)
[09:11] dominic__: zab: assign your functions to exports.func = function(){}
[09:11] dominic__: etc
[09:12] zab: but how does the developer know what to do with the module?  solely documentation?
[09:12] floby: node doesn't care about your return value. return is supposed to be illegal in a module declaration. Node doesn't throw on this because of the way it handles modules
[09:13] floby: Node follows the commonjs module specification =)
[09:13] floby: commonjs.org
[09:13] zab: floby: yep, shouldn't have said 'return'.  i meant what should i assign exports to in my custom module
[09:13] floby: oh
[09:13] floby: then export.MyExportedThing = MyThingy
[09:14] zab: i want to assign export to an emitter instance that i'll be emitting stuff to
[09:14] zab: is that kosher?
[09:14] floby: oh you mean the whole module has to be an event emitter ?
[09:14] jbpros_ has joined the channel
[09:15] zab: hmm well i suppose it doesn't have to be
[09:15] zab: so could be exports.emitter = emitter;
[09:15] zab: rather than module.exports = emitter;
[09:15] floby: you can do both
[09:15] zab: cool
[09:15] floby: but commonjs is unclear about the ability to override module.exports
[09:16] zab: yeah was just wondering about the inconsistency of all these modules assigning exports to different things
[09:16] zab: how is a developer supposed to know exactly what to expect
[09:16] zab: when they use it
[09:16] floby: if you load a module you must have a slight idea what it is. =)
[09:17] zab: heh
[09:17] floby: require() always returns a JS value, never undefined
[09:18] zab: do you think commonjs will define a standard for this one day or is this a preferred approach?
[09:18] astropirate has joined the channel
[09:18] floby: not sure what you mean
[09:18] zab: standardising what exports can hold
[09:18] zab: at the top level
[09:19] floby: I don't think so, that'd be incredibly restrictive
[09:19] zab: yeah ok
[09:19] floby: I actually do module.export = MyConstructor; when I develop "classes" so that they van be required with a simple: MyClass = require('MyClass');
[09:20] zab: but that doesn't work for emitters
[09:20] floby: doesn't it
[09:20] floby: module.exports = new EventEmitter() ?
[09:20] rchavik has joined the channel
[09:21] floby: looks fine to me
[09:21] zab: oh yeah, that would work
[09:21] aklt has joined the channel
[09:21] zab: i got confused when you said 'classes'.  still getting used to the object system
[09:22] astropirate: Could someone tell me why this module inheritance isn't working?  I have module  Mew (http://pastie.org/1650695) inheriting from module Moo (http://pastie.org/1610423). It gives me a runtime error: "TypeError: Object function () { console.log('Moo Constructor reached'); } has no method 'arg'"
[09:22] floby: I understan. but
[09:22] floby: util.inherits(MyConstructor, EventEmitter);
[09:22] floby: module.exports = MyConstructor;
[09:22] floby: It exports a Constructor which yields Event emitters
[09:24] zab: maybe i misunderstand emitters?  when you emit an event, does the event go to all instances of the class or just to the instance that you emitted the event on?
[09:25] floby: atropirate: because super_ holds a reference to a constructor, not an instance
[09:25] breccan has joined the channel
[09:25] floby: astropirate: line 11 should be: return Mew.super_.prototype.arg.call(this);
[09:25] floby: zab: second one
[09:25] zab: god damn
[09:26] astropirate: floby, THANK YOU! :D  been trying to figure this one out for a LONG time
[09:26] astropirate: but damn this is verbose...
[09:26] floby: astropirate: no problem
[09:27] zab: in order to emit the event though, you need to create an instance
[09:27] floby: zab: yes
[09:28] adambeynon has joined the channel
[09:28] zab: well that just made it 10 times more powerful than i thought it was
[09:28] floby: my ee = new EventEmitter();
[09:28] floby: ee.on('coucou', function(){console.log('got coucou');});
[09:28] floby: ee.emit('coucou');
[09:28] floby: // -> got coucou
[09:30] mytrile has joined the channel
[09:30] zab: thanks floby 
[09:30] floby: zab: welcome =)
[09:30] clark has joined the channel
[09:31] floby: astropirate: also the first instruction of your Mew constructor should be: Moo.apply(this, arguments);
[09:32] astropirate: floby, what does that do? initialize the parent modual?
[09:32] floby: astropirate: it's the equivalent of calling the parent constructor
[09:33] floby: astropirate: well actually it's not equivalent, it's exactly what it is
[09:34] astropirate: floby, I see. I should play around and experiment with this a bit
[09:34] floby: astropirate: yes, the REPL is good for this. I used to do it in the firebug console before
[09:34] astropirate: floby,   what is "arguments" in Moo.apply(this, arguments);
[09:35] astropirate: ohh
[09:35] astropirate: dumb question :p
[09:36] floby: astropirate: ahah, don't worry I didn't see it ;)
[09:37] dubbe has joined the channel
[09:39] skm has joined the channel
[09:39] shift__ has joined the channel
[09:40] muhqu_ has joined the channel
[09:40] jetienne: q. i got an instanced object, and would like its prototype chain ? like var chain = foo.prototype; but doesnt seem to work
[09:42] clark: __proto?
[09:42] floby: jetienne: foo.__proto__ ?
[09:42] clark: __proto__*
[09:42] clark: yeah
[09:43] floby: non standard but work in V8
[09:43] floby: or foo.constructor.prototype =)
[09:43] jetienne: hmmm i tried foo.constructor.prototype before
[09:43] jetienne: same result as __proto__ == undefined
[09:43] jetienne: arguments.__proto__ is the one interesting me
[09:44] jetienne: Array.prototype.slice.call(arguments); <- or maybe just a better way to write this :)
[09:45] jetienne: arr[i].apply(this, Array.prototype.slice.call(arguments, 1)) <- yeuk
[09:46] floby: jetienne: oh arguments is a weird thing
[09:46] hwinkel has joined the channel
[09:46] floby: jetienne: what about an ugly arguments.__proto__ = Array.prototype ? :D
[09:47] jetienne: :)
[09:47] clark: i think that's a bad idea...
[09:47] clark: er, nevermind.
[09:48] clark: im tired.
[09:48] randallagordon has joined the channel
[09:48] floby: well if arguments has no prototype anyway, there's no loss
[09:49] clark: i was thinking about Object.create because I'm an idiot
[09:50] floby: jetienne: according to the REPL, arguments.__proto__ = {};
[09:50] asabil has joined the channel
[09:51] floby: it's Object.prototype
[09:51] gozala has joined the channel
[09:52] ngw has joined the channel
[09:53] jetienne: ok
[09:53] bzinger has joined the channel
[09:53] Egbert9e9 has joined the channel
[10:00] mcahornsirup has joined the channel
[10:01] floby: question for the dev guys. Is support for proxying (SOCKS and HTTP) going to core anytime soon ?
[10:01] mbrochh has joined the channel
[10:02] randallagordon has joined the channel
[10:03] unlink has joined the channel
[10:03] unlink has joined the channel
[10:03] orls has joined the channel
[10:05] chiel has joined the channel
[10:06] dominic__: floby: I would be surprised if it did. there is a http proxy on npm.
[10:06] floby: dominic_ I meant for client code. I'm behind a proxy at school and it's a pain when I want to test my node apps
[10:07] jetienne: floby: some wrapper exists LD_PRELOAD
[10:07] floby: jetienne: how would that work ?
[10:07] jetienne: http://linux.die.net/man/8/tsocks
[10:08] floby: thanks
[10:08] jetienne: floby: they load their library socket binding before the libc one. so it bypass and handle socks transparently
[10:08] jetienne: quite close to .prototype stuff in fact :)
[10:08] floby: jetienne: classe!
[10:09] floby: jetienne: it changes the program loader ?
[10:10] jetienne: floby: yes. it hijack normal libc calls and puts its own
[10:10] floby: jetienne: I like hijacking =)
[10:10] jetienne: this is a nice effect on how code are linked
[10:10] mike5w3c has joined the channel
[10:11] romka has joined the channel
[10:11] floby: jetienne: indeed, I used to be very interested in how things link. but LD_PRELOAD is not tsocks specific, is it? or is a common linux thing?
[10:12] jetienne: floby: it is common unix thing
[10:12] jetienne: floby: you mostly got it on macos too
[10:12] jetienne: mostly=most likely
[10:12] floby: jetienne: neat, I'm gonna play all afternoon with this
[10:13] jetienne: set env DYLD_INSERT_LIBRARIES /usr/lib/libMallocDebug.dylib 
[10:13] jetienne: the mac version apparently
[10:13] floby: aah, I love *nix they thought of everything =)
[10:13] xla has joined the channel
[10:13] jetienne: you can intercept malloc/free for example to know if you leak memory
[10:13] jetienne: ok back to little toy in js
[10:14] jetienne: i need to have a real blog
[10:14] romka: Hello. Is there any way to get memory dump of nodejs server instance?
[10:14] floby: what do you mean dump ?
[10:14] zomgbie has joined the channel
[10:14] jetienne: kill -11 node :)
[10:14] floby: that ought to do it
[10:15] romka: Dump, i mean i want ot see what object are in memory
[10:15] romka: i have leaks and want to know what is leaked :)
[10:15] jetienne: romka: v8 debugger may do that. i never used it
[10:16] floby: mmmh JS objects ? I think that node-inspector can do this
[10:16] mlins has joined the channel
[10:16] sfoster has joined the channel
[10:16] sveimac has joined the channel
[10:17] rope has joined the channel
[10:17] rope has joined the channel
[10:18] swistak has joined the channel
[10:18] johndahlstrom has joined the channel
[10:18] romka: node-inspector only shows me what i have, say abount 5000 strings
[10:18] romka: but i want to know what in that string
[10:18] floby: oh boy
[10:19] floby: you're gonna have to do it manually 
[10:19] floby: I think
[10:20] romka: i don't have leaks on my local machine, but when i start it on server i see how it  leaked
[10:20] floby: same node versions ?
[10:20] romka: and after some amount of time instance is go out of memory
[10:20] romka: yess
[10:20] McMAGIC-- has joined the channel
[10:20] romka: we have our repository with node
[10:21] romka: so i have same apps and libs on local and remote server
[10:21] floby: :/ same architecture ?
[10:21] romka: hm.. 64 bit, ubuntu
[10:22] floby: it can also be a lib, if you installed them with npm you can `npm update` to have the latest versions everywhere
[10:22] romka: libs is in repository too
[10:22] floby: strange then
[10:23] romka: where one diifference that local i have only 1 computer. So DB (riak and rdie) on same machine
[10:23] romka: ok, try to see at v8 debugger :)
[10:24] floby: yes even if you don't have the very _contents_ of your objects, the number only can be a good indicator
[10:25] floby: and node-inspector can also compare differents snapshots
[10:25] romka: at this time on server is 0.2.5. So before use inspector we need to update node.
[10:25] romka: anyway thanks
[10:26] sfoster: why does npm insist on installing itself in my home directory at ~/bin/npm ? Is there some env. variable I need set? 
[10:27] jetienne: v8: 1
[10:27] v8bot: jetienne: 1
[10:27] _jdalton has joined the channel
[10:27] sfoster: $NODE_PATH is set and correct btw. 
[10:27] jetienne: v8: Object.inherit
[10:27] v8bot: jetienne: undefined
[10:28] jetienne: v8: Object.inherits
[10:28] v8bot: jetienne: undefined
[10:28] tc77 has joined the channel
[10:29] hellp has joined the channel
[10:30] kristsk has joined the channel
[10:30] markwubben has joined the channel
[10:31] xsyn has joined the channel
[10:34] dubbe: ACTION is away: Auto-away after 30 mins idle (gone at 9th Mar, 11:34:25)
[10:35] jetienne: node has no .extend or .mixin, correct ?
[10:37] kristsk: not native 
[10:37] hipe: derp it looks like  'y' flag for a RegExp (nonstandard feature for FF3) and regexp.lastIndex  is not in v8 
[10:38] hipe: i guess i shouldn't be surprised, but i'm trying to write a string toeknizer for a very simple little grammar 
[10:38] jetienne: kristsk: native ?
[10:38] kristsk: well there "extension" modules for node
[10:38] kristsk: there are
[10:39] jetienne: kristsk: ah ok dependancies
[10:39] jetienne: kristsk: ok underscore and all provide it but not node
[10:39] jetienne: kristsk: just wanted to be sure
[10:39] Sorella has joined the channel
[10:40] Shrink has joined the channel
[10:41] Shrink has left the channel
[10:41] Murugaratham has joined the channel
[10:42] __tosh has joined the channel
[10:43] jetienne: require('util').inherits(foo, bar) <- this will totally erase foo.prototype, correct ?
[10:43] jetienne: https://github.com/joyent/node/blob/master/lib/util.js#L402 for those interested
[10:43] __tosh has joined the channel
[10:45] __tosh has joined the channel
[10:45] eyesUnclouded has joined the channel
[10:47] piscisaureus has joined the channel
[10:48] chuck_ has joined the channel
[10:49] wav1 has joined the channel
[10:52] mytrile has joined the channel
[10:52] MattJ has joined the channel
[10:56] meso has joined the channel
[10:57] kawaz_wo_ has joined the channel
[10:59] prof-freud has joined the channel
[10:59] framlin: jetienne, it does "normal inheritance" by setting the prototype to the "parent"
[10:59] seivan has joined the channel
[10:59] framlin: IMHO
[10:59] FireFly|n900 has joined the channel
[11:00] jetienne: it is removing all local methods
[11:00] framlin: ????
[11:01] jetienne: lets me write an example
[11:01] framlin: where does it do that?
[11:01] zorrobiwan has joined the channel
[11:01] mbrochh]2 has joined the channel
[11:01] framlin: local methods are not part of the prototype
[11:01] jetienne: https://github.com/joyent/node/blob/master/lib/util.js#L404
[11:01] jetienne: i wont argue on the names
[11:01] zorrobiwan has left the channel
[11:02] framlin: its not only aboutnames, but concepts
[11:02] jetienne: sure
[11:02] framlin: prototype is a "local property"
[11:02] framlin: and this is set to an Object
[11:02] jetienne: framlin: link on this definition ?
[11:03] framlin: ??
[11:03] jetienne: well let me write my example. it will show what i mean
[11:03] framlin: I do not understand, what you are asking
[11:03] jetienne: i need to be sure i understand this well
[11:03] mlangenb1rg has joined the channel
[11:03] framlin: prototype is a "built in" property
[11:03] framlin: you can set it to an object, that has its own properties
[11:05] hassox has joined the channel
[11:05] framlin: if you try to use a property at the child-object, that is not ("local") part of the child, JS is looking within the prototype-object and if it does not find anything, it is looking in the prototype-object of the protoype-object and so on ...
[11:06] framlin: mom .. afk ..
[11:06] jetienne: do we have something like jsfiddle but for node ?
[11:06] mbrochh has joined the channel
[11:06] sth: Is there anyone in here using node-cluster that can help me?
[11:08] hwinkel has joined the channel
[11:09] jetienne: https://gist.github.com/862034 <- framlin an example which seems to show that require('util').inherit() erase the child class
[11:09] iFire has joined the channel
[11:11] Evet: what do you use to make node.js use multi-core?
[11:11] jetienne: Evet: cluster or similar
[11:12] jetienne: https://github.com/LearnBoost/cluster
[11:12] guybrush: fugue is another option
[11:12] Croms has joined the channel
[11:13] guybrush: Evet the idea is to spawn multiple node-processes for 1 application
[11:16] guybrush: you can do it yourself without cluster/fugue by using require('child_process')
[11:16] guybrush: http://nodejs.org/docs/v0.4.2/api/child_processes.html
[11:17] saikat has joined the channel
[11:22] Evet: wohaaa
[11:22] Evet: performance boost!
[11:23] sveimac has joined the channel
[11:24] Evet: jetienne, guybrush: i spawn 4x node-processes for same application, run nginx front of it
[11:24] Evet: than yeah 4x performance
[11:25] mickael has joined the channel
[11:26] mraleph has joined the channel
[11:28] jetienne: there :)
[11:29] larsemil has joined the channel
[11:29] framlin: jetienne, it seems as you write. Here is a working version, without utils.inherits https://gist.github.com/862052
[11:29] jbergstroem has joined the channel
[11:30] mscdex: Evet: there's also mult-node and node-webworker
[11:30] guybrush: Evet it is the same principle as it is with webworkers on the client-side
[11:30] framlin: and this is more like util.inherits, but works too: https://gist.github.com/862054
[11:31] asabil has joined the channel
[11:31] mscdex: why not just call util.inherits before adding to the prototype?
[11:31] jetienne: framlin: suppose i want to "inherit" from 2 objects.. bar and bir
[11:31] mscdex: :S
[11:31] jetienne: mscdex: because you can do it only once
[11:31] guybrush: so when you have got some calculating to do (like calculating prime-numbers or sth like that) it so good to spawn a extra process for that
[11:32] mscdex: huh?
[11:32] Evet: p.s., i have tested with nginx tcp proxy module
[11:32] jetienne: mscdex: .inherit erase the child class prototype
[11:32] Evet: regular http proxy_pass would perform worse
[11:32] terite has joined the channel
[11:32] jetienne: mscdex: you inherit of bla, then of bli, and bla is forgotten
[11:32] mscdex: so then merge the two prototypes together?
[11:33] jetienne: mscdex: cool, which node function can i use ?
[11:33] mscdex: i use a slightly modified version of the jquery merge function for merging objects
[11:33] jetienne: i think i start to understand util.inherit(), this is one shot thing
[11:33] guybrush: jetienne: i have tried multiple prototypal inheritance some while ago https://gist.github.com/723435
[11:33] guybrush: not sure if that is a good approach
[11:34] jetienne: mscdex: ok i was hoping not to have dependancies
[11:34] insin has joined the channel
[11:34] mscdex: jetienne: i extracted the extend function itself, but you can do it yourself too i suppose... it's just the jquery one is probably more battle tested
[11:35] jetienne: Object.deepExtend(C.prototype.__proto__, A.prototype); <- guybrush why using .prototype.__proto__ ? and not plain .prototype 
[11:35] borgling has joined the channel
[11:35] bengl has joined the channel
[11:35] jetienne: mscdex: yep im using underscore but the deal is the same
[11:35] mscdex: jetienne: https://github.com/mscdex/node-oscar/blob/master/oscar.js#L2905-L2980
[11:36] jetienne: this is ok i just wanted to make sure i understood .inherit() and those .prototype thing
[11:36] jetienne: mscdex: looking
[11:36] justin____ has joined the channel
[11:36] guybrush: https://developer.mozilla.org/en/JavaScript/Guide/Inheritance_Revisited this is good writing regarding that
[11:36] mscdex: you could probably simplify it more since it's meant to be run cross-browser
[11:36] sth: A nice error on that page
[11:37] jetienne: mscdex: ok
[11:37] jetienne: guybrush: ok will read
[11:38] guybrush: and of course THE node-howto-page http://howto.no.de/object-graphs-3 :D
[11:38] guybrush: note the awesome domain :)
[11:38] pastak has joined the channel
[11:39] Evet: is there a JIT module for nodejs?
[11:41] mraleph: Evet: what do you mean?
[11:41] squeeks_: just in time for... what?
[11:41] mscdex: supper
[11:41] q_no has joined the channel
[11:41] Evet: mraleph: Just-in-time compilation
[11:41] mraleph: Evet: for what?
[11:41] mraleph: what language I mean.
[11:42] mraleph: JavaScript is already JITed by V8
[11:42] Evet: oh really?
[11:42] mraleph: really.
[11:42] mraleph: surprise.
[11:42] mape: double really
[11:42] mape: That is the nice part
[11:42] Evet: i wish v8 is c
[11:42] mape: V8 improves, node gets better
[11:43] squeeks_: DOUBLE REALLY? WHAT DOES IT MEAN?
[11:43] mraleph: I wish I could fly :-)
[11:43] mraleph: Evet: why does it matter for you whether V8 is C or C++?
[11:43] piscisaureus: I wish my processor had polymorphic registers
[11:44] mscdex: i wish my processor had more cowbell
[11:45] Evet: mraleph: i dont know anything about c++
[11:45] squeeks_: mscdex: plural son. you need more cowbells.
[11:45] mscdex: no, it's definitely non-plural :)
[11:46] jetienne: v8: var foo = 42; function foo(){}; console.log(foo)
[11:46] mraleph: Evet: if you know C reading/writing C++ is not a big problem.
[11:46] v8bot: jetienne: 42
[11:46] eb4890 has joined the channel
[11:46] Nomon has joined the channel
[11:46] jetienne: anybody to explain why it display 42 and not [Function: foo] ?
[11:46] jetienne: ACTION is on a cruisade to get js today! :)
[11:47] squeeks_: you know having two things with the same name anywhere is a bad idea yo.
[11:47] Evet: mraleph: im at the beginning stage of c
[11:47] mraleph: jetienne: I guest ECMA-262 5th can explain that. Function declarations are hoisted very high, to the very beginning.
[11:48] jetienne: mraleph: oh so the order is changed... ok 
[11:48] jetienne: mraleph: btw it display function on ff4
[11:48] jetienne: mraleph: thanks
[11:50] daleharvey has joined the channel
[11:50] johnnywengluu has joined the channel
[11:51] framlin: jetienne: if I need "multiple inheritance" I use delegation
[11:51] kurokikaze has joined the channel
[11:52] kurokikaze: hi2all
[11:52] lukus has joined the channel
[11:52] framlin: so I delegate calls to the "second parent" to second_parent.prototype.fun.apply(this.arguments);
[11:52] d0k has joined the channel
[11:52] framlin: something like that
[11:53] jetienne: framlin: you need to do this apply() for all inherited functions, correct ?
[11:53] framlin: I do not need object-inheritanc-framework-stuff, but do all my own ....
[11:54] jetienne: no dependancy is good in my book
[11:54] kurokikaze: anyone knows if cross-compiled node binaries from i686 will work on x86_64?
[11:54] fermion has joined the channel
[11:54] kurokikaze: or should I compile on x86_64?
[11:54] jetienne: kurokikaze: if you install the proper 32b libs with it
[11:54] framlin: no, I do need this only for "the other" parents, that means all "parents" that are not part of my prototype
[11:54] framlin: because I can have only *one* prototype
[11:55] kurokikaze: jetienne: lsb_core?
[11:55] ivanfi has joined the channel
[11:55] framlin: but I try to avoid mutliple inheritance where ever I can
[11:55] jetienne: framlin: i think i need "mixin" like pushing features in a class
[11:56] kurokikaze: damn, I'll just recompile on 64
[11:56] jetienne: kurokikaze: i dunno the details as i avoid 64bit, i just knew firefox did it for flash for a while. so itis possible
[11:56] chiel_ has joined the channel
[11:56] jetienne: like the event emitter in node
[11:57] madewulf has joined the channel
[11:57] jpstrikesback has joined the channel
[11:57] framlin: before I wrote Fat-Clients with JavaScript, I wrote Java-Apps and there is no multi-inheritance, too. So you do not need it for most use cases
[11:58] guybrush: you can write apps without any oop at all :p
[11:58] guybrush: pretty much everything
[11:58] framlin: just "instanciate" some helper-"classes", to delegate to them
[11:59] framlin: guybrush: thats true, but OO has *some* good sides ;)
[11:59] jetienne: framlin: oh ok. i understand you now. i think :)
[11:59] SamuraiJack has joined the channel
[11:59] guybrush: the main benefit is reuseable code
[11:59] jetienne: framlin: based on the fact eventemitter and all got only a very limited set of functions, to delegate them is no trouble
[11:59] makuchaku has joined the channel
[12:00] jetienne: going back to code for real now :)
[12:00] jetienne: core stuff is fun but doesnt make my game any better
[12:00] framlin: jetienne: and you coud do something like that foo.prototype.bla = bar.prototype.blub;
[12:00] guybrush: procrastination ftw
[12:01] framlin: but I think it could be dificult to maintain after some years ....
[12:01] mbrochh]2 has joined the channel
[12:02] framlin: jetienne: yes real-code makes the real-money ;)
[12:02] github_ has joined the channel
[12:03] floby has joined the channel
[12:03] arpegius has joined the channel
[12:05] p0ns has joined the channel
[12:06] framlin: is there anybody that has experiences with building enterprise-critical fat-clients with JavaScript?
[12:08] sivy_ has joined the channel
[12:08] Murugaratham has joined the channel
[12:10] q_no has joined the channel
[12:11] framlin: jetienne: last Example: "multiple inheritance" https://gist.github.com/862090
[12:12] MikhX has joined the channel
[12:12] kurokikaze: damn, 64 is not supported on my machine
[12:13] kurokikaze: anyone here have x86_64-capable vm?
[12:13] jetienne: framlin: let it go, we need mixin :)
[12:13] slloyd has joined the channel
[12:13] floby: I never got the concept of mixins
[12:13] framlin: what is mixin?
[12:13] framlin: I do not know that
[12:13] jetienne: _.extend() does it :)
[12:13] jetienne: jquery.extend() too
[12:14] jetienne: and before it was even in node :)
[12:14] jetienne: but "single inheritance" fix my simple case 
[12:14] mraleph: kurokikaze: why do you want x64 node?
[12:14] github__ has joined the channel
[12:14] kurokikaze: mraleph: to use it on x64 vps
[12:15] eresair has joined the channel
[12:15] kurokikaze: mraleph: vps itself doesn't have enough memory to compile there
[12:15] framlin: what is the result of that "mixin"
[12:15] jetienne: kurokikaze: on ubuntu ?
[12:15] mraleph: oh. evil vps.
[12:15] kurokikaze: jetienne: yep
[12:15] jetienne: kurokikaze: i got it for you :)
[12:15] jetienne: sudo add-apt-repository ppa:jerome-etienne/neoip && sudo apt-get update && sudo apt-get install nodejs <- this should install it on x64
[12:16] kurokikaze: jetienne: great, I will try nwo
[12:16] _npm_ has joined the channel
[12:16] jetienne: framlin: no more time. but super simple you will get it
[12:17] github_: sorry... anyone can help?? the command ./configure does not work
[12:17] jetienne: github_: which os ?
[12:17] github___ has joined the channel
[12:18] floby: jetienne: the wikipedia article in french is 3 lines long. The english one is pretty exhaustive
[12:18] github_: vista 32 bit
[12:18] jetienne: github_: oh; sorry cant help
[12:18] jetienne: floby: ?
[12:18] jetienne: ok ok i will cut irc :) see ya have fun. work to do
[12:19] kurokikaze: that's strange, I have python-software-properties but not add-apt-repository
[12:19] fusspawn: github_ Cygwin?
[12:19] c4milo has joined the channel
[12:19] eee_c has joined the channel
[12:19] github_: sorry... how to clone the Git repository and build node.js
[12:19] floby: jetienne: on mixins
[12:19] eevin has joined the channel
[12:20] floby: jetienne: but I still don't get it
[12:20] fusspawn: github_ theres a ton of tutorials around on google for that, let me find one. I know it worked fine on 7, under cygwin. 
[12:21] dubbe has joined the channel
[12:21] fusspawn: https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-(Windows)
[12:21] kurokikaze: what should I add to /etc/apt/sources.list for ppa:jerome-etienne/neoip to work?
[12:22] dubbe has joined the channel
[12:22] github_: ok.. i will try..
[12:22] github_: thanks
[12:23] tomask has joined the channel
[12:23] tomask has joined the channel
[12:24] fusspawn: np, thats the one that worked for me, also having cygwin around can be handy.
[12:25] github_: I have error in the command ./configure [/usr/bin/env: python: No such file or Direction]
[12:25] fusspawn: install python
[12:26] fusspawn: python.org (i think) 
[12:26] kurokikaze: aargh, it doesn't work
[12:26] squeeks_: better yet, use whatever package management your OS has in place.
[12:26] fusspawn: windows? none.
[12:26] squeeks_: windows? /usr/bin/env?
[12:26] fusspawn: cygwin
[12:27] squeeks_: fair point.
[12:27] squeeks_: (I man I haven't used windows in ~7 years, I forget that kind of stuff)
[12:27] fusspawn: (I just gave him the cygwin install link - I already knew he was windows ;) )
[12:27] chiel has joined the channel
[12:28] chiel has joined the channel
[12:28] guybrush: tortoisegit on windows is actually pretty neat :D
[12:29] fusspawn: never used it, i know tortoisesvn was quite good back in the day, 
[12:29] kurokikaze: arrgh
[12:30] guybrush: well i dont use it either, just wanted to mention
[12:30] kurokikaze: is this even possible to have node on Jaunty x64?
[12:31] framlin: jetienne: I think my last example does some kind of mixin, as I understood the wikipedia well  ....
[12:33] fairwinds has joined the channel
[12:34] kurokikaze: so, anyone else has x64 virtual machine handy? )
[12:34] robarnold has joined the channel
[12:34] framlin: no, x64 only makes problems ;)
[12:37] mscdex: kurokikaze: why wouldn't it be possible?
[12:37] kurokikaze: framlin: indeed
[12:37] kurokikaze: mscdex: node seems to need higher version of libssl
[12:37] github____ has joined the channel
[12:37] mscdex: what version do you have installed?
[12:37] kurokikaze: 0.9.8g-15ubuntu3.6
[12:38] mscdex: eh i would think that ought to be ok
[12:38] kurokikaze: dpkg says node needs 0.9.8k-1
[12:38] mscdex: just build from source
[12:38] kurokikaze: not enough memory to build there
[12:38] kurokikaze: and mmy machine here is 32bit
[12:38] kurokikaze: so I cannot buidl in VM either
[12:38] mscdex: not enough memory?
[12:38] kurokikaze: mscdex: yep, it's VPS
[12:39] mscdex: then cross compile?
[12:39] mscdex: :S
[12:39] kurokikaze: cross compile where? :)
[12:39] kurokikaze: and how?
[12:39] kurokikaze: oh
[12:39] kurokikaze: I can comile x64 on i686?
[12:39] mscdex: create a local ubuntu vm or something
[12:39] kurokikaze: I have local ubuntu VM with jaunty
[12:39] mscdex: kurokikaze: if you have the right cross-compilation stuff installed i guess
[12:40] eventi has joined the channel
[12:40] kurokikaze: i'm not that into compilation so I don't know how it;s done
[12:40] kurokikaze: I have jaunty i686 ubuntu VM
[12:41] kurokikaze: how do I cross-compile? I can install anything that is needed, VM is throwaway anyyway
[12:41] okuryu has joined the channel
[12:43] mscdex: 1 sec
[12:43] hij1nx has joined the channel
[12:47] ivaldi has joined the channel
[12:51] L4rd0: :q
[12:51] squeeks_: silly vim user
[12:55] mdoan has joined the channel
[12:55] altamic has joined the channel
[12:57] kurokikaze: :(
[12:58] fly-away has joined the channel
[12:58] nilyt has joined the channel
[13:00] mscdex: kurokikaze: it should just be a matter of installing g++-multilib and then configuring node for amd64
[13:00] mscdex: then make
[13:01] mbrochh has joined the channel
[13:01] mbrochh has joined the channel
[13:02] fusspawn has joined the channel
[13:03] kurokikaze: mscdex: oookay, I've configured it
[13:03] kurokikaze: let's see how it will build
[13:04] erikcorry has joined the channel
[13:05] aabt has joined the channel
[13:10] eyesUnclouded has joined the channel
[13:14] bentruyman has joined the channel
[13:15] froak has joined the channel
[13:15] arpegius has joined the channel
[13:16] perlmonkey2 has joined the channel
[13:19] suckerpunch has joined the channel
[13:19] Qix_ has joined the channel
[13:19] mmattozzi has left the channel
[13:22] ponko has joined the channel
[13:22] xonxo: good morning
[13:23] xonxo: is there a tutorial on running multiple node processes on the same server?
[13:23] hwinkel has joined the channel
[13:24] shiawuentan has joined the channel
[13:24] xonxo: should i spawn child nodes from the parent
[13:24] xonxo: and how do i communicate between them???
[13:25] xonxo: guess its a bit early, will try again in the evening ;)
[13:26] unlink: How would I get the full request URI from the ServerRequest object?
[13:26] astoon has joined the channel
[13:26] unlink: In particular, how do you know what protocol the request was made over (http or https)?
[13:28] masahiroh has joined the channel
[13:29] floby has joined the channel
[13:30] broofa has joined the channel
[13:33] nyholt_ has joined the channel
[13:34] samcday: xonxo: Look into cluster
[13:34] samcday: xonxo: https://github.com/learnboost/cluster
[13:35] samcday: gtg
[13:36] xonxo: samcday: thnx!
[13:37] Gregor has joined the channel
[13:37] unlink: How does one usually achieve a 302 redirect response in node?
[13:37] dnolen has joined the channel
[13:38] Sembiance: unlink: are you using any frameworks? like expressjs?
[13:38] unlink: connect.
[13:40] unlink: res.writeHead(302, url.resolve('http://' + req.headers['host'] + req.url, redirectTo)); is somewhat tedious (and incorrect in the case of HTTPS).
[13:40] unlink: er, {Location: }
[13:43] dnolen has joined the channel
[13:43] mikegerwitz: unlink: If you're using the location header, the full host isn't needed. Location: /path/from/mydomain should work
[13:43] fumanchu182 has joined the channel
[13:43] mikegerwitz: unlink: ..I'm actually second guessing that statement
[13:44] riven` has joined the channel
[13:45] astoon has joined the channel
[13:45] mikegerwitz: unlink: Alright, yeah. I've done that in PHP with success. So unless PHP does additional parsing, you can try that to clean up the code a little, unless you need the host for some other reason
[13:46] eevin has joined the channel
[13:47] kriszyp has joined the channel
[13:48] nonnikcam has joined the channel
[13:48] unlink: mikegerwitz: Absolute URIs are required by RFC 2616
[13:48] riven has joined the channel
[13:49] mikegerwitz: unlink: Ah :) alright
[13:50] Remoun has joined the channel
[13:50] eventi has joined the channel
[13:51] nroot7 has joined the channel
[13:51] nroot7: Is there a package to create json web services in node.js ?
[13:55] malkomalko has joined the channel
[13:56] kurokikaze: build failed :(
[13:56] seivan has joined the channel
[13:57] Stephen has joined the channel
[13:57] kurokikaze: mscdex: something is wrong with cc_ares_strcasecmp.c
[13:58] bradleymeck: nroot7 webservice.js by marak
[13:58] bradleymeck: nodejitsu has a blog post on it a while back
[13:59] muk_mb has joined the channel
[13:59] dyer has joined the channel
[14:00] kurokikaze: okay, what do I need to run i686 binary on x86? :)
[14:00] kurokikaze: * on x86_64?
[14:01] mbrochh]2 has joined the channel
[14:02] fumanchu182 has joined the channel
[14:03] mikegerwitz: kurokikaze: ia32-libs, I believe. To run a 64-bit executable on a 32-bit OS
[14:04] mikegerwitz: oh, excuse me
[14:04] bradleymeck has joined the channel
[14:04] mikegerwitz: reverse that.
[14:04] mikegerwitz: 32-bit executable on 64-bit os :)
[14:04] boaz has joined the channel
[14:04] kurokikaze: holy Emperor, that's 132 MB :)
[14:05] weepy1 has joined the channel
[14:05] kurokikaze: okaay, let's try that
[14:06] kurokikaze: mikegerwitz: Thanks, it worked! :)
[14:07] mikegerwitz: kurokikaze: np :) You're not able to compile node on the system you're running it on?
[14:07] kurokikaze: mikegerwitz: no, not enough memory there
[14:07] kurokikaze: and cross-compiling fails somewhere inside c-ares 
[14:07] jlecker has joined the channel
[14:08] kurokikaze: now for NPM :)
[14:09] marcello3d has joined the channel
[14:09] Qix_ has joined the channel
[14:10] jasong_at_apache has joined the channel
[14:10] cilantro has joined the channel
[14:11] Nietecht has joined the channel
[14:12] memy has joined the channel
[14:12] xandrews has joined the channel
[14:14] zachsmith has joined the channel
[14:14] jetienne has joined the channel
[14:16] drostie has joined the channel
[14:16] noahcampbell has joined the channel
[14:18] Jourkey has joined the channel
[14:18] Qix_ has joined the channel
[14:19] colinclark has joined the channel
[14:22] mikeputnam: ACTION does a little dance
[14:23] mikeputnam: got my Joyent/no.de  coupon/invite
[14:23] FireFly has joined the channel
[14:24] Qix_ has joined the channel
[14:24] mikeputnam: now the struggle becomes ignoring it so i can do work related stuff
[14:24] davidsklar has joined the channel
[14:28] matschaffer has joined the channel
[14:28] jmar777 has joined the channel
[14:30] postwait has joined the channel
[14:30] cilantro has joined the channel
[14:33] nyholt has joined the channel
[14:34] Qix_ has joined the channel
[14:36] tiemonster has joined the channel
[14:39] atiti has joined the channel
[14:41] adambeynon has joined the channel
[14:42] eee_c has joined the channel
[14:42] kriszyp has joined the channel
[14:43] unlink has joined the channel
[14:43] unlink has joined the channel
[14:43] asabil has joined the channel
[14:46] isaacs has joined the channel
[14:48] jonrh has joined the channel
[14:51] Qix_ has joined the channel
[14:52] jmar777 has joined the channel
[14:53] lukegalea: hi everyone.
[14:53] lukegalea: So.. I'm still working away at validating >10k connections on our node servers.
[14:54] lukegalea: I'm hitting some kind of limit, independent of node.
[14:54] lukegalea: Has anyone ever written up what OS settings are required to actually top 10k?
[14:54] squeeks_: what OS?
[14:54] lukegalea: ubuntu. We've covered ulimit, max files and max files per process
[14:54] lukegalea: but we still hit a limit around 1000
[14:54] cyraxx: hmm, mine handled 11k a few weeks ago
[14:54] cyraxx: the only thing i changed was ulimit
[14:55] cyraxx: on linux
[14:55] lukegalea: hmm.. we are changing the ulimit via /etc/security/limits.conf
[14:55] lukegalea: cranked it to >10k.. How high did you find ulimit had to be?
[14:56] lukegalea: Perhaps each connection consumes more than one fd?
[14:56] cyraxx: i changed a setting in a file like that too but it didn't have any effect
[14:56] lukegalea: oh.. 
[14:56] cyraxx: so i just set ulimit -n 16384 and started node in the same shell session
[14:56] lukegalea: so how did you change the ulimit for something started via init.d? Modify the startup script itself to run ulimit -n 100000 right before?
[14:56] lukegalea: hmm.. lemme try that.
[14:57] lukegalea: thanks. brb.
[14:57] cyraxx: well, that will only work if the init script is run as root
[14:57] cyraxx: (which i guess it is)
[14:58] tiemonster: how do you unit test express routes?
[14:58] lukegalea: cyraxx: Sweet. Okay. ulimit in shell works
[14:59] lukegalea: so it's just that it's tricky to get those limits to apply in a startup script.
[14:59] bentruyman has joined the channel
[15:00] cyraxx: since i don't want to run node as root, i set the ulimit as root, then su'd to the user i want to run node as, and started a screen session so i don't have to do all that again to restart node
[15:02] mbrochh has joined the channel
[15:02] mbrochh has joined the channel
[15:03] springmeyer has joined the channel
[15:03] davglass has joined the channel
[15:03] davglass has left the channel
[15:04] dwww has joined the channel
[15:04] Qix_ has joined the channel
[15:05] glitterfang has joined the channel
[15:06] timmywil has joined the channel
[15:08] mackry has joined the channel
[15:09] lukegalea: cyraxx: Sweet!! Thanks. We got c11k running on a virtual machine running on a laptop. Oh brave new world..
[15:11] eb4890 has joined the channel
[15:11] secoif has joined the channel
[15:11] bmavity has joined the channel
[15:11] secoif: hey what are people using as a web framework in node?
[15:12] secoif: mvc
[15:12] vuliev: Express, I believe.
[15:12] secoif: I've checked out the modules on the github page
[15:12] secoif: ranking them by number of followers
[15:12] secoif: yeah express seems to kick the asses
[15:12] RusAlex has joined the channel
[15:13] strmpnk has joined the channel
[15:13] romainhuet has joined the channel
[15:14] secoif: i had in my head express was more for easier server setup
[15:14] secoif: need to play with it I think
[15:17] seivan has joined the channel
[15:18] colinclark has joined the channel
[15:20] vipaca has joined the channel
[15:20] vipaca has joined the channel
[15:21] jasong_at_apac-1 has joined the channel
[15:21] softdrink has joined the channel
[15:21] jpstrikesback has joined the channel
[15:22] kriszyp has joined the channel
[15:23] paulrobinson has joined the channel
[15:23] paulrobinson has left the channel
[15:23] DJazz has joined the channel
[15:24] softdrink: i wish someone would integrate node into blender...
[15:24] kurokikaze: softdrink: what for? )
[15:24] mgodinho has joined the channel
[15:24] mlncn has joined the channel
[15:24] softdrink: additional extensibility beyond python
[15:26] mikl has joined the channel
[15:26] Aikar: kurokikaze: he wants a node.js smoothie
[15:27] bradleymeck has joined the channel
[15:27] romainhuet has joined the channel
[15:27] akahn has joined the channel
[15:27] mgodinho: does someones knows what system is the project using to generate the API documentation?
[15:28] bradleymeck: hand?
[15:28] yhahn has joined the channel
[15:28] tmpvar has joined the channel
[15:28] bradleymeck: ping ryah
[15:28] mikegerwitz: mgodinho: node uses markdown
[15:28] Aikar: mgodinho: html :P
[15:29] montylounge has joined the channel
[15:29] kurokikaze: markdown
[15:29] mikegerwitz: mgodinho: https://github.com/joyent/node/tree/master/doc/api
[15:29] kurokikaze: they was using something called Roan (or similar)
[15:29] kurokikaze: *were
[15:30] mgodinho: Roan, have to check... thx!
[15:30] mgodinho: i'm looking for a way to extract (html) documentation for code comments
[15:31] mgodinho: markdown support would be great
[15:31] mgodinho: *from comde comments
[15:31] sprout has joined the channel
[15:31] mikegerwitz: mgodinho: yuidoc, jsdoc, doxygen, etc?
[15:32] mikegerwitz: mgodinho: no markdown support, though
[15:32] insin: https://github.com/visionmedia/dox
[15:32] mikegerwitz: insin: ah, nice.
[15:33] mgodinho: jsdoc seems ok, but i'd like to use the same system as in the project
[15:33] swistak has joined the channel
[15:34] mgodinho: (probably was a good choice ;)
[15:34] tiemonster: we use jsdoc, and love it
[15:34] insin: jsdoc gets lost by anything more than very simple JS, in my experience, you end up having to jump through hoops
[15:35] insin: ...then find it just can't handle your code :/
[15:35] tiemonster: or manually specify namespace, which is what we did
[15:36] liquidproof has joined the channel
[15:37] ph^ has joined the channel
[15:38] kwik101 has joined the channel
[15:39] Spion__ has joined the channel
[15:39] tracker1 has joined the channel
[15:40] mrlase has joined the channel
[15:41] mrkurt has joined the channel
[15:41] gfrlog has joined the channel
[15:41] gfrlog: is there a better room for questions about mustache?
[15:41] gfrlog: #mustache doesn't seem to exist
[15:41] mrkurt has joined the channel
[15:42] skyler_brungardt has joined the channel
[15:43] insin: hrm, dox does it docco-style, not ideal if the coments are more API than guide
[15:43] nilyt has joined the channel
[15:44] davidwalsh has joined the channel
[15:46] lase has joined the channel
[15:46] briznad has joined the channel
[15:47] ncb000gt has joined the channel
[15:47] mgodinho: (checking dox...)
[15:47] Aikar: has anyone tried devel branch of cloud9 ide know how to get themes working? this default theme is too white :(
[15:49] mgodinho: :insin perhaps a mix of dox and jsdoc, jsdoc for all the libs, dox for the app, sounds ok?
[15:50] Aikar: nvm it just decideed to start working
[15:50] colinclark has joined the channel
[15:51] ceej has joined the channel
[15:51] insin: personally I would just write the docs in RST and use Sphinx - by humans, for humans and all that ;)
[15:52] gfrlog has left the channel
[15:53] trotter has joined the channel
[15:53] wilmoore has joined the channel
[15:54] Jonasbn_ has joined the channel
[15:54] BillyBreen has joined the channel
[15:57] heavysixer has joined the channel
[15:59] kkaefer: url.parse doesn't remove/add the trailing dot from host names; is that intentional?
[15:59] kkaefer: is there a discussion about this?
[16:00] wNoNo has joined the channel
[16:00] EyePulp has joined the channel
[16:01] mbrochh]2 has joined the channel
[16:03] jpstrikesback has joined the channel
[16:07] danielrmz has joined the channel
[16:09] davidwalsh has joined the channel
[16:10] nciagra has joined the channel
[16:10] lukegalea has joined the channel
[16:10] mike5w3c has joined the channel
[16:11] Aikar: \
[16:12] Aikar: err, thats not my page down key
[16:12] sub_pop has joined the channel
[16:12] pcardune has joined the channel
[16:13] hoodoos: guys, anybody would like to talk about possible ways of detecting memory leaks in nodejs applications? :)
[16:14] Jourkey has joined the channel
[16:15] constantx has joined the channel
[16:15] weepy has joined the channel
[16:15] wow has joined the channel
[16:16] L4rd0: hmm, I've got a chicken in the oven, maybe another time.  
[16:16] Aikar: hoodoos: if memory keeps going up under normal working conditions and never goes down... wel....
[16:16] weepy has left the channel
[16:16] hoodoos: Aikar, yes, it works like that mostly
[16:16] L4rd0: Actually, before I go, anyone know when crankshaft is going to be merged into the version of v8 included in nodejs?
[16:16] Aikar: L4rd0: 32bit or 64bit?
[16:17] Aikar: its been turned on by default for 32
[16:17] Aikar: 64bit google just defaulted it on the other day
[16:17] hoodoos: Aikar, but, I just like to get some approaches on solving this kind of issues. Maybe just attach a debugger to process and look inside, take a memory dump and look inside or something liek that. I guess it's not fully related to nodejs memory leak debugging, but just common cpp application memory leak debugging.
[16:18] L4rd0: Aikar: wowza, so it's included in 0.42 already? Sweet!
[16:18] Aikar: hoodoos: well theres 2 ways to 'leak memory'. one by raw C++ allocations, the other by keeping references to objects you really dont need anymore accidently
[16:19] Aikar: L4rd0: i dont know if rys merged in latest v8 recently after they defaulted x64 on
[16:19] hoodoos: Aikar, yes, both can be clearly seen in memory dumps, no?
[16:19] stephank has joined the channel
[16:19] Aikar: hoodoos: seeing memory being allocated and knowing wether its actually needed or not are 2 diff things
[16:21] hoodoos: Aikar, well, for example I have my application running for 2 hours under load then I detach it from load and see what happen to memory usage. I wait long enought and if I don't see it go down, this is the time I'd like to look inside memory to see what kind of data it contains.
[16:21] Aikar: like you could pass a large array to a closure, and add that closure to a callback event thats designed to only be triggered once, but forget to remove that callbacks reference, which in turn keeps the reference to the large array.
[16:22] nivoc has joined the channel
[16:22] Aikar: and then you have a leak
[16:22] Aikar: because your code could TECHNICALLY still call that function and access the data
[16:22] Aikar: but design wise you wont need to
[16:23] Aikar: those kind of leaks are really hard to diagnose w/o just understanding the code
[16:23] eschnou has joined the channel
[16:24] malkomalko has joined the channel
[16:24] wee has joined the channel
[16:24] jdalton has joined the channel
[16:24] Aikar: theres a concept of "ref counting", and an object wont be GC'd until its ref counter is 0. and if you leave a ref to something that you really dont need to use anymore, itll never be 0 and stay in memory
[16:24] hoodoos: yes, I know about it :)
[16:24] hoodoos: but!
[16:25] hoodoos: I can't check all of my 50k lines of code really, my first clue was to look inside allocated memory to see what is allocated
[16:25] jdalton has left the channel
[16:25] hoodoos: If I won't find anything suspicios then yes, my final resort will be examing every block of code for potential leak, but it's the most worst condition I guess
[16:25] Aikar: that could be a good way to figure out what area is doing the allocation to track down where you need to look..... IF... and this is a big IF... the memory is stored in a semi human readable format, which im betting its not ;)
[16:26] sub_pop has joined the channel
[16:26] Aikar: does v8 use null terminated strings?
[16:26] hoodoos: Yes, if some compressing utility leaks some bytes, it will be hard to find
[16:26] asimismo has joined the channel
[16:26] hoodoos: Aikar, no idea really ;)
[16:27] dyer_ has joined the channel
[16:27] mikegerwitz: Aikar: Not in userland, if that's what you're asking
[16:27] mikegerwitz: Aikar: console.log( "foo\0bar" ) outputs "foobar"
[16:28] Aikar: mikegerwitz: i meant how its stored in memory
[16:28] Aikar: hes trying to analyze raw memory dump
[16:28] kurokikaze has joined the channel
[16:29] Aikar: like if you see "KittensGoMoo" thousands of times in the memory dump, good sign to look at that area of the code ;)
[16:29] hoodoos: currently I have a core dump file and dbg trying to decide what to do next :)
[16:29] hoodoos: Aikar, yes, just like that!
[16:29] mscdex: isn't there a ton of profilers for node or something?
[16:29] hoodoos: some xml maybe, I dunno
[16:30] mikegerwitz: I use node-inspector..but haven't dabbled much int he profiler
[16:30] hoodoos: they all just say you have 50 megabytes of string
[16:30] hoodoos: or 5000000 of objects
[16:30] Aikar: oh so you are seeing its tons of strings? then should be a bit easier to find in memory dump
[16:30] hoodoos: hard to tell where it leaks seeing this kind of data
[16:31] Aikar: unless v8 packs strings specially
[16:31] hoodoos: Aikar, not yet, I'm not familiar with dbg yet, trying to figure out how to use it
[16:31] tiemonster: Does it make sense to return 409 Conflict when a user tries to clobber data via API?
[16:31] Aikar: hoodoos: just open file in a hex editor :p
[16:31] kristsk has joined the channel
[16:33] Venom_X has joined the channel
[16:33] blueadept has joined the channel
[16:34] metamind has joined the channel
[16:36] mscdex: hoodoos: fwiw: https://github.com/bnoordhuis/node-profiler
[16:37] RusAlex has joined the channel
[16:37] sprout has joined the channel
[16:37] montylounge_ has joined the channel
[16:38] pHcF has joined the channel
[16:38] hoodoos: mscdex, yes, I looked at it, but it shows that I have 1000 strings eating 50megabytes of memory. I cant detect where it leaks with that kind of data.
[16:38] jakehow has joined the channel
[16:38] dthompson has joined the channel
[16:39] aways|bnc: ACTION By all 
[16:39] pHcF_ has joined the channel
[16:41] hwinkel has joined the channel
[16:42] mscdex: hoodoos: and forcing garbage collection doesn't help?
[16:42] brapse has joined the channel
[16:42] hoodoos: mscdex, seems like not much
[16:42] mscdex: what about valgrind?
[16:44] mscdex: or gdb?
[16:44] hoodoos: currently I'm on gdb, but never ever used it, so it hurts :)
[16:44] mlncn has joined the channel
[16:45] pcardune has joined the channel
[16:45] mscdex: well valgrind is pretty easy to use
[16:46] Evet has joined the channel
[16:46] Gregor: <3 gdb
[16:47] Gregor: valgrind + self-written GC = lols
[16:47] Gregor: (Irrelevant factoid :P )
[16:48] hoodoos: Gregor, btw, any idea why my dump file can be truncated? it says it should be 18 megabytes but really it's only 1 megabyte
[16:48] Ezku\ has joined the channel
[16:48] charlenopires has joined the channel
[16:49] strmpnk has joined the channel
[16:49] Gregor: hoodoos: Not really, sorry.
[16:49] estrathmeyer has joined the channel
[16:50] tim_smart has joined the channel
[16:50] kenbolton has joined the channel
[16:52] Me1000 has joined the channel
[16:54] estrathmeyer has left the channel
[16:54] WarrenGallagher has joined the channel
[16:57] dthompson has joined the channel
[16:57] constantx has joined the channel
[16:58] strmpnk has joined the channel
[17:00] emattias has joined the channel
[17:02] Evet_ has joined the channel
[17:02] mytrile has joined the channel
[17:05] jpstrikesback has joined the channel
[17:08] lessthanzero has joined the channel
[17:08] Evet has joined the channel
[17:10] Me1000 has joined the channel
[17:12] luke` has joined the channel
[17:12] ryanfitz has joined the channel
[17:12] hober has joined the channel
[17:12] luke`_ has joined the channel
[17:15] noahcampbell has joined the channel
[17:16] arthabaska has joined the channel
[17:16] Aikar: ugh, now i remembr why i dont look at php channel much anymore
[17:16] Aikar: first thing i see is "how can i run code without using exec"....
[17:17] eee_c has joined the channel
[17:18] CIA-75: node: 03Tom Hughes 07master * r2c185a9 10/ (cmake/configure.cmake src/platform_linux.cc wscript): Use higher resolution clock for uptime on Linux (if available). - http://bit.ly/grNQLg
[17:18] mlncn has joined the channel
[17:19] aabt has joined the channel
[17:19] yozgrahame has joined the channel
[17:20] liar has joined the channel
[17:21] broofa has joined the channel
[17:21] gukov has joined the channel
[17:22] tjholowaychuk has joined the channel
[17:22] dve has joined the channel
[17:22] fangel has joined the channel
[17:23] aabt has joined the channel
[17:24] Stan____ has joined the channel
[17:24] mytrile has joined the channel
[17:24] matjas has joined the channel
[17:25] noahcampbell has joined the channel
[17:27] onar has joined the channel
[17:28] papyromancer has joined the channel
[17:28] davidascher has joined the channel
[17:31] MrTopf has joined the channel
[17:31] zpao has joined the channel
[17:33] pHcF has joined the channel
[17:33] sprout has joined the channel
[17:35] Me1000 has joined the channel
[17:35] pHcF has joined the channel
[17:36] dve: evenin all
[17:37] tomask has joined the channel
[17:37] tomask has joined the channel
[17:37] lukegalea has joined the channel
[17:37] mgodinho has left the channel
[17:40] heavysixer has joined the channel
[17:40] jiggliemon_ has joined the channel
[17:41] strmpnk_ has joined the channel
[17:42] daniellindsley has joined the channel
[17:42] kriszyp has joined the channel
[17:42] chrislerum has joined the channel
[17:43] arnorhs has joined the channel
[17:43] hornairs has joined the channel
[17:45] heythisisdave has joined the channel
[17:45] aabt has joined the channel
[17:45] dberlinger|away has joined the channel
[17:45] heythisisdave: hey - I'm trying to use jison and did npm install jison, but now if I do jison file.json I get an syntax error near unexpected token `('
[17:45] heythisisdave: trying to do a require('../jison')
[17:46] isaacs: heythisisdave: yeah, sounds like maybe the json file is not valid json
[17:46] dguttman has joined the channel
[17:46] isaacs: heythisisdave: oh, or maybe the bin doesn't have a #! in it
[17:46] heythisisdave: but this is a require error on the library eitself (line 1)
[17:46] isaacs: right
[17:46] isaacs: so, what version of npm?
[17:46] heythisisdave: 0.3.15
[17:46] isaacs: kewl
[17:47] isaacs: yep.  needs a "#!/usr/bin/env node" in that file.
[17:47] heythisisdave: alright I added a #!/usr/local/bin/node andit worked
[17:47] heythisisdave: cool
[17:47] heythisisdave: I'll let the jison guy know
[17:47] sub_pop has joined the channel
[17:47] isaacs: npm owner ls jison
[17:47] possibilities has joined the channel
[17:47] isaacs: the file is lib/jison/cli-wrapper.js
[17:47] isaacs: (fetched via: npm view jison bin)
[17:48] namelessnotion_ has joined the channel
[17:48] phiggins has left the channel
[17:48] heythisisdave: sorry for being daft, the require is a Node CommonJS thing right?
[17:49] bradleymeck: commonjs compatible it is not exactly the same as commonjs's
[17:49] asimismo has joined the channel
[17:49] mnot has joined the channel
[17:51] ryah: odd how commonjs isn't so common :)
[17:51] bradleymeck: shhhh
[17:51] dberlinger has joined the channel
[17:51] isaacs: hehe
[17:51] isaacs: seriously, what IS commonjs?
[17:51] bradleymeck: @ryah can we get all the WrappedContexts etc to have a SetSecurityToken method you think?
[17:52] bradleymeck: isaacs its basically ringojs's documentation
[17:52] chrislerum: trying out the first bit of code, division-by-zero-test.js on vowsjs.org ... first, does it look right that to run it they use the 'node' command and not 'vows'?
[17:52] isaacs: i've been around this whole SSJS thing since way before it was even called "ServerJS", and I have NO idea.
[17:52] isaacs: that should be a pretty damning thing, imo.
[17:52] astropirate has joined the channel
[17:53] isaacs: bradleymeck++
[17:53] v8bot:  isaacs has given a beer to bradleymeck. bradleymeck now has 1 beers.
[17:53] isaacs: are you talking about the vm.runInNewContext etc?
[17:53] bradleymeck: yes, we have some leaking going on with some simple examples
[17:54] bradleymeck: https://gist.github.com/860488
[17:54] heythisisdave: thanks for the help guys
[17:54] isaacs: yeah, it'd be nice to be able to share an object, but have it locked or whatever.
[17:54] dguttman_ has joined the channel
[17:54] Muon has joined the channel
[17:54] DJazz: anyone know why inflate works with node.js and not (always) in chrome? (the inflate code is js)
[17:54] Muon has joined the channel
[17:55] ryah: bradleymeck: maybe - you should do a patch
[17:55] jacobolus has joined the channel
[17:55] bradleymeck: i tried to patch it but somehow it killed nodes startup
[17:57] bmavity: bradleymeck: do you know of any good reading about runInNewContext?
[17:57] ossareh has joined the channel
[17:57] isaacs: been a while since I wrote a good parser: https://github.com/isaacs/npm/commit/9398eadccbf417525811303fe2fac9708a29757e
[17:57] isaacs: very satisfying
[17:57] bradleymeck: bmavity avoid it if you can use child processes, much better
[17:58] Will| has joined the channel
[17:58] bmavity: bradleymeck: i'll take that as a no. ;) lol thanks
[17:58] jacobolus has joined the channel
[17:58] jiveB_ has joined the channel
[17:59] Will|: I don't quite understand what's happened in http module; but it seems the `Client` interface is deprecated for `http.request`?
[17:59] bradleymeck: bmavity you could read up the v8 embedders guide to see what it does, but for the actual function just the docs :/
[17:59] zylo has joined the channel
[17:59] bmavity: bradleymeck: thanks again :) i will explore child processes too
[18:00] Evet: all nodejs tutorials assume you already know craby on rails
[18:00] Will|: is this the case? and if so how can I go about pooling clients?
[18:01] Evet: express framework says its a sinatra like framework for nodejs
[18:01] Evet: what the hell is sinatra
[18:02] hobs: sinatra is a ruby framework
[18:02] eddanger has joined the channel
[18:02] amerine has joined the channel
[18:02] Evet: hobs: what it does?
[18:03] isaacs: Will|: client pooling is done inside node now.
[18:03] hobs: it basically accepts routes and responds to them
[18:03] hobs: on top of rack
[18:03] hobs: iirc
[18:03] hobs: basically like express
[18:03] tjholowaychuk: Evet: a side from rails sinatra is the second most well known ruby framework
[18:03] tjholowaychuk: but less opinionated than rails
[18:03] tjholowaychuk: less features, more flexibility
[18:03] isaacs: Will|: if you just do http.request() and http.get(), it'll be pooled unless you expclicitly disable it by passing in {"agent":<Agent object or false>} in the conf obj
[18:04] DJazz: I would appreciate zlib in node..
[18:04] Will|: ah I see!
[18:04] isaacs: Will|: if you pass in an http.Agent object of your own, it'll use that (so you can explicitly pool using your own logic) or if you pass in false, it'll create a new Agent.
[18:04] Will|: can I define min/max Clients?
[18:04] isaacs: (ie, {agent:false} disables pooling)
[18:05] floby has joined the channel
[18:05] isaacs: Will|: start reading at http://nodejs.org/docs/v0.4.2/api/http.html#http.getAgent 
[18:06] mike5w3c has joined the channel
[18:06] Will|: ah yes
[18:06] Will|: thanks
[18:06] tjholowaychuk: isaacs: I'm always happy when $ npm rm connect express works and not just $ npm rm express connect :D haha
[18:06] tjholowaychuk: doesnt trip on the deps
[18:06] abraham has joined the channel
[18:06] isaacs: tjholowaychuk: you can also: npm rm express -r
[18:07] tjholowaychuk: oOoo
[18:07] isaacs: er, npm rm connect -4
[18:07] isaacs: connect -r
[18:07] dantalizing_ has joined the channel
[18:07] dantalizing_ has joined the channel
[18:07] isaacs: npm rm -r qs
[18:07] isaacs: removes connect, express, everything
[18:07] Astro has joined the channel
[18:07] isaacs: tjholowaychuk: in 1.0, rm -r is gone.  if you just install express, you'll just see express. removing it will remove the deps, too
[18:08] floby: isaacs, while you're here, is there a way to npm rm everything that is not used anymore... older version of libs that are not depended on anymore
[18:08] tjholowaychuk: awesome
[18:08] isaacs: floby: 1.0
[18:08] MikhX has joined the channel
[18:08] isaacs: floby: yes, but not in pre-1.0
[18:08] eee_c has joined the channel
[18:09] hij1nx has joined the channel
[18:09] floby: isaacs: cool, I've got 0.3.15 :D
[18:09] CIA-75: node: 03Ryan Dahl 07v0.4 * r161f7aa 10/ src/node.h : Add missing v8:: namespace prefix - http://bit.ly/f0VH9B
[18:09] eddanger_ has joined the channel
[18:09] ikarosdaedalos has joined the channel
[18:10] stephenlb has joined the channel
[18:11] aho has joined the channel
[18:11] sigue has joined the channel
[18:11] Evet: tjholowaychuk: okay, ive heard MVC paradigm is something cool. i have installed socket.io connect express hiredis redis cluster and jade
[18:11] perezd has joined the channel
[18:11] Evet: is there any missing module to build web apps in ruby-like manner?
[18:12] tjholowaychuk: Evet: cool man. well, no point trying to emulate ruby, you might as well just use ruby :p but check out all those tools one at a time and see what you like
[18:12] floby: Evet: you need something to get node to run slower
[18:12] Evet: tjholowaychuk: i dont even know anything about ruby syntax
[18:12] tjholowaychuk: well you dont need to because this is not ruby :p
[18:13] Evet: floby: its slow enough
[18:14] Evet: and, do you use nginx front of nodejs?
[18:14] lukegalea: Evet: I find no need for it.
[18:14] lukegalea: just use cluster or something like that.
[18:14] floby: Evet: a lot of production code runs behind nginx which handles static files requests. But nginx is very bad at long polling connections. So if you need long-polling you'll need to get around that
[18:15] lukegalea: I feel that if you are that worried about static file serving speed, use a CDN.
[18:15] Evet: floby: and nginx doesnt support keepalive for reverse proxying
[18:15] Evet: lukegalea: yeah im using a cdn
[18:15] onar has joined the channel
[18:15] xer0x has joined the channel
[18:15] lukegalea: then the difference in speed between nginx and express's static provider isn't going to be an issue
[18:16] lukegalea: since only the CDN ever hits your app for static files
[18:16] floby: lukegalea: good point
[18:17] hornairs has joined the channel
[18:18] Evet: since im familiar with nginx, if you want to use nginx front of nodejs, you should use yaowebin's tcp proxy module
[18:18] Evet: or haproxy
[18:19] sivy has joined the channel
[18:19] xer0x: what about putting a varnish proxy in front of instead of nginx?
[18:19] dguttman has joined the channel
[18:20] dguttman has joined the channel
[18:20] Evet: xer0x: what is varnish?
[18:20] kawaz_work has joined the channel
[18:20] xer0x: evet: it's a caching reverse proxy --> http://www.varnish-cache.org/
[18:21] msch has joined the channel
[18:22] Evet: xer0x: why would you waste your memory when you can handle 30k req/sec with nodejs
[18:23] kiddphunk has joined the channel
[18:23] xer0x: evet: it'd be useful if you didn't want to use a CDN 
[18:23] xer0x: evet: for your images and static junk
[18:23] xer0x: evet: yeah, it seems like it would more useful for slower backends    (ie, not as useful for node)
[18:24] mikegerwitz: Evet: If your disk can support that much I/O
[18:24] Evet: mikegerwitz: no
[18:24] mikegerwitz: Evet: (that's when varnish would be useful)
[18:24] Evet: varnish seems like output caching
[18:24] mikegerwitz: oh, my bad.
[18:25] xer0x: yep, output caching
[18:26] Evet: china's taobao.com using nginx + tokyo cabinet for static files
[18:27] Evet: and, yeah. output caching in memory will increase performance to 90k req/sec
[18:28] patcito has joined the channel
[18:30] gakusei has joined the channel
[18:30] MrNibblesFreenod: hey guys
[18:30] MrNibblesFreenod: just finished this project: http://www.motorstorm.com/webapocalypse
[18:30] MrNibblesFreenod: just finished this project: http://www.motorstorm.com/webapocalypse
[18:30] MrNibblesFreenod: whoops
[18:30] MrNibblesFreenod: wrong shortcut there...
[18:31] MrNibbles: thats better :)
[18:31] gakusei: I cant find http.createClient in the 0.4.2 api docu, is it deprecated?
[18:31] mjr_ has joined the channel
[18:32] kriszyp has joined the channel
[18:32] sveimac has joined the channel
[18:32] gakusei: hmm
[18:33] ryah: gakusei: yes
[18:34] gakusei: I assume I should use http.request instead? I am getting "Error: ECONNREFUSED," when testing the httpserver in nodeunit
[18:34] mikegerwitz: gakusei: Are you giving the server enough time to listen? listen() has a callback
[18:35] gakusei: I tried to use process.nexttick for that purpose
[18:35] Evet has joined the channel
[18:35] mikegerwitz: gakusei: nextTick() is pretty fast :) Probably doesn't give it enough time
[18:36] gakusei: mikegerwith: I will try listen(), thanks
[18:36] hoodoos: setTimeout is better here I guess
[18:36] malkomal_ has joined the channel
[18:36] hoodoos: nextTick is instant on empty event loop i guess :)
[18:36] ryah: the listen callback is beter here.
[18:37] hoodoos: for sure :)
[18:37] hoodoos: ryah, execuse me, is there any best practices on leak detecting of nodejs apps?
[18:37] gakusei: all right, thanks guys... 
[18:38] sechrist has joined the channel
[18:39] V1 has joined the channel
[18:39] mjr_: hoodoos: in theory you could use node-inspector and V8's heap profiler
[18:39] mjr_: I've never gotten it to work though.
[18:39] gakusei has left the channel
[18:39] mjr_: But you totally should!
[18:39] sechrist: that thing
[18:39] sechrist: apparently v8's debugging stuff needs some love
[18:39] sechrist: because it truncates json arrays
[18:39] hoodoos: it's working perfectly fine actually, but it doesn't give details I need
[18:39] sechrist: and breaks stuff
[18:39] sechrist: if the heap is large
[18:40] hoodoos: sechrist, ehm
[18:40] mjr_: that sucks
[18:40] hoodoos: sechrist, how you managed to get contents of heap?
[18:40] papyromancer has joined the channel
[18:40] mjr_: I was planning on depending on that if I ran into trouble.
[18:40] sechrist: hoodoos: I hacked v8 to not truncate
[18:40] mjr_: whaa?
[18:40] mjr_: Did you send the patch upstream?
[18:40] sechrist: granted performance is not good if you shuffle around huge JSON arrays that are a few megs each
[18:41] fr0stbyte has joined the channel
[18:41] sechrist: nah because it didn't work quite as intended
[18:41] sechrist: it got me through my bug though
[18:41] hoodoos: sechrist, can you tell me a little about the whole process. I have a v8-profiler working, but heap (in chrome browser) doesn't show anything but String Count: XXXX Mem: XXXXX. 
[18:41] sechrist: hmm
[18:41] sechrist: have you tried with a known small heap?
[18:41] sechrist: just so you don't hit the truncate thing
[18:42] sechrist: if you can't get it working with a really small demo/hello world
[18:42] sechrist: then you have another problem
[18:43] Evet_ has joined the channel
[18:43] mjr_ has joined the channel
[18:44] sechrist: hoodoos: what node?
[18:44] hoodoos: sechrist, all I have is that kind of data http://gyazo.com/6a3021f55c4e7173314d7ebd207713a0.png
[18:44] hoodoos: 0.4.2
[18:44] sechrist: hmm
[18:45] sechrist: oh wait a second
[18:45] saikat has joined the channel
[18:45] Evet has joined the channel
[18:46] hoodoos: sechrist, m? I would almost sell something valuable to get inside that String and Object :)
[18:46] sechrist: what about going back to node 3 unstable?
[18:47] sechrist: it's likely something like that
[18:47] hoodoos: ehm, why would it be different?
[18:47] jpstrikesback has joined the channel
[18:47] sechrist: there may be some api change or something behind the scenes
[18:48] harth has joined the channel
[18:48] tjholowaychuk: ryah: do you think it is possible that "listening" is tripping up on ubuntu? https://github.com/learnboost/cluster/issues#issue/47
[18:48] tjholowaychuk: I cant reproduce this on osx
[18:48] Plouj has joined the channel
[18:48] Plouj: hey people
[18:48] Plouj: are there libs for parsing cli arguments in node?
[18:48] sechrist: several
[18:49] Plouj: what's the simplest to use?
[18:49] tiemonster: tjholowaychuk: low ports require sudo
[18:49] tjholowaychuk: Plouj: I just do this https://github.com/LearnBoost/stylus/blob/master/bin/stylus#L91-133
[18:49] wink_: hoodoos: what other data are you trying to get?  are you using the heapsnapshot stuff?
[18:49] timmywil has joined the channel
[18:49] claudiu__ has joined the channel
[18:49] sechrist: hoodoos: node-inspector is just massaging big json chunks that come out of the v8 debugger
[18:49] Plouj: tjholowaychuk: heh, ok, tanks
[18:50] jpstrikesback1 has joined the channel
[18:50] stonecobra has joined the channel
[18:50] tjholowaychuk: tiemonster: yeah, I assume they know that :s . wouldnt you get EPERM?
[18:50] sechrist: so I'm not sure without diving really far into the rabbit hole
[18:50] ash_ has joined the channel
[18:50] tedsuo has joined the channel
[18:51] tiemonster: tjholowaychuk: EACCES, Permission denied
[18:51] tjholowaychuk: hmm yeah that is not it then
[18:51] tiemonster: I missed the error
[18:51] skyler_brungardt has joined the channel
[18:51] mraleph has joined the channel
[18:51] tiemonster: nm
[18:53] tjholowaychuk: odd thing is that the first one fails, and then subsequent workers are fine
[18:53] tjholowaychuk: which is what made me thing "listening" is premature
[18:54] mjr_: Plouj: I think a lot of people are using "optimist".  It looks pretty good for me, but doesn't quite work for what I need, so I haven't used it.
[18:54] mnot has joined the channel
[18:54] jpstrikesback has joined the channel
[18:55] Plouj: mjr_: ok, cool
[18:55] ash_: is there a way currently to do any sort of multiprocessing already? (like the python multiprocessing library if you're familiar with it) 
[18:56] sechrist: it's called spawn more node processes and do IPC
[18:56] sechrist: I think there's an abstraction for it
[18:56] sechrist: on the modules page
[18:56] tiemonster: tjholowaychuk: I'm probably not familiar enough with Cluster to be of use, but I can find the answer to most Ubuntu questions you have if you think it's OS-specific
[18:56] mlncn has joined the channel
[18:56] bradleymeck: webworkers abstraction / multi-node etc
[18:56] sechrist: yeah web workers
[18:56] tjholowaychuk: tiemonster: cool thanks
[18:57] ryah: tjholowaychuk: i don't know?
[18:57] sechrist: https://github.com/pgriess/node-webworker
[18:57] Plouj: what's a robust way to open a socket.io socket in a web client to the host that served the javascript in the first place? I need to get the right hostname AND port number.
[18:57] ryah: tjholowaychuk: hte 'listening' event?
[18:57] tjholowaychuk: yeah
[18:57] ryah: tjholowaychuk: doubtful...
[18:58] sechrist: ash_: there's several libraries on the modules page that do them in a little bit different ways
[18:58] brianmario has joined the channel
[18:58] V1: Plouj: You could parse out the domain name & port from the src attribute?
[18:58] sechrist: like for a webserver for example, you can just spawn multiple nodes and have them fight over an FD
[18:58] sechrist: so webservers are easy to multiprocess
[18:58] gf3 has joined the channel
[18:58] ash_: multi-node looks interesting, i started trying to figure out if there was a way to create a library like mutliprocessing https://github.com/ashgti/node-multiprocessing but i am running into some issues, so I was just wondering if someone's already solved this problem :P
[18:58] jonrh_ has joined the channel
[18:59] wink_: ashb: what problems?
[18:59] creationix has joined the channel
[18:59] qFox has joined the channel
[19:00] ash_: my approach uses fork, but I am not sure how to figure out if there are any open file handles in the parent process so I can close them in the child process
[19:00] ash_: although honestly, i dont know what happens if you fork and try to use a file handle in both the child and the parent
[19:00] ash_: issues like that 
[19:00] jamescarr has joined the channel
[19:01] tilgovi has joined the channel
[19:02] ash_: multi-node seems to use sockets (tcp) though, which looks like a more sane approach than my forks
[19:02] davida has joined the channel
[19:03] losing has joined the channel
[19:03] creationix has left the channel
[19:04] sechrist: tcp over loopback seems a little pointless
[19:04] sechrist: though I doubt just plain local sockets would have any real benefit except under ridiculous performance
[19:04] gozala has joined the channel
[19:05] floby: I don't think we can open pipes from node
[19:06] sechrist: http://www.engadget.com/2011/03/09/webos-will-on-every-hp-pc-shipping-next-year-says-ceo/
[19:06] sechrist: hmm
[19:06] wink_: yeah, that'll be interesting
[19:06] alek_br_ has joined the channel
[19:06] mikeal has joined the channel
[19:06] wink_: is node already part of the webos core or is that still in the future?
[19:06] floby: although it's just 1 or two bindings to make
[19:07] davidwalsh has joined the channel
[19:07] mikl has joined the channel
[19:08] hoodoos: i'm sorry i was violently interrupted
[19:08] drudge: wink_: it is part of the core in 2.0
[19:08] _neil: "he popular Node.js runtime environment is built into webOS 2.0, which means that you can now develop not just webOS apps but also services in JavaScript."
[19:08] _neil: *The
[19:09] jonrh has joined the channel
[19:09] _neil: thats pretty awesome
[19:10] _neil: are there any good webos phones?
[19:10] sechrist: I hear there's some awesome stuff coming out near summer
[19:10] mlncn has joined the channel
[19:10] _neil:  and dont say iPaq to me
[19:10] hoodoos: wink_, my node application grows in memory for some reason, and I would love to examine heap for instances of some object or some string that might causing it 
[19:10] ash_: floby: i think child_process uses net.Stream as a pipe, but I dont know how they are implemented 
[19:11] troessner has joined the channel
[19:11] hoodoos: sechrist, where do you see node-inspector doing it? I mean huge trancated json objects?
[19:11] floby: ash_: looks like a popen
[19:11] floby: ash_: I'll check the source
[19:11] ikarosdaedalos has left the channel
[19:12] sechrist: hoodoos: this may have changed as my knowledge/use of this is several months old
[19:12] sechrist: but was trying to debug callback loop that was not clearing out references
[19:12] sechrist: and my heap got ridiculously large
[19:12] sechrist: and v8 was truncating json between the debugger and node-inspector's server
[19:12] ash_: floby: oh, i found it, https://github.com/joyent/node/blob/master/src/node_net.cc#L1716 net.pipe is an actual pipe, net.Stream is a socket 
[19:12] sechrist: neat
[19:13] garrensmith has joined the channel
[19:13] muhqu has joined the channel
[19:15] ash_: so, apparently, if you have open file handles in the parent, then fork, the child has the same permission as the parent, so I wouldn't actually have to worry about that if I finish my fork multiprocessing 
[19:15] troessner has joined the channel
[19:16] hoodoos: sechrist, so v8 is generally able to show me contents of js objects?
[19:17] troessner has joined the channel
[19:17] tiemonster: tjholowaychuk: it seems like cluster is not reliably creating and deleting socket files, if that helps narrow down the problem
[19:17] ryah: ash_: all fds are set FD_CLOEXEC
[19:17] langworthy has joined the channel
[19:17] tjholowaychuk: tiemonster: could be
[19:17] mjr_: So I can reproduce this "socket hang up" http client issue on one machine, but not others.  I can reproduce it reliably talking to couchdb as the server, but not to node.
[19:17] garrensmith has joined the channel
[19:18] ash_: hoodoos: require('util').inspect(obj) should give you a pretty good idea what the contents of an object are
[19:18] ryah: mjr_: what's the couch server doing differently than the node server?
[19:18] mjr_: Can't figureit out.  I'm trying with node_g right now
[19:18] tc77 has joined the channel
[19:18] mjr_: I also see it from node servers sometimes, but way less often.
[19:18] hoodoos: ash_, btw, maybe there's some way to list all variables in node?
[19:19] mjr_: ryah: basically I send 10K requests from node to couchdb, and after about 1K, I get that socket hang up thing.  Using keepalive or not.
[19:19] ash_: what do you mean? I was just writing it that was as an example, but you can assign it to a var so you dont have to call require multiple times 
[19:20] ash_: var inspect = require('util').inspect; for instance would let you have inspect as a local function
[19:21] maushu has joined the channel
[19:21] wink_: mjr_: is the socket actually being torn down or does the socket just go idle?
[19:21] hoodoos: ash_, it's perfectly understanable :)
[19:21] mjr_: wink_: hard to say.  It only happens under load, so there's a lot of data to sift through.
[19:22] robhudson: does node have any sort of client disconnect hooks?  e.g. a chat script that shows who is online.  If the client closes their browser I want to remove them from the list.
[19:22] wink_: yeah it would be, i was gonna say, get ethereal or whatever it's called now and see which side is actually sending the FIN if anyone is
[19:22] wink_: but under load makes that a whole lot harder
[19:22] wink_: :p
[19:22] pcardune has joined the channel
[19:23] muhqu has joined the channel
[19:24] bradleymeck: robhudson disconnect hooks wont fire from changing browser pages reliably in any situation, best you are going to get is timeouts/close events on live connections
[19:26] caligula_ has joined the channel
[19:26] arpegius has joined the channel
[19:27] robhudson: ok, thanks bradleymeck
[19:29] timmywil_ has joined the channel
[19:30] WINNING has joined the channel
[19:30] bmavity has joined the channel
[19:32] benreesman has joined the channel
[19:33] davidascher has joined the channel
[19:33] bradleymeck: anyone else have trouble building 0.4.2 on cygfail
[19:34] insin: worked for me, what are you getting?
[19:34] bradleymeck: nm found it, need to update gcc
[19:35] isaacs: sweeeeet
[19:35] losing has joined the channel
[19:35] isaacs: npm 1.0 now supports everything in .npmignore files that can go in a .gitignore file
[19:35] bradleymeck: oooo
[19:35] davidascher has joined the channel
[19:35] isaacs: AND! it'll read .gitignore files if they're there and there's no .npmignore in that folder.
[19:35] bradleymeck: going to go nuts and redo git submodules now?
[19:35] benreesman: has anyone used node-http-proxy?
[19:35] isaacs: haha
[19:36] Jourkey has joined the channel
[19:36] isaacs: bradleymeck: i thought that's what npm WAS
[19:36] isaacs: bradleymeck: what with the dependencies and whatnot
[19:37] bradleymeck: kinda but i dont have my npm submodule update @latest
[19:37] isaacs: hahah
[19:37] WINNING has joined the channel
[19:37] isaacs: bradleymeck: well, that's what `npm install` will do (no args, in a package folder)
[19:37] isaacs: it'll do what `npm bundle` does now, basically, but without as much cruft
[19:37] bradleymeck: mmm k
[19:38] colinclark has joined the channel
[19:39] _numbers has joined the channel
[19:40] timmywil has joined the channel
[19:40] timmywil: .
[19:41] constantx_ has joined the channel
[19:42] sugardave has joined the channel
[19:42] Ori_P has joined the channel
[19:43] aconran has joined the channel
[19:43] _numbers has left the channel
[19:45] jetienne has joined the channel
[19:46] nonnikcam has joined the channel
[19:46] astropirate: Where can I find documentation for Connect's  response and request objects?
[19:46] fairwinds has joined the channel
[19:46] rbranson_ has joined the channel
[19:46] constantx_ has joined the channel
[19:47] tjholowaychuk: astropirate: they are the same as node's
[19:47] siong1987 has joined the channel
[19:47] tjholowaychuk: IncomingMessage / ServerResponse or w/e they are
[19:47] constantx_ has joined the channel
[19:48] demolithion has joined the channel
[19:48] astropirate: tjholowaychuk, ahh allright thanks
[19:49] devinus has joined the channel
[19:49] rfay has joined the channel
[19:49] AAA_awright has joined the channel
[19:50] nickshepherd has joined the channel
[19:50] crodas has joined the channel
[19:51] stonecobra: I am using express 2, and having a url munging issue: https://gist.github.com/862853  If you point me in the right direction, I am willing to try and fix it.  I have a similar issue in express.logger to fix
[19:52] liquidproof has joined the channel
[19:52] jimmyz2 has joined the channel
[19:53] tjholowaychuk: stonecobra: what;s the issue?
[19:53] tjholowaychuk: when you "mount" an app the mount-point is stripped from req.url
[19:53] dve has joined the channel
[19:53] tjholowaychuk: you can still access it via req.originalUrl
[19:53] benreesman has joined the channel
[19:54] stonecobra: right, but in the example, authFunc gives the mount point back
[19:54] WarrenGallagher has left the channel
[19:54] saikat has joined the channel
[19:54] stonecobra: tjholowaychuk: refApp works as you describe, secureApp gains the mount point back
[19:55] tjholowaychuk: hmm yeah it should not, maybe there is a bug with passing several to use()
[19:56] tjholowaychuk: try moving the secureApp to a second use() call
[19:56] tjholowaychuk: if that works then we have a bug for sure
[19:56] possibilities has joined the channel
[19:56] stonecobra: for now, I can push authFunc into the app internally in a single use, no issues there.
[19:56] christophsturm has joined the channel
[19:56] stonecobra: I just want to try and help work on express/connect/etc, trying to join the community
[19:56] timmywil has joined the channel
[19:57] tjholowaychuk: for sure, appretiated
[19:57] mdoan has left the channel
[19:57] tjholowaychuk: appreciated*, but yeah I would try that, let me know if that fails as well
[19:58] nickshepherd has left the channel
[19:58] doki_pen has joined the channel
[19:59] jdrannbauer has joined the channel
[19:59] GriffenJBS has joined the channel
[19:59] stonecobra: it does not fail
[19:59] mdoan has joined the channel
[19:59] tjholowaychuk: interesting
[19:59] tjholowaychuk: i will patch that asap
[20:00] GriffenJBS: bnoordhius, are you around?
[20:00] christophsturm: is there a nice crc32 method for javascript?
[20:00] stonecobra: express.logger() has a similar problem (connect, actually)
[20:00] hornairs has joined the channel
[20:00] GriffenJBS: christophsturm: for JS no, for node, look at the crypt module
[20:01] tjholowaychuk: stonecobra: yeah, logger() should use originalUrl
[20:01] stonecobra: standard logger uses local url var, formatted logger uses req.url, so it is the shortened version
[20:01] tjholowaychuk: I agree
[20:01] christophsturm: GriffenJBS: can the crypt module do crc32? i thought it can only do more complex hashes
[20:01] stonecobra: connect and express do ROCK, though.  I have a non-trivial app running using dustjs, and it is a dream to work in
[20:02] mlncn has joined the channel
[20:02] tjholowaychuk: stonecobra: thanks man. I just g otta run for a min but I will have both those bugs fixed in no time
[20:03] MattJ has joined the channel
[20:04] ghost has joined the channel
[20:05] losing has joined the channel
[20:06] namelessnotion_ has joined the channel
[20:13] muhqu has joined the channel
[20:13] jacobolus has joined the channel
[20:13] piscisaureus has joined the channel
[20:13] DJazz has left the channel
[20:15] piscisaureus: ACTION waves
[20:16] bradleymeck: really need to get cygwin to have gcc 4+ somehow
[20:16] jpstrikesback1 has joined the channel
[20:18] astoon has joined the channel
[20:19] mscdex: bradleymeck: install gcc4
[20:19] Gregor: Maybe Interix! *runs*
[20:19] mscdex: :)
[20:19] bradleymeck: thanks mscdex if it was so simple... gmp then mrfp then gcc4
[20:20] mscdex: bradleymeck: no, it's a cygwin packet
[20:20] mscdex: er package
[20:20] bradleymeck: didnt see it, will try
[20:21] saikat has joined the channel
[20:23] themiddleman_itv has joined the channel
[20:24] madewulf has joined the channel
[20:25] willwhite has joined the channel
[20:28] eyesUnclouded has joined the channel
[20:28] mikeal1 has joined the channel
[20:29] McMAGIC-- has joined the channel
[20:29] msucan has joined the channel
[20:31] mackry has joined the channel
[20:31] warz has joined the channel
[20:31] mikeal has joined the channel
[20:33] mikeal has joined the channel
[20:34] hoodoos: i wonder is there any way to tune v8's GC anyhow? I notice that it's begin to sweep/compact after app is getting around 100 megabytes of memory allocated. Does it depend on total system memory?
[20:34] hoodoos: I have like 700 megabytes of free ram on 4GB total
[20:35] tiemonster: lol
[20:35] tiemonster: Remember when 1GB was enough?
[20:35] hoodoos: :)
[20:35] tiemonster: ah the good old days
[20:35] tiemonster: before java was popular
[20:35] hoodoos: I bought my first 4 megabytes for like 200$ :)
[20:35] tiemonster: and .net
[20:35] tiemonster: I have never had that much RAM in one desktop :-(
[20:36] hoodoos: it was a 386DX-40 AMD processor with 4 megabytes of ram, in 92 I guess
[20:36] abraham has joined the channel
[20:36] fusspawn: I wish 4gb was even close to enough, Work has a horribly built app that loads way to much into ram, the plus side. they gave me a box with 24gb in. Its mostly running with about 500mb spare :/
[20:36] matyr has joined the channel
[20:36] hoodoos: oh my god)
[20:36] hoodoos: it's really horrible :)
[20:37] fusspawn: It gets worse with time, It loads the entire db into ram. would be fine if that database wouldnt grow.. They never really thought it through, and wont give me the time to patch it :/
[20:38] fusspawn: gunna have to soon, im out of ram slots.
[20:39] dwww has joined the channel
[20:39] MikhX_ has joined the channel
[20:40] matschaffer1 has joined the channel
[20:41] TomY has joined the channel
[20:41] TomY_ has joined the channel
[20:42] Aikar: tjholowaychuk: hmm i didnt know about that 'mount app', kinda nice feature to work that way.
[20:43] tjholowaychuk: :)
[20:43] tjholowaychuk: it was there previously
[20:43] tjholowaychuk: but
[20:43] tjholowaychuk: it did not work to well, a bunch of the middleware would clobber themselves if used several times
[20:43] TestD has joined the channel
[20:43] TestD: What is the best laptop for coding?
[20:43] brianc: you know what would be handy? If the 'format' function in node/lib/console.js was exported
[20:43] johngl has joined the channel
[20:43] brianc: has there ever been discussion about this? 
[20:44] brianc: TestD: depends on your taste, but macbook air is nice due to fast SSD if you can swing the price
[20:44] kdmurray has joined the channel
[20:45] floby: TestD: I've got a 12" EeePC and I'm fine with node
[20:45] floby: TestD: coding with vim
[20:46] gilesgoatboy has joined the channel
[20:46] TestD: floby: The small screen makes it hard to see code in scope when you have a lot of async nesting :/
[20:46] TestD: ACTION uses vim ;p
[20:46] johngl: The about page says this: "Node will show much better memory efficiency under high-loads than systems which allocate 2mb thread stacks for each connection." Allocating thread stacks in virtual memory doesn't actually use 2mb of memory, so this does not seem like a good argument. What else would be the memory advantage of node.js over threaded systems?
[20:47] floby: TestD: 12" is not that small, I lowered the font size of the system by one point
[20:47] ryah: TestD: if you use more than 80 columsn, you'll go to hell.
[20:47] floby: ryah++
[20:47] v8bot:  floby has given a beer to ryah. ryah now has 1 beers.
[20:48] Horofox has joined the channel
[20:48] kmwallio has joined the channel
[20:48] squeeks_: 1 beer at a time? Is there some way I can give ry a crate or a keg?
[20:49] markwubben has joined the channel
[20:50] floby: TestD: plus, on these EeePC, the keyboard is much like an MacBook one, which is nice for typing
[20:50] floby: non il est sorti en decembre
[20:50] floby: 10 mois
[20:50] davidascher has joined the channel
[20:51] floby: nevermind that
[20:52] tc771 has joined the channel
[20:53] dahankzter has joined the channel
[20:54] tbassetto has joined the channel
[20:54] fusspawn: var keg = 9999999;   for(var ryah=0; ryah < a_keg; ryah++)
[20:55] aho: implied global a_keg is undefined :I
[20:56] fusspawn: Yeah i fail typoed :/
[20:56] brapse has joined the channel
[20:57] kdmurray has joined the channel
[20:59] TestD: ryah: Are you kidding me? I use 260 columns
[21:00] TestD: Especially in node.js
[21:00] pcardune has joined the channel
[21:00] TestD: EeePC are probably the only good PC laptops left
[21:01] dwww has joined the channel
[21:01] fly-away has joined the channel
[21:02] richcollins has joined the channel
[21:03] pedrobelo has joined the channel
[21:04] johngl: Well? Is there any truth to the statement that node is memory efficient?
[21:04] tiemonster: johngl: yes
[21:04] bradleymeck: open up 1000 connections in node just piping data forever and do the same in virtually anything else
[21:05] johngl: tiemonster: Since virtual memory is lazy, how come?
[21:05] tiemonster: especially PHP ;-D
[21:05] tiemonster: johngl: there is significant overhead in opening and closing a thread
[21:05] vnguyen has joined the channel
[21:06] tiemonster: you can use fake threads, or fthreads as I like to call them, and get better results
[21:06] tiemonster: sometimes better than the event loop
[21:06] tiemonster: it's something I'm looking into at the moment
[21:06] tiemonster: but Node is certainly more efficient than the mod_* model
[21:06] johngl: johngl: Fair enough, but that doesn't have anything to do with stack space
[21:06] johngl: oh sorry, talking to myself
[21:06] johngl: tiemonster: ...
[21:07] tiemonster: lol
[21:07] tiemonster: I don't yet know enough about stack allocation to speak to that
[21:07] JohnnyL has joined the channel
[21:08] bradleymeck: its really hard to beat the event loop style for async IO which will boost your efficiency if you arent buffering by a lot
[21:09] matyr has joined the channel
[21:09] msch has joined the channel
[21:10] johngl: bradleymeck: event loop fibers and threads are almost the same in terms of memory usage
[21:10] TestD: Why can't I have 512 column long lines in node.js?
[21:11] bradleymeck: johngl for their raw usage as a construct yes, for getting to situations where you are buffering multiple sources at a time no
[21:12] johngl: bradleymeck: allocating stack space is allocating stack space. It doesn't matter whether they are used in parallell or not
[21:12] bradleymeck: johngl half finishing work on pumps and polling before finishing a pump is waste
[21:12] floby: TestD: because when you get at the end of the line, you don't remember what you were doing
[21:13] stephen_mcd has joined the channel
[21:13] johngl: bradleymeck: What's a pump?
[21:13] bradleymeck: piping one stream into another be it transcoded or not
[21:13] TestD: floby: Does that really happen?
[21:13] dve has joined the channel
[21:13] johngl: johngl: Oh you mean the OS interrupting the thread? or?
[21:13] TestD: Do programmers really forget what they're doing?
[21:13] johngl: bradleymeck:
[21:13] tilgovi has joined the channel
[21:14] Remoun has joined the channel
[21:14] floby: TestD: no because nobody should write lines longer than 80 columns. If you have to, then you're probably doing something wrong
[21:14] DoNaLd`: all: exist some way generate PDF with UTF8 support from node ??
[21:14] gbot2: DoNaLd`: spidermonkey: Error: SyntaxError: missing ; before statement:  exist some way generate PDF with UTF8 support from node ??  ......^ 
[21:15] bradleymeck: johngl any scheduling system, it will happen more often w/ threads (green or not), and you need to manually form the flow of events w/ fibres which can be painful if the system gets super comples
[21:15] TestD: floby: Well, I don't let semicolons stop me
[21:15] floby: TestD: if you have vim 7.3 you can set colorcolumn=80
[21:15] TestD: What does that do?
[21:15] bradleymeck: *complex
[21:15] floby: TestD: color the 80th column in red
[21:15] floby: TestD: :D
[21:15] TestD: :p
[21:15] bradleymeck: donald` there was a simple text pdf writer around somewhere
[21:16] bradleymeck: ah marak did that one pdf.js
[21:16] rpflo has joined the channel
[21:16] rburhum has joined the channel
[21:16] TestD: floby: I get bonuses in lines of code, so maybe I should starting doing that
[21:16] TestD: *based on
[21:16] DoNaLd`: bradleymeck: o know .. but this not support UTF8
[21:16] timmywil has joined the channel
[21:16] floby: TestD: you get cleaner and more readable code
[21:17] johngl: bradleymeck: That's still not stack allocation's fault. You may have to hang on to the stack a bit longer with threads, that's all
[21:17] bradleymeck: johngl which is less memory efficient when you are buffering things in your thread is what i was saying
[21:18] harth has joined the channel
[21:18] chiel has joined the channel
[21:18] bradleymeck: fibres/threads/evented all have their place but they all have downsides
[21:18] devinus: where the hell is development being done?
[21:19] tiemonster: mars
[21:19] johngl: bradleymeck: Yeah, I understand. What doesn't make sense to me was the argument that allocating 2mb of stack space is the problem, as stated on the website
[21:19] ngs has joined the channel
[21:19] tiemonster: johngl: that does *not* refer to green threads
[21:19] johngl: tiemonster: green threads and regular threads are the same in that respect
[21:19] tiemonster: I think that refers to OS threading
[21:20] tiemonster: I thought green threads prevented some of the overhead of OS threads
[21:20] tiemonster: keep in mind that this is far above my head
[21:20] floby: tiemonster: yes, as you have to do in Java and as apache does
[21:20] johngl: tiemonster: it does prevent the overhead of switching threads all the time
[21:21] bradleymeck: either way the saving of the stack will be greater than letting the stack fall off w/ fibres / event loops
[21:21] wadey has joined the channel
[21:21] breccan has joined the channel
[21:21] tiemonster: now there is less fault tolerance with evented, right? it's like a giant stack of cards...
[21:21] johngl: bradleymeck: the stack doesn't always fall off in those things
[21:22] Country has joined the channel
[21:22] bradleymeck: johngl not to 0 always but unrolling does occur in many systems based upon them
[21:23] bradleymeck: either way we are just going to nitpick semantics now but number speak for themselves, id love to see a good benchmark of something easy to program in another paradigm competing w/ node
[21:23] bradleymeck: but off to work :)
[21:24] colinclark has joined the channel
[21:24] johngl: bradleymeck: Some kind of stack is saved in every case, node saves the closure stack, for instance.
[21:24] tiemonster: heh - performant and easy to program almost never go hand-in-hand
[21:24] hornairs has joined the channel
[21:25] bradleymeck: johngl thats not exactly a "stack" in terms of threads/fibres
[21:25] johngl: bradleymeck: yes, that's exactly what it is
[21:25] bradleymeck: no its not, its not allocated memory based upon current function call invocation that is released as functions return
[21:26] bradleymeck: hence not the same
[21:26] incon has joined the channel
[21:26] johngl: bradleymeck: Ok, so it's actually more expensive
[21:26] bradleymeck: no
[21:26] bradleymeck: its different
[21:26] johngl: bradleymeck: it's not different in any relevant way
[21:27] amacleod has joined the channel
[21:27] johngl: it takes up the same amount of space
[21:27] bradleymeck: omfg thats a huge difference by not being associated w/ function return as deallocation
[21:27] floby: johngl: I've been reading through this discussion, and I seem to miss your point
[21:27] johngl: bradleymeck: it's a huge semantic difference yes, but we're talking about memory usage
[21:28] MattJ has joined the channel
[21:28] bradleymeck: johngl, tell me how having essentially a pointer in heap and one on stack memory are the same
[21:28] johngl: floby: My point is that thread stacks are not more expensive than the stack frames saved by node
[21:28] jbpros_ has joined the channel
[21:28] fairwinds has joined the channel
[21:29] floby: johngl: do you have numbers ?
[21:29] floby: johngl: please
[21:29] bradleymeck: anywho they are stored in different areas reloading is not needed to revive a closure compared to a threads context stack
[21:30] tiemonster: ACTION 's brain just exploded
[21:30] bradleymeck: we are getting too in depth as floby is pointing out so imma step back for a min, get something to drink
[21:30] johngl: floby: No, it's more of an academic discussion
[21:30] tiemonster: oh, one of those
[21:30] floby: bradleymeck & johngl: you're arguing over nothing important to this channel, that is my point
[21:31] johngl: floby: Isn't it important to discuss the accuracy of one of the arguments given in favor of node on it's website?
[21:32] jeromegn: is it just me or is that authentication method for socket.io a bit unsecure? http://stackoverflow.com/questions/4753957/socket-io-authentication/4754806#4754806
[21:32] johngl: *its
[21:32] stephenlb: Ryan Dahl, Crockford and Reisig are briefly mentioned in a heroes song: http://www.pubnub.com/blog/internet-heroes-song-crockford-dahl-wall-torvalds-resig-souders
[21:33] eyesUnclouded has joined the channel
[21:33] johngl: floby: I'm rather disappointed over the lack of interest in such key points
[21:33] floby: johngl: it's a landing page, it is supposed to be brief and to the point. The author explains the reasons at the root of his decision do make node evented and provides EXTERNAL (benchmarks) links to keep the introduction short. If you feel that a more accurate description of what threads are you can propose an additionnal page to the documentation in the form of a patch.
[21:34] bradleymeck: jeromegn kinda, but its as secure as a lot of auth solutions ppl use
[21:34] floby: johngl: note that I'm not disregarding your opinions, but the discussion had reach a dead end
[21:34] johngl: floby: I'll do that, but I was hoping for a good discussion to make sure i don't miss anything. Isn't that what IRC is for?
[21:35] kiddphunk has joined the channel
[21:35] admc has joined the channel
[21:35] bradleymeck: either way get us a new benchmark and we can patch stuff to say w/e is supported by evidence
[21:35] jeromegn: bradleymeck: I mean, isn't the connect.sid cookie http-only for that reason? I wouldn't want a malicious script doing a document.cookie and finding out the session id!
[21:35] floby: johngl: discussion is good
[21:36] johngl: bradleymeck: a benchmark doesn't make much sense, since I can't make a threaded version of node to compare
[21:37] V1: jeromegn: the suggest authentication method isn't the most secure.. But it's not something that Socket.io should solve.
[21:37] bradleymeck: johngl you cant benchmark the idea, but you can benchmark the comparable implementations
[21:37] Evet_ has joined the channel
[21:37] johngl: bradleymeck: I don't feel I have to prove the way virtual memory works. It's pretty documented
[21:38] Evet has joined the channel
[21:38] msucan has joined the channel
[21:38] bradleymeck: but you are asking us about it and we have stated our facts
[21:38] mattikus has joined the channel
[21:39] bradleymeck: nginx+php+apc, ror, django, etc if you want to test against web, or just a simple threaded thing in a scripting language if you want a more "raw" bench to compare to node
[21:39] johngl: bradleymeck: What facts? the mention of "2mb stacks" implies that 2mb is allocated for each thread, right? And that's incorrect
[21:39] V1: jeromegn: What users transmit over the established connection is there own responsibility.If you want to authorize you might want to construct a csrf based auth. Adding a secret key to the page, and keeping on in memory on the server. 
[21:40] johngl: bradleymeck: Can you point me to any thread-based server that would do that?
[21:40] floby: V1: that's what I did on a project. Send tokens which are affected timeouts to client code
[21:40] bradleymeck: without looking up things? for 100% certainty, no. But i can say i find it possible.
[21:41] jeromegn: V1: True. I'm just wondering if there's a secure auth method to use with socket.io :) Been using a method that expose the request cookies in the connect event, but it proved to only work with websocket and not the other transports.
[21:41] johngl: bradleymeck: I guess it's possible if it tried to zero out the whole block, for instance. But that's not what any good implementation would do
[21:42] marcello3d has joined the channel
[21:42] jonrh has joined the channel
[21:43] wink_ has joined the channel
[21:43] darrend has joined the channel
[21:43] aphelion has joined the channel
[21:43] bradleymeck: good and bad are irrelevant, im looking up some benchmarks and the memory amounts allocated to threads seems to vary wildly (8mb default linux http://blog.emptycrate.com/node/275, to 512k http://visibletrap.blogspot.com/2010/01/java-thread-stack-size.html, and thousands of others) 
[21:44] wow: anyone installed qwebirc on their mac for development?
[21:44] jeromegn: floby: you think you could share how you did it? :)
[21:44] darrend: ne1 knows whats up with expressjs.com?
[21:44] eschnou has joined the channel
[21:44] johngl: bradleymeck: exaclty my point. The misunderstanding is that an 8mb default means that RAM will be consumed. It doesn't it's just virtual memory.
[21:44] floby: jermegn: I was planning on releasing certain parts. I can gist some code if you want
[21:45] floby: jeromegn: ^^
[21:45] jeromegn: floby: would love that thanks!
[21:45] johngl: It's like saying closure_max = 8mb and saying that means every closure is 8mb
[21:45] tjholowaychuk: darrend: hmmm its a gh-pages thing
[21:45] tjholowaychuk: so
[21:45] jeromegn: also, just found: https://github.com/hanssonlarsson/express-csrf -> looking at it
[21:45] tjholowaychuk: maybe GH is fucked
[21:46] darrend: egad!
[21:47] yozgrahame has joined the channel
[21:47] techwraith has joined the channel
[21:48] mnot has joined the channel
[21:49] techwraith: Anyone here have experience working with formidable?
[21:49] bradleymeck: johngl, im at a loss for how to put this, yes, virtual memory exists, you dont have to have a full amount of memory in ram during use and/or zeroed. that statement is also irrelevant to the point of talking about using up 2mb of memory in a thread. meanwhile i can go and find more and more about the memory consumption of a context switch between threads if you like?
[21:49] techwraith: I'm trying to figure out how to get the content-length of a part in a multi-part form
[21:49] floby: jeromegn: coming up
[21:50] johngl: bradleymeck: Avoiding context switch is great, and can also be achieved with green threads. Can you explain why you think virtual memory is irrelevant to the point of using 2mb of memory per thread?
[21:51] bradleymeck: no
[21:51] johngl: why not?
[21:51] fusspawn: this debate still going, it started ages ago ;o
[21:51] bradleymeck: ^
[21:53] johngl: Yes, those awful debates about important things ...
[21:53] alek_br has joined the channel
[21:53] bradleymeck: not really, i have yet to see something that makes me think that the homepage is wrong
[21:53] unlink: Anyone with further thoughts on sending 302 redirects from node/connect?
[21:54] bradleymeck: seems to work w/ location header here
[21:54] unlink: i.e. a shorthand for res.writeHead(302, {Location: url.resolve('http://' + req.headers['host'] + req.url, redirectTo)}); is somewhat tedious (and incorrect in the case of HTTPS).
[21:54] unlink: s/ is/ which is
[21:54] tjholowaychuk: unlink: express has res.redirect()
[21:54] johngl: bradleymeck: I'm trying to explain it to you, but you are dismissing my, in my opinion relevant point, as being irrelevant. I don't know why say that, so I'd appreciate a sentence of two explaining why so I can make my point clearer
[21:55] jeromegn: floby: appreciate it
[21:55] harth has joined the channel
[21:55] christophsturm has joined the channel
[21:55] jpick has joined the channel
[21:55] GriffenJBS: johngl: have you ever heard "don't fix it if it ain't broke"?
[21:56] johngl: Virtual memory is relevant because it means 2 mb is probably not consumed
[21:56] johngl: GriffenJBS: Fix what?
[21:56] GriffenJBS: exactly, we see nothing broke, your not listing an issue, and there are things to be fixed
[21:57] GriffenJBS: trust me, I appreciate tech talks, but this one seems stalled
[21:57] johngl: GriffenJBS: except an error on the about page?
[21:57] GriffenJBS: what should it say?
[21:58] johngl: Issue: About page is inaccurate about Node's memory efficiency as apposed to threaded systems. The statement about 2mb should be deleted.
[21:58] GriffenJBS: a reasonable default was listed and you seem to want something else
[21:58] bradleymeck: my point is that your argument does not seem to be an argument rather than a declaration that you can do things other ways (be it green threads, etc.) the original question of `is node memory efficient` was answered and an explanation was provided. whether or not there is an alternative solution that may present a more efficient/equally efficient solution has not been seen by myself coding in python/java/c++(with lua) and as suc
[21:58] nym_ has joined the channel
[21:58] nym_: hey
[21:58] GriffenJBS: hello nym_ 
[21:58] nym_: how do you guys normally check if a variable is defined?
[21:58] johngl: GriffenJBS: It's unreasonable. The stack memory will depend on the application, just as in node
[21:59] bradleymeck: And since I got cut off: saving stack may entail saving the whole stack size for a thread.
[21:59] Hello71 has joined the channel
[21:59] Hello71 has joined the channel
[21:59] nym_: i've been doing (typeof(myVar) == typeof(undefined)) but that's kinda long
[21:59] asimismo has joined the channel
[21:59] possibil_ has joined the channel
[21:59] nym_: i figure there's probably a better way to do it
[21:59] GriffenJBS: nym_: depends what you need a var for, typeof(a) == 'undefined' works
[21:59] cognominal has joined the channel
[21:59] bradleymeck: nym_ replace typeof(undefined) with "undefined" and == with ===
[21:59] hober has joined the channel
[21:59] Aria has joined the channel
[22:00] johngl: bradleymeck: I'm not bashing node, I'm pointing out an error
[22:00] nym_: bradleymeck: that's the shortest way to do it?
[22:00] nym_: i mean without defining a isDefined fn
[22:00] unlink: tjholowaychuk: Does express support node 0.4?
[22:00] tjholowaychuk: 2.x does
[22:00] floby: jeromegn: https://gist.github.com/863101
[22:00] bradleymeck: johngl, it may not be an error i have seen threaded systems with locks and saved stacks use up quite a bit of memory
[22:00] jeromegn: floby: awesome, I'll try and make sense of it
[22:00] johngl: bradleymeck: Saving stack probably does not entail saving the maximum stack size. It would only do so in particularly sloppy implementations.
[22:00] richcollins has joined the channel
[22:01] GriffenJBS: nym: could use function (a) { var undef; if (a == undef) throw...
[22:01] johngl: bradleymeck: That's irrelevant, I can probably make a node application with huge closures
[22:01] bradleymeck: johngl or in cases where you are storing things bellow the current stack pointer (can happen in some asm)
[22:01] unlink: ah, but not v0.4.0
[22:02] johngl: bradleymeck: No, that's not a realistic scenario.
[22:02] fairwinds: anyone know how stable jquery templates are for express. Was thinking of using on both client and server
[22:02] bradleymeck: johngl i have coded stuff that does that in assembly classes at university, i have no doubt that it may happen
[22:02] suckerpunch has joined the channel
[22:03] johngl: bradleymeck: Yes, but that means you need that memory. You would need that memory in a node function also
[22:03] Astro has joined the channel
[22:03] oninoshiko has joined the channel
[22:03] bradleymeck: kinda, stack and closures are stored in different ways, but we are circling again
[22:04] bradleymeck: anywho bench it and we can fix it
[22:05] ddollar has joined the channel
[22:05] johngl: bradleymeck: It doesn't matter how they are stored. To summarize my point: even though a thread will allocate more memory for the stack than a funciton in node will, that memory is not actually commited and should thus not be used to approximate actual thread memory usage
[22:06] xla has joined the channel
[22:07] piscisaureus has joined the channel
[22:08] altamic has joined the channel
[22:08] altamic has joined the channel
[22:09] aabt has joined the channel
[22:10] ximo has joined the channel
[22:11] davemo has joined the channel
[22:11] mnot has joined the channel
[22:11] unlink has joined the channel
[22:11] unlink has joined the channel
[22:13] matyr_ has joined the channel
[22:14] piscisaureus has joined the channel
[22:14] polyrhythmic has joined the channel
[22:16] dee123 has joined the channel
[22:16] malkomalko has joined the channel
[22:18] jetienne has joined the channel
[22:19] secoif has joined the channel
[22:20] GriffenJBS: bnoordhius, are you around?
[22:25] jeromegn: floby: so you're storing the session in the token, then you bind the message event to that auth function and unbind it as soon as it's called and the auth succeeded... ensuring that the first message is an authentication... is the 30ms on the token (in your example) the value you use? seems pretty low! but I guess it only needs to live until the user auths
[22:25] Stan____ has left the channel
[22:28] floby: jeromegn: I store the sessionId, which I never used afterwards anyway, so it's not necessary. I bind the wsauth function to the message event and unbind it as soon as auth is successful. the wscontroller thing is specific to my app
[22:28] firedman has joined the channel
[22:28] darrend has left the channel
[22:28] floby: jeromegn: and 30 seconds is pretty low but it was a realtime app so I didn't care much about slow clients
[22:29] jeromegn: floby: so why store the sessionId? I thought the point was to retrieve stuff like the user_id and all :)
[22:29] chiel has joined the channel
[22:30] floby: jeromegn: lemme check :p
[22:30] jeromegn: bits missing I suppose, no biggie
[22:31] mikl has joined the channel
[22:31] jiggliemon has joined the channel
[22:32] floby: jeromegn: oh yes I actually stored the whole session object in that, increibly ugly. you should instead store a userId and then retrieve from your database. My session were in database anyway so it's not more expensive
[22:32] floby: jeromegn: sessions*
[22:32] unlink: tjholowaychuk: http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30
[22:32] jeromegn: floby: yea I think that'll work. thanks a lot!
[22:33] unlink: tjholowaychuk: or am I incorrect in thinking that express doesn't make absolute URIs out of the argument to response.redirect()?
[22:33] floby: jeromegn: no problem. you can reuse the tokens module if you will. i has korean in it so it must be good :p
[22:33] tjholowaychuk: unlink: just sets whatever you give it, I can patch that though
[22:33] jeromegn: floby: yea that's intense
[22:34] techwraith: Any chance Felixge is around?
[22:34] floby: jeromegn: I was playing with my korean keyboard that I just installed
[22:34] unlink: tjholowaychuk: OK. how would you discover whether the request was http vs. https?
[22:34] jeromegn: :)
[22:34] tjholowaychuk: unlink: funny that it works fine without (at least every case i've tried)
[22:34] unlink: tjholowaychuk: yes, most user agents flaunt the spec.
[22:35] unlink: *most popular
[22:35] tjholowaychuk: apparently
[22:36] jeromegn: floby: so as soon as the server crashes, the page needs to be reloaded to get a new token, because the array of tokens is now cleared of the memory
[22:37] floby: jeromegn: yes, but it's easy to store these things in redis or mongodb. although you need to refresh the page anyway because your connection was lost :D
[22:38] floby: ^although^also^
[22:38] jeromegn: floby: so the main difference between this and leaking the connect.sid to the client is that the token expires?
[22:38] davemo: if i'm getting Error: cannot find module type errors, what should i look for?
[22:38] davemo: some node path environment variable?
[22:39] davemo: (i've npm installed the modules in quesiton)
[22:39] isaacs: davemo: add $(npm get root -s) to your NODE_PATH environment var
[22:39] floby: jeromegn: yes and the token is unique to a page. You're not leaking any connect.sid, it's in the browser cookies anyway. so if your cookies are sent over plain HTTP, packets can be sniffed and the sid stolen
[22:39] eee_c has joined the channel
[22:40] davemo: isaacs: i'm on a mac, that should go in ~/.bash_profile, yes?
[22:40] unlink: tjholowaychuk: what is your preferred idiom for signaling failure up the call stack in connect? Do you pass an error object with an HTTP status code? Or simply pass req/res to every callback that could fail?
[22:40] isaacs: davemo: sure, that'll probably work
[22:40] floby: jeromegn: I don't know if socket.io hande secure websockets, but that would be simpler
[22:40] isaacs: davemo: make sure to source it, or start a new terminal, to see the change.
[22:41] sprout has joined the channel
[22:41] davemo: yeah
[22:41] kiddphunk has joined the channel
[22:41] tjholowaychuk: unlink: connect has no notion of specific error types, you can disambiguate with custom constructors etc
[22:41] tjholowaychuk: but
[22:41] tjholowaychuk: yeah
[22:41] tjholowaychuk: the error handler can decide 404 on ENOENT etc
[22:42] rburhum has joined the channel
[22:42] techwraith: tjholowaychuk: were you the guy who wrote Knox?
[22:42] davemo: hmm, that gives me a syntax error isaacs, which version of npm do you have installed?
[22:42] tjholowaychuk: techwraith: yeah
[22:42] davemo: (i have 0.2.11-5)
[22:42] isaacs: davemo: oh, haha, yeah, that's pretty old
[22:43] isaacs: davemo: what version of node do you have?
[22:43] davemo: gotcha, i'll update w/ brew
[22:43] isaacs: nonooooo
[22:43] isaacs: brew rm npm
[22:43] techwraith: tjholowaychuk: Have you ever tried to stream an upload from formidable with it?
[22:43] davemo: ok, removed
[22:43] tjholowaychuk: techwraith: nope
[22:43] isaacs: do it with curl.  (in fact, if you brew update, and then brew install npm, it'll tell you to do this :)
[22:43] davemo: gah
[22:43] davemo: node is 0.2.6
[22:43] davemo: lol
[22:43] Ond has joined the channel
[22:43] possibilities has joined the channel
[22:43] isaacs: ikes
[22:43] davemo: dunno how that happened, i installed it last week...
[22:43] isaacs: i recommend bumping that up to 0.4.x while you're at it.
[22:43] isaacs: but you installed with brew.
[22:43] davemo: ah
[22:44] isaacs: and you probably didnt' `brew update`
[22:44] davemo: yeah i didn't
[22:44] davemo: perfect
[22:44] liquidproof: hey guys
[22:44] isaacs: kewl :)
[22:44] liquidproof: is there a possibility i could mixin functionality to core objects by requiring a module :o
[22:44] isaacs: brew update ; brew install node ; curl http://npmjs.org/install.sh | sh
[22:45] isaacs: davemo: ^
[22:45] liquidproof: say, add a method to String.prototype
[22:45] squeeks_: crazy idea: any suggestions on where to look for a node websockets client? I want node to "tune in" to a websocket address and do stuff with what's received.
[22:45] techwraith: tjholowaychuk: K, thanks, have you worked with formidable much?
[22:45] davemo: ja, installing 0.4.2 now ;)
[22:45] davemo: tx!
[22:45] tjholowaychuk: techwraith: not tons really
[22:45] liquidproof: and it would be available in the requiring context
[22:45] tjholowaychuk: i dont really work on apps
[22:45] isaacs: liquidproof: yes.  you can also urinate on the street.  both are fun, pretty harmless, and likely to incite outrage.
[22:45] davemo: bwaha
[22:46] liquidproof: no one would know 
[22:46] techwraith: tjholowaychuk: Makes sense, :)
[22:46] davemo: brew install node === macbook air fan spinup
[22:46] davemo: :P
[22:46] tjholowaychuk: :D
[22:46] squeeks_: liquidproof: pissing in a phonebox, then?
[22:46] liquidproof: meh
[22:46] isaacs: liquidproof: the similarities are quite striking, in fact.
[22:46] isaacs: ;)
[22:46] isaacs: make sure you make the property enumerable:false
[22:46] liquidproof: fine, fine :D 
[22:47] isaacs: and for the love of all that is holy, don't make it writable:false or define a getter and no setter
[22:47] isaacs: or configurable:false
[22:47] stonecobra: is there an easy way to html pretty print an object?
[22:47] davemo: in console stonecobra ?
[22:48] phiggins has joined the channel
[22:48] davemo: IIRC the json-command package can do that?
[22:48] stonecobra: davemo: looking for express view, but can adapt whatever I can find
[22:48] stonecobra: will check it out, thanks.
[22:48] possibilities has joined the channel
[22:49] hipe: speaking of that kind of thing (pretty printing) when i get exception stacks it will refer to "objects" build from my prototypes and constructors as "Object #<Object>". is there some method i can define to git it another name? toString() is not it
[22:49] floby: hipe: I think it uses the 'name' property of your object.
[22:50] mikegerwitz: hipe: toString() seems to have worked for me.
[22:50] kriszyp has joined the channel
[22:50] tc77 has joined the channel
[22:52] DireKoala has joined the channel
[22:52] zorzar_ has joined the channel
[22:52] mikegerwitz: hipe: You need to define toString() on the prototype
[22:52] kiddphunk has left the channel
[22:52] mikegerwitz: hipe: var Foo = function() {}; Foo.prototype.toString = function() { return 'Foo'; }; var foo = new Foo(); foo.bla();   // TypeError: Object Foo has no method 'bla'
[22:53] floby: hoh haha
[22:53] floby: why nobody name their functions ?
[22:54] floby: hipe: var Foo = function Foo() {}; will do
[22:54] DireKoala has left the channel
[22:54] squeeks_: floby: hear that?
[22:54] squeeks_: that's the sound of a thousand palms, smacking foreheads everywhere.
[22:54] floby: squeeks_: ^^
[22:55] kevwil has joined the channel
[22:55] floby: squeeks_: did I say something stupid ?
[22:55] ezmobius has joined the channel
[22:55] mikegerwitz: floby: I normally return a strnig that isn't a valid funciton name :) but that works  too
[22:57] squeeks_: floby: they are called "anonymous" functions for a reason.
[22:57] floby: mikegerwitz: I name all my functions for debugging purpose and especially constructors so I never had this problem.
[22:57] floby: squeeks_: yeah I know, the problem is that they're ALL called anonymous in stack trace =)
[22:57] mikegerwitz: floby: I have a lot of generated objects/classes so I can't do that..I wish Foo.name = 'Foo'; would work
[22:58] mikegerwitz: floby: Or do you know of another way to set the name? 
[22:58] mikegerwitz: after definition
[22:58] mikegerwitz: prototype doesn't work either
[22:58] floby: mikegerwitz: no, .name is only a getter.
[22:58] davemo: trying to follow some examples from node.js camp, which version of express should I install to avoid random failing syntax errors on a clean project skeleton generated using express . ?
[22:59] hipe: floby: squeeks_: mikegerwitz: checking.  there's something strange i'm doing.  my pattern is  var Foo = exports.Foo = function(){}; Foo.prototype={toString:function(){..}}   i gotta break it apart and find out where i'm goofing up
[22:59] floby: esay
[22:59] mnot has joined the channel
[22:59] floby: easy, with my method it's after the function keyword
[22:59] tjholowaychuk: what's the nicest way to see if a TLS server is used? I can do req.connection.socket.server and deduce from that
[22:59] tjholowaychuk: but that is kinda lame
[22:59] drudge: davemo: 0.4.2
[23:00] mikegerwitz: hipe: That should work. Otherwise use floby's suggestion
[23:00] davemo: drudge: express version 0.4.2 ?
[23:00] drudge: davemo: node 0.4.2
[23:00] floby: hipe: and don't do Foo.prototype = {}, you'll break the prototype chain in more complex cases. do Foo.prototype.toString = function toString(){}
[23:00] davemo: i'm on node 0.4.2, express reports as 2.0.0beta2
[23:01] drudge: davemo: those should work fine together.
[23:01] drudge: express 1.x works on node 0.2.x
[23:01] drudge: 2.x works on 0.4.x
[23:01] jonrh has joined the channel
[23:01] drudge: but express 2.0 changed things a little, so your examples from 1.x won't work out of the box
[23:01] davemo: generated skeleton, NODE_PATH for modules is good now but I get this: TypeError: Object #<Object> has no method 'bodyDecoder'
[23:01] davemo: when i run node app.js
[23:01] drudge: you can read the express migration guide
[23:02] drudge: bodyDecoder changed to bodyParser in 2.0
[23:02] drudge: staticProvider changed to static as well
[23:02] davemo: thx, will check migration guide :P
[23:02] drudge: http://expressjs.com/migrate.html
[23:02] stonecobra: davemo: It is pretty straightforward, I just completed that work on my own app
[23:02] alek_br has joined the channel
[23:03] GriffenJBS: isaacs: I used npm to install a package, problem is require says it's not found
[23:03] davemo: yeah i just generated this from scratch using the express binary tho
[23:03] GriffenJBS: how can I tell if the problem is his package, or npm?
[23:03] sechrist: Has anybody done anything musical in node other than JSON loops?
[23:03] sechrist: that was pretty cool
[23:03] drudge: davemo: interesting, wonder if that was forgotten
[23:03] tjholowaychuk: davemo: if you generated it with express(1) it should work with that version installed
[23:03] floby: hipe: it works in my REPL with Foo.prototype.toString = ...
[23:03] tjholowaychuk: if not it is probably a bug :D
[23:03] davemo: will try and regen
[23:03] unlink: tjholowaychuk: could you make it so I can cp -r lib ~/myproj/node_modules/connect again?
[23:04] davemo: regenerated and it seems to have the updated api functions
[23:04] drudge: davemo: looks right in the repo, https://github.com/visionmedia/express/blob/master/bin/express
[23:04] davemo: i must have generated with a stale version when i swapped packages
[23:04] tjholowaychuk: unlink: I dont like the nesting, you can move the whole repo in there though I have ./index.js
[23:04] davemo: sorry for inducing volumes of panic!
[23:04] davemo: :P
[23:05] davemo: npm install jade and i'm up and runnin' ;)
[23:05] davemo: thx!
[23:05] unlink: tjholowaychuk: it's as simple as module.exports = require('./connect.js');, isn't it?
[23:05] hassox has joined the channel
[23:06] unlink: tjholowaychuk: or what do you mean by nesting?
[23:06] unlink: (what I did was mv connect.js index.js)
[23:06] dylang: When getting an exception in ejs what's the best strategy to figure out which ejs file and if possible line of code is causing the problem?   I'm using express 2.0, node 0.4.
[23:06] jdub has joined the channel
[23:07] tjholowaychuk: unlink: yeah but I have ./index.js and ./lib/connect.js
[23:07] mikeal has joined the channel
[23:07] tjholowaychuk: dylang: hehe, I will add good error reporting some day
[23:07] tjholowaychuk: like jade's
[23:08] unlink: tjholowaychuk: why the root index.js?
[23:09] marcello3d has joined the channel
[23:09] tjholowaychuk: unlink: so you can move the whole repo in instead of just ./lib
[23:09] drudge: sup tjholowaychuk
[23:10] tjholowaychuk: notta
[23:10] unlink: tjholowaychuk: you could change package.json to have main: lib/connect.js, have lib/index.js require ./connect.js, and then you could move the whole repo or just lib
[23:10] marcello3d: oh man. switching to express 2. annoying :D
[23:10] drudge: express 2.0 is very nice, thanks for the pgrade
[23:10] drudge: upgrade*
[23:10] tjholowaychuk: marcello3d: haha its node, should be used to migration by now :p
[23:10] marcello3d: I started using node a few weeks ago
[23:10] marcello3d: so, no
[23:10] rburhum has left the channel
[23:10] tjholowaychuk: ah
[23:10] drudge: it wasn't that bad really
[23:10] marcello3d: naw
[23:10] tjholowaychuk: well, you will enjoy a lot more of it
[23:11] marcello3d: what tripped me up was the gzip thing
[23:11] marcello3d: I tried copying out the old gzip from before, but it doesn't work
[23:11] drudge: it was buggy
[23:11] marcello3d: it worked fine before D:
[23:12] drudge: for some :P
[23:12] tjholowaychuk: the pure js one was probably a lot slower than just transfering the content without gzip haha
[23:12] tjholowaychuk: and id ont want connect to depend on C deps
[23:12] tjholowaychuk: so
[23:12] tjholowaychuk: meh
[23:12] jonrh has joined the channel
[23:12] drudge: should be easy enough to refactor for 2.0 though
[23:12] matyr has joined the channel
[23:12] drudge: if you wanted it
[23:13] tjholowaychuk: ya im sure it will be a third-party module
[23:13] tjholowaychuk: if it's not already
[23:13] timmywil has joined the channel
[23:14] boogyman has joined the channel
[23:15] marcello3d: you should put a link to the migration page here: https://github.com/visionmedia/express
[23:15] marcello3d: and possibly here http://expressjs.com/
[23:16] tjholowaychuk: marcello3d: it's in there, in the guide
[23:16] tjholowaychuk: that whole site needs a redo
[23:16] tjholowaychuk: some day
[23:16] marcello3d: ah
[23:18] drudge: tjholowaychuk: i think the migration link should point to the actual guide
[23:18] drudge: rather than to a block of text with the link to the guide
[23:18] tjholowaychuk: haha
[23:18] tjholowaychuk: yeah
[23:18] tjholowaychuk: probably
[23:19] tjholowaychuk: unlink: pretty big hack, but this will work for https as well https://github.com/visionmedia/express/commit/c92e193916f4ee37a3fc1fbda2ee20b99a2a51a1
[23:19] techwraith: Is there a way to print newlines and spaces as visible characters in node?
[23:19] sechrist: Are there any huge sites using express in production yet?
[23:19] sechrist: Like a korean twitter or something
[23:19] techwraith: sechrist: Storify uses it
[23:19] sechrist: hot
[23:20] drudge: sechrist: http://expressjs.com/applications.html
[23:20] tjholowaychuk: nothing massive I suppose, storify, learnboost, no.de, a bunch of development seed stuff
[23:20] tjholowaychuk: I gotta update that
[23:20] GriffenJBS: bnoordhius, are you around?
[23:20] sechrist: techwraith: did you find anything painful to do because of the continuation passing style? what kind of database are you talking to?
[23:20] sechrist: err that's if you're at storify.. should have asked that
[23:20] techwraith: MongoDB using mongoose
[23:20] tjholowaychuk: sechrist: the french universal pictures site :D
[23:20] tjholowaychuk: haha
[23:20] techwraith: lol, I'm not there anymore
[23:20] sechrist: mongoose.... aigh
[23:21] techwraith: but I helped architect it
[23:21] tjholowaychuk: techwraith: oh you are not? where do you work now?
[23:21] techwraith: I'm at Yammer now :)
[23:21] sechrist: wow errbody is going to yammer
[23:21] sechrist: I just learned mikeal went to yammer too
[23:22] techwraith: And we're hiring if anyone wants to send me their resume ;)
[23:22] sechrist: can the resume be in the form of a node module
[23:22] drudge: what's yammer :D
[23:22] techwraith: Yep, Mikeal joined a couple weks ago
[23:22] tjholowaychuk: sechrist: how about 60 node modules
[23:22] tjholowaychuk: haha
[23:22] sechrist: LOL
[23:22] tjholowaychuk: jk
[23:22] techwraith: Enterprise social networking :)
[23:23] sechrist: it's corporate twitter with a facebook webapp
[23:23] sechrist: imo
[23:23] sechrist: or maybe it's changed since last used it
[23:23] techwraith: sechrist: Sort of, lol
[23:23] techwraith: we've changed a lot in the past few months though
[23:23] sechrist: suspiciously facebook looking
[23:23] hipe: in node debug is there a "step out" like there was in ndb ?
[23:23] techwraith: People know how to use facebook
[23:24] globetrekkie has joined the channel
[23:24] drudge: there are a crapton of jobs on the site
[23:24] sechrist: yeah.. wow
[23:24] techwraith: drudge: yep, we're hiring like crazy
[23:25] techwraith: if you're looking, send a resume over to derickson@yammer-inc.com
[23:25] drudge: oooh iPhone developer, now you're talking
[23:25] sechrist: desktop app needs some love
[23:25] sechrist: or did last time I used it
[23:25] sechrist: I ended up using gabble or something thirdparty
[23:25] techwraith: sechrist: new one is coming out next week
[23:25] sechrist: hot
[23:25] wav1 has joined the channel
[23:25] techwraith: (shhhh)
[23:26] techwraith: lol
[23:26] sechrist: then maybe my coworkers will use it
[23:28] GriffenJBS: how can I halt the a function to wait for an event to return?
[23:28] marcello3d: hipe: I recommend node-inspector
[23:29] marcello3d: it basically lets you use the webkit debugger on node
[23:29] stonecobra: agreed, node-inspector is wicked awesome for node.js debugging
[23:29] techwraith: marcello3d++
[23:29] v8bot:  techwraith has given a beer to marcello3d. marcello3d now has 1 beers.
[23:29] sechrist: it needs looove
[23:29] sechrist: but the problems with it are in the v8 debugger :\
[23:29] GriffenJBS: if I was using fs.readFile, I could use, .readFileSync, what does one do if there is no sync version?
[23:29] sechrist: node-inspector is surprisingly not much code
[23:31] marcello3d: ooh, v8 is back
[23:31] marcello3d: sechrist: if you don't count all of the webkit code it embeds
[23:32] sechrist: yeah
[23:33] piscisaureus has joined the channel
[23:33] piscisaureus: The libev api is difficult to implement
[23:34] mikeal has joined the channel
[23:34] seivan has joined the channel
[23:35] echosystm has joined the channel
[23:37] Croms has joined the channel
[23:37] ezmobius has joined the channel
[23:38] strmpnk has joined the channel
[23:38] doubletap has joined the channel
[23:39] kevwil has joined the channel
[23:40] bartt has joined the channel
[23:42] deepthawtz has joined the channel
[23:42] jashkenas has joined the channel
[23:43] Evet has joined the channel
[23:43] mjr_: Argh, so my semi-reliable reproduction of the "socket hang up" stopped working after my meeting.
[23:44] p0ns has joined the channel
[23:44] jeromegn: floby: is there a need to stringify the json before sending it from either the client or the server with socket.io in your experience?
[23:45] mlncn has joined the channel
[23:45] floby: jeromegn: no socket.io does it if necessary
[23:45] wav1 has joined the channel
[23:49] tfe_ has joined the channel
[23:50] matyr_ has joined the channel
[23:50] lase: is there a module for oauth that is compatible with connect 1.0.3?
[23:51] jaigouk has joined the channel
[23:51] chiel has joined the channel
[23:52] gazumps has joined the channel
[23:52] kristsk has joined the channel
[23:53] lase: wait, nvm that, I realized I made a silly mistake :P
[23:54] matyr has joined the channel
[23:55] l8rs has joined the channel
[23:55] l8rs: heya
[23:55] echosystm: is the node.js in brew ok now? or does it still not work with npm
[23:55] isaacs: echosystm: yeah, it's fine.  brew update,
[23:55] isaacs: echosystm: but brew install npm is removed.
[23:55] echosystm: cool, thanks
[23:55] echosystm: oh
[23:55] isaacs: do the curl trick
[23:55] fisted_ has joined the channel
[23:56] echosystm: ok, no worries
[23:56] isaacs: curl http://npmjs.org/install.sh | sh
[23:56] l8rs: anyone have issues building node.js on cygwin?
[23:56] [[zzz]] has joined the channel
[23:56] l8rs: I always get undefined reference to `__Unwind_SjLj_Register'
[23:57] fairwinds has joined the channel
[23:57] tonymilne has joined the channel
[23:58] Evet: could we talk about successful modules to build nice web applications with redis backend?
[23:59] Qix_ has joined the channel
