[00:00] elliottcable: they’re intended to make commit lists filterable
[00:00] elliottcable: and make changelogs and such generatable from commit lists in a single button.
[00:00] jesusabdullah: This reminds me of when I tried using a to-do list app
[00:00] elliottcable: nahhhh bro, it works great.
[00:00] jesusabdullah: in the end I prefer to have a text file in markdown and copy-paste a unicode check mark
[00:00] mosen: ok time for some hardcore forking action
[00:00] jesusabdullah: even though tdl apps can be great
[00:00] elliottcable: copy-paste lol
[00:00] elliottcable: jesusabdullah › use automatic replacement
[00:00] elliottcable: -/ to check
[00:00] elliottcable: that’s the replacement I use
[00:01] elliottcable: jesusabdullah › https://github.com/elliottcable/Paws.c/blob/Master/.gitlabels
[00:01] elliottcable: it’s basically a way to document the tags that you actually use / care about, so that other people contributing to the project can use the same ones.
[00:01] elliottcable: and, hopefully, GitHub will support them soon.
[00:01] jesusabdullah: See, i don't like auto-replace either
[00:01] elliottcable: been talking to them about it for a while now.
[00:01] jesusabdullah: I've tried all that shit, it drives me nuts
[00:01] jesusabdullah: it's like "saying what I'm thinking"
[00:01] elliottcable: what I look forward to the most is GitHub changelogs with filtering in the URL
[00:02] jesusabdullah: don't finish my sentences computer, who cares if that's exactly what I was gonna say?
[00:02] jesusabdullah: that's how I feel about it ^^
[00:02] CIA-48: libuv: 03Frank DENIS 07 * r4ab1990 10/ (5 files in 4 dirs): unix: add support for OpenBSD - http://git.io/1lpOSw
[00:02] superbignerd has joined the channel
[00:02] jesusabdullah: That said, elliottcable, this looks like it could be a good idea
[00:02] jesusabdullah: I'd still use [tags] though
[00:02] elliottcable: jesusabdullah › Why brackets instead of parens?
[00:02] jesusabdullah: style
[00:03] jesusabdullah: brackets look like tags to me
[00:03] elliottcable: so that’s the only issue you have with it? :D
[00:03] jesusabdullah: no
[00:03] elliottcable: tell me more. I want to improve.
[00:03] jesusabdullah: I just know I wouldn't use it
[00:03] mmalecki: GOT IT!
[00:03] jesusabdullah: Were I to build something like this, I wouldn't want to change my habits at all
[00:03] mmalecki: I mean, vows
[00:03] mmalecki: I know why it fails.
[00:03] elliottcable: https://github.com/joyent/node/compare/v0.5.8...v0.5.9/api
[00:03] mmalecki: and it's my fault, again.
[00:03] elliottcable: jesusabdullah › ↑ imagine that!
[00:04] jesusabdullah: I'd want to [tag][like][this] and have any tools I use be aware of those kinds of tags
[00:04] AvianFlu: mmalecki, win
[00:04] elliottcable: jesusabdullah › to only show commits that affect the API, made since 0.5.8
[00:04] Peniar has joined the channel
[00:04] joshkehn has left the channel
[00:04] MUILTFN has joined the channel
[00:04] elliottcable: jesusabdullah › oh, ew, cruft
[00:04] jesusabdullah: elliottcable: use actual git tags then
[00:04] cognominal_ has joined the channel
[00:04] elliottcable: (this is way) [[prettier][than][this]
[00:04] elliottcable: )=
[00:04] gxdssoft has joined the channel
[00:04] jesusabdullah: Noooo
[00:04] superbignerd has left the channel
[00:05] elliottcable: actually, it’ usually (- api fix) or more like that
[00:05] jesusabdullah: (this is a parenthetical comment) [this:is][atag]
[00:05] elliottcable: naaaah not at the start of a commit
[00:05] mmalecki: AvianFlu: this line: https://github.com/mmalecki/vows/blob/0.6-compatibility/lib/vows/suite.js#L126
[00:05] elliottcable: .gitlabels are only parse if the very first character of the commit is a (
[00:05] jesusabdullah: I can never support rounded parens for tags
[00:05] mmalecki: AvianFlu: notice that in assert-test.js we require assert.
[00:05] mmalecki: and assert is a function.
[00:05] mmalecki: all because of me. shit.
[00:05] elliottcable: okay, what about [this:is atag] instead of multiple brackets?
[00:05] AvianFlu: epic lulz
[00:06] jesusabdullah: That's more acceptable
[00:06] jesusabdullah: I think you should allow for both
[00:06] elliottcable: nah, it’s got to parse very strictly
[00:06] elliottcable: and the goal is to make it really simple to scan them on any prokject
[00:06] Cantillon_ has joined the channel
[00:06] jesusabdullah: well, [this:is a][tag] is pretty strict
[00:06] jesusabdullah: That's what I'd support ^^
[00:06] elliottcable: for example: http://ell.io/T3nK
[00:07] mmalecki: who do I send my disqualification from the office to?
[00:07] elliottcable: jesusabdullah › no, that’s my point, that’s confusable
[00:07] AphelionZ has joined the channel
[00:07] elliottcable: because then you’d have spaces inside [ these]
[00:07] elliottcable: and can’t have brackets inside [these [tags]]
[00:07] elliottcable: I’m happy to branch it out so it parses on either first-character ( or first-character [
[00:07] jesusabdullah: Why would you do that?
[00:07] jesusabdullah: Plus, easy fix:
[00:07] elliottcable: but not make it more complex than that /=
[00:08] mmalecki: and, shit, how do I fix it?
[00:08] jesusabdullah: [this (tags)] or (this [tag])
[00:09] jtrudeau has joined the channel
[00:09] jesusabdullah: but that's all beside the point anyway, because I'd probably never use a .gitlabels-like thing
[00:09] jesusabdullah: knowing me
[00:09] elliottcable: woah, grep is being weird
[00:09] elliottcable: hold on a sec bro
[00:10] jesusabdullah: that said, this actually looks pretty nice elliottcable, and if it's what you like you should go with it
[00:10] elliottcable: glog --grep='(api'
[00:10] elliottcable: how can that possibly work, that’s an unbalanced paren
[00:10] elliottcable: WATFH GIT
[00:10] replore has joined the channel
[00:10] replore_ has joined the channel
[00:10] socketio\test\62 has joined the channel
[00:10] replore has joined the channel
[00:10] replore_ has joined the channel
[00:10] mmalecki: I can use getOwnPropertyNames or whatever
[00:11] jesusabdullah: git log | grep "\[fix\]" is probably as fancy as I'd get :P
[00:11] jesusabdullah: truth be told I'm still not sold on [tags] even
[00:11] elliottcable: lol
[00:11] elliottcable: well I want to figure out why, so I can get wider acceptance for .gitlabels
[00:11] jesusabdullah: but I think [fix] has a comedic effect
[00:11] elliottcable: and then convince GitHub to implement it ಠ_ಠ
[00:12] eee_c has joined the channel
[00:12] mmalecki: did you mail them>
[00:12] jesusabdullah: elliottcable: I do think [] would go a long way in terms of my sense of aesthetic appeal, but aside from that have you tried just marketing it?
[00:12] mmalecki: s/>/?/
[00:12] elliottcable: jesusabdullah › heh, working on it ^‿^
[00:12] jesusabdullah: Making it nice, giving it a website, writing some leet-ass docs
[00:12] elliottcable: most everybody I know uses it on all of their repos
[00:12] elliottcable: oh, website, maybe
[00:12] jesusabdullah: and then, of course, post that shit on haxxor news
[00:12] elliottcable: that takes a lot of time for me, though
[00:12] elliottcable: I don’t use reddit and friends.
[00:13] elliottcable: ahhah!
[00:13] jesusabdullah: MAYBE YOU SHOULD
[00:13] elliottcable: fixed it
[00:13] elliottcable: fatal: cannot combine --reverse with --graph
[00:13] elliottcable: DAMN YOUUUUUU, GIT
[00:13] cronopio has joined the channel
[00:14] elliottcable: there we go.
[00:14] bshumate has joined the channel
[00:14] elliottcable: `glog -E --grep='^\((.* )?api( .*)?\)'`
[00:14] elliottcable: brb writing a bash function to do that for me
[00:14] elliottcable: zsh**
[00:14] elliottcable: http://ell.io/UZhl
[00:15] mmalecki_ has joined the channel
[00:15] zeade1 has joined the channel
[00:16] jsj has joined the channel
[00:16] DennisRasmussen has joined the channel
[00:17] kriszyp has joined the channel
[00:18] Sami_ZzZ has joined the channel
[00:18] jesusabdullah: I don't use zsh because I don't feel like learning a new thing
[00:18] jesusabdullah: basically
[00:18] murilobr has joined the channel
[00:18] jesusabdullah: Anyways: /me &
[00:19] mmalecki_: I've been using it for like, a day
[00:19] mmalecki_: then I just got back to bash
[00:19] mmalecki_: I have no idea why
[00:20] jakehow has joined the channel
[00:21] mmalecki_: also, win: http://vimium.github.com/
[00:21] tbranyen: jesusabdullah: bah zsh was easy to learn
[00:21] tbranyen: install it
[00:21] tbranyen: and boom done
[00:23] elliottcable: ♪ when you sleep,
[00:23] elliottcable: ♪ where do your fingers … go?
[00:23] elliottcable: ♪ what  do your fingers … know?
[00:23] elliottcable: ♪ what do your fingers … show?
[00:23] elliottcable: ACTION hums Cake
[00:23] mmalecki_: I feel sleepy now.
[00:24] SixView has joined the channel
[00:25] EyePulp: Mine play guitar, at a Latin bar.
[00:25] Tobsn has joined the channel
[00:27] jonrohan has joined the channel
[00:30] JakeyChan has joined the channel
[00:30] riven has joined the channel
[00:30] riven has joined the channel
[00:31] d_low_ has joined the channel
[00:31] T0bsn has joined the channel
[00:32] DarkGrey has joined the channel
[00:33] elliottcable: eye	<3
[00:33] elliottcable: oh man, wtf
[00:34] isaacs has joined the channel
[00:35] mmalecki_: totally unrelated: how can I make my returns look like here: http://ethanschoonover.com/solarized/img/screen-javascript-dark.png ?
[00:35] mmalecki_: and by return I mean \n
[00:36] AvianFlu has joined the channel
[00:36] kloeri has joined the channel
[00:37] elliottcable: mmalecki_ › that’s TextMate?
[00:38] elliottcable: mmalecki_ › ah, nah. vim, you’ll want, errrrr, `hl` I think?
[00:38] russfrank: vi
[00:38] russfrank: m
[00:38] elliottcable: ah, it’s `list` and `listchars`
[00:38] elliottcable: russfrank › :help list
[00:38] elliottcable: er, sorry, mmalecki_ ↑
[00:39] elliottcable: also, you like *massive* text O_O
[00:39] vidi has joined the channel
[00:39] mmalecki_: elliottcable: ah, thanks
[00:39] geekn has joined the channel
[00:40] elliottcable: mmalecki_ › here’s what my vim looks like: http://i.ell.io/hCHD
[00:40] mmalecki_: elliottcable: nice!
[00:40] elliottcable: and no, that’s not coffeescript, and yes, that is one file.
[00:40] elliottcable: lol.
[00:41] mmalecki_: wait.
[00:41] mmalecki_: one file?
[00:41] elliottcable: heh, I get that reaction every time.
[00:41] mmalecki_: no split?
[00:41] elliottcable: nope
[00:41] MooGoo: people still use line numbers
[00:41] elliottcable: MooGoo › hm?
[00:41] ctide: i don't even know what's going on here
[00:42] willwhite has joined the channel
[00:42] elliottcable: ctide › lol.
[00:42] mmalecki_: elliottcable: why does it underline vvvvvvvv
[00:42] mmalecki_: ?
[00:42] elliottcable: ctide › it was an old experiment in code-sculpture
[00:42] MooGoo: no one uses line numbers in vim
[00:42] elliottcable: mmalecki_ › mis-spelt, or so it thinks
[00:42] elliottcable: MooGoo › o_O I do.
[00:42] ctide: i use line numbers in vim
[00:42] MooGoo: 123g
[00:42] elliottcable: exactly.
[00:42] elliottcable: I use line numbers so I know *which line to G to*
[00:42] MooGoo: 123gg
[00:42] MooGoo: that is
[00:43] MooGoo: lol
[00:43] MooGoo: I guess
[00:43] elliottcable: I haven’t yet really found an efficient way to move a long way in the file.
[00:43] elliottcable: someday, maybe.
[00:43] elliottcable: I might get around to writing a ctags-pane plugin that allows me to go by ctag number or something, idfk
[00:43] elliottcable: go-tag-2 … meh
[00:43] MooGoo: i just search
[00:44] isaacs has joined the channel
[00:44] MooGoo: or...use the mouse
[00:44] elliottcable: MooGoo › yes, but that hits calls and references and such, too.
[00:44] elliottcable: I haaaaate having to move my hand over to the mouse. massively slow.
[00:44] MooGoo: yeaa but usualy im pretty lazy
[00:44] elliottcable: I generally usually either use <n>G, or 25j 25j 25j 10j 3j
[00:44] elliottcable: or something like that
[00:44] elliottcable: what I REALLY need
[00:45] elliottcable: is an eye-tracking device, and a vim plugin
[00:45] MooGoo: no better way to resize splits
[00:45] elliottcable: single key to go-to-eye-location
[00:45] elliottcable: then I just glance at something and hit a key
[00:45] elliottcable: :D
[00:45] mmalecki_: elliottcable: my setup is here: https://github.com/mmalecki/dotfiles
[00:45] elliottcable: I use ^w•= to resize splits, heh
[00:45] MooGoo: well you should be able to transmit hjkl with ur brain
[00:45] elliottcable: mmalecki_ › github.com/elliottcable/dotfiles
[00:45] elliottcable: MooGoo › too slow.
[00:47] elliottcable: http://stackoverflow.com/badges/26/popular-question?userid=31897
[00:47] elliottcable: ack, wrong window
[00:49] yept has joined the channel
[00:50] langworthy has joined the channel
[00:52] elliottcable: http://emotiv.com/store/sdk/bci/developer-edition-sdk/
[00:52] elliottcable: oh my god
[00:52] elliottcable: be right back, building a vim plugin that lets you PROGRAM WITH YOUR FUCKING MIND.
[00:53] CIA-48: node: 03Ryan Dahl 07 * r33b5f2f 10/ (306 files in 24 dirs): Upgrade V8 to 3.7.0 - http://git.io/NiEvkQ
[00:54] elliottcable: oh, Windows-only.
[00:54] aperiodic has joined the channel
[00:56] aperiodic has joined the channel
[00:56] jetienne_ has joined the channel
[00:56] Spion has joined the channel
[00:57] kriszyp has joined the channel
[00:58] sub_pop has joined the channel
[00:58] raphael has joined the channel
[00:59] raphael: Hi. there. I'm looking for a general purpose utility library like PrototypeJS for node.js. Something that would let me do inheritance and stuff like that. 
[01:00] tokuzfunpi has joined the channel
[01:00] tjholowaychuk: raphael you can "do" inheritance without that :p
[01:01] raphael: tjholowaychuk: that's one example.
[01:01] ryah: raphael: http://documentcloud.github.com/underscore/
[01:02] raphael: ryah: perfect. Thank you.
[01:03] aperiodic has joined the channel
[01:03] max_dev has joined the channel
[01:03] jsurfer has joined the channel
[01:05] aperiodic has joined the channel
[01:05] boltR has joined the channel
[01:09] jzacsh has joined the channel
[01:09] jzacsh has joined the channel
[01:11] slifty_corsair has joined the channel
[01:12] d_low has joined the channel
[01:13] neoesque has joined the channel
[01:15] Guest32984 has joined the channel
[01:16] harthur has joined the channel
[01:17] elliottcable: What is the probability of getting a fix into v0.4.13?
[01:17] elliottcable: what are the exact requirements to get something into the <even>.++ release instead of the <odd>.++ release?
[01:17] kriszyp has joined the channel
[01:17] elliottcable: ryah?
[01:18] bnoordhuis: elliottcable: close to zero, we probably won't be doing 0.4.x releases anymore
[01:18] elliottcable: damn.
[01:18] elliottcable: well, ETA to 0.6 then? :x
[01:18] elliottcable: I *need* a feature to hit a production release soon, a fix I’m about to create a pullrequest for once I finish writing tests.
[01:19] bnoordhuis: likely in the next few weeks, probably november
[01:19] elliottcable: ick
[01:19] elliottcable: well, better than nothing ^‿^
[01:19] elliottcable: bnoordhuis › thanks.
[01:19] bnoordhuis: elliottcable: np
[01:19] saikat has joined the channel
[01:19] AvianFlu has joined the channel
[01:19] Brandon_R has joined the channel
[01:19] Brandon_R: OMG Guys
[01:19] elliottcable: OMG Brandon_R
[01:19] Brandon_R: This is weird
[01:19] elliottcable: Brandon_R is weird
[01:19] Brandon_R: First steve jobs and now dennis ritchie
[01:20] elliottcable: and then Brandon_R
[01:20] elliottcable: … wait, that’s mean
[01:20] Brandon_R: next it might be linus torcalds
[01:20] elliottcable: <3 Brandon_R
[01:20] Brandon_R: lol
[01:20] elliottcable: hm, no purr in here
[01:20] elliottcable: bnoordhuis › can you /invite purr?
[01:20] Brandon_R: did u hear?
[01:20] elliottcable: bnoordhuis › he’ll only listen to invites from ops, ’cause he’s nice like that.
[01:20] elliottcable: Brandon_R › Ritchie? Yah )=
[01:20] elliottcable: it’s really disenheartening. 
[01:21] Brandon_R: yep
[01:21] Brandon_R: node is programmed in c
[01:21] Brandon_R: i mean it uses c
[01:21] elliottcable: I mean, it sounds *silly* on the face of it … but Steve Jobs, and then Ritchie dying … it’s sort of made me realize “Damn, if they can die, I can too!”
[01:21] elliottcable: lol, uh, C++, bro
[01:21] Brandon_R: linuv uses linev which is programmed in c :P
[01:21] elliottcable: C++ ≠ C
[01:21] Brandon_R: libuv
[01:21] elliottcable: oh, is it?
[01:21] a_suenami has joined the channel
[01:21] cafesofie: it's a good thing node.js uses both
[01:21] elliottcable: ryah › I love you so much more now.
[01:22] cafesofie: although it'd be quite a feat to not use C at ll
[01:22] cafesofie: all, even
[01:22] elliottcable: cafesofie › somewhere in the stack, sure; but it’s not written in it itself.
[01:22] elliottcable: ACTION has a pet peeve of conflating ISO C with the other non-C’s.
[01:22] cafesofie: that's not really a binary distinction you can make
[01:22] elliottcable: only one even remotely close to being something like ISO C is probably Objective-C.
[01:22] elliottcable: C#, less so; and then C++, not at all.
[01:22] MooGoo: nodejs is written in x86 assembly for raw power
[01:22] Brandon_R: UNIX is very simple, it just needs a genius to understand its simplicity.
[01:23] elliottcable: I do all of my asynchronous serving applications in raw assembler, because Node is too slow.
[01:23] elliottcable: ACTION giggles
[01:23] Brandon_R: i use pure binary
[01:23] criswell has joined the channel
[01:23] wdperson has joined the channel
[01:23] elliottcable: bnoordhuis › /invite?
[01:23] perezd has joined the channel
[01:25] eee_c1 has joined the channel
[01:25] elliottcable: anybody know why there’s both simple/test-script-context.js and simple/test-script-static-context.js?
[01:25] elliottcable: they seem to test basically exactly the same things.
[01:25] briandh has joined the channel
[01:27] perezd: how does uncaughtException work?
[01:27] Brandon_R: how do i disable irc from telling me who signed in or signed out?
[01:27] elliottcable: Brandon_R › what client?
[01:27] Brandon_R: webchat.freenode.net
[01:27] The_Fly has joined the channel
[01:28] k1ttty has joined the channel
[01:29] elliottcable: a Nuck!
[01:29] CarterL has joined the channel
[01:29] elliottcable: Brandon_R › no idea, then. Get a real client.
[01:29] elliottcable: Brandon_R › on a Mac? `brew install irssi`
[01:29] abraxas has joined the channel
[01:30] MUILTFN has joined the channel
[01:30] mosen has left the channel
[01:31] Nuck: elliottcable: NOU
[01:31] elliottcable: Nuck › exactly
[01:31] Nuck: elliottcable: so how's it going?
[01:31] elliottcable: good, good
[01:31] elliottcable: learned C++, Google’s style rules, v8, and Node’s C++ interfaces
[01:31] jldbasa has joined the channel
[01:31] elliottcable: working on some fixes
[01:32] Nuck: elliottcable: How many people freaked out over your mass bans?
[01:32] matyr has joined the channel
[01:32] rickharrison has joined the channel
[01:32] elliottcable: Nuck › none?
[01:33] elliottcable: I told everone that I still loved them and was just doing it to clean up the atmosphere, I don’t think anyone got offended
[01:33] elliottcable: it succeeded too, because it got Bluebie and IamTash to come back :D
[01:33] Nuck: elliottcable: Haha so that's what it was about. Didn't tell me :P
[01:33] Emmanuel` has joined the channel
[01:33] jamescarr_ has joined the channel
[01:33] elliottcable: I kickbanned all of the idlers (people who hadn’t spoken at least once a month or so)
[01:33] elliottcable: and the troll-y sorts
[01:34] jamescarr_: heh... how the heck can you list the targets in a Makefile?
[01:34] elliottcable: now everybody left is either A) programming-language designer, or B) close personal friend / nice-person
[01:34] Nuck: elliottcable: As in me locks and that guy who trolled harder than me
[01:34] elliottcable: jamescarr_ › grep? :D
[01:34] jamescarr_: :-P
[01:34] elliottcable: Nuck › yeah, that dick, idfk what he was on about
[01:34] jamescarr_: elliottcable, oh, what did I miss? :)
[01:34] Nuck: elliottcable: It was fun to troll him out of the chat haha
[01:34] jamescarr_: I love a good troll
[01:35] elliottcable: jamescarr_ › not in here, in my own channel
[01:35] elliottcable: Nuck’s an ex-member
[01:35] Nuck: elliottcable: He honestly struck me as a fat guy who couldn't get any.
[01:35] JakeyChan has joined the channel
[01:35] jamescarr_: my favorite was this guy who used to troll on several programming forums and followed his trolls up with feature length essays
[01:35] Nuck: Aye
[01:35] elliottcable: Nuck › lol.
[01:35] jamescarr_: http://reocities.com/tablizer/oopbad.htm :)
[01:35] Nuck: And no hard feelings
[01:35] isaacs has joined the channel
[01:35] elliottcable: <3 nuck
[01:35] elliottcable: OH MY GOD IT’S ISAACS
[01:35] elliottcable has left the channel
[01:35] jamescarr_: "Why OOP is a lot like Communism"
[01:35] paulwe has joined the channel
[01:35] Brandon_R: because it is cool?
[01:36] Nuck: elliottcable: you should confine us to a room of trolls haha
[01:36] Nuck: Just gather a collection of trolls
[01:36] Nuck: And have us all trollbattle
[01:36] Nuck: :D
[01:37] Brandon_R: does this channel have plenty of trolls?
[01:37] Brandon_R: or noobs?
[01:37] AvianFlu: noobs are welcome to ask questions here, so there's lots of noobs
[01:37] jomoho has joined the channel
[01:37] AvianFlu: but that part is by design
[01:37] AvianFlu: trolls... yeah, we've got trolls
[01:38] cognominal has joined the channel
[01:38] Sami_ZzZ has joined the channel
[01:38] Brandon_R: who?
[01:38] Brandon_R: His pointer has been cast to void *; his process has terminated with exit code 0 
[01:38] elliottcable has joined the channel
[01:38] JakeyChan has joined the channel
[01:38] icewhite has joined the channel
[01:38] Nuck: I used to troll in here
[01:38] jldbasa has joined the channel
[01:38] Nuck: Not so much anymore
[01:39] Brandon_R: hey guys
[01:39] The_Fly has joined the channel
[01:39] Nuck: I troll around in #defocus now
[01:39] Brandon_R: should we have like a 30 second moment of silence for Dennis Ritchie?
[01:39] Brandon_R: starting now?
[01:40] elliottcable: lol.
[01:40] cnu has joined the channel
[01:40] _th_n_ has joined the channel
[01:40] Nuck: ACTION accidentally farted mid-silence
[01:41] Brandon_R: used to troll? i don't think so lol
[01:41] elliottcable: Brandon_R › if you mean “I don’t think so” regarding the ‘used to’ portion of his sentence,
[01:41] elliottcable: Brandon_R › yes.
[01:41] isaacs has joined the channel
[01:42] elliottcable: SHIT IT’S ISAACS
[01:42] elliottcable has left the channel
[01:42] Nuck: ;3 I dont troll *as* hard
[01:42] jsurfer has joined the channel
[01:42] Nuck: :I wat
[01:44] Draggor has joined the channel
[01:44] elliottcable has joined the channel
[01:44] jamescarr_: You know, I noticed that the node-amqp package is still at 0.1.0
[01:44] jamescarr_: should I assume it is dead???
[01:45] jamescarr_: I get unreliable results with it :(
[01:45] schwab has joined the channel
[01:47] Nuck: elliottcable: Lolwat
[01:47] Nuck: Srsly lolwat
[01:48] elliottcable: shit it’s a Nuck.js
[01:48] elliottcable has left the channel
[01:48] elliottcable has joined the channel
[01:48] elliottcable: ahhah! it works!
[01:48] piscisaureus has joined the channel
[01:49] Nuck: elliottcable: I am confus
[01:49] elliottcable: Nuck › ignore me, I’m nmessing with irssi’s join/part settings
[01:49] Nuck: Very confüs
[01:49] Nuck: elliottcable left the room. ("AIO_ALLDONE") 
[01:50] cognominal_ has joined the channel
[01:50] elliottcable: Nuck › yes?
[01:51] elliottcable: oh, you’re asking about AIO_ALLDONE?
[01:51] Nuck: elliottcable: You just leave randomly when isaacs joins haha
[01:51] elliottcable: Nuck › `man aio`
[01:51] Nuck: elliottcable: I would but I'm on colloquy mobile
[01:51] elliottcable: and secifically `less /usr/include/aio.h`
[01:51] elliottcable: oh
[01:51] elliottcable: heh
[01:52] lightbyte has joined the channel
[01:52] elliottcable: er, wrong pat
[01:52] elliottcable: `less /usr/include/sys/aio.h`
[01:52] elliottcable: lol
[01:52] Brandon_R: :(
[01:52] Brandon_R: http://www.muppetlabs.com/~breadbox/rip-dmr.html
[01:53] cognominal___ has joined the channel
[01:54] elliottcable: that should go in the topic
[01:55] joshthecoder has joined the channel
[01:55] elliottcable: ryah › would you do the honors? http://j.mp/rip-dmr  
[01:56] iivvoo has joined the channel
[01:57] SubaruFre has joined the channel
[01:58] cognominal has joined the channel
[01:58] Brandon_R: what topic
[02:00] SubaruFre has joined the channel
[02:01] elliottcable: Brandon_R › IRC channels have a topic. Use /topic to see the one for this channel.
[02:02] Brandon_R: insufficient args
[02:02] SubaruFre has joined the channel
[02:03] davidbanham has joined the channel
[02:03] yuwang has joined the channel
[02:04] diogogmt has joined the channel
[02:04] lightbyte has joined the channel
[02:07] aconbere has joined the channel
[02:07] scottschecter has joined the channel
[02:13] jamescarr_: if I don't put it in node_modules, do I really have to refer to it relatively?
[02:13] jamescarr_: require('../../models/Lead') feels silly
[02:13] russfrank: no, you can install it globally with -g
[02:14] jamescarr_: it's not a module
[02:14] jamescarr_: it's my app
[02:14] russfrank: oh.. then.. yeah
[02:14] jamescarr_: :(
[02:14] russfrank: what do you expect, you think cjs require will guess where you decided to put your js?
[02:14] jamescarr_: in the past I modified require.paths
[02:14] russfrank: i mean, otherwise, hows it gonna know where it is?
[02:14] jamescarr_: not allowed to touch it anymore :(
[02:15] russfrank: oh, right.. well iunno about that
[02:15] jamescarr_: I suppose I can set NODE_PATH
[02:15] jamescarr_: just not crazy about it
[02:15] russfrank: just include it relatively 
[02:16] russfrank: if it's specific to your project it makes sense that you'd have to do that
[02:16] a_suenam_ has joined the channel
[02:17] saikat has joined the channel
[02:20] m0: Anyone use express resources where the path is deep such as /foo/bar 
[02:20] jsurfer has joined the channel
[02:20] kab3wm has joined the channel
[02:20] davidbanham has joined the channel
[02:21] m0: How do we support paths that nested, the nested path terminology for expressjs resources uses foo.add(bar), but it would become /foo/1/bar/1
[02:21] reid has joined the channel
[02:22] jesusabdullah: elliottcable: I got one for you: commit hashtags
[02:23] jesusabdullah: git commit -m 'I made this thing work again! #fix #goddamnit'
[02:23] Nuck: Haha #winnig
[02:24] Nuck: #winning even
[02:24] elliottcable: jesusabdullah › been there, done that
[02:24] elliottcable: jesusabdullah › but I use those for other things
[02:24] elliottcable: and often humourous ones
[02:24] elliottcable: my .gitlabels aren’t intended to be “dynamic”
[02:24] elliottcable: i.e. you define a small set of them for a project, and then use almost exclusively those particular ones
[02:24] elliottcable: they’re basically intended as ways to filter the commit list.
[02:24] elliottcable: More like folders than hashtags.
[02:24] elliottcable: make sense?
[02:25] jesusabdullah: I was joking of course
[02:25] Nuck: I was just watching how I met your mother, and Barney kept talking in hash tags
[02:25] jesusabdullah: but I almost want to do this now
[02:25] jesusabdullah: just add hashtags to all my commits
[02:25] IrishGringo2: are there cheap node hosting companies out there... just to experiment?
[02:26] jesusabdullah: IrishGringo2: nodejitsu's running a beta right now, you can probably get in on that
[02:26] jesusabdullah: disclaimer: I work for nodejitsu
[02:26] Nuck:  Nodejitsu and no.de
[02:26] Cev: jesusabdullah: giving out beta invites? :P
[02:26] IrishGringo2: i'll check it out
[02:27] IrishGringo2: does it have mongodb installed on it?
[02:27] Nuck: jesusabdullah: I hashtag on Facebook, etc.
[02:27] Nuck: IrishGringo2: Well there's mongohq.com
[02:27] Nuck: Which is prolly easier :P
[02:28] jonrohan has joined the channel
[02:28] jonrohan has joined the channel
[02:28] kurtzhong has joined the channel
[02:31] kriszyp has joined the channel
[02:31] IrishGringo2: jesusabdullah: I just singned up...Irishgringo2
[02:32] jesusabdullah: IrishGringo2: join #nodejitsu and I'll get you squared away
[02:32] infynyxx has joined the channel
[02:32] geekn has joined the channel
[02:33] cjheath has joined the channel
[02:34] cjheath has joined the channel
[02:36] mandric has joined the channel
[02:37] cjm has joined the channel
[02:37] k1ttty has joined the channel
[02:38] kickingvegas has left the channel
[02:38] Vennril2 has joined the channel
[02:39] kurtzhong_ has joined the channel
[02:39] sub_pop has joined the channel
[02:39] jsurfer has joined the channel
[02:40] ryanmcgrath has joined the channel
[02:40] schwab has joined the channel
[02:44] boehm has joined the channel
[02:44] amigojapan has joined the channel
[02:44] lightbyte has joined the channel
[02:45] _th_n_: Would anyone recommend a good node spidering/crawling lib? Ideally something simple to set up and fairly lightweight (don't _need_ jquery, etc.)
[02:46] jesster7 has joined the channel
[02:46] jesster7 has left the channel
[02:47] wilmoore has joined the channel
[02:49] lightbyte: had a few questions about fs.watch in 0.5.9… any chance I could get little love over here: http://stackoverflow.com/questions/7761095/fs-watch-via-node-0-5-9-on-mac-osx ?
[02:50] luke` has joined the channel
[02:53] chance- has joined the channel
[02:54] chance-: is there anyway to preload files, say your models, with node console?
[02:54] kenperkins has joined the channel
[02:54] chance-: i hate having to constantly retype things like Account=require('./models/account') to spike things
[02:55] chance-: hates a strong word but you get the idea
[02:57] matyr has joined the channel
[02:57] tiagobutzke has joined the channel
[02:58] jamescarr_: ARGH
[02:58] jamescarr_: F'ing jade!
[02:59] davidban_ has joined the channel
[02:59] aconbere has joined the channel
[03:00] EyePulp has joined the channel
[03:00] OneOfOne: ok i just found out a "really" weird bug
[03:01] OneOfOne: socket.io 0.8.4 websockets works fine with node 0.4.x, doesn't work with 0.5.x, however going through the code it shouldn't work with 0.4.x either, my chrome uses websocket v14 which is an unknown version to socket.io
[03:01] chrisdickinson: chance-: yes. 
[03:02] CarterL has joined the channel
[03:02] chrisdickinson: chance-: https://github.com/unicode-snowman/quickerthanme/blob/master/bin/shell
[03:02] chrisdickinson: store it in `repl.context`.
[03:03] jamescarr_: anyone got any ideas on this bullshit?
[03:03] jamescarr_: https://gist.github.com/1286150
[03:03] jamescarr_: how the fuck is it complaining about .length over a fucking .clearfix class
[03:04] jamescarr_: sorry, frustrated
[03:04] jamescarr_: ready to demo a new app for a client tomorrow and then this hit me
[03:06] vidi has joined the channel
[03:07] chilts: jamescarr_: what is the : after the .input: <- is that meant to be there?
[03:07] chilts: ACTION guesses
[03:08] jamescarr_: chilts, inline input
[03:08] jamescarr_: I mean, inline element
[03:08] ben_alman has joined the channel
[03:08] chilts: ah, I see, it's the wrong line anyway ... hmm, not sure
[03:08] jamescarr_: it's to keep from having to go crazy with nesting
[03:09] chilts: righto, ta
[03:09] jamescarr_: there's prbably some funky tab in there
[03:09] lz has joined the channel
[03:09] abjorn has joined the channel
[03:10] cognominal has joined the channel
[03:10] lz: big shoutout to all the peeps who showed up at the first node.js Boston meetup, you guys made it happen
[03:10] pixel13 has joined the channel
[03:10] pixel13 has left the channel
[03:10] lz: and Eric Zhang from now.js, for doing the keynote presentation
[03:11] brianc has joined the channel
[03:11] fbartho has joined the channel
[03:17] stagas has joined the channel
[03:18] davidbanham has joined the channel
[03:18] Kunda has joined the channel
[03:21] cognominal_ has joined the channel
[03:22] JakeyChan has joined the channel
[03:29] blueadept: anyone know where i can get these types of profile pics made? http://a1.twimg.com/profile_images/1436495763/eightbit-bb8df8f7-9346-4a54-b057-4fd9cfd1364b.png
[03:30] lz: blueadept: i've seen those too and wondered the same..
[03:32] boehm has joined the channel
[03:32] Bergle_1: http://freenuts.com/turn-twitter-profile-picture-8-bit-avatar-eightbit/ maybe
[03:33] abjorn has left the channel
[03:34] mikeric has joined the channel
[03:37] saikat has joined the channel
[03:38] orospakr has joined the channel
[03:38] joshkehn has joined the channel
[03:39] joshkehn has left the channel
[03:41] chance- has joined the channel
[03:42] cognominal___ has joined the channel
[03:43] djbell has joined the channel
[03:44] slifty_corsair has joined the channel
[03:45] chance-: chrisdickinson awesome, thanks man
[03:46] zeade has joined the channel
[03:49] phongjalvn has joined the channel
[03:54] jtsnow has joined the channel
[03:55] skm has joined the channel
[03:55] bloudermilk has joined the channel
[03:56] aruns has joined the channel
[03:56] lz has joined the channel
[03:57] bloudermilk: Can anybody recommend a good library/package for real-time multiplayer gaming? Or any other type of libraries where client time synchronization is determined partially by the server?
[03:57] lz: bergie_1 that's the one, thanks!
[03:57] slifty_corsair has joined the channel
[03:57] Aria has joined the channel
[03:57] lz: bloudermilk, what do you mean by client time sync
[03:58] SubStack: bloudermilk: do you just want the server to push updates or do you want a synchronoization layer?
[03:58] bloudermilk: For example, if I'm creating a multiplayer pong game (two different clients) it's important that both clients are seeing the same thing at the same time
[03:59] bloudermilk: So I'm looking for a library that can compensate for latency differences, I guess
[03:59] Kunda has joined the channel
[03:59] mikeric has joined the channel
[03:59] bloudermilk: I don't have any network gaming experience, so I'm not quite sure how this is normally accomplished, which is why I was looking for a lib in the first place :)
[04:00] SubStack: oh I haven't heard of any library that can do that natively
[04:00] SubStack: but that needs to exist
[04:00] phongjalvn has joined the channel
[04:01] bloudermilk: Anybody in here with multiplayer gaming experience in node? Surely someone has attempted this
[04:01] Qbix1 has joined the channel
[04:02] caolanm has joined the channel
[04:02] Lorentz: I have attempted it and went nowhere, due to lack of time
[04:02] Lorentz: But yes, easily do-able
[04:03] SubStack: pyrotechnick has done some stuff
[04:03] broofa has joined the channel
[04:05] bloudermilk has joined the channel
[04:05] kickingvegas has joined the channel
[04:05] bloudermilk: Sorry all... shoddy internet here. Last I heard was "Lorentz: But yes, easily do-able"
[04:05] bloudermilk: I miss anything/
[04:06] Lorentz: 00:03 < SubStack> pyrotechnick has done some stuff
[04:06] Skola has joined the channel
[04:08] bloudermilk: Thanks
[04:08] bloudermilk: pyrotechnick: ping!
[04:09] Lorentz: I should finish my game
[04:09] yobi: i am trying to make a https request but I get "EAFNOSUPPORT, Address family not supported by protocol family"
[04:10] yobi: anyone knows what the problem could be?
[04:11] gavin_huang has joined the channel
[04:11] briandh: yobi: http://stackoverflow.com/questions/4617541/making-an-http-request-using-node-js-throws-eafnosupport ?
[04:12] yobi: don't get it .. why is he using createClient
[04:13] yobi: im using https.request()
[04:13] zmbmartin has joined the channel
[04:14] jamescarr has joined the channel
[04:15] lz: yobi, can you make a gist
[04:15] yobi: yeah one sec
[04:15] balaa has joined the channel
[04:17] jamescarr: tjgillies, 
[04:19] Al_ has joined the channel
[04:22] stagas has joined the channel
[04:23] chance- has joined the channel
[04:24] yobi: lz, briandh : now it worked .. must been a typo somewhere
[04:24] yobi: thanks!
[04:24] lz: np sweet
[04:27] MUILTFN has joined the channel
[04:28] _iyp has joined the channel
[04:29] _iyp: Question about jade. Can someone point me in the right direction on how to do an option tag in a dropdown for each item in an array?
[04:29] lz: yes
[04:30] lz: _iyp h/o a sec
[04:30] _iyp: Thanks man. Context: trying to give user the option to select from files in a certian directory
[04:31] kersny has joined the channel
[04:31] criswell has joined the channel
[04:32] CarterL has joined the channel
[04:32] gf3 has joined the channel
[04:32] lz: _iyp https://gist.github.com/1286248
[04:32] lz: that should do it
[04:32] lz: you need to pass the objects array to the jade template
[04:33] versicolor has joined the channel
[04:33] lz: array of strings
[04:34] _iyp: Awesome. Had no idea about the - operator...just startin up on this stuff. Thank you for the help!
[04:35] versicolor has joined the channel
[04:35] lz: _iyp very welcome, good luck!
[04:36] jebberjeb has left the channel
[04:36] jebberjeb has joined the channel
[04:36] deedubs: so no-one is going to use node.js until there is a unified abstraction layer http://www.linkedin.com/groups/Heading-Nodejs-goodbye-letter-PHP-2906459.S.66055953?qid=73c2230e-9132-4393-add3-9b04141afa9e&trk=group_most_popular-0-b-ttl&goback=%2Egmp_2906459#commentID_54877793
[04:36] orospakr has joined the channel
[04:37] _iyp: ty'
[04:37] diogogmt has joined the channel
[04:37] HT has joined the channel
[04:38] orospakr has joined the channel
[04:39] fangel has joined the channel
[04:41] Aria: Heh. Wow. That link makes me 'wait, what?' a lot.
[04:41] HT has joined the channel
[04:41] Aria: But then anyone who holds up PHP as anything but an example of 'batteries included is a strategy that works' is kinda crazy.
[04:42] balaa has joined the channel
[04:47] stagas has joined the channel
[04:49] boltR has joined the channel
[04:56] deedubs: Aria: was I not making sense?
[04:57] deedubs: ACTION is Dan Williams
[04:57] Aria: Aha.
[04:57] Aria: No, you make perfect sense. I think the original poster is out of it.
[04:58] tbranyen: Yo Aria nice meeting you today
[04:58] Aria: Indeed! Likewise!
[04:58] tbranyen: Now I know you live on irc :D
[04:59] tbranyen: I should have put my irc tag on the project too
[04:59] tbranyen: projector*
[04:59] Aria: Hehe. I figured it was the same as your twitter ID.
[05:00] mike5w3c has joined the channel
[05:01] dshaw_ has joined the channel
[05:02] joshkehn has joined the channel
[05:06] luke`_ has joined the channel
[05:08] wadey has joined the channel
[05:09] geekn has joined the channel
[05:10] boltR has joined the channel
[05:10] rchavik has joined the channel
[05:11] gkatsev has joined the channel
[05:11] Aria: It was really a good meetup.
[05:14] dshaw_1 has joined the channel
[05:14] gregeh has joined the channel
[05:16] Qbix1 has joined the channel
[05:17] brianloveswords has joined the channel
[05:17] stagas has joined the channel
[05:17] ceej has joined the channel
[05:20] brianloveswords has joined the channel
[05:21] mikeric has joined the channel
[05:24] dreamdust has joined the channel
[05:29] HardPhuck has joined the channel
[05:32] smtlaissezfaire has joined the channel
[05:32] stagas has joined the channel
[05:32] avalanche123 has joined the channel
[05:33] sub_pop has joined the channel
[05:35] jellosea has joined the channel
[05:35] zmbmartin has left the channel
[05:37] AvianFlu has joined the channel
[05:40] kickingvegas has left the channel
[05:42] stagas has joined the channel
[05:44] aguynamedben has joined the channel
[05:47] TheCode has joined the channel
[05:47] TheCode: what's the best way to handle file uploads in Node?
[05:47] joshkehn: formidable
[05:47] joshkehn: https://github.com/felixge/node-formidable
[05:49] TheCode: Ok thanks
[05:53] jetienne_ has joined the channel
[05:54] louissmit has joined the channel
[05:55] ayaz has joined the channel
[05:58] balaa has joined the channel
[05:59] balaa_ has joined the channel
[06:00] meso has joined the channel
[06:01] secoif has joined the channel
[06:02] CoinOpeBoy has joined the channel
[06:02] secoif: I'd like a kind of active record thing to use as a template for my serverside models, you know, it's got basic setup for save, validate, etc,
[06:02] secoif: anyone got any suggestions
[06:02] wookiehangover: mongoose
[06:02] secoif: not tied to a specific db
[06:03] TomY has joined the channel
[06:03] secoif: I'd like to simply use spinejs' model system, but it seems that the module in npm has some browser dependencies
[06:03] secoif: :9
[06:04] joshkehn has left the channel
[06:04] wookiehangover: I'm not aware of any generic ORMs
[06:04] wookiehangover: let's find out
[06:06] wookiehangover: so do you really need something that's db agnostic?
[06:07] rurufufuss has joined the channel
[06:09] pid_ has joined the channel
[06:12] stagas has joined the channel
[06:14] amigojapan has joined the channel
[06:14] jetienne_: morning
[06:15] [[zzz]] has joined the channel
[06:17] cjheath_ has joined the channel
[06:20] mmalecki has joined the channel
[06:20] avalanche123 has joined the channel
[06:21] k1ttty has joined the channel
[06:24] MrNko has joined the channel
[06:24] stagas: jetienne_: morning!
[06:24] sgimeno has joined the channel
[06:24] jetienne_: hey stagas 
[06:24] jetienne_: stagas: not time no see. whats up?
[06:25] stagas: jetienne_: the same, u?
[06:26] jetienne_: stagas: doing a lot of webgl + games. quite fun. less node tho :(
[06:26] TheFuzzball has joined the channel
[06:26] sgimeno has joined the channel
[06:28] mikedeboer has joined the channel
[06:28] hernan has joined the channel
[06:31] magnetik has joined the channel
[06:31] maletor has joined the channel
[06:32] mraleph has joined the channel
[06:32] jetienne_: breakfeast time
[06:33] thalll has joined the channel
[06:34] boxysean has joined the channel
[06:37] Margle has joined the channel
[06:39] thisandagain has joined the channel
[06:43] jaminja has joined the channel
[06:45] dreamdust has joined the channel
[06:47] `3rdEden has joined the channel
[06:47] amigojapan has joined the channel
[06:48] liar has joined the channel
[06:48] groom has joined the channel
[06:49] Morkel has joined the channel
[06:49] raphdg has joined the channel
[06:50] aguynamedben has joined the channel
[06:51] matyr has joined the channel
[06:52] Ginlock has joined the channel
[06:52] mikeric has joined the channel
[06:54] tylerstalder has joined the channel
[06:54] arcanis has joined the channel
[06:55] gut4 has joined the channel
[06:57] predat0r has joined the channel
[06:58] davidvip has joined the channel
[06:59] davidvip has left the channel
[06:59] fangel has joined the channel
[07:01] bergelmir has joined the channel
[07:02] emattias has joined the channel
[07:02] dreamdust has joined the channel
[07:03] kab3wm has joined the channel
[07:03] balaa has joined the channel
[07:04] steffan has joined the channel
[07:05] cognominal has joined the channel
[07:05] AvianFlu has joined the channel
[07:06] sveimac has joined the channel
[07:06] jackbean has joined the channel
[07:08] postwait has joined the channel
[07:09] bolden has joined the channel
[07:09] SamuraiJack has joined the channel
[07:10] saschagehlich has joined the channel
[07:10] HardPhuck has joined the channel
[07:10] DennisRasmussen has joined the channel
[07:14] lunetics has joined the channel
[07:20] wink_ has joined the channel
[07:21] stalled has joined the channel
[07:21] amigojapan_ has joined the channel
[07:22] Skola has joined the channel
[07:22] stagas has joined the channel
[07:22] hwinkel has joined the channel
[07:26] aguynamedben has joined the channel
[07:27] topaxi has joined the channel
[07:27] cjheath has joined the channel
[07:27] tlynn has joined the channel
[07:29] djcoin has joined the channel
[07:30] Xano has joined the channel
[07:32] cognominal has joined the channel
[07:32] gut4 has joined the channel
[07:32] jackbean has joined the channel
[07:35] wtfcoder has joined the channel
[07:35] HardPhuc has joined the channel
[07:38] stonebranch has joined the channel
[07:43] geekn has joined the channel
[07:44] icewhite_ has joined the channel
[07:45] Spion has joined the channel
[07:48] criswell has joined the channel
[07:48] kurtzhong has joined the channel
[07:49] gut4 has joined the channel
[07:49] robhawkes has joined the channel
[07:50] jacter has joined the channel
[07:52] cdarne has joined the channel
[07:54] gregeh has joined the channel
[07:57] Casan has joined the channel
[08:00] herbySk has joined the channel
[08:01] jhurliman has joined the channel
[08:01] uchuff has joined the channel
[08:01] Guest74262 has joined the channel
[08:02] adnasa has joined the channel
[08:02] d0k has joined the channel
[08:02] jbpros has joined the channel
[08:03] whitman has joined the channel
[08:03] SuMarDi has joined the channel
[08:04] cosmincx has joined the channel
[08:04] jetienne has joined the channel
[08:07] SalmanPK has joined the channel
[08:10] __tosh has joined the channel
[08:12] markwubben has joined the channel
[08:12] mpavel has joined the channel
[08:13] adambeynon has joined the channel
[08:14] mc_greeny has joined the channel
[08:18] yuwang has joined the channel
[08:19] NetRoY has joined the channel
[08:19] gut4 has joined the channel
[08:23] aaronmcadam has joined the channel
[08:24] aguynamedben_ has joined the channel
[08:26] Margle has joined the channel
[08:26] verdoc has joined the channel
[08:27] yuwang has joined the channel
[08:28] luke` has joined the channel
[08:29] elliottcable: Awesomesauce.
[08:29] elliottcable: https://github.com/joyent/node/pull/1801
[08:29] elliottcable: I feel like I missed something, but it’s 4:30 AM, so I’ll deal with whatever it was that I missed, tomorrow.
[08:32] adnasa has joined the channel
[08:33] jacter1 has joined the channel
[08:34] [[zzzz]] has joined the channel
[08:35] TomY has joined the channel
[08:38] jacter has joined the channel
[08:39] Esteb has joined the channel
[08:40] secoif has joined the channel
[08:40] dreamdust has joined the channel
[08:42] vguerra has joined the channel
[08:45] smtlaissezfaire has joined the channel
[08:45] saschagehlich_ has joined the channel
[08:45] mpavel has left the channel
[08:46] stax has joined the channel
[08:46] stax has left the channel
[08:49] __doc__ has joined the channel
[08:52] stagas has joined the channel
[08:52] digman543 has joined the channel
[08:53] Emmanuel_ has joined the channel
[08:53] lgl has joined the channel
[08:54] eldios has joined the channel
[08:55] stonebranch has joined the channel
[08:55] lgl: I'm trying to spawn a large number of child processes, and I want to listen to their stdout/stderr. I get a too many open files, error, so I figure I should let them use the same streams for stdout and stderr, and listen to those. I can't figure out how to do it without writing to files?
[08:55] mikeric has joined the channel
[08:57] sfoster has joined the channel
[08:59] Wizek has joined the channel
[09:00] lackac has joined the channel
[09:00] kulor-uk has joined the channel
[09:00] markwubben has joined the channel
[09:00] lackac: hey all
[09:01] lackac: I'm wondering what the best practice is to open and close db connections in Node
[09:01] lackac: in most places I read that the best is to open one when the server starts and never close it
[09:02] lackac: that was about a MongoDB connection
[09:02] stagas has joined the channel
[09:02] lackac: and this is what I'm doing, but this causes an issue with our jake tasks
[09:02] jacter has joined the channel
[09:03] lackac: we have a few tasks that do this and that with the database (some processing, transformations, etc.)
[09:03] meso has joined the channel
[09:03] lackac: and if I don't close the db connection these tasks doesn't quit at the end
[09:04] xsyn has joined the channel
[09:04] negrete has joined the channel
[09:05] r04r has joined the channel
[09:06] lgl: lackac: You might want to do server.on("close", function(errno) { db.quit() })
[09:06] _kud has joined the channel
[09:07] lackac: lgl: this is the tricky part, in case of these maintenance tasks there is no server listening
[09:07] lackac: it's just a jake task
[09:07] Glenjamin: you just need to call db.quit() in the final callback of the jake task
[09:08] zackattack has joined the channel
[09:08] simenbrekken has joined the channel
[09:09] mixin has joined the channel
[09:10] lackac: Glenjamin: but then I need to do the same in every task
[09:10] Glenjamin: then abstract it out into a wrapper
[09:10] Glenjamin: tasks are just code
[09:10] icewhite has joined the channel
[09:10] lackac: that's right, and this is what I'm doing actually
[09:11] herbySk has joined the channel
[09:11] _kud_ has joined the channel
[09:11] lackac: it would be better thought if I didn't need to deal with this
[09:11] lgl: lackac: Ok, in that case, I'm not familiar with Jake but I'm sure there is some kind of afterEach/tearDown or similar?
[09:12] lackac: what I mean, it would be great if socket connections could have a flag which tells node that it is closable if nothing else is open
[09:12] Glenjamin: eugh, magic
[09:13] TheFuzzball has joined the channel
[09:13] marlun has joined the channel
[09:13] marlun has joined the channel
[09:14] negrete: hello everyone! I hope you can help me... Is there a way to forbid the declaration of specific tcp ports for listening in a Node.js app and instead use a variable? Something like the way Cloud9 does it but without the whole IDE
[09:14] Ginlock has joined the channel
[09:14] k1ttty has joined the channel
[09:15] _kud has joined the channel
[09:17] aliem has joined the channel
[09:19] _kud has joined the channel
[09:20] irahgel has joined the channel
[09:22] burningdog has joined the channel
[09:25] versicolor has joined the channel
[09:27] przemoc has joined the channel
[09:33] simenbrekken has joined the channel
[09:34] dnyy_ has joined the channel
[09:34] kuebk has joined the channel
[09:35] sirganya has joined the channel
[09:36] brianloveswords has joined the channel
[09:36] martinciu has joined the channel
[09:37] jeedey has joined the channel
[09:37] gut4 has joined the channel
[09:37] jeedey has joined the channel
[09:38] artemma has joined the channel
[09:38] artemma: Hi all
[09:38] artemma: I want to mock a web server for my app just to do some canned replies after rudimendary parsing
[09:39] artemma: to my understanding node.js is good for it, so there must be examples on simple parsing and replies somewhere :)
[09:39] artemma: what would be a good starting point?
[09:40] artemma: maybe I even don't need real parsing much, just matching some POST arguments would be good enough
[09:40] burningdog has joined the channel
[09:42] artemma: also what is the best way to start/stop node.js based server from command line (terminal) - I'd need to do that for my tests
[09:44] swick has joined the channel
[09:46] dreamdust has joined the channel
[09:46] Jarda: artemma: a node.js server is just a socket listening on http requests
[09:46] Jarda: and is run like any other node application
[09:47] Jarda: with the "node" command
[09:47] Jarda: so you run "node myserver.js"
[09:47] fly-away has joined the channel
[09:47] Jarda: and when you want to restart, just hit ^C and run again
[09:47] artemma: Jarda, I am not super-good with javascript and copy-pasting somebody's simple matching code is faster then reading docs ;)
[09:48] artemma: As for starting stopping node.js I am looking for a way to do it automatically from script. Again, that's not complex to google online, but maybe somebody has ready made code
[09:48] artemma: after all testing your client code with node.js should be quite a usual task
[09:48] Jarda: the most basic example would be var http = require('http'), server = http.createServer(); server.listen(8080);
[09:48] hellp has joined the channel
[09:50] artemma: thanks
[09:50] boltR has joined the channel
[09:51] nail_: artemma: to stop the process you could listen for signals (eg process.on('SIGINT', function() { process.exit(); }))
[09:51] artemma: nail_: yeah, I was looking for something like this. Was thinking more about killall though
[09:52] nail_: (Well taht's the default behaviour for SIGINT but you could do some graceful shutdown)
[09:53] i42n has joined the channel
[09:53] [AD]Turbo has joined the channel
[09:55] negrete: as for my previous question, does anyone knows if there's a module doing what I want? I don't expect you to give me the working code of what I want to implement, just point me out in the right direction please
[09:56] guidocalvano has joined the channel
[09:59] _kud_ has joined the channel
[09:59] [AD]Turbo: hi there
[10:00] ant0no has joined the channel
[10:02] stagas has joined the channel
[10:05] fangel has joined the channel
[10:05] Kunda has joined the channel
[10:06] sjbreen has joined the channel
[10:07] Mokona has joined the channel
[10:08] lgl: artemma: Look at the server example on http://nodejs.org/
[10:08] __tosh has joined the channel
[10:08] artemma: thanks, lgl, I started with that 
[10:09] __tosh has joined the channel
[10:09] artemma: by now my test script knows how to start and kill node.js and actual test performs the comparisons fine
[10:09] Spion_ has joined the channel
[10:09] artemma: what's left is to figure out some clean and clear way to script canned replies on the node.js side
[10:10] artemma: you know, if there's createUser in url, reply this and if there's deleteUser, reply that
[10:10] artemma: plus maybe simple JSON argument parsing (can even be just a string match, not a full JSON parsing)
[10:13] fermion has joined the channel
[10:14] TomY has joined the channel
[10:16] lgl: artemma: This should get you going. I created it for you just now. https://gist.github.com/1286740
[10:16] artemma: hey, thanks a lot, lgl!
[10:16] digDilbert has joined the channel
[10:17] jldbasa has joined the channel
[10:17] lgl: Where I do a match(/somethingcool/) that's (/somethingcool/) is just a regex
[10:17] lgl: You can just as easily do JSON.parse(body) in the req.on("end") handler
[10:18] N0va` has joined the channel
[10:18] lgl: If you want to serve JSON back, make sure to change the content-type for the response, and you could have objects for each url in the responses object, and do JSON.stringify on them when yuo send a response
[10:19] Glenjamin: if you want to parse URLs and route to various actions, you might as well use connect or express
[10:19] lgl: artemma: np
[10:19] Glenjamin: no point re-inventing the wheel
[10:20] dig has joined the channel
[10:20] lgl: Glenjamin: If there is a point, it's that it's better to learn how to crawl, before you learn how to walk. ;)
[10:21] Glenjamin: extending the metaphor, getting a bus is preferred
[10:21] Glenjamin: by that logic we should always learn C before using a high level language
[10:23] dig has joined the channel
[10:27] dig has left the channel
[10:28] konobi: Glenjamin: bah... 8086 ASM... that's what i'm talking bout
[10:28] xsyn has joined the channel
[10:33] bzinger has joined the channel
[10:34] pickels has joined the channel
[10:36] simenbrekken has joined the channel
[10:36] boltR has joined the channel
[10:37] scott_gonzalez has joined the channel
[10:38] jbpros has joined the channel
[10:38] kulor-uk has joined the channel
[10:40] Casan has joined the channel
[10:40] fermion has joined the channel
[10:41] FMJaggy has joined the channel
[10:41] boltR has joined the channel
[10:44] cjm has joined the channel
[10:46] jldbasa has joined the channel
[10:47] artemma has joined the channel
[10:48] timmy has joined the channel
[10:48] _kud has joined the channel
[10:56] igl has joined the channel
[10:56] DennisRasmussen has joined the channel
[10:56] sirganya_ has joined the channel
[10:59] mike5w3c has joined the channel
[11:02] stagas has joined the channel
[11:07] kuebk has joined the channel
[11:08] andrewfff has joined the channel
[11:08] OneOfOne: I seem to have a problem with unix sockets,  if the socket doesn't exist, the client throws Error: connect UNKNOWN, however i can't catch that exception with try catch
[11:08] kulor-uk has joined the channel
[11:10] stagas: OneOfOne: client.on('error', function (err) { ... }) should stop it from throwing I think
[11:11] OneOfOne: stagas: you're the man, been trying to figure it out for the last 30 mins :)
[11:15] aamir-m has joined the channel
[11:15] gut4 has joined the channel
[11:18] murilobr has joined the channel
[11:19] versicolor has joined the channel
[11:21] ecthiender has joined the channel
[11:24] Morkel has joined the channel
[11:25] ecthiender: hello, when i installed less using npm install less, it installed in the current directory. so it is not recognised as installed system-wide. what can i do to make it a system-wide installation? can i move it to a particular location? where is it installed by default?
[11:25] tuhoojabotti: -g
[11:26] AphelionZ has joined the channel
[11:26] AphelionZ has joined the channel
[11:26] vineyard has joined the channel
[11:27] DennisRasmussen has joined the channel
[11:31] geoffgeoff has joined the channel
[11:31] geoffgeoff: node.js is OK
[11:32] Guest74262: eat recycled food, recyceled food is good for the environment and OK for you!
[11:35] ecthiender: hey, i have installed less using npm install less. now are there are more steps in setting up my less compiler lessc?
[11:36] Industrial: I eat recycled babies Guest74262.
[11:36] Industrial: ecthiender: have you read the NPM documentation?
[11:37] ixti has joined the channel
[11:37] ecthiender: i have gone through the lesscss.org
[11:37] Industrial: but not the npm
[11:37] Industrial: (also, there is stylus for NodeJS/npm, which rocks way more then less, in my honest opinion)
[11:37] stagas has joined the channel
[11:37] ecthiender: no, i did not know i had to go through it
[11:38] Industrial: ecthiender: well, its the system that installs software packages and you made 2 questions about the structure of the packages so far, which is what NPM handles
[11:38] ecthiender: okay Industrial , but i require less. 
[11:38] matyr has joined the channel
[11:39] bshumate has joined the channel
[11:39] ecthiender: so npm, presumably, will take care of the package management right? or am i wrong?
[11:40] lgl: Question about child processes and customFds in particular: I'm trying to spawn a large number of child processes, and I want to listen to their stdout/stderr. I get a too many open files, error, so I figure I should let them use the same streams for stdout and stderr, and listen to those. I can't figure out how to do it without writing to files?
[11:42] N0va` has joined the channel
[11:43] jetienne has joined the channel
[11:43] sleetdrop has joined the channel
[11:44] ecthiender: thanks Industrial, figured it out.
[11:44] ecthiender: what i wanted was npm install --global <package-name>. that global option
[11:45] ben_alman: fs.mkdir requires a mode. What's the best "Default" mode to use?
[11:45] ben_alman: like, what mode does a file get by default?
[11:45] ben_alman: 0666 ?
[11:45] lgl: ben_alman: It depends on the system, but a directory is often 0755
[11:45] ben_alman: ok
[11:45] ben_alman: i'll use that
[11:46] ben_alman: i wish it would just use the default as if you did "mkdir"
[11:46] lgl: It has to have the executable flag, otherwise you can't cd into it
[11:46] lgl: ben_alman: You are not alone.
[11:47] ben_alman: is there a util to mkdir like 'foo/bar/baz' ?
[11:48] ben_alman: or do i need to loop through it
[11:48] ben_alman: like mkdir -p
[11:48] loob2 has joined the channel
[11:49] lgl: ben_alman: There are a few on npm
[11:49] ben_alman: too bad it's not built-in
[11:49] ben_alman: easy enough to write
[11:50] lgl: ben_alman: You are not alone to think so. Try substack's mkdirp. isaacs might have one as well, I'm not sure.
[11:51] brianseeders has joined the channel
[11:51] ben_alman: substack's is async
[11:51] outbounder has joined the channel
[11:51] ben_alman: np easy to write
[11:52] ben_alman: defaulting-to-async io is such a mess for libs
[11:53] cognominal has joined the channel
[11:54] lgl: ben_alman: One of the biggest strengths of node.js IMO, is that I can trust all libraries to be async.
[11:54] jaminja has joined the channel
[11:54] jaminja has joined the channel
[11:54] ben_alman: and one of the biggest weaknesses is that i can't trust any of the libraries to be sync
[11:54] replore has joined the channel
[11:55] replore_ has joined the channel
[11:55] ben_alman: as i'm using node.js for creating a build tool that needs to log to sdtio synchronously
[11:55] ben_alman: stdio too
[11:55] lgl: ben_alman: In that case, node.js is probably not for you.
[11:56] ben_alman: but npm contains the dependencies i need to use
[11:56] TheFuzzball has joined the channel
[11:56] ben_alman: so it's a double-edged sword
[11:56] ben_alman: i wouldn't have used node
[11:56] ben_alman: but... making an npm module makes it easier for the tool to be installed
[11:56] ben_alman: AND
[11:57] ben_alman: the mere fact that sync variants of all the io stuff exist or will exist suggest that the async-only approach is insufficient for node
[11:57] magnetik has joined the channel
[11:58] luke` has joined the channel
[12:00] luke`_ has joined the channel
[12:00] lz has joined the channel
[12:01] mehtryx has joined the channel
[12:04] tiagobutzke has joined the channel
[12:05] ilikeit has joined the channel
[12:05] jetienne has joined the channel
[12:06] schwab has joined the channel
[12:07] chjj: V8 commit messages today: "Revert r9619." ... "Revert last revert."
[12:09] geekn has joined the channel
[12:10] anoop has joined the channel
[12:10] rootslab has joined the channel
[12:12] jbpros has joined the channel
[12:13] fsockopen has joined the channel
[12:13] kulor-uk has joined the channel
[12:13] N0va` has joined the channel
[12:13] netlemur has joined the channel
[12:14] TomY has joined the channel
[12:15] kriszyp has joined the channel
[12:16] neoesque has joined the channel
[12:16] mAritz has joined the channel
[12:16] fairwinds has joined the channel
[12:17] CarterL has joined the channel
[12:17] fairwinds_ has joined the channel
[12:18] mmalecki has joined the channel
[12:20] replore has joined the channel
[12:20] replore_ has joined the channel
[12:20] abraxas has joined the channel
[12:21] gut4 has joined the channel
[12:22] CrisO has joined the channel
[12:23] fritze has joined the channel
[12:24] micxer has joined the channel
[12:25] _th_n_ has joined the channel
[12:25] hernan has joined the channel
[12:27] fritze has left the channel
[12:27] lgl: Anybody good with streams and fds? I'm trying hard to accomplish this thing but I can't find out how to get a fd for a spawned child process to write to, which I can listen on in the master (without using a file). I want all my child processes to write to the same fd.
[12:27] lgl: I'm trying to spawn a large number of child processes, and I want to listen to their stdout/stderr. I get a too many open files, error, so I figure I should let them use the same streams for stdout and stderr, and listen to those. I can't figure out how to do it without writing to files?
[12:28] Morkel has joined the channel
[12:28] mmalecki: lgl: require('child_process').spawn.stdout.fd
[12:29] piscisaureus has joined the channel
[12:30] przemoc has joined the channel
[12:31] schwab has joined the channel
[12:32] lgl: mmalecki: spawn doesn't have a stdout - it's a function
[12:32] lgl: mmalecki: Anyway, I know how to give customFds to spawn, I just don't know how to create the fds, and read from them.
[12:32] mmalecki: lgl: require('child_process').spawn('whatever').stdout.fd
[12:32] strax has joined the channel
[12:32] mmalecki: that's what I meant ^
[12:32] jackbean has joined the channel
[12:33] lgl: mmalecki: Ok thanks. Hmm you mean I could grab the fd from the first child, and then give it to the other childs? That might work
[12:33] mmalecki: lgl: yeah, I think so
[12:33] ceej has joined the channel
[12:34] piscisaureus_ has joined the channel
[12:34] mmalecki: ok, back to rupy.eu
[12:34] lgl: mmalecki: It's worth a shot - thanks!
[12:34] mmalecki: lgl: :)
[12:34] kurtzhong_ has joined the channel
[12:35] erichynds has joined the channel
[12:35] mikedeboer has joined the channel
[12:36] fsockopen: Hi all. I can't figure out why "sometimes"  fs.renameSync(filenameSrc, filenameDst); crash console.loging this message: node fs.js:321 return binding.rename(old Path, new Path); Error: UNKNOWN, .. any ideas ?
[12:38] AaronMT has joined the channel
[12:39] lgl: fsockopen: No idea, it's a longshot but could it be because the files are on different file systems?
[12:42] fsockopen: no files are in the same directory .. I'm trying to rename to files uploaded from their names  like "d0fa6cbaeabe3ab791db834ef2f33745" to the original name 
[12:43] _kud has joined the channel
[12:43] f1gm3nt has joined the channel
[12:46] max_dev has joined the channel
[12:46] kulor-uk has joined the channel
[12:46] jetienne_ has joined the channel
[12:48] davv3 has joined the channel
[12:49] aamir-m: can anyone suggest how do I get started with node? I would like to develop web application
[12:51] Kunda: aamir-m, check out http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/
[12:54] fsockopen: Another question: I'm using "formidable" (https://github.com/felixge/node-formidable) to multiple file uploads ... I'm actualy post the form in a hidden iframe and managing the progressbar via ajax poilling the server to ask for the upload progress. the client send a variable (PHPSESSID) which will be used by the server to create a file named as its value to sore the process infos. Anyone...
[12:54] fsockopen: ...knows a better way to do it ?
[12:54] Raul_ has joined the channel
[12:55] shanebo has joined the channel
[12:55] shanebo: hey guys is there a way to get the client sides timezone from the server side?
[12:55] shanebo: … clients side['s] … 
[12:56] jtsnow has joined the channel
[12:57] Glenjamin: send it
[12:57] paul_k has joined the channel
[13:00] fsockopen: uhm .. seems that path.existsSync(file) returns false if the file name contains spaces :(
[13:01] Fuu has joined the channel
[13:01] trose: I'm looking for a good HOW TO for making fully dynamic node.js sites. My main concern is how to fully create the html. Right now I have a node.js server writing to res but that results in a plain text page...
[13:01] simenbrekken has joined the channel
[13:02] fsockopen: trose: res.writeHead(200, {'content-type': 'text/html'}); before res.end()
[13:03] agonie has joined the channel
[13:05] aamir-m: Kunda: Thank you very much
[13:05] cjm has joined the channel
[13:05] Poetro has joined the channel
[13:05] Poetro has joined the channel
[13:06] enmand_ has joined the channel
[13:07] baudehlo: fsockopen: what OS? Works for me on OSX.
[13:08] fsockopen: damned win7 :(
[13:08] JakeyChan_ has joined the channel
[13:09] r04r has joined the channel
[13:10] dubenstein has joined the channel
[13:11] deedubs has joined the channel
[13:11] Glenjamin: sounds like something you should submit as a bug
[13:11] Glenjamin: trose: have a look at the templating options for http://expressjs.com
[13:12] _kud_ has joined the channel
[13:12] Vertice has joined the channel
[13:13] cruxst has joined the channel
[13:13] trose: thanks!
[13:13] ph^_ has joined the channel
[13:14] MarkMenard has joined the channel
[13:14] lazyshot has joined the channel
[13:15] maf has joined the channel
[13:15] phiggins has joined the channel
[13:16] jerkelens has joined the channel
[13:17] slifty has joined the channel
[13:17] tilgovi has joined the channel
[13:18] _th_n_ has joined the channel
[13:19] bnoordhuis has joined the channel
[13:19] JasonJS has joined the channel
[13:20] Swizec has joined the channel
[13:23] _th_n_ has joined the channel
[13:23] sixtus42 has joined the channel
[13:23] sixtus42: Trying to compile node v0.5.9 (git tag) on linux/arm, I get http://pastebin.com/FDbTBNe9 - anybody got an idea?
[13:24] sixtus42: i.e. the compile runs fine, the linker fails
[13:26] bnoordhuis: sixtus42: you probably need to compile with -mfloat-abi=soft
[13:26] r04r has joined the channel
[13:26] sixtus42: pass that to make or configure?
[13:27] bnoordhuis: sixtus42: CFLAGS="-mfloat-abi=soft" CXXFLAGS="-mfloat-abi=soft" ./configure && make
[13:27] tnlogy has joined the channel
[13:27] sixtus42: bnoordhuis: cheers
[13:27] bnoordhuis: you should probably do a `make distclean` first, to clean out all build files
[13:27] jpdery has joined the channel
[13:27] _th_n_ has joined the channel
[13:28] sixtus42: bnoordhuis: I guess I have to something more, configure breaks on ssl with that
[13:28] tnlogy: hi, can I start the node prompt from a script, or, load data from a script and then start the interactive console?
[13:29] dexter_e has joined the channel
[13:29] bnoordhuis: sixtus42: breaks how?
[13:29] bosphorus has joined the channel
[13:29] dexter_e: js: Number(8.88)*5
[13:29] sixtus42: bnoordhuis: error: Could not autodetect OpenSSL support. 
[13:29] pixel13 has joined the channel
[13:29] sixtus42: I try w/o ssl first
[13:30] sixtus42: ACTION sits another 30min waiting for the compile to run
[13:30] pixel13 has left the channel
[13:30] willwhite has joined the channel
[13:31] sixtus42: bnoordhuis: ssl is detected w/o the CFLAGS
[13:32] bnoordhuis: sixtus42: you probably have to add a -I/path/to/openssl/headers
[13:32] davidwalsh has joined the channel
[13:32] sixtus42: bnoordhuis: strange that it detects it w/o CFLAGS… I just need an initial benchmark, I leave ssl out for now
[13:33] xetorthio has joined the channel
[13:33] sixtus42: bnoordhuis: thanks for your support
[13:33] bnoordhuis: sixtus42: my pleasure
[13:33] localhost has joined the channel
[13:34] skm has joined the channel
[13:35] tnlogy: ah, seem to exist a repl module
[13:36] deedubs has joined the channel
[13:37] AAA_awright_ has joined the channel
[13:37] zivester has joined the channel
[13:38] thomblake has joined the channel
[13:39] thomblake has left the channel
[13:39] CrisO has left the channel
[13:40] _kud has joined the channel
[13:41] matyr has joined the channel
[13:42] dubenstein has joined the channel
[13:42] daryn has joined the channel
[13:43] Migaaresno has joined the channel
[13:43] metellus has joined the channel
[13:43] TheJH_phone has joined the channel
[13:44] storrgie has joined the channel
[13:44] kevwil has joined the channel
[13:45] fangel_ has joined the channel
[13:46] cjroebuck has joined the channel
[13:46] amigojapan has joined the channel
[13:47] sirganya_ has joined the channel
[13:47] TheJH has joined the channel
[13:48] diogogmt has joined the channel
[13:48] nickadeemus2002 has left the channel
[13:49] Margle has joined the channel
[13:50] cafesofie has joined the channel
[13:50] k1ttty has joined the channel
[13:51] ryanmcgrath has joined the channel
[13:51] jzacsh has joined the channel
[13:51] jzacsh has joined the channel
[13:51] mandric has joined the channel
[13:51] liberum has joined the channel
[13:51] _th_n_ has joined the channel
[13:54] Yuezi has joined the channel
[13:56] _kud has joined the channel
[13:56] slaskis has joined the channel
[13:56] jscheel_ has joined the channel
[13:57] slaskis: anyone here using https://github.com/visionmedia/deploy ?
[13:57] aaronmcadam: hey how can I update npm, tried #
[13:58] aaronmcadam: "npm update npm" but nothin returns, -v gives me 1.0.26 but the npm package search says it's at 1.0.96
[13:59] vns has joined the channel
[14:00] TomY has joined the channel
[14:01] brianc has joined the channel
[14:01] icebox has joined the channel
[14:01] aaronmcadam: haha now I'm confused, I've run "sudo npm install -g npm" npm@1.0.96 but npm -v still returns 1.0.26 lol inception
[14:02] aaronmcadam: got it, had to source my bashrc
[14:02] JakeyChan_ has joined the channel
[14:02] hntrdglss has joined the channel
[14:03] TomY has joined the channel
[14:04] trose: question: I have an http server that is taking a file from a form, giving it to a script that takes a long time to process the file. As the script finishes each line of the file it returns data formatted with html tags and I have node.js writing that back to res as soon as it gets it. I'm noticing that the page often has broken html tags because the server hasn't sent the entire line yet... is there a way to force node to return only complete lines or
[14:04] trose:  do i need to manually make it wait before sending?
[14:05] sixtus42: bnoordhuis: didn't help same linking error :-(
[14:05] f1gm3nt has left the channel
[14:06] archie has joined the channel
[14:06] diogogmt has joined the channel
[14:06] bnoordhuis: sixtus42: the exact same linker errors?
[14:06] archie: hi evr1
[14:07] sixtus42: bnoordhuis: yes
[14:07] er1c_ has joined the channel
[14:07] bnoordhuis: sixtus42: err... `./configure --without-snapshot`? does your model have a fpu?
[14:08] vipaca has joined the channel
[14:08] vipaca has joined the channel
[14:08] sixtus42: bnoordhuis: cat /proc/cpuinfo returns Features	: swp half thumb fastmult vfp edsp neon vfpv3
[14:08] kulor-uk has joined the channel
[14:08] thalll has joined the channel
[14:08] bnoordhuis: okay, so presumably it does
[14:08] aconbere has joined the channel
[14:08] abraxas has joined the channel
[14:09] bnoordhuis: you can probably do away with the -mfloat-abi=soft switch, in that case
[14:09] ditesh|cassini has joined the channel
[14:09] bnoordhuis: not sure why mksnapshot is failing to link but --without-snapshot will simply skip that step
[14:10] bnoordhuis: startup will be slightly slower though
[14:10] archie: (i m pretty newb)i m trying to run the cygwin and i m getting an error when i give th "./configure" command
[14:11] bnoordhuis: archie: use 0.4.12 if you want to compile on cygwin
[14:11] bnoordhuis: we've deprecated cygwin support in 0.5.x
[14:11] fangel has joined the channel
[14:12] trose: ^^^ I think I figured out my own question from above ;) I'll just parse it out myself
[14:12] sixtus42: bnoordhuis: seems to help, I just ran out of diskspace /me sigh
[14:13] rick_h_ has left the channel
[14:13] joshgillies has joined the channel
[14:14] lunetics has joined the channel
[14:15] Venom_X has joined the channel
[14:15] FireCat has joined the channel
[14:15] f1gm3nt has joined the channel
[14:16] nibblebot has joined the channel
[14:17] stagas has joined the channel
[14:18] kevwil has left the channel
[14:19] ank has joined the channel
[14:19] TheJH: trose: are you sure a plain http answer is what you want?
[14:19] TheJH: trose: sounds like socket.io or dnode might be helpful for you
[14:19] CrisO has joined the channel
[14:19] dmsuperman has joined the channel
[14:19] baoist has joined the channel
[14:20] sixtus42: bnoordhuis: how do I control where temp files are put, /tmp is too small and the box is hardened so remounting as root is denied
[14:20] dmsuperman: What class is a mongo date object returned as? typeof just says 'Object' but obj instanceof Date returns false
[14:21] bnoordhuis: sixtus42: TMPDIR=/path/to/dir ?
[14:21] smtlaissezfaire has joined the channel
[14:22] CrisO has left the channel
[14:22] guidocalvano has joined the channel
[14:22] igl1 has joined the channel
[14:22] Squeese has joined the channel
[14:22] trose: thejh, hmm not sure. I'm really new to this
[14:22] sixtus42: bnoordhuis: let's wait another 30mins ;-) the box didn't have any vars set, so I was unsure what configure would pick
[14:24] IrishGringo2 has joined the channel
[14:24] dmsuperman has left the channel
[14:25] trose: TheJH, oh socket.io looks like exactly what i need. I couldn't get the example working yesterday when I was playing with it though. It through errors in socket.io.js about not recognizing the require function
[14:28] joshkehn has joined the channel
[14:28] zivester has joined the channel
[14:28] colinclark has joined the channel
[14:30] fsockopen: Anyone knows if there's a max file size limit for file uploads defined by the client browser ? Seems that over 2Gb the form doesn't post anything :|
[14:30] joshkehn: There might be.
[14:30] joshkehn: I wouldn't upload anything over a few hundred mb with a browser anyways.
[14:30] davv3: i doubt it
[14:31] TheJH: trose, were you trying to use require() in the browser? that's not how you're supposed to use it
[14:31] simenbrekken has joined the channel
[14:31] lunetics has joined the channel
[14:32] willwhite has joined the channel
[14:32] BillyBreen has joined the channel
[14:32] trose: TheJH, I'm trying to use socket.io's first example... I modified the script src to point to where socket.io.js is relative to my index.html file. I'm getting errors in console because of it
[14:32] fsockopen: josh I agree with you but I've no other chance ... 
[14:32] trose: TheJH, do i need to also tell the browser where node is? require is a function in node right?
[14:33] Wizek has joined the channel
[14:33] Danielpk: Express dont work with node 0.5.0?
[14:34] paul_k has joined the channel
[14:34] hidden has joined the channel
[14:34] trose: thejh if i don't modify the script src i get "io is not defined; socket = io.connect(url)"
[14:35] ballefrans has joined the channel
[14:36] AAA_awright: trose: What do you need socket.io for again?
[14:37] `3rdEden: trose https://github.com/LearnBoost/Socket.IO/wiki/How-do-I-serve-the-client
[14:37] Venom_X has joined the channel
[14:37] hntrdglss has left the channel
[14:37] er1c_ has joined the channel
[14:38] trose: AAA_awright, I'm running a script and then feeding data back to my client. socket.io would make it really easy to send multiple variables that i could parse into html tags client side
[14:38] balaa has joined the channel
[14:39] hntrdglss has joined the channel
[14:39] hntrdglss has joined the channel
[14:39] trose: `3rdEden, OH so like <script src="localhost:1337/socket.io/socket.io.js">???
[14:41] joshkehn has joined the channel
[14:41] joshkehn has left the channel
[14:41] ksheurs has joined the channel
[14:42] `3rdEden: trose yup
[14:42] archie: bnoordhuis: i  m gettinig error on cofiguring 4.12. the latest error that is not giving me errors is 1.9
[14:42] `3rdEden: http://localhost:1337/socket.io/socket.io.js
[14:43] trose: `3rdEden, fuckin a why didn't the tutorial explain that better?
[14:43] lunetics has joined the channel
[14:43] ceej has joined the channel
[14:43] trose: `3rdEden, thanks a ton
[14:43] bnoordhuis: archie: what error? gist?
[14:43] jstash has joined the channel
[14:43] markwubben has joined the channel
[14:44] scott_gonzalez has joined the channel
[14:44] `3rdEden: trose: glad you got it workin :)
[14:44] trose: :D
[14:45] archie: bnoordhuis: couldnt config a cxx compiler
[14:45] aamir-m: Is comparing node.js with erlang okay or not correct?
[14:45] baudehlo: aamir-m: it's fine if that's what you need to do.
[14:45] bnoordhuis: archie: well, you need to have g++ installed
[14:45] `3rdEden: trose we also have channel #socket.io
[14:46] aaronmcadam: what's the best tools that might use uglify to concatenate and minify js?
[14:46] archie: bnoordhuis: i did check it, when installed the console
[14:46] aamir-m: baudelho: hmmm, I am asking about general purpose network applications...
[14:47] bnoordhuis: archie: what does `g++ -v` say?
[14:47] baudehlo: aamir-m: both have their strengths and weaknesses.
[14:48] sid3k: hi all. is there any way to sort npm results by popularity? I'm looking for the most popular log library. suggestions are welcome
[14:48] aamir-m: hmmm
[14:48] sauirt9 has joined the channel
[14:49] archie: bnoordhuis: things i dont actually understand :D collect_gcc=g++ /n collect_lto_wrapper="directory blah blah
[14:49] sub_pop has joined the channel
[14:49] bnoordhuis: archie: okay, but you do have g++, that's good
[14:49] bnoordhuis: archie: can you run `./configure -v` and gist/pastie the output?
[14:50] aelien27 has joined the channel
[14:51] CarterL has joined the channel
[14:51] lazyshot has joined the channel
[14:51] Frippe has joined the channel
[14:52] archie: bnoordhuis: newby q: how do i copy the output??
[14:52] fatjonny has joined the channel
[14:52] TheNumb: ./configure -v > output.txt
[14:53] inpho has joined the channel
[14:53] TheNumb: archie: ^
[14:53] magnetik_ has joined the channel
[14:54] TheNumb: And then open output.txt
[14:54] sid3k: any ideas/
[14:54] sid3k: ?
[14:54] schwab has joined the channel
[14:56] Remoun has joined the channel
[14:56] thalll has joined the channel
[14:57] kulor-uk has joined the channel
[14:58] sirdancealot has joined the channel
[14:58] __tosh has joined the channel
[15:01] daryn has joined the channel
[15:03] bEEEviz has joined the channel
[15:03] balaa has joined the channel
[15:05] JJMalina has joined the channel
[15:06] CIA-48: node: 03Ben Noordhuis 07 * re0297ca 10/ src/node.cc : node: fix use of potentially uninitialized variable (+5 more commits...) - http://git.io/dUiM0w
[15:08] daryn: i've installed node.js with connect on two different systems using the procedure from the wiki. on the first system using connect.query() works.  on the second system connect.query throws "Object [object Function] has no method 'query'" what am I doing wrong?
[15:08] slifty has joined the channel
[15:08] |sWORDs| has joined the channel
[15:08] sixtus42: bnoordhuis: not responding to TMPDIR :-(
[15:08] archie: TheNumb: output file is always blank...
[15:09] |sWORDs|: how can I send something from node through socket.io when I'm in a different function (outside io.sockets.on('connection'))
[15:11] skm has joined the channel
[15:11] RORgasm has joined the channel
[15:11] |sWORDs|: I have something like io.sockets.on('connection', function(socket){};) but then ofcourse socket is not available from a different function.
[15:12] JasonJS has joined the channel
[15:13] SuMarDi has joined the channel
[15:13] fsockopen: I'm a newbie with node and I can't figure out how can I check if no file to upload has been posted by a form .. anyone can help me ? server: http://pastebin.com/uZFg1T9q  and client (template.html) http://pastebin.com/iZnqzjra .. any help will be appreciated 
[15:13] epsas_: o/win 4
[15:14] Renegade001 has joined the channel
[15:14] icebox has joined the channel
[15:14] sjbreen has joined the channel
[15:15] paul_k has joined the channel
[15:15] tjholowaychuk has joined the channel
[15:15] StanlySoManly has joined the channel
[15:15] tjholowaychuk has joined the channel
[15:16] trose: so my understanding of socket.io is that i can declare variables on the server side ie io = require(socket.io) and access them on the client side... is that right?
[15:17] |sWORDs|: trose, kind of
[15:17] trose: |sWORDs|, like if i want to use formidable i could declare it server side and then use it to parse a form on the client side?
[15:17] deedubs: trose: Not so much.  nowJS does that
[15:18] Glenjamin: trose: it allows you to pass events from client to server, and back again
[15:18] |sWORDs|: deedubs, you can do that with socket.io aswell
[15:18] deedubs: trose: something like https://github.com/visionmedia/express-expose can help you expose functions to your clients 
[15:18] CIA-48: node: 03koichik 07 * ra09b747 10/ (lib/child_process.js test/simple/test-child-process-fork.js): 
[15:18] CIA-48: node: child_process.fork: don't modify args
[15:18] CIA-48: node: Fixes #1888. - http://git.io/peMrtQ
[15:19] heavysixer has joined the channel
[15:19] trose: i want to have a simple file input form client side so i can parse the text out and send it all to the server
[15:20] deedubs: trose: you want to parse the text out client side?
[15:20] yhahn has joined the channel
[15:20] |sWORDs|: But does no one know how to send something with socket.io outside of the .on('connection', function(socket){};)
[15:21] |sWORDs|: I really need to send something from a different function
[15:21] herbySk has joined the channel
[15:21] kurtzhong has joined the channel
[15:21] trose: deedubs, well you can't just send the file through socket.io right? it doesn't support binary like that i thought
[15:21] pickels_ has joined the channel
[15:21] deedubs: trose: right you'll have to post it to the server
[15:21] trose: k\
[15:22] Glenjamin: if you encode it suitably, there's no reason you can't send it via the socket
[15:22] Glenjamin: whether or not thats a good idea is a different question
[15:22] trose: ^_^
[15:22] deedubs: provided the client browser supports the file api
[15:22] qawdgj has joined the channel
[15:23] Glenjamin: good point
[15:23] EyePulp has joined the channel
[15:23] dubenstein has joined the channel
[15:24] trose: okay so in the formidable example they are using an if( req.url == '/upload') then parsing the request.... socket.io seems to be using io.of('/upload') instead
[15:25] deedubs: trose: your file uploading and socket.io will be mostly independent 
[15:25] trose: mmm i see
[15:25] qawdgj has joined the channel
[15:26] futini has joined the channel
[15:26] caolanm has joined the channel
[15:27] cjm has joined the channel
[15:28] jetienne has joined the channel
[15:29] sixtus42: bnoordhuis: the compile seems to ignore TMPVAR and /tmp is locked down to 8mb which is too small. Any idea? Does cross compile work by now?
[15:29] CrisO has joined the channel
[15:29] pickels_ has joined the channel
[15:30] uchuff has joined the channel
[15:30] bnoordhuis: sixtus42: no, cross-compiling doesn't work (reliably anyway)
[15:31] bnoordhuis: sixtus42: but it mostly works with --without-snapshot
[15:31] bnoordhuis: sixtus42: alternatively, you can compile in a scratchbox
[15:31] Morkel has joined the channel
[15:32] sixtus42: bnoordhuis: oh the pain. that's why I resorted to compiling on the device. Just that "for security reasons" root can't remount /tmp
[15:32] sixtus42: ACTION sigh
[15:32] CrisO has left the channel
[15:34] ninjapig has joined the channel
[15:34] balaa has joined the channel
[15:35] ayaz has joined the channel
[15:35] chrislorenz has joined the channel
[15:36] jakehow has joined the channel
[15:38] grekko has joined the channel
[15:38] sonnym has joined the channel
[15:39] yhahn has left the channel
[15:39] Spion has joined the channel
[15:41] massivebiz has joined the channel
[15:42] Skola has joined the channel
[15:42] Destos has joined the channel
[15:45] wilmoore has joined the channel
[15:46] jhurliman has joined the channel
[15:47] Cromulent has joined the channel
[15:50] alvaro_o has joined the channel
[15:51] aheckmann has joined the channel
[15:51] d0k has joined the channel
[15:53] postwait has joined the channel
[15:54] cjm has joined the channel
[15:54] baudehlo: tjholowaychuk: what's the status of cluster with node 0.5.HEAD?
[15:55] tjholowaychuk: baudehlo: I have this patch so that node's cluster can facilitate similar functionality https://github.com/joyent/node/pull/1879
[15:55] tjholowaychuk: ryan (and myself) are not huge fans of the --require thing
[15:55] tjholowaychuk: but the only alternative i can think of is to special-case some file to load
[15:56] tjholowaychuk: which is usually what people do anyway with ./{app,server}.js
[15:56] tjholowaychuk: or similar
[15:56] Poetro has joined the channel
[15:56] tjholowaychuk: but both are kinda "meh" solutions
[15:56] githogori has joined the channel
[15:56] baudehlo: oh HEAD now does the -n CPUs thing?
[15:56] tjholowaychuk: kinda
[15:56] tjholowaychuk: you cant specify the # of workers
[15:57] tjholowaychuk: without that patch
[15:57] Skola has joined the channel
[15:57] baudehlo: hmm
[15:57] baudehlo: ACTION tries to find docs
[15:57] HT has joined the channel
[15:57] bEEEviz has joined the channel
[15:57] tjholowaychuk: basically withotu that all you can do is
[15:57] tjholowaychuk: $ node cluster script
[15:58] baudehlo: what will that do?
[15:58] digman543 has joined the channel
[15:59] tjholowaychuk: spawns the workers and does the fd passing for you
[15:59] baudehlo: oh ok, that's cool.
[15:59] Glenjamin: tjholowaychuk: the general approach to --require, or the name of it?
[15:59] Glenjamin: (that you dislike)
[15:59] tjholowaychuk: Glenjamin bit of both i guess
[15:59] smathy has joined the channel
[15:59] ninjapig has joined the channel
[16:00] tjholowaychuk: and special-casing a filename like ./cluster.js or something is lame
[16:00] michaeldeol has joined the channel
[16:00] gregmoreno has joined the channel
[16:00] baudehlo: so from 0.6 onwards, cluster will just do the plugin stuff?
[16:01] Glenjamin: what's the use-case for cluster?
[16:01] tjholowaychuk: maybe yeah if the core stuff is extensible enough
[16:01] Glenjamin: i assume it spins up n x script, but how would you decide what port they listen on etc
[16:01] tjholowaychuk: Glenjamin utilizing cores
[16:01] jerrysv has joined the channel
[16:01] context: glenjamin: it cluster's node processes
[16:01] context: like a cluster lizard
[16:01] jaminja has joined the channel
[16:01] jaminja has joined the channel
[16:01] Glenjamin: but once you have a cluster of nodes, you need some way to talk to them
[16:02] baudehlo: so node 0.5.10-pre is even faster than 0.4.12
[16:02] jemendja has joined the channel
[16:02] Wizek has joined the channel
[16:02] baudehlo: Glenjamin: parent process listens on a port (as you code it, like in regular node), passes the fd to the children.
[16:03] baudehlo: Node 0.4.x: 5880 mails/sec
[16:03] Glenjamin: this is part of core, or that'd be the use-case for --require ?
[16:03] baudehlo: Node 0.5.x: 6410 mails/sec
[16:03] tjholowaychuk: Glenjamin you need some way to define logic for the master process
[16:03] hwinkel has joined the channel
[16:03] tjholowaychuk: currently you cannot do anything
[16:03] langworthy has joined the channel
[16:03] tjholowaychuk: so you cant add logic to re-spawn works on SIGCHLD etc
[16:03] tjholowaychuk: workers*
[16:03] Glenjamin: yeah, thats what i'm getting at
[16:03] vipaca has joined the channel
[16:03] vipaca has joined the channel
[16:04] Glenjamin: should this be something thats part of core then? sounds like it could benefit from faster iterations
[16:04] bnoordhuis: baudehlo: and there's still a number of optimizations that haven't made it in
[16:04] tjholowaychuk: node could just do that for you but I dont think that's the right level
[16:04] tjholowaychuk: too opinionated
[16:04] skm has joined the channel
[16:04] Glenjamin: and how it compares to just using nginx
[16:04] tjholowaychuk: and there are so many things you could do
[16:04] Glenjamin: or <insert load balancer here>
[16:04] balaa has joined the channel
[16:05] baudehlo: bnoordhuis: nice. Such as?
[16:05] Glenjamin: is the speedup due to core changes, or newer v8, or both?
[16:06] bnoordhuis: baudehlo: squashing multiple string writes into a single write wcall
[16:06] bnoordhuis: *call
[16:06] context: baudehlo: actually i thought all children listened on the same fd
[16:06] pizthewiz has joined the channel
[16:06] context: or i read what you said wrong :x
[16:06] bnoordhuis: Glenjamin: it's mostly due to hard work and blood, sweat and tears
[16:06] diogogmt has joined the channel
[16:06] HT has joined the channel
[16:06] context: glenjamin: node is single threaded... it cant run on multiple cores. thus running multiple processes for multiple cores...
[16:07] bnoordhuis: Glenjamin: but in all seriousness, a lot of time and effort has been spent on thinking things through and benchmarking
[16:07] baudehlo: bnoordhuis: ok that'd be nice. Though I don't think it'd make inbound SMTP any faster (the writes are single strings).
[16:07] magnetik__ has joined the channel
[16:07] Glenjamin: i get the concept of running n x node processes, I'm just not really seeing how a core module can effectively cover the use-cases of managing said workers
[16:07] baudehlo: well, node is currently single threaded... W16 looks really interesting.
[16:07] context: i should play with haraka. end up replacing postfix at work :/
[16:08] tjholowaychuk: Glenjamin yeah exactly, that's the problem
[16:08] tjholowaychuk: the tight integration with core
[16:08] Glenjamin: making it extensible seems to be a good starting point
[16:08] tjholowaychuk: makes a few things significantly nicer
[16:08] broofa has joined the channel
[16:08] tjholowaychuk: BUT it has to be extensible
[16:08] dexter_e has joined the channel
[16:08] Glenjamin: s/--require/--master/ might make the intention clearer
[16:08] baudehlo: I kinda feel like "node cluster" was a bit of an overreaction to the flamewar.
[16:09] tjholowaychuk: kinda yeah, i had the same reaction
[16:09] murilobr has joined the channel
[16:09] tjholowaychuk: the integration is nice though, there are some things that could not have been done otherwise
[16:09] tjholowaychuk: so im +1 for that
[16:09] baudehlo: such as?
[16:09] Glenjamin: you know what would be cool in core. A simple in-memory datastore that allocates outside the heap
[16:10] tjholowaychuk: for example with learnboost/cluster the master process would be the initial script and the worker(s)
[16:10] guillermo has joined the channel
[16:10] tjholowaychuk: so it caused a lot of gotchas and confusion for peope
[16:10] tjholowaychuk: with this it only exec()s the script for workers
[16:10] tjholowaychuk: which is more what people expect
[16:10] tjholowaychuk: you can also use several http servers per worker
[16:10] baudehlo: gotcha, yeah the dichotomy was a bit confusing at first.
[16:11] baudehlo: but I could run init_master and init_child hooks nicely with it.
[16:11] baudehlo: now I can't.
[16:11] spicycode has joined the channel
[16:11] tjholowaychuk: yeah that's the part that sucks
[16:11] baudehlo: context: you probably can't entirely replace postfix - you'd still want it for end-user delivery.
[16:11] tjholowaychuk: and without something more opinionated like the second  example there
[16:11] baudehlo: Haraka doesn't do that bit.
[16:11] tjholowaychuk: you cant really modularize things
[16:12] tjholowaychuk: which also sucks, but that's far too opinionated for core
[16:12] markdaws has joined the channel
[16:12] Glenjamin: tjholowaychuk: this pull req doesn't include a way to pass the main context to the --require module. is that intentional?
[16:12] qawdgj has joined the channel
[16:13] tjholowaychuk: Glenjamin not really, I just found the internal module stuff really messed up
[16:13] tjholowaychuk: definitely open to suggestions
[16:13] overra has joined the channel
[16:13] ecthiender has joined the channel
[16:13] Glenjamin: i'm trying to think what the most general case would be...
[16:13] CrisO has joined the channel
[16:14] heavysixer has joined the channel
[16:14] context: baudehlo: :x
[16:14] spicycode has left the channel
[16:14] ryanolds_wrap has joined the channel
[16:15] tjholowaychuk: Glenjamin re-spawning, unified logging, cluster REPLs for management, graceful shutdown/restart logic etc
[16:16] baudehlo: tjholowaychuk: can you just get cluster working in 0.5.x without using "node cluster" ?
[16:16] tjholowaychuk: not easily now
[16:16] tjholowaychuk: no fd passing etc
[16:16] baudehlo: how come?
[16:16] baudehlo: Oh crap. That's annoying they removed that.
[16:16] tjholowaychuk: maybe i could work it in somehow im not sure i havent looked into it
[16:16] tjholowaychuk: but it's kinda lame to have half the logic in core
[16:16] baudehlo: C++ extension maybe
[16:16] tjholowaychuk: and then some other project
[16:17] baudehlo: well... there's lots of cases where core does something simple, and extensions provide a much more advanced version.
[16:17] Glenjamin: i think realistically cluster in core has to either provide loads of extensibility entry points, or be extremely simple and dumb
[16:17] Margle has joined the channel
[16:18] elsig has joined the channel
[16:19] aconbere has joined the channel
[16:21] franciscallo has joined the channel
[16:21] pickels_ has joined the channel
[16:21] Tobsn has joined the channel
[16:21] zmbmartin has joined the channel
[16:22] xsyn has joined the channel
[16:22] japj has joined the channel
[16:23] CIA-48: node: 03koichik 07 * r19a8553 10/ (6 files in 4 dirs): 
[16:23] CIA-48: node: tls: requestCert unusable with Firefox and Chrome
[16:23] CIA-48: node: Fixes #1516. - http://git.io/oWKR9g
[16:23] isaacs has joined the channel
[16:25] Skola has joined the channel
[16:25] criswell has joined the channel
[16:26] ceej has joined the channel
[16:26] JakeyChan has joined the channel
[16:27] metellus has joined the channel
[16:29] padolsey has joined the channel
[16:30] creationix|work has joined the channel
[16:30] padolsey: Hi. I have a question. Nginx passes dynamic requests through to Node.js .. Is there a standard way for Node.js to give those requests BACK to nginx to handle statically? 
[16:31] padolsey: I hope I haven't asked in the wrong place.
[16:31] EyePulp: padolsey: not really - you should intercept static requests with your nginx conf to begin with.
[16:31] hidden has joined the channel
[16:31] maletor has joined the channel
[16:31] issackelly_ has joined the channel
[16:31] jaminja has joined the channel
[16:31] jaminja has joined the channel
[16:32] padolsey: EyePulp, I do, mostly. But it would be nice to return a request to nginx when my Node.js app determines that it's just a static file... 
[16:33] ronnieboy has joined the channel
[16:33] baudehlo: use micro caching in nginx
[16:33] padolsey: I'm doing this backwards, I know
[16:33] baudehlo: or return a redirect and have nginx handle the redirect instead of passing it back to the client.
[16:33] padolsey: Like this? - http://serverfault.com/questions/30705/how-to-set-up-nginx-as-a-caching-reverse-proxy
[16:34] thisandagain has joined the channel
[16:34] padolsey: baudehlo, I like the idea of returning a redirect. Thanks
[16:34] hidden has left the channel
[16:34] baudehlo: http://fennb.com/microcaching-speed-your-app-up-250x-with-no-n
[16:35] balaa has joined the channel
[16:36] nibblebo_ has joined the channel
[16:36] sjbreen has left the channel
[16:36] padolsey: Never heard of micro-caching before. Very cool idea!
[16:36] gxdssoft has joined the channel
[16:37] aaronmcadam: just tried using smoosh, it's cool :D nice colourful console :D
[16:37] TheJH has joined the channel
[16:37] kenperkins has joined the channel
[16:37] aaronmcadam: padolsey: good man, I've been a fan of ur blog for a while :D source viewer rocks :D
[16:38] gut4 has joined the channel
[16:39] DennisRasmussen has joined the channel
[16:39] irahgel has left the channel
[16:39] padolsey: aaronmcadam, thanks! Sucks that Firefox Function.prototype.toString doesn't give comments through ... source viewer tends to be more effective in browsers that do.
[16:39] aaronmcadam: really?
[16:40] aaronmcadam: are u taking bout chrome?
[16:40] tjholowaychuk: FF does a lot of messed up things
[16:40] baudehlo: does enabling process.on('uncaughtException') have any performance hit ?
[16:40] jaequery has joined the channel
[16:41] padolsey: I don't know what other browsers give original code+comments in Func.toString, but Chrome sure is one of them.
[16:41] aaronmcadam: nice
[16:41] aaronmcadam: whatabout that standard people are working on based on code comments
[16:41] aaronmcadam: or am i talkin bout somethin different
[16:43] padolsey: You mean that Func.docs thing.. I think I read that somewhere. Returns an array of comments or something.
[16:43] gr-eg has joined the channel
[16:43] aaronmcadam: it was for languages like coffeescript n stuff 
[16:43] aaronmcadam: yeah i think
[16:45] Aphelion has joined the channel
[16:45] harthur has joined the channel
[16:46] Glenjamin: Function.prototype.toString returns comments on v8?
[16:46] Glenjamin: thats mental
[16:46] Dreamer3 has joined the channel
[16:47] padolsey: Yup, while FF (spiderMonkey) gives its *OPTIMIZED* stuff. 
[16:47] padolsey: Maybe V8 is the only one that does it the awesome way
[16:47] baudehlo: process.on('exit') doesn't get called if there's an exception. Also it should get passed the exit code.
[16:48] herbySk has joined the channel
[16:48] Carter has joined the channel
[16:48] padolsey has left the channel
[16:48] HT_ has joined the channel
[16:49] patcito has joined the channel
[16:49] JasonJS has joined the channel
[16:49] qawdgj has left the channel
[16:49] Qbix1 has joined the channel
[16:51] mike5w3c_ has joined the channel
[16:51] fmeyer has joined the channel
[16:52] raphdg has joined the channel
[16:53] trotter has joined the channel
[16:54] dshaw_ has joined the channel
[16:54] nibblebot has joined the channel
[16:55] heycarsten has joined the channel
[16:56] kenperkins: morning
[16:57] Twelve-60` has joined the channel
[16:57] Danielpk: I trying to run a test scriupt that i get from GitHub.. but i get this error http://pastebin.com/dwPKvkfS 
[16:57] pixel13 has joined the channel
[16:57] pixel13 has left the channel
[16:57] heycarsten has left the channel
[16:57] Danielpk: i googled and some ppl say that connect isnt installed.. so i instaled it but not fixed.. any tip?
[16:58] brannig_an has joined the channel
[16:58] Morkel has joined the channel
[16:58] towski has joined the channel
[16:58] jzacsh has joined the channel
[16:58] jzacsh has joined the channel
[16:58] aguynamedben has joined the channel
[17:01] TheJH: Danielpk, what does "node -v" say?
[17:01] Danielpk: TheJH:  i was runnig 0.5 version.. but i downgrade to v0.4.12
[17:01] aaronmcadam: Danielpk: using nvm?
[17:01] TheJH: Danielpk, is that the output of the 0.4.12 version?
[17:01] trotter_ has joined the channel
[17:02] Danielpk: TheJH: yes.. it is the output...
[17:02] Danielpk: aaronmcadam: i compiled.
[17:02] jbpros has joined the channel
[17:02] euforic has joined the channel
[17:02] TheJH: Danielpk, can you paste the output of "npm ls"?
[17:03] fbartho has joined the channel
[17:03] Danielpk: TheJH:  sure.. http://pastebin.com/LUmHZHSr
[17:03] JJMalina has joined the channel
[17:04] flagg0204 has joined the channel
[17:04] TheJH: Danielpk, maybe run "npm update" and then try again?
[17:04] TheJH: !npm info express
[17:05] Vertice has joined the channel
[17:05] Danielpk: TheJH: let me try
[17:05] TheJH: huh?
[17:05] chance- has joined the channel
[17:05] TheJH: !admin eval "test"
[17:05] jhbot: test
[17:05] balaa has joined the channel
[17:05] TheJH: !npm info express
[17:05] TheJH: !npm prop express version
[17:06] TheJH: !admin eval process.exit()
[17:06] jhbot has joined the channel
[17:06] Danielpk: TheJH: i think it worked.. coz now app return error and not a module.. thx for help.. again xD
[17:06] jhbot has joined the channel
[17:06] TheJH: !npm prop express version
[17:06] jhbot: property is not defined
[17:07] TheJH: !npm info express
[17:07] jhbot: express by TJ Holowaychuk, version 2.4.7: Sinatra inspired web development framework
[17:07] TheJH: :)
[17:07] agnat has joined the channel
[17:10] tuhoojabotti: Hello
[17:10] CrisO has joined the channel
[17:10] thalll has joined the channel
[17:11] aaronmcadam: oh nice
[17:13] lz: -_ - my cofounder got his iphone 4s http://www.youtube.com/watch?v=1WAFOKjOqfQ
[17:13] eignerchris has joined the channel
[17:13] d0k has joined the channel
[17:13] TooTallNate has joined the channel
[17:15] dgathright has joined the channel
[17:17] _th_n_ has joined the channel
[17:22] jtrudeau has joined the channel
[17:22] Destos has joined the channel
[17:23] swick has left the channel
[17:23] Vennril has joined the channel
[17:26] rendar has joined the channel
[17:26] patrickgamer has joined the channel
[17:26] patrickgamer has left the channel
[17:27] CrisO has left the channel
[17:29] AvianFlu has joined the channel
[17:30] vidi has joined the channel
[17:31] hntrdglss has joined the channel
[17:32] cruxst has joined the channel
[17:32] TheFuzzball has joined the channel
[17:34] aguynamedben_ has joined the channel
[17:34] magnetik__ has joined the channel
[17:35] nibblebo_ has joined the channel
[17:35] trotter has joined the channel
[17:35] uchuff has joined the channel
[17:35] slifty has joined the channel
[17:35] balaa has joined the channel
[17:37] mandric has joined the channel
[17:37] mraleph has joined the channel
[17:37] hdon: can anyone recommend the best npm package for doing web socket server?
[17:37] isaacs: hdon: if you think you want web sockets, you probably actually want socket.io
[17:38] hdon: isaacs, isn't that the google thing that comes with client and server libs?
[17:38] isaacs: hdon: it's not a google thing.  it's a learnboost thing.
[17:38] isaacs: but yes.
[17:38] isaacs: has client and server.
[17:38] isaacs: totally awesome.
[17:38] murilobr has joined the channel
[17:38] mafintosh has joined the channel
[17:38] hdon: isaacs, looks pretty straight-forward. i'll use this
[17:38] isaacs: gives you a node-style stream thingie on both ends, and you can just send messages back and forth
[17:39] hdon: ACTION nods
[17:39] isaacs: under the hood, it uses ws, or flash, or xhr comet, or xhr long-polling, or xhr short-polling
[17:39] AvianFlu: isaacs: I was able to install npm on windows this morning without any errors.  good work.
[17:39] chance-: http://socket.io/
[17:39] chance-: ah
[17:39] chance-: nm
[17:39] chance-: someone beat me to it
[17:39] isaacs: AvianFlu: !:)!:D
[17:39] isaacs: hooray
[17:40] isaacs: AvianFlu: now just have to get off of bsdtar.exe, and provide a one-line install command.
[17:40] AvianFlu: yeah, my windows pessimism was seriously shocked out of me for a few minutes
[17:40] isaacs: AvianFlu: don't worry, it'll return soon, i'm sure ;)
[17:40] AvianFlu: I mean, it's windows, installing anything important usually takes ten steps
[17:40] isaacs: bbiab
[17:40] wookiehangover: pet project show and tell: https://github.com/wookiehangover/underscore.Deferred
[17:40] DarkGrey has joined the channel
[17:41] wookiehangover: jQuery style deferreds as an underscore module
[17:41] tbranyen: wookiehangover: thats lovely :3
[17:42] wookiehangover: tbranyen: <3
[17:42] gxdssoft has joined the channel
[17:45] abraxas has joined the channel
[17:49] c4milo has joined the channel
[17:49] fzzzy has joined the channel
[17:49] djbell has joined the channel
[17:51] TheJH_phone has joined the channel
[17:51] TheJH_phone has joined the channel
[17:51] shykes_ has joined the channel
[17:51] hotch has joined the channel
[17:52] stagas has joined the channel
[17:54] vinkaga has joined the channel
[17:54] Ozymandus has joined the channel
[17:55] `3rdEden has joined the channel
[17:55] hdon: what's the npm equivalent of dpkg -L ?
[17:55] wankdanker has joined the channel
[17:56] vinkaga: Hello, what's best way to transfer geolocation (lat/long) to server and add to the experss session? 
[17:57] baudehlo: hdon: ls -lR node_modules/<package> ? ;-)
[17:57] hdon: hmm, thanks
[17:57] hdon: ACTION wonders where his node_modules path is
[17:58] nibblebot has joined the channel
[17:59] baudehlo: in your project directory
[17:59] geekbuntu has joined the channel
[18:05] hdon: can anyone tell me where to get socket.io client libs?
[18:05] hdon: oh, github i guess
[18:05] fangel has joined the channel
[18:05] cafesofie: https://github.com/learnboost/socket.io-client
[18:06] ayaz has joined the channel
[18:06] AvianFlu: if it's node, and you want to know where to get it, either check search.npmjs.org or github
[18:06] Druid_ has joined the channel
[18:06] AvianFlu: if it's a node project I mean
[18:06] perezd has joined the channel
[18:06] cafesofie: i think 'npm install socket.io' hides a client library in it somewhere as well
[18:06] cafesofie: or it did a couple of months ago
[18:07] Tprice: im looking to build a large no app using requirejs any tips on this?
[18:07] EvRide has joined the channel
[18:07] hdon: cafesofie, well according to the example code on http://socket.io/, it looks like socket.io node module will respond to HTTP GET requests for /socket.io/socket.io.js
[18:08] hdon: but i didn't want my websocket server to run on the same port as my HTTP server because my HTTP server is apache, and i am disinclined toward using another port to serve the user interface to the user's web browser
[18:08] casper_ has joined the channel
[18:08] AvianFlu: apache can't handle websockets
[18:08] hdon: ACTION sighs
[18:08] cafesofie: here's a question: does socket.io actually use, like, websockets? because i was using it yesterday and it seemed to do everything over HTTP, and i couldn't even get WebSocket or MozWebSocket to work with go's impementation
[18:09] AvianFlu: but also, a websocket connection IS an http connection when it starts
[18:09] AvianFlu: cafesofie, yes, but it also has fallbacks
[18:09] AvianFlu: so you may have been seeing XHR or something
[18:09] hdon: AvianFlu, i only mean that i have apache running, and that's what visitors will connect to when they get to the page. that page then can use socket.io to talk to the socket.io websockets server on another port, right?
[18:09] vesln has joined the channel
[18:09] brianloveswords has joined the channel
[18:09] pixel13 has joined the channel
[18:09] hdon: does.. socket.io not support non-port 80?
[18:09] pixel13 has left the channel
[18:09] AvianFlu: you can use it on any port you want
[18:10] `3rdEden: hdon https://github.com/LearnBoost/Socket.IO/wiki/How-do-I-serve-the-client
[18:10] cafesofie: i'm assuming the websocket spec is still wonky and there are issues with new firefox/chrome
[18:10] hdon: `3rdEden, cool thanks :)
[18:10] AvianFlu: you just won't be able to use websockets over the apache connection
[18:10] hdon: oh
[18:10] hdon: `3rdEden, yeah i just figured this much out
[18:10] hdon: i guess though there's no harm in doing it this way!
[18:11] hdon: AvianFlu, that's not my plan at all, i'm just communicating poorly, apparently. no worries
[18:11] AvianFlu: I'm just clarifying where the actual issues would be, what you're doing should be okay
[18:11] hdon: ACTION nods
[18:11] seebees has left the channel
[18:11] seebees has joined the channel
[18:11] CarterL has joined the channel
[18:11] jsurfer has joined the channel
[18:11] creationix|work has joined the channel
[18:12] AAA_awright_ has joined the channel
[18:12] mbthomas has joined the channel
[18:13] trose: :((( my formidable/ socket.io mashup doesn't want to work right 
[18:13] hdon: `3rdEden, AvianFlu: any idea how i tell io.connect() what port to connect to the server on? can i just http://hostname:port ?
[18:14] `3rdEden: yes that will work
[18:14] hdon: cool thanks
[18:15] hdon: are there connection life-cycle events on the client side?
[18:15] hdon: like, connect, disconnect, etc.
[18:15] davidwalsh has joined the channel
[18:15] eee_c has joined the channel
[18:16] taf2 has joined the channel
[18:19] mbthomas: I'm have an odd, difficult to reproduce issue with cluster.  Has anyone seed cluster hang while emitting this error message thousands if times "WARNING sent kill(SIGKILL) to all workers"  ?
[18:19] isaacs has joined the channel
[18:19] c4milo has joined the channel
[18:20] githogori has joined the channel
[18:21] maushu has joined the channel
[18:21] herbySk has joined the channel
[18:21] tjholowaychuk: mbthomas it should bail
[18:21] tjholowaychuk: but it's most likely you have a syntax error or similar
[18:22] mbthomas: Yeah -- it's weird that it seems like it's a tight loop of that error message.
[18:22] mbthomas: and only happens after the server has been running for quite a while
[18:23] tjholowaychuk: hmm perhaps the app's state gets twisted
[18:23] tjholowaychuk: and you end up with consistent errors
[18:23] tjholowaychuk: so it's trying to recover
[18:24] balaa has joined the channel
[18:24] nibblebo_ has joined the channel
[18:24] shykes__ has joined the channel
[18:26] mbthomas: Makes sense.  I''ll see if I can fuzz my app and see what it is that put it into that state.
[18:26] kulor-uk has joined the channel
[18:28] bshumate has joined the channel
[18:28] bshumate has joined the channel
[18:28] tjholowaychuk: I've only personally seen that at boot (syntax errors usually) so cluster will bail but that woudl be my guess
[18:28] langworthy has joined the channel
[18:28] baudehlo: what do people use for daemonizing node scripts these days?
[18:29] harthur has joined the channel
[18:29] distorx has joined the channel
[18:29] aheckmann has joined the channel
[18:29] distorx: hi 2 all
[18:30] robhawkes has joined the channel
[18:30] distorx: why some plugins run well in gvim and not in vim (win7)?
[18:30] baudehlo: because windows is a nightmare? ;-)
[18:31] distorx: lol any sugestions?
[18:32] baudehlo: Buy Sublime Text 2
[18:32] cafesofie: run a linux vm
[18:32] distorx: also vim is only reading from c:\ the _vimrc not from my from my users directory any way to change that?
[18:32] shykes_ has joined the channel
[18:33] jomoho has joined the channel
[18:33] baudehlo: see above advice :)
[18:34] Cromulent has joined the channel
[18:35] kickingvegas has joined the channel
[18:36] artemma has joined the channel
[18:36] slifty has joined the channel
[18:36] Druid_ has joined the channel
[18:37] shykes__ has joined the channel
[18:37] distorx has left the channel
[18:38] tlynn has joined the channel
[18:38] slifty_corsair has joined the channel
[18:38] d0k_ has joined the channel
[18:39] creationix has left the channel
[18:40] langworthy has joined the channel
[18:40] jackyyll has joined the channel
[18:41] fmeyer has joined the channel
[18:41] dshaw_ has joined the channel
[18:41] TRUPPP: i guess some of yuo know this tutorial: http://howtonode.org/express-mongodb
[18:42] TRUPPP: i worked through it and everything works so far but adding a comment :S if its a popular error in this guide, do you know the solution?
[18:43] AvianFlu has joined the channel
[18:43] TRUPPP: the error is, that a method from an object is missing but i looked through the code and couldn't find the mistake :S
[18:49] cjm has joined the channel
[18:52] stagas has joined the channel
[18:54] balaa has joined the channel
[18:57] matyr has joined the channel
[18:58] tmedema has joined the channel
[18:58] __tosh has joined the channel
[18:58] eignerchris_ has joined the channel
[19:00] dnyy has joined the channel
[19:01] Ang3 has joined the channel
[19:01] saesh has joined the channel
[19:01] vidi has joined the channel
[19:03] aconbere has joined the channel
[19:04] dreamdust has joined the channel
[19:05] wmage has joined the channel
[19:06] mcluskydodallas has joined the channel
[19:07] stonebranch has joined the channel
[19:07] jhurliman has joined the channel
[19:09] nibblebot has joined the channel
[19:11] bloudermilk has joined the channel
[19:12] sechrist: "Sublime Text 2 may be downloaded and evaluated for free, however a license must be purchased for continued use. There is currently no enforced time limit for the evaluation."
[19:13] sechrist: hmm, that's really neat
[19:14] AvianFlu has joined the channel
[19:14] guillermo has joined the channel
[19:14] ph^ has joined the channel
[19:15] mbthomas has joined the channel
[19:15] jbpros has joined the channel
[19:16] schwab has joined the channel
[19:17] mbthomas has joined the channel
[19:17] trose: if i have post data from a form is it safe to just do req.on('data', ....) ?
[19:17] markwubben has joined the channel
[19:18] _th_n_ has joined the channel
[19:19] Kami_ has joined the channel
[19:19] TheJH: trose, yes, but there might be multiple data events that only give you chunks of the data
[19:20] TheJH: trose, buffer on data, work with it on end unless you can work on a stream
[19:22] trose: TheJH, okay. I'm just getting frustrated. I've figured out formidable and socket.io but combining them is resulting in a whole lot of nothing atm
[19:22] hwinkel has joined the channel
[19:23] EyePulp: isn't formidable a file upload tool?
[19:24] TheJH: trose, what is so complicated about combining them?
[19:24] balaa_ has joined the channel
[19:25] davidwalsh has joined the channel
[19:26] langworthy has joined the channel
[19:26] whitman has joined the channel
[19:27] jaminja has joined the channel
[19:27] jaminja has joined the channel
[19:27] trose: TheJH, if I knew I wouldn't be having this problem haha. I've got a server that is feeding out a file input form if you go to index then it is supposed to read the request from post and run it through a script and pipe the script's output through socket.io. It worked grand before I incorporated the socket stuff. I think there is an issue with all the nesting that is happening. In order to have the connection socket I had to nest all the formidable cod
[19:27] trose: e inside of a call to io.sockets.on(....
[19:27] trose: TheJH, i could paste it online if you're interested
[19:28] TheJH: trose, I'd have a look
[19:28] __tosh has joined the channel
[19:29] trose: h/o a sec...
[19:29] trose: TheJH, http://paste2.org/p/1717983
[19:29] ehedenst has joined the channel
[19:30] trose: currently nothing inside of the form.addlistener call is working...
[19:30] xy has joined the channel
[19:31] TheJH: trose, unrelated, but you'll have hanging requests if anyone requests urls different from /upload, /index and /
[19:31] TheJH: trose, e.g. you have nothing that will end the responses
[19:31] mandric has joined the channel
[19:31] chance- has joined the channel
[19:31] trose: TheJH, I plan to fix that, i'm just hacking this together to get the part i want to work done ;-)
[19:32] TheJH: trose, when someone connects via socket.io before you handled the POST, you have a problem
[19:33] TheJH: trose, you even have a problem as soon as the second user tries to connect via socket.io
[19:33] trose: huh...
[19:33] abraxas has joined the channel
[19:34] `3rdEden: and you have memory leaks because you will be adding listeners on each request
[19:34] descipher has joined the channel
[19:34] sub_pop has joined the channel
[19:34] TheJH: trose, `io.sockets.on('connection'` adds a persistent, global handler for all following socket.io connections
[19:35] TheJH: trose, you only want that line to be called exactly once
[19:35] enmand__ has joined the channel
[19:35] trose: okay
[19:36] trose: so can i solve the issue by somehow feeding the data from my form through socket.io instead of post?
[19:36] TheJH: trose, you should do that file upload with the usual form, just like you're doing it
[19:37] TheJH: trose, you can e.g connect socket.io and http connections by giving the client a cookie. it automatically sends it for the http request. and for socket.io, just send it via javascript over socket.io
[19:37] TheJH: `3rdEden, is there a module or so for that?
[19:39] Shrink has joined the channel
[19:40] jpdery has joined the channel
[19:41] shykes_ has joined the channel
[19:42] mbthomas has joined the channel
[19:44] aef_ has joined the channel
[19:46] `3rdEden: TheJH there actually was  discussion about this on the google groups a couple days ago
[19:46] mbthomas has joined the channel
[19:46] `3rdEden: TheJH trose http://groups.google.com/group/socket_io/browse_thread/thread/350350a46a1b5c44
[19:47] jtsnow has joined the channel
[19:47] Michael has joined the channel
[19:49] trose: `3rdEden, i like the way this guy does test data
[19:49] trose: haha
[19:49] mbthomas has joined the channel
[19:49] trose: 'hi i will fuck your mind'
[19:50] `3rdEden: =]
[19:50] tuhoojabotti: well hi there.
[19:50] digman543 has joined the channel
[19:51] okCPU has joined the channel
[19:51] brianc: tjholowaychuk: you there?
[19:52] fangel has joined the channel
[19:52] NetRoY has joined the channel
[19:52] slifty has joined the channel
[19:52] zmbmartin has left the channel
[19:52] balaa has joined the channel
[19:54] cafesofie has joined the channel
[19:55] Kwong has joined the channel
[19:58] TRUPPP: How can i accsess an iframe-element with node? in normal js i simply could write window.iframe['iframe1']; but in node it doesnt work :(
[19:58] EyePulp: node is on the server.  are you using a module of some sort?  
[19:59] TRUPPP: express
[19:59] wilmoore has joined the channel
[19:59] TRUPPP: i thought i read something, that node could simulate the windows object
[19:59] TRUPPP: *window
[20:00] EyePulp: TRUPPP: node doesn't natively, but there are modules that let you make like you've got the DOM on the server side.
[20:00] TRUPPP: okay sounds good
[20:00] TRUPPP: do you know their names? :S
[20:00] TRUPPP: :D
[20:01] EyePulp: js-dom I think
[20:01] TRUPPP: okay thanks a lot! =)
[20:04] chjj: Aikar: you have the biggest PS1 i've ever seen, ever
[20:05] tylerstalder has joined the channel
[20:07] Aikar: chjj: lol :P commands on next line so it doesnt matter!
[20:07] chjj: i know, i kind of have that setup too, i just put, username, wd, and git branch on the first line though
[20:07] jbpros has joined the channel
[20:07] chjj: Aikar: much smaller!
[20:10] Aikar: chjj: i find time to be nice, and since im not actually putting cmd on that line, why not space it out for readability :P
[20:10] Aikar: and host is a neccessity
[20:10] Aikar: unless you only have 1 terminal/server open at a time :P
[20:10] djazz has joined the channel
[20:11] Aikar: and i trimmed the dashes to just -- on work hosts
[20:11] Aikar: i need to do that to home
[20:12] _th_n has joined the channel
[20:13] Aikar: i also have 'modified files' as part of my git prompt, but the downside is it has to scan every file for modifications each prompt so if the OS hasnt cached the files to memory cd'ing to the dir takes a bit 
[20:14] isaacs: Windows Script Host.  Man.
[20:14] isaacs: that thing is annoying.
[20:14] tuhoojabotti: Windows lol
[20:14] steffan has joined the channel
[20:14] isaacs: i've got this common bug right now, where people install npm on Windows, and then they're still in the npm source folder, and type `npm blah blahb lah`"
[20:14] japj: isaacs: lol
[20:14] isaacs: and of course, this fails, because wsh says "object process is not defined"
[20:14] isaacs: i'm trying to get it to fail more gracefully
[20:15] japj: isaacs: I had that same 'issue' ;)
[20:15] isaacs: but really... man.
[20:15] isaacs: it just is awful.
[20:15] isaacs: you can't write to stdout.
[20:15] isaacs: like, at all.
[20:15] isaacs: wth?
[20:15] isaacs: "The StdIn, StdOut, and StdErr streams can be accessed while using CScript.exe only. Attempting to access these streams while using WScript.exe produces an error."
[20:16] brianc: isaacs: probably some how a security thing related to folks downloading .js files and double clicking on them by accident
[20:16] isaacs: brianc: but you CAN do anythinng else.
[20:16] isaacs: you can install services!!
[20:16] japj: isaacs: can you not use the Windows Script Host to fork node and feed it the .js itself again?
[20:16] russfrank: because cscript is for command based scripts!
[20:16] isaacs: you can display popups, etc.
[20:16] isaacs: japj: that's what i'm trying to do
[20:16] brianc: or maybe some dev at microsoft was like 'well, we gotta ship windows, and I haven't implemented stdin/out in wscript.exe. oh well"
[20:16] russfrank: it starts with a c!
[20:16] isaacs: japj: but the problem is that it just pops up and goes away immediately.
[20:17] isaacs: japj: and you don't see the output
[20:17] isaacs: i can show a popup with the stdout output...
[20:18] alessioalex has joined the channel
[20:19] tizzo-afk has joined the channel
[20:19] shykes_ has joined the channel
[20:19] isaacs: fuckit, i'll just move npm.js out of the root of the npm project.
[20:19] outbounder has joined the channel
[20:19] isaacs: problem solved.
[20:21] japj: that's also a way to do it ofc
[20:21] japj: are you also going to move cli.js?
[20:22] trose: `3rdEden, so if i get this right... when the client socket connects the server needs to respond with the id of the socket it created then the client needs to weasel the socket id into it's post response so I know what socket that client is on?
[20:22] isaacs: japj: no, people aren't likely to type `cli`
[20:23] isaacs: japj: and there's a bunch of docs and makefiles that all say `node cli.js blah blah`
[20:23] rudolfrck has joined the channel
[20:24] mikeric has joined the channel
[20:24] pekim_ has joined the channel
[20:26] wilmoore has joined the channel
[20:27] Alexandre` has joined the channel
[20:27] criswell has joined the channel
[20:27] slifty has joined the channel
[20:29] japj: anyone here running vows on windows with node 0.5.x?
[20:30] AvianFlu: japj there's a branch with 0.5.9 support
[20:30] AvianFlu: it needed changes
[20:30] adambeynon has joined the channel
[20:30] japj: ah, ok thanks
[20:30] AvianFlu: it's not on the vows repo though, it's on mmalecki's fork
[20:30] AvianFlu: the only API change is that assert.length is now assert.lengthOf
[20:30] AvianFlu: because assert() is now a function
[20:31] AvianFlu: which made assert.length no good
[20:31] eddict has joined the channel
[20:31] jerrysv: has there been a pull request?
[20:32] guidocalvano has joined the channel
[20:32] fatjonny has joined the channel
[20:33] AvianFlu: I believe so
[20:33] AvianFlu: https://github.com/cloudhead/vows/pull/141
[20:33] japj: AvianFlu: I have an issue with running "vows test\*" which doesn't seem to be fixed in that branch, so I am wondering if I am doing something wrong or if it is not supposed to work yet on 0.5.x
[20:34] coreb has joined the channel
[20:34] maushu has joined the channel
[20:35] paulwe has joined the channel
[20:35] Alexandre`: Hi ev1! Do you think thats a good idea to use cassandra with jsnode?
[20:36] ryanmcgrath has joined the channel
[20:36] TRUPPP: little question. i read all the time that i have to use a rendering module with express for stylesheets. can't i simply use basic css or does it have reasons to use such modules like sass oder stylus? thank you
[20:36] brianc: anyone know if tjholowaychuk has written anything regarding upgrading his beautiful matrix of modules to be v0.5/v0.6 compatible?  
[20:37] brianc: TRUPPP: you can absolutely use basic .css files and serve them with the express.static() middleware
[20:37] jerrysv: brianc: i know he's been working on them, and i believe at least express is up to date on github
[20:37] mafintosh has joined the channel
[20:37] TRUPPP: brianc: thank you =)
[20:38] brianc: TRUPPP: stylus is a lot more fun to use, but if you've got dedicated designers who can't/wont work with anything other than *.css files then you gotta do whatcha gotta d
[20:39] maushu has joined the channel
[20:40] japj: isaacs: is npm --help supposed to work yet on windows or is that still on the todo list?
[20:40] Ang3 has joined the channel
[20:40] isaacs: japj: it's supposed to work, yes
[20:40] isaacs: japj: it opens up the html help doc in the default web browser, by default
[20:40] AvianFlu: it was tested on linux with 0.5.9
[20:40] isaacs: my windows vm is restarting, i'll test in a sec
[20:41] japj: isaacs: I get errors about a missing man1 directory
[20:42] jetienne has joined the channel
[20:42] isaacs: japj: that's... odd
[20:43] isaacs: japj: what version of npm?
[20:43] japj: isaacs: 1.0.97
[20:43] hdon: i seem to have forgotten how to open a file and pipe it to a socket and close the socket on EOF
[20:43] hdon: anyone want to help me out?
[20:46] hdon: guess i'll just read all the content and send it
[20:47] hdon: if there is a good static file server i would be happy to use that but i don't want a bunch of other features right now
[20:47] hdon: express had too many features
[20:47] Aikar: so how would you make a cross platform ver of netBinding.socketpair() to create a stream with both endpoints?
[20:47] tjholowaychuk: hdon just use connect.static()..
[20:47] tjholowaychuk: it's a small library lol
[20:47] hdon: ACTION googles
[20:47] tjholowaychuk: too many features, that are all optional :p
[20:48] metellus has joined the channel
[20:48] KaL has joined the channel
[20:48] hdon: tjholowaychuk, thanks :)
[20:49] tjholowaychuk: hdon you can use it without connect's dispatcher if you dont even want that
[20:49] tjholowaychuk: it's just a function
[20:49] hdon: tjholowaychuk, does .listen() accept an httpServer?
[20:49] tjholowaychuk: no
[20:49] jerrysv: hdon: check out bricks.js
[20:49] tjholowaychuk: haha
[20:49] tjholowaychuk: he doesnt want features
[20:50] jerrysv: tjholowaychuk: those exist only if you use plugins :)
[20:50] tjholowaychuk: sure, same goes for pretty much all the other frameworks
[20:50] japj: isaacs: ah, found the issue with the man pages, I actually installed with "node cli.js install -fg" instead of node cli.js install npm -fg" from my git directory, sorry for the confusion. --help works ok now (although it doesn't open up a browser, just on the console)
[20:50] hdon: tjholowaychuk, i do want to be able to handle my own http requests if the HTTP resource does not match any specified static content... how do i do that with connect?
[20:50] jerrysv: tjholowaychuk: if he's rejecting one, offer another
[20:50] dgathright has joined the channel
[20:51] tjholowaychuk: hdon if you use connect.static() it'll invoke the callback
[20:51] tjholowaychuk: or
[20:51] hdon: jerrysv, bricks' dispatcher looks good to me, but i'm not sure i'm going to use it either
[20:51] tjholowaychuk: actually
[20:51] isaacs: japj: that's odd...
[20:51] isaacs: japj: what doesit display on the console??
[20:51] tjholowaychuk: hdon https://github.com/senchalabs/connect/blob/master/lib/middleware/static.js#L79
[20:51] tjholowaychuk: you can use connect.static.send() directly if you want
[20:51] tjholowaychuk: within a regular node http server
[20:52] japj: isaacs: Usage : npm <command> and a bunch of more text about all the commands that I'm not gonna paste into this chat, else I'll flood it :)
[20:52] hdon: tjholowaychuk, AvianFlu got me to use socket.io for my websockets. its listen() method accepts either a port number or an object. one thing that object can be, apparently, is an http.httpServer. it listens for requests, and handles exactly two kinds of requests. everything else passes through to my handler.
[20:52] hdon: tjholowaychuk, ah, heh
[20:53] tjholowaychuk: yeah
[20:53] isaacs: japj: ohhh, right.  --help vs "help" command
[20:53] tjholowaychuk: are you expecting everything to work like that?
[20:53] isaacs: japj: blah --help == short usage banner.  `npm help blah` == full on documentation
[20:53] tjholowaychuk: not sure what you're getting at
[20:53] hdon: tjholowaychuk, it's a nice pattern i think. perhaps not the most versatile but versatile enough
[20:53] hdon: was just hoping maybe explaining it differently you would say "Oh yes you can do that.."
[20:53] catb0t has joined the channel
[20:53] dnyy has joined the channel
[20:53] japj: isaacs: ah, yes npm help <something> does start a browser page
[20:54] tjholowaychuk: it's not a bad pattern but it's not a great one either
[20:54] tjholowaychuk: for that use-case it's fine
[20:54] isaacs: japj: run `npm help npm`
[20:54] isaacs: right
[20:54] hdon: I used to know a TJ Holoway in middle school... didn't live in Pittsburgh did you?
[20:55] japj: isaacs: the changelog doc is a bit outdated it seems ;)
[20:55] tjholowaychuk: hdon nope
[20:56] hdon: well, i've just written my own simple dispatcher. i will replace it with something else when i have time to evaluate my choices
[20:58] mcluskydodallas has joined the channel
[21:01] diogogmt has joined the channel
[21:01] fangel has joined the channel
[21:02] dandean has joined the channel
[21:02] djbell has joined the channel
[21:03] tylerstalder has joined the channel
[21:03] mmalecki has joined the channel
[21:03] criswell has joined the channel
[21:05] sanduz2 has joined the channel
[21:06] sanduz2: new to node here, is it possible to use node.js along side another web server? since both would serve up http, im not sure how this could work out
[21:06] sanduz2: or do you configure node within a webserver or something?
[21:06] brianc: sanduz2: only 1web server at a time can bind to port 80 on your machine
[21:06] TheJH: sanduz2, well, you can tell one webserver to redirect some requests to the other one
[21:06] brianc: sanduz2: you can "reverse proxy" a web server to node
[21:06] langworthy has joined the channel
[21:06] djazz has joined the channel
[21:06] sanduz2: the reverse proxy is one i thought of, but that would mean i need a second box right?
[21:07] ngs has joined the channel
[21:07] djazz has left the channel
[21:07] maushu: sanduz2, no.
[21:07] brianc: sanduz2: no, you can reverse proxy on the same box.  loads of articles on the web about setting it up.  google for "nginx reverse proxy"
[21:07] sanduz2: i see, thanks guys
[21:07] maushu: sanduz2, what server are you currently using?
[21:07] mjr_ has joined the channel
[21:07] sanduz2: maushu, cherokee
[21:08] maushu: sanduz2, http://www.cherokee-project.com/doc/modules_handlers_proxy.html
[21:08] sanduz2: thanks
[21:08] Casan has joined the channel
[21:08] jetienne has joined the channel
[21:08] wilmoore has joined the channel
[21:09] kriszyp has joined the channel
[21:09] maushu: sanduz2, just don't forget that the Reverse Proxy, Web 1 and Web 2 can stay on the same machine.
[21:09] sanduz2: maushu, thanks, i hoped as much :] that would just mean node would run under a different port right?
[21:09] fmeyer has joined the channel
[21:09] artemma has joined the channel
[21:10] brianc: sanduz2: correct
[21:10] sanduz2: awesome
[21:10] maushu: sanduz2, yes, if you use http.listen(port, "127.0.0.1"), node.js will only listen to local connections.
[21:10] sanduz2: very nice
[21:10] fatjonny1 has joined the channel
[21:11] maushu: sanduz2, and since you are already using cherokee for other stuff, Web 1 can be node.js and you don't need Web 2.
[21:11] sanduz2: maushu, thanks
[21:11] shykes_ has joined the channel
[21:12] fatjonny has joined the channel
[21:13] maushu: sanduz2, be warned though, I don't know how cherokee reverse proxy works exactly, but there is a high chance that stuff that require permanent connections (like websockets) will not work correctly.
[21:13] outbounder has joined the channel
[21:14] sanduz2: maushu, i see. ill keep that in mind
[21:14] sanduz2: maushu, it generally works properly on all other webservers right?
[21:14] jerrysv: default of 16 connections for a reverse proxy? wwp
[21:14] jerrysv: er, eep
[21:15] maushu: sanduz2, actually, no. On nginx websockets don't work since nginx opens and closes the connections to the back servers (in this case node.js).
[21:15] mikeric has joined the channel
[21:15] maushu: Not sure about apache, but I guess that its the same.
[21:15] shykes__ has joined the channel
[21:15] sanduz2: hmm i see
[21:16] maushu: This happens because when reverse proxies were coded they didn't really have in mind such new technologies.
[21:16] inpho has joined the channel
[21:17] shipit has joined the channel
[21:17] maushu: I do see a keep-alive option in cherokee, so maybe it works.... hmm. Well, only trying it.
[21:19] wilmoore_ has joined the channel
[21:19] maushu: sanduz2, anyways, a good alternative is to use another port for the websocket. Like 8080. But now people with firewalls that only have port 80 open can't use your websocket server. :3
[21:20] sanduz2: haha yes, having it be port 80 is crucial i would think ;D
[21:20] sanduz2: but i appreciate you looking into it, i will give it a swing soon
[21:21] perezd has joined the channel
[21:21] sanduz2: cherokee is pretty modern so i wouldnt be surprised if it worked
[21:21] sanduz2: theyre updating it constantly
[21:21] abraxas has joined the channel
[21:21] gavin_huang has left the channel
[21:21] wilmoore has joined the channel
[21:22] cjm has joined the channel
[21:22] outbounder has joined the channel
[21:24] uchuff has joined the channel
[21:24] heavysixer has joined the channel
[21:25] gut4 has joined the channel
[21:25] maushu: sanduz2, http://lists.octality.com/pipermail/cherokee/2011-July/014954.html
[21:25] maushu: http://code.google.com/p/cherokee/issues/detail?id=169
[21:25] markwubben has joined the channel
[21:26] maushu: Oh boy, doesn't look good.
[21:26] sanduz2: maushu, damn it lol =\
[21:26] maushu: Well, node.js is not just websockets. You can always use alternatives.
[21:27] sanduz2: would having a second machine fix the problem?
[21:27] sanduz2: im guessing not but thought id ask anyway
[21:28] AvianFlu has joined the channel
[21:28] ambroff_ has joined the channel
[21:28] coreb1 has joined the channel
[21:28] maushu: hmm, well, if I were crazy enough... maybe putting a subdomain to that second machine and then connection from the main website to that subdomain (that is running node.js directly on 80) might work.
[21:28] maushu: No idea if websockets are cross-domain friendly.
[21:29] jhurliman has joined the channel
[21:29] outbounder has joined the channel
[21:29] sanduz2: hm thanks ill keep that option in mind
[21:29] maushu: Anywways, thats too much work, better use an alternative or something, besides, do you really need websockets? Node.js is fast enough for polling.
[21:30] SubStack: socket.io is super cross-domain friendly
[21:30] elliottcable: bnoordhuis / ryah / isaacs … dropped that pull request last night. Input appreciated: http://github.com/joyent/node/pull/1801
[21:30] langworthy has joined the channel
[21:30] SubStack: takes a bit of work to set up the policy files for websockets though
[21:30] isaacs: elliottcable: reading it now, actually
[21:30] maushu: SubStack, lets not complicate stuff.
[21:30] elliottcable: isaacs › awesomesauce
[21:30] maushu: I mean, a second server just to have websockets? Lets not go crazy.
[21:30] sanduz2: maushu im not sure yet, i havent delved into node.js yet. was just gathering info before diving in
[21:31] elliottcable: isaacs › the most important bit is near the end, the discussion that’s arisen regarding the new API planning
[21:31] dreamdust1 has joined the channel
[21:32] heavysixer has joined the channel
[21:32] elliottcable: SubStack › I can’t recall if you’ve done anything with the `'vm'` module, you might be interested in weighing in on this as well
[21:32] isaacs: elliottcable: your avatar is super disturbing, btw.
[21:32] isaacs: something about it.
[21:32] elliottcable: isaacs › that’s intentional :D
[21:32] maushu: sanduz2, the main difference is that unlike php and most other languages, with node.js you are coding the application itself, not pages to be run by the server. That means that, for example in a webchat, instead of saving data to a database to share between users, you can keep it in memory.
[21:32] elliottcable: someone else made it for me, and now I can’t change it because I love ’em.
[21:32] alessioalex has left the channel
[21:33] SubStack: well I've written wrappers for vm so it works in the browser is all
[21:33] SubStack: for browserify
[21:33] elliottcable: SubStack › *nod*, what’d you use, falling back on eval or webworkers or something?
[21:33] sanduz2: maushu, i see. and where do websockets come into play and all the problems theyre causing me XD
[21:33] SubStack: Function() inside iframes and falling back to Function()
[21:33] SubStack: Function() is like eval() but awesome
[21:34] elliottcable: ikr
[21:34] sanduz2: maushu, websockets never close or something? and thats why cherokee cant redirect because it cant keep things open?
[21:34] xerox: why?
[21:34] maushu: sanduz2, since the node.js application is always running you can keep permanent connections between the users and node.js, usually by using websockets.
[21:34] maushu: sanduz2, yes.
[21:34] sanduz2: i see
[21:34] SubStack: .. Function('x', 'return x + 10')(5)
[21:34] catb0t: 15
[21:34] rickharrison has joined the channel
[21:35] maushu: sanduz2, but node.js is more amazing than that. Even if there weren't websockets it is totally worth it.
[21:35] sanduz2: maushu, so that would mean node.js would have hundreds of websockets open at a time
[21:35] SubStack: so it's pretty easy to build a vm.runInNewContext using that by building up the arguments array and .apply()ing the values
[21:35] maushu: sanduz2, thousands.
[21:35] sanduz2: wow cool
[21:35] elliottcable: SubStack › well, not quite, because that’s not *actually* a new context
[21:35] elliottcable: well, wait, you said you were using iframes
[21:35] elliottcable: so ignore me, that’d do it
[21:35] SubStack: it is if you use frames
[21:35] elliottcable: this might break your work then :x
[21:36] SubStack: but I couldn't get those working in the IEs so I just used Function() which was close enough
[21:36] elliottcable: you should read the pull request, but I’m replacing the copy-to-and-from fragility with a true, dynamic prototype
[21:36] SubStack: what will break this work?
[21:36] elliottcable: well, hm, maybe
[21:36] SubStack: the vm api is changing?
[21:36] elliottcable: you’d have to do something like this:
[21:37] elliottcable: with(Object.create(passed_in_sandbox))
[21:37] SubStack: with >_<
[21:37] elliottcable: and place your function/arguments magic inside that
[21:37] elliottcable: yeah, with >,<
[21:37] maushu: sanduz2, the memory/cpu performance to keep a connection open (like a websocket, http, tcp, etc) is negligible.
[21:37] SubStack: elliottcable: nah, just use Function()
[21:37] SubStack: like this:
[21:37] isaacs: elliottcable: you have two branches here... should i be looking at the one wiht the ! or without?
[21:37] maushu: sanduz2, in node.js, that is.
[21:37] elliottcable: isaacs › bang-branches you can safely ignore, it’s exactly the same changes, but made much more granularly.
[21:37] isaacs: k
[21:38] sanduz2: maushu, i see. 
[21:38] isaacs: so ! == "-wip" or -dev?
[21:38] elliottcable: isaacs › once I’m done with my changes, which I save every few minutes, I merge-squash them into the non-bang branch with a semantic, clean commit message. Old habit.
[21:38] elliottcable: yeah something like that
[21:38] isaacs: sure, that's fine
[21:38] isaacs: thanks
[21:38] SubStack: .. var c = { a : 3, b : 4 }, args = [], vars = []; Object.keys(c).forEach(function (key) { vars.push(key); args.push(c[key]) }); Function(vars, 'return a + b').apply(null, args)
[21:38] catb0t: 7
[21:38] elliottcable: I keep them for posterity, basically. Sometimes “a working commit” has to include a whole lot of work at once … and that’s a little opaque to somebody trying to read the git history to *learn how things are done*
[21:38] SubStack: ^_^
[21:38] elliottcable: so the bang-branches have non-working, granular elements of the larger commits ^‿^
[21:39] elliottcable: I blogged about the technique here, FWIW: http://blog.elliottcable.name/posts/granular_committing.xhtml
[21:39] baudehlo has joined the channel
[21:39] maushu: sanduz2, you just need make sure to avoid heavy processing or send it to another thread, because node.js is a single line. A really fast single line but still a single line.
[21:39] elliottcable: SubStack › breading
[21:39] elliottcable: … reading
[21:39] elliottcable: … breeding
[21:39] SubStack: no with() necessary!
[21:39] elliottcable: SubStack › see, that won’t work at all
[21:39] balaa has joined the channel
[21:40] sanduz2: maushu, i see
[21:40] elliottcable: SubStack › unless I’m mis-reading it; the entire point of the new change is that it’s *dynamic*. That is, I can change the context *while the VM is executing* (from within the VM, or from external functions called from the VM), and that will dynamically change the interior context of the VM.
[21:40] bronson has joined the channel
[21:40] elliottcable: SubStack › at least, I think it won’t. Maybe I mis-read.
[21:40] isaacs: elliottcable: (since you asked) there are a few style points that jump out.
[21:40] SubStack: elliottcable: oh there are ways to get the results back out again
[21:40] SubStack: I'm doing that too
[21:40] elliottcable: SubStack › yes, but not *dynamically*. That’s the point. Heh.
[21:40] SubStack: but that snippet is longer
[21:40] SubStack: well you already have the var names
[21:40] elliottcable: SubStack › This chunk explains it: https://github.com/elliottcable/node/commit/cf2165038f2aad30787bd88164ef18df381a4f68#L0L364
[21:40] SubStack: just pump them back out again
[21:40] isaacs: elliottcable: don't indent unless there's a {} block or continued line (eg src/node_script.cc:384), and no need to sign commits.
[21:41] isaacs: er, sign comments
[21:41] elliottcable: isaacs › the name/email thing was from the Google style guide, since I wrote an in-depth explanation of “something unusual” that I was doing
[21:41] elliottcable: isaacs › they suggested you give a contact point for people trying to figure it out. As for the indentation, I seeeeee.
[21:41] isaacs: elliottcable: yeah, it's a pretty common custom.  not one node uses, though :)
[21:41] elliottcable: ACTION nods
[21:41] maushu: Wasn't there a description of multi-thread and events with a octopus?
[21:42] verdoc has joined the channel
[21:42] elliottcable: I just read the entire style guide and did what it said, since that’s what the ‘Contributing’ wiki page said to do :D
[21:42] isaacs: elliottcable: i've also seen the indentation thing before, like for if you're using the same object repeatedly or whatever.  it's sensible in this case, just not node-style, that's all.
[21:42] elliottcable: SubStack › that’s still … not the same thing, bro. Here, ask me later when I’m not talking to isaacs, I’ll give you a Real World example of why that doesn’t work (the library that I’m currently building that forced me to fix this particular bug)
[21:42] isaacs: ACTION tries to go back to grokking the semantics rather than complaining about syntax...
[21:43] elliottcable: isaacs › yah, I get that. I certainly would never agree that it’s not *sensible*, but following-surrounding-conventions trumps sensible every single time
[21:43] elliottcable: I just didn’t really notice that nobody did that in the file. :x
[21:44] isaacs: SubStack: the issue is that you can't use the context as a mechanism for communication unless it's actually modifiable both within and without the vm
[21:44] isaacs: SubStack: one could argue that such a shared object is an antipattern of sorts, but it does allow for some interesting things.
[21:44] kmiyashiro has joined the channel
[21:44] elliottcable: it’s actually not communication that I, personally, needed
[21:45] elliottcable: I can provide that by injecting a wrapped object in, and then using *that*
[21:45] isaacs: well, i mean, there's something to be said for making it work how you'd expect.
[21:45] SubStack: isaacs: well I have a lot of this already working in my browser implementation https://github.com/substack/node-browserify/blob/master/test/vm.js#L47
[21:45] elliottcable: ACTION nods
[21:45] isaacs: if i say, "Run with this here object as the global", then i'd expect that there object to actually BE the global.
[21:45] elliottcable: SubStack › want me to add a few failing tests to that to demonstrate what I’m talking about?
[21:45] isaacs: ie, have this-ness, random globals being automatically visible, etc.
[21:45] elliottcable: the tests I added to Node are right here:
[21:46] elliottcable: https://github.com/elliottcable/node/commit/cf2165038f2aad30787bd88164ef18df381a4f68#L2R87
[21:46] elliottcable: an even shorter one is something like this:
[21:46] elliottcable: || context.fun = function(){ context.widget = 42 };
[21:46] elliottcable: || script = new Script('fun(); widget');
[21:46] elliottcable: >> result = script.runInContext(context);
[21:46] elliottcable: ick
[21:46] elliottcable: isaacs › can you `/invite purr`?
[21:46] SubStack: elliottcable: sure but this code will probably be ripped out into its own module pretty soon so that I can pool effort with caolan's couch thing
[21:47] elliottcable: SubStack › awesome, I’ll wait then
[21:47] paulwe has joined the channel
[21:47] elliottcable: SubStack › basically, I think the best solution for you would be to provide a *defined-slightly-differently* API with a flag to switch to `with()` for full emulation
[21:47] ncursestest21 has joined the channel
[21:47] isaacs: elliottcable: what's purr?
[21:47] elliottcable: SubStack › because `with()` has serious performance implications
[21:47] digman543 has joined the channel
[21:47] elliottcable: isaacs › v8/SpiderMonkey bot with some other toys and whistles
[21:47] purr has joined the channel
[21:47] elliottcable: isaacs › of greatest interest is multi-line evaluation
[21:48] elliottcable: || context.fun = function(){ context.widget = 42 };
[21:48] elliottcable: || script = new Script('fun(); widget');
[21:48] elliottcable: >> result = script.runInContext(context);
[21:48] purr: elliottcable: ReferenceError: context is not defined
[21:48] jerrysv: ooo. new bot to exploid?
[21:48] elliottcable: heh, oops. I need to wait for devyn to expose Node APIs, anyway; he’s working on that.
[21:48] jerrysv: er, exploit
[21:48] jerrysv: explode? freudian slip?
[21:48] maushu: *explode
[21:48] elliottcable: jerrysv › it’s ridiculously easy. A dude was rooting it the other day and having devyn’s computer `say` words at him
[21:49] jerrysv: elliottcable: hahaha. nice.
[21:49] elliottcable: jerrysv › just don’t, so I don’t have to kill it, lol
[21:49] jerrysv: elliottcable: ok, fine. i'll be nice.
[21:49] elliottcable: ’cause *now* it’s running on *my* server, and I like my irc uptime ಠ_ಠ
[21:49] zmbmartin has joined the channel
[21:49] jerrysv: >> typeof(/a/g);
[21:49] purr: jerrysv: (string) 'function'
[21:49] jerrysv: so, 0.4 based
[21:50] elliottcable: v0.4.12
[21:50] AvianFlu_ has joined the channel
[21:50] maushu: >> this
[21:50] purr: maushu: (object) {}
[21:50] jerrysv: i would have made it to the specific version eventually :) 
[21:50] elliottcable: lol
[21:50] purr: lol
[21:50] jerrysv: elliottcable++
[21:50] jerrysv: ?
[21:50] jerrysv: bah
[21:50] elliottcable: nope
[21:50] elliottcable: ++ jerrysv
[21:51] purr: Let it be known that elliottcable loves jerrysv.
[21:51] maushu: Damn php, infecting my mind.
[21:51] elliottcable: if the feedback messages get annoying, use !stop
[21:51] elliottcable: and he’ll shut up for a day or two
[21:51] maushu: >> process
[21:51] purr: maushu: ReferenceError: process is not defined
[21:51] maushu: Well, it got the basics down.
[21:51] elliottcable: it’s way more secure for SpiderMonkey, actually
[21:51] maushu: I'm pretty sure there is another var there.. hmm..
[21:51] elliottcable: the dude who wrote it is doing some insanely weird shit
[21:51] elliottcable: but at the core he’s got a C shim running SM and exchanging results back and forth in JSON with the node process
[21:52] fbartho has joined the channel
[21:52] maushu: wat
[21:52] elliottcable: devyn is planning to yank out his shovel.js and doing the same thing for non-Node-enabled v8 execution
[21:52] maushu: Isn't running a sandboxed node.js process enough?
[21:52] elliottcable: nah, you can still escape the `Context` to the node process, and then run system commands
[21:52] maushu: ...how?
[21:52] elliottcable: I mean, it’s still user-restricted, but I don’t want Random People even running user-restricted shell commands via the interpreter
[21:53] elliottcable: https://github.com/joyent/node/issues/1469
[21:53] maushu: How he heck do you escape the context if you don't get any specific node.js stuff?
[21:53] elliottcable: I remember bmeck saying that was a pretty difficult-to-lock-down example
[21:53] elliottcable: er, not that one, damn
[21:53] elliottcable: hold on while I find it
[21:54] elliottcable: maushu › Node.js doesn’t use v8’s security tokens, yet, from everything I’ve seen; all `WrappedContext`s share the same token
[21:54] isaacs: elliottcable: so... if i understand this correctly, the magic that you're adding to vm is that runInContext will set the proto of the global, rather than copying properties onto it,yes?
[21:54] elliottcable: maushu › which means if you find any way to get a reference to an external object, you can use that external object
[21:54] elliottcable: isaacs › yep, very simple
[21:54] isaacs: elliottcable: just trying to work out why this works, before passing judgement on it :)
[21:54] elliottcable: isaacs › I have yet to write any replacement for the removed copying-values-back; read the comments further down on the pull request to see the possibilities I’ve considered
[21:54] maushu: elliottcable, easy to fix, just use an api that sends string messages to the main process.
[21:55] jhurliman has joined the channel
[21:55] zmbmartin has left the channel
[21:55] elliottcable: I’d *really* like to avoid copying the end-state of the VM directly back onto the sandbox we used as a prototype (the only thing remotely API-compatible with the current system), because that clobbers the sandbox and prevents you doing interesting and intuitive things re: reuse
[21:55] isaacs: elliottcable: so... that's what i was just about to ask.
[21:55] m00p has joined the channel
[21:55] isaacs: elliottcable: if you have a script that does vm.runInContext("foo=1", myObj) then I'd expect myObj.foo === 1
[21:55] zmbmartin has joined the channel
[21:55] elliottcable: so if we avoid that, we’re stuck with new APIs for “getting data out,” which is a Good Thing anyway, because there’s much more interesting and robust ways of doing that than a fragile shallow-copy of enumerable properties
[21:56] maushu: elliottcable, what about calling internal functions inside the api functions?
[21:56] bloudermilk has joined the channel
[21:56] elliottcable: maushu › no, I don’t mean re: the main process
[21:56] elliottcable: maushu ›  I mean escaping to the node-APIs of the child process
[21:56] elliottcable: hold on while I find bmeck’s other post
[21:56] isaacs: elliottcable: if at all possible (and i believe it is) it would be better to keep the api as-is
[21:56] maushu: I don't get the escaping part.
[21:57] isaacs: elliottcable: we can change the api for good reasons, but it's costly.
[21:57] maushu: Reflection isn't good enough in javascript to go around jumping in function contexts.
[21:57] elliottcable: isaacs › yes, I quite understand
[21:57] zmbmartin has joined the channel
[21:57] elliottcable: isaacs › but there *are* Very Good Reasons.
[21:57] Circlefusion has joined the channel
[21:58] elliottcable: hence why I’ve tried to start a discussion about it in that pullrequest, I want to make sure everyone’s on the same page as to why it’s worthwhile to change the API, and whether anyone has disagreements with the reasons I give as to why there *is* good purpose in doing so
[21:58] elliottcable: maushu › I can’t find it, tbh. A few weeks ago, I saw a pretty seriously-nasty snippet in one of bmeck’s issues or pull requests.
[21:58] isaacs: elliottcable: can we pull out the global object from the child script and set it as the prototype of the context object after running?
[21:58] elliottcable: isaacs › don’t you remember that snippet? I’m pretty sure it was you who replied “Yeah, that’s basically impossible to lock out, and we’re not even going to try”
[21:58] JohnBeales has joined the channel
[21:58] isaacs: elliottcable: i guess that wouldn't work though...
[21:59] elliottcable: isaacs › it’d be Pretty Evil™ to mess with the prototype of the context object passed in
[21:59] isaacs: elliottcable: cuz it won't do shadowed properties properly
[21:59] elliottcable: isaacs › possible, though.
[21:59] isaacs: elliottcable: meh.  you handed it off to vm, you asked for it ;)
[21:59] elliottcable: yeah, but shadowed properties aren’t an issue
[21:59] elliottcable: we only need to deal with *new* values set inside the VM, I think
[21:59] elliottcable: let me test with my local copy with the new code compiled in
[22:00] isaacs: elliottcable: well, you could have something like this, for example:   obj = {foo: 1}; vm.runInContext("foo=10", obj); assert(obj.foo === 10)
[22:01] balaa has joined the channel
[22:01] elliottcable: hold on just a sec
[22:01] elliottcable: exploring a suspicion
[22:01] isaacs: elliottcable: with your patch, the global in the vm will be this:   { __proto__ : { foo : 1 } }.  then, set foo=10, and you'll have { __proto__: {foo: 1}, foo: 10}
[22:01] elliottcable: DAMNIT
[22:02] isaacs: if you then proto it the other way on the way out, you'll have {foo: 1, __proto__:{foo:10}}
[22:02] maushu: elliottcable, You mean this one: https://github.com/joyent/node/issues/1469
[22:02] mehtryx has joined the channel
[22:02] isaacs: elliottcable: so the assertion will fail, right?  or am i missgroking something?
[22:02] elliottcable: maushu › nah, I saw that one too, but that’s not the seriously-abusive one
[22:02] elliottcable: ACTION sighs
[22:02] elliottcable: isaacs › hold on a sec, lemme read; I was buried in a REPL :3
[22:02] maushu: Wait, that was the one you sent.
[22:02] elliottcable: maushu › heh yeah
[22:02] maushu: ACTION facepalm.
[22:03] maushu: Dammit, this is really important for me.
[22:03] eddict: ACTION buys a 3rd person 's'
[22:03] elliottcable: isaacs › yeah, I basically misunderstood how v8 operated at the conjunction of ( scope chain ( ) prototype chain )
[22:03] elliottcable: I thought modifying a global variable that belonged to a prototype of an *object* on the scope chain (i.e. either global, or a `with()`’d value) would modify that element on the prototype
[22:03] maushu: elliottcable, this one? https://gist.github.com/860488
[22:03] elliottcable: but I was way off-base
[22:04] elliottcable: isaacs › well, I was wrong, but AFAICT, the exact same arguments apply in either case to the various alternative APIs
[22:04] isaacs: elliottcable: maybe we could just do a less-stupid property copy.
[22:04] elliottcable: isaacs › did you read the rest of the thread? Were my commentary unclear? I’d rather fix them there, so everyone can read them, than restate them in IRC, y’know? I want a lot of input/discussion on this before I go implementing a new API
[22:04] elliottcable: it’s pretty hard to do it less-stupid-*enough*
[22:04] CIA-48: libuv: 03Ben Noordhuis 07 * r1e0d25a 10/ uv.gyp : build: fix gyp script, broken in 4ab1990 - http://git.io/ZU1aBQ
[22:04] isaacs: elliottcable: really?
[22:04] dreamdust1 has left the channel
[22:05] elliottcable: and then you still end up with the “opposite problem” from the one I’m fixing here in the first place
[22:05] elliottcable: that being that, okay, now getting data *into* the VM is ‘dynamic’ (during the state of the VM)
[22:05] elliottcable: but getting data *out* is still static, and only possible after the VM is finished
[22:05] elliottcable: so, it’d be better to find an alternative that is intuitive and dynamic, yes?
[22:05] elliottcable: isaacs › here’s an idea for you.
[22:06] maushu: elliottcable, holy crap. It's that.
[22:06] isaacs: Object.getOwnPropertyNames(vmCtx).forEach(function (n) { Object.createProperty(sandbox, n, Object.getOwnPropertyDescriptor(vmCtx, n)) })
[22:06] elliottcable: what if we modified WrappedContext to use an ObjectTemplate with a blanket-form NamedPropertyHandler?
[22:06] maushu: >> argument
[22:06] purr: maushu: ReferenceError: argument is not defined
[22:06] isaacs: elliottcable: hahah, you mean make it a proxy, effectively?
[22:07] maushu: ACTION facepalm.
[22:07] elliottcable: isaacs › yes, lol
[22:07] elliottcable: what we could do *then*
[22:07] elliottcable: is, while we can’t modify the sandbox *they give us*
[22:07] elliottcable: we *can* hand them back a wrapped sandbox that we have control over
[22:07] aconbere has joined the channel
[22:07] elliottcable: but that just overall seems really hacky and sloiw
[22:07] elliottcable: slow*
[22:07] isaacs: yeah, probably not idea.
[22:07] isaacs: *ideal
[22:07] elliottcable: I still think the best option is to provide a new API for getting *the actual global_template object* from the child context
[22:07] elliottcable: which is really easy to do, implementation-wise,
[22:07] isaacs: but who knows, maybe not so bad.  would be worth benching
[22:07] jldbasa has joined the channel
[22:08] elliottcable: *and* allows them full, dynamic access to the global state inside the context
[22:08] isaacs: the tricky thing here seems to be that v8 doesn't let you use a "normal" object as the global object.
[22:08] elliottcable: we can’t *change* it,
[22:08] elliottcable: but I’m pretty sure we can pass it around, even though it’s Not Normal™
[22:08] isaacs: hmmm...
[22:08] elliottcable: let me play, this will require a little more time though
[22:08] isaacs: i don't think this is going to make it for 0.6
[22:08] elliottcable: as now I’ve gotta go start writing C++ and compiling stuff, and the tests are a little more complex than one-liners in my REPL :D
[22:08] elliottcable: ugh, really?
[22:08] isaacs: especially since that's in like 2 weeks, and we've got a lot to do before then.
[22:09] elliottcable: okay, I saw that coming, so let me propose a temporary solution:
[22:09] isaacs: but, 0.7->0.8 should be a lot faster than 0.5->0.6 was.
[22:09] elliottcable: I can dump the old copy-back code in, and “shelve” the issue of solving ‘semantic methodologies of getting data out of the vm’ until 0.7
[22:09] isaacs: since in 0.7 we can focus pretty exclusively on stuff like this.
[22:09] elliottcable: and we can have a good long discussion of the possibilities
[22:09] elliottcable: and for the interim, we can just say “your sandbox object will get clobbered with results copied out of the VM, so don’t re-use it”
[22:09] elliottcable: how’s that sound?
[22:09] isaacs: yeah, your technique for putting data *into* the vm is definitely a lot more elegant and seems to be more in the v8 Way
[22:10] isaacs: elliottcable: isn't that what happens now?
[22:10] elliottcable: also, are pull requests or the mailing list better for starting big discussions like this?
[22:10] isaacs: elliottcable: about the same.
[22:10] chance- has joined the channel
[22:10] elliottcable: I like pull requests, because you can attach code, and #mention them … but I’ll understand if more people watch the mailing list / etc
[22:10] isaacs: elliottcable: i usualy email the dev list if there's no code attached yet.
[22:10] isaacs: elliottcable: proposals and such
[22:10] elliottcable: isaacs › yes, that’s exactly what happens now, and what I’d be copying back into the codebase; it’s still in my git stash, even
[22:11] isaacs: elliottcable: but most of the peopl e on -dev that would comment also get updates for pull reqs.
[22:11] elliottcable: there was one minor caveat, hmmmmmmmm, if I can remember it …
[22:11] elliottcable: oh, well, just the obvious one about what we *have* decided to change:
[22:11] isaacs: what happens if you define a getter/setter on the global object?
[22:11] ph^ has joined the channel
[22:11] elliottcable: people’s existing code *might, conceivably* make the assumption that after they pass `obj` to runInNewContext and friends, they can do whatever they like with it
[22:12] nibblebo_ has joined the channel
[22:12] elliottcable: but if there is deferred code (nextTick, asynchronous anything) inside the vm, and the proceed to modify (for whatever reason) the obj outside of the new context,
[22:12] elliottcable: well, it will no longer operate how they expect.
[22:12] elliottcable: so that’s something we’d want to document Very Well in the changelog for 0.5->0.6
[22:12] elliottcable: it’s the only gotcha in the new API if we do defer the discussion about the new APIs for getting values out, until later
[22:12] nickaugust has joined the channel
[22:13] isaacs: so, like this?  obj = {foo:1, process:process}; vm.runInContext("process.nextTick(function(){ foo = 2 })", obj); 
[22:13] elliottcable: isaacs › be specific: you mean the passed-insandbox, the context object, the v8-created global object, or the v8-created global proxY?
[22:13] isaacs: isn't that already broken today, though?
[22:13] elliottcable: there’s like four things you could conceivably call “the global object”, which has made this whole topic very excruciating to discuss and document :D
[22:13] TheJH: vm is broken, yes
[22:13] isaacs: elliottcable: indeed.
[22:13] TheJH: there are several ways to get out
[22:13] elliottcable: okay, so what’s that about a getter?
[22:14] criswell has joined the channel
[22:14] elliottcable: speaking of vm and security, TheJH / maushu / isaacs, we need to have an in-depth discussion about security tokens
[22:14] isaacs: elliottcable: so, here's where i'm at: any changes intended for 0.6 should not change the api considerably, but making things cleaner is ok.  then let's talk about how to make it work 100% intuitively for 0.8
[22:14] maushu: ...security tokens...
[22:14] maushu: ...are they delicious?
[22:14] elliottcable: I’ve come out of this whole “I’m gonna fix the VM.” binge totally convinced that we *could* make a secure-VM API, but that we’d have to make it very different from the current one
[22:14] isaacs: maushu: almost as tasty as salted hash cookies.
[22:14] elliottcable: isaacs › I’m totally down.
[22:14] TheJH: elliottcable, don't cookies taste better?
[22:15] elliottcable: isaacs › the commits in that pull request Right Now, minus a little change I’m about to push, should be golden for 0.6, then
[22:15] elliottcable: er, 0.5*
[22:15] TomY has joined the channel
[22:15] TheJH: elliottcable, did you see my patch?
[22:15] elliottcable: TheJH › errrrr, link it?
[22:15] isaacs: elliottcable: right, if you get the copy-out stuff back in.
[22:15] elliottcable: TheJH › later, acutally, I need to focus and finish this with isaacs
[22:15] isaacs: elliottcable: and, at least, it doens't make it any *worse*
[22:15] elliottcable: isaacs › yep, about to push a revert-commit
[22:15] catb0t has joined the channel
[22:15] elliottcable: isaacs › (remember your question about my bang-branches? Another reason why they’re awesome: it takes me one command to revert that particular hunk of the aggregate commit.)
[22:16] isaacs: yep.  of course, you can also just force-update your own fork.
[22:16] isaacs: and it'll magically update the commits in the pull req.
[22:16] elliottcable: well yeah :D
[22:16] elliottcable: but that also re-orders the pull request
[22:16] elliottcable: and I have a very strict rule about re-writing history in non-bang branches
[22:16] TheJH: elliottcable, https://github.com/thejh/node/compare/joyent:master...safer-runInNewContext
[22:16] isaacs: ok.
[22:16] elliottcable: once I’ve done a squash-commit to a non-bang, I’m very anal about never, ever changing that. Just personal style.
[22:16] albertosh has joined the channel
[22:16] elliottcable: TheJH › oh, that one was you?
[22:17] isaacs: elliottcable: there's a very high probability that one of us will end up rewriting history when merging into joyent/node ;)
[22:17] perezd: any recommended libs for doing mDNS in node?
[22:17] isaacs: most pull reqs end up coming into core as a single squashed commit.
[22:17] elliottcable: isaacs › oh, sure, but that’s *upstream* rewriting *my* history, not me rewriting my own history.
[22:17] elliottcable: upstream has leave to do things like that
[22:17] isaacs: i see.
[22:17] elliottcable: which is why I still have a feature branch
[22:17] elliottcable: my own feature branch will not change, but my master will always match yours, no matter what history you rewrite.
[22:17] dguttman has joined the channel
[22:17] nickaugust: does anyone have any information on compiling node on an armv5 system?  i've spend a couple days passing different options to the compiler but the furthest I can get is after sucessfully compiling i run ./node and get 'Illegal instruction'.  gdb says "Program terminated with signal 4, Illegal instruction." "#0  0x001de4a8 in v8::internal::Heap::Heap() ()".  It seems most of the methods I've seen 
[22:17] elliottcable: I love git <3
[22:17] nickaugust: online are for armv5t mostly.
[22:17] elliottcable: <3 git
[22:17] purr: Let it be known that elliottcable hearts git.
[22:17] isaacs: ok.  i'll write my opinions in the pull rq comments.
[22:18] maushu: elliottcable, how are we supposed to pass functions because of this?
[22:18] jjones1234 has joined the channel
[22:18] elliottcable: isaacs › lemme push this first, so you can check it over one last time
[22:18] isaacs: kk
[22:18] elliottcable: maushu › you’re *not supposed to be using VM for security* in the first place
[22:18] elliottcable: maushu › in which case, you can pass functions by passing functions. Heh.
[22:18] artemma has left the channel
[22:18] catb0t has joined the channel
[22:18] TheJH: .. "hello catbot"
[22:18] catb0t: "hello catbot"
[22:18] jjones1234: Hey guys, if I do connection-time TCP authentication is it relatively safe to assume (ip, port) will uniquely identify the authenticated client until disconnection?
[22:19] isaacs: elliottcable, maushu: yeah, it would be good to have some kind of secure execution api, but VM is not that (yet)
[22:19] isaacs: it's a sandbox, not a prision
[22:19] elliottcable: yep
[22:19] elliottcable: oooo, good word
[22:19] elliottcable: when I bring up my secure-VM proposals,
[22:19] isaacs: making it a prison will require api changes, security tokens, etc
[22:19] _th_n_ has joined the channel
[22:19] elliottcable: I think I’ll call it `require('prison')` :D
[22:19] elliottcable: yes, absolutely
[22:19] jaequery: what do you guys get when you go here?  http://jsfiddle.net/kcwnN/2/   ?  i get 9/111,    how about you?    ..... i don't know why it's not returning the current date .... =x
[22:19] elliottcable: and it Should Be Separate
[22:19] isaacs: elliottcable: haha
[22:19] elliottcable: because it will be slower, and much less flexible
[22:19] isaacs: here's the thing: you still want to be able to pass in objects or a function to a secure vm.
[22:19] elliottcable: so I think Node *should* have a prison, but I don’t think that should replace the current-and-wonderful VMs.
[22:19] TheJH: jjones1234, depends on your scenario. if there's an attacker in between (e.g. someone who spoofs stuff on the LAN), you lost
[22:20] elliottcable: isaacs › and that’s fine, we can do that with tokens
[22:20] isaacs: that's what capability object model security is all about.
[22:20] isaacs: so you mark the object's that are allowed with the token
[22:20] isaacs: v8 has api for this, we just don't use it.
[22:20] elliottcable: isaacs › … to an extent. It’s going to be limited and complex, which I don’t want to inflict on normal VM users; hence a new/separate API.
[22:20] isaacs: agree.d
[22:20] elliottcable: isaacs › not…quite.
[22:20] elliottcable: isaacs › you probably know that already, though.
[22:20] hntrdglss has left the channel
[22:20] isaacs: isn't that how they do stuff with SameOriginPolicy in chrome?
[22:20] elliottcable: the caveats that I’ve come across that we’re basically going to have to work around:
[22:20] smtlaissezfaire has joined the channel
[22:20] catb0t has joined the channel
[22:20] TheJH: do you guys see any way to get out of the safer sandbox I wrote?
[22:20] isaacs: it's been a few years since i looked into it
[22:21] elliottcable: - We can’t really do anything at all about modifying the security policy of *existing objects*.
[22:21] jjones1234: TheJH, yes I'm aware of that, or a malfeasant local operator-- but I'm assuming good faith there, I only want to protect against other rogue users
[22:21] elliottcable: Either they’re allowed, or they’re not; and obviously, we want them to be not.
[22:21] maushu: elliottcable, isn't this preventable by just considering any object sent to the sandbox, dirty?
[22:21] elliottcable: - We can create new objects from templates, and configure the security policy very granularly for *those templates*
[22:21] isaacs: elliottcable: i thought you could even do pretty insane stuff, like make the getter allowed, but hte setter not, etc.
[22:21] elliottcable: - We can allow the prison-API-consumer to create objects from templates in predicable ways, and set the security policy for *those* in a slightly less granular way
[22:21] isaacs: elliottcable: alert(window.parent.location) // ok
[22:21] elliottcable: isaacs › yes, but NOT FOR EXISTING OBJECTS; that’s the key
[22:22] elliottcable: isaacs › so what I’d basically want to do for Prison, is this:
[22:22] isaacs: ok.
[22:22] Druid_ has joined the channel
[22:22] isaacs: interesting.
[22:22] isaacs: so you have to set the security token on an object at creation-time?
[22:22] elliottcable: A) rewrite the parts of Node that we want to expose, stuff like `process` and crap, so that *on the C++* side, we set their policies properly
[22:22] elliottcable: B) provide `prison.createObject()` APIs that let JavaScript consumers of the Prison APIs to create some objects to pass into the prison, beforehand
[22:23] isaacs: elliottcable: it'd be good if this was a userland module.  i don't see a lot ofpeople using it.
[22:23] elliottcable: it will still be much, much less flexible than the VM module, but that’s … well, a given.
[22:23] elliottcable: isaacs › yes, definitely.
[22:23] elliottcable: isaacs › but it’s also a module that I’d want to discuss heavily *with Noders* first.
[22:23] isaacs: of course, you might have to expose some stuff in node to make it possible.
[22:23] elliottcable: i.e. discuss and plan it as a community, and then release it as a .node
[22:23] isaacs: suresure
[22:23] elliottcable: isaacs › we’d *definitely* have to rewrite bits of node
[22:23] elliottcable: but not in API-changing ways.
[22:23] fbartho has joined the channel
[22:23] jerkelens has joined the channel
[22:23] elliottcable: just in not-being-stupidly-insecure ways
[22:24] elliottcable: such as setting the policies on the Node global objects / native module exports objects, and whatnots.
[22:24] albertosh has joined the channel
[22:24] nibblebot has joined the channel
[22:25] _kud has joined the channel
[22:25] erichynds has joined the channel
[22:25] elliottcable: done reverting, recompiling and running all the restored tests
[22:26] elliottcable: they take about twenty minutes to run on my machine, non-parallel
[22:26] elliottcable: which is another change I’d love to get around to making to the codebase; rewriting all of the tests using shims that ensure they randomly select / re-select-if-already-used ports and such
[22:26] elliottcable: because `test.py -j25` would pretty much make my day.
[22:28] rickharrison has joined the channel
[22:28] Guest37337 has joined the channel
[22:29] Druid_ has joined the channel
[22:30] catphive has joined the channel
[22:30] catphive has left the channel
[22:30] jerkelen_ has joined the channel
[22:31] perezd: ryah: I wish nodejs could do mdns in standard lib
[22:31] perezd: there were 2 libs doing it, they both don't work anymore
[22:32] brianseeders has joined the channel
[22:32] NetRoY has joined the channel
[22:34] MatthewS has joined the channel
[22:35] Druid_ has joined the channel
[22:35] matyr has joined the channel
[22:35] enmand_ has joined the channel
[22:36] AvianFlu has joined the channel
[22:39] CIA-48: libuv: 03Igor Zinkovsky 07 * r456f831 10/ src/win/pipe.c : windows: ensure that the ipc frame header is properly initialized - http://git.io/E8lZ9w
[22:40] Brian` has joined the channel
[22:42] Druid_ has joined the channel
[22:42] CIA-48: node: 03Ben Noordhuis 07 * r3108a9e 10/ (11 files in 6 dirs): uv: upgrade to 456f831 - http://git.io/l9HpbA
[22:42] kenperkins: we made uncrunched today guys :)
[22:42] kenperkins: another +1 for nodejs
[22:42] heavysixer has joined the channel
[22:42] kenperkins: we (my nodejs based app)
[22:42] Prism has joined the channel
[22:43] synkro has joined the channel
[22:45] metaverse has joined the channel
[22:47] elliottcable: good, all pass.
[22:47] elliottcable: isaacs › it’s not that you can’t create security configuration on objects already existing … you can’t do so on objects *at all*.
[22:47] elliottcable: isaacs › you can only do so on ObjectTemplates.
[22:47] KaL has joined the channel
[22:48] isaacs: isee
[22:48] isaacs: so you set it on the OT and then create an object from that?
[22:48] elliottcable: isaacs › then, any objects instantiated from that Template will be handled securely when being passed between `v8::Context`s that don’t share security token
[22:48] elliottcable: mmhmm
[22:48] elliottcable: hence:
[22:48] isaacs: that sounds familiar
[22:48] elliottcable: rewriting Node to create ObjectTemplates where necessary for global-ish things it creates, and making sure we set the correct security options on those,
[22:49] isaacs: it was a happy day when i realized that node was exactly the sort of thing i was trying to build with v8, but being written by a much better c programmer who already knew about eio and ev
[22:49] elliottcable: and then providing a `Prison` API in a module to create new objects via temporary templates with given preset configurations of options, to give API consumers access to secured objects for whatever tasks they may have
[22:49] maushu: elliottcable, what would happen if we removed most of the .js code in node.js (the one embeded in node during compilation), put a simple sandbox there and then use the fork from a normal node.js to pass messages and receive messages?
[22:49] elliottcable: and then finally a fairly close duplicate of the VM api to “create prisons”
[22:49] verdoc has joined the channel
[22:49] elliottcable: isaacs › hahahahaha
[22:50] elliottcable: isaacs › similar reaciton here, when I remembered all the discussion/argument about “making contexts secure”
[22:50] elliottcable: and then seeing that v8 had already done … well … all of that, I was all nonplussed
[22:50] isaacs: elliottcable: so, at the very least, it'd be really good to try in 0.7 to make the vm.runInContext API more "correct"
[22:50] isaacs: elliottcable: ie, this should work:
[22:51] elliottcable: isaacs › did you read the commentary? My favourite possibility so far, assuming I’m right that we can pass them around as normal objects, is just to give API consumers the opportunity to acquire reference to the global_proxy itself
[22:51] mike5w3c_ has joined the channel
[22:51] isaacs: obj = {foo:1, setTimeout:setTimeout}; vm.runInContext("foo=2; setTimeout(function(){foo = 3}, 2000)", obj); assert(obj.foo === 2); setTimeout(function() { assert(obj.foo === 3}, 3000)
[22:52] elliottcable: ACTION reads
[22:52] isaacs: elliottcable: i mean, without any change in the api
[22:52] isaacs: i share the object, it's the "same" object, as far as i can tell.
[22:52] elliottcable: hmmmmmmmmmmmmmmmmmmmm
[22:52] elliottcable: okay, not quite
[22:52] elliottcable: that’s exactly what will fail with the API I just compiled and was about to push
[22:52] isaacs: yeah, because it just copies out after the script runs.
[22:53] isaacs: and i don't think we can manage to get that in for 0.6
[22:53] elliottcable: the foo=2 will work, and then after the VM finishes and that reactor-loop continues to run, the first exterior assert will work fine
[22:53] brianseeders has joined the channel
[22:53] isaacs: right
[22:53] elliottcable: oh, wait, I mis-read
[22:53] elliottcable: for 0.7
[22:53] elliottcable: I thought you’d said 0.6
[22:53] elliottcable: ACTION headdesks
[22:53] elliottcable: anyway
[22:53] isaacs: yeah
[22:53] elliottcable: we’ll talk about it more; I disagree, but not just because that’s *difficult* to do
[22:53] elliottcable: it also seems fairly “wrong” to me
[22:53] elliottcable: rather, it’s correct for the *current* API, because that’s what’s being passed in: the argument is even called “context” in the documents
[22:53] isaacs: well, it means that the context object you pass in is the *actual* global ctx in the vm
[22:54] elliottcable: yah
[22:54] elliottcable: and that’s rearrrry difficult to do, if we can at all
[22:54] isaacs: that's how evalcx works in spidermonkeyland
[22:54] elliottcable: proably some mongery with proxies
[22:54] nibblebo_ has joined the channel
[22:54] elliottcable: but it’s really … not a sandbox/context argument. It makes a lot more sense, at least in my head,
[22:54] elliottcable: to have an API that differentiates between “the sandbox” (the data going in, and things you can add to it)
[22:54] elliottcable: and then the external access to “the globals”
[22:54] elliottcable: for instance:
[22:55] elliottcable: A) if I pass in a sandbox with particular values, and some dude inside the environment forgets a `var` keyword … I don’t want that touching my sandbox. The sandbox I’m using to inject APIs to the client context (That’s really the point of it, after all, isn‘t it?), is not something I want munged up with every single global or accidentally-global variable the user creates
[22:55] isaacs: i disagree.
[22:55] langworthy has joined the channel
[22:55] elliottcable: B) any tasks I might ahve where I *am* interested in the user’s global variables, seem to me, would be *specifically interested in exactly that*
[22:55] isaacs: that sandbox is *the sandbox*
[22:56] TheJH: what should I do if I want to rotate an image (one-byte gray pixels) by an arbitrary angle?
[22:56] elliottcable: i.e. checking if any globals were created, or not; or using global variables as a way of “defining exports, or something like that
[22:56] isaacs: it's how you communicate with what's going on in the vm
[22:56] elliottcable: isaacs › Yah, I get that; and that’s how the current API works. Let’s put all this discussion down in the pull request (or possibly a new one?) for 0.7, and get more voices too
[22:56] isaacs: yeah, ok
[22:56] elliottcable: implementation-wise for your plan, let’s see,
[22:57] elliottcable: well, first off, there’s at least one change we could make
[22:57] elliottcable: it wouldn’t catch *all* global variables, but it would catch any ones that were passed *in*, which was the functionality I was expecting in the first place
[22:57] elliottcable: I didn’t want a missed-var to mux with my context, but I *did* expect changing an existing global to change the context
[22:57] catb0t has joined the channel
[22:58] elliottcable: so: it’d require an API change, but … we could require that the user pass their sandbox-argument to a `prepareSandbox()` method, that then returns a proxy object identical to the sandbox;
[22:58] isaacs: elliottcable: what if you wanted to use the vm module with a sandbox obj to see whether or not the userscript leaks any globals?
[22:58] elliottcable: isaacs › yah, that’s exactly what I was saying above
[22:58] isaacs: elliottcable: adding a field is a change.  you're passing in an object, and saying, "Here, you can change *just this thing*, and the things it touches, but that's it"
[22:58] elliottcable: that’s a fundamentally different task than dynamically injecting APIs/provisionals *into* the VM
[22:59] elliottcable: and that’d, to me, seem like a different API: “here, what are the globals in that VM, as created by the userland code”
[22:59] elliottcable: but, ignore my arguments on that point for now
[22:59] elliottcable: we have lots of time to discuss that
[22:59] isaacs: elliottcable: the intuitive way to do that is to give it an object to use as the global, and then check that object.
[22:59] isaacs: (imo)
[22:59] elliottcable: I’m much mroe interested at right this moment as to *how*, if at all, we can implement the way you want to do it
[23:00] isaacs: yeah, but like you said, step 1 is just making it a little better without changing the semantics or api, for 0.6, and that's probably pretty easy
[23:00] elliottcable: isaacs › I grasp that, and I could see `runWithNewGlobal(a_global)` as a great API for exactly that purpose, except …
[23:00] elliottcable: … for the fact that that’s basically impossible to do *right*, because it is literally impossible to change the global; v8’s optimizations make that a huge no-no
[23:00] elliottcable: so if we do anything *similar* to that, we’re going to have to use some über-nasty hacks
[23:00] elliottcable: if we can do it at all
[23:01] elliottcable: so first order of business is really to discuss what those hacks would be, get some code down to try them, y’know
[23:01] elliottcable: and then decide “Okay, is this even an *option*?”
[23:01] elliottcable: then we can move on to discussing its relative merits to other options (my preferred API, or the other possibilities I’d considered and documented, or even others I haven’t thought of yet)
[23:01] isaacs: sure sure.
[23:03] elliottcable: isaacs › if you have time, could you try to document to some minor exactitude (a series of JS-side testcases, perhaps?) the API you propose for 0.7+? Then I can start exploring the various options I’ve got bouncing around in my head, and try to implement it in the least-hacky way possible
[23:03] isaacs: k
[23:03] elliottcable: also, I need to talk to the v8 guys; it may be some of the things I think are impossible, are *acutally possible* … just hacky.
[23:03] isaacs: elliottcable: it'd be col to be able to implement the exact same api for vm that we'd use for child_process.fork()
[23:03] elliottcable: isaacs › I’m going to go enable the issue s feature on my fork; then you can create a GitHub issue with any testcases on my fork, we can work through the possibilities there
[23:03] isaacs: elliottcable: like, with message passing, etc.
[23:03] elliottcable: hmmmmmm
[23:04] elliottcable: maybe even consolidate them?
[23:04] elliottcable: I’m not familiar with that API though, I’ve never used it yet.
[23:04] isaacs: i dunno.  we're way off into crazy land at this point.
[23:04] elliottcable: ikr
[23:04] elliottcable: but
[23:04] elliottcable: !best crazyland
[23:04] purr: CRAZYLAND IS BESTLAND
[23:04] elliottcable: ↑ truth
[23:04] maushu: so...
[23:04] maushu: Conclusion?
[23:04] elliottcable: maushu › conclusion won’t come until a few weeks, maybe a month, down the road, for VM
[23:05] maushu: ACTION has no idea what happened here.
[23:05] elliottcable: maushu › and ‘prison’ stuff is going to take longer than that
[23:05] elliottcable: maushu › the only thing happening Right Now is that we’re getting prototypes instead of copy-in for the first half of the VM API
[23:05] skampy has joined the channel
[23:05] maushu: ...and it will allow me to run strange code without problems?
[23:05] elliottcable: skampy › you changed your name!
[23:05] elliottcable: skampy › we miss you in #elliottcable.
[23:05] elliottcable: maushu › this? No. That’s the “prison” stuff we’ve been discussing, which is completely separate.
[23:05] maushu: ;_;
[23:05] maushu: Okay.
[23:05] skampy: sharp memory
[23:06] elliottcable: lol, prison. Great word, isaacs.
[23:06] TheJH: btw: in a real prison, we want timeouts, right?
[23:06] elliottcable: TheJH › I’d definitely want your input on this sort of stuff.
[23:06] TheJH: isn't the best prison a JS-and-RPC-only process?
[23:06] isaacs: TheJH: or maybe just a way to kill it.
[23:06] elliottcable: TheJH › but it’s going to be weeks, possibly more, before I can focus on it. /=
[23:06] maushu: No timeouts.
[23:06] isaacs: TheJH: i mean, really.... running code securely requires a separate memory space.
[23:06] TheJH: just like catb0t works now
[23:06] elliottcable: well, we *could* do external-process prison
[23:06] StanlySoManly has joined the channel
[23:07] isaacs: like, separate process.
[23:07] elliottcable: yeah
[23:07] isaacs: or at least, v8 isolates.
[23:07] TheJH: exactly
[23:07] elliottcable: but, to be honest, I’m not too woried about that
[23:07] elliottcable: here’s the way I see it:
[23:07] maushu: elliottcable, I have no idea to prevent that __proto__ attack.
[23:07] TheJH: catb0t has one eval process per channel
[23:07] elliottcable: If it’s secure enough for v8, running all sorts of really dangerous code in the wild with lots of people trying to attack it,
[23:07] TheJH: maushu, hmm? what proto attack?
[23:07] murilobr has joined the channel
[23:07] elliottcable: then it’s secure enough for Node, which is *whatever you do with it*, going to see a lot less diverse attacks than Chrome-etc.
[23:08] maushu: TheJH, https://gist.github.com/860488
[23:08] elliottcable: maushu › we’re not trying to prevent this stuff from inside JS, dude. We’re talking about using v8 security features, which are much more powerful than *anything* we could ever do from inside Node.
[23:08] maushu: elliottcable, I know.
[23:08] maushu: Seems impossible to prevent this from the inside.
[23:08] elliottcable: ACTION nods
[23:08] TheJH: maushu, looks like something my more-secure runInNewContext can handle
[23:09] elliottcable: this stuff is really ill-documented,
[23:09] djbell has joined the channel
[23:09] TheJH: maushu, did you have a look at it?
[23:09] elliottcable: but here’s the closest thing to realdocumentation of what I’m talking about for you:
[23:09] maushu: No.
[23:09] elliottcable: http://izs.me/v8-docs/classv8_1_1ObjectTemplate.html#acd0c47ecc715fa1256dc95524a4e8608
[23:09] TheJH: maushu, https://github.com/joyent/node/pull/1696/files
[23:09] abraxas has joined the channel
[23:09] elliottcable: “When accessing properties on instances of this object template, the access check callback will be called to determine whether or not to allow cross-context access to the properties.”
[23:09] elliottcable: it doesn’t say much, but it basically boils down to this:
[23:10] maushu: TheJH, gonna test it.
[23:10] elliottcable: we have two axes of control over each object we create with those templates,
[23:10] TheJH: maushu, basically, everything gets cloned or wrapped inside the jail before the actual rogue code gets run
[23:10] skm has joined the channel
[23:10] elliottcable: noread/read/write, and then value/getter-setter/catch-all-handler
[23:10] elliottcable: or something of that nature
[23:10] markwubb_ has joined the channel
[23:11] ajpiano has joined the channel
[23:12] elliottcable: jerrysv › fyi,
[23:12] elliottcable: !source @ jerrysv
[23:12] purr: jerrysv: oftn-bot's source (which purr is forked from) can be found at: <https://github.com/oftn/oftn-bot>
[23:12] elliottcable: and it’s written by
[23:12] elliottcable: !eboyjr @ jerrysv
[23:12] purr: jerrysv: DESERTER. WE DO NOT SPEAK OF HIM.
[23:12] elliottcable: … er. not the factoid I intended.
[23:12] eboyjr: Oh brother..
[23:13] eboyjr: So immature
[23:13] TheJH: v8> 1
[23:13] purr: TheJH: (number) 1
[23:13] elliottcable: eboyjr › ಠ_ಠ
[23:13] TheJH: elliottcable, is is secured somehow? :D
[23:13] elliottcable: TheJH › er, some backflips with child processes that really aren’t at all effective, yeah
[23:13] maushu: TheJH, hmm, something weird is going on.
[23:13] elliottcable: TheJH › it’s going to have to wait for prisons to be useful
[23:14] CIA-48: node: 03Ben Noordhuis 07 * r018e110 10/ (126 files in 5 dirs): test: replace .addListener() calls with .on() - http://git.io/81V-XQ
[23:14] TheJH: elliottcable, did you have a look at catb0t? super-secure :)
[23:14] CIA-48: node: 03Ben Noordhuis 07 * rb6a869e 10/ test/simple/test-event-emitter-add-listeners.js : test: check that EventEmitter.on == EventEmitter.addListener - http://git.io/dKR7IA
[23:14] maushu: TheJH, it works. You're awesome. ^_^
[23:14] bnoordhuis: 126 files in 5 dirs <3
[23:14] elliottcable: TheJH › I didn’t write this one either, I don’t really care. I care more about toys than security. If somebody crashes my cheap-ass linode that I only really use for IRCing, so be it.
[23:14] elliottcable: bnoordhuis › hah
[23:14] elliottcable: bnoordhuis › oh, did you see my hilight earlier?
[23:14] TheJH: maushu, thanks :)
[23:15] bnoordhuis: elliottcable: no, what was it about?
[23:15] cronopio has joined the channel
[23:15] elliottcable: bnoordhuis › https://github.com/joyent/node/pull/1801
[23:15] bnoordhuis: oh, the vm stuff
[23:15] bnoordhuis: ACTION steps away
[23:15] maushu: TheJH, from what I understand from your project, you wrap everything that is sent into the context?
[23:15] elliottcable: bnoordhuis › I fixed it, and started a long discussion regarding plans for 0.7; ask isaacs
[23:15] CIA-48: node: 03isaacs 07 * re6f1471 10/ doc/api/zlib.markdown : doc: Add examples of zlib usage with http - http://git.io/6KUcuQ
[23:15] maushu: *from your code
[23:15] bnoordhuis: vm makes my head hurt :(
[23:15] TheJH: maushu, yup, clone objects, wrap functions :)
[23:15] maushu: bnoordhuis, you aren't the only one. Huge headache here.
[23:16] elliottcable: bnoordhuis › well, the main question I need your input on is a new API we’re planning
[23:16] elliottcable: bnoordhuis › more heads is better than fewer heads when considering API changes. Heh.
[23:16] TheJH: maushu, and I break the caller chain with useless recursion
[23:16] maushu: Awesome.
[23:16] neilk_ has joined the channel
[23:17] jscheel_ has left the channel
[23:17] elliottcable: isaacs › Something I failed to mention (we’ve been talking for ages; let me know if you need to leave) regarding the access-token stuff
[23:18] elliottcable: isaacs › we *can* manipulate individual objects for which we don’t have the creating-templates, but *only* to the extent of “turning access checks on.”
[23:18] elliottcable: isaacs › if we do so for an object that *does not* have access check callbacks (i.e. didn’t come from an `v8::ObjecTemplate` that we were responsible for), then that will make the object completely and totally inaccessible in any way to the child context.
[23:19] geekn has joined the channel
[23:19] elliottcable: which means we’d basically have to, er, “cauterize” the far edges of the secured-object graph we pass into the prison
[23:19] elliottcable: any properties of the `prison.createSecureObject()`s that aren’t themselves known to be secured with a callback, must be completely locked down to the current token, permenantly.
[23:20] criswell has joined the channel
[23:20] elliottcable: which could have wide-spread repurcussions
[23:20] isaacs: hm... you know, i really think this is just making a stronger and stronger case for "doesn't belong in node-core; use child procs"
[23:20] isaacs: message passing ftw.
[23:20] SubStack: haha
[23:21] SubStack: I like how at the first sign of controversy stuff gets shoved out into userspace
[23:22] freewil has joined the channel
[23:23] jerrysv: !source @ jerrysievert
[23:23] purr: jerrysievert: oftn-bot's source (which purr is forked from) can be found at: <https://github.com/oftn/oftn-bot>
[23:23] jerrysv: ah, i see
[23:23] catb0t has joined the channel
[23:23] Druid_ has joined the channel
[23:23] sephr has joined the channel
[23:24] jerrysv: was in a meeting
[23:26] tommyvyo has joined the channel
[23:26] elliottcable: isaacs › basically, yeah
[23:26] elliottcable: isaacs › and I completely do not think this need to be in core
[23:26] Treffynnon has joined the channel
[23:27] Brandon_R has joined the channel
[23:27] Brandon_R: Hey guys
[23:27] Brandon_R: what's up
[23:27] elliottcable: isaacs › but I *do* think the necessary changes should be made to Node itself; they do not affect the API, almost certainly do not affect performance in any measurable way, and do not really increase code complexity
[23:27] elliottcable: there are no real losses, but some definite benifits
[23:27] Brandon_R: i have a question
[23:27] Brandon_R: how many concurrent connections can 1 instance of socket.io handle?
[23:28] Brandon_R: i have no way of benchmarking websockets :(
[23:28] Brandon_R: just websockets not polling or ajax etc
[23:28] fzzzy has joined the channel
[23:28] dshaw_: Brandon_R: It depends
[23:28] sfoster has left the channel
[23:28] Brandon_R: on?
[23:29] sephr has left the channel
[23:29] dshaw_: Brandon_R: How much data you're passing around and how good you are at keeping the event loop tight and light.
[23:29] guidocalvano has joined the channel
[23:29] joshkehn has joined the channel
[23:29] Brandon_R: realtime canvas
[23:30] joshkehn has left the channel
[23:30] DTrejo has joined the channel
[23:30] dshaw_: Brandon_R: Now.js claims 6500. I have my instances high water marked at 1K connections.
[23:30] guidocalvano has joined the channel
[23:30] toddmorrill has joined the channel
[23:30] dshaw_: Brandon_R: build for horizontal scaling
[23:30] davidbanham has joined the channel
[23:31] Brandon_R: they say that number is softcoded
[23:31] Brandon_R: so u have to buy the cluster now.js
[23:31] Brandon_R: for over 6500
[23:31] jaequery has joined the channel
[23:31] toddmorrill: hey guys, I have a question for the channel, I took 3 years of programming 10 years ago, and havent programmed in a decade. looking to jump back in with web apps, for fun. looking for a ground up learning source, ie combined screencast books etc, recomendations?
[23:32] __tosh has joined the channel
[23:32] toddmorrill: I want to build my skills as based on JS
[23:32] Brandon_R: Hey Brandon  It's a soft limit, not hard coded. Are you free to chat/skype about this? Easier to explain that way.  Darshan 
[23:32] CIA-48: node: 03Ben Noordhuis 07 * r4908e5b 10/ deps/v8/src/platform-solaris.cc : 
[23:32] CIA-48: node: v8: implement VirtualMemory class on SunOS
[23:32] CIA-48: node: Unbreaks build on SunOS. Un-reverts 9bbca99107652906a060679ee95bf1ad7381cbb5. - http://git.io/UPhuVQ
[23:32] Brandon_R: my question was It is my understanding that now.js only supports up to 6000 simultinous connections. Is that a hard coded limit built into now.js so we have to buy the cluster solution or is that a system limit of node.js or the operating system itself? Also what is the price of the cluster solution since i can't find it listed on the website. Thanks 
[23:32] dshaw_: No idea
[23:32] TheJH: dshaw_, you use nowjs? :/
[23:33] jonrohan has joined the channel
[23:33] dshaw_: TheJH: I do not.
[23:33] TheJH: ah, ok
[23:33] davidban_ has joined the channel
[23:33] dshaw_: TheJH: It's a benchmark that I refer to. :)
[23:33] brainproxy: Brandon_R: where are you getting the num 6,000?
[23:34] Brandon_R: i  meant 6500
[23:34] dshaw_: TheJH: I use Socket.io with RedisStore.
[23:34] Brandon_R: it's on the nowjs website
[23:34] bnoordhuis: toddmorrill: maybe try #javascript? this channel is about node.js, not javascript in general
[23:34] dshaw_: This way, I don't have to worry as much about an individual instance's ability to handle concurrents.
[23:35] Brandon_R: do you use something like rabbitmq or ozmq?
[23:35] tjholowaychuk: dshaw_ i'll probably get around to a zmq backend sometime too
[23:35] tjholowaychuk: gotta port everything to 0.6.x first :(
[23:35] TheJH: maybe the node-proxy stuff nowjs uses makes it slower/more memory-consuming?
[23:35] matyr has joined the channel
[23:35] dshaw_: tjholowaychuk: already did it
[23:35] tjholowaychuk: dshaw_ oh :)
[23:35] tjholowaychuk: where?
[23:35] brainproxy: toddmorrill: if you're interest is in JS and node, maybe checkout out Eloquent JavaScript and The Node Beginner Book
[23:36] brainproxy: toddmorrill: google those and you'll turn up the ebooks
[23:36] dshaw_: tjholowaychuk: Need an updated 0MQ module
[23:36] tjholowaychuk: ah
[23:36] dshaw_: That would be awesome!
[23:36] tjholowaychuk: it's a little sketchy
[23:36] dshaw_: zmq is really behind
[23:36] tjholowaychuk: behind?
[23:36] Brandon_R: b3hinD?
[23:36] skm has joined the channel
[23:37] dshaw_: The guys a dotcloud are heavy ZeroMQ users and are considering committing a new module.
[23:37] tjholowaychuk: that would be nice
[23:37] Brandon_R: tell them hell yeah
[23:37] tjholowaychuk: the current one looks a little unmaintained
[23:37] Brandon_R: comit that s&&t
[23:37] dshaw_: tjholowaychuk: feature incomplete and on old version
[23:37] dshaw_: yeah
[23:37] Brandon_R: i would love to see zmq node
[23:37] Brandon_R: is it rabbitmq or zmq in general?
[23:38] dshaw_: Brandon_R: npm info zmq
[23:38] Brandon_R: npm info zmq
[23:38] dreamdust1 has joined the channel
[23:38] dreamdust1 has left the channel
[23:39] Brandon_R: does this song make you guys cry - http://www.youtube.com/watch?v=ycze0tiMAPw
[23:39] dreamdu5t has joined the channel
[23:40] pitlimit has joined the channel
[23:41] pitlimit: I'd like to set up javascript code to connect to hbase, the database
[23:41] pitlimit: Can anyone point me in the right direction?
[23:42] maushu: pitlimit, https://github.com/joyent/node/wiki/modules#wiki-db-misc
[23:42] jtrudeau has joined the channel
[23:42] DTrejo: HBASE has an http api pitlimit ?
[23:42] Brandon_R: holy h
[23:42] Brandon_R: billions of rows
[23:42] Brandon_R: why is this now popular?
[23:42] Brandon_R: not
[23:42] DTrejo: nvm
[23:42] Brandon_R: i'm such a bandwagon programmer :(
[23:43] Brandon_R: i need to fix that
[23:43] dshaw_: https://github.com/dshaw/socket.io-zero
[23:43] maushu: LIST ALL THINGS!
[23:43] pitlimit: maushu, thanks!
[23:43] pitlimit: DTrejo, is that node-hbase?
[23:43] pitlimit: DTrejo, could you clarify?
[23:43] DTrejo: nvm, it looks lke node-hbase would work
[23:43] pitlimit: :)
[23:43] DTrejo: :)
[23:43] tjholowaychuk: DTrejo yay :) haha
[23:43] pitlimit: Now I have to figure out how to use this :)
[23:43] tjholowaychuk: dshaw_ ^*
[23:44] dshaw_: dvv has a forward implementation that I'm going to try to hack in until we get a real ZeroMQ module.
[23:44] tjholowaychuk: let's just fork that other one
[23:44] dshaw_: You can only bind *one* publisher, so it's totally not usable.
[23:44] Druid_ has joined the channel
[23:45] tjholowaychuk: the tests he has are useless too
[23:45] tjholowaychuk: like 6 vows
[23:45] tjholowaychuk: that dont even really test anything
[23:45] dshaw_: yeah
[23:45] dshaw_: Not sure. I'm might be more productive to build the bindings from scratch.
[23:45] Brandon_R: hey guys
[23:46] elliottcable: isaacs › https://github.com/joyent/node/pull/1801#commits-pushed-8626199
[23:46] elliottcable: <3 GitHub
[23:46] purr: Let it be known that elliottcable hearts GitHub.
[23:46] Brandon_R: would you recommend hbase?
[23:46] elliottcable: !so fucking much
[23:46] purr: elliottcable: awww *blushes*
[23:46] tjholowaychuk: dshaw_ yeah maybe
[23:46] Brandon_R: or do you support more cloud based solutions?
[23:46] tjholowaychuk: dshaw_ i'll help if you're down, just need some time haha
[23:46] Brandon_R: or things like pushapp etc
[23:47] elliottcable: isaacs › if you’d like, I can clean them up and stuff them onto master. What’s required for push access to Joyent/node?
[23:47] dshaw_: tjholowaychuk: time
[23:47] elliottcable: I’m already in the CLA, from somewhere aaaaages back
[23:47] dshaw_: tjholowaychuk: really need 48 hour days
[23:47] tjholowaychuk: yeah i'll say
[23:48] Brandon_R: what is push access?
[23:48] dshaw_: tjholowaychuk: How's deep are you into ZeroMQ?
[23:48] elliottcable: https://github.com/languages/JavaScript is such a useful page for finding neat things
[23:49] reid has joined the channel
[23:49] SubStack: shiny things
[23:50] dshaw_: tjholowaychuk: I had a great conversation with the dotcloud guys this week and they depend on 0MQ for everything they do in their stack. Really want to get them engaged on this.
[23:50] dshaw_: SubStack: yo!
[23:50] dshaw_: SubStack: get the dotcloud guys on
[23:50] tjholowaychuk: dshaw_ nice yeah that sounds like a good resource to tap into, we're going to try and use it more
[23:50] Druid_ has joined the channel
[23:51] dshaw_: SubStack: did you guys finish zmq2?
[23:51] dshaw_: tjholowaychuk: me too
[23:51] SubStack: not sure who was hacking on that
[23:51] dshaw_: tjholowaychuk: I'm much more experienced with Redis
[23:51] maushu: SubStack, saw a ruby based html5 ssh client around. Reminded me of node.js ssh server.
[23:51] SubStack: shykes__ is hacking on a http://collectd.org client
[23:51] tjholowaychuk: dshaw_ it's like the redis of networking :D
[23:51] tjholowaychuk: that's why i love it
[23:52] maushu: Why the hell is ssh so complicated.
[23:52] dshaw_: yeah
[23:52] rogp has joined the channel
[23:52] SubStack: maushu: yes really
[23:52] SubStack: so hard >_<
[23:52] tjholowaychuk: dshaw_ let me know if you get them involved with the bindings
[23:52] tjholowaychuk: that would be awesome
[23:52] maushu: But... it would be awesome... *sniff*
[23:52] SubStack: also true
[23:52] maushu: And manly.
[23:52] m0: I am trying to use paths for ExpressJS-resource, but the exports.show doesn't work, is that the correct intention?
[23:52] dshaw_: tjholowaychuk: absolutely
[23:52] SubStack: maybe I'll revisit my attempt at some point
[23:53] m0: How do we use express-resource with subpaths, such as /foo/bar/ w
[23:53] rogp has left the channel
[23:53] Brandon_R: follow me https://twitter.com/#!/BRampersad
[23:53] m0: The exports.index works great, but exports.show doesn't work for subpaths 
[23:53] Brandon_R: and subscribe http://www.youtube.com/user/webmastertool?feature=mhee
[23:54] tjholowaychuk: m0 hmm there was an ordering issue with older versions
[23:54] tjholowaychuk: could be that
[23:55] m0: tjholowaychuk: I have been trying tinkering on that for many hours , I am about to debug it. Can you expand on that ordering issue?
[23:55] tjholowaychuk: m0 previously the actions were added to express as defined
[23:55] tjholowaychuk: now they have an explicit order internally
[23:56] Wa has joined the channel
[23:56] tjholowaychuk: m0 https://github.com/visionmedia/express-resource/commit/e4e70805e09a0cf43b3edeb45a4d123a20fb2825
[23:56] ritch1 has joined the channel
[23:56] m0: tjholowaychuk: hmm, I will look into that, thanks for the input :)
[23:56] tjholowaychuk: m0 so if you had .new after .show
[23:56] deoxxa has joined the channel
[23:56] tjholowaychuk: you would be screwed
[23:56] tjholowaychuk: haha
[23:57] m0: tjholowaychuk: I wonder if they would accept a change in documentation so I can state "Explicitly" it
[23:57] sonnym has joined the channel
[23:57] tjholowaychuk: yeah sure just end me a pull request
[23:57] m0: tjholowaychuk: ah, your the maintainer? cool
[23:58] ritch1 has left the channel
[23:58] elliottcable: SubStack, maushu, what’s hard about SSH?
[23:58] elliottcable: or are you trying to implement the protocol?
[23:58] m0: tjholowaychuk: I am using express-resource for this open project http://hangoutacademy.com, I am scratching my head with all this tinkering
[23:58] maushu: elliottcable, yes.
[23:58] elliottcable: what for?
[23:58] maushu: for node.js based ssh server
[23:59] davidbanham has joined the channel
[23:59] HAITI has joined the channel
[23:59] elliottcable: maushu › “This test will hurt feelings and is stupidly hard to lock down.”
[23:59] elliottcable: maushu › I’m still laughing at that comment
[23:59] tjholowaychuk: m0: nice :) well you may want to try visionmedia/express-trace, and do issue a request with curl
[23:59] elliottcable: maushu › is ‘@bmeck’ on GitHub in IRC as someone else?
[23:59] tjholowaychuk: that'll help you figure out what it's hitting
