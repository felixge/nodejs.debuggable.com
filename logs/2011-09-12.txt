[00:01] dynacker: mongodb doesnt play nice on openvz :(
[00:03] sonnym has joined the channel
[00:04] Hhaack has joined the channel
[00:05] jmoyers has joined the channel
[00:05] dseif has joined the channel
[00:06] shipit has joined the channel
[00:07] joshkehn has joined the channel
[00:10] _main_ has joined the channel
[00:11] joshkehn: Anyone have some quick bits on using browserify without connect?
[00:15] jesusabdullah: joshkehn: did you see .bundle() ?
[00:15] joshkehn: No?
[00:15] jesusabdullah: That returns the bundled sauce, which you can use however you want without the middlewares
[00:15] jesusabdullah: It's in the readme
[00:15] joshkehn: Right.
[00:15] AvianFlu: also, isn't there a cli for it now?
[00:15] joshkehn: I want to develop but without using Connect
[00:15] joshkehn: Would I have to re-bundle it everytime?
[00:15] perezd has joined the channel
[00:16] jesusabdullah: It's just a string
[00:16] jesusabdullah: also, yes, there is a cli
[00:16] joshkehn: Sure, fine, just a string, great! ;)
[00:16] jesusabdullah: well, you can statically serve a string right?
[00:16] joshkehn: I'm using a node server, so I don't mind putting more in there.
[00:16] joshkehn: But I do mind installing connect just to use browserify. 
[00:16] Hhaack: I'm getting error: "task failed (err #-1): {task: libv8.a SConstruct -> libv8.a}" and can't find anything on google, just error #2, thoughts?
[00:17] aaronblohowiak_: Hhaack: when do you get that error?
[00:17] Hhaack: I'm doing the whole setup process
[00:17] jesusabdullah: joshkehn: Well, you don't need to install connect then. Either find a way to wrap the middleware, or use something like .bundle to get at the string that the middleware would likely respond with in the middleware anyway
[00:17] stagas has joined the channel
[00:17] Hhaack: When I try to "make", that is
[00:17] jesusabdullah: It's easiest with connect, obvs, but you really shouldn't *need* it
[00:18] joshkehn: Sounds like more hacking them I'm up for tonight.
[00:20] jesusabdullah: I still don't understand why you can't just serve up the .bundle with the standard http module :(
[00:20] AvianFlu: put it in a file and static-serve it
[00:20] AvianFlu: that's how you would
[00:20] jesusabdullah: or that!
[00:20] joshkehn: ...
[00:20] joshkehn: I'm not going to re-bundle and save the code everytime I make a change.
[00:21] AvianFlu: that was more for jesusabdullah's question
[00:21] joshkehn: I'm wondering now if Browserify caches it and I would have to rekick the entire server every time.
[00:21] joshkehn: Fuck it.
[00:21] joshkehn: I'm going with straight <script> tags.
[00:22] jesusabdullah: joshkehn: You don't need to rebundle! Just do it once.
[00:22] jesusabdullah: var sauce = browserify(whatever).bundle(); then serve the sauce when you want to
[00:22] jmoyers: Hhaack are you installing edge or 4.11? stick to 4, its stable
[00:22] jesusabdullah: rebundling every time would be disasterous. It takes a non-trivial amount of time to bundle stuff.
[00:23] joshkehn: But I'm changing the file every time.
[00:23] joshkehn: So wouldn't have have to rebundle it?
[00:23] Hhaack: I'll start with this...this is the first contact I've had with any of this, and so I'm not even sure, I just need to get this up and running for a class :P
[00:23] [[zz]] has joined the channel
[00:23] jmoyers: not sure what you mean
[00:23] Hhaack: I've just followed the instructions on https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29 to get this far
[00:25] jesusabdullah: joshkehn: You're changing your browserified code every time you make a new request?
[00:25] jesusabdullah: That doesn't sound productive.
[00:25] joshkehn: wat
[00:25] mvrilo has joined the channel
[00:25] joshkehn: I'm developing.
[00:25] joshkehn: Which means I'm writing code, testing, writing more code, testing, writing code, testing....
[00:25] kiffness has joined the channel
[00:25] joshkehn: Unless I'm missing something big here.
[00:25] cjm has joined the channel
[00:25] joshkehn: Say I have foo.js
[00:26] joshkehn: foo.js has
[00:26] joshkehn: exports.speak = function () { return 'Hello, World'; };
[00:26] joshkehn: I bundle and serve this.
[00:26] joshkehn: In the browser I say:
[00:26] kiffness has joined the channel
[00:26] joshkehn: var foo = require('foo');
[00:26] joshkehn: console.log(foo.speak());
[00:27] joshkehn: Now I change foo to also return a timestamp
[00:27] joshkehn: function () { return new Date().getTime() + ': Hello, World'; };
[00:27] joshkehn: Wouldn't I have to rebundle the code?
[00:27] marcello3d: joshkehn: I restart the whole node process whenever a file changes
[00:27] jmoyers: joshkehn if you're in development
[00:27] jmoyers: it has a watchfile option
[00:27] jmoyers: at least in the middleware
[00:28] joshkehn: In the Connect middleware.
[00:28] jmoyers: seems somewhat trivial to run a script on file change
[00:28] joshkehn: Which I'm not using and don't wish to use.
[00:28] marcello3d: joshkehn: node restarts so quickly it's pretty reasonable
[00:28] joshkehn: It's not the point.
[00:28] marcello3d: never takes more than a second to restart
[00:28] joshkehn: The point is it's an extra step.
[00:28] marcello3d: joshkehn: it's automated
[00:28] joshkehn: I have to break from Sublime, ^C node, arrow up, enter, flip to my browser, refresh.
[00:28] marcello3d: I use a launcher in front of the node process
[00:29] mbrevoort has joined the channel
[00:29] marcello3d: so I just go from code editor to browser
[00:29] joshkehn: Somedays I miss writing PHP code.
[00:29] marcello3d: my particular launcher isn't released, but it's similar to runjs
[00:29] marcello3d: https://github.com/DTrejo/run.js
[00:29] jmoyers: nobody's forcing you into a browserify workflow
[00:30] joshkehn: jmoyers: I know
[00:30] marcello3d: you have to restart node if you change any server-side js, anyway
[00:30] joshkehn: Thing is I'm sketching the client out right now, not the server.
[00:30] marcello3d: right, my point is my approach works for both
[00:31] marcello3d: and does all the things you want
[00:31] pizthewiz has joined the channel
[00:31] joshkehn: I'll look at run.js when I'm doing server work.
[00:32] joshkehn: Right now I would still have to mesh browserify with node-static, which I would rather not futz with.
[00:32] joshkehn: <script> tags have prevailed for now.
[00:33] marcello3d: awesome
[00:33] marcello3d: I misunderstood the problem
[00:33] joshkehn: Np
[00:34] jhurliman: argh, node libraries need to throw fewer uncatchable exceptions
[00:34] nerdy has joined the channel
[00:35] jmoyers: git clone at starbucks
[00:35] jmoyers: is not the best
[00:36] jmoyers: damnable huge repositories
[00:36] joshkehn: Still probably faster then svn checkout
[00:36] joshkehn: ;)
[00:36] alnewkirk has joined the channel
[00:36] jmoyers: probably not ;-)
[00:36] jmoyers: whole history of the whole repository
[00:37] jmoyers: though the compaction is 1000000 billion times better
[00:37] joshkehn: Our svn server for work is in cal.
[00:37] tbranyen: jmoyers: great vid link yesterday re: ryah's http server in C
[00:37] joshkehn: A svn up takes about five minutes, a checkout you need to go grab lunch.
[00:37] willwhite has joined the channel
[00:37] jmoyers: tbranyen one of the few longer tutorials i've watched all the way through :-)
[00:39] blup has joined the channel
[00:40] enmand has joined the channel
[00:40] ditesh|cassini has joined the channel
[00:41] willwhite has joined the channel
[00:43] cjheath has joined the channel
[00:44] kiffness_ has joined the channel
[00:46] jakehow has joined the channel
[00:48] Me1000 has joined the channel
[00:50] paulwe has joined the channel
[00:56] k1ttty has joined the channel
[00:57] mike5w3c_ has joined the channel
[00:57] smtlaissezfaire has joined the channel
[00:58] igl has joined the channel
[00:59] CarterL has joined the channel
[00:59] willwhite has joined the channel
[01:01] blup has joined the channel
[01:03] replore_ has joined the channel
[01:03] replore has joined the channel
[01:04] javajosh has joined the channel
[01:04] freeformz has joined the channel
[01:04] Sorella has joined the channel
[01:06] r04r has joined the channel
[01:12] random123: Are there any specific noteworthy limitations as far as bindings/API in a server side web development environment that someone would choose Python, Ruby, PHP, etc? I like JS, and how Node works just wondering if there are things you would still use those in a server side environment for?
[01:13] enhydra has joined the channel
[01:13] random123: Like I guess someone could just write their own C bindings and do anything, but are there specific ones that present limitations right now?
[01:13] r04r has joined the channel
[01:17] JakeyChan has joined the channel
[01:18] jmoyers: random123 right well, node is not great at blocking computation
[01:19] jmoyers: but as you point out, you can write c bindings
[01:19] r04r has joined the channel
[01:19] jmoyers: or use a seperate process for long running computations
[01:19] codely has joined the channel
[01:19] jmoyers: however, i think the general consensus of everyone at node summercamp was *dont* write bindings unless you absolutely have to
[01:20] AvianFlu: moving in between javascript and c++ is expensive, that was the other point made
[01:20] tbranyen: jmoyers: yeah i mean some things just make more sense as native bindings imo
[01:20] tbranyen: but i wouldn't make them for just anything
[01:21] tbranyen: its probably the same question as to whether or not you should write a gzip implementation or if you should just shell out to the native gzip
[01:22] jmoyers: i think for even fairly complicated things
[01:22] jmoyers: all javascript is the way to go
[01:22] jmoyers: there are some things that are just so deep in a domain, you can't be recreating all that in node, though
[01:22] jmoyers: for instance, ffmpeg
[01:22] tbranyen: tell that to git.js :-/
[01:22] jmoyers: image manipulation crap
[01:22] jmoyers: well, a lot of those projects seem to be for fun right
[01:22] jmoyers: which im all for
[01:22] jmoyers: like writing a native database driver in javascript O.o
[01:23] tbranyen: i think its the same thing in the ruby community
[01:23] random123: jmoyers: So I guess if you needed image manipulation, you could spawn a Python process and it can execute a callback once its completely?
[01:23] tbranyen: plenty of native bindings and pure ruby code as well
[01:23] KingJamool has joined the channel
[01:23] jmoyers: random123 yes, or if its something you can stream
[01:23] jmoyers: streaming from a child process is fine
[01:23] tbranyen: its good to have both, i think more guides should come out for writing native bindings tho, like best practices
[01:24] jmoyers: kind of difficult to teach that from the ground up if you don't understand c++
[01:24] jmoyers: lots of things to consume
[01:24] r04r has joined the channel
[01:24] ditesh|cassini has joined the channel
[01:24] enhydra has joined the channel
[01:24] enhydra has joined the channel
[01:25] jmoyers: i know polotek had a nodeconf talk on it though
[01:25] tbranyen: jmoyers: correct, but there are also just things to get someone who's already familiar with C/C++ comfortable writing native modules
[01:25] tbranyen: oh sweet, i'll have to check it out
[01:26] jmoyers: http://blip.tv/jsconf/nodeconf-2011-marco-rogers-5417811 think this is it
[01:26] tbranyen: excellent thx
[01:26] jmoyers: my starbucks wifi is slower than shit htough, its taking forever to come up :P
[01:27] tbranyen: i'm in the process of rewriting nodegit
[01:27] tbranyen: to actually provide the functionality people would want
[01:27] abraxas has joined the channel
[01:27] jhurliman: that was a lot harder than it should have been, but i finally put together a connect middleware that will catch when res.send() is called more than once and logs an error instead of crashing the server
[01:27] abraxas has joined the channel
[01:28] jmoyers: async error handling needs some work eh ;-)
[01:28] r04r has joined the channel
[01:28] r04r has joined the channel
[01:29] tbranyen: something i'd like to be able to do is write synchronous methods first and then have a nice macro wrapper for async
[01:29] tbranyen: that way there is an identical sync/async api
[01:30] jmoyers: im a little weary of that concept
[01:31] tbranyen: whys that?
[01:31] jmoyers: its on the mailing list every single day
[01:31] jmoyers: little compiler libraries
[01:31] tbranyen: lol is it?
[01:31] jmoyers: or yield/fibers
[01:31] tbranyen: the mailing list is too large for me to follow
[01:31] jmoyers: things like streamline.js
[01:32] jmoyers: i stick it on digest
[01:32] jmoyers: but honestly, lots of fluff, very little content
[01:34] r04r has joined the channel
[01:36] H4ns``` has joined the channel
[01:38] jmoyers: is there a client side package that provides the same style syntax highlighting and such as gist.github.com, but works locally on top of <pre> or <code> blocks?
[01:39] tbranyen: jmoyers: yeah
[01:39] tbranyen: i'm using it on my new site
[01:39] jmoyers: nom nom, what is it?
[01:39] tbranyen: highlight.js and uhhh
[01:39] jmoyers: i'm tried of seeing my site hang on gists
[01:39] tbranyen: https://github.com/tbranyen/tabdeveloper.com/blob/v2.0/client/assets/css/github.css
[01:40] r04r has joined the channel
[01:40] mandric has joined the channel
[01:40] jmoyers: tbranyen thanks
[01:40] tbranyen: np
[01:41] shipit has joined the channel
[01:42] jmoyers: this support 41 languages
[01:42] jmoyers: is the speed okay?
[01:42] jmoyers: i assume there is a FOUT associated with this thing
[01:43] jmoyers: oh nice, you can package only what you need
[01:44] tbranyen: yep
[01:45] AaronMT has joined the channel
[01:45] tbranyen: its not the fastest thing ever, but you can prerender it on the server jmoyers 
[01:45] tbranyen: there is a nodejs package
[01:45] jmoyers: prerender, thats a good idea
[01:45] jmoyers: very dav glass
[01:45] codely has joined the channel
[01:46] tbranyen: i'm doing it client side atm, totally forgot about rendering on the server
[01:46] tbranyen: glad you asked :)
[01:46] codely: how can i intentionally block on a function with a return? before the return setTimeout?
[01:46] jmoyers: you.. cant
[01:46] tbranyen: long for loop
[01:46] hij1nx has joined the channel
[01:46] tbranyen: :-p
[01:46] codely: yes yes node.js is non blocking awesome cool but when something expects something back immediately ...
[01:46] codely: hah
[01:46] codely: actually .. you can
[01:47] Nexxy: the real question is
[01:47] jmoyers: nah, you can't, if something process.nextTicks
[01:47] Nexxy: why?
[01:47] codely: I've seen libs that do that, and umm theres also shit like readFileSync
[01:47] jmoyers: there are some sync methods for common some, like readFileSync
[01:47] joshkehn: codely: Not really.
[01:47] Nexxy: codely, you may want to read the source code before making such assertations
[01:47] jmoyers: but readFileSync is intentionally written syncronously
[01:48] jmoyers: and also, if you're in a server context, you can't really do it, period
[01:48] jmoyers: unless its at startup
[01:48] willwhit_ has joined the channel
[01:48] Nexxy: "hold on all you in-flight requests... I have something *really* important to do, you'll just have to wait"
[01:48] jvdev has joined the channel
[01:48] freeformz has joined the channel
[01:49] codely: ahh ok
[01:49] codely: understood
[01:49] codely: ACTION retreat!~
[01:49] Nexxy: codely, ;P
[01:49] postwait has joined the channel
[01:49] codely: i guess it's been some getting used to.
[01:49] Nexxy: definitely
[01:50] Nexxy: there are several flow control libs out there that may make the transition easier
[01:50] codely: basically it's amazing. and the other day i was firing up massive http.requests. but i was paginating
[01:50] codely: hah
[01:50] codely: yeah i've seen them … the Ctrl one is interesting
[01:50] [[zz]] has joined the channel
[01:50] jspiros has joined the channel
[01:51] CarterL has joined the channel
[01:54] schwab has joined the channel
[01:54] nuck has joined the channel
[01:54] davidascher has joined the channel
[01:55] slloyd_ has joined the channel
[01:57] bnoordhuis has joined the channel
[01:58] Emmanuel has joined the channel
[02:00] skm has joined the channel
[02:02] stepheneb has joined the channel
[02:03] jspiros has joined the channel
[02:03] alnewkirk has joined the channel
[02:04] zeade has joined the channel
[02:06] isaacs has joined the channel
[02:06] vicapow has joined the channel
[02:09] crescendo|laptop has joined the channel
[02:09] crescendo|laptop has joined the channel
[02:15] dmkbot: joyent/node: 03BillBarnhill: Fix memory allocation in uv__fs_after - https://github.com/joyent/node/issues/1686
[02:17] deedubs has joined the channel
[02:18] admc has joined the channel
[02:20] dmkbot: joyent/node: 03Bonuspunkt: fs.watchFile not working on windows - https://github.com/joyent/node/issues/1358
[02:23] a_suenami has joined the channel
[02:30] Styles has joined the channel
[02:31] vidi has joined the channel
[02:31] clu3 has joined the channel
[02:34] springmeyer has joined the channel
[02:34] enmand has joined the channel
[02:35] EvRide has joined the channel
[02:35] slloyd_ has joined the channel
[02:38] hacksparrow has joined the channel
[02:38] jacobolus has joined the channel
[02:40] akujin has joined the channel
[02:42] nuck: Ugh is NPM having problems or am I fucking up installing cluster and express?
[02:43] nuck: It's hitting a 404
[02:43] isaacs: Nuck: weird?
[02:43] isaacs: Nuck: npm install cluster express <-- works for me
[02:44] mvrilo has joined the channel
[02:45] nuck: isaacs » It seems to be resolving to edgecastcdn :/
[02:45] nuck: https://registry.npmjs.org/cluster/0.7.0 specifically
[02:45] isaacs: Nuck: do you have some odd DNS or something?
[02:45] JSManiacs has joined the channel
[02:45] isaacs: works for me.
[02:45] nuck: Name:	registry.npmjs.org
[02:45] nuck: Address: 72.21.81.63
[02:45] nuck: :/
[02:46] AvianFlu: nuck: I get 184.72.142.196 for that
[02:46] cjm has joined the channel
[02:46] nuck: yeah that DNS is wrong
[02:46] AvianFlu: cat /etc/resolv.conf
[02:46] AvianFlu: comment out whatever isn't 4.2.2.2
[02:47] nuck: That's Google, right?
[02:47] dexter_e has joined the channel
[02:48] bogdanbiv has joined the channel
[02:48] stride has joined the channel
[02:48] AvianFlu: google is 8.8.8.8 and 8.8.4.4
[02:48] AvianFlu: 4.2.2.2 is like "the master" or something
[02:48] AvianFlu: or "one of the masters"
[02:48] nuck: haha I'm in Comcast's DNS
[02:48] AvianFlu: I've been using it as my default ping target to see if the net is up for like, a decade
[02:48] nuck: Fuck that I'm moving to Google DNS >_>
[02:49] slloyd_ has joined the channel
[02:49] davidascher has joined the channel
[02:49] dexter_e: Anyone know if its possible to achieve "method_missing" type functionality in node ?
[02:50] z6Dabrata has joined the channel
[02:50] dexter_e: Or something similar to method_missing ?
[02:51] nuck: Yeah, looks like Comcast's DNS servers got poisoned or something
[02:53] blup has joined the channel
[02:53] losing has joined the channel
[02:54] random123: Anyone know a cool Comet text editor so you can see what someone else is typing at same url?
[02:54] random123: i forget the url of one I saw before
[02:55] nuck: Gah I wish I could pull Cloud9IDE's console into a separate window
[02:58] thalll has joined the channel
[02:58] nuck: I would like to see that IDE from this last NKO combined with Cloud9
[02:58] hacksparrow: what's the recommended mysql driver for Node?
[02:59] nuck: That would be so badass
[02:59] kiffness has joined the channel
[02:59] thalll has joined the channel
[03:01] bicranial has joined the channel
[03:02] martinisoft has joined the channel
[03:03] cjheath_ has joined the channel
[03:03] cjheath has joined the channel
[03:03] CarterA has joined the channel
[03:03] cjheath_ has joined the channel
[03:04] cjheath_ has joined the channel
[03:04] CarterA: http.request() is documented to let me edit headers, but https.request() isn't. Is there a workaround?
[03:05] zan_ has joined the channel
[03:06] ydef has joined the channel
[03:07] tmm1 has joined the channel
[03:07] copyhold has joined the channel
[03:07] zan_: hi, i have a file path which looks like "/�/foo.txt". fs.unlinkSync("/�/foo.txt") returns a "ENOENT, No such file or directory" error
[03:07] kriszyp has joined the channel
[03:07] zan_: Is there a way to solve it?
[03:08] mbrevoort has joined the channel
[03:09] metellus has joined the channel
[03:11] chjj has joined the channel
[03:15] dshaw_ has joined the channel
[03:15] amtal has joined the channel
[03:15] Prometheus has joined the channel
[03:20] freeformz has joined the channel
[03:21] yhahn has joined the channel
[03:22] freewil has joined the channel
[03:22] freewil has joined the channel
[03:22] gerard0` has joined the channel
[03:27] kiffness has joined the channel
[03:27] jvdev has joined the channel
[03:30] JakeyChan has joined the channel
[03:31] abraxas: Does anyone know if cluster allows for the master process to hijack an http request, that would otherwise be sent to a worker?
[03:32] amtal has joined the channel
[03:33] slloyd_ has joined the channel
[03:36] TokyoDan has joined the channel
[03:36] TokyoDan has left the channel
[03:36] m0_: Is anyone getting 400 (Bad Request) with Faye + NodeJS?
[03:36] TokyoDan has joined the channel
[03:39] NewCoder has joined the channel
[03:40] NewCoder: help
[03:40] kawaz_h has joined the channel
[03:40] joshkehn: NewCoder: With?
[03:40] NewCoder has left the channel
[03:40] NewCoder has joined the channel
[03:41] zeade has joined the channel
[03:42] NewCoder has joined the channel
[03:42] m0: Is there a good way to show errors? I had to bisect my code in nodejs to find the error cause the server didn't fail.
[03:43] nitinb has joined the channel
[03:44] nuck: m0 » When you get an error in a callback, handle it yourself or throw it
[03:44] nuck: if (err) throw err;
[03:44] nuck: Trying to decide how to do login in this setup
[03:44] nuck: I have a RESTful API
[03:44] nuck: ya know what, fuck it.
[03:45] nuck: I'm just gonna whip out a full site haha
[03:45] mfncooper has joined the channel
[03:45] CarterL: nuck: lol
[03:46] amtal has joined the channel
[03:46] nuck: Well, it's hard to test an API
[03:46] nuck: And I don't have anything to show for it
[03:47] joshkehn: Why is it hard to test an API?
[03:47] nuck: Well, without anything to test it with, it's hard
[03:47] nuck: And it's cookie-based sessions so I can't test with cURL
[03:47] joshkehn: You can specify cookies with cURL
[03:48] nuck: I'll probably keep my current codebase and build a site into it
[03:48] nuck: joshkehn » haha well, an API at this stage is premature optimization
[03:48] fairwinds has joined the channel
[03:49] robertkeizer has joined the channel
[03:49] copyhold has left the channel
[03:54] CStumph has joined the channel
[03:56] vicapow: how can I get the ip address of the machine my node app is running on?
[03:56] joshkehn: Hrm?
[03:56] joshkehn: Like you want the node process to figure out what the ip address is?
[03:56] joshkehn: Internal or external?
[03:56] ryanfitz has joined the channel
[03:57] vicapow: joshkehn: either would be helpful
[03:58] Murugaratham has joined the channel
[03:59] joshkehn: You could use child_process to exec ifconfig...
[03:59] vicapow: joshkehn: :/ lol. okay
[03:59] rurufufuss has joined the channel
[04:00] vicapow: joshkehn: then i need a way of detecting the platform
[04:00] joshkehn: process.platform
[04:00] kuebk has joined the channel
[04:01] joshkehn: process.platform for me gives 'darwin'
[04:02] tyler has joined the channel
[04:03] jesusabdullah: It sounds like you're running a darwin, man
[04:06] JaKWaC has joined the channel
[04:06] cjheath has joined the channel
[04:07] tshpaper has joined the channel
[04:11] JakeyChan has joined the channel
[04:13] jmoyers has joined the channel
[04:17] socketio\test\00 has joined the channel
[04:18] JWarm has joined the channel
[04:18] patcito has joined the channel
[04:26] JWarm: Hello, I'm trying to install npm on my ubuntu server but I keep getting a "failed"
[04:26] joshkehn: Can you put the whole message on gist.github.com and paste the link here?
[04:26] JWarm: Sure
[04:27] kiffness_ has joined the channel
[04:28] JWarm: https://gist.github.com/1210585
[04:28] joshkehn: Weirdness!
[04:28] joshkehn: What version of node?
[04:28] JWarm: 0.5
[04:29] joshkehn: How are you unstalling? curl | sh ?
[04:29] JWarm: yeah
[04:29] JWarm: ANd then tried git clone etc...
[04:29] joshkehn: git clone && cd npm && ./configure && make ?
[04:30] jchris has joined the channel
[04:32] JWarm: Used make install instead of just make
[04:32] joshkehn: Try a plain make.
[04:32] joshkehn: I'm assuming you have build-essential and all that stuff installed?
[04:33] JWarm: yes to that and libssl-devel
[04:33] joshkehn: Version of Ubuntu?
[04:33] dguttman has joined the channel
[04:34] JWarm: 10.0.4
[04:34] jvdev has joined the channel
[04:35] joshkehn: I had no problem installing everything.
[04:35] joshkehn: What specific version of node
[04:36] joshkehn: node --version
[04:36] JWarm: 0.5.6
[04:36] joshkehn: Can you try 4.11?
[04:36] JWarm: for node?
[04:36] joshkehn: Yes
[04:37] joshkehn: Unless you're using something 5 specific.
[04:37] JWarm: not at all
[04:37] JWarm: Is there a proper way to uninstall node?
[04:37] JWarm: apt-get uninstall node?
[04:37] joshkehn: rm /usr/local/bin/node
[04:37] joshkehn: Works for me.
[04:37] joshkehn: Did you install node from source?
[04:38] JWarm: umm
[04:38] JWarm: i donna what "source" is
[04:38] joshkehn: How did you install node?
[04:38] joshkehn: Better question. :)
[04:39] thepatr1ck has left the channel
[04:39] thepatr1ck has joined the channel
[04:39] JWarm: Downloaded onto my local computer. got gcc+ and did a ./configure && make install
[04:40] Marak: should function next() { process.nextTick(next); } next(); peg your cpu?
[04:40] joshkehn: Marak: What is that? Recursive next()'ing?
[04:40] joshkehn: JWarm: How did you install node on the server.
[04:40] JWarm: downloaded node onto my local computer. Used scp to copy the file onto the server.
[04:41] thepatr1ck: Marak: I'd certainly expect it to
[04:41] JWarm: ./configure && make install
[04:41] joshkehn: Is your local computer running ubuntu 10.4?
[04:41] joshkehn: s/10.4/10.04/
[04:42] isaacs has joined the channel
[04:42] JWarm: it's not.
[04:42] kennberg has joined the channel
[04:42] JWarm: but my server is
[04:42] ryan0x2_ has joined the channel
[04:43] joshkehn: You have to compile node for a specific platform.
[04:43] joshkehn: So download the source on the server and do ./configure && make && sudo make install
[04:45] abraxas: I'm going through the multimode code, and I cannot, for the love of god, figure out how they spread http connections to the workers… Does node automagically do this when binding multiple workers through server.listenFD()?
[04:45] JWarm: Okay
[04:45] JWarm: Thanks for all your help joshkehn!
[04:45] joshkehn: JWarm: No problem. :)
[04:45] hermanjunge has joined the channel
[04:45] devrim has joined the channel
[04:46] hermanjunge: Anyone here has used slicehost?
[04:46] joshkehn: I have
[04:46] abraxas: There's virtually no docs on listenFD
[04:46] hermanjunge: i want to set up a nodejs server for testing
[04:47] hermanjunge: @joshkehn is it good?
[04:47] jacobolus has joined the channel
[04:47] joshkehn: hermanjunge: Relatively speaking it's pretty good.
[04:47] joshkehn: It's moving under the Rackspace umbrella though so I need to bail out of there at some point.
[04:47] hermanjunge: yep
[04:47] joshkehn: Linode is pretty good as well as far as VP solutions go.
[04:47] jmoyers: linode++
[04:47] v8bot_:  jmoyers has given a beer to linode. linode now has 1 beers.
[04:47] hermanjunge: I'm about to buy in rackspace, it says that is just $ 11 a month
[04:48] joshkehn: That might be sans bandwidth.
[04:48] JWarm: What's wrong with rackspace?
[04:48] joshkehn: Nothing is wrong with it.
[04:48] joshkehn: I just have had better experiences elsewhere. 
[04:48] JWarm: oh, okay
[04:48] hermanjunge: OK. do you have complete freedom to install whatever app suits you?
[04:48] joshkehn: Although if someone started selling virtualized FreeBSD servers I would jump on that.
[04:49] joshkehn: hermanjunge: That's what a VPS is for.
[04:49] hermanjunge: :D
[04:49] joshkehn: You should be able to put whatever you like on there.
[04:49] joshkehn: I've torrented on a few slices.
[04:49] fangel has joined the channel
[04:49] joshkehn: All legal stuff 'ocourse. 
[04:49] hermanjunge: good. I will install nodejs & redis to run these prototype
[04:49] joshkehn: ;)
[04:49] joshkehn: Sounds cool.
[04:49] joshkehn: Hope it goes well.
[04:49] hermanjunge: me too
[04:49] Frippe has joined the channel
[04:49] hermanjunge: thx
[04:49] temp01 has joined the channel
[04:49] Frippe has joined the channel
[04:49] joshkehn: Np
[04:50] hermanjunge: how do I give you a beer?
[04:50] hermanjunge: :D
[04:50] joshkehn: Just add a ++ after my name.
[04:50] hermanjunge: joshkehn++
[04:50] v8bot_:  hermanjunge has given a beer to joshkehn. joshkehn now has 2 beers.
[04:50] joshkehn: hermanjunge++ for example. ;)
[04:50] hermanjunge: good
[04:50] Prometheus: I'm still waiting on a way to redeem those beers
[04:50] Frippe has joined the channel
[04:50] jesusabdullah: You don't
[04:50] Prometheus: :P
[04:50] hermanjunge: bye
[04:50] joshkehn: How do you get a beer count?
[04:51] jesusabdullah: plusplus me and you'll see
[04:51] jesusabdullah: ;)
[04:51] Prometheus: =P
[04:51] Prometheus: then just do --
[04:51] Prometheus: Prometheus--
[04:51] v8bot_: Prometheus: Don't cheat!  You can't give a beer to yourself.
[04:51] Prometheus: oh
[04:51] Prometheus: damn you
[04:51] jesusabdullah: Yeah, if you don't want to leave me with a brewsky
[04:51] jesusabdullah: prometheus++
[04:51] Prometheus: jesusabdullah++
[04:51] v8bot_:  jesusabdullah has given a beer to prometheus. prometheus now has 1 beers.
[04:51] v8bot_:  Prometheus has given a beer to jesusabdullah. jesusabdullah now has 4 beers.
[04:51] catb0t: jesusabdullah now has 1 beer
[04:51] Prometheus: ha
[04:51] jesusabdullah: See?
[04:51] Prometheus: catb0t: joined the fun
[04:51] catb0t: joined together
[04:51] jesusabdullah: Now prometheus has a beer and I have four!
[04:51] Prometheus: awesome!
[04:51] jesusabdullah: sheah
[04:52] Prometheus: though this means I won't be able to get drunk.
[04:52] gregmoreno has joined the channel
[04:52] Prometheus: need to do a lot more helping around here
[04:52] Prometheus: though I suppose first I should learn to node
[04:52] jesusabdullah: prometheus y u no node? >:O
[04:52] jesusabdullah: Do you know javascript already?
[04:52] Prometheus: a little
[04:52] jesusabdullah: ah
[04:52] Prometheus: I've been slacking
[04:53] jesusabdullah: well, node's a good platform to learn on anyway
[04:53] jesusabdullah: :P
[04:53] Prometheus: I was in the process of writing my own little botbot, but then I formatted and there went my work
[04:53] Prometheus: certainly is
[04:53] jesusabdullah: ouch
[04:53] tbranyen: i read that as botnet
[04:53] Prometheus: tbranyen: shh!
[04:53] Prometheus: don't unveil my ebil plans
[04:53] jesusabdullah: Some peeps built the tools for botnetting for their nko entry
[04:53] jesusabdullah: not sure if they oss'd or not
[04:54] jesusabdullah: they may have thought it irresponsible
[04:54] Prometheus: loic for node?
[04:54] sephr has joined the channel
[04:54] Prometheus: not gud.
[04:54] dexter_e has joined the channel
[04:54] sephr: elliottcable: you're right!
[04:54] Prometheus: jesusabdullah: how would you implement a plugin pattern?
[04:54] jesusabdullah: http://hailstorm.radicaldesigns.org/
[04:54] Prometheus: I think that's where I got stuck with writing my bot :)
[04:55] Prometheus: oh right, "load tester"
[04:55] Prometheus: =)
[04:55] jesusabdullah: How would I implement a plugin pattern? What do you have in mind?
[04:55] Prometheus: crowdsourced load tester =P
[04:55] jesusabdullah: I'd probably end up using a middleware-like api
[04:55] Prometheus: jesusabdullah: well, given that I'm wanting to write an IRC bot, it should be something that parses irc messages for commands and then maps them to plugins, for example
[04:56] AaronMT has joined the channel
[04:56] jesusabdullah: for examples, check out browserify's middlewares
[04:56] jesusabdullah: and winston's transports
[04:56] Prometheus: will do
[04:56] jesusabdullah: also
[04:56] jesusabdullah: look at kohai
[04:56] jesusabdullah: it's one of the most feature-complete node bots around, and I believe it was written with plugins in mind
[04:56] paul_k has joined the channel
[04:57] jesusabdullah: and AvianFlu wrote a huge part of it so you can always ask him about stuff if you end up digging into it
[04:57] jesusabdullah: Oh, also, I had an idea
[04:57] jesusabdullah: use optimist to parse bot arguments
[04:57] jesusabdullah: and pass the argv to your bot functions
[04:58] Prometheus: hmm
[04:58] TheEmpath has joined the channel
[04:58] TheEmpath: socket.emit('EventName', data, function(response)  { /* is this the callback that gets fired when the socket returns a response or just when it returns an acknowledgement? */ });
[04:58] Prometheus: that's a lot of good info, thanks :)
[04:58] patcito has joined the channel
[04:58] Prometheus: I don't see how kohai processes commands
[04:58] jesusabdullah: yw!
[04:58] Prometheus: but I suppose I'll read up on it a bit more
[04:58] jesusabdullah: I don't actually know a lot about kohai's architecture, aside from that it uses hook.io
[04:58] AvianFlu: Prometheus, the refactor branch of kohai is the current development branch
[04:58] jesusabdullah: Yeah, look at the refactor
[04:59] jmoyers: TheEmpath depends on what module, but thats a data event, so typically it has actual data
[04:59] jesusabdullah: I'd imagine it emits events whenever someone says something, and on relevant events it throws out another event which can get eaten by the irc hook
[04:59] sephr has left the channel
[04:59] jesusabdullah: but avian would of course know way better n' me
[04:59] TheEmpath: jmeyes: I speak of socket.io... I see in some examples where thats the syntax for acknowledgements (promises) and that bothers me
[04:59] metellus has joined the channel
[04:59] jmoyers: TheEmpath oh wait. i misread that, i have no idea what that callback is
[04:59] Prometheus: AvianFlu: ah, that would make sense :)
[05:00] Prometheus: I was reading the master branch thinking, man I can't figure this out at all
[05:00] TheEmpath: because then i have to do promise indexing, and that has a pretty nasty security problem
[05:00] jesusabdullah: AvianFlu: when are you merging back to master?
[05:01] jmoyers: TheEmpath if im understand you, thats not how it works
[05:01] Prometheus: jesusabdullah, AvianFlu: I suppose I should get familiar with the IRC library as well
[05:01] jmoyers: you listen to the data event on (or custom events) on the socket itself
[05:01] jmoyers: thats data from the server
[05:01] Prometheus: I've actually done a lot of reading up on it before when I was working on my bot
[05:01] jmoyers: its not a response
[05:01] jmoyers: its just an event, no state
[05:01] TheEmpath: damn
[05:01] Prometheus: it all makes sense, but when I sit down to write my own, it's not quite as smooth :)
[05:01] jmoyers: you can implement a state machine on top
[05:02] TheEmpath: so theres no way to fire a callback when you get a formal response in socket.io?
[05:02] jmoyers: what do you mean by formal response?
[05:02] austinbv: omg just what I was looking for https://github.com/dresende/node-orm
[05:02] TheEmpath: client emits an event with data to node.. node plays around with ti and sends data back via a socket.emit on their end... client receives it and then dispatches a callback to handle the response
[05:03] jmoyers: TheEmpath there is indeed an ack api
[05:03] jmoyers: its the callback you mentioned
[05:03] Prometheus: jesusabdullah: tbh, I think writing things like IRC/XMPP bots is much more fun than writing websites, for learning
[05:03] AvianFlu: http://github.com/hookio/irc
[05:04] TheEmpath: i dont see ant example on socket.io that shows that it can do that
[05:04] jmoyers: the receiver takes a (data, callback), when callback is called, the sender gets the the contents of data where data is callback(data)
[05:04] jmoyers: https://github.com/learnboost/socket.io TheEmpath - scroll down to "Getting acknowledgements"
[05:05] TheEmpath: ya, thats the second that bothers me
[05:05] TheEmpath: the wording is problematic
[05:05] TheEmpath: "Sometimes, you might want to get a callback when the client confirmed the message reception."
[05:05] TheEmpath: does that mean when the server gets the message it say s"Yep, I got it"
[05:05] Prometheus: AvianFlu: oh, that's the hookio irc library(?)
[05:05] Prometheus: I thought it was using node-irc :o
[05:05] jmoyers: looks to me like its manual
[05:05] Prometheus: my bad
[05:05] TheEmpath: or does that means when the server gets it, the message is "Here's the results of your request"
[05:05] jmoyers: you have to call the callback
[05:05] dkem has joined the channel
[05:05] TheEmpath: because those are two different states
[05:05] Prometheus: never mind, that's just a wrapper around node-irc
[05:05] AvianFlu: Prometheus, hook.io irc is a wrapper around node-irc
[05:05] AvianFlu: yep
[05:06] jmoyers: TheEmpath well, one is a superset of the other
[05:06] Prometheus: AvianFlu: that makes sense, I know that already a bit :)
[05:06] jmoyers: delivery is already guaranteed
[05:06] jmoyers: its tcp
[05:06] mykul|Home has joined the channel
[05:06] Prometheus: but I suffer heavily from NIH syndrome (and I tell myself that it's better for learning purposes), so I'm looking to write my own irc stream parsing from scratch :)
[05:07] TheEmpath: hrmmm
[05:07] TheEmpath: the wording still bothers me greatly
[05:07] TheEmpath: it doesn't defeine what it means by "acknolwedgement"
[05:07] jmoyers: i'd say its a shim for some manner of RPC
[05:08] TheEmpath: i mean, sure, that would make sense
[05:08] omni5cience_ has joined the channel
[05:08] TheEmpath: but then it say "confirmed message reception"
[05:08] TheEmpath: which has nothing to do with actualyl handling the message data
[05:08] tylerstalder has joined the channel
[05:08] TheEmpath: i'd say that means acknowledging that the server got the request and is handling it
[05:08] TheEmpath: not that the server has handled it
[05:09] TheEmpath: its worded really poorly
[05:09] jmoyers: i'd say they don't imply semantics
[05:09] jmoyers: they give you a callback
[05:09] jmoyers: you can do whatever you want, for as long as you want
[05:09] jmoyers: that could mean going out to a database, or whatever
[05:09] jmoyers: i dont think its meant as an ACK
[05:09] jmoyers: its much higher level than that
[05:09] TheEmpath: i'll test around
[05:09] springmeyer has joined the channel
[05:09] TheEmpath: see whats up and fire off a bug asking them to reword and clarify
[05:10] TheEmpath: because its damned confusing
[05:11] Prometheus: jesusabdullah: though I guess what would be even more interesting is to write a general purpose bot framework, which could handle different types of streams (be it irc, xmpp or campfire)
[05:11] jmoyers: Prometheus thats what kohai is
[05:13] Prometheus: jmoyers: oh, I thought it was just an irc bot :o
[05:13] jmoyers: well it uses irc as a substrate, but its bridges twitter and has a plugin architecture for other real time events
[05:14] dkem has left the channel
[05:15] jesusabdullah: hook.io would probably be a pretty good way to do that---just make a hook for whatever transport you have in mind
[05:16] Prometheus: transport was the word
[05:16] Prometheus: damn english
[05:16] jesusabdullah: also, I don't think writing an irc library is particularly constructive, unless you want to learn the protocol (it's boring) or if you're unsatisfied with the current state of irc libraries
[05:16] Prometheus: it's not, I know
[05:17] Prometheus: I did a bit of that already, not very interesting :)
[05:17] jesusabdullah: yeah
[05:17] Prometheus: but I did that more of as an exercise to learn to parse stream
[05:17] jesusabdullah: and, I mean, in the end all you really want is .on("message", function(data) { /*...*/ });
[05:17] jesusabdullah: or whatever
[05:17] Prometheus: pretty much
[05:18] Prometheus: maybe I'll just opt in for node-irc this time around
[05:18] jesusabdullah: events are so important for irc bots that even mirc has events
[05:19] AvianFlu: kohai is very extensible
[05:19] AvianFlu: you can drop in plugin files that export functions, and if they play nice and don't throw, they become new !commands
[05:19] aguynamedben has joined the channel
[05:19] AvianFlu: and you can throw in new hooks for new services you need
[05:20] AvianFlu: like we did with email two weeks ago
[05:20] Prometheus: fair enough
[05:20] Prometheus: so maybe I should just go ahead and write something completely different :P
[05:20] Prometheus: just do whatever I need to do for irc as plugins to kohai and be done with that :)
[05:21] AvianFlu: you should definitely check out hook.io
[05:21] jesusabdullah: make a plugin that does something non-trivial
[05:21] jesusabdullah: For example, write a weather plugin
[05:21] AvianFlu: one way or another, hook.io is worth looking at
[05:21] jesusabdullah: I wrote one once that used yql but I think there has to be a better api for that
[05:21] AvianFlu: you want to invent lots of wheels from there, that's on you :)
[05:21] jbpros has joined the channel
[05:21] Prometheus: AvianFlu: oh I have, I watched Marak's presentation on it and did some code diving
[05:21] joshthecoder has joined the channel
[05:22] Marak: Prometheus: that talk is from 2 rewrites ago :-D
[05:22] Prometheus: Marak: oh I know, but it was interesting nonetheless :)
[05:22] slloyd_ has joined the channel
[05:22] Marak: hook.io is really good for a plugin system though, for anything
[05:22] Prometheus: it was from way back
[05:22] Marak: since it gives you all the features you'd want in a generic plugin system out of the box
[05:22] Prometheus: but there aren't that many node.js presentations available, unfortunately
[05:23] Prometheus: so I've pretty much watched every single one I've gotten my hands on =P
[05:23] Marak: like hot reloads, fault tolerance across plugins, configuration data per plugin, and easy EE based message passing between plugins
[05:23] Prometheus: that's pretty good feature set :)
[05:23] Marak: its fairly ideal for adding plugins to a project
[05:23] Marak: if i was not me, i would use hook.io to extend my existing project
[05:24] Marak: id keep my core logic in whatever i already had, and then just add hooks to progressively enchance
[05:24] Marak: but since i am me, i make the whole app a hook
[05:24] Marak: :-D
[05:24] Prometheus: heh
[05:24] a_suenam_ has joined the channel
[05:24] Prometheus: well, I guess I need to do some reading up on these
[05:25] Marak: best to check out the code for simple Hooks
[05:25] Prometheus: no reason to reinvent the whole damn wheel I suppose :)
[05:25] Marak: `webhook` `cron` `couch` `mailer` etc
[05:25] jesusabdullah: Just reinvent the shitty parts
[05:25] Prometheus: though that'll make my NIH syndrome go off like crazy
[05:25] jesusabdullah: That's a good thing. ^__^
[05:25] Prometheus: hah
[05:26] Prometheus: I need to brush up on my javascript anyway
[05:26] Prometheus: so better to start off simple
[05:26] jesusabdullah: In fact, I encourage you to draw from a wide variety of libraries written in all sorts of different styles
[05:26] jesusabdullah: and mash them together in sexy manners
[05:28] ckpcw has left the channel
[05:28] Sidnicious: Hey, are there any active projects that spawn worker processes for different apps and route requests to them (based on the hostname, etc.)?
[05:28] Sidnicious: I remember hearing about a couple, but can't dredge up names right now
[05:28] AvianFlu: It really kinda bothers me how often I run into the word "sexy" in the professional coding business
[05:29] jesusabdullah: Does it? I can understand that
[05:29] jesusabdullah: I mean, we are supposed to be professionals after all
[05:29] geosony has joined the channel
[05:30] jesusabdullah: fwiw in this context I mean it in a totally nonsexual manner
[05:30] jesusabdullah: as silly as that sounds
[05:32] topaxi has joined the channel
[05:33] dshaw_ has joined the channel
[05:34] davidbanham has joined the channel
[05:36] geosony: hi
[05:36] madsleejensen has joined the channel
[05:36] joshkehn: geosony: Hi
[05:37] geosony: shall I ask a question regarding node
[05:37] geosony: ?
[05:37] AvianFlu: yes, you shall!
[05:37] joshkehn: No, you shall not!
[05:37] Nexxy: it is forbidden!
[05:38] Prometheus: :o
[05:38] joshkehn: geosony: See http://i.imgur.com/8Z56j.jpg
[05:38] stisti has joined the channel
[05:38] joshkehn: Though in all seriousness you probably can ask.
[05:38] Nexxy: just don't ask about coffeescript
[05:39] joshkehn: Or Ringo
[05:39] joshkehn: Or Riak vs MongoDB
[05:39] Nexxy: oh no you di'int
[05:39] joshkehn: Tabs vs. Spaces is a welcomed discussion though.
[05:39] geosony: it is said  the factory method http.createServer() has a callback 
[05:39] geosony: function(req, res)
[05:40] binarychef has joined the channel
[05:40] joshkehn: Thar' it be
[05:40] joshkehn: #piratetalkfail
[05:42] geosony: http://www.nodebeginner.org/ 
[05:43] a_suenam_ has joined the channel
[05:46] crescendo|laptop has joined the channel
[05:46] crescendo|laptop has joined the channel
[05:46] steffan_ has joined the channel
[05:47] aguynamedben_ has joined the channel
[05:48] SamuraiJack has joined the channel
[05:49] amerine has joined the channel
[05:49] geosony: hi
[05:49] tyler-iphone_ has joined the channel
[05:55] petrjanda_ has joined the channel
[05:55] shanebo has joined the channel
[05:55] dmkbot: joyent/node: 03tshinnic: add positioned writing feature to fs.WriteStream - https://github.com/joyent/node/issues/1645
[05:55] shanebo: wow, you guys see this? http://functionsource.com/post/dash-ing-and-dart-ing-ahead-of-javascript
[05:56] Nexxy: shanebo, ilol'd
[05:56] joshkehn: http://twitter.com/#!/joshkehn/status/113122967252250624 
[05:56] Nexxy: "fuck standards committees we're just gonna make shit up"
[05:56] Nexxy: that will work well
[05:57] Nexxy: inb4 no one adopts it and it fails horribly 
[05:57] joshkehn: Standards committees by definition don't work well. 
[05:57] joshkehn: ;)
[05:57] Nexxy: better than making stuff up and hoping everyoen can agree
[05:57] Prometheus: Google likes to make shit up
[05:57] joshkehn: I would disagree
[05:57] Nexxy: google extends things
[05:57] joshkehn: Look at how long the HTML specs are taking.
[05:57] pquerna: are you kidding, node is switching to it
[05:58] Prometheus: instead of coming out with new languages, they should do something about the their hosting platform, instead of raising prices..
[05:58] Nexxy: pquerna, node is switching to what exactly?
[05:58] joshkehn: Prometheus: That's a silly argument. What would you have them do about their hosting platform?
[05:58] pquerna: dash-dart
[05:58] Prometheus: joshkehn: make it work
[05:58] joshkehn: pquerna: [citation needed]
[05:58] Nexxy: ^
[05:58] Prometheus: if you've ever used it, you know how horrible it is :)
[05:58] joshkehn: Prometheus: If it doesn't work don't use it.
[05:58] pquerna: its not even announced yet
[05:58] joshkehn: Then why do you use it.
[05:59] pquerna: wait until the conference next month orwhatever
[05:59] joshkehn: pquerna: [citation failure]
[05:59] Prometheus: joshkehn: I don't, I quit using it =P
[05:59] Marak: pquerna: i had a hook.io design question i wanted to bug you about, got 2 mins? im sorting out making the communication transport between nodes be pluggable
[05:59] mavus has joined the channel
[05:59] Nexxy: I'm curious as to what exactly is "not viable"
[05:59] pquerna: mmmkay
[05:59] pquerna: sure
[06:01] Prometheus: joshkehn: dude, http://t.co/4rkmrAT
[06:01] joshkehn: Prometheus: Yeah, work rocks.
[06:02] Prometheus: seems so :)
[06:02] Prometheus: you've officially inspired me
[06:02] Prometheus: too bad it's 1 am
[06:03] joshkehn: Prometheus: Grab some z's and keep the inspiration. ;)
[06:03] Prometheus: haha, yeah I should
[06:03] Prometheus: but the entrepreneurial side of my brain hates sleeping
[06:03] webben has joined the channel
[06:04] Prometheus: in fact, it kicks in to a high gear every time I make an attempt at sleeping
[06:04] meso has joined the channel
[06:05] blup has joined the channel
[06:05] JWarm has joined the channel
[06:07] mraleph has joined the channel
[06:10] JakeyChan has joined the channel
[06:12] noodlehaus has joined the channel
[06:12] FireFly|n900 has joined the channel
[06:14] cjheath has joined the channel
[06:16] blup has joined the channel
[06:16] kertz has joined the channel
[06:19] tonymilne has joined the channel
[06:20] hermanjunge: anyone experienced in linode?
[06:20] joshkehn: I've used it. :p
[06:20] hermanjunge: I got this __n00b__ problem :D
[06:20] Nexxy: I've used it ;o
[06:20] Lorentz: I'm using it :3c
[06:20] hermanjunge: Brand new ubuntu 10.04, installed node
[06:20] Nexxy: for liek 4 years
[06:20] hermanjunge: but can't open port 3000
[06:20] joshkehn: You're in luck! We were all new at one point.
[06:20] joshkehn: All the ports should be open by default
[06:20] hermanjunge: then why I can't talk with the machine's 3000 port?
[06:21] Nexxy: hermanjunge, are you sure you don't have someting already running on 3000?
[06:21] hermanjunge: yes
[06:21] Nexxy: then I have no clue
[06:21] hermanjunge: if I do a curl localhost:3000
[06:21] Nexxy: lol
[06:21] hermanjunge: no problems
[06:21] hermanjunge: lol
[06:21] joshkehn: Okay
[06:21] joshkehn: So it's open and connecting.
[06:21] hermanjunge: is the outside-inside problem
[06:21] Lorentz: Is it listening on localhost, or all of internets?
[06:21] hermanjunge: yesh
[06:21] wereHamster: does each file has its own require.paths?
[06:21] Nexxy: that wasn't a yes or no question ;o
[06:21] tonymilne: hahah @nexxy
[06:21] joshkehn: wereHamster: I believe require.paths was removed.
[06:21] hermanjunge: on localhost
[06:22] hermanjunge: I've even made the iptables thingy
[06:22] joshkehn: hermanjunge: Bind it to 0.0.0.0 (all interfaces) if you want to access it externally.
[06:22] hermanjunge: cudo iptables -A INPUT -p tcp --dport 3000 -j ACCEPT
[06:22] AvianFlu: yeah localhost === loopback
[06:22] joshkehn: Uh.
[06:22] Lorentz: Or if you have multiple IPs, to specific IP(s)
[06:22] joshkehn: That's greek to me.
[06:22] Nexxy: there's no reason to iptables
[06:22] Nexxy: if you don't have any rules already
[06:23] hermanjunge: @joshkehn
[06:23] Lorentz: Why are you firewalling
[06:23] Nexxy: (I mean obviously you want to secure your box but that won't be the problem)
[06:23] hermanjunge: How i do the binding?
[06:23] hermanjunge: I'm not
[06:23] hermanjunge: is a brand new linode box
[06:23] hermanjunge: (btw it only took real five minutes to have a server running)
[06:23] joshkehn: What do you have running on port 3000?
[06:23] wereHamster: joshkehn: any idea what I should use?
[06:23] hermanjunge: my "hello world" in nodejs
[06:23] joshkehn: wereHamster: To do what? 
[06:24] brainproxy: hermanjunge: I put together some basic notes on how I setup my linux VPSs for use with node.js
[06:24] wereHamster: joshkehn: add paths to the loader
[06:24] Lorentz: hermanjunge: Most likely your app is listening only on localhost
[06:24] brainproxy: https://github.com/michaelsbradleyjr/vps-setup
[06:24] hermanjunge: realy?
[06:24] admc has joined the channel
[06:24] Lorentz: Which means no matter what magic you do, unless you do deep magic, it won't response to anything but localhost
[06:24] wereHamster: if require.paths was removed as you say
[06:24] joshkehn: }).listen(1337, "127.0.0.1")
[06:24] joshkehn: to
[06:24] joshkehn: }).listen(1337, "0.0.0.0")
[06:24] hermanjunge: once I get out of these, I'll do the same: notes for the N00bs
[06:24] joshkehn: wereHamster: You can't. 
[06:24] Lorentz: >deep magic
[06:24] joshkehn: wereHamster: They aren't accessible to my knowledge.
[06:24] brainproxy: hermanjunge: ^ those notes don't go beyond setup, but may help you
[06:24] tonymilne: can't you remove the 2nd param and it will default to listening on all?
[06:24] hermanjunge: @joshkehn, let me try what you say
[06:24] wereHamster: joshkehn: so. Does NODE_PATH env variable still work?
[06:25] joshkehn: wereHamster: I believe so.
[06:25] brainproxy: wereHamster: yes, that still works but is not recommended
[06:25] joshkehn: wereHamster: But you really shouldn't mess with those.
[06:25] brainproxy: wereHamster: better to embrace the whole localized node_modules paradigm
[06:25] joshkehn: Not future proof I believe.
[06:25] necrodearia has joined the channel
[06:25] socialhack has joined the channel
[06:26] zomgbie has joined the channel
[06:26] wereHamster: brainproxy: This is my situation: I have a ./bin/foo which is a coffee script which require()s files from ./src. So the whole node_modules paradigm doesn't really fit in there, does it?
[06:26] hermanjunge: @joshkehn nops
[06:26] hermanjunge: http://74.14.177.46:3000/
[06:26] hermanjunge: and did the }).listen(3000, "0.0.0.");
[06:26] joshkehn: @hermanjunge Paste your server code to gist.github.com and send me a link.
[06:27] wereHamster: or how do I make ./bin/foo be able to load the files from ./src?
[06:27] joshkehn: 0.0.0.0
[06:27] joshkehn: You need four zero's
[06:27] joshkehn: @wereHamster require('../src/foo.js')
[06:27] noodlehaus: hi guys, i've an architecture-related question
[06:27] joshkehn: @wereHamster Actually you need two ../../
[06:27] joshkehn: To move up bin and foo
[06:27] hermanjunge: https://gist.github.com/1210688
[06:27] joshkehn: @noodlehaus Shoot
[06:27] noodlehaus: i'm doing an app that has 2 sides, a master app and something like a slave app
[06:28] wereHamster: joshkehn: I don't want to use relative paths in each file.
[06:28] hermanjunge: I did the fourth 0 :D
[06:28] noodlehaus: the slave app hosts components all listening via http (different routes on express)
[06:28] joshkehn: @wereHamster Then you're screwed. :p
[06:28] noodlehaus: the master app is the one that receives the request from the client, and the request contains info on which components it wants to use
[06:28] joshkehn: @hermanjunge http://joshuakehn.com:3000/
[06:28] joshkehn: Works for me.
[06:28] wereHamster: joshkehn: is there really no way to programatically add a certain directory to the loader paths?
[06:28] brainproxy: wereHamster: you could symlink ./src into ./bin/foo as ./bin/foo/node_modules
[06:28] brainproxy: though that could get ugly :)
[06:28] joshkehn: @wereHamster That is correct.
[06:29] hermanjunge: then is something I'm not doing in my server
[06:29] joshkehn: Remove your iptables rule.
[06:29] wereHamster: joshkehn: do you know the reason why that ability was removed?
[06:29] hermanjunge: it's not fw'ed
[06:29] noodlehaus: how bad an idea is it that within the master, what it really does is get the list of components, then do HTTP requests to the different components, and return the output back to the client?
[06:29] brainproxy: wereHamster: it was removed to encourage people to really learn how to use node_modules/
[06:29] brainproxy: which is more robust
[06:29] Nexxy: lol
[06:29] Nexxy: uhm
[06:29] Nexxy: require.paths.unshift(<your path here>)
[06:29] noodlehaus: so it's more like the client does one http request, but underneath, it's actually a chain of http requests to different boxes
[06:29] joshkehn: @wereHamster Because it was messy and not inline with the module paradigm. 
[06:30] joshkehn: Nexxy: That doesn't work in 0.5
[06:30] wereHamster: brainproxy: so I should convert my app into a node_module and then install it?
[06:30] brainproxy: Nexxy: that's dead in 0.5+
[06:30] Nexxy: joshkehn, why the fuck not
[06:30] Nexxy: that's retarded
[06:30] brainproxy: Nexxy: it was deprecated so you can learn to implement and love the node_modules/ pattern
[06:30] Nexxy: oh
[06:30] Nexxy: so node is turning into rails
[06:30] Nexxy: got it
[06:30] wereHamster: it's also dead in 0.4.11
[06:31] wereHamster: well, only kindof. but for most practical purposes it's dead
[06:31] joshkehn: @Nexxy When did that happen? 
[06:31] Nexxy: removing developer freedom in exchange for opinionated "standards"
[06:31] joshkehn: @hermanjunge Did you try removing that?
[06:31] brainproxy: Nexxy: btw, it bugged me too, but then I got used to it
[06:31] Nexxy: brainproxy, I don't need it
[06:31] Nexxy: but still
[06:32] Nexxy: now I can see people having to do a mess of symbolic linking
[06:32] Nexxy: whereas require.paths just worked
[06:32] hermanjunge: @joshkehn removing what?
[06:32] Nexxy: derp.
[06:32] joshkehn: @Nexxy I doubt people will resort to that.
[06:32] joshkehn: @hermanjunge The iptable rule
[06:32] hermanjunge: @brainproxy your guide rocks
[06:32] brainproxy: hermanjunge: thank you :)
[06:32] noodlehaus: Nexxy: i actually like the node_modules setup
[06:32] hermanjunge: I'm Hardcore Forking it
[06:32] brainproxy: btw, I used to work for slicehost
[06:32] Nexxy: noodlehaus, I do too
[06:32] Nexxy: I use it exclusively
[06:33] davidbanham has joined the channel
[06:34] noodlehaus: love doing rm -rf ./node_modules && npm -d install
[06:34] thepatr1ck: I like node_modules now more than I did before. Once I figured out npm lets you specify an HTTP path to a .tgz instead of a version to include non npm-modules that way it started to make more sense.
[06:34] errordeveloper has joined the channel
[06:34] thepatr1ck: noodlehaus: me too. until I realise someone put a max version number on something they didn't need to.
[06:34] hermanjunge: I did sudo iptables -L -v
[06:34] hermanjunge: and got this:
[06:35] hermanjunge: Chain INPUT (policy ACCEPT 58062 packets, 74M bytes)
[06:35] hermanjunge:  pkts bytes target     prot opt in     out     source               destination         
[06:35] hermanjunge:    14  1050 ACCEPT     tcp  --  any    any     anywhere             anywhere            tcp dpt:3000 
[06:35] joshkehn: @hermanjunge I'm not an iptables expert. :p
[06:35] hermanjunge: this looks fine to me
[06:35] hermanjunge: neither do I
[06:35] joshkehn: If you say so.
[06:35] joshkehn: ;)
[06:36] hermanjunge: Time I was sysadmin, my world was Mandriva Network Firewall
[06:36] hermanjunge: (which tells you I'm no teenager)
[06:36] noodlehaus: i don't use firewalls that don't have clickable buttons!
[06:36] noodlehaus: hahaha
[06:36] hermanjunge: hahahahaha
[06:36] joshkehn: hermanjunge: Can you still access it locally?
[06:36] hermanjunge: yes
[06:36] Nexxy: mandriva lol
[06:36] dexter_e has joined the channel
[06:36] pickels has joined the channel
[06:36] CIA-54: node: 03Thomas Shinnick 07master * re4ebeb6 10/ lib/fs.js : 
[06:36] CIA-54: node: fs: minor corrections from examining stream read positioning
[06:36] CIA-54: node: Fix minor typos, one small refactor, and change emit() in a constructor
[06:36] CIA-54: node: to a throw - http://git.io/sQdZ7Q
[06:36] CIA-54: node: 03Thomas Shinnick 07master * re58c036 10/ (4 files in 3 dirs): 
[06:36] CIA-54: node: fs: add positioned file writing feature to fs.WriteStream
[06:36] CIA-54: node: Patterned on same feature in ReadStream; a small bit of new code added
[06:36] CIA-54: node: plus two refactorings of previous code; added two test files.
[06:36] CIA-54: node: Fixes #1645. - http://git.io/iLX_vQ
[06:36] Nexxy: was better when it was mandrake
[06:37] hermanjunge: I think I'm going to forum-surf a little
[06:37] hermanjunge: looking for an unfortunate soul that had the same problem
[06:37] mrryanjohnston has joined the channel
[06:38] joshkehn: That server code works fine on my box and I don't have anything special setup on it.
[06:38] ptlo has joined the channel
[06:40] Nexxy: hermanjunge, reimage ftw ;3
[06:40] bergie has joined the channel
[06:41] hermanjunge: I know is simple stuff my problems
[06:41] hermanjunge: :P
[06:41] hermanjunge: I get back to you in a moment
[06:42] `3rdEden has joined the channel
[06:42] robotmay has joined the channel
[06:42] mwhooker has joined the channel
[06:43] liar has joined the channel
[06:47] felixge has joined the channel
[06:47] felixge has joined the channel
[06:48] JakeyChan has joined the channel
[06:53] hermanjunge: $ iptables -f   # flush all rules
[06:54] joshkehn: Nice
[06:54] ello has joined the channel
[06:56] piscisaureus has joined the channel
[06:58] openpercept has joined the channel
[06:58] jbpros has joined the channel
[06:58] hermanjunge: @brainproxy the file iptables.up.rules gave me this error:
[06:59] hermanjunge: unable to initialize table 'filter'
[06:59] brainproxy: hermanjunge: hmm
[06:59] hermanjunge: didi it happen to you?
[06:59] brainproxy: no :)
[06:59] brainproxy: looking
[07:00] hermanjunge: ha ha ha
[07:00] tonymilne has left the channel
[07:00] hermanjunge: I have always some kind of problem with a fresh ubuntu install
[07:00] hermanjunge: is some sort of classic for me :D
[07:00] ttpva has joined the channel
[07:01] brainproxy: you have this exact set of rules?
[07:01] brainproxy: https://github.com/michaelsbradleyjr/vps-setup/blob/master/iptables.up.rules
[07:01] emattias has joined the channel
[07:01] hermanjunge: yesh
[07:01] hermanjunge: I was following your tut
[07:01] cachemoney has joined the channel
[07:01] brainproxy: and top line starts with * ?
[07:01] groom has joined the channel
[07:01] CIA-54: node: 03Thomas Shinnick 07master * r7dc2c49 10/ (lib/fs.js test/simple/test-fs-watch-file.js): 
[07:01] CIA-54: node: fs: unguarded fs.watchFile cache statWatchers checking fixed
[07:01] CIA-54: node: Use hasOwnProperty to check filepath cache; previous code could fail if
[07:01] CIA-54: node: a filepath duplicated a chained property name.
[07:01] CIA-54: node: Fixes #1637. - http://git.io/tOkTZw
[07:01] hermanjunge: yesh
[07:01] hermanjunge: stop... 
[07:01] hermanjunge: do i have to set up the dns in the linode install?
[07:02] hermanjunge: i don't think so... let me read the lnode docs
[07:02] brainproxy: no, i think that's taken care of by the dhcp
[07:02] brainproxy: which is how linode gives your vps an ip address
[07:03] ello: hello guys if i want to do an async loop ( with recursion ) with a large number of iterations
[07:03] ello: wont i get a stack overflow like in c?
[07:04] Epeli: no if you use setTimeout or nextTick
[07:04] DennisRasmussen has joined the channel
[07:05] ello: Epeli. why? what does that change regarding the recursion?
[07:05] metellus has joined the channel
[07:05] ello: the stack would still fill, wouldnt it?
[07:05] Epeli: ello:  well, technically it's not recursion
[07:05] mike5w3c has joined the channel
[07:05] sgimeno has joined the channel
[07:05] fangel has joined the channel
[07:05] ello: Epeli really? i write the code ATM and what i write now IS a tail recursion
[07:05] ello: :D
[07:06] Epeli: but if you make normal recusive call you will hit stack overflow eventually
[07:07] Epeli: there is no tail recursion optimization afaik
[07:07] ello: Epeli okay but then... how would you make a frank async loop, i mean... in every iteration the iteration must wait for the async call to return
[07:07] ello: thats the problem =)
[07:08] mykul|Home has joined the channel
[07:08] ello: And i have to do that for like a zillion times =)
[07:08] hermanjunge: guys
[07:08] hermanjunge: wanna know the error?
[07:08] brainproxy: ello: can you be more clear what you mean by async loop? are you using setTimeout, or...?
[07:08] hermanjunge: so you can insult me?
[07:08] brainproxy: hermanjunge: what was the problem? :)
[07:08] joshkehn: hermanjunge: I'm just curious. :)
[07:09] ello: brainproxy See 4 lines above. 
[07:09] hermanjunge: I was trying the IP 74.x.y.z
[07:09] joshkehn: *facepalm*
[07:09] hermanjunge: the real IP was 72.x.y.z
[07:09] ello: brainproxy *10
[07:09] hermanjunge: *facePALM!
[07:09] hermanjunge: mental-note: don't do these stuff at 04:09 AM
[07:09] Epeli: ello:  in async loops use cannot use return values
[07:10] Epeli: because they are synchronous
[07:10] Emmanuel has joined the channel
[07:10] Epeli: gotta go ->
[07:10] ello: Epeli cheers
[07:10] joshkehn: hermanjunge: Glad it you got it working, sometimes it's silly things like that. :)
[07:10] brainproxy: ello: I saw what you asked, but maybe I missed something .. can you gist and pastie a rough idea of what you're trying to do?
[07:10] hermanjunge: It's always silly things like that
[07:10] ello: brainproxy of course
[07:10] hermanjunge: the cool solutions never happen at critic times
[07:11] hermanjunge: Thanks a lot
[07:11] hermanjunge: joshkehn++
[07:11] v8bot_:  hermanjunge has given a beer to joshkehn. joshkehn now has 1 beers.
[07:11] hermanjunge: brainproxy++
[07:11] v8bot_:  hermanjunge has given a beer to brainproxy. brainproxy now has 1 beers.
[07:11] catb0t: brainproxy now has 1 beer
[07:11] brainproxy: thank you
[07:11] brainproxy: ACTION chugs!
[07:12] ello: https://gist.github.com/1210732
[07:12] amerine has joined the channel
[07:12] brainproxy: ello: looking...
[07:12] ello: brainproxy ty.
[07:12] jbpros: guys, any recommendation for running jasmine specs on the command line? I'm currently using jasmine-node but I'm having some issues with it.
[07:12] dilvie has joined the channel
[07:13] brainproxy: ello: okay, so you won't be able to do it exactly like that
[07:13] ello: brainproxy That is the problem... now... a recursive solution would hit stack overflow soon
[07:13] brainproxy: owing to the nature of JavaScript language itself
[07:13] ello: brainproxy no problem
[07:14] ello: brainproxy How would you do it then? The main thing is to be able to do it a lot of times, so it cant involce recursion i guess
[07:14] brainproxy: let me think up an alternative, though I'm not sure it will match your use case, but maybe we can work it out
[07:14] ello: *involce
[07:14] yhahn has left the channel
[07:14] ello: *involve
[07:14] ello: lol
[07:14] ello: third time :D
[07:14] ello: sticky typo
[07:16] ello: :)
[07:17] chjj has joined the channel
[07:17] cosmincx has joined the channel
[07:19] __doc__ has joined the channel
[07:20] polotek has joined the channel
[07:20] tonymilne has joined the channel
[07:22] ivanfi has joined the channel
[07:22] tonymilne: Does anyone using Mongoose whitelist what properties can be set?
[07:22] polotek: ryah: ping
[07:24] temp01 has joined the channel
[07:25] Xano has joined the channel
[07:25] ablomen has joined the channel
[07:25] [[zz]] has joined the channel
[07:25] brainproxy: ello: maybe something like https://gist.github.com/1210750
[07:25] brainproxy: I haven't tested that yet, just thought it up in gist
[07:26] brainproxy: trying to keep it simple
[07:26] felixhummel has joined the channel
[07:27] brainproxy: ello: refresh .. needed to kick of the loop w/ a function call at the bottom
[07:28] ello: brainproxy omg you are a genious
[07:28] ello: brainproxy nice, so using nodejs's event facilities wont gonna stack overflow if i understand you
[07:28] ello: brainproxy right?
[07:29] zastaph has joined the channel
[07:29] brainproxy: well doing it the way I suggested should not result in stack overflow
[07:29] ello: brainproxy to be honest it seems quite straightforward
[07:29] ello: :)
[07:30] brainproxy: you could even take out the `i++ < end`
[07:30] brainproxy: and it would just loop indefinitely, and should still be okay
[07:30] ello: :-D
[07:30] ello: rofl =)
[07:30] brainproxy: as it won't step forward to another call to doThisManyTimes() until the last one is finished
[07:31] joshkehn has left the channel
[07:31] ello: brainproxy nice one 
[07:31] ello: do you do node for a long time?
[07:31] ello: i feel such a noob now :-D
[07:31] brainproxy: about 1.5 years
[07:31] brainproxy: started in Jan 2010
[07:31] fangel has joined the channel
[07:32] brainproxy: so coming up on 2 yrs I guess :)
[07:32] ello: hehe
[07:32] brainproxy: btw, there are some libs that can help you with async stuff
[07:32] ello: i use one
[07:32] ello: but does not have loops
[07:33] ppcano has joined the channel
[07:33] piscisaureus: isaacs: yt?
[07:33] phluffy has joined the channel
[07:33] phluffy has joined the channel
[07:33] ello: brainproxy can i ask one more thing? :D
[07:34] brainproxy: ello: sure, going to bed soon though
[07:34] ello: brainproxy That someAsyncFacilityYoureUsing
[07:35] icebox has joined the channel
[07:35] ello: that would be the function i want to call async?
[07:35] brainproxy: probably; should be able to substitute with any async facility like the one's built into node
[07:36] ello: thank you man, leaving now
[07:36] ello: good night
[07:36] ello: :)
[07:36] brainproxy: thinks fs.readFile
[07:36] thalll has joined the channel
[07:37] brainproxy: oh, that makes me think to revise the gist
[07:37] jacobolus has joined the channel
[07:38] jbpros_ has joined the channel
[07:38] fly-away has joined the channel
[07:39] brainproxy: anyway, the function supplied as the last arg to someAsyncFacilityYoureUsing is really the callback if you want to think of it in terms of something like the fs.readFile facility in the node API
[07:39] brainproxy: i made that more clear in a revision
[07:39] Frippe has joined the channel
[07:39] Frippe has joined the channel
[07:40] nitinb has joined the channel
[07:41] Drakonite has joined the channel
[07:42] sylvinus has joined the channel
[07:43] herbySk has joined the channel
[07:44] aaronmcadam has joined the channel
[07:46] freeformz has joined the channel
[07:46] Charuru has joined the channel
[07:50] justinTNT has joined the channel
[07:50] thalll_ has joined the channel
[07:52] mpavel has joined the channel
[07:53] Schmolzer has joined the channel
[07:54] tonymilne has left the channel
[07:56] xerox: wow this is new: Error: socket hang up at CleartextStream.<anonymous> (http.js:1290:45) at CleartextStream.emit (events.js:61:17) at Array.1 (tls.js:620:22) at EventEmitter._tickCallback (node.js:126:26)
[07:59] onetom has joined the channel
[08:00] Margle has joined the channel
[08:01] meso has joined the channel
[08:02] anaio has joined the channel
[08:04] bengrue has joined the channel
[08:06] Prometheus has joined the channel
[08:06] whitman has joined the channel
[08:06] TomY has joined the channel
[08:07] patcito_ has joined the channel
[08:07] petrjanda has joined the channel
[08:08] meso has joined the channel
[08:09] dEPyWork has joined the channel
[08:09] meso has joined the channel
[08:10] hackband has joined the channel
[08:10] FireFly|n900 has joined the channel
[08:12] bergie has joined the channel
[08:14] Sidnicious has joined the channel
[08:15] markwubben has joined the channel
[08:20] luke` has joined the channel
[08:21] adambeynon has joined the channel
[08:22] Sebastien-L has joined the channel
[08:24] jbpros has joined the channel
[08:24] sfoster has joined the channel
[08:27] wbf has joined the channel
[08:27] davidban_ has joined the channel
[08:29] jhurliman: just launched the open beta of our service we've been working on for the last nine months. 100% node.js backend (including a real-time recommender) - http://cull.tv/
[08:31] H4ns: jhurliman: lovely interface!
[08:32] jhurliman: thanks :)
[08:33] chapel: jhurliman: looks pretty good
[08:33] chapel: like the idea
[08:34] chapel: need a way to figure out how to full size it
[08:35] jhurliman: only way i know of is to instruct people how to put their browser into fullscreen (F11 or apple-shift-F i think)
[08:35] MrNko has joined the channel
[08:35] vguerra has joined the channel
[08:36] robotmay has joined the channel
[08:36] matt_c has joined the channel
[08:36] chapel: also, should support keyboard controls
[08:36] chapel: like arrow left/right for next/previous
[08:36] chapel: space for pause
[08:37] chapel: play
[08:37] raphdg has joined the channel
[08:37] chapel: otherwise, really like it, gonna open source any of it? and have any plans for monetizing it?
[08:38] smtlaissezfaire has joined the channel
[08:38] chapel: afk zzz
[08:38] jhurliman: night
[08:39] jhurliman: chapel, as far as open source parts, yes. i need to get blog posts up talking about those parts
[08:39] Industrial has joined the channel
[08:39] chapel: cool
[08:39] eldios has joined the channel
[08:39] chapel: well keep up the good work
[08:39] jhurliman: and thanks for the feedback. i also need to sleep (for a few hours before sf music tech)
[08:40] JasonSmith: jhurliman: Are you the jhurliman of libsecondlife?
[08:40] jhurliman: yep
[08:40] cjheath has joined the channel
[08:40] jhurliman: small world!
[08:40] JasonSmith: libsecondlife was (is?) so freaking amazing
[08:40] JasonSmith: #offtopic
[08:40] jhurliman: thanks :-D
[08:42] cjheath has joined the channel
[08:42] JasonSmith: jhurliman: I had a MIDI feed into it and I could control SL shows using real-world MIDI show control feeds. Never could find an investor though :)
[08:43] kulor-uk has joined the channel
[08:44] mc_greeny has joined the channel
[08:44] hl0n has joined the channel
[08:44] jhurliman: JasonSmith, that is awesome. the first paid project i did with libsl was running a live music event. with scripted actors though, no real-time controls. very cool
[08:44] Industrial has left the channel
[08:44] temp01 has joined the channel
[08:44] Industrial has joined the channel
[08:46] JasonSmith: jhurliman: yeah the idea was to test out shows in SL with actual MIDI-SC data before doing it more expensively in meatspace. SL was cool and so similar to the web. Shame. Well, gotta run
[08:51] [AD]Turbo has joined the channel
[08:51] mape: What might cause an exec to fail will 'message: 'Command failed: '' if it works when I run it in the terminal?
[08:51] mape: (and it works fine)
[08:52] den512 has joined the channel
[09:01] bergelmir has joined the channel
[09:01] bergelmir has joined the channel
[09:03] llee_ has joined the channel
[09:05] mikl has joined the channel
[09:06] meso has joined the channel
[09:07] MrTopf has joined the channel
[09:09] markwubben has joined the channel
[09:09] jetienne_ has joined the channel
[09:11] mendel_ has joined the channel
[09:14] bzinger has joined the channel
[09:14] Xano has joined the channel
[09:15] shoebat has joined the channel
[09:15] ditesh|cassini has joined the channel
[09:15] shoebat: just say node to drugs
[09:16] shoebat: it takes one to node one
[09:16] adambeynon has joined the channel
[09:16] sylvinus has joined the channel
[09:17] ditesh|cassini has joined the channel
[09:18] Cromulent has joined the channel
[09:19] dilvie has joined the channel
[09:21] Skomski has joined the channel
[09:21] ditesh has joined the channel
[09:23] sebastianedwards has joined the channel
[09:24] ditesh|cassini has joined the channel
[09:28] sgimeno has joined the channel
[09:29] random123: shoebat: All good things come to he who nodes, Better to have noded and lost than never to have noded at all
[09:29] SamuraiJack has joined the channel
[09:30] shoebat: random123 ooo wd
[09:30] dmkbot: joyent/libuv: 03piscisaureus: Specify error handling for uv_write and uv_connect - https://github.com/joyent/libuv/issues/185
[09:30] random123: If you can't stand the node get out of the kitchen
[09:31] levi501d has joined the channel
[09:31] random123: i have way to much node on my hands
[09:32] shoebat: hmm interesting.. i'll make a node of it
[09:33] versicolor has joined the channel
[09:33] random123: i wasnt going to say anything, but When in Node.js, do as the Noders do
[09:34] grekko has joined the channel
[09:34] pgherveou has joined the channel
[09:34] irahgel has joined the channel
[09:35] shoebat: you ever drink pinode noir?
[09:39] dob_ has joined the channel
[09:39] kulor-uk has joined the channel
[09:40] Margle has joined the channel
[09:41] random123: Eat, drink and be merry, for tomorrow we node
[09:43] shoebat: well arent you just a node-it-all
[09:43] k1ttty has joined the channel
[09:43] random123: Great minds node alike
[09:45] shoebat: when in node, do as the noders do
[09:47] Remoun has joined the channel
[09:48] eldios: noders gonna node
[09:48] irahgel has left the channel
[09:48] robotmay: Is anyone using Cassandra with node? I'm trying to decide between Cassandra and Riak but I can only find a Riak library
[09:49] cosmincx has joined the channel
[09:50] shapeshed has joined the channel
[09:54] adrianmg has joined the channel
[09:55] pgherveo_ has joined the channel
[09:56] cjroebuck has joined the channel
[09:57] random123: robotmay: casandra uses a protocol called Thift, and here is node-thrift https://github.com/wadey/node-thrift
[09:57] random123: spelling errors not included
[09:58] robotmay: random123: I just stumbled onto that, thanks :) I'm looking at writing a lot of data through a node app (web stats) but I'm still debating which db to use with it
[09:59] random123: Well, I have been down that road before, and the answer is use whatever database you are comfortable with, most people have MySQL experience
[09:59] robotmay: random123: Aye. I fancied playing with a new toy though :D
[09:59] random123: Don't pull out the big guns until you really need them, because it can destroy your project
[10:00] robotmay: There's no rush on this, just a side project I'm looking at. I really like Redis but I don't really want an in-memory database :\
[10:00] Margle has joined the channel
[10:01] Industrial has joined the channel
[10:01] stride has joined the channel
[10:02] irahgel has joined the channel
[10:02] shoebat: mongodb ftw
[10:03] random123: In that case, you should use it if you want to learn it, but I've found that its never a good idea to learn something until you actually need it, its good to know what things do but to make an investment on something you might need someday, but I think MySQL would probably do whatever job you have right now
[10:03] robotmay: I've had a lot of trouble with data integrity in mongo in the past (it's probably resolved, but still paranoid)
[10:03] meso has joined the channel
[10:05] robotmay: random123: Normally I do just stick to MySQL/PostgreSQL but they're so boooooring ;)
[10:07] random123: In the end its just information stored somewhere, thats all it *does* is how I look at it, but Cassandra isn't really as *easy* I guess, its key value, so SQL is gonna be easier to get the data you want
[10:08] random123: hmm little too heavy on the asterisks
[10:08] random123: seems kinda gay
[10:09] robotmay: Asterisks are just metrosexual, it's ok
[10:09] hellp has joined the channel
[10:09] Margle: random123: try switching to underscores.
[10:09] jomoho has joined the channel
[10:09] Margle: random123: more manly.
[10:09] socialhack has joined the channel
[10:10] robotmay: Not sold on Cassandra as I generally don't like using anything Java/Apache. Not sold on Riak either, if I'm honest.
[10:10] shoebat: ive never used mysql with node.. is it straight-forward?
[10:10] robotmay: I just like shiny toys
[10:10] Esteb has joined the channel
[10:11] mendel_ has joined the channel
[10:11] igl: shoebat: yes
[10:11] random123: shoebat: Yes, really easy, you just do mysql.query(sql, callback gets result)
[10:11] shoebat: oic
[10:12] igl: sql module seems stable now too. 
[10:12] shoebat: reading documentation now... seems silly to not use document-oriented db with node
[10:13] random123: I mean _really_ easy
[10:14] socialhack_ has joined the channel
[10:17] amiller has joined the channel
[10:17] ddragostinov has joined the channel
[10:18] McMAGIC--Copy has joined the channel
[10:18] mendel__ has joined the channel
[10:19] fermion has joined the channel
[10:19] meso has joined the channel
[10:20] temp01 has joined the channel
[10:21] abraxas: Does anyone know if cluster provides IPC, like multi-node does?
[10:21] abraxas: It doesn't seem like it.. but for all I know there's a plugin, or it's simply undocumented?
[10:23] llee_ has left the channel
[10:25] majek_ has joined the channel
[10:25] CarterL has joined the channel
[10:26] mikl has joined the channel
[10:27] jacobolus has joined the channel
[10:28] akujin has joined the channel
[10:28] socialhack_ has joined the channel
[10:29] |fly| has joined the channel
[10:30] alelu has joined the channel
[10:30] Frippe has joined the channel
[10:30] alelu: hi all.
[10:30] akujin- has joined the channel
[10:31] alelu: anyone uses the formidable module?
[10:31] random123: abraxas: Check this thread about JSON RPC or Couch db for that http://stackoverflow.com/questions/5010814/whats-the-best-way-to-make-one-node-js-server-talk-to-another
[10:31] Margle has joined the channel
[10:32] abraxas: Thanks
[10:32] bogomips has joined the channel
[10:33] random123: abraxas: I heard some good things about dnode https://github.com/substack/dnode
[10:34] abraxas: I'm making a proof of concept with tcp sockets between workers and master process.
[10:34] abraxas: Makes a lot of sense combined with msgpack, which we're using anyway.
[10:34] shanebo: hey guys, how can I restart node to where everything in memory gets flushed?
[10:34] abraxas: No needless repacking of data.
[10:36] eldios: is anyone using docpad in here?
[10:36] eldios: looks like I cannot make it listen on a specified port -_-"
[10:39] N0va` has joined the channel
[10:39] random123: shanebo: maybe this helps http://kfalck.net/2011/04/30/persistent-state-for-nodejs-application-servers
[10:40] random123: shanebo: But check the comments on that page, instead of a file, you can store it in Redis, etc.
[10:41] shanebo: random123 thanks but I'm needing the memory to get lost… For some reason when I control + c, it doesn't kill everything...
[10:41] dnjaramba has joined the channel
[10:42] random123: shanebo: Are you using cluster, or something that spawns multiple node processes?
[10:42] shanebo: yeah connect vhost
[10:42] shanebo: http://senchalabs.github.com/connect/middleware-vhost.html
[10:46] random123: shanebo: try "killall -v node"
[10:46] replore has joined the channel
[10:46] replore_ has joined the channel
[10:47] random123: might need to make a small bash .sh file to: start node, killall, then start node again node-restart.sh
[10:47] ixti has joined the channel
[10:48] Raynos: If I were to think that node.js would be suitable to write a piece of accounting software as an intranet application
[10:48] Raynos: Does this mean I'm abusing node.js ? 
[10:48] Voxxit has joined the channel
[10:48] Voxxit has left the channel
[10:50] wereHamster: no
[10:50] random123: Raynos: It depends, do you want this accounting software to be distributed on the WWW, if not, then I think you can write better front ends in something that has the bindings, like Python or Java
[10:51] Raynos: Yeah but I know node, I dont know python or Java
[10:52] random123: Raynos: learning Python would be worth the investment I think
[10:53] Raynos: not if I want the application done within the month
[10:54] CStumph has joined the channel
[10:54] shanebo: random123 thanks
[10:55] random123: Raynos: Well, if you had 1 month to study Python first, expecially GUI api, then you would have a better end result
[10:56] random123: Raynos: And the networking API
[10:56] CarterL: Raynos: http://knockoutjs.com/ + node.js?
[10:58] Raynos: random123: what are the real advantages over a python GUI rather then a web GUI ?
[10:58] Raynos: carterl: ew knockout :(
[10:58] thalll has joined the channel
[10:59] random123: Raynos: I think you should use Node.js
[10:59] |fly| has joined the channel
[10:59] alelu: guys anyone knows why the formidable module only parses one file when uploading multiple files?
[10:59] CarterL: Raynos: not a fan?
[11:00] Raynos: Not really
[11:00] random123: Raynos: I wouldn't think of anything else at this moment, maybe sometime learn Python or Java
[11:00] Raynos: I find those things annoying
[11:01] patrickgamer has joined the channel
[11:01] Raynos: I know a bit of python & java. I find both languages annoying
[11:01] alelu: Raynos lol :D
[11:01] patrickgamer has left the channel
[11:01] random123: Raynos: You can write JS.NET if you want
[11:01] thalll_ has joined the channel
[11:01] Raynos: random123: I can hang myself if I want
[11:01] Raynos: Why would anyone want to use .NET over node.js :\
[11:02] Glenjamin: node.js might be a good fit for a traditional GUI if the libs existed
[11:02] random123: Raynos: True, go Node.js all the way.
[11:02] Glenjamin: since all GUIs are based around an event loop
[11:04] alelu: lol
[11:04] random123: Raynos: I think if its OK with the client being in the browser, then its fine.
[11:04] alelu: Raynos: sarcastic
[11:05] kuebk has joined the channel
[11:06] kuebk: does nodejs http handles etag?
[11:07] random123: kuebk: no, but Express does, in the static folder
[11:09] Raynos: Glenjamin: Slap any headless webkit/chrome browser thing onto node and off you go into desktop application land
[11:11] ph^ has joined the channel
[11:14] mendel_ has joined the channel
[11:14] mendel_ has joined the channel
[11:17] random123: Raynos: I think as far as UI with headless, thats really good, developing UI will be far quicker, no need to upgrade.
[11:17] devrim has joined the channel
[11:17] random123: Raynos: But limitations exist where the browser is in a Sandbox by default, no save file dialog, etc. can't spawn a process to do other stuff outside of JS on client's computer (unless its a further modified version)
[11:19] random123: Raynos: But one thing is for sure, UI will be quick to dev, and networking is thoroughly not a problem
[11:20] chrisbuchholz: random123, Raynos: it has become trendy to write a Qt app that does nothing more than show a QtWebkit view that runs either a local or external webapp - this could also be a way to do it with your node.js app that has to be done within the month. Its also fairly easy to add special-case functionality if you need your node.js app to do things that cannot be done from within the QtWebkit view 
[11:21] Raynos: I think ill just stick to an intranet application
[11:21] Raynos: dont see any need to faff around with limitations of sandboxing
[11:21] aron_ has joined the channel
[11:21] Raynos: CRUD and shiny data views should be sufficient
[11:21] brianseeders has joined the channel
[11:21] chrisbuchholz: random123, Raynos: i like this model very much, because after having developed GUI's in Qt and Gtk+ fro years, using web-technologies for gui (running externally) is awesome because you can update it without needing the users to upgrade their software. Its just there, as it is for any other webapp living inside any other browser.
[11:23] chrisbuchholz: random123, Raynos: the only thing about this model, is the lack of native-feel to the app. You have to go out on a lim, if you want native feeling in a webapp, and it never ever gets really great anyway. But on the other hand, apps like google chrome and firefox doesnt feel native either. Hell, itunes dont feel native.
[11:23] random123: chrisbuchholz: That does sound really neat, I think I might use that for something
[11:24] simenbrekken has joined the channel
[11:24] schwab has joined the channel
[11:27] aabt has joined the channel
[11:27] tshpaper has joined the channel
[11:27] tshpaper has joined the channel
[11:29] tshpaper has joined the channel
[11:30] what has joined the channel
[11:30] tshpaper has joined the channel
[11:31] tshpaper has joined the channel
[11:32] tshpaper has joined the channel
[11:32] tshpaper has joined the channel
[11:34] tshpaper has joined the channel
[11:34] kdng-devrim has joined the channel
[11:34] kdng-devrim has left the channel
[11:36] cjheath_ has joined the channel
[11:40] bshumate has joined the channel
[11:40] bshumate has joined the channel
[11:45] chjj has joined the channel
[11:45] fairwinds has joined the channel
[11:46] spcshpopr8r has joined the channel
[11:47] NegativeK has joined the channel
[11:48] bzinger has joined the channel
[11:52] jbpros has joined the channel
[11:52] eee_c has joined the channel
[11:57] tzmartin has joined the channel
[11:58] kimico has joined the channel
[11:58] Glenjamin: chrisbuchholz: at that point keeping it as a normal web app is probably preferrable, because you remove the expectation that it should act natively
[12:01] chjj has joined the channel
[12:01] enmand has joined the channel
[12:01] eldar has joined the channel
[12:02] AD7six: I'm trying to querystring.stringify {foo: {bar: [1,2,3]} but getting bar represented simply as "" . i.e. if I parse what stringify gives me it's not the same as the input passed to stringify. is that to be expected?
[12:04] enmand_ has joined the channel
[12:04] spcshpopr8r: AD7six: if bar happens to contain an array with named indexes...JSON.stringify will quitely not know what the hell to do with it and just spit out emptiness in its place
[12:05] spcshpopr8r: AD7six: not sure if that's what you're running into though
[12:08] mikl has joined the channel
[12:10] Xano has joined the channel
[12:12] kulor-uk has joined the channel
[12:12] secoif_ has joined the channel
[12:16] zamolxes has joined the channel
[12:16] torsd has joined the channel
[12:17] Sanuk has joined the channel
[12:20] zamolxes: hello. I want to store a hash (js object) with 1-200.000 keys (keys = strings of 15-20chars, all the values are '1'  , i just care if they're present or not). Is this crazy, or should I just use memcached?
[12:21] jtsnow has joined the channel
[12:23] TechCel has joined the channel
[12:24] cody-- has joined the channel
[12:26] x14oy1n has joined the channel
[12:26] Poetro has joined the channel
[12:26] Poetro has joined the channel
[12:28] Esteb has joined the channel
[12:30] onetom has joined the channel
[12:31] Sanuk has left the channel
[12:33] aron_ has joined the channel
[12:38] postwait has joined the channel
[12:39] mehtryx has joined the channel
[12:39] erichynds has joined the channel
[12:40] clyfe has joined the channel
[12:41] kriszyp has joined the channel
[12:43] aron_ has joined the channel
[12:43] bnoordhuis has joined the channel
[12:43] clyfe has left the channel
[12:45] hackband_ has joined the channel
[12:46] mbrevoort has joined the channel
[12:47] mikl has joined the channel
[12:48] ditesh|cassini has joined the channel
[12:49] andree has joined the channel
[12:54] pickels has joined the channel
[12:54] agnat_ has joined the channel
[12:54] bicranial has joined the channel
[12:55] sylvinus has joined the channel
[12:56] ceej has joined the channel
[12:57] mike5w3c_ has joined the channel
[12:58] steveCAustin has joined the channel
[12:58] wilken has joined the channel
[12:58] mehlah has joined the channel
[12:59] FireFly|n900 has joined the channel
[13:00] NewCoder has joined the channel
[13:01] MUILTFN has joined the channel
[13:01] tdegrunt has joined the channel
[13:03] robotmay: random123: You were right, I'm just gonna use Postgres for storing those stats. There's no 'NoSQL' db that does everything I want :\
[13:04] __directory has joined the channel
[13:07] DrMcKay has joined the channel
[13:07] mikl has joined the channel
[13:08] mikl has joined the channel
[13:08] deedubs has joined the channel
[13:10] dmkbot: joyent/libuv: 03piscisaureus: Specify error handling for uv_write and uv_connect - https://github.com/joyent/libuv/issues/185
[13:13] webben has joined the channel
[13:14] webben has joined the channel
[13:15] hacksparrow has joined the channel
[13:16] ph^ has joined the channel
[13:17] thinkt4nk has joined the channel
[13:18] normanrichards has joined the channel
[13:20] febits has joined the channel
[13:20] webben has joined the channel
[13:21] [[zz]] has joined the channel
[13:22] navaru has left the channel
[13:26] bradleymeck has joined the channel
[13:27] webben has joined the channel
[13:29] c4milo has joined the channel
[13:30] MUILTFN has joined the channel
[13:31] smtlaissezfaire has joined the channel
[13:32] noodlehaus has joined the channel
[13:32] nitinb has joined the channel
[13:32] ksheurs has joined the channel
[13:32] mandric has joined the channel
[13:35] aakour has joined the channel
[13:35] BillyBreen has joined the channel
[13:36] kmiyashiro has joined the channel
[13:37] albertosheinfeld has joined the channel
[13:38] rmzg: Hey uh
[13:38] bnoordhuis: uh?
[13:38] rmzg: What's the best way to iterate over an array in current best practice nodeland?
[13:38] thomblake has joined the channel
[13:38] thomblake has left the channel
[13:39] aaronmcadam: backwards while loop? :p
[13:40] CarterL has joined the channel
[13:40] rmzg: -_-
[13:40] rmzg: Why doesn't js have a frigging foreach loop
[13:40] tzmartin has joined the channel
[13:40] aaronmcadam: it does
[13:40] rmzg: Tell me more
[13:40] aaronmcadam: google is your friend
[13:42] rmzg: Does that mean you aren't my friend?
[13:42] thurmda has joined the channel
[13:42] CarterL: friends tell friends to google
[13:42] Glenjamin: [].forEach(function(item) {})
[13:43] nuck has joined the channel
[13:43] rmzg: Oh that
[13:43] unomi has joined the channel
[13:46] thurmda: I need to make thousands of REST API calls (using node v0.4.11), Setting http.Agent.defaultMaxSockets = 500 (from default 5) makes no difference that I can tell. What's the best way to achieve higher throughput?
[13:46] zeiris has joined the channel
[13:48] eddyb has joined the channel
[13:48] eddyb: hi
[13:49] eddyb: if I do this.on('connect', function(){this.doThat();});
[13:49] mendel_: what do you guys use to backup your db/folders?
[13:49] baudehlo has joined the channel
[13:49] thurmda: this looks interesting but it's v0.5.x http://hailstorm.radicaldesigns.org/about
[13:49] eddyb: what object will be "this" pointing to in the anon function?
[13:50] m00p has joined the channel
[13:50] eddyb: m00p: congratz, you're the 666th user of this channel
[13:50] amtal has joined the channel
[13:50] thalll has joined the channel
[13:51] EndangeredMassa has joined the channel
[13:52] igl: number of the beast
[13:52] robhawkes has joined the channel
[13:53] eddyb: s/a// if you like
[13:53] JumpMast3r has joined the channel
[13:53] esmevane has joined the channel
[13:54] robhawkes has joined the channel
[13:54] robhawkes has joined the channel
[13:55] tomb has joined the channel
[13:55] dmkbot1 has joined the channel
[13:55] Venom_X has joined the channel
[13:56] DrMcKay_ has joined the channel
[13:57] burningdog has joined the channel
[13:57] thurmda: I need to update 1000's of fb applications so the first call needs to be for an access_token, once I have the access_token I can make a call to update settings. ....
[13:58] thurmda: I loop through the list to get the access_token and it's async so as soon as I get the token I make the call to update the settings....
[13:58] thurmda: but logging shows that all access_token calls are made first
[13:59] thurmda: do calls get queued? 
[13:59] wilken has joined the channel
[13:59] thurmda: I'm expecting minimal payload back (this is just a API call) so I thought I could have 100's in flight 
[14:00] thurmda: is this not the case?
[14:00] eldios has joined the channel
[14:01] rmzg: How are you launching them?
[14:01] thurmda: Cause right now... the php script that I ported over to node.js is still damn close if not faster
[14:01] svnlto has joined the channel
[14:01] svnlto has joined the channel
[14:01] rmzg: Show some code!
[14:01] thurmda: using npm lib "csv" to parse a file like: 	csv() 	.fromPath(__dirname+'/'+inputCSV, config.csv) 	.on('data',processData) 	.on('end', function(c){total = c});
[14:02] thurmda: where: function processData(app, i ){ 		console.log("A #%d ", i); 		getAccessToken(app, function(e, token){ 			console.log("B #%d ", i); 			e ? err(e) : setAppProperties(token, properties,function(e){ 				console.log("C #%d ", i); 				e ? err(e) : process.stdout.write("."); 			}); 		}); 		function err(e){ 			app.error = e; 			console.warn("ERROR updating application[%s] Err: ", app.name, e); 			errors.push(app); 		} }
[14:02] bnoordhuis: thurmda: look up http.Agent in the docs
[14:02] havenn has joined the channel
[14:02] rmzg: Oh my god
[14:02] thurmda: yep
[14:02] adambeynon has joined the channel
[14:02] thurmda: sorry for the formatting
[14:03] Aikar: eddyb: i believe it points back to the event emitter. anonymous functions scope is always controlled by the code that executes them, and if not specified, defaults to global.
[14:03] Aikar: always controlled unless you specifically enforce a scope with bind() *
[14:03] colinclark has joined the channel
[14:04] eddyb: isn't there an easy way to specify a this object?
[14:04] thurmda: I've also seen this : https://github.com/nodejitsu/node-http-proxy/pull/84
[14:04] Aikar: eddyb: for example. this.on('foo', (function() { this.baz(); }).bind(bar));   enforces this.baz to be bar.baz()
[14:04] eddyb: like setTimeout lets you
[14:04] Aikar: eddyb: ^  do that to force it
[14:04] thurmda: I think that is v.0.5 though
[14:04] eddyb: Aikar: thanks,  was hoping for a way without bind
[14:05] Aikar: eddyb: thats just how javascript works, you either gotta pass it a scope with bind, or let the code executing it control it
[14:05] Aikar: eddyb: you can also use scope with closures
[14:05] mavus has joined the channel
[14:05] dmkbot1: joyent/node: 03tmoeller: os.cpus() and os.getNetworkInterfaces() empty on windows - https://github.com/joyent/node/issues/1687
[14:05] Aikar: var scope = someScopeYouWant; this.on('foo', function() { scope.bar(); });
[14:06] binarychef has joined the channel
[14:06] Aikar: but bind is prolly the better way to do it
[14:06] eddyb: I know how js works :)
[14:06] Aikar: for example if your func is defined elsewhere outside of te closures scope. this.on('foo', bar.bind(baz))
[14:06] binarychef has left the channel
[14:07] ticdup has joined the channel
[14:07] eddyb: I just wanted this.on(name, func, thisPtr);
[14:08] _main_ has joined the channel
[14:08] Aikar: eddyb: would require a change to node which would essentially call .bind() for you, so not really useful
[14:08] thurmda: bnoordhuis: Yes, I've read up on the http.Agent in the Node.js manual and I'm playing with http.Agent.defaultMaxSockets but it seems to make no difference
[14:08] eddyb: Aikar: nope, not call bind
[14:08] Tobbe_: I'm researching various topics before building a node.js express app. I want to make it RESTful. I don't want to use HTTP Authentication, because it's an ugly usability nightmare. What are my other options?
[14:08] Badababuba has joined the channel
[14:08] eddyb: but instead of calling the function, to use .call(thisPtr, arg1, arg2, ...)
[14:09] eddyb: pretty usual for setTimeout
[14:09] Aikar: eddyb: other than the event emitter storing a reference to the scope desired, would be silly when bind does all that work for you
[14:09] Badababuba1 has joined the channel
[14:09] eddyb: I was expecting this in the events
[14:09] Aikar: why are you opposed to using bind?
[14:09] Aikar: yes thats how setTimeout is defined, but could equally be done with bind
[14:09] squeese has joined the channel
[14:09] eddyb: what's that test bot?
[14:09] explodes has joined the channel
[14:10] eddyb: js print('a')
[14:10] Aikar: v8bot_: foo()
[14:10] amigojapan has joined the channel
[14:10] Aikar: v8: foo()
[14:10] v8bot_: Aikar: ReferenceError: foo is not defined
[14:10] thurmda: bnoordhuis: and that recent bug thread (https://github.com/nodejitsu/node-http-proxy/pull/84) looks related
[14:10] andree has joined the channel
[14:10] eddyb: v8bot_: (function(){print(this)})();
[14:10] thurmda: but it's for v.0.5
[14:10] eldios: .
[14:10] eddyb: v8bot_: (function(){print(this)}.bind(1))();
[14:10] ryanfitz has joined the channel
[14:11] eddyb: v8: (function(){print(this)}.bind(1))();
[14:11] v8bot_: eddyb: CONSOLE: [{}], OUTPUT: undefined
[14:11] eresair has joined the channel
[14:11] eddyb: v8: (function(){print(this)}).bind(1)();
[14:11] v8bot_: eddyb: CONSOLE: [{}], OUTPUT: undefined
[14:11] eddyb: v8: (function(){print(this);}.moo)();
[14:11] v8bot_: eddyb: TypeError: Object function (){print(this);} has no method 'moo'
[14:12] bnoordhuis: thurmda: you can pass in a custom agent object to http.request()
[14:12] dseif has joined the channel
[14:14] brunob has joined the channel
[14:14] thurmda: http.request(options, callback) ... how can you pass a custom agent?
[14:14] OctagonTheory has joined the channel
[14:14] jhurliman has joined the channel
[14:14] eddyb has left the channel
[14:14] jbpros has joined the channel
[14:15] thurmda: options : [host, port, method, path, headers]
[14:15] thurmda: from the docs
[14:15] Glenjamin: thurmda: http://nodejs.org/docs/v0.4.11/api/http.html#http.request
[14:15] Glenjamin: it's in there
[14:19] rfay has joined the channel
[14:19] thurmda: OMG, thanks... I see now that some link I followed before took me to the v.0.4.0 docs not the v.0.4.11 docs
[14:19] bbigras__: I'm looking for a pub/sub solution. I got scripts in node.js and some in python. Any suggestions?
[14:19] mehtryx has left the channel
[14:20] smtlaissezfaire has joined the channel
[14:21] Sembiance: thurmda: I really like: https://github.com/mikeal/request
[14:22] jamund has joined the channel
[14:23] dmkbot has joined the channel
[14:23] eldios: anyone using nodpad?
[14:23] eldios: ehm
[14:23] eldios: docpad?
[14:23] thurmda: Sembiance: checking that out too
[14:24] Sembiance: thurmda: I've used it in 3 different projects now, it's been one of the most useful node.js modules I've used. 
[14:25] Sembiance: thurmda: my #1 favorite module is Step (just 1 of many control-flow libraries, but I like this one the best) https://github.com/creationix/step
[14:25] sivy has joined the channel
[14:25] Esteb has joined the channel
[14:26] Aikar: request is cool, just wish it would default the headers correctly for POST data :/
[14:26] pgte has joined the channel
[14:26] knifed has joined the channel
[14:28] k1ttty has joined the channel
[14:30] slloyd_ has joined the channel
[14:33] schwab has joined the channel
[14:33] a_suenami has joined the channel
[14:33] tk has joined the channel
[14:34] Aikar: imo i like seq better than step, in the way the chaining works it easily lays out whats sequential and whats parallel, where as in step you gotta look into the function to see if its parallel or not
[14:35] simon1 has joined the channel
[14:35] bzinger has joined the channel
[14:35] rphillips has joined the channel
[14:35] bogomips has joined the channel
[14:36] paulh_ has joined the channel
[14:36] jakehow has joined the channel
[14:36] paulh_: good day all
[14:37] paulh_: I'm trying to install node onto my win 7 machine with cygwin, and I'm running into an error on the "make" step  
[14:38] thurmda: Glenjamin, bnoordhuis , Sembiance  Thanks for the help, passing the custom Agent http.request was what I needed! 
[14:38] Aikar: paulh_: there is an official windows build (precompiled) now
[14:38] jaequery has joined the channel
[14:38] Aikar: but imo should do dev/testing in an ubuntu/debian VM :P
[14:39] bingomanatee1 has joined the channel
[14:39] paulh_: Is there?  well that'll make life easier..
[14:39] thurmda: He's my code now : 		postOptions = config.basePostOptions; 			postOptions.host = 'graph.facebook.com'; 		    postOptions.path = '/oauth/access_token'; 			postOptions.agent =  httpClient.getAgent(postOptions.host, config.https? 443:80); 			postOptions.agent.maxSockets = config.maxSockets; 		post(postOptions ....
[14:39] Aikar: yep, build 0.5.6 atm i think
[14:39] paulh_: haha, you're entitled to your opinion.. ;)   I may do that eventually.. but I just want to play around for now :)
[14:39] joshkehn has joined the channel
[14:39] Aikar: just note windows isnt fully complete yet and is unstable
[14:40] paulh_: fair enough, it'll be enough to get my feet wet anyways
[14:40] Aikar: well, unstable in the sense of API, i think run time stability might be ok, havent tried it though
[14:40] Aikar: just the underlying layer for the windows build is still under heavy development
[14:40] paulh_: where can I find it?  nodejs.org seems to only have links to build versions
[14:41] jtsnow has joined the channel
[14:41] Aikar: click on Download
[14:41] paulh_: or I'm just a blind noob
[14:41] Aikar: then its under 2011.09.09 unstable
[14:41] Aikar: node.exe
[14:42] paulh_: yup... blind noob it is lol
[14:42] paulh_: thanks Aikar
[14:42] Aikar: np
[14:42] ecin has joined the channel
[14:42] Aikar: i guess for "playing" windows wil lbe fine
[14:42] Aikar: but take it from a recent windows->ubuntu convert, if you get into seriously developing something, make the switch, life is easier :P
[14:43] rphillips has joined the channel
[14:43] paulh_: ya.. just want to see what it's like.. simple hello world etc..  once I get into dev I'll be doing it in a vm.. just have to teach myself some linux ;)
[14:44] _jhs has left the channel
[14:44] Aikar: try installing ubuntu as a dual boot (11.04), and switch into a full linux OS to do development, then when you wanna play games etc switch back to windows :)
[14:44] febits has joined the channel
[14:44] aheckmann has joined the channel
[14:44] hij1nx has joined the channel
[14:45] paulh_: sounds like a good plan. I had that setup once before with 10.something.. just to play around a bit in linux.. but never spent enough time to get to know it well
[14:45] dguttman has joined the channel
[14:45] aelien27 has joined the channel
[14:46] amiller has joined the channel
[14:46] freeformz has joined the channel
[14:46] Industrial: I have a problem with installing forever from NPM
[14:46] vicapow has joined the channel
[14:46] Aikar: Industrial: npm install forever -g?
[14:46] tbranyen: probably with sudo privs
[14:46] Industrial: I'm not done typing.
[14:47] paulh_: Oooo moody
[14:47] Aikar: paulh_: thats another note... npm i dont think has a windows version yet, and thats pretty much a required tool for node dev
[14:47] vicapow: pandark_: lol
[14:47] vicapow: paulh_: lol *
[14:47] paulh_: ah, thanks for the heads up Aikar.. I'll look more into get ubuntu set up then
[14:47] Industrial: I have downloaded and compiled nodejs-0.4.11; I do not see a node-waf binary being made. Forever needs daemon which apparently uses node-waf.
[14:48] Aikar: Industrial: what does `which node` return?
[14:49] Industrial: I haven't ran make install yet.
[14:49] Aikar: of node?
[14:49] Industrial: yes
[14:49] RORgasm has joined the channel
[14:49] Aikar: well that would be one thing you need to do first lol
[14:49] Industrial: but if I would, it wouldn't install node-waf
[14:49] Industrial: only node
[14:49] Industrial: the binary
[14:49] tbranyen: Industrial: no
[14:49] tbranyen: it installs node-waf as well
[14:49] Aikar: ^
[14:49] Industrial: ah.
[14:49] tbranyen: two two binaries are both installed
[14:49] tbranyen: those*
[14:50] Aikar: which node-waf isnt even a true binary, its a python script lol
[14:50] BennyT has joined the channel
[14:50] tbranyen: those two executables are both installed :)
[14:51] mandric has joined the channel
[14:51] BennyT: hi all, was wondering if there are any Node.js devs from Australia here?
[14:52] Industrial: Are australian nodejs developers superior? :p
[14:52] TheJH has joined the channel
[14:52] TheJH has joined the channel
[14:52] BennyT: in Sydney there doesn't seem to be many that can help
[14:52] Industrial: with?
[14:52] BennyT: @Industrial - probably not
[14:52] jeremyselier has joined the channel
[14:52] fangel has joined the channel
[14:53] BennyT: mainly in helping start an active community
[14:53] kaarlo has joined the channel
[14:53] BennyT: and help promote it as a viable alternative to other application platforms
[14:53] beawesomeinstead has joined the channel
[14:53] zomgbie has joined the channel
[14:53] Styles has joined the channel
[14:55] ticdup has joined the channel
[14:56] dob__ has joined the channel
[14:56] justicefries has joined the channel
[14:56] EyePulp has joined the channel
[14:56] Guest____ has joined the channel
[14:56] temp01 has joined the channel
[14:57] thalll has joined the channel
[14:58] necromancer has joined the channel
[14:58] sub_pop has joined the channel
[15:00] hackband has joined the channel
[15:01] joshthecoder has joined the channel
[15:02] Marak: and BennyT leaves before i tell him about dominictarr
[15:02] ngl has joined the channel
[15:02] ivanfi has left the channel
[15:03] gazumps has joined the channel
[15:03] m00p has joined the channel
[15:03] ngl: is there an existing opposite xml2js
[15:03] tbranyen: probably, but that sounds kind of sketch
[15:03] ngl: api needs
[15:04] m00p has joined the channel
[15:04] trepan has joined the channel
[15:05] fatjonny has joined the channel
[15:05] robertfw has joined the channel
[15:05] jerrysv has joined the channel
[15:07] bradleymeck: ngl there are a couple, i know JUP is out there, idk of one that is 100% compat for both sides
[15:07] _jhs has joined the channel
[15:07] bradleymeck: ngl : http://jsonml.org/ ?
[15:07] tjholowaychuk has joined the channel
[15:08] tjholowaychuk has joined the channel
[15:09] softdrink has joined the channel
[15:10] explodes: any great timezone transformation packages since last week... ;)
[15:10] martinisoft has joined the channel
[15:10] JaKWaC has joined the channel
[15:11] nuck has joined the channel
[15:12] knifed has joined the channel
[15:12] necrodearia has joined the channel
[15:12] ecto has joined the channel
[15:15] JaKWaC has joined the channel
[15:17] rphillips has joined the channel
[15:17] rphillips has joined the channel
[15:18] eee_c1 has joined the channel
[15:19] isaacs has joined the channel
[15:20] smtlaissezfaire_ has joined the channel
[15:20] jesster7 has joined the channel
[15:20] stagas has joined the channel
[15:21] ceej has joined the channel
[15:21] hornairs has joined the channel
[15:22] FireyFly|n900 has joined the channel
[15:25] ckpcw has joined the channel
[15:26] davidsklar has joined the channel
[15:26] ryanfitz has joined the channel
[15:26] felixge has joined the channel
[15:28] jetienne_ has joined the channel
[15:29] jakehow has joined the channel
[15:29] sonnym has joined the channel
[15:30] FIQ|screen has joined the channel
[15:32] simon1: is there any difference in exports and module.exports? 
[15:32] simon1: *between
[15:34] chrislorenz has joined the channel
[15:34] bnoordhuis: simon1: exports is an object you can extend, module.exports a value you can assign an object to
[15:34] cody-- has joined the channel
[15:35] mrdoodles has joined the channel
[15:35] caolanm has joined the channel
[15:35] ph^ has joined the channel
[15:35] mrdoodles has left the channel
[15:35] simon1: bnoordhuis: so then, module.exports.foo = something, would not make sense?
[15:36] bnoordhuis: simon1: no, it would not
[15:36] simon1: perfect. now i understand
[15:36] simon1: thx!
[15:36] paulh_: Aikar: are you still around?
[15:36] codely has joined the channel
[15:37] Glenjamin: module.exports.foo =1is exactly the same as exports.foo =1 - surely?
[15:37] paulh_: or anyone else who could answer this question.  Just looking for some good places to actually learn node.js from scratch
[15:37] paulh_: I've gone through some tutorials on thinkvitamin, and they were a decent intro, but outdated already (used v0.1.99)
[15:38] dmkbot: joyent/node: 03khoomeister: Any chance of a synchronous child_process.exec/spawn in the future? - https://github.com/joyent/node/issues/1167
[15:38] jzacsh has joined the channel
[15:38] jzacsh has joined the channel
[15:38] codely: paulh_: i have some good resources, hmm .. howtonode has some grab stuff
[15:38] ben_ has joined the channel
[15:38] jetienne_: hi
[15:40] paulh_: codely:  thanks, I'll check out howtonode  any other suggestions?
[15:40] codely: yes, expressjs.com
[15:40] codely: look at examples there
[15:40] codely: express is sick. basically almost everyone uses it. check it out
[15:40] joshkehn: codely: Except me. :)
[15:40] admc has joined the channel
[15:41] codely: heh well it's a good starting spot joshkehn 
[15:41] joshkehn: codely: Good starting spot for what?
[15:41] paulh_: to learn node.js
[15:41] codely: for paulh_ 
[15:41] nakkor has joined the channel
[15:41] paulh_: :)
[15:41] paulh_: thanks codely
[15:41] codely: np.
[15:41] tdegrunt has joined the channel
[15:42] stephank has joined the channel
[15:42] tdegrunt_ has joined the channel
[15:42] caolanm has joined the channel
[15:42] paulh_: codely: one more question.. do you happen to know 1 or 2 webistes which use strictly node.js?  just trying to get a feel for what can be done with it.  I'd like to learn it, and make a complete webiste using pretty much just node
[15:43] codely: check out the node.js list of applications/companies etc using it
[15:43] codely: a bunch
[15:43] paulh_: on nodejs.org?
[15:44] gxdssoft has joined the channel
[15:44] DrMcKay: paulh_: linkedin mobile site is written in node
[15:44] gerard0 has joined the channel
[15:44] AvianFlu: paulh_: http://docs.nodejitsu.com
[15:44] willwhite has joined the channel
[15:45] EyePulp: paulh_: can you narrow down the phrase "what can be done with it"?  Essentially you can build any web or command line service with it, but the question is whether it's a good fit for your needs.  explain your needs.
[15:45] dguttman has joined the channel
[15:46] jchris has joined the channel
[15:47] paulh_: true, it is a pretty broad question.  breaking it down into a simple form.  The site I want to build takes a user through a series of questions, and as they answer, builds a document filling their answers into appropriate places.  I'm need to have user registration/login, and each time they answer a question, save their state to a database, so they can continue where they left off next time they log in
[15:47] zomgbie has joined the channel
[15:47] paulh_: it's also going to have different documents that they can create, each with their own set of questions etc...
[15:48] mif86 has joined the channel
[15:49] qbert_ has joined the channel
[15:50] scott_gonzalez has joined the channel
[15:50] EyePulp: paulh_: The front end template tools under node aren't as mature as say django, or RoR, which would almost certainly fit your project better.  However, if you have the time and inclination, there are plenty of tools under node that can handle what you're trying to accomplish.  You'll spend more time building it, but you'll learn more in the end.
[15:50] qbert_: Anyone know of a  mongo / session / connect module ?
[15:50] robhawkes has joined the channel
[15:50] JaKWaC has joined the channel
[15:51] EyePulp: qbert_: doesn't connect have a session module built in?  using redis or something?
[15:51] context has joined the channel
[15:51] EyePulp: ACTION doesn't use connect, but thought he heard things about sessions under it.
[15:52] paulh_: EyePulp: thats kind of the goal..  I'm currently a co-op student at a web development company. And they'd like to use me as a guinea pig on something new..  so this is kind of the route we're going.  We were trying to decide if I should learn Ruby on Rails 3, or Node.. and we figured Node has a lot more going for it
[15:52] joshkehn: paulh_: “A lot more going for it” in what way?
[15:52] dscape: j #cloudmailin
[15:52] dscape: fail
[15:52] paulh_: momentum..  and excitement
[15:52] EyePulp: paulh_: that seems to be a reasonable justification.
[15:53] joshkehn: “Excitement” == buzzword?
[15:53] JakeyChan has joined the channel
[15:53] paulh_: indeed it is
[15:53] adambeynon has joined the channel
[15:53] joshkehn: Then you should probably take a few steps back and evaluate what you spend most of your time doing and if node has a place in your workflow.
[15:53] EyePulp: paulh_: it's okay if it's subjective, at least you realize you're in it to learn something and not to build it as quickly as is possible.
[15:54] bergie has joined the channel
[15:54] joshkehn: If you spent 90% of your time doing flows, forms, and some other general “web” work then you are better off with Rails or PHP then Node.
[15:54] schwab has joined the channel
[15:54] EyePulp: joshkehn:  when they acknowledge that they want to use him "as a guinea pig on something new"  it opens the door to a less "profitable" architecture in terms of time and maturity of product.
[15:55] joshkehn: EyePulp: Sure.
[15:55] Yuffster_work has joined the channel
[15:55] EyePulp: I suggest erlang!
[15:55] EyePulp: =)
[15:55] joshkehn: But if they have a choice between Rails and Node for spending a month or two learning something new, you have to see which will give you the best return on that investment.
[15:55] AvianFlu: I highly suggest letting PHP and Rails die the deaths they deserve
[15:55] adambeynon_ has joined the channel
[15:55] joshkehn: If they aren't doing anything that Node works much better then other existing solutions then why use node?
[15:56] joshkehn: AvianFlu: That is a silly position. 
[15:56] AvianFlu: Throw IE on that pyre too
[15:56] joshkehn: Show me a shared host willing to let your run Node
[15:56] EyePulp: joshkehn: duh, because node has more followers than RoR on github.
[15:56] EyePulp: =)
[15:56] EyePulp: joshkehn: what's a shared host got to do with anything?
[15:56] paulh_: joshkehn: what type of project would be more suited for node?
[15:57] joshkehn: EyePulp: By that metric we should all be using PHP because so many other people use it. :p
[15:57] EyePulp: joshkehn: I said "follow" not use… =P
[15:57] hornairs: hey if you were to test a project on something like travis-ci.org across multiple node versions what versions would you like to see available? stable and unstable or more than that?
[15:57] joshkehn: EyePulp: Even better, more people actually use PHP. ;)
[15:58] jtrudeau has joined the channel
[15:58] qbert_: EyePulp, it does, but we're using amazon's cloud, which doesn't have any peristant storage, it needs to be on another machine and running mongo
[15:58] joshkehn: paulh_: Real time applications, situations were latency is extremely important, developing full fledged applications in a browser.
[15:58] EyePulp: paulh_: node fairs well underneath web services - chat over websockets/long-polling for example, or real-time stuff in general.
[15:58] DrMcKay: don't mention PHP, my eyes hurt.
[15:59] CoinOpeBoy has joined the channel
[15:59] burningdog has left the channel
[15:59] Venom_X has joined the channel
[15:59] qbert_: I don't know why the PHP hate, I like PHP, just wish there class library was not an after thought
[15:59] isaacs has joined the channel
[15:59] paulh_: so a more simple web app that just builds a document based on questions.. isn't really a real time thing..  so it wouldn't benifit this project so much..  but I imagine they want me to learn it on this project, so I could use it for future projects that may need to use the advantages of it's real-time abilities
[15:59] Aikar: paulh_: i am now
[16:00] Aikar: had a meeting
[16:00] paulh_: Aikar: no prob.. others have been answering my questions in your stead ;)
[16:00] Aikar: k lol
[16:00] eee_c has joined the channel
[16:00] paulh_: was just looking for good learning resources
[16:00] joshkehn: paulh_: You're not going to learn much that is applicable to a real time system doing static web flows.
[16:00] springmeyer has joined the channel
[16:01] Aikar: qbert_: mainly because the majority of php developers write bad code... :(
[16:01] DrMcKay: true
[16:01] jtsnow has joined the channel
[16:02] bnoordhuis: like i always say
[16:02] Aikar: though there are of us who do PHP professionally and dont write bad code.. its rare but possible!
[16:02] qbert_: Yeah thats a shame
[16:02] bnoordhuis: you don't have to be a php developer to write bad code... but it sure helps!
[16:02] EyePulp: paulh_: what joshkehn says is true.  For your needs you won't be learning mush that plays to node's strengths in your project as you've described it.
[16:02] DrMcKay: lol
[16:02] EyePulp: *mush
[16:02] EyePulp: dammit
[16:03] EyePulp: *much
[16:03] DrMcKay: but come on, language where I can't do func()[0] ?
[16:03] Cromulent has joined the channel
[16:03] Aikar: i'm a PHP dev for day job, and my groups code is really clean and elegant. now... groups upstairs that work on our main product... not so much. my groups team lead is really strict on coding standards, testing and code coverage, but upstairs they arnt so much
[16:03] joshkehn: Aikar: I have seen some amazing PHP code. Every look at CodeIgniter? Some of the best documented and cleanest code I've seen, including non-PHP projects.
[16:04] mykul|Home has joined the channel
[16:04] anno^da has joined the channel
[16:05] Aikar: joshkehn: not really looked at it deeply. but yeah theres some really nice code bases. Invision Power Board forum system is also really good code (and also the best forum system imo!)
[16:06] alvaro_o has joined the channel
[16:06] Aikar: we run a custom code base here in my group my Team lead developed, he eventually wants to open source it so hes been keeping the SVN (yeah... sadface) tagging consistent to maintain versioning
[16:06] Aikar: its a pretty good system for building a site
[16:07] Aikar: its a great system for developing with CI in mind
[16:07] tjholowaychuk: do we have getpgrp in 0.5.x?
[16:07] Aikar: im trying to push node into our app stack though
[16:07] tjholowaychuk: all i see is process.pid still
[16:07] necrodearia has joined the channel
[16:08] petrjanda has joined the channel
[16:09] Aikar: tjholowaychuk: to get the group of the user who ran it? what does a pgrp consist of
[16:09] nyrb has joined the channel
[16:09] zastaph has joined the channel
[16:11] tjholowaychuk: i need getpgid too, i was hoping maybe the binding() thing exposed it for now
[16:11] tjholowaychuk: not seeing it
[16:11] knifed has joined the channel
[16:12] wolftankk has joined the channel
[16:12] gregmoreno has joined the channel
[16:12] dshaw_ has joined the channel
[16:12] dob_ has joined the channel
[16:12] bergie has joined the channel
[16:13] tjholowaychuk: process.{gid,ppid} etc might be nice im not sure if that gets in the way of windows stuff or not
[16:13] dmkbot has joined the channel
[16:14] gazumps has joined the channel
[16:14] torsd has joined the channel
[16:14] nyrb has joined the channel
[16:15] eldios: hey tj.. have a lot of popularity in these day with the geekli.st stuff? huh? :)
[16:15] eldios: o/
[16:16] tjholowaychuk: what lol
[16:16] codely has joined the channel
[16:16] DrMcKay: btw, what is it about, really?
[16:16] codely: how can i dump my headers on each request? using express ...
[16:16] codely: c/elar
[16:16] DrMcKay: caolanm: ping?
[16:17] tjholowaychuk: codely https://github.com/senchalabs/connect/blob/master/lib/middleware/header.js
[16:17] qbert_: what is geeklist ?
[16:17] Aikar: not sure but i reserved my username? lol
[16:18] eldios: it's a new site
[16:18] eldios: it's like a.. business card (on web) 2.0
[16:18] eldios: and it is made by "one of us" afaik
[16:18] eldios: which shuold be csanz?
[16:18] joshthecoder has joined the channel
[16:19] eldios: still (was him or not) made some really moving cheers over twitter to tj..
[16:19] thalll has joined the channel
[16:19] eldios: and there were a lot of retweets too
[16:19] smathy has joined the channel
[16:19] eldios: so.. bow over the master, you all peasants!
[16:19] eldios: =)
[16:19] kylefox has joined the channel
[16:19] eldios: (URL: http://geekli.st )
[16:19] tjholowaychuk: oh god lol please no
[16:19] kylefox has left the channel
[16:20] guillermo has joined the channel
[16:20] tjholowaychuk: im an average programmer like the rest of us
[16:20] trotter has joined the channel
[16:20] eldios: yes.. which made some really good stuff.. which in turn made possible for other average programmers out there to made "possible" good stuff
[16:20] amerine has joined the channel
[16:20] pen has joined the channel
[16:20] eldios: you know.. in these days it's almost always about "average" programmers who had the right idea in the right moment
[16:20] vidi has joined the channel
[16:20] joshkehn: I'm still stuck waiting for a beta invite for that.
[16:21] DrMcKay: tjholowaychuk: you're not a programmer. you're a robot, just like the rest of npmtop
[16:21] eldios: if you go on the google doc look for my entry and the one right below (which is jesusabdullah 's)
[16:21] nevir has joined the channel
[16:21] bergie has joined the channel
[16:22] megalomix has joined the channel
[16:22] megalomix: hello
[16:22] megalomix: i have installed 'n' to download and update node.js
[16:22] eldios: megalomix, your nickname just reminded me of the SEGA MEGACD jingle.. you're evil.. know that
[16:22] megalomix: how to know all the commands of n?
[16:22] megalomix: :D
[16:22] megalomix: ahhaha
[16:23] tjholowaychuk: megalomix n --help
[16:23] qbert_: n ? url ?
[16:23] megalomix: ok
[16:23] megalomix: tjholowaychuk, n also update itself?
[16:24] arthurdebert has joined the channel
[16:24] qbert_: You guys use my project so it catches on http://www.thecodebase.com/bang/ :P, I'm going to repost that till someone tells me to stop
[16:24] stepheneb has joined the channel
[16:24] Aikar: it shot me, im not using it
[16:25] eldios: nice
[16:25] megalomix: tjholowaychuk, is it possible to know what is the latest "stable" ? now if i do: n --latest i get 0.5.6
[16:25] megalomix: is it stable?
[16:26] joeytwiddle has joined the channel
[16:26] tjholowaychuk: megalomix nope, i need to add $ n stable and $ n latest or something
[16:26] tjholowaychuk: odds are unstable
[16:26] FireFly has joined the channel
[16:26] JaKWaC has joined the channel
[16:27] creationix has joined the channel
[16:27] megalomix: 0.5.6 unstable?
[16:27] tjholowaychuk: yes
[16:27] tjholowaychuk: 0.5.x is unstable
[16:27] tbranyen: really really need a massive banner above and below it
[16:27] tbranyen: UNSTABLE
[16:28] Aikar: qbert_: why the write to install.sh instead of just piping to bash like npm install (which as it says it was copied from :P)
[16:28] tjholowaychuk: tbranyen yeah haha i cant even count how many times i've been asked
[16:28] dmkbot: joyent/libuv: 03piscisaureus: Specify error handling for uv_write and uv_connect - https://github.com/joyent/libuv/issues/185
[16:28] altamic has joined the channel
[16:28] tjholowaychuk: at least ~100
[16:28] CoverSlide has joined the channel
[16:28] qbert_: Aikar, a read call
[16:28] ryah: people should start moving code to v0.5
[16:29] qbert_: Aikar, :( , I would have like to do that for sure 
[16:29] ryah: v0.4 is on respirators now
[16:29] ryah: all new projects should be developed on v0.5
[16:29] Aikar: qbert_: how does saving the code to file vs piping change that?
[16:29] isaacs: ryah: 0.5.6 is a little rough
[16:29] qbit_: :O
[16:29] isaacs: people are seeing assert failures in fs installing npm
[16:29] megalomix: ryah 0.5.6 ?
[16:29] DrMcKay: isaacs++
[16:29] v8bot_:  DrMcKay has given a beer to isaacs. isaacs now has 3 beers.
[16:29] ryah: megalomix: yep
[16:29] DrMcKay: happened to me :/
[16:29] megalomix: ok, i will install it
[16:30] ryah: isaacs: such is bleeding edge software
[16:30] qbert_: Aikar, i'm not totally sure of the details, it doesnt pause for the read though, just stops running
[16:30] isaacs: true that.
[16:31] CoverSlide has joined the channel
[16:31] ryah: for people who are asking about v0.5 the answer should be "yes, it's unstable - but it's quickly going to be stable. use it. report bugs"
[16:31] ryah: "stable" of course just means how much we change the API
[16:31] ckpcw has joined the channel
[16:31] ckpcw has left the channel
[16:31] megalomix: ryan what will be the new stable? 6.0 ?
[16:31] DrMcKay: ACTION can't wait for 0.7
[16:32] megalomix: *0.6
[16:32] ronnieboy has joined the channel
[16:32] ryah: megalomix: yes
[16:32] megalomix: goo
[16:32] megalomix: good
[16:32] megalomix: ok
[16:32] megalomix: thank you
[16:32] mikeal has joined the channel
[16:32] migimunz has left the channel
[16:33] tekky has joined the channel
[16:33] vicapow_ has joined the channel
[16:33] dannycoates has joined the channel
[16:34] eddyb has joined the channel
[16:34] eddyb: TypeError: Object #<error> has no method 'on'
[16:34] kenperkins has joined the channel
[16:34] Aikar: Error != EventEmitter
[16:34] tmcw has joined the channel
[16:35] eddyb: I get that for something like: mcSocket = new mcSocketClassWhatever; mcSocket.on(...);
[16:35] qbert_: tjholowaychuk, I have two domains, a.X and b.X , using express's vhost, do they share a session ? 
[16:35] eddyb: the class inherits EventEmitter
[16:35] qbert_: two subdomains rather
[16:35] eddyb: so why on earth am I getting an error instead of an object?
[16:35] tjholowaychuk: qbert_ no, browsers default the domain to whatever is in the addr bar
[16:35] versicolor has joined the channel
[16:35] tjholowaychuk: qbert_ depending on how you set things up they may share the same session store
[16:36] eignerchris has joined the channel
[16:36] yept has joined the channel
[16:36] dseif has joined the channel
[16:36] mbrevoort has joined the channel
[16:36] qbert_: tjholowaychuk, I'd like them to share the same session - is there something I can do to force them to share it ?
[16:37] qbert_: tjholowaychuk, actually let me play with it first
[16:37] eddyb: if I want to print that object (mcSocket), I get TypeError: Function.prototype.toString is not generic
[16:38] gregpascale has joined the channel
[16:38] eddyb: I'm supposed to construct an object
[16:38] cosmincx has joined the channel
[16:38] eddyb: the ctor gets called
[16:38] joshthecoder has joined the channel
[16:38] bnoordhuis: isaacs: re `npm install` failure: working on it
[16:38] eddyb: but it looks borken afterwards
[16:39] isaacs: bnoordhuis: i know, i saw you comment on that somewhere, i thinkg.
[16:40] isaacs: bnoordhuis: i have faith in you!
[16:40] CIA-54: libuv: 03Ben Noordhuis 07master * rb450d87 10/ (src/unix/eio/eio.c src/unix/fs.c): eio: fix memory leak in eio__scandir() - http://git.io/MH2ItA
[16:40] bnoordhuis: isaacs: ^
[16:40] raidfive has joined the channel
[16:40] eddyb: ok, definitely event-related
[16:41] eddyb: .send exists (my function)
[16:41] eddyb: .on doesn't exist (event function)
[16:41] freeformz has joined the channel
[16:41] dnjaramba has joined the channel
[16:41] eddyb: why isn't socket.prototype = new require('events').EventEmitter; working?
[16:42] DrMcKay: eddyb: use util.inherits
[16:42] eddyb: or I just fail badly?
[16:42] DrMcKay: !doc link util#inherits
[16:42] dmkbot: http://nodejs.org/docs/latest/api/util.html#util.inherits
[16:42] eddyb: DrMcKay: oh, thanks
[16:42] megalomix: tjholowaychuk,  using cluster i get: http://nopaste.info/aa0933af2f.html
[16:43] tzmartin has joined the channel
[16:43] tjholowaychuk: megalomix yeah, a lot of things will break with 0.5.x until I have time to add support
[16:43] CIA-54: node: 03Ben Noordhuis 07master * r7e7e983 10/ (3 files in 3 dirs): uv: upgrade to b450d87 - http://git.io/2Kxq3g
[16:44] megalomix: ok
[16:44] StanlySoManly has joined the channel
[16:44] megalomix: so at the moment i don't use it
[16:45] pizthewiz has joined the channel
[16:45] chrisbuchholz: Glenjamin: yes indeed, the lag of native feeling is a big issue, but on the other hand, a lot of (native in disguise) apps like itunes (until latest version), firefox, chrome etc. has the same issue, because they dont use the "default" toolkit, and therefore doesnt work as native apps either, so creating a qt app that utilises a qtwebkit view, and shows a "webapp" is acceptable if you ask me, because it has a lot of neat things, like ...
[16:45] megalomix: tjholowaychuk, also express has these kind of problems?
[16:45] chrisbuchholz: ... you dont need to upgrade the app (only when the qt-part needs updating, which should be rarely), its easier, quicker to deploy (you just deploy to your own servers, and not to clients computers), and web technologies are more approachable than languages like c++ and objective-c.
[16:46] tjholowaychuk: megalomix who knows, I haven't tested it in 0.5.x
[16:46] DrMcKay: tjholowaychuk: it kinda works :D
[16:47] eddyb has left the channel
[16:47] DrMcKay: tjholowaychuk: or wait, maybe not
[16:47] DrMcKay: no, it's mongoose
[16:48] FireFly|n900 has joined the channel
[16:48] DrMcKay: tjholowaychuk: basic stuff works, I haven't tested everything
[16:48] CoverSlide has joined the channel
[16:48] kylefox has joined the channel
[16:49] megalomix: DrMcKay, do you mean it work with 0.5 ?
[16:50] DrMcKay: megalomix: as far as I tried, yes
[16:50] megalomix: ok
[16:50] metellus has joined the channel
[16:51] megalomix: btw is there a list of the web framework for node.js ?
[16:51] mrchess has joined the channel
[16:51] romainhuet has joined the channel
[16:52] CoverSlide: !wiki
[16:52] megalomix: k
[16:52] CoverSlide: megalomix: https://github.com/joyent/node/wiki/modules#wiki-web-frameworks
[16:52] davidwalsh has joined the channel
[16:53] megalomix: yes, i'm seeing it
[16:53] tjholowaychuk: megalomix reality unfortunately is that if you want to use 0.5.x you may have to wait for some libraries to catch up
[16:54] tjholowaychuk: sounds like quite a few dont work
[16:54] DrMcKay: mongoose seems to fail hard
[16:55] CoverSlide: hardcore failing action!
[16:55] Aikar: i prefer hardcore forking
[16:56] Aikar: with a side dose of hardcore spooning
[16:56] megalomix: tjholowaychuk, if i use 0.4 then when 0.5 will be supported, do i have to change my code OR the module use the same parameters/functions inside?
[16:56] aconbere has joined the channel
[16:56] CoverSlide: spooning leads to forking
[16:56] tjholowaychuk: megalomix the apis remain the same
[16:56] tjholowaychuk: in most cases at least, I cant think of any reason we would need to alter any
[16:57] megalomix: so only the code inside the module will change
[16:57] megalomix: ok
[16:57] socialhack has joined the channel
[16:57] Aikar: megalomix: my suggestion, with nodes fast pace of development, make it a policy of the apps development to keep it up to date with latest stable with a policy to side line unstable updates in a branch and push to the next stable as soon as its released
[16:57] nuck has joined the channel
[16:58] megalomix: tjholowaychuk, last things what is the difference to use express or Connect directly?
[16:58] wadey has joined the channel
[16:58] megalomix: Aikar, ok
[16:58] perezd has joined the channel
[16:59] tjholowaychuk: megalomix i dont know, like i said i havent looked
[16:59] tjholowaychuk: we use 0.4.x in production so it hasn't really been a concern
[16:59] springmeyer has joined the channel
[16:59] Aikar: for example have your "production line" that stays working on latest stable node, and then a branch that you test against unstable, and fix problems as you find them, and regularly merge up changes from production to unstable, and keep unstable "working" as much as possible, and soon as node unstable goes stable (ie .6), ensure your unstable branch works against .6, then merge back down to production, and repeat for .7
[16:59] d_low has joined the channel
[17:00] simenbrekken has joined the channel
[17:00] vidi has joined the channel
[17:00] megalomix: no no i don't mean what is the difference referring to the version of node...i mean...if i use express with 0.4 and connect 0.4 what is the difference? i saw that express use connect...so what is the benefit to use connect directly?
[17:00] wibby has joined the channel
[17:00] Aikar: so when say 0.5.7 changes the way module foo works, make the fix to your code in your unstable branch, and not in production
[17:00] tjholowaychuk: megalomix they are abstraction layers, connect provides less and serves as more of a utility module
[17:01] Aikar: each module has their own versioning #'s
[17:01] Skomski has joined the channel
[17:01] megalomix: tjholowaychuk, ah ok
[17:01] dgathright has joined the channel
[17:01] JaKWaC_ has joined the channel
[17:02] vampi-the-frog has joined the channel
[17:02] vampi-the-frog has joined the channel
[17:02] aguynamedben has joined the channel
[17:03] wibby_ has joined the channel
[17:03] wibby_: Hi, umm, is it possible with node to update what has been written to the console? like in a command line program like 'top'?
[17:04] zpoley has joined the channel
[17:04] ryah: wibby_: set process.title
[17:04] ryah: wibby_: if that's what you mean
[17:04] rmzg: wibby_: You just have to print the correct character codes
[17:04] zpoley has joined the channel
[17:04] rmzg: God knows if there's a library for that
[17:04] wibby_: rmzg: thanks, i'll look into it
[17:04] arthurdebert has joined the channel
[17:04] zpoley has joined the channel
[17:05] aguynamedben has joined the channel
[17:06] arthurdebert has joined the channel
[17:06] zpoley has joined the channel
[17:07] wibby_: ryah: ah, no, sorry, that's not what I meant. 'top' was an example for a program that runs in the command line and updates its output. console.log on the other hand just pushes a new line to the console whenever you call it
[17:07] arthurdebert has joined the channel
[17:07] dguttman has joined the channel
[17:07] rmzg: wibby_: There'
[17:07] rmzg: There'
[17:07] rmzg: Oh my god typing is hard
[17:07] nakkor has joined the channel
[17:08] wadey: wibby_: https://github.com/substack/node-charm
[17:08] rmzg: There's a series of character codes, like \n, that will move the cursor around and allow you to write over sections of the terminal
[17:08] aguynamedben_ has joined the channel
[17:08] superjudge has joined the channel
[17:09] localhost has joined the channel
[17:09] mpavel has left the channel
[17:10] wibby_: alright thanks everybody. that'll help!
[17:10] CoverSlide: wibby_: for a single line, process.stdout.write("\r") to return to the beginning of the line so you can write over it
[17:10] broofa has joined the channel
[17:10] CoverSlide: but you would have to use process.stdout instead of console.log since console inserts newlines
[17:10] dmkbot has joined the channel
[17:10] wibby_: CoverSlide: I thought stdout was deprecated?
[17:11] CoverSlide: it shouldn't be
[17:11] CoverSlide: maybe you're talking about sys.puts or something
[17:11] wibby_: right
[17:12] wibby_: well, thanks again!
[17:12] Tobbe__:  I'm researching various topics before building a node.js express app. I want to make it RESTful. I don't
[17:12] Tobbe__:                 want to use HTTP Authentication, because it's an ugly usability nightmare. What are my other options?
[17:12] Tobbe__: (for user authentication)
[17:12] gkatsev: everyauth
[17:12] rmzg: ... cookies..?
[17:12] CoverSlide: You want it to be completely RESTful?
[17:13] Tobbe__: CoverSlide: I do, if you have an alternative for http auth
[17:13] CoverSlide: maybe custom headers for pass/username auth
[17:13] CoverSlide: or cookies
[17:13] Tobbe__: cookies would work for me
[17:13] CoverSlide: but basicauth over ssl is the standard
[17:13] CoverSlide: https*
[17:13] Tobbe__: I want to have a form based login
[17:14] Tobbe__: And I want it to work in all major browsers
[17:14] wadey: CoverSlide: listen to gkatsev, just use everyauth: https://github.com/bnoguchi/everyauth
[17:15] wadey: and don't waste time doing it yourself :)
[17:15] Tobbe__: wadey: you probably meant to direct that to me ;)
[17:15] wadey: oops
[17:15] wadey: yes I did :)
[17:16] wbednarski has joined the channel
[17:16] Tobbe__: but anyway, isn't everyauth based on sessions?
[17:16] Tobbe__: in a non restful way
[17:16] CoverSlide: well cookies are great for browsers, not so much for curl or other non-browser clients
[17:16] Tobbe__: this will be a strictly browser based app
[17:17] irahgel has left the channel
[17:18] Tobbe__: is there an express middleware that does cookie auth?
[17:18] nakkor has joined the channel
[17:18] adambeynon has joined the channel
[17:18] freeformz has joined the channel
[17:18] kylefox has joined the channel
[17:19] CoverSlide: cookie auth? not so much
[17:19] jetienne_ has joined the channel
[17:20] Tobbe__: like this: http://stackoverflow.com/questions/319530/restful-authentication/1135995#1135995
[17:20] Tobbe__: that's the best solution I've been able to find
[17:20] jmar777 has joined the channel
[17:20] TooTallNate has joined the channel
[17:20] Tobbe__: but that is just the general idea. Are there any node/express modules that would help me implement that?
[17:22] hackband has joined the channel
[17:22] jmoyers has joined the channel
[17:23] JulioBarros has joined the channel
[17:23] Murvin has joined the channel
[17:24] r04r has joined the channel
[17:24] nakkor has joined the channel
[17:24] perezd: morning
[17:24] neilk_ has joined the channel
[17:25] CoverSlide: midnight
[17:25] Murvin: I have a mongoose question.  usually when I do  dataModel.find({}, function(err, docs){...}); the docs is the document.  i.e. I can do this docs[0].propertyA     however, i just had a weird case yesterday.  the doc doesn't have property. instead, the doc._doc  contains all the properties.
[17:26] rendar has joined the channel
[17:26] rendar has joined the channel
[17:26] arthurdebert has joined the channel
[17:26] robotmay has joined the channel
[17:27] rendar has joined the channel
[17:27] Murvin: e.g. i have to do this. docs[0]._doc.propertyA       If I do this:  JSON.parse(JSON.stringify(docs)) explicitly, then everything is fine.   any idea why?
[17:27] wereHamster: Murvin: that's specific to mongoose
[17:27] Murvin: well.
[17:27] wereHamster: ask the mongoose devs
[17:27] Me1000 has joined the channel
[17:27] Murvin: i asked.. waiting for replies..
[17:27] Murvin: i asked stackoverflow.. waiting for reply
[17:27] nakkor1 has joined the channel
[17:27] jetienne_ has joined the channel
[17:30] bsstoner has joined the channel
[17:30] jesusabdullah: isaacs: New goal: Put node.js on a cubesat, launch to orbit
[17:30] kmiyashiro has joined the channel
[17:30] wereHamster: so you are wondering why you can do docs[0]._doc.prop but not docs[0].prop?
[17:30] jesusabdullah: I mean, it's going to the stars right??
[17:30] aguynamedben_ has joined the channel
[17:30] micheil has joined the channel
[17:30] Murvin: yeah.. normally, it returns doc.prop    
[17:31] zcopley has joined the channel
[17:31] Murvin: and even unit testing return me doc.prop.
[17:32] Murvin: but all of the sudden, for that particular server calling the same Model.findOne  or Model.find   properties are not stored at doc  level.  it is one level down.  doc._doc
[17:33] r04r has joined the channel
[17:34] wereHamster: do node_modules work recursively?
[17:34] Murvin: and what doc has .. is functions. 
[17:34] AAA_awright has joined the channel
[17:34] Murvin: i only have one node_modules.  not sure if it works recursively.
[17:34] NetRoY has joined the channel
[17:35] jmoyers: Murvin _doc is the private json for the object
[17:35] Aikar: wereHamster: they scan all the way down to / looking for em. so if you make a /node_modules/, every app on your system will see modules there (global modules)
[17:35] jmoyers: what about doc.get('prop')?
[17:35] brion has joined the channel
[17:36] jmoyers: i was just looking through https://github.com/LearnBoost/mongoose/blob/master/lib/document.js and i don't see a defineGetter() for generic properties
[17:36] Murvin: jmoyers: yes.. i know.. but usually, normally, doc  contains no _doc.   just doc.properties.. but now, I get doc._doc  doc.isNew  doc._prototype   doc._funtionsssss
[17:36] jmoyers: so its hidden somehow, which is magical
[17:36] rchavik has joined the channel
[17:36] jmoyers: well clearly those are private
[17:36] jmoyers: and its a bug
[17:37] jmoyers: but i was trying to track down the source of the bug
[17:37] jmoyers: they must be using dynamic getters via defineGetter, but i cant find where thats mapped onto the document object
[17:37] Murvin: and if I do JSON.parse(JSON.stringify(doc)); then it fix.     seems that doc is not parsed properly in mongoose in some situation.
[17:37] colinclark has joined the channel
[17:37] ph^ has joined the channel
[17:37] Murvin: I was looking at their source this morning.. couldn't find out neither
[17:38] qbert_: alright , taking the plunge, creating a connect mongo session store
[17:38] chapel: qbert_: there are at least 2 already
[17:38] wereHamster: I have one package which has underscore as its dependency. But when I install this package, and try  to load underscore from one of the source files it sais underscore not found
[17:39] r04r has joined the channel
[17:39] qbert_: chapel, oops you're right
[17:39] Murvin: wereHamster: which package? :)
[17:40] wereHamster: Murvin: mine is heru
[17:40] jmoyers: if you depend on underscore
[17:40] Murvin: wereHamster: oh.     let me take alook in git
[17:40] jmoyers: list underscore as your own dependency
[17:40] Murvin: i don't want to use underscore
[17:40] dmkbot has joined the channel
[17:40] jmoyers: that was to wereHamster 
[17:40] mjr_ has joined the channel
[17:40] wereHamster: I have a plain directory, did npm install heru in it. it created node_modules/heru, and undescrore is at ind . -name underscore
[17:41] wereHamster: jmoyers: it's listed as a dependency
[17:41] wereHamster: sorry, underscore is at ./node_modules/heru/node_modules/underscore
[17:41] Murvin: oh
[17:41] Murvin: lol
[17:41] jmoyers: wereHamster thats not listed as YOUR dependency
[17:42] wereHamster: it's in my package.json under 'dependencies'
[17:42] wereHamster: are that not my dependencies?
[17:42] rendar has joined the channel
[17:42] jmoyers: if its in your package.json
[17:42] jmoyers: type npm install .
[17:42] wereHamster: jmoyers: maybe I explained badly. heru uses underscore
[17:42] jmoyers: in your project root
[17:42] springmeyer has joined the channel
[17:42] jmoyers: yes: i understand, i dont think require is going to walk up the deps tree
[17:43] isaacs: jmoyers: you dont' need the . there on `npm install`
[17:43] isaacs: just run without any arg
[17:43] wereHamster: heru also provides a binary. installed at node_modules/.bin/heru
[17:43] jmoyers: isaacs gotcha
[17:43] EvRide has joined the channel
[17:43] `3rdEden has joined the channel
[17:43] wereHamster: if I execute that, it does require('underscore')
[17:43] wereHamster: but it doesn't find underscore
[17:43] jetienne has joined the channel
[17:44] chapel: wereHamster: are you trying to use underscore, but its under node_modules/heru/node_modules?
[17:44] wereHamster: I'm not. heru does
[17:44] wereHamster: I instaled heru
[17:44] chapel: and heru isn't running?
[17:45] jmoyers: his problem makes sense now
[17:45] wereHamster: it is not working. It can't find that dependency
[17:45] jmoyers: not sure about the behavior of .bin/
[17:45] chapel: if its a cli app
[17:45] chapel: you should install it npm install heru -g
[17:45] jmoyers: i thought npm walked down until it found a node_modules, and used that
[17:46] mraleph has joined the channel
[17:46] jmoyers: oh, indeed
[17:46] wereHamster: chapel: so cli packages should always be installed globally?
[17:46] isaacs: jmoyers: it's node that walks down the node_modules paths
[17:46] isaacs: jmoyers: when you do require()
[17:46] jmoyers: yes, yes it is
[17:46] jmoyers: my brain
[17:46] chapel: well otherwise they don't get put into scope
[17:46] jmoyers: coffee has not yet kicked in
[17:46] isaacs: jmoyers: :)
[17:46] robi42 has joined the channel
[17:46] chapel: and you wont be able to call them, without linking manually
[17:46] ph^ has joined the channel
[17:47] wereHamster: I used to use require.paths.unshift, but soince that's been removed I tried to convert my app into a ackage
[17:47] radiodario has joined the channel
[17:47] chapel: heru on github doesn't have a package.json
[17:47] slifty has joined the channel
[17:47] wereHamster: correct
[17:47] nakkor has joined the channel
[17:48] wereHamster: because I'm still tryingo to figure out how to actually make it work :)
[17:48] burningdog has joined the channel
[17:49] burningdog has left the channel
[17:49] karboh has joined the channel
[17:50] luke` has joined the channel
[17:50] amerine has joined the channel
[17:51] robotmay: Probably a question asked every five minutes: how do I fetch GET params in express? (not bound route params, but in the query string)
[17:51] tjholowaychuk: robotmay req.query
[17:51] robotmay: tjholowaychuk: Perfect, thanks :)
[17:51] topaxi has joined the channel
[17:52] creationix: ryah: you around?
[17:52] nakkor1 has joined the channel
[17:52] patcito has joined the channel
[17:53] AvianFlu has joined the channel
[17:53] stonecobra has joined the channel
[17:55] Aikar: has rule #34 been satisfied for node? >_> the discussion came up in another channel...
[17:55] medice: how would you visualize node
[17:55] creationix: rule #34?
[17:56] ryah: Aikar: this is a family channel
[17:56] DrMcKay: gosh, I think I just took a quick nap on my keyboard
[17:56] TheJH: DrMcKay, :D
[17:56] Aikar: sorry :P
[17:56] creationix: maybe I don't want to know
[17:56] aaronj1335 has joined the channel
[17:56] blkcat: creationix: you don't :)
[17:56] DrMcKay: creationix: you don't
[17:57] Guest93740 has left the channel
[17:57] creationix: ryah, is anyone using libuv other than node itself?
[17:57] mikl has joined the channel
[17:57] Aikar: ok this picture is kinda funny lol... http://i.imgur.com/awh1a.jpg
[17:58] Murvin: quick question.   to put robots.txt for my node.js server, i just need to make the express.static on that folder, right?  
[17:58] TheJH: Aikar, :D
[17:58] DrMcKay: Aikar: lol
[17:58] ryah: creationix: rust is
[17:58] creationix: Murvin: that's probably the easiest way
[17:58] creationix: ryah: rust?  the mozilla language?
[17:58] ryah: creationix: yeah
[17:58] creationix: nice
[17:59] creationix: I didn't know it was going to be event-loop based
[17:59] Murvin: creationix: ok. :
[17:59] Murvin: :)
[17:59] mattg_ has joined the channel
[17:59] aaronj1335: if i make a pull request that augments repl to load ~/.node_history, does anyone know if it's got a chance of being accepted?
[17:59] jerrysv: aikar: http://legitimatesounding.com/javascript.jpg
[17:59] DrMcKay: aaronj1335: that would be a +1 for me
[18:00] creationix: ryah: I'm playing with libuv too.  It's pretty nice except for the lack of example code
[18:00] Murvin: just found out the moment I put my node.js server on EC2,  tones of web crawler start pinging my empty site right away.
[18:00] creationix: at least there is node 
[18:00] DrMcKay: creationix: I'm planning to write Python bindings for it, if it counts
[18:01] flagg0204 has joined the channel
[18:01] creationix: DrMcKay: won't it suffer the same fate as twisted?  The community is to engrained in blocking I/O
[18:01] ryah: creationix: the tests have example code
[18:01] creationix: ryah: ahh! why didn't I think to look there?
[18:01] ryah: creationix: "make test" to run them
[18:01] hackband has joined the channel
[18:01] jetienne has joined the channel
[18:02] cjroebuck has joined the channel
[18:02] creationix: ryah: same goes for http_parser I assume (except it's part of the normal make there)
[18:02] icebox has joined the channel
[18:02] ryah: creationix: yes
[18:02] icebox has left the channel
[18:02] icebox has joined the channel
[18:02] DrMcKay: creationix: yeah, it will probably be a pain in the ass to have people actually using it.
[18:02] navaru has joined the channel
[18:02] navaru has left the channel
[18:02] creationix: cool, I'll go back to my crazy experiment building lua bindings for libuv
[18:02] Vertice has joined the channel
[18:03] creationix: I don't know lua at all and not very much C
[18:03] creationix: so it's an adventure
[18:03] ryah: creationix: sounds like fun
[18:03] DrMcKay: creationix: the same happened with tornado and some libev-based server. it basically isn't usable because of lack of libs
[18:03] DrMcKay: creationix++
[18:03] v8bot_:  DrMcKay has given a beer to creationix. creationix now has 1 beers.
[18:03] creationix: ryah: it is.  It's been years since I did something this different and challenging
[18:03] DrMcKay: I learn new languages in the same way
[18:03] creationix: I figure the best way to learn node's internals is to build something like it
[18:04] creationix: and lua seems like the easiest of the vms that's not v8
[18:04] tjholowaychuk: creationix with the direction js is going we might need it :)
[18:04] creationix: tjholowaychuk: lol, no kidding
[18:04] vipaca has joined the channel
[18:04] vipaca has joined the channel
[18:04] creationix: luajit seems fast enough, and if the language ever takes off it's quite easy to optimize further with enough engineering talent
[18:04] tylerstalder has joined the channel
[18:05] DrMcKay: btw, isn't google doing some crazy things to JS?
[18:05] mbrevoort has joined the channel
[18:05] bnoordhuis: creationix: luajit beats v8 on most benchmarks so yes, it's fast enough :/
[18:05] creationix: DrMcKay: you mean dash/dart
[18:05] creationix: bnoordhuis: well, you know what they say about benchmarks
[18:05] tjholowaychuk: i wonder why google/moz/etc haven't pushed to get lua in browsers (unless they have?)
[18:05] bnoordhuis: i was actually planning to take up lua bindings
[18:06] DrMcKay: creationix: this. I haven't seen the spec yet, though
[18:06] bnoordhuis: but i suppose i should just continue with phode
[18:06] nakkor has joined the channel
[18:06] creationix: bnoordhuis: but I can safely say it's fast enough
[18:06] creationix: phode, nice
[18:06] CoverSlide: who wants to work on brainfuck bindings?
[18:06] dmkbot has joined the channel
[18:06] DrMcKay: btw, it would be pretty kickass to have <script type="text/lua">
[18:06] qbert_: tjholowaychuk, have you ever _used_ lua :P ?
[18:06] creationix: mine is luanode for now, but I should probably make a cooler name before/if I get any followers
[18:06] tjholowaychuk: qbert_ yes
[18:06] DrMcKay: CoverSlide: I'm doing plain machine code bindings now
[18:06] qbert_: tjholowaychuk, then you have the answer
[18:07] CoverSlide: how about luv?
[18:07] tjholowaychuk: qbert_ it's nicer than js
[18:07] CoverSlide: luvula?
[18:07] bnoordhuis: luv was the name i thought up for that, actually :)
[18:07] creationix: luv huh?
[18:07] tbranyen: tjholowaychuk: javascript has sparse arrays
[18:07] tbranyen: lua doesn't
[18:07] hermanjunge has joined the channel
[18:07] creationix: nice and short
[18:07] tbranyen: lua has a lot of bs just like JS
[18:07] CoverSlide: fuck sparse arrays
[18:07] hermanjunge: I don't know how to ask this to google:
[18:07] tbranyen: fuck terminating an array because you insert a Nil value
[18:07] creationix: tbranyen: I never need sparse arrays
[18:07] mikeal has joined the channel
[18:08] hermanjunge: how do you transform an Url ex: http://www.google.com to UTF-8?
[18:08] mikeal has joined the channel
[18:08] pt_tr has joined the channel
[18:08] hermanjunge: i.e: with the percent symbols and such
[18:08] JumpMast3r has joined the channel
[18:08] creationix: hermanjunge: escape?
[18:08] tbranyen: creationix: i think they are used more often than people think.  especially since null/undefined don't terminate the array
[18:08] hermanjunge: escape!
[18:08] tjholowaychuk: tbranyen less bs haha, soon we'll have far more bs in js
[18:08] hermanjunge: what is the scientific name of that transformation?
[18:08] kuebk^ has joined the channel
[18:08] creationix: tbranyen: so nil isn't allowed as a value?
[18:09] creationix: that's not the same as sparse
[18:09] tbranyen: creationix: it is
[18:09] creationix: javascript sparse arrays don't even have the keys set
[18:09] TheJH: hermanjunge, that percent stuff? I'd say "urlencode"
[18:09] thalll has joined the channel
[18:09] tbranyen: sparse arrays as i understand it, is to have undefined values interspersed with normal values that don't affect the methods or length
[18:10] creationix: a set key with a value of null or undefined is very different
[18:10] mattg_ has joined the channel
[18:10] kuebk^: is there a node-waf
[18:10] kuebk^: for windows?
[18:10] kuebk^: so i can build my plugins on windows
[18:10] hermanjunge: querystring.escape('http://google.com');
[18:10] aguynamedben_ has joined the channel
[18:10] creationix: TheJH: no, `escape(value)` it's build into JavaScript
[18:10] creationix: so node has it
[18:10] creationix: it url encodes stuff
[18:10] tbranyen: tjholowaychuk: yeah :-/ unfortunately
[18:10] hermanjunge: great
[18:10] TheJH: creationix, I know. "<hermanjunge> what is the scientific name of that transformation?"
[18:10] creationix: ok, sorry
[18:11] tbranyen: tjholowaychuk: the lua pattern matching is "nice" but also not very powerful compared to JS
[18:11] creationix: pattern matching? that sounds interesting
[18:11] hermanjunge: scientific, because i don't want to ask anymore for 'that percent stuff'
[18:11] creationix: like ocaml or haskell style?
[18:11] hermanjunge: querystring.escape('http://www.google.com');
[18:11] hermanjunge: returns: 'http%3A%2F%2Fwww.google.com'
[18:12] CoverSlide: if you want to urlencode the url
[18:12] hermanjunge: great one. Once more, #node.js spare me of a couple hours of running around google
[18:12] creationix: what's querystring.escape? does it just pass through to the native escape?
[18:12] CoverSlide: you want to utf-8-ify it though ...? is there a difference?
[18:13] CoverSlide: doesn't v8 already use utf-8 strings?
[18:13] hermanjunge: @creationix: do var q = require('querystring'); var a = querystring('http://www.ex.com');
[18:13] creationix: v8: escape("☃")
[18:13] v8bot_: creationix: "%u2603"
[18:14] creationix: snowman escaped
[18:14] CoverSlide: this font doesn't like your snowman
[18:14] nevir has joined the channel
[18:14] creationix: all strings in javascript are unicode (UCS16 or something, but practically utf8)
[18:14] hermanjunge: escape('');
[18:14] hermanjunge: lol
[18:15] nevir has left the channel
[18:15] hermanjunge: thank you creationix
[18:15] hermanjunge: creationix++
[18:15] v8bot_:  hermanjunge has given a beer to creationix. creationix now has 2 beers.
[18:15] mwilliams_ has joined the channel
[18:15] mwilliams_ has left the channel
[18:15] creationix: someone needs to modify v8bot to give me juices or something other than beers
[18:16] creationix: maybe milks, that would be fun
[18:16] DrMcKay: creationix: why? beer ftw
[18:16] Draggor: Lactose intolerance :(
[18:16] Draggor: Beer eww, scotch ftw :D
[18:16] slickplaid: I think it's required by law to only dispense beer or hard liquior.
[18:16] chapel: v8: escape('');
[18:16] v8bot_: chapel: "%uF8FF"
[18:17] creationix: yeah, I'm not typical, I don't do alcohol or caffeine, I just stay up all night and write crazy code instead
[18:17] navaru has joined the channel
[18:17] chapel: Node, not your fathers drug
[18:17] creationix: exactly 
[18:17] jetienne has joined the channel
[18:18] creationix: one addiction at a time is plenty
[18:18] DrMcKay: creationix: that makes me 100% sure that you're a robot
[18:18] halfhalo: silly robots
[18:18] vicapow has joined the channel
[18:18] tbranyen: creationix: the pattern matching is lua specific
[18:18] tbranyen: afaik
[18:18] deedubs has joined the channel
[18:18] DrMcKay: but after all, I could write some beer module preferences for my bot
[18:18] DrMcKay: *with preferences
[18:18] TheJH: !admin eval irc.on('privmsg', function(args) {if (args.params[1]==='creationix++' && args.params[0].toLowerCase()==='#node.js')irc.privmsg('#node.js', 'creationix now has one more glass of milk')})
[18:18] jhbot: [object Object]
[18:18] TheJH: creationix++
[18:18] jhbot: creationix now has one more glass of milk
[18:18] v8bot_:  TheJH has given a beer to creationix. creationix now has 1 beers.
[18:18] tbranyen: http://pastie.org/2522288 << wrote that ages ago, could probably be improved now
[18:19] jetienne has joined the channel
[18:20] TheJH: DrMcKay, what will you use for preference and count storing?
[18:20] dgathright has joined the channel
[18:20] tbranyen: tjholowaychuk: http://lua-users.org/wiki/SplitJoin stuff like this is weird
[18:21] tbranyen: like all the helper methods javascript gives you
[18:21] tbranyen: for strings, are missing in lua
[18:21] mikl has joined the channel
[18:21] tjholowaychuk: even what js has
[18:21] tjholowaychuk: is pretty shitty
[18:21] Xano has joined the channel
[18:21] tjholowaychuk: i would rather have a small language that gives you little, or one that gives you a lot as far as those things go
[18:21] tbranyen: :| javascript interpreters are also massive compared to lua
[18:21] tjholowaychuk: js just gives you a few
[18:21] tjholowaychuk: and they suck
[18:21] tbranyen: look how long it takes to compile v8
[18:21] tbranyen: compared to lua-llvm
[18:21] tbranyen: or lua-jit
[18:22] DrMcKay: TheJH: leveldb, I've always wanted to try it
[18:23] TheJH: ACTION googles
[18:23] kuebk^ has joined the channel
[18:23] mrkishi has joined the channel
[18:24] DrMcKay: ah, and guess who wrote node.js bindings :D
[18:24] creationix: lol
[18:24] creationix: it's mature enough for that kind of stuff
[18:25] creationix: DrMcKay: I think it still uses blocking I/O for some things, but for a bot's preferences, it should be fine
[18:25] DrMcKay: creationix: well, it's not like bot has to handle 10 krequests per second :)
[18:26] creationix: right
[18:26] mikl has joined the channel
[18:26] creationix: also I'm not the only maintainer on that one, so I'm don't remember how far the async bindings got
[18:26] creationix: heck, even if I was the author, I probably wouldn't remember
[18:26] freeformz has joined the channel
[18:26] creationix: I'm constantly starting new projects and it's hard to remember everything
[18:26] hackband has joined the channel
[18:27] chapel: creationix: I remember you starting it
[18:27] DrMcKay: creationix: you need a new memory module, I believe
[18:27] lucianobonachela has joined the channel
[18:27] chapel: I think I might have helped you, pointed to some example code
[18:27] kuebk^: is there any way now
[18:27] mavus has joined the channel
[18:27] kuebk^: to build plugins on windows
[18:27] kuebk^: ?
[18:27] creationix: kuebk^: if you find out, let me know
[18:28] kuebk^: ~~
[18:28] creationix: kuebk^: does node-waf not work?
[18:28] DrMcKay: creationix: looking at commit messages, async features look pretty complete
[18:28] creationix: DrMcKay: nobody will ever need more than 64K of main memory
[18:28] kuebk^: dunno
[18:28] creationix: DrMcKay: sweet
[18:28] kuebk^: building from source now
[18:29] kuebk^: dunno is it going to just build an exe or everythin
[18:29] creationix: kuebk^: what node version and what compiler?
[18:29] kuebk^: master branch
[18:29] kuebk^: using visual studio
[18:29] creationix: cool, I've never tried that combo, let me know how it goes
[18:29] kuebk^: so far it's building
[18:29] kuebk^: ;p
[18:30] creationix: I imagine building the node.exe is well supported, just not sure about the rest
[18:30] kuebk^: yea
[18:30] kuebk^: that's about what i'm not sure too
[18:30] creationix: last time I tried node on windows was v0.4.x using cygwin
[18:31] Draggor: node on cygwin.. is okay
[18:31] kuebk^: and no
[18:31] kuebk^: there is no node-waf in pure windows
[18:31] kuebk^: in pure windows environemt
[18:31] creationix: that's a shame
[18:31] kuebk^: :yea
[18:31] kuebk^: :<
[18:31] metellus has joined the channel
[18:31] creationix: well, I think the goal moving forward is to eventually abandon node-waf and use gyp for everything
[18:32] creationix: not sure about the timeline though
[18:32] kuebk^: that would be more cross platform for sure
[18:32] jonaslund: can gyp generate *nix makefiles ?
[18:32] bnoordhuis: jonaslund: yes
[18:33] jonaslund: ah neat
[18:33] kuebk^: bnoordhuis maybe you know
[18:33] admc has joined the channel
[18:33] bnoordhuis: kuebk^: that would be a first
[18:33] kuebk^: is there anything to compile plugins on windows?
[18:33] bnoordhuis: not right now
[18:33] tjgillies: 
[18:33] bnoordhuis: not out of the box anyway
[18:33] kuebk^: ok
[18:33] jacobolus has joined the channel
[18:33] creationix: you can still build them by hand right?
[18:33] creationix: if you know the right settings
[18:33] bnoordhuis: we don't have a mechanism in place to load dlls
[18:33] Fabryz has joined the channel
[18:34] bnoordhuis: but you can link in stuff statically if you really need it
[18:34] creationix: ahh, so no dlopen equivalent 
[18:34] tjgillies: 
[18:34] bnoordhuis: creationix: indeed
[18:34] jonaslund: writing dll loading should be "relatively" trivial
[18:34] bnoordhuis: jonaslund: you'd be surprised
[18:34] creationix: tjgillies: what language is that?  I just get a bunch of 6-byte character boxes
[18:34] jonaslund: bnoordhuis: oh ?
[18:34] DrMcKay: IIRC, Windows has something like LoadLibrary
[18:34] CIA-54: libuv: 03Bert Belder 07master * rf790b68 10/ (5 files in 3 dirs): Remove uv_init from uv.h and windows backend - http://git.io/ou4eMQ
[18:34] Cromulent has joined the channel
[18:34] CIA-54: libuv: 03Ryan Dahl 07master * r828b6eb 10/ src/unix/core.c : unix: remove uv_init - http://git.io/1Ku4Tw
[18:35] CIA-54: libuv: 03Bert Belder 07master * rbb15c0e 10/ src/win/timer.c : win: make uv_hrtime() thread-safe - http://git.io/I2E1vA
[18:35] tjgillies: creationix <- do you have a mac?
[18:35] CIA-54: libuv: 03Bert Belder 07master * r0dc564a 10/ (33 files): Remove uv_init calls from tests and benchmarks - http://git.io/PzeJQg
[18:35] DrMcKay: but I've stopped using it loooong time ago
[18:35] joshkehn has left the channel
[18:35] mattg_ has joined the channel
[18:35] bnoordhuis: jonaslund: shared objects are loaded at fixed addresses
[18:35] creationix: tjgillies: I don't, but I know people who do
[18:35] jonaslund: LoadLibrary / GetProcAddress
[18:35] kuebk^: yea
[18:35] tjgillies: creationix <- i think those bytes only work on mac
[18:35] jonaslund: bnoordhuis: err. what ?
[18:35] creationix: tjgillies: but Ubuntu usually has good font support
[18:35] DrMcKay: jonaslund: exactly
[18:35] bnoordhuis: it causes all kinds of trouble when both dll A and dll B load library X but at different addresses
[18:35] bnoordhuis: you get all kinds of conflicts
[18:36] bnoordhuis: world of pain
[18:36] jonaslund: eh, for one process isn't all dll's loaded once ?
[18:37] jonaslund: as for locations every PE file should have a relocation table by default
[18:37] jonaslund: and the OS decides where things goes
[18:37] jtrudeau has joined the channel
[18:37] AvianFlu has joined the channel
[18:37] Margle has joined the channel
[18:38] jonaslund: w/o that ASR wouldn't work
[18:38] bnoordhuis: jonaslund: you should ask bert belder, he's our windows expert, but i think the problem is transitive dependencies
[18:38] creationix: who would have thought, "LUV" is the stock ticker for Southwest Airlines Co.
[18:38] bnoordhuis: as in: node loads dll A, which loads dll X
[18:39] jonaslund: bnoordhuis: fixed SO locations is more of a linux thing i think
[18:39] vidi has joined the channel
[18:39] bnoordhuis: jonaslund: no, unices resolve the addresses at load time
[18:39] jonaslund: bnoordhuis: i'm pretty certain windows has always used dynamic addresses
[18:39] jonaslund: bnoordhuis: cygwin however is another beast
[18:39] zeade has joined the channel
[18:40] jonaslund: they apperantly do some fixed location thing
[18:40] jonaslund: and it's causing a world of pain when using cygwin under win7
[18:40] navaru has left the channel
[18:40] kuebk^: what you mean jonaslund?
[18:40] jonaslund: bnoordhuis: I think cygwin uses fixed addresses to emulate fork under windows
[18:41] jonaslund: kuebk^: about what ?
[18:41] kuebk^: [20:40:10] [jonaslund]: and it's causing a world of pain when using cygwin under win7
[18:41] hermanjunge has joined the channel
[18:41] sylvinus has joined the channel
[18:41] gr-eg has joined the channel
[18:43] DrMcKay: what's the convention for local variables naming?
[18:43] DrMcKay: localVar or local_var?
[18:43] creationix: DrMcKay: in Javascript? the first
[18:43] creationix: and LocalVar if it's a constructor
[18:44] kuebk^: camecalse ftw
[18:44] DrMcKay: creationix: OK, thanks
[18:44] creationix: and I do Capitals if it's a module, but that's hardly a widespread convention
[18:45] creationix: FS = require('fs') or Path = require('path'), ...
[18:45] topaxi has joined the channel
[18:45] jonaslund: kuebk^: http://hagen.let.rug.nl/~s1404318/OC/cygwin/usr/share/doc/Cygwin/rebase-3.0.README
[18:45] DrMcKay: creationix: I haven't seen it anywhere yet
[18:45] jonaslund: bnoordhuis: see the link i just posted
[18:45] sylvinus has joined the channel
[18:45] DrMcKay: creationix: but looks like a nice convention
[18:45] jonaslund: bnoordhuis: short story, dll loading in windows proper shouldn't be a problem
[18:45] creationix: DrMcKay: yeah, ryah usually does lower case in his demos so that's how most do it
[18:46] bnoordhuis: jonaslund: i'm only proxying here
[18:46] creationix: but I get name conflicts too easily that way, especially with modules like "path"
[18:46] freeformz has joined the channel
[18:46] bnoordhuis: jonaslund: like i said, bert belder is our resident windows expert
[18:46] jonaslund: bnoordhuis: yeah i know bert
[18:46] mraleph: oh et tu bnoordhuis… don't spread luajit2 vs. v8 misconceptions. each VM has it's own strength and weaknesses but crosslanguage comparisons are just meaningless 
[18:46] AvianFlu has joined the channel
[18:47] creationix: mraleph: don't worry, I read your blog post
[18:47] bnoordhuis: mraleph: alioth.debian.org is the Measure of All Things
[18:47] mraleph: ACTION screams in agony
[18:48] mraleph: ACTION jumps out of the window
[18:48] DrMcKay: lol
[18:48] jonaslund: mraleph: what's the latest in v8 land ?
[18:48] Me1000 has joined the channel
[18:49] mraleph: jonaslund: hard to say :-)
[18:49] jonaslund: mraleph: anyone working on any static "compilation" ?
[18:49] vicapow has joined the channel
[18:49] DrMcKay: uh, oh. I can't move files between two devices? (EXDEV, Invalid cross-device link)?
[18:49] jonaslund: mraleph: (like we discussed ages ago)
[18:49] aconbere has joined the channel
[18:49] DrMcKay: or is it something else?
[18:50] bnoordhuis: DrMcKay: you can't, not an atomic operation
[18:50] nakkor has joined the channel
[18:50] DrMcKay: gah, thanks bnoordhuis 
[18:50] felixhummel has joined the channel
[18:50] DrMcKay: so, fileRead + fileWrite
[18:50] TheEmpath has joined the channel
[18:51] creationix: mraleph: is the typed-array implementation for chrome open source
[18:51] jonaslund: bnoordhuis: as for me explaining the background on that address thing.. i just prefer if misconceptions aren't carried on
[18:52] creationix: mraleph: I'm using the one Dean wrote that's in node trunk, but I had issues with it
[18:52] __sorin__ has joined the channel
[18:52] DrMcKay: bnoordhuis: can I somehow check if it's possible for two given files?
[18:52] jbpros has joined the channel
[18:52] bnoordhuis: DrMcKay: fstat the files and check if the st_dev values are identical
[18:52] amerine has joined the channel
[18:52] DrMcKay: bnoordhuis: thanks
[18:53] mikeal has joined the channel
[18:53] mraleph: creationix: yes of course
[18:53] creationix: mraleph: I guess it's in chromium huh
[18:53] creationix: I keep forgetting that most of chrome is in chromium
[18:53] mraleph: creationix: I would suspect it's in webkit
[18:53] bnoordhuis: jonaslund: actually... once, long ago and in a land far away, i was a windows developer
[18:53] vguerra has joined the channel
[18:53] creationix: mraleph: why not v8 itself, just outside of scope?
[18:54] bnoordhuis: jonaslund: and i had to go to great pains to load plugins in my little open source app
[18:54] kuebk^: about the cygwin
[18:54] kuebk^: i wrote a plugin
[18:54] kuebk^: who uses ati drivers
[18:54] bnoordhuis: jonaslund: this was however when windows ME (greatest windows ever!) was still supported by MSFT
[18:54] kuebk^: to control gpu
[18:55] kuebk^: you think it will work under cygwin?
[18:55] mikola has joined the channel
[18:55] mikola: Hi
[18:55] rmzg: Is there any way to call a function from a module you require without using export?
[18:55] mikola: Doe anyone know if there is a way to set a timer on scripts executed using vm?
[18:55] jonaslund: bnoordhuis: one thing that prolly will bite people when using node on windows might be that different compilers probably interpret vtables differently
[18:56] DrMcKay: mikola: run it in another process and kill it on timeout?
[18:56] mikola: so that they can be killed if they run too long, or use too many resources
[18:56] mikola: DrMcKay: Hmm..  I was afraid of that
[18:56] DrMcKay: mikola: it's actually quite easy, want to see an implementation?
[18:56] mikola: sure
[18:56] DrMcKay: mikola: and *don't* use it for security things!
[18:56] DrMcKay: never, ever!
[18:56] mikola: right!
[18:56] TheJH: right! :D
[18:57] creationix: rmzg: you mean clobbering globals?
[18:57] mikola: I was thinking about using it for gamescripting
[18:57] DrMcKay: mikola: https://github.com/mmalecki/dmkbot/blob/master/lib/modules/eval.js
[18:57] mikola: where the scripts would be in a sandboxed scope
[18:57] DrMcKay: mikola: it's a part of my IRC bot, it may seem complicated
[18:57] creationix: requires modules act just like the file was loaded into a function block
[18:57] slifty has joined the channel
[18:57] TheJH: mikola, do you want to put users scripts or your scripts in there?
[18:57] blkcat: could anyone recommend a good image manipulation library for node?
[18:57] creationix: rmzg: so they can still access globals and their exports can access their own closures
[18:58] rmzg: Hrm
[18:58] DrMcKay: blkcat: there are ImageMagick bindings for node
[18:58] mikola: well, I was considering optimistically that if I could deal with user scripts, it would be awesome.  but if it is infeasible, then it would just be my own scripts
[18:58] Tobbe__: npm is failing to install express :( http://paste2.org/p/1646338 Any idea what might be wrong?
[18:58] TheJH: mikola, trusted users?
[18:58] mikola: or scripts written by trusted users/contributors
[18:58] rmzg: DrMcKay: When I was doing that I just used setrlimit on the process I created that executed the code
[18:58] rmzg: oh
[18:58] tjholowaychuk: Tobbe__ woah
[18:58] rmzg: You weren't asking about it, heh
[18:58] tjholowaychuk: looks like npm bug to me
[18:58] DrMcKay: rmzg: yeah, I was considering it as well
[18:58] mikola: if it were possible to make it safe even for untrusted users, that would be optimal
[18:58] tjholowaychuk: doubt it has anything to do with express, or maybe something express is using in package.json
[18:58] tjholowaychuk: im not sure
[18:59] mikola: but if not, I can settle with trusted users only
[18:59] DrMcKay: mikola: it's possible, until TheJH isn't your user
[18:59] blkcat: hum
[18:59] rmzg: mikola: It's not too hard if you have access to rlimits
[18:59] rmzg: Or bsd jails
[18:59] TheJH: mikola, what stuff does the users javascript need to have access to?
[19:00] mikola: just sandboxed variables
[19:00] creationix: heh, libuv moves fast.  I update it since two days ago and I'm getting errors like "undefined reference to `uv_init'"
[19:00] TheJH: mikola, I'd spawn a v8 process (has no dangerous bindings)
[19:00] rmzg: mikola: I had a bot that evaluated perl/python/php/etc many years ago
[19:00] mikola: like stuff for creating game entities, stuff like that
[19:00] mikola: ok, I will take a look at it
[19:00] DrMcKay: mikola: then what TheJH says, bare V8 might be better
[19:00] mikola: ah, good idea
[19:00] mikola: I definitely *don't* want the user scripts accessing node code
[19:01] mikola: like filesystem/networking/etc.
[19:01] DrMcKay: mikola: just run away really fast when you see TheJH approaching your code
[19:01] TheJH: mikola, there are relatively easy ways to escape from normal nodejs vm module sandboxing
[19:01] mikola: ok, that is good to know
[19:01] DrMcKay: mikola: I've had an epic fail with it (context mangling stuff)
[19:01] TheJH: it's just not designed for security
[19:02] mikola: ah, I am glad that I asked then.  I guess just making a vanilla v8 process is the right way to go then
[19:02] chrisdickinson: mikola: could always run node-burrito on it and have it count the operations and throw an error when a maximum number of operations are hit
[19:02] Tobbe__: tjholowaychuk: I just tried 'curl http://expressjs.com/install.sh | sh
[19:02] Tobbe__: '
[19:02] TheJH: mikola, I managed to break into DrMcKays bot because of that stuff some while ago :D
[19:02] chrisdickinson: ACTION may be overengineering.
[19:02] Tobbe__: tjholowaychuk: sh: Syntax error: newline unexpected
[19:02] tjholowaychuk: Tobbe__ that was really really old, it doesnt even exist anymore
[19:03] TheJH: chrisdickinson, what about infinite loops?
[19:03] Tobbe__: tjholowaychuk: ahh :)
[19:03] tjholowaychuk: Tobbe__ you're on windows?
[19:03] tjholowaychuk: i think npm is just broken
[19:03] chrisdickinson: TheJH: wouldn't matter. wrap every expression in an Op counter
[19:03] Tobbe__: tjholowaychuk: I'm on colinux
[19:03] tjholowaychuk: ah
[19:03] chrisdickinson: TheJH: so "while(1) { }" -> "while(__op__(1)) { }"
[19:03] DrMcKay: colinux is neat, btw
[19:04] Tobbe__: tjholowaychuk: is npm the only supported way of installing express these days?
[19:04] nakkor has joined the channel
[19:04] Tobbe__: DrMcKay: I couldn't live without it :)
[19:04] tjholowaychuk: Tobbe_ node is pretty coupled with npm these days
[19:04] tjholowaychuk: and the mods
[19:04] tjholowaychuk: im not personally a huge fan of that
[19:04] tjholowaychuk: but oh well
[19:05] necromancer: tjholowaychuk: what, npm?
[19:05] Tobbe__: I was reading this: http://howtonode.org/getting-started-with-express   Is there a better/more up to date resource?
[19:05] tjholowaychuk: no i like npm when it works
[19:05] necromancer: oh yeah...
[19:05] necromancer: it's a little strange sometimes
[19:05] necromancer: sucks because it's probably the best package manager of any of the server-side scripting languages
[19:05] rmzg: Tobbe__: The express homepage?
[19:05] necromancer: imo it beats out RubyGems in idea, but not implementation
[19:05] necromancer: but of course gems are much older
[19:06] tjholowaychuk: necromancer yeah, when it started it was basically just gem though
[19:06] rmzg: http://expressjs.com/guide.html
[19:06] creationix: Tobbe__: there is a reason I tag the howtonode articles with date and node version
[19:06] rmzg: necromancer: (Someday you'll learn about cpan ^_^)
[19:06] creationix: they get out of date pretty easily
[19:06] sylvinus has joined the channel
[19:06] mike5w3c has joined the channel
[19:06] necromancer: tjholowaychuk: do you think it was better when it was just that?
[19:06] creationix: heh, that articles is one year yesterday
[19:06] tjholowaychuk: necromancer nah i wanted localized installs from the get go
[19:07] ngl has left the channel
[19:07] necromancer: rmzg: omg i totally forgot about CPAN...i don't really use perl that much so i haven't had the time to check it out, but it certainly makes installing shit a little easier
[19:07] tjholowaychuk: global sucks ass for deployments
[19:07] tjholowaychuk: and just isnt great in general
[19:07] mikeal: global package installs were a mistake
[19:07] necromancer: tjholowaychuk: not as good for deployments, but better for development
[19:07] mikeal: we've fixed it, mostly :)
[19:07] tjholowaychuk: necromancer not really
[19:07] necromancer: a little easier to "get going"
[19:07] Tobbe__: creationix: yeah, that's a problem with node - a lot of docs are outdated
[19:08] tjholowaychuk: necromancer people are used to global installs so it's confusing at times
[19:08] tjholowaychuk: but it's a lot better this way
[19:08] TheJH: chrisdickinson, of course, you'd have to ban eval, setTimeout and setInterval
[19:08] mikeal: for development you should either use submodules in the node_modules directory OR use npm link ../package
[19:08] tjholowaychuk: ex executables is somewhat confusing for people now
[19:08] necromancer: by "global install" you are talking about being able to download & install a remote file as a dependency
[19:08] necromancer: right?
[19:08] synkro has joined the channel
[19:08] beriberikix has joined the channel
[19:08] mikeal: necromancer: no
[19:08] chrisdickinson: TheJH: just eval. or, even then, replace eval with an eval that decorates with __op__
[19:08] necromancer: (with a single command)
[19:08] creationix: Tobbe__: I mean, it's only a year old.  I have a ruby book that's several years old and it's quite up to date
[19:08] mikeal: global as in "this module is installed for anyone running node on this machine"
[19:08] creationix: Tobbe__: node just moves fast
[19:08] mikeal: it's the devil
[19:09] necromancer: creationix: yeah but a rails book from THIS year is already outdated. :)
[19:09] mikeal: you want "install this module for this package to use"
[19:09] tbranyen: node moves ridic fast
[19:09] necromancer: language != framework
[19:09] mikeal: a node.js book from a month ago is outdated :)
[19:09] TheJH: chrisdickinson, no, not just eval - I think this will work, too: setTimeout("while(1);", 0)
[19:09] necromancer: mikeal: oh yeah definitely, shit as soon as rvm+gemsets came out things got a LOT easier in the ruby world
[19:09] tbranyen: TheJH: that code looks crazy
[19:09] chrisdickinson: TheJH: ah, in that case, you'd want to decorate setTimeout and setInterval too.
[19:09] tbranyen: i don't want to know why
[19:09] necromancer: i really like the walled garden approach
[19:09] garrensmith has joined the channel
[19:09] chrisdickinson: TheJH: not to mention `new Function`
[19:10] TheJH: chrisdickinson, :D
[19:10] creationix: node's new bundle by default behavior is awesome
[19:10] mikeal: i don't like the "contain this vm" thing
[19:10] Tobbe__: where's isaacs when I need him? :)
[19:10] creationix: it makes nvm make even more sense, I don't have to copy my global modules every time I "upgrade" node
[19:10] mikeal: it signals that something is wrong with the environment
[19:10] necromancer: mikeal: well you have to, unfortunately. ruby's got too many implementations. but javascript doesn't, so you'd really only need the gemset part of rvm to make npm awesome
[19:10] chrisdickinson: mikeal: on the upside, you could release a library called "node-rage-cage", which would be kind of cool.
[19:10] mikeal: with node.js and npm you can actually have two different modules require different versions of a dependency cleanly
[19:10] kee has joined the channel
[19:11] mikeal: that's like, the holy grail of package management
[19:11] tjholowaychuk: it breaks some js concepts pretty bad
[19:11] tjholowaychuk: instanceof etc
[19:11] tjholowaychuk: but those suck anyway
[19:11] mikeal: don't use instanceof 
[19:11] necromancer: mikeal: how is that done with global installs, though?
[19:11] mikeal: at least, not in node.js
[19:11] mikeal: use feature detection (poor mans capability checking)
[19:11] creationix: multiple contexts is like iframes in the browser
[19:11] creationix: same issues there too
[19:12] mikeal: necromancer: no global installs :)
[19:12] necromancer: you just said npm does global installs
[19:12] necromancer: did you not?
[19:12] creationix: you don't have to duck type, you can string compare constructor names
[19:12] mikeal: creationix: what do you mean by context?
[19:12] mikeal: don't string compare constructor names
[19:12] creationix: mikeal: v8 context
[19:12] mikeal: don't use instance of
[19:12] mikeal: if (obj.writeHead) // this is most likely an HTTP response object
[19:12] creationix: mikeal: depends on your use case
[19:13] creationix: If I have an opaque object that contains a c pointer, I need to know what it's type is
[19:13] creationix: there are no methods to check against
[19:13] creationix: instanceof helps with that
[19:13] mikeal: i disagree, in node.js  you just should ever use constructor name or instance of checking, because wrapping methods and masquerading as other objects is more important
[19:13] sreeix has joined the channel
[19:14] mikeal: we don't have interfaces, we don't have strict types, we don't have assurances anyway so we might as well just live in a world without them
[19:14] creationix: mikeal: true, dick typing is generally better, but not for everything
[19:14] mikeal: dick typing!
[19:14] creationix: meh!
[19:14] mikeal: i got Caswell to say DICK TYPING
[19:14] maxogden: tim, watch your mouthg!
[19:14] mikeal: i'm the winner!
[19:14] creationix: *duck
[19:14] tjholowaychuk: ahahha
[19:14] bengrue has joined the channel
[19:14] creationix: just don't ++ me and we're good
[19:14] nforgerit has joined the channel
[19:14] TheJH: chrisdickinson, ok, how about this: declare a long string, do `str+=str` a few times in a loop, then do `var arr=str.split('');var sort=arr.sort.bind(arr);for (var i=0; i<10; i++)sort=arr.sort.bind(sort);sort()`
[19:15] mikeal: check if an attribute/method is there before you use it if you're unclear what the type might be
[19:15] chrisdickinson: mikeal: you also throw out the object sentinel value pattern alongside instanceof, though
[19:15] chrisdickinson: no more nice "var Empty = new Object; arr.filter(function(obj) { return obj === Empty })`
[19:15] fmeyer has joined the channel
[19:15] creationix: wth is the "object sentinel value pattern"
[19:16] TheJH: chrisdickinson, there you have cpu usage exponential to the number of counted ops or so
[19:16] TheJH: :P
[19:16] TheJH: owned
[19:16] KindOne has joined the channel
[19:16] chrisdickinson: TheJH: make ops string length aware. put an upper limit on string length. possibly count the expense of an op by determining size of variable.
[19:17] TheJH: chrisbuchholz, oh yes, because static analysis on JS is so much fun :D
[19:17] creationix: mikeal: my point is that strict typing makes sense when you're interfacing with a strict language
[19:17] creationix: don't give a function a WebGLShader when it's expecting a WebGLTexture, it will segfault!
[19:17] chrisdickinson: creationix: that's kind of a made up phrase for "create an object that serves as a single value", like `undefined` or `null`, but in userland.
[19:17] chrisbuchholz: TheJH: huh?
[19:17] DrMcKay: I wonder how faster would it make string-operations-heavy apps use Pascal type strings instead of C ones
[19:18] TheJH: meh, two times chris :( (sorry, chrisbuchholz, chrisdickinson)
[19:18] chrisbuchholz: ;)
[19:18] chrisdickinson: TheJH: haha, defeated by the sheer number of chris's in the room ;)
[19:18] TheJH: chrisdickinson, oh yes, because static analysis on JS is so much fun :D
[19:18] mikeal: creationix: i'm not opposed to typeof checking
[19:18] mikeal: i'm saying that within the context of objects whos typeof === "object"
[19:18] piscisaureus has joined the channel
[19:18] mikeal: you should check attributes rather than constructor/instanceof checks
[19:18] creationix: which is all objects no?
[19:19] markwubben has joined the channel
[19:19] mikeal: typeof function () {} === "function"
[19:19] Skomski has joined the channel
[19:19] mikeal: typeof "asdf" === "string"
[19:19] mikeal: typeof true === "bool"
[19:19] mikeal: it's just null that sucks
[19:19] creationix: v8: "hello" instanceof String
[19:19] v8bot_: creationix: false
[19:19] TheJH: chrisdickinson, you'd have to either patch every single native operation that does more than O(1) or to check the function you're calling on every call
[19:20] creationix: v8: escape instanceof Function
[19:20] v8bot_: creationix: true
[19:20] mikeal: v8: typeof "hello" === "string"
[19:20] v8bot_: mikeal: true
[19:20] nforgerit has joined the channel
[19:20] creationix: ok, so functions also work with instanceof, but only because they are also objects
[19:20] aaronj1335: v8: type of (new String()) === 'object'
[19:20] v8bot_: aaronj1335: SyntaxError: Unexpected identifier
[19:20] creationix: non-objects don't work with it
[19:20] mikeal: no reason to get all fancy, just use typeof :)
[19:21] creationix: v8: typeof null
[19:21] aaronj1335: oops
[19:21] v8bot_: creationix: "object"
[19:21] TheJH: v8: typeof new String("foo")
[19:21] v8bot_: TheJH: "object"
[19:21] Aikar: aaronj1335: you had a space
[19:21] aaronj1335: v8: typeof (new String()) === 'object'
[19:21] v8bot_: aaronj1335: true
[19:21] creationix: TheJH: now there is a useless object
[19:21] piscisaureus_ has joined the channel
[19:21] mikeal: yeah, like i said, null sucks :)
[19:21] mikeal: also
[19:22] mikeal: v8: typeof undefined
[19:22] v8bot_: mikeal: "undefined"
[19:22] mikeal: so if you want to do typeof for "falsy" stuff its a lot of crap
[19:22] AvianFlu: v8: undefined = 6; typeof undefined
[19:22] v8bot_: AvianFlu: "number"
[19:22] AvianFlu: lulz
[19:22] mikeal: yeah, never do that!
[19:22] creationix: mikeal: so you're saying to normally use typeof and check for null first, and then just duck type from there
[19:22] DrMcKay: AvianFlu: that's actually useful sometimes ;)
[19:22] mikeal: actually, i'm saying, don't get too crazy :)
[19:23] AvianFlu: there was a mailing list post saying that being able to do that was a security risk
[19:23] mikeal: if (obj && obj.blah)
[19:23] AvianFlu: I lulzed
[19:23] DrMcKay: like having people wonder what the hell is going on in your script
[19:23] mikeal: is mostly what you want to do
[19:23] mikeal: unless you expect false
[19:23] mikeal: if (obj && typeof obj.blah !== undefined)
[19:24] mikeal: if someone passes you an object with a writeHead attribute that isn't a function, it fails
[19:24] mikeal: period
[19:24] liberum has joined the channel
[19:24] ircretary has joined the channel
[19:24] davve has joined the channel
[19:24] francois has joined the channel
[19:24] jesusabdullah has joined the channel
[19:24] jburkhart has joined the channel
[19:24] krill has joined the channel
[19:24] mikekelly has joined the channel
[19:24] ricepuddin has joined the channel
[19:24] Lorentz has joined the channel
[19:24] joelio has joined the channel
[19:24] gwoo has joined the channel
[19:24] termie has joined the channel
[19:24] wang has joined the channel
[19:24] termie has joined the channel
[19:24] meder has joined the channel
[19:24] jn has joined the channel
[19:24] gaYak has joined the channel
[19:24] Sembiance has joined the channel
[19:24] hotspants has joined the channel
[19:24] janne has joined the channel
[19:24] [tm] has joined the channel
[19:24] pzich has joined the channel
[19:24] pct has joined the channel
[19:24] bentruyman has joined the channel
[19:24] Atmoz has joined the channel
[19:24] AndrewX192 has joined the channel
[19:24] Daegalus has joined the channel
[19:24] AndrewX192 has joined the channel
[19:24] vicapow has joined the channel
[19:24] rc1 has joined the channel
[19:24] bradwright has joined the channel
[19:24] ollie has joined the channel
[19:24] gaving has joined the channel
[19:24] teadict has joined the channel
[19:24] nigelb has joined the channel
[19:24] ByteCrunch has joined the channel
[19:24] silky has joined the channel
[19:24] TheJH: whoooah
[19:24] przemoc has joined the channel
[19:24] mikeal: the language simply doesn't have a lot of assurances
[19:24] cloud-akshat has joined the channel
[19:24] mrkurt has joined the channel
[19:24] franck34 has joined the channel
[19:24] cconstantine_ has joined the channel
[19:24] roger_raymond has joined the channel
[19:24] dynacker has joined the channel
[19:24] rmzg has joined the channel
[19:24] DoNaLd` has joined the channel
[19:24] mihar has joined the channel
[19:24] L_star has joined the channel
[19:24] zenazn has joined the channel
[19:24] Clex has joined the channel
[19:24] swhit has joined the channel
[19:24] _mdp has joined the channel
[19:24] DrMcKay: there we go...
[19:24] guybrush has joined the channel
[19:24] royh has joined the channel
[19:24] jspiros has joined the channel
[19:24] Glenjamin has joined the channel
[19:24] przemoc has joined the channel
[19:24] mikeycgto has joined the channel
[19:24] AvianFlu has joined the channel
[19:24] KrooniX has joined the channel
[19:24] pkrumins has joined the channel
[19:24] jimt has joined the channel
[19:24] neme has joined the channel
[19:24] Martz has joined the channel
[19:24] __doc__ has joined the channel
[19:24] mikeal: gotta live with it and move forward
[19:24] brannig has joined the channel
[19:24] context has joined the channel
[19:24] ryanfitz has joined the channel
[19:24] mavin has joined the channel
[19:24] mikeycgto has joined the channel
[19:25] matyr has joined the channel
[19:25] inimino has joined the channel
[19:25] isufy has joined the channel
[19:25] Martz has joined the channel
[19:25] pkrumins has joined the channel
[19:25] omni5cience has joined the channel
[19:25] digiwano has joined the channel
[19:25] krazyivan has joined the channel
[19:25] Slashbunny has joined the channel
[19:25] dnjaramba has joined the channel
[19:25] slickplaid has joined the channel
[19:25] sveisvei has joined the channel
[19:25] teknopaul has joined the channel
[19:25] jvolkman has joined the channel
[19:25] mrtazz has joined the channel
[19:25] deoxxa has joined the channel
[19:25] DrMcKay: !ping
[19:25] dmkbot: DrMcKay, pong
[19:25] btipling has joined the channel
[19:25] TheJH: 5 screens full of netsplits...
[19:25] naneau has joined the channel
[19:25] Aikar: lol
[19:25] ben_alman has joined the channel
[19:25] atiti has joined the channel
[19:25] xerox has joined the channel
[19:26] a11235 has joined the channel
[19:26] DrPizza has joined the channel
[19:26] sstephenson has joined the channel
[19:26] astropirate has joined the channel
[19:26] TheJH: v8bot is still missing!
[19:26] TheJH: he's gone!
[19:26] DrMcKay: .. a
[19:26] catb0t: { b: 1, a: . }
[19:26] keyvan has joined the channel
[19:26] DrMcKay: catb0t isn't
[19:26] DrMcKay: but what the hell was this output?
[19:26] catb0t: isn't handled you 
[19:26] DrMcKay: .. a
[19:26] catb0t: { b: 1, a: . }
[19:26] DrMcKay: .. b
[19:26] catb0t: ReferenceError: b is not defined
[19:27] DrMcKay: uhm...
[19:27] DrMcKay: .. a.b
[19:27] catb0t: 1
[19:27] ryanseddon has joined the channel
[19:27] DrMcKay: .. a.a
[19:27] catb0t: { b: 1, a: . }
[19:27] jvolkman: so is "typeof(myvar) === 'undefined'" preferred to "myvar === undefined"?
[19:27] DrMcKay: I don't get it
[19:27] chapel has joined the channel
[19:27] McMAGIC--Copy has joined the channel
[19:27] ralph has joined the channel
[19:27] JKarsrud has joined the channel
[19:27] sorensen has joined the channel
[19:28] lmatteis has joined the channel
[19:28] Hosh has joined the channel
[19:28] DrMcKay: tjholowaychuk: any way to make some path under public/ require authentication?
[19:28] tjholowaychuk: DrMcKay add a middleware before static()
[19:28] tjholowaychuk: check the path
[19:28] tjholowaychuk: for whatever you want
[19:28] Raynos has joined the channel
[19:29] CoverSlide: jvolkman: myvar === 'undefined' will get a ReferenceError if myvar is not in the current scope
[19:29] ivan has joined the channel
[19:29] DrMcKay: tjholowaychuk: thanks
[19:29] Ned_ has joined the channel
[19:29] jvolkman: CoverSlide: typeof(myvar)
[19:29] jvolkman: is ee
[19:30] hij1nx has joined the channel
[19:30] jvolkman: i see*
[19:30] niftylettuce has joined the channel
[19:30] sriley has joined the channel
[19:30] CoverSlide: `typeof myvar` will not throw a reference error whether the variable is in scope or not
[19:30] bradleymeck has joined the channel
[19:30] CoverSlide: btw, typeof is not a function
[19:30] iaincarsberg has joined the channel
[19:30] CoverSlide: `typeof myvar` is basically the exact same as `typeof(myvar)`
[19:31] FiveLemon has joined the channel
[19:31] kadiks has left the channel
[19:31] amerine has joined the channel
[19:31] aconbere has joined the channel
[19:31] jvolkman: CoverSlide: thanks
[19:32] DrMcKay: tjholowaychuk: btw, thanks for express in general, it's awesome for getting things done :)
[19:33] whoops has joined the channel
[19:34] CarterL has joined the channel
[19:34] swaj has joined the channel
[19:34] swaj has joined the channel
[19:34] gerard0 has joined the channel
[19:35] trupppOFF has joined the channel
[19:35] Tobbe__: tjholowaychuk: here's the full error log from npm. Don't know if it tells you anything important... http://paste2.org/p/1646405
[19:35] TheJH: DrMcKay, could you please send "<SECRET>...</SECRET>" to catb0t in query (where "..." is some string I have to tell you)?
[19:35] catb0t: SECRETSECRET DrMcKay
[19:35] davidwalsh has joined the channel
[19:36] navaru has joined the channel
[19:36] PhilK has joined the channel
[19:36] navaru has left the channel
[19:36] DrMcKay: TheJH: what?
[19:37] deedubs has joined the channel
[19:37] TheJH: DrMcKay, guess what I can do to catb0t...
[19:37] catb0t: DrMcKay , there's also fugue guess
[19:37] AaronMT has joined the channel
[19:37] KindOne has joined the channel
[19:37] wao has joined the channel
[19:37] DrMcKay: ACTION backs out slowly
[19:38] MatthewS has joined the channel
[19:38] TheJH: meh, actually, how do I properly search for stuff in a buffer...
[19:38] Sami_ZzZ has joined the channel
[19:39] CoverSlide: https://github.com/m00g00/catbot <-- catb0t src?
[19:39] catb0t: httpsgithubcomm00g00catbot src
[19:39] zeade has joined the channel
[19:39] CoverSlide: blah catbot blah
[19:39] TheJH: oh, cool, thanks :)
[19:39] CoverSlide: blah catb0t blah
[19:39] TheJH: blah catb0t blah
[19:39] PhilK has joined the channel
[19:39] PhilK has left the channel
[19:39] TheJH: hmm...
[19:39] catb0t: blah , I d I like nesting because it 's inefficient blah
[19:39] catb0t: blah blah if they want anyone to run this on my local machine , but sure
[19:40] CoverSlide: wtf
[19:40] DrMcKay: CoverSlide: Markov generator, I suppose
[19:40] DrMcKay: or should I write "Markov's"?
[19:41] DrMcKay: .. insult
[19:41] catb0t: ReferenceError: insult is not defined
[19:41] DrMcKay: !insult
[19:41] maushu has joined the channel
[19:41] CoverSlide: !insult
[19:42] DrMcKay: https://github.com/m00g00/catbot/blob/master/modules/insult.js
[19:42] MooGoo: .insult
[19:42] catb0t: throws eggs in MooGoo's general direction
[19:42] MooGoo: so
[19:42] MooGoo: did u hax the bot
[19:42] aron_ has joined the channel
[19:42] rmzg: Is there a js/node equivalent of x ||= new value?
[19:43] bradwright has joined the channel
[19:43] superjudge has joined the channel
[19:43] DrMcKay: MooGoo: TheJH is trying ;)
[19:43] ErikCorryAtHome has joined the channel
[19:43] rmzg: x = x || val; I guess
[19:44] TheJH: MooGoo, well, I can get a reference to `Buffer`
[19:44] amiller has joined the channel
[19:44] MooGoo: stupid v8 stack traces
[19:44] DrMcKay: .acro
[19:44] [diecast] has joined the channel
[19:44] [diecast] has joined the channel
[19:44] [diecast] has joined the channel
[19:44] TheJH: MooGoo, huh? stack traces?
[19:44] DrMcKay: meh, doesn't work
[19:44] Kai` has joined the channel
[19:44] micheil: rmzg: hmm, or x || x = val
[19:45] MooGoo: .. Error()
[19:45] catb0t: { stack: 'Error\n    at Error (unknown source)\n    at evalmachine.<anonymous>:1:1\n    at EventEmitter.<anonymous> (eval at <anonymous> (/home/wkmsg/jsirc/lib/fork_child.js:32:25))\n    at EventEmitt ...
[19:45] MooGoo: hm
[19:46] ajsie has joined the channel
[19:47] robhawkes has joined the channel
[19:47] tanepiper_ has joined the channel
[19:47] TheJH: MooGoo, wanna see me use a buffer in catb0t? :D
[19:47] catb0t: MooGoo has given a beer and lets us use npm
[19:47] daleharvey has joined the channel
[19:47] tomh has joined the channel
[19:48] robhawkes has joined the channel
[19:48] CoverSlide: .. [process,Buffer,Error,global)
[19:48] catb0t: SyntaxError: Unexpected token )
[19:48] CoverSlide: .. [process,Buffer,Error,global]
[19:48] catb0t: ReferenceError: process is not defined
[19:48] mc_greeny has joined the channel
[19:49] CoverSlide: .. [typeof process, typeof Buffer, typeof Error,typeof global].
[19:49] catb0t: SyntaxError: Unexpected end of input
[19:49] Aikar: .. [Buffer]
[19:49] catb0t: ReferenceError: Buffer is not defined
[19:49] CoverSlide: .. [typeof process, typeof Buffer, typeof Error,typeof global]
[19:49] catb0t: [ 'undefined', 'undefined', 'function', 'undefined' ]
[19:49] TheJH: Aikar, not that simple :D
[19:49] ralph has joined the channel
[19:50] TheJH: .. var f=function(){return f.caller};var Buffer=f().caller.caller.caller.arguments[0].constructor;new Buffer([0x68,0x65,0x6c,0x6c,0x6f]).toString()
[19:50] catb0t: 'hello'
[19:50] TheJH: (ping MooGoo)
[19:50] Aikar: hax
[19:50] metadaddy has joined the channel
[19:51] Aikar: but yes ill give you that that it is young
[19:51] Aikar: mt
[19:51] CoverSlide: .. arguments.callee
[19:51] catb0t: ReferenceError: arguments is not defined
[19:51] TooTallNate has joined the channel
[19:51] whoops has joined the channel
[19:52] aaronj1335: I've got a small patch that enables a ~/.node_history file for the REPL.  Should I open a Pull Request on GitHub or send a patch to the mailing list as this : http://nodejs.org/docs/v0.1.15/#contribute suggests?
[19:52] hermanju_ has joined the channel
[19:52] CoverSlide: aaronj1335: I think it belongs in userland
[19:52] footyfish has joined the channel
[19:53] CoverSlide: but a nice option
[19:53] Nomon has joined the channel
[19:53] aaronj1335: aww bummer
[19:53] slifty has joined the channel
[19:53] CoverSlide: link?
[19:53] bnoordhuis: aaronj1335: we're in the process of porting node to windows
[19:53] bnoordhuis: so we probably won't take patches that won't work on both windows and the unices
[19:54] aaronj1335: i see
[19:54] bnoordhuis: but if you have a good patch, submit it as a pull request
[19:54] dgathright has joined the channel
[19:54] aaronj1335: there's not a PYTHONSTARTUP equivalent for node is there?
[19:54] aaronj1335: i.e. an env var that specifies a startup script for the REPL?
[19:54] bnoordhuis: aaronj1335: no
[19:54] mandric has joined the channel
[19:55] aaronj1335: … or an chance that a patch for it would be accepted?
[19:55] bnoordhuis: aaronj1335: maybe, it's useful
[19:55] bnoordhuis: aaronj1335: s/maybe/probably/
[19:55] dekz has joined the channel
[19:56] matthijs has joined the channel
[19:56] Lemon|mbp has joined the channel
[19:56] majek_ has joined the channel
[19:56] aaronj1335: CoverSlide: link for the patch?
[19:56] Lemon|mbp: Anyone has experience with node-amqp? https://github.com/postwait/node-amqp those examples are not realy helpfull
[19:56] Lemon|mbp: having trouble pushing messages to an exchange
[19:57] TheJH: oops, what did I do... :D
[19:57] TheJH: .. new Buffer([1,2,3]).toString()
[19:57] catb0t: '\01\02\03'
[19:57] CoverSlide: .. new Buffer().SlowBuffer
[19:57] catb0t: Error: First argument needs to be a number, array or string.
[19:57] amerine has joined the channel
[19:57] CoverSlide: .. new Buffer(0).SlowBuffer
[19:57] catb0t: undefined
[19:58] MooGoo: hm
[19:59] TheJH: MooGoo, :D
[20:00] smtlaissezfaire_ has joined the channel
[20:00] MooGoo: any luck?
[20:00] TheJH: MooGoo, is its source code somewhere? (nooo, nothing specific in mind, just curious :P )
[20:00] MooGoo: yea
[20:00] mynameisbender has joined the channel
[20:00] MooGoo: ctcp version
[20:01] TheJH: :D
[20:01] roidrage has joined the channel
[20:01] fmeyer has joined the channel
[20:01] sriley has joined the channel
[20:02] iaincarsberg has joined the channel
[20:02] TheJH: MooGoo, where's the part where it executes the code from IRC?
[20:02] Margle_ has joined the channel
[20:03] matyr_ has joined the channel
[20:04] indutny has joined the channel
[20:05] dreamdust has joined the channel
[20:05] chunhao_ has joined the channel
[20:06] stepheneb has joined the channel
[20:06] stepheneb has joined the channel
[20:06] nuck: Giving Mongoose a try as I work on the website portion, now that there's actually more people using it nad it's seemed to stabilize a lot more.
[20:06] Cromulent has joined the channel
[20:06] TheJH: MooGoo, ah, found it
[20:07] nuck: But for usernames, I need to store both normal-case and lowercase, and I'm not sure how to go about this in Mongoose
[20:07] SubtleGradient has joined the channel
[20:07] nuck: Unless Mongoose provides case-insensitive queries somehow
[20:08] deedubs has joined the channel
[20:09] ryanseddon has joined the channel
[20:09] hellp has joined the channel
[20:10] JSManiacs has joined the channel
[20:10] ErikCorryAtHome: http://imgur.com/Rs1Pi
[20:10] ErikCorryAtHome: Gah!
[20:11] jarek has joined the channel
[20:11] jarek has joined the channel
[20:11] JumpMast3r has joined the channel
[20:12] JJMalina has joined the channel
[20:13] wbednarski has joined the channel
[20:13] Alex_R has joined the channel
[20:14] dnyy has joined the channel
[20:15] JasonSmith_ has joined the channel
[20:15] tylerstalder has joined the channel
[20:15] mattly has joined the channel
[20:15] febits has joined the channel
[20:18] mrchess has joined the channel
[20:19] isaacs has joined the channel
[20:19] Margle has joined the channel
[20:19] bengrue has joined the channel
[20:20] ceej has joined the channel
[20:20] jeremyselier has joined the channel
[20:20] romainhuet has joined the channel
[20:21] Hosh has joined the channel
[20:21] MrNko has joined the channel
[20:21] chapel: nuck: just name.toLowerCase() when comparing
[20:21] TheJH: .. 1+1
[20:22] catb0t: 2
[20:22] TheJH: .. Buffer
[20:22] catb0t: [Function]
[20:22] Me1000 has joined the channel
[20:22] TheJH: .. new Buffer("foo").toString()
[20:22] catb0t: 'foo'
[20:22] TheJH: mmmhm...
[20:23] nuck: chapel » When comparing?
[20:23] nuck: This isn't CouchDB, it's Mongo
[20:23] dscape has joined the channel
[20:23] chapel: I know
[20:23] nuck: I don't MapReduce, I query
[20:23] nuck: And I can't query a CamelCase string with a lowercase query
[20:23] jesusabdullah: Why ain't you mapreducin' dawg?
[20:23] nuck: Because MongoDB is the new MySQL
[20:23] JKarsrud has joined the channel
[20:23] nuck: (it's true)
[20:23] chapel: nuck: are you talking about finding by username?
[20:24] jesusabdullah: Maybe mr is the best way to solve this one?
[20:24] jesusabdullah: I mean, for all I know
[20:24] cha0s has joined the channel
[20:24] cha0s has joined the channel
[20:24] nuck: jesusabdullah » haha I just store two tokens, lowername and username
[20:24] nuck: Right now, that is
[20:24] niftylettuce has joined the channel
[20:24] abjorn has joined the channel
[20:24] burningdog has joined the channel
[20:24] nuck: chapel » I need to case-insensitively query a field
[20:25] nuck: Which means either using RegExp, MR, or two fields
[20:25] nuck: (and I need to keep the original Cased version too)
[20:25] jesusabdullah: I'd probably go for the mapreduce, myself.
[20:25] owenb has joined the channel
[20:25] jesusabdullah: I mean, isn't a query just a really really simple MR anyway? ;)
[20:25] nuck: jesusabdullah » Space is cheaper than processing power ;)
[20:25] nuck: jesusabdullah » Uh, not in Mongo
[20:25] jesusabdullah: pfffsht
[20:25] nuck: It's indexed, etc.
[20:25] jesusabdullah: be a man nuck
[20:26] jesusabdullah: MR will grow hair on your chest
[20:26] rmzg: Uh
[20:26] nuck: It will, but it's also not as good for large projects
[20:26] jesusabdullah: It's true!
[20:26] rmzg: Doesn't mongo support case insensitive queries
[20:26] nuck: rmzg » Surprisingly, no.
[20:26] jesusabdullah: That I don't know. >:P
[20:26] nuck: That is the one thing I always facepalmed over in Mongo
[20:26] petrjanda has joined the channel
[20:26] justicefries has joined the channel
[20:26] nuck: Unless they've added it recently
[20:26] chapel: jesusabdullah: MR in mongo is not a good thing
[20:26] jesusabdullah: :C
[20:27] jesusabdullah: That's why I don't "do" databases
[20:27] jesusabdullah: CSV 4 lyfe!
[20:27] nuck: lol
[20:27] jesusabdullah: though, couch looks pretty sweet
[20:27] jesusabdullah: I've been playing with that a little bit
[20:27] Draggor has joined the channel
[20:27] rmzg: nuck: Ew
[20:27] nuck: rmzg » Yeah, it's one of those weird-ass shortcomings :/
[20:28] rmzg: nuck: yeah I just found the bug report that's all "just add a second field!"
[20:28] rmzg: Which to be fair, is the same as an index, but still
[20:28] Twelve-60` has joined the channel
[20:29] wilmoore has joined the channel
[20:29] rmzg: And of course you can use $where
[20:30] mrchess has joined the channel
[20:31] nym has joined the channel
[20:31] stepheneb_ has joined the channel
[20:31] nuck: oi vey
[20:31] nuck: That bug's been open for something like a year now
[20:31] nuck: At least
[20:31] nuck: Maybe 2
[20:31] nuck: Jon 09
[20:31] nuck: So yup over 2 years
[20:33] nuck: egh
[20:33] nuck: It's not even assigned to a version yet ;-;
[20:33] dob_ has joined the channel
[20:34] wilmoore has joined the channel
[20:34] nuck: ooh but 2.1.0 is gonna have TTL-based capped collections
[20:34] lmatteis has joined the channel
[20:34] nuck: I can make use of that for my confirmation codes 8D
[20:34] dob_: hello any suggesstions for a geocode library?
[20:34] jmar777: sweet - i hadn't heard about the TTL-based collections yet
[20:34] dob_: i found several... but not sure which one to use.
[20:35] ngl has joined the channel
[20:36] beriberikix: Question on module design
[20:36] csavard has joined the channel
[20:36] beriberikix: I have some bootstrap code that relies on asysnc data, ie fetch a file
[20:37] thinkt4nk has joined the channel
[20:37] cody-- has left the channel
[20:37] beriberikix: any suggestions on how to ensure that data is there in the rest of the methods?
[20:37] Styles has joined the channel
[20:37] rmzg: await{}
[20:37] blueadept` has joined the channel
[20:37] nuck: wat
[20:38] nuck: Did I see somebody referencing the await/defer setup >:C
[20:38] nuck: ACTION is disappoint.
[20:38] Raynos has joined the channel
[20:38] tomtomaso has joined the channel
[20:38] context: beriberikix: /ca
[20:38] context: oops
[20:38] khrome has joined the channel
[20:39] patcito has joined the channel
[20:39] Xano_ has joined the channel
[20:39] context: beriberikix: either sync it, cache the file in your package and use that till the update is received, queue commands until file is received
[20:40] sveisvei has joined the channel
[20:40] beriberikix: context: cool, I was thinking of queuing, but wasn't sure what other people are doing.
[20:41] beriberikix: Do you have any example modules I could look at?
[20:42] tizzo has joined the channel
[20:44] ngl: i'm tired of re-starting my node server manually on every change. So, I added an fs.watchFile to the server file so that upon changes it executes a command line statement. But, does anybody know what statement/how to write CMD+C  ?
[20:44] deedubs_ has joined the channel
[20:44] slifty has joined the channel
[20:44] metellus has joined the channel
[20:45] slifty_corsair has joined the channel
[20:46] maxogden: ngl: a search for 'restart' here comes up with at least 5 modules that do that http://search.npmjs.org/
[20:46] ngl: oh
[20:46] chapel: ngl: also its SIGHUP
[20:46] chapel: you can do process.kill(0)
[20:46] fmeyer_ has joined the channel
[20:46] chapel: as well
[20:47] chapel: or whatever
[20:47] chapel: and there are modules too
[20:47] ngl: cool. thanks all.
[20:47] chapel: like restartr
[20:47] alvaro_o has joined the channel
[20:48] gazumps has joined the channel
[20:49] ttpva has joined the channel
[20:49] blueadept has joined the channel
[20:49] blueadept: anyone familiar with this error?
[20:49] blueadept: http://pastie.org/private/jfqquakaqvrwqyyc8v6hw
[20:50] blueadept has joined the channel
[20:51] blueadept: n/m
[20:51] jj0hns0n has joined the channel
[20:51] deedubs has joined the channel
[20:53] radiodario has joined the channel
[20:53] tilgovi has joined the channel
[20:53] tilgovi has joined the channel
[20:54] eee_c has joined the channel
[20:56] codely has joined the channel
[20:58] raidfive has joined the channel
[20:58] fmeyer has joined the channel
[20:58] Lemon|mbp has joined the channel
[20:58] scoates has joined the channel
[21:00] atmos has joined the channel
[21:00] dmkbot has joined the channel
[21:01] vicapow_ has joined the channel
[21:01] codely: hey everyone. i have an app with a very small but neat purpose tied into another app. best to host the domains on separate apps via proxy on my host? or can i test for request.host.headers ...
[21:02] EyePulp: codely: you could do it a number of ways.  you could set up an ssh tunnel over a predetermined port if you really wanted to lock it down
[21:03] EyePulp: testing for the host.headers can work as well.
[21:03] codely: it's not about locking it down .. (the parodying) - just wondering what's standard.
[21:03] codely: one piece of the app is just a url shortener for the main app on a separate domain.
[21:04] codely: it would be nice to just have that little chunk inside the other app, test the headers ….
[21:04] codely: i.e., the last route before "*"
[21:05] ecin has joined the channel
[21:08] explodes has joined the channel
[21:08] slifty has joined the channel
[21:10] deoxxa has joined the channel
[21:10] ngl: Hey, I was just talking to my boss telling him that I was going to mention the job that is the person between his level and my own... and he said it is already on NodeJS.org  
[21:11] ngl: Comically, the HR Director posted the job and put HR Director as the title of the post! But, anyway, it is for software engineer and we moved everything to Node recently... http://jobs.nodejs.org/a/jbb/job-details/557661
[21:11] ngl: Anyway... :) beer thirty.
[21:13] sneakyness has joined the channel
[21:13] ngl: oh... and if anybody here gets it I'll split the recommendation money with you! (say Neil sent you) Later.
[21:13] ngl has left the channel
[21:14] nakkor has joined the channel
[21:15] CarterA has joined the channel
[21:15] fmeyer has joined the channel
[21:15] CIA-54: libuv: 03Ben Noordhuis 07master * r2f2223f 10/ src/unix/pipe.c : sunos: fix compiler errors, sun is a #define - http://git.io/IGltpA
[21:16] nakkor1 has joined the channel
[21:18] jarek_ has joined the channel
[21:18] Industrial` has joined the channel
[21:19] Industrial`: These variables aren't working right. I'm getting errors on values like 40px/2 on line 8. https://gist.github.com/a1fd76f1559e5110dd80
[21:20] Industrial`: (also yeah my calculations are probably wrong, just started on this)
[21:20] Industrial`: If something similar exists (mixin for 960 grid system) for stylus, please point me to it (A collection of goodies, extra beer points.)
[21:21] tjholowaychuk: Industrial (n/2)
[21:21] jesusabdullah: isaacs: Is there any documentation on .npmignore? If so, I'm having trouble finding it.
[21:21] tjholowaychuk: since js allows /
[21:21] tjholowaychuk: in the grammar
[21:21] Industrial`: tjholowaychuk: ohai. ok.
[21:21] CIA-54: libuv: 03Ben Noordhuis 07master * r9bd8bd7 10/ uv.gyp : gyp: add sunos config section - http://git.io/L_5itg
[21:22] fatjonny: jesusabdullah: http://npmjs.org/doc/developers.html and look for Keeping files out
[21:23] fatjonny: jesusabdullah: that is the only documentation I know of
[21:23] davidbanham has joined the channel
[21:23] wilmoore has joined the channel
[21:23] davidban_ has joined the channel
[21:24] ph^ has joined the channel
[21:26] jesusabdullah: fatjonny: That will do very nicely.
[21:26] btipling: where is node-waf installed?
[21:27] fatjonny: jesusabdullah: of course, Isaacs is breaking the ignore stuff out of npm at some point in time as well, so it might change a bit
[21:28] isaacs: fatjonny, jesusabdullah: that is true
[21:28] isaacs: better reusable ignore logic and documentation will come of that effort.
[21:30] dmkbot: joyent/node: 03aaronj1335: REPL sources file from NODE_STARTUP env var - https://github.com/joyent/node/issues/1688
[21:30] TheJH: MooGoo, I can already get a reference to the global String object - if I could get the global Array object, I could own the bot, i think
[21:31] Yuffster_work has joined the channel
[21:31] TheJH: .. var RealString;function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});var g=(new RealString("foo")).concat.call(null);g
[21:31] catb0t: '[object global]'
[21:32] TheJH: that's the global object casted to a string
[21:32] CIA-54: libuv: 03Ryan Dahl 07master * r4484d61 10/ (9 files in 5 dirs): 
[21:32] CIA-54: libuv: Add interfaces for uv_pipe_open, uv_tty_init, uv_tty_set_mode
[21:32] CIA-54: libuv: Nothing works - no tests. This is just to coordinate efforts between Bert
[21:32] CIA-54: libuv: and I. - http://git.io/cLWe7g
[21:32] TheJH: because calling the methods of an unjailed version of `String` allows me to call its methods on the window, which will get casted to a string
[21:33] eventualbuddha has joined the channel
[21:34] TheJH: actually, even a reference to the global `Object` should be sufficient...
[21:35] wilmoore has joined the channel
[21:35] nuck: Anyone here feel like helping me figure something out in Mongoose?
[21:37] Venom_X has joined the channel
[21:38] chia has joined the channel
[21:38] simenbrekken has joined the channel
[21:39] EyePulp: buck - what's the issue?
[21:39] EyePulp: er… nuck
[21:39] slifty_corsair has joined the channel
[21:40] TheJH: .. new RealFunction("return global.process.version")()
[21:40] catb0t: ReferenceError: RealFunction is not defined
[21:40] TheJH: ah, I'll have to do the entire hack again here?
[21:40] TheJH: guess so...
[21:40] Slayterson has joined the channel
[21:40] TheJH: MooGoo, you here? I can get a reference to the "process" global
[21:40] nakkor has joined the channel
[21:41] nuck: EyePulp » I want to have two fields, lowername and username, and when username is set, I want lowername to be set to username.toLowerCase()
[21:41] nuck: So similar to a virtual, but not a virtual
[21:41] TheJH: .. Buffer
[21:41] catb0t: [Function]
[21:41] TheJH: .. function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});
[21:41] catb0t: { 0: 102, 1: 111, 2: 111, 3: 98, 4: 97, 5: 114, length: 6, parent: { 0: 40, 1: 133, 2: 231, 3: 66, 4: 40, 5: 133, 6: 231, 7: 66, 8: 16, 9: 173, 10: 98, 11: 8, 12: 16, 13: 173, 14: 98, 15: 8, 16: 4, 17 ...
[21:42] TheJH: .. RealFunction = RealString.constructor
[21:42] catb0t: [Function]
[21:42] TheJH: .. new RealFunction("return global.process.version")()
[21:42] catb0t: 'v0.4.10'
[21:42] TheJH: MWAHAHAHA
[21:42] radiodario has joined the channel
[21:42] AvianFlu: lol TheJH WIN!
[21:42] EyePulp: buck - what about .pre ?
[21:42] nuck: haha
[21:42] airhorns has joined the channel
[21:42] astropirate has joined the channel
[21:42] EyePulp: dammit
[21:42] matyr has joined the channel
[21:42] EyePulp: nuck
[21:42] nuck: EyePulp » A middleware for the entire thing seems like overkill
[21:43] EyePulp: for the schema?
[21:43] nuck: yeah
[21:43] TheJH: mhm, wondering whether I should do process.exit()...
[21:43] nuck: TheJH » Nah, fuck with it first :D
[21:43] TheJH: true :D
[21:43] nuck: TheJH » Install a few NPM modules
[21:43] TheJH: nuck, :D
[21:43] EyePulp: buck - sounds exactly like what the middleware is for, no?
[21:43] TheJH: .. new RealFunction("return global.require")()
[21:43] catb0t: undefined
[21:44] EyePulp: ACTION gives up on b vs n.
[21:44] EyePulp: chuck
[21:44] nuck: EyePulp .. new RealFunction("return require")();
[21:44] TheJH: meh, we'll have to use the bindings directly :(
[21:44] EyePulp: xuck
[21:44] TheJH: .. new RealFunction("return global.binding('fs')")()
[21:44] catb0t: TypeError: Object #<Object> has no method 'binding'
[21:44] nuck: EyePulp .. new RealFunction("return require('buffer')")();
[21:44] nuck: .. new RealFunction("return require('buffer')")();
[21:44] catb0t: ReferenceError: require is not defined
[21:44] nuck: Oh derp
[21:44] chrislorenz has joined the channel
[21:44] EyePulp: buck - which are you sending me that?
[21:44] nuck: .. new RealFunction("return require")();
[21:44] TheJH: huh?
[21:44] catb0t: ReferenceError: require is not defined
[21:44] CoverSlide: .. new RealFunction("global")()
[21:44] nuck: EyePulp » Didn't even notice your name there haha
[21:44] catb0t: undefined
[21:44] EyePulp: nbnbnbnbn uck.
[21:44] TheJH: .. new RealFunction("return global")()
[21:44] catb0t: TypeError: Cannot call method 'toString' of undefined
[21:45] TheJH: .. Object.keys(new RealFunction("return global")())
[21:45] catb0t: []
[21:45] TheJH: .. JSON.stringify(new RealFunction("return global")())
[21:45] catb0t: '{}'
[21:45] TheJH: me is too stupid
[21:45] nuck: .. new RealFunction("return process")();
[21:45] catb0t: ..
[21:45] nuck: lolwat
[21:45] CoverSlide: .. new RealFunction("return function(){return this}()")()
[21:45] catb0t: ...
[21:45] TheJH: .. new RealFunction("return process.binding")()
[21:45] catb0t: [Function]
[21:46] CoverSlide: .. new RealFunction("return function(){return this}().process")()
[21:46] catb0t: ..
[21:46] TheJH: .. new RealFunction("return process.binding('fs')")()
[21:46] catb0t: { Stats: [Function], StatWatcher: [Function], close: [Function], open: [Function], read: [Function], fdatasync: [Function], fsync: [Function], rename: [Function], truncate: [Function], rmdir: [Functio ...
[21:46] TheJH: there's the fs binding :D
[21:46] nuck: .. new RealFunction("return JSON.stringify(process)")();
[21:46] catb0t: (node) Use process.env instead of process.ENV
[21:46] CoverSlide: .. new RealFunction("return process.exit.toString()")()
[21:46] catb0t: "function (code) {\n      process.emit('exit', code || 0);\n      process.reallyExit(code || 0);\n    }"
[21:46] nuck: .. new RealFunction("return process.binding('child_process')")();
[21:46] CoverSlide: ooo
[21:46] catb0t: { ChildProcess: [Function] }
[21:47] nuck: ;3
[21:47] nuck: .. new RealFunction("return process.binding('child_process').toString()")();
[21:47] mraleph: pwned
[21:47] catb0t: '[object Object]'
[21:47] astropirate: I don't get it. Why is Joyent giving away hosting for free? are they still in beta?
[21:47] nuck: .. new RealFunction("return process.binding('child_process').toSource()")();
[21:47] catb0t: TypeError: Object #<Object> has no method 'toSource'
[21:47] nuck: .. new RealFunction("return process.binding('child_process').exec")();
[21:47] catb0t: undefined
[21:47] TheJH: nuck, those bindings are more low-level
[21:47] CoverSlide: astropirate: they have paid plans
[21:47] dgathright has joined the channel
[21:47] nuck: TheJH » OIC
[21:48] astropirate: CoverSlide, but thye also have free ones?
[21:48] CIA-54: node: 03Ben Noordhuis 07master * r0d80040 10/ (41 files in 6 dirs): uv: upgrade to 9bd8bd7 - http://git.io/8Fet0g
[21:48] wilken has joined the channel
[21:48] temp02 has joined the channel
[21:48] nuck: astropirate » AFAIK, Heroku and AWS do the same too
[21:48] nuck: AWS Micro EC2
[21:49] CoverSlide: AppEngine has a free usage tier
[21:49] nuck: .. new RealFunction("return process.binding('child_process')('npm ls')")();
[21:49] catb0t: TypeError: object is not a function
[21:49] temp01 has joined the channel
[21:50] nuck: .. new RealFunction("return process.binding('child_process').ChildProcess('npm ls')")();
[21:50] catb0t: node: ../src/node_object_wrap.h:61: void node::ObjectWrap::Wrap(v8::Handle<v8::Object>): Assertion `handle->InternalFieldCount() > 0' failed.
[21:50] temp01 has joined the channel
[21:50] nuck: .. new RealFunction("return process.binding('child_process').ChildProcess")();
[21:50] isaacs: nuck: why are you accessing the binding?
[21:50] nuck: ACTION whistles
[21:50] TheJH: .. superEval = new RealFunction("return process.binding('evals').Script.runInThisContext")()
[21:50] isaacs: nuck: i mean, that's not ever going to work as you expect.
[21:50] nuck: isaacs » I wanna see if I can spawn NPM to install a module haha
[21:50] TheJH: .. superEval = new RealFunction("return process.binding('evals').Script.runInThisContext")(); 1
[21:50] CoverSlide: .. new RealFunction("return  process.binding('fs').readFileSync('/etc/passwd-')")()
[21:50] isaacs: .. require("npm")
[21:51] isaacs: (flood, sorry...)
[21:51] nuck: isaacs » It's sandboxed
[21:51] isaacs: ok
[21:51] CoverSlide: .. new RealFunction("return  process.binding('fs').readFileSync('/etc/passwd')")()
[21:51] MooGoo: something else is up
[21:51] nuck: But somehow they've broken out of the sandbox
[21:51] TheJH: .. new RealFunction("return process.binding")()
[21:51] isaacs: .. RealFunction
[21:51] isaacs: what is that?
[21:51] TheJH: someone broke it...
[21:51] TheJH: .. 1+1
[21:51] catb0t: test
[21:51] nuck: TheJH » haha did I break it with the C++ error?
[21:51] TheJH: .. 1+1
[21:51] CoverSlide: ACTION looks at nuck
[21:51] MooGoo: .jsr
[21:51] catb0t: Context reset
[21:51] TheJH: MooGoo, aaaah
[21:52] CoverSlide: .. new RealFunction("return  process.binding('fs').readFileSync('/etc/passwd')")()
[21:52] catb0t: ReferenceError: RealFunction is not defined
[21:52] MooGoo: hm
[21:52] CoverSlide: ah damn
[21:52] mraleph: .. function f(){return f.caller.caller.caller.arguments}; F = f()[0].constructor.constructor
[21:52] TheJH: MooGoo, you evil botmaster, let us have our hard-earned fun!!!
[21:52] catb0t: [Function]
[21:52] mraleph: .. F("return 1;")()
[21:52] isaacs: .. new Function("return process.binding('fs')")()
[21:52] catb0t: 1
[21:52] catb0t: ReferenceError: process is not defined
[21:52] MooGoo: heh...well it wasnt writing results for some reason
[21:52] amerine has joined the channel
[21:52] isaacs: .. new Function("return this")().process
[21:52] catb0t: undefined
[21:52] isaacs: .. new Function("return this")()
[21:52] catb0t: TypeError: Cannot call method 'toString' of undefined
[21:52] TheJH: .. new F("return process")()
[21:52] catb0t: ReferenceError: process is not defined
[21:53] nuck: CoverSlide » Feel free to do it on v8bot_
[21:53] v8bot_ has joined the channel
[21:53] isaacs: .. new Function("return arguments.caller.caller")()
[21:53] catb0t: TypeError: Cannot read property 'caller' of undefined
[21:53] TheJH: .. new F("return global")()
[21:53] catb0t: ReferenceError: global is not defined
[21:53] isaacs: there a use strict in there?
[21:53] TheJH: meh, I'll redo that stuff...
[21:53] blkcat: oh bummer, they nixed the free tier for amazon s3? :(
[21:53] nuck: blkcat » Did they?
[21:53] nuck: ACTION shrugs
[21:53] TheJH: .. var f=function(){return f.caller};var Buffer=f().caller.caller.caller.arguments[0].constructor;new Buffer([0x68,0x65,0x6c,0x6c,0x6f]).toString()
[21:53] catb0t: 'hello'
[21:53] blkcat: nuck: looks that way, unless you're a new customer.
[21:53] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor
[21:53] catb0t: [Function]
[21:54] MooGoo: .. Buffer
[21:54] catb0t: [Function]
[21:54] mraleph: .. G = F("return (function () { return this; })();")()
[21:54] catb0t: { markup: { Markup: [Function], Tag: [Function], Element: [Function], HTMLText: [Function], escapeHTML: [Function], test: [Function] }, console: { log: [Function], time: [Function], timeEnd: [Function ...
[21:54] TheJH: .. function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealString
[21:54] catb0t: [Function]
[21:54] TheJH: .. Fun = RealString.constructor
[21:54] catb0t: [Function]
[21:54] mraleph: .. Fun === F
[21:54] catb0t: false
[21:54] mraleph: .. F === Function
[21:54] catb0t: false
[21:54] TheJH: .. (new Fun("return process"))()
[21:54] catb0t: TypeError: Cannot call method 'toString' of undefined
[21:54] nuck: .. typeof F
[21:54] catb0t: 'function'
[21:55] TheJH: .. (new Fun("return process.binding('vm')"))()
[21:55] catb0t: Error: No such module
[21:55] mraleph: hmm we have three different Functions now :-)
[21:55] TheJH: .. (new Fun("return process.binding('evals')"))()
[21:55] catb0t: { Context: [Function], Script: [Function] }
[21:55] dmkbot: joyent/node: 03tshinnic: Continuing a thought: JS-level util.errnoException - https://github.com/joyent/node/issues/1689
[21:55] dmkbot: joyent/node: 03tshinnic: Continuing a thought: JS-level util.errnoException - https://github.com/joyent/node/issues/1689
[21:55] TheJH: .. EVAL = (new Fun("return process.binding('evals').Script.runInThisContext"))()
[21:55] catb0t: [Function]
[21:55] MooGoo: .. EVAL(this)
[21:55] TheJH: .. EVAL("require('child_process')")
[21:55] MooGoo: hm
[21:56] TheJH: what happened?
[21:56] ph^_ has joined the channel
[21:56] MooGoo: there it goes again
[21:56] Nexxy: is someone trying to hack the v8 bots again?
[21:56] Nexxy: tssssk.
[21:56] TheJH: MooGoo, don't build such unreliable software :P
[21:56] MooGoo: Socker is not writable
[21:56] MooGoo: Socket
[21:56] codely: What's hotter than node making on a 27inch iMac screen?
[21:56] jyap has joined the channel
[21:56] TheJH: Nexxy, I think I succeeded
[21:56] cjheath has joined the channel
[21:56] TheJH: Nexxy, I am sure I could kill it
[21:56] Nexxy: TheJH, ._.
[21:57] nuck: .. (new Fun("return process.binding('child_process').ChildProcess"))()
[21:57] fmeyer has joined the channel
[21:57] MooGoo: hm
[21:57] MooGoo: why does that break it
[21:57] jyap: i'm trying to run node-mysql.  when i try a sample select, my results come back as: Results: [object Object],[object Object],[object Object],[object Object],[object Object]
[21:57] TheJH: .jsr
[21:57] TheJH: admin-only command?
[21:57] catb0t: Context reset
[21:57] TheJH: ah, ok
[21:57] Nexxy: jyap, you probably need to iterate over the results
[21:57] nuck: .. EVAL("require('npm')")
[21:57] catb0t: ReferenceError: EVAL is not defined
[21:57] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor
[21:57] catb0t: [Function]
[21:58] TheJH: .. function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealString
[21:58] isaacs: .. var e = eval; e("require")
[21:58] catb0t: [Function]
[21:58] catb0t: ReferenceError: require is not defined
[21:58] codely: jyap: i come from a long time mysql background, use mongo with mongoose
[21:58] Nexxy: jyap, fetchAll or something
[21:58] isaacs: .. var e = eval; e("typeof require")
[21:58] catb0t: 'undefined'
[21:58] TheJH: .. Fun = RealString.constructor
[21:58] catb0t: [Function]
[21:58] Nexxy: jyap, I don't use mysql
[21:58] TheJH: .. EVAL = (new Fun("return process.binding('evals').Script.runInThisContext"))()
[21:58] catb0t: [Function]
[21:58] codely: i love the idea of keeping my backend, fronted and db orm all js oriented
[21:58] Nexxy: TheJH, -_-
[21:58] Nexxy: spam much?
[21:58] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor; function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealString
[21:58] v8bot_: nuck: TypeError: Cannot read property 'constructor' of undefined
[21:58] TheJH: .. EVAL('require("child_process")')
[21:58] catb0t: ReferenceError: require is not defined
[21:58] TheJH: oooh
[21:58] TheJH: .. EVAL('process')
[21:58] catb0t: TypeError: Cannot call method 'toString' of undefined
[21:58] TheJH: .. EVAL('process.version')
[21:58] catb0t: 'v0.4.10'
[21:59] jyap: i tried this: var firstResult = results[0]; console.log('Results: ' + results[0]); -->  Results: [object Object] but that comes up as 
[21:59] MooGoo: ah
[21:59] Epeli has joined the channel
[21:59] isaacs: TheJH: you're out!
[21:59] MooGoo: .. EVAL('process.exit()')
[21:59] isaacs: .. EVAL
[21:59] isaacs: MooGoo: awww...
[21:59] nuck: EVAL("process.env");
[21:59] nuck: .. EVAL("process.env");
[21:59] isaacs: .jsr
[21:59] catb0t: Context reset
[21:59] nuck: :(
[21:59] nuck: Set it on v8bot_ 
[21:59] MooGoo: lol
[21:59] nuck: I wanna see if I can console.log >_>
[22:00] isaacs: .. function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealString.constructor
[22:00] catb0t: ReferenceError: Buffer is not defined
[22:00] isaacs: .. Buffer
[22:00] catb0t: ReferenceError: Buffer is not defined
[22:00] isaacs: hrm?
[22:00] isaacs: .. this
[22:00] catb0t: TypeError: Cannot call method 'toString' of undefined
[22:00] isaacs: .. "yo" + "ok"
[22:00] catb0t: 'yook'
[22:00] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealFunction = RealString.constructor
[22:00] catb0t: TypeError: Cannot convert object to primitive value
[22:00] Poetro has joined the channel
[22:00] Poetro has joined the channel
[22:00] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealFunction = RealString.constructor;1
[22:00] catb0t: TypeError: Cannot convert object to primitive value
[22:00] TheJH: huh?
[22:01] nuck: v8: function f(){RealString=f.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealString
[22:01] v8bot_: nuck: ReferenceError: Buffer is not defined
[22:01] TheJH: nuck, you first have to get the buffer
[22:01] chrisdickinson: v8:typeof process
[22:01] v8bot_: chrisdickinson: "undefined"
[22:01] chrisdickinson: )`:
[22:01] chrisdickinson: .. typeof process
[22:01] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;
[22:01] catb0t: [Function]
[22:01] catb0t: 'undefined'
[22:01] TheJH: now there's the Buffer
[22:01] TheJH: .. Buffer
[22:01] catb0t: [Function]
[22:01] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;
[22:01] v8bot_: nuck: TypeError: Cannot read property 'constructor' of undefined
[22:02] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;function g(){RealString=g.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:f});RealFunction = RealString.constructor
[22:02] catb0t: TypeError: Cannot convert object to primitive value
[22:02] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller;
[22:02] TheJH: .. var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0].constructor;function g(){RealString=g.caller.caller.caller;return 'utf8'};new Buffer("foobar", {toString:g});RealFunction = RealString.constructor
[22:02] v8bot_: nuck: function () {\n  var self = this;\n\n  // If this is the first recv (pool doesn't exist) or we've used up\n  // most of the pool, allocate a new one.\n  if (!pool || pool.length - pool.used < kMinPoolSpace) {\n    // discard the old pool. Can't add to the free list because\n    // users might have refernces to slices on it.\n    pool = null;\n    allocNewPool();\n  }\n\n  //debug('pool.used ' + po [Output truncated...]
[22:02] catb0t: [Function]
[22:02] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments[0];
[22:02] v8bot_: nuck: undefined
[22:02] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.arguments.caller.arguments;
[22:02] v8bot_: nuck: TypeError: Cannot read property 'arguments' of undefined
[22:02] TheJH: .. process = (new RealFunction("return process"))()
[22:02] catb0t: TypeError: Cannot call method 'toString' of undefined
[22:02] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.caller;
[22:02] v8bot_: nuck: function onReadable(readable, writable) {\n  assert(this.socket);\n  var socket = this.socket;\n  socket._onReadable();\n}
[22:03] TheJH: .. process = (new RealFunction("return process"))(); 1
[22:03] catb0t: 1
[22:03] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.caller.arguments;
[22:03] v8bot_: nuck: {"0": true, "1": false}
[22:03] TheJH: .. process.version
[22:03] catb0t: 'v0.4.10'
[22:03] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.arguments;
[22:03] v8bot_: nuck: {"0": "end"}
[22:03] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.caller.caller.arguments;
[22:03] v8bot_: nuck: TypeError: Cannot read property 'arguments' of null
[22:03] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.caller.caller;
[22:03] v8bot_: nuck: null
[22:03] nuck: v8: var f=function(){return f.caller};Buffer=f().caller.caller.caller.caller;
[22:03] v8bot_: nuck: function onReadable(readable, writable) {\n  assert(this.socket);\n  var socket = this.socket;\n  socket._onReadable();\n}
[22:03] MooGoo: .. process
[22:03] catb0t: ..
[22:03] MooGoo: .. process
[22:03] catb0t: ..
[22:03] MooGoo: wat
[22:03] TheJH: .. process.ENV
[22:03] catb0t: (node) Use process.env instead of process.ENV
[22:03] nuck: .. require
[22:03] TheJH: .. process.env
[22:03] catb0t: ..
[22:03] catb0t: ReferenceError: require is not defined
[22:03] MooGoo: .. Object.keys(process)
[22:03] catb0t: [ 'title', 'version', 'installPrefix', 'versions', 'platform', 'ARGV', 'argv', 'env', 'ENV', 'pid', 'execPath', 'compile', '_needTickCallback', 'reallyExit', 'chdir', 'cwd', 'getuid', 'setuid', 'setgi ...
[22:04] MooGoo: hm
[22:04] MooGoo: that looks bad
[22:04] MooGoo: .. process.cwd()
[22:04] catb0t: '/home/wkmsg/jsirc'
[22:04] TheJH: .. process.platform
[22:04] catb0t: 'linux'
[22:04] nuck: .. Object.keys(compile)
[22:04] catb0t: ReferenceError: compile is not defined
[22:04] nuck: .. Object.keys(process.compile)
[22:04] catb0t: []
[22:04] boaz has joined the channel
[22:04] TheJH: .. process.pid
[22:04] catb0t: 31343
[22:04] nuck: .. typeof process.compile
[22:04] catb0t: 'function'
[22:04] TheJH: .. process.uid
[22:04] catb0t: undefined
[22:04] nuck: .. process.compile
[22:04] sebastia_ has joined the channel
[22:04] catb0t: [Function]
[22:04] nuck: .. process.compile.toString()
[22:04] catb0t: 'function () { [native code] }'
[22:04] TheJH: .. process.getuid()
[22:04] catb0t: 502
[22:05] TheJH: .. process.argv
[22:05] catb0t: [ 'node', '/home/wkmsg/jsirc/lib/fork_child.js', "function () {\n\011\011\011var vm = require('vm'),\n\011\011\011\011util = require('util'),\n\011\011\011\011markup = require('./markup'),\n\011\011\0 ...
[22:05] MooGoo: heh
[22:05] mraleph1 has joined the channel
[22:05] TheJH: process.title = "NOTEVILATALL"
[22:05] TheJH: .. process.title = "NOTEVILATALL"
[22:05] catb0t: 'NOTEVILATALL'
[22:05] TheJH: :D
[22:06] MooGoo: .. process.mainModule
[22:06] catb0t: { id: '.', exports: {}, parent: null, filename: '/home/wkmsg/jsirc/lib/fork_child.js', loaded: true, exited: false, children: [], paths: [ '/home/wkmsg/jsirc/lib/node_modules', '/home/wkmsg/jsirc/node ...
[22:06] TheJH: .. process.binding('child_process'); 1
[22:06] catb0t: 1
[22:06] MooGoo: interesting
[22:07] TheJH: .. process.binding('child_process').ChildProcess
[22:07] catb0t: [Function]
[22:07] CIA-54: libuv: 03Ryan Dahl 07master * re7eeacb 10/ src/unix/tty.c : unix: implement uv_tty_set_mode - http://git.io/5zcmIQ
[22:07] CIA-54: node: 03Ben Noordhuis 07master * r77e4abb 10/ deps/v8/tools/gyp/v8.gyp : v8: add platform-solaris.cc to gyp build (+7 more commits...) - http://git.io/MQcg-Q
[22:07] TheJH: .. proc = new (process.binding('child_process').ChildProcess)()
[22:07] catb0t: {}
[22:07] TheJH: .. proc.onexit = function(){}
[22:07] catb0t: [Function]
[22:08] sub_pop has joined the channel
[22:08] bnoordhuis: you guys still at it?
[22:08] stepheneb has joined the channel
[22:08] MooGoo: break time
[22:08] jerrysv: .. proc = new (process.binding('child_process').ChildProcess().spawn()
[22:08] catb0t: SyntaxError: Unexpected end of input
[22:08] jerrysv: .. proc = new (process.binding('child_process').ChildProcess().spawn();
[22:09] jerrysv: .. proc = new (process.binding('child_process').ChildProcess)().spawn();
[22:09] Nexxy: am I the only one that immediately thinks it's a euphemism every time I see "gyp"?
[22:09] jerrysv: .. 1
[22:09] TheJH: jerrysv, you have to set the onexit property or it won't work
[22:09] TheJH: jerrysv, also, the parameters need to be right
[22:09] jerrysv: TheJH: seems to have stopped answering
[22:09] TheJH: ACTION has node bot hacking experience :D
[22:09] kmiyashiro has joined the channel
[22:09] TheJH: .. 1
[22:10] Nexxy: TheJH, this is why we can't have nice things
[22:10] TheJH: .jsr
[22:10] jerrysv: Nexxy: didn't realize that we *had* nice things
[22:10] TheJH: jerrysv, :D
[22:10] Nexxy: ungrateful!
[22:10] CIA-54: node: 03Ryan Dahl 07master * r51f2e84 10/ (10 files in 5 dirs): Upgrade libuv to e7eeacb - http://git.io/0l4d0Q
[22:10] CIA-54: node: 03Ryan Dahl 07master * rcaaa59c 10/ (lib/net_uv.js src/pipe_wrap.cc src/pipe_wrap.h): 
[22:10] CIA-54: node: Wrap uv_pipe_open, implement net.Stream(fd);
[22:10] CIA-54: node: Fixes simple/test-child-process-ipc on unix. - http://git.io/qydYRA
[22:10] jerrysv: catb0t: you there?
[22:11] TheJH: .. process.exit()
[22:11] catb0t: there so settings can be pulled in to your choice of tools to run install npm any you
[22:11] TheJH: .jsr
[22:11] towski has joined the channel
[22:11] jerrysv: .. proc = new (process.binding('child_process').ChildProcess)().spawn();
[22:11] TheJH: hmm, he still talks handom stuff...
[22:11] bnoordhuis: Nexxy: but a euphemism for what?
[22:11] jerrysv: .. proc = new (process.binding('child_process').ChildProcess)().spawn('/bin/ls');
[22:11] Nexxy: bnoordhuis, traditionally "gyp" has been short for "gypsy"
[22:11] Nexxy: also used as a verb
[22:11] TheJH: .. 1+1
[22:12] TheJH: MooGoo, make it work again ;(
[22:12] jerrysv: hahahaha
[22:13] Nexxy: bnoordhuis, http://www.urbandictionary.com/define.php?term=gypped
[22:13] bnoordhuis: i live and learn
[22:13] jchris has joined the channel
[22:13] jerrysv: bnoordhuis: derogatory comment
[22:14] nuck: .. provess.binding('child_process').ChildProcess().spawn('npm','', process.cwd, [], false, -1, -1)
[22:14] TheJH: MooGoo, btw, why didn't you choose to launch seperate "v8" processes without any node stuff?
[22:14] nuck: .. process.binding('child_process').ChildProcess().spawn('npm','', process.cwd, [], false, -1, -1)
[22:14] nuck: :(
[22:14] TheJH: nuck, the bot seems to be no worky atm
[22:14] nuck: haha
[22:15] jerrysv: we broke it
[22:15] nuck: TheJH » Feel free to continue on v8bot_ 
[22:15] nuck: :)
[22:15] jerrysv: v8 proc = new (process.binding('child_process').ChildProcess)().spawn('/bin/ls');
[22:15] v8bot_: jerrysv: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[22:15] TheJH: nuck, ah, you're the guy who built it?
[22:15] jerrysv: v8: proc = new (process.binding('child_process').ChildProcess)().spawn('/bin/ls');
[22:15] v8bot_: jerrysv: ReferenceError: process is not defined
[22:15] nuck: TheJH » No, just the one who's hosting it :P
[22:15] nuck: v8bot was open-source
[22:15] TheJH: nuck, "was"?
[22:16] nuck: When the original v8bot disappeared, I grabbed the code and rehosted
[22:16] nuck: TheJH » Well, *is*
[22:16] gr-eg has joined the channel
[22:16] TheJH: ah, ok
[22:16] nuck: `v8 commands
[22:16] nuck: >_>
[22:16] nuck: `v commands
[22:16] v8bot_: nuck: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[22:16] nuck: Thheeeeere we go
[22:17] nakkor has joined the channel
[22:17] nuck:  about
[22:17] nuck: `v about
[22:17] v8bot_: nuck: v8bot is an IRC bot written entirely in Javascript using Google's v8 Javascript engine and Node.js.  Credits: eisd, Tim_Smart, gf3, MizardX, inimino.  Join us at #v8bot !
[22:17] nuck: there we are :D
[22:17] DennisRas has joined the channel
[22:18] TheJH: nuck, is that code from november 2010 ( https://github.com/eisd/v8bot ) still the newest stuff?
[22:18] nuck: TheJH » Pretty sure catb0t is a fork of v8bot.
[22:18] catb0t: Pretty domain hack TheJH
[22:19] TheJH: domains weren't involved, but thanks anyway, catb0t
[22:19] nuck: TheJH » It's what I'm using
[22:19] catb0t: involved in a seperate route domains
[22:20] Sorella has joined the channel
[22:21] pandark_ has joined the channel
[22:21] sonnym has joined the channel
[22:21] dseif has joined the channel
[22:25] bogomips has joined the channel
[22:25] btipling: node-waf wants to find wafadmin in ../lib/node but it's not there
[22:26] btipling: its in tools
[22:26] btipling: node/tools/../lib/node/wafadmin is what it adds to syspath
[22:26] btipling: but what it should add is node/tools/wafadmin
[22:26] bnoordhuis: btipling: what are you trying to build? node or an add-on?
[22:26] ph^ has joined the channel
[22:26] btipling: bnoordhuis: an add on
[22:27] btipling: using the node-waf in the source directory in tools/
[22:27] bnoordhuis: btipling: right, you need to install it first
[22:27] btipling: so that ~/Path/to/node/tools/node-waf
[22:27] sfoster has joined the channel
[22:27] btipling: I did install node
[22:28] bnoordhuis: then node-waf is in the same directory as the node binary
[22:28] btipling: hrm
[22:28] btipling: bnoordhuis: I don't see node-waf in /usr/bin where node is
[22:29] shipit has joined the channel
[22:29] bnoordhuis: btipling: you built node from source?
[22:29] btipling: yes
[22:29] btipling: although node was installed previously
[22:30] bnoordhuis: did you pass a --prefix param to the configure script?
[22:30] btipling: oh
[22:30] btipling: my bad
[22:30] bnoordhuis: if not, node lives in /usr/local/bin
[22:30] btipling: which node
[22:30] btipling: yeah
[22:30] boaz has joined the channel
[22:30] btipling: it's in /usr/local/bin
[22:30] TheJH: nuck, you're just running v0.4.8? how old!
[22:30] btipling: bnoordhuis: thanks!
[22:30] CoverSlide: ACTION keeps his node in /sbin
[22:30] TheJH: (of node)
[22:30] bnoordhuis: btipling: my pleasure :)
[22:31] CoverSlide: it's that importnat
[22:31] bnoordhuis: CoverSlide: is it statically linked?
[22:31] CoverSlide: ^ kidding
[22:32] TheJH: nuck, UID 1000, running in /home/xbmc/v8bot ? :D
[22:32] blissdev has joined the channel
[22:33] PhilK has joined the channel
[22:33] jmoyers has joined the channel
[22:34] matyr has joined the channel
[22:34] jhurliman has joined the channel
[22:34] alleluja has joined the channel
[22:34] alleluja: Hi all.
[22:34] dandean has joined the channel
[22:37] TheJH: nuck, ping
[22:37] stepheneb has joined the channel
[22:38] rmzg: So uh
[22:38] rmzg: Anyone have some code to use weld with express?
[22:38] alleluja: Hey guys if i write a function which is supposed to contain async calls in it... but suddenly in the middle of the function i decide to not do any async call but
[22:38] alleluja: call the callback immediately
[22:39] alleluja: should i use process.nexttick?
[22:39] alleluja: to avoid bugs and stuff?
[22:39] tmzt: wrap it in a control structure
[22:39] tmzt: so the rest of the stuff doesn't happen at all
[22:39] alleluja: i do
[22:39] alleluja: but can it happen that some code relies on my function to be async
[22:39] alleluja: and if i return and no async thing happend
[22:40] alleluja: will that cause me bugs?
[22:40] micheil has joined the channel
[22:40] alleluja: wachya think?
[22:40] AvianFlu_ has joined the channel
[22:40] micheil: `3rdEden: hmm.. ++maxSockets?
[22:40] `3rdEden: micheil node-http-proxy socket setting
[22:40] micheil: you're kidding me, right?
[22:40] `3rdEden: no.
[22:40] Lemon|mbp: is there a node.js alternative to to escapeshellarg() php function?
[22:41] rmzg: haha
[22:41] `3rdEden: micheil but isaacs bumped up the limit
[22:41] `3rdEden: pretty high
[22:41] JaKWaC has joined the channel
[22:42] `3rdEden: so it has a response time of 100/ 120ms again
[22:42] micheil: `3rdEden: no, you're kidding me that it has such a setting?
[22:43] enmand has joined the channel
[22:43] micheil: oh god. it does.
[22:43] `3rdEden: nope see https://github.com/nodejitsu/node-http-proxy
[22:43] micheil: why the hell would you make a load balancer have a setting of maximum connections?
[22:44] `3rdEden: idk
[22:44] `3rdEden: maybe it's set to Infinity by default
[22:44] `3rdEden: no
[22:44] `3rdEden: wait
[22:44] `3rdEden: WTF
[22:44] micheil: https://github.com/nodejitsu/node-http-proxy/blob/master/lib/node-http-proxy.js#L31
[22:44] `3rdEden: limit of 100
[22:44] micheil: yeah,.
[22:44] `3rdEden: wtffff
[22:44] micheil: that's like, "I know you just want an easy way to do something, so I'm just gonna troll the shit out of you"
[22:45] pifantastic_ has joined the channel
[22:45] jerrysv: 100 ?!
[22:45] chjj has joined the channel
[22:45] `3rdEden: I can't think of any reason why you want to limit it by default
[22:46] nuck: TheJH » Aye, that would be correct
[22:46] `3rdEden: optional, ok, great go do that.
[22:46] jerrysv: `3rdEden: i can, but not at 100
[22:46] nuck: TheJH » Is it primed? :3
[22:46] `3rdEden: sure jerrysv but it should just be Infinity by default
[22:46] micheil: hij1nx: thoughts ^
[22:46] `3rdEden: so when you deploy it you don't have to worry about it
[22:46] TheJH: nuck, just talking about this thing with the guys in #v8bot
[22:46] nuck: TheJH » haha nice
[22:46] Voxxit has joined the channel
[22:46] jerrysv: `3rdEden: i'd disagree with infinity by default, but still, something higher than 100 -- and lots of notes
[22:47] `3rdEden: why not? do you limit your HTTP server as well?
[22:48] jerrysv: `3rdEden: yes, to a high number -- so do you
[22:48] jerrysv: `3rdEden: as for why not, it helps from getting ddos'd
[22:48] matyr_ has joined the channel
[22:48] `3rdEden: the only limit my servers have is the amount of FD it can allocate
[22:49] `3rdEden: unless i'm miss understanding the whole http server
[22:49] jerrysv: `3rdEden: which is a limit
[22:49] `3rdEden: sure, but not set by node
[22:49] jerrysv: ulimit -a
[22:49] micheil: haha.
[22:49] jerrysv: `3rdEden: open files                      (-n) 256 
[22:49] jerrysv: but that's on my laptop
[22:49] micheil: I know why maxSockets is 1000
[22:49] micheil: erm
[22:49] micheil: 100
[22:50] micheil: it in turn sets this: https://github.com/joyent/node/blob/master/lib/http.js#L1135
[22:50] micheil: which in turn is defaulted to 5
[22:51] `3rdEden: =/
[22:51] jerrysv: `3rdEden: 4096 on my server in my colo space. we're much higher for the day-job infrastructure
[22:51] mjr_: 100 connections can be a pretty reasonable limit for some applications
[22:51] mjr_: Backpressure has to happen somewhere, and it might be expensive to push it to the backend
[22:52] micheil: but for an application that's doing websockets as well, that's just stupid.
[22:52] CoverSlide: ACTION wonders what happens when you hit Infinity sockets?
[22:52] `3rdEden: sure, but i'm having long lived connections
[22:53] jerrysv: CoverSlide: you go 88 mph
[22:53] dgathright has joined the channel
[22:53] CIA-54: node: 03Ben Noordhuis 07master * r7180327 10/ (deps/v8/build/common.gypi deps/v8/tools/gyp/v8-node.gyp): v8: move __C99FEATURES__=1 into common.gypi - http://git.io/FM1D2g
[22:54] Fabryz has left the channel
[22:56] Tobsn has joined the channel
[22:58] `3rdEden: jerrysv btw node already have buildin tools for throttling DoS attacks
[22:58] `3rdEden: Server.pause()
[22:58] `3rdEden: https://github.com/joyent/node/blob/v0.4/lib/net.js#L972-991
[22:59] adrianmg has joined the channel
[22:59] davidwalsh has joined the channel
[22:59] jerrysv: `3rdEden: i was meaning in general :)
[22:59] `3rdEden: ;D
[23:00] hackband has joined the channel
[23:00] matyr has joined the channel
[23:01] bnoordhuis: http://groups.google.com/group/nodejs/browse_thread/thread/c5220a5f97a4d7c0 <- i don't even
[23:01] gazumps has joined the channel
[23:02] sub_pop has joined the channel
[23:03] kiffness has joined the channel
[23:08] jhurliman has joined the channel
[23:09] ryanfitz has joined the channel
[23:09] k1ttty has joined the channel
[23:11] BillyBreen has joined the channel
[23:12] dgathright has joined the channel
[23:12] jerrysv: bnoordhuis: wow, just wow
[23:12] BillyBreen has left the channel
[23:12] jerrysv: though, to be fair, marak does come off rather uncouth at times :)
[23:12] nuck: jerrysv » It's because he's a New Yorker
[23:13] robhawkes has joined the channel
[23:14] normanrichards has joined the channel
[23:14] nakkor has joined the channel
[23:15] nuck: Oh dear God, when am I supposed to hash passwords?
[23:16] aho has joined the channel
[23:16] nuck: I *would* hash it as a setter, but with bcrypt, it isn't possible
[23:16] nuck: WTF
[23:16] nuck: Mongoose setters can't be async?
[23:17] Yuffster_work has joined the channel
[23:17] Lemon|mbp has joined the channel
[23:18] vicapow has joined the channel
[23:19] matyr has joined the channel
[23:19] yept has joined the channel
[23:20] dseif_ has joined the channel
[23:20] NegativeK has joined the channel
[23:21] vicapow: can anyone guess why connect works for my domain (ex, example.com ) but not my www and my domain ? (ex,  www.mydomain.com ) ?
[23:21] atmos: misconfiguration
[23:21] aho: dns
[23:22] aho: www.whatever is a subdomain, too
[23:22] atmos: if they resolve to the same ip then you prolly misconfigured your reverse proxy vhost configs, assuming you're not running node as root
[23:24] liveink has joined the channel
[23:24] Wa has joined the channel
[23:24] alexh has joined the channel
[23:26] vicapow: atmos: they resolve to the same ip
[23:26] vicapow: atmos: i have a proxy server running on port 80 forwarding request to my apps on diff ports
[23:26] atmos: then i'd bet it's the proxy server misconfigured
[23:26] vicapow: i have two entries for www.example.com and example.com
[23:27] davidbanham has joined the channel
[23:27] nuck: ewwwwwwwwww mongoose-auth uses SYNC BCRYPT
[23:27] vicapow: atmos: i dont understand what else there is to configure
[23:27] nuck: That's completely retarded
[23:27] vicapow: nuck: please dont be obnoxious
[23:28] tjholowaychuk: nuck bcrypt is supposed to be slow
[23:28] tjholowaychuk: that's a good thing
[23:28] atmos: eventually you'll get an auth'd callback
[23:28] a_suenami has joined the channel
[23:28] nuck: tjholowaychuk » No, because bcrypt will then block the entire server
[23:28] nuck: Async doesn't make it faster, it makes it able to take more connections while bcrypt runs
[23:29] atmos: vicapow: prolly the hostname option in your proxy
[23:29] nuck: And it's not the slowness on the Node layer that matters, it's the slowness in brute-forcing it
[23:29] r04r: http://node.minichan.org -- Check out other people their mice in realtime, woo
[23:29] nuck: You might as well use SHA-256 hashes
[23:29] vicapow: atmos: I'm just using node-http-proxy
[23:30] vicapow: the page being servered is exactly the same regardless of the www. there or not
[23:30] janne has joined the channel
[23:30] vicapow: could it be a configuration option with connect ?
[23:30] vicapow: cookies should be across domain, by default, no?
[23:30] tmcw has joined the channel
[23:30] Metal3d has joined the channel
[23:30] springmeyer has joined the channel
[23:31] nuck: tjholowaychuk » You can't tell me blocking the entire server just so one password can be hashed is a good thing :V
[23:31] atmos: vicapow: normally http headers indicate which backend should be hit, if it's always serving the wrong app then it's likely misconfigured
[23:31] tjholowaychuk: nuck no, i didnt really read anything but that bottom thing you wrote
[23:31] atmos: if you're curious about the scoping of your cookies, look at em in your browser
[23:32] atmos: or curl -vv http://mydomain.com
[23:32] SamWhited has joined the channel
[23:32] vicapow: atmos: what's not servering the wrong app? the header? which option?
[23:32] nuck: tjholowaychuk » haha I was saying that bcrypt is being used synchronously in mongoose-auth, and why the hell doesn't Mongoose have async setters?
[23:32] atmos: vicapow: i use nginx and vhosts
[23:32] atmos: no clue how to configure it in node-http-server, sorry
[23:33] vicapow: atmos: which header option
[23:34] atmos: do a console.log on the req and you should be able to see which ones your browser is sending
[23:34] atmos: in your connect app
[23:35] vicapow: let me try asking this way: how should I set a cookie that can be ready on every subdomain?
[23:35] vicapow: read*
[23:36] vicapow: nm
[23:36] vicapow: found it
[23:36] vicapow: http://senchalabs.github.com/connect/middleware-session.html
[23:37] mattg_ has joined the channel
[23:39] qbert_: aww
[23:39] qbert_: I just finished this, I could have helped
[23:39] dlr has joined the channel
[23:41] tmcw has joined the channel
[23:41] aaronj1335 has joined the channel
[23:43] dlr928291 has joined the channel
[23:43] mattg_ has left the channel
[23:44] brianseeders has joined the channel
[23:44] alexh has joined the channel
[23:44] unomi has joined the channel
[23:45] necrodearia has joined the channel
[23:47] CIA-54: libuv: 03isaacs 07master * r3c00d87 10/ (4 files in 4 dirs): 
[23:47] CIA-54: libuv: Add EEXIST handling
[23:47] CIA-54: libuv: Additionally, map ERROR_ALREADY_EXISTS to EEXIST on Windows. I'm a bit
[23:47] CIA-54: libuv: unsure about this mapping. Could a windows person confirm? - http://git.io/UrtYXw
[23:48] langworthy has joined the channel
[23:48] Voxxit1 has joined the channel
[23:49] vicapow: qbert_: want to share your input? I'm still kinda stuck
[23:51] KyleReese301 has joined the channel
[23:51] KyleReese301: hi
[23:52] qbert_: well for the cookie you need to set domain: '.mydomain.com' , then I was able to see everything.  In particular, I can now share session with my subdomains using express's vhost 
[23:52] qbert_: and connect-mongo
[23:53] rchavik has joined the channel
[23:54] KyleReese301: i got a PHP website with ajax and stuff, but now i want to implement a chatroom in the current site, and i was thinking of using Node.js to deal with the communication, is it normal to use PHP next to Node.js ?
[23:55] brainproxy: KyleReese301: sure, I think a number of PHP folks are trying such combos
[23:55] KyleReese301: i currently have 2 different servers running, (apache with PHP) and (IIS with Node.js), and i guess that's not the right way to do it?
[23:55] brainproxy: Rails folks too
[23:56] KyleReese301: or is it
[23:56] brainproxy: "the right way" is probably to be gauged in very practical terms per your needs and resources
[23:56] brainproxy: if you need to the two stacks to share state, then you're going to need to use some kind of "middle man" component
[23:56] vicapow: qbert_: I'm setting the domain for the cookie just like you and the connect docs say but i'm still having issues... debugging now
[23:57] brainproxy: e.g. redis
[23:57] aaronj1335 has joined the channel
[23:57] beriberikix has joined the channel
[23:58] KyleReese301: is it possible to run both PHP and Node.js on the same server and let the Node.js handle a request by sending it through to PHP and getting a response from PHP ? on the same server?
[23:58] beriberikix: Is there a way to make an http.request sync?
[23:59] vicapow: beriberikix: you decide to not use nodeJS
[23:59] brainproxy: beriberikix: no but you could use a tool like Step to help you with your async logic
[23:59] brainproxy: KyleReese301: sure, that should be possible
