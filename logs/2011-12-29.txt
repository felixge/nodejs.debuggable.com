[00:00] nicholasf: Im kind of curious as to whether you can viably write CS in a js-only team
[00:00] blueadept: so i'm bascially brute forcing coffeescript into my company
[00:00] nicholasf: the code differences would irk me if i was a js only guy
[00:00] nicholasf: haha, well it's a higher abstraction of js. There's a strong argument for it
[00:00] blueadept: i dont see what all the fuss is about
[00:00] cmr: I think coffeescript is pointless and ugly.
[00:01] blueadept: oh it is no ugly
[00:01] blueadept: that is just trollin right there
[00:01] cmr: No, that is called "personal preference"
[00:01] blueadept: meh
[00:01] nicholasf: cmr: if it's less verbose than javascript, how is it pointless?
[00:01] cmr: It's a bit better than perl
[00:01] blueadept: its indent based
[00:01] blueadept: every programming language should be indent based
[00:01] cmr: nicholasf: I already know javascript and don't mind it, I don't need abstraction
[00:01] cmr: blueadept: I'm a python guy, I can get that.
[00:01] nicholasf: cmr: but if you can be more effective with CS, shouldnt you use it?
[00:02] slickplaid: i tried it, didn't like it, went back
[00:02] k1ttty_ has joined the channel
[00:02] nicholasf: if Im paying $n an hour, and you are more productive with one tool than another, and it compiles to the same language ...
[00:02] dylukes has joined the channel
[00:02] dylukes: http://hipstergrammers.tumblr.com/
[00:02] blueadept: what i dont want to see is something like this " } } } } }" enclosures
[00:02] bnoordhuis: for me, the deal breaker with CS is the backward scoping rules
[00:02] nicholasf: it's only if that tool, being more productive, is less motivating for the team to use
[00:02] bnoordhuis: it's so 1970s
[00:02] blueadept: thats what i'm looking at right now, i can't figure out where stuff begins or ends really quickly
[00:03] blueadept: at least in CS you can tell where things begin and end real quickly but the about of tabs they're indented
[00:03] cclarke has joined the channel
[00:03] blueadept: by*
[00:04] nicholasf: bbiab
[00:04] blueadept: see i just fixed my issue
[00:04] nicholasf: ACTION goes out to buy coffee beans
[00:04] blueadept: i used the js to cs converter to make this horrid js file readable
[00:04] saati has joined the channel
[00:04] blueadept: and i quickly found out my problem
[00:04] blueadept: where as i've been staring at the orginal js for about 2 or 3 minutes
[00:04] MRdNk_ has joined the channel
[00:04] dylukes: http://27.media.tumblr.com/tumblr_lwvnp7ZToO1r95ui7o1_500.jpg
[00:04] dylukes: http://27.media.tumblr.com/tumblr_lwvn8xE2ye1r95ui7o1_500.jpg
[00:04] dylukes: > relevant?
[00:04] MRdNk_: While CoffeeScript might look nicer, seems slightly odd to have another layer over javascript.  Esp. considering the benefit of knowing pure js.
[00:05] dylukes: ACTION fails to see the benefit of knowing pure js.
[00:05] dylukes: ACTION it's all JIT'd into bytecode anyways.
[00:05] nrstott: i dont like how coffeescript does 'and' and 'or' instead of '&&' and '||' ... its not more readable.
[00:05] blueadept: ^ its not that per se
[00:05] blueadept: its the indent based structure
[00:05] nrstott: i like signiifcant whitespace
[00:05] nrstott: that's cool
[00:05] Sorella: nrstott, it doesn't do `instead'. It has both, afaik.
[00:06] dylukes: nrstott: except in a keyword based language, using symbols instead of keywords is inconsistent.
[00:06] cmr: blueadept: does your text editor not do beautifying for you?
[00:06] nrstott: well all the code i see uses 'and' and 'or' :)
[00:06] nrstott: and i really dont like that
[00:06] dylukes: nrstott: Significant whitespace should always be optional.
[00:06] Sorella: and true, yes, on; false, no, off.
[00:06] blueadept: cmr: it is
[00:06] blueadept: cmr: this js though is just bad
[00:06] josephmoniz has joined the channel
[00:06] bnoordhuis: you all miss the point, the main reason to hate cs is its variable scoping rules
[00:06] bnoordhuis: ^ qft
[00:07] slickplaid: yeah, f those variable scoping rules
[00:07] MRdNk_: In client-side land, I used to write with MooTools over the top, and write everything in that, then I realised it was abstracting so much of pure javascript that I was missing so much of the language.
[00:07] cclarke has joined the channel
[00:07] blueadept: there's about two things i'm trying to get my team on board with, coffeescript and mustach.js
[00:07] teadict: f is for fuck
[00:07] dylukes: bnoordhuis: What are the variable scoping rules?
[00:08] blueadept: got them sold on mustache.js, now working on trying them to see the coffeescript light
[00:08] dylukes: If you're talking about closures closing over their enclosing scope,
[00:08] dylukes: you're a moron.
[00:08] dylukes: Because that's how closures work.
[00:08] bnoordhuis: dylukes: there was a good blog post about it recently, let me try to dig it up
[00:08] blueadept: scope works just fine for me
[00:08] teadict: that's how they MUST work
[00:08] blueadept: whats the issue?
[00:08] teadict: moronity
[00:08] dylukes: Otherwise they wouldn't be closures :P.
[00:08] blueadept: you have -> and =>
[00:08] slickplaid: oy
[00:08] dylukes: Is one closure, the other lambda?
[00:08] dylukes: I'm guessing?
[00:08] MRdNk_: I've heard scoping has bigger issues in cs
[00:08] teadict: lambda is another concept
[00:08] slickplaid: trolls not have anything to do tonight?
[00:08] bnoordhuis: dylukes: http://lucumr.pocoo.org/2011/12/22/implicit-scoping-in-coffeescript/ <- this
[00:08] Sorella: blueadept, also, JS *is* more readable than CS, imho: https://lh6.googleusercontent.com/-qY2_3kw1eYE/TsJ4GqZ1R9I/AAAAAAAAAa0/IpLdtC7QXXU/s0/js.png
[00:09] Sorella: except CS gets lightweight function definitions.
[00:09] teadict: lol emacs
[00:09] blueadept: Sorella: hehe
[00:09] Sorella: I'm hipster, so I use both Emacs and ubuntu :3
[00:09] blueadept: thats good docu btw
[00:09] cmr: Sorella: how you liking unity?
[00:09] cclarke has joined the channel
[00:10] teadict: hipsters use ubuntu? since when? since gentoo is for desktop?
[00:10] Sorella: cmr, I don't use it, that was the part where I did a clean install of 11.10 and was a bit too lazy to configure Awesome for a few days.
[00:10] Sorella: didn't like it.
[00:10] mattgifford has joined the channel
[00:10] cmr: Ah.
[00:10] jamesbathgate: hipsters use redhat because it's ironic
[00:10] jgallen23 has joined the channel
[00:10] blueadept: ^
[00:10] cmr: I'm in the process of purging unity now :)
[00:11] cmr: Got sick of the bugs after a few days
[00:11] blueadept: actaully i think they use windows, that would be ironic
[00:11] teadict: cmr: I've gone 2D
[00:11] blueadept: like a ibm thinkbad with windows 95
[00:11] teadict: I'm happy now
[00:11] dylukes: Anyhow, I agree python's scoping is the nicest but
[00:11] cmr: I miss my xmonad
[00:11] blueadept: that would be completely hitpster
[00:11] Sorella: I'm trying e17 again. Personally, I prefer it to awesome, even though it doesn't have amazing tiling stuff.
[00:11] teadict: it's there sitting working alright till shell works
[00:11] dylukes: I don't see the problem with CS's method.
[00:11] blueadept: never had an issue with scope, infact if you write using a class structure its just fine
[00:11] bnoordhuis: dylukes: it's a nightmare to debug in any non-trivial program
[00:12] dylukes: I'll take your word.
[00:12] blueadept: its not a nightmare to debug
[00:12] teadict: dylukes: Python scoping is the strictest! that's not necessarily the nicest
[00:12] dylukes: It doesn't look like it though.
[00:12] Sorella: dylukes, Scheme is the nicest I've found, when you have closures.
[00:12] blueadept: if anything its easier to debug
[00:12] dylukes: teadict: Yes but it means no surprises. C style scoping works too.
[00:12] Sorella: Python's wasn't designed with functional programming and heavy-closure usage in mind.
[00:12] teadict: yes, Java means no surprises too
[00:12] dylukes: Sorella: That is true.
[00:12] bnoordhuis: blueadept: explain to me why
[00:12] tonymilne has joined the channel
[00:13] teadict: Sorella: true.. if it would, Javascript could not be here
[00:13] Sorella: The problem with JS is that an undeclared variable is not a syntax error, but a let definition at the top scope. But that's fixed in strict mode.
[00:13] bnoordhuis: in particular, explain to me why it's a good idea to have a global shadow a local
[00:13] dylukes: Ruby's scoping is much different.
[00:13] dylukes: This guy is just wrong in saying it's inspired.
[00:13] dylukes: Also he clearly hasn't used block arguments ^^.
[00:13] teadict: who?
[00:14] Gekz: Ruby and Python are very dissimilar
[00:14] dylukes: return/yield scoping remantics in Ruby are fun.
[00:14] Sorella: I think he's talking about mitsuhiko or whomever.
[00:14] Gekz: they kinda look similar, that's where the friendship ends.
[00:14] blueadept: bnoorduis: i can only speak for myself, but in my experience if you begin to create your objects using the basic class structure, you begin to pick up habits of structure your objects that makes it easier to debug..i dont know thats just my opinion
[00:14] dylukes: return in blocks should really be changed to "cont" or something.
[00:14] k1ttty has joined the channel
[00:14] teadict: Ruby isn't inspired? r u srs
[00:14] blueadept: i've been writing coffeescript for about a year
[00:14] dylukes: teadict: I said, CS scoping isn't inspired by ruby.
[00:14] teadict: oh
[00:14] teadict: well that changes EVERYTHING, I must sip my beer now
[00:14] Sorella: dylukes, didn't Jeremy say it was or something?
[00:15] dylukes: Let me guess ,PBR.
[00:15] dylukes: no it was this
[00:15] dylukes: http://lucumr.pocoo.org/2011/12/22/implicit-scoping-in-coffeescript/
[00:15] dylukes: what was just linked
[00:16] Sorella: ACTION is still waiting for people to write a Racket/Haskell mixed dialect that targets JS.
[00:16] dylukes: Racket and Haskell are nothing alike. What are you smoking.
[00:16] teadict: weed, you?
[00:16] teadict: wait, wat
[00:16] dylukes: also, it was abandoned, but http://www.haskell.org/haskellwiki/Yhc
[00:16] dylukes: YHC had a Javascript backend.
[00:16] broofa has joined the channel
[00:16] DTrejo has joined the channel
[00:17] Sorella: dylukes, I didn't say I wanted the semantics of both. Just the lightweight and beautiful syntax of Haskell, with first-class syntax extensibility and dynamic typing from Racket.
[00:17] teadict: that emacs screenshot made me want it
[00:17] dylukes: Sorella: Part of what allows Haskell to be so elegant is constraint.
[00:17] dylukes: Introduce a Racket level of extensibility and you'll necessitate a full borg-ing into a Lisp.
[00:18] dylukes: http://c2.com/cgi/wiki?LispIsTooPowerful
[00:18] Sorella: dylukes, you can have clean and elegant syntax with limited/contextual syntax extensibility.
[00:18] dylukes: Yes, limited.
[00:18] dylukes: But people will always want more >_>.
[00:18] CIA-109: node: 03Ben Noordhuis 07isolates2 * r59faab4 10/ vcbuild.bat : Make msbuild run in parallel. - http://git.io/1-1B0w
[00:18] CIA-109: node: 03Ben Noordhuis 07isolates2 * r2afd20b 10/ (5 files in 4 dirs): uv: upgrade to 85f6b79 - http://git.io/cXRClw
[00:18] CIA-109: node: 03Ben Noordhuis 07isolates2 * r9143b43 10/ (src/node_isolate.h src/ngx-queue.h): Include ngx-queue.h, fix Windows build. - http://git.io/aRrjgQ
[00:18] Sorella: Basically, everything would be a Lisp, but the syntax would be modelled to look like Haskell out of the box.
[00:18] dylukes: Generally speaking Template Haskell works for 99% of whatever you might want to do anyways :).
[00:19] Sorella: ACTION doesn't know Template Haskell
[00:19] dylukes: Lets you write quasiquoters to produce Haskell at compile time.
[00:19] Renegade001 has joined the channel
[00:19] dylukes: You can inline Alex/Happy compilers, write DSL's with total freedom, etc.
[00:19] dylukes: If you can write a parser for it, you can embed it.
[00:20] dylukes: for example
[00:20] dylukes: http://mainisusuallyafunction.blogspot.com/2011/10/shqq-embedding-shell-commands-in.html
[00:20] neurodrone has joined the channel
[00:20] dylukes: Here's an example of the shqq quasiquoter that lets you run shell commands a la ruby.
[00:21] dylukes: (I still think there should be a variant that returns a function from the argument types to an IO action... it'd be more flexible, but this is a good example anyways)
[00:21] dylukes: Theres one of the fun features of ruby, implemented within the language.
[00:21] dylukes: And you can always tell it's a quasiquoter because it's written [foo| ... |], and {-# LANGUAGE TemplateHaskell #-} is set.
[00:21] dylukes: Easy.
[00:22] dylukes: No need to introduce lisp.
[00:23] Sorella: Well, I'm not sure telling it's a quasiquoter is a good thing.
[00:25] MUILTR has joined the channel
[00:25] Sorella: teadict, you use Vi{m,}?
[00:26] teadict: yes.. or SciTE if I'm in desktopy-mode
[00:26] teadict: *mood
[00:26] dylukes: SciTE...?
[00:26] dylukes: Really?
[00:26] teadict: love it!
[00:26] dylukes: I used that when I was 10 to write Ruby.
[00:26] dylukes: :|
[00:26] teadict: well.. I got it customized somehow
[00:26] booo has joined the channel
[00:26] dylukes: It's a bit outdates.
[00:26] teadict: it's like those long term relationships that stick
[00:27] teadict: I do know lacks a lot
[00:27] dylukes: ACTION uses TextMate 2/Emacs 24 and XCode/Eclipse/Matlab for specific things.
[00:27] teadict: vim is default though
[00:27] cmr: ACTION uses vim/emacs
[00:28] teadict: SciTE is nice if you know LUA
[00:28] Sorella: ACTION still can't use Vim
[00:28] teadict: and take the time to extend stuffs
[00:28] Sorella: My hands could never get used to the Esc overload.
[00:28] bnoordhuis: there was no ruby when i was 10, maybe gw-basic :/
[00:28] bnoordhuis: ACTION feels old
[00:29] cmr: Sorella: I map esc to caps-lock
[00:29] teadict: also, SciTE is insanely fast
[00:29] Sorella: I map Ctrl to Caps
[00:29] jamesbathgate: ACTION uses vim/emacs only if there's not an IDE available
[00:29] Sorella: and Compose to Ctrl
[00:29] cmr: When I used emacs, I mapped ctrl to caps
[00:29] Sorella: jamesbathgate, you use an IDE for JS or more complex languages?
[00:30] Sorella: I don't see any advantage in using an IDE for JS or Python.
[00:30] cmr: I've always used vim or emacs for editing everything, after I left the windows world
[00:30] teadict: I see it for JS frameworks
[00:30] teadict: but I still don't use it
[00:30] dylukes: REPL's are nice.
[00:30] dylukes: For JS I usually just use the Webkit JS console for prodding and messing with code.
[00:30] chjj: vim is the best text editor in existence, im sorry
[00:31] teadict: here we go
[00:31] chjj: truly sorry
[00:31] teadict: we were doing alright!
[00:31] cmr: ACTION puts up his "End Text Editor Bigotry" sign
[00:31] teadict: why do you have to do that?
[00:31] xuser: editors wars!
[00:31] Sorella: ^
[00:31] xuser: emacs is superior but I prefer vim
[00:31] teadict: I use notepad, there.. war finished
[00:31] cmr: teadict: war finished, but lynch begins :P
[00:31] markdaws has joined the channel
[00:31] chjj: emacs is the greatest example of feature bloat
[00:31] cmr: chjj: you think vim isn't bloated?
[00:32] chjj: cmr: maybe with features, emacs has features almost irrelevant to editing though
[00:32] xuser: emacs for programming, vim for conf files
[00:32] Sorella: chjj, featuritis may or may not be a bad thing.
[00:32] teadict: xuser: that's a low punch dude
[00:32] cmr: chjj: Well yeah, emacs is an operating system
[00:32] cmr: :P
[00:32] chjj: vim may have its fair share of features, but it still has compile time flags for everything
[00:33] chjj: and at least all the features are relevant to editing
[00:33] Sorella: chjj, you do realise all those "non-editing related things" are mostly not in the core, right? Or are you just trolling? :3
[00:33] xuser: ;)
[00:33] jamesbathgate: if there's a jetbrains IDE for the language I'm using it
[00:33] chjj: Sorella: what isnt in core?
[00:33] dubenstein has joined the channel
[00:33] Sorella: chjj, most Emacs Lisp packages.
[00:34] xuser: by default emacs is much closer to an IDE than vim
[00:34] Sorella: Granted Tetris is in the standard distribution =/
[00:34] chjj: Sorella: i realize thats what you were referring to, but for example, isnt there a fully fledged file manager in emacs? i guess you could argue thats related to editing
[00:34] teadict: xuser: that's what's wrong with it
[00:34] Sorella: but it's a damn good feature (for the times you're bored)
[00:34] teadict: editors wars doesn't include emacs, IDEs wars do
[00:35] chjj: i think thats my problem, i dont want an IDE
[00:35] cmr: chjj++
[00:35] chjj: i dont want integration
[00:35] catb0t: chjj now has 1 beer
[00:35] chjj: i want a text editor, that edits text
[00:35] chjj: i dont want it to be a swiss army knife
[00:35] cmr: I don't work well with IDEs. I've tried most of the best and they just don't click well.
[00:35] teadict: because it takes too much time to learn how to use it well
[00:35] cmr: Although I must say, the jetbrains ones ARE really nice.
[00:36] dylukes: They're okay. I find Eclipse is a bit more responsive than IntelliJ in most cases.
[00:36] chjj: if i were a windows dev i wouldve pulled all my hair out by now dealing with IDE's
[00:36] TheJH: oh shit
[00:36] dylukes: IntelliJ's XML editor freezes and locks up
[00:36] dylukes: Eclipses just goes to super slow mode.
[00:36] dylukes: :P
[00:36] teadict: chjj: on windows IDEs work!
[00:36] dylukes: VS2010 actually is quite nice.
[00:36] dylukes: It works perfectly fine.
[00:36] TheJH: as the v8 team mostly only cares about client-side, fixing the hashdos thing is low-priority for them :O
[00:37] cmr: TheJH: What is a hashdo?
[00:37] ericmuyser has joined the channel
[00:37] Sorella: ACTION guesses a todo where to has been replaced by hash
[00:37] TheJH: cmr, http://www.youtube.com/watch?v=R2Cq3CLI6H8 - attack on nodejs mentioned at 40m
[00:38] TheJH: google didn't fix it in months
[00:38] cmr: TheJH: is that worth the whole hour or should I just jump ahead?
[00:39] TheJH: cmr, well, I'd say the explainations at the start are important, too
[00:39] wingie: if i want to have a shared library between my projects i could create a npm package .. but the downside is that that project can't be private, is that correct?
[00:39] chjj: dylukes: vs2010 may be a great ide, i dont know. i just reject the very concept of an ide
[00:40] TheJH: cmr, jump ahead as soon as they talk about vulnerable flatforms (at 19m or so)
[00:40] dylukes: ACTION shrugs. your call.
[00:40] TheJH: *platforms
[00:40] tomlion has joined the channel
[00:40] nickadeemus2002 has joined the channel
[00:40] cmr: TheJH: alright, thanks
[00:41] CIA-109: libuv: 03Ben Noordhuis 07master * r0db56ea 10/ src/win/thread.c : windows: implement uv_thread_self() - http://git.io/L9ReAA
[00:42] ericmuyser: "It's mathematically impossible your distributed application is not going to fuck up. Deal with it." - is that event relevant to the `halting problem`? @ http://blog.nodejitsu.com/fault-tolerant-applications-in-nodejs to me it seems under 100% ideal circumstances, your distributed system should 100% work, and that has nothing to do with determining if the script (in the case of turing, the entire machine) will halt or loop based u
[00:42] ericmuyser: arbitrary input. circumstances are never 100% ideal is the point. really has nothing to do with halting problem? maybe I'm misunderstanding though (did not read the articles)
[00:42] Sorella: wingie, you can have local packages, you don't need to upload them to npm. Just have a `package.json' laying around. then take a look at `npm link'
[00:42] idle-boy has joined the channel
[00:43] wingie: Sorella: I have the impression that npm link shouldn't be used in production
[00:43] dylukes: ericmuyser: Erlang++
[00:43] tomlion_ has joined the channel
[00:44] dylukes: And basically what that means is,
[00:44] dylukes: you're never going to get 100% ideal circumstances.
[00:44] dylukes: and you can never trust your distributed system to work 100%. (power outages and distributed hot swaps anyone?)
[00:44] dylukes: In other words,
[00:44] wingie: Sorella: also when i upload the app to Heroku it can't install my local package if its not uploaded/in package.json
[00:44] dylukes: that has abso-fucking-lutely zero to do with the Halting Problem :P.
[00:45] CIA-109: node: 03Ben Noordhuis 07isolates2 * r5427311 10/ deps/uv/src/win/thread.c : uv: upgrade to 0db56ea - http://git.io/JMg7rQ
[00:46] TypoAway has joined the channel
[00:46] NetRoY has joined the channel
[00:46] wingie: think i have to ask isaacs about how to solve this
[00:47] nickadeemus2002 has left the channel
[00:49] booo has joined the channel
[00:52] sdwrage has joined the channel
[00:53] tonymilne: Does anyone use socket.io and find that Google Chrome always has a long initial delay (and doesn't use web socket transport)?
[00:54] munro: tonymilne: what version of socket.io are you using?  try upgrading
[00:54] gui113 has joined the channel
[00:55] tonymilne: munro am on the latest (socket.io@0.8.7)
[00:56] StanlySoManly1 has joined the channel
[00:56] tokuz has joined the channel
[00:57] munro: tonymilne: dang, that was the reason why my node knockout game stopped working a few months later, heh
[00:57] fomatin_ has joined the channel
[00:57] satyr has joined the channel
[00:58] munro: what browser are you using? and are you using a proxy?  perhaps it's not forwarding websockets correctly
[00:58] devdazed has joined the channel
[00:58] tytsim has joined the channel
[00:58] tonymilne: Nah, no proxy at this point, though when i do proxy it still forwards them properly.
[00:59] munro: and are you using the client side socket.io.js that the socket.io server serves?
[00:59] tonymilne: yep.
[00:59] CIA-109: node: 03Ben Noordhuis 07master * r0c3b357 10/ (43 files in 11 dirs): Merge branch 'isolates2' (+32 more commits...) - http://git.io/yHfbXA
[00:59] tonymilne: I thought it was to do with the newer web socket implementations in browsers, but I just don't get it. :S Does anyone else experience the same problem?
[01:00] munro: I think it's time to bust out wireshark, heh
[01:00] TheJH: ryah, opinion? https://github.com/joyent/node/issues/2431
[01:01] TheJH: "patch v8 (yeeees, I know, policy is not to do it) to prevent Hash-DoS"
[01:02] bnoordhuis: TheJH: can you post a test case that demonstrates the behaviour?
[01:02] Typo has joined the channel
[01:02] perezd has joined the channel
[01:03] perezd: dscape: yt?
[01:03] TheJH: bnoordhuis, they didn't make a PoC, but I might be able to create one tomorrow based on what they said
[01:03] mikeal has joined the channel
[01:03] bnoordhuis: TheJH: cool, looking forward to it
[01:03] tytsim_ has joined the channel
[01:03] harthur has joined the channel
[01:04] gui113 has left the channel
[01:05] dubenstein has joined the channel
[01:05] CarterL has joined the channel
[01:07] eee_c has joined the channel
[01:07] kazupon has joined the channel
[01:09] tonymilne has joined the channel
[01:09] LeMike has joined the channel
[01:10] cjm has joined the channel
[01:12] jamesd2 has joined the channel
[01:13] armandop has joined the channel
[01:15] cognominal has joined the channel
[01:15] Juan77 has joined the channel
[01:17] a_suenami has joined the channel
[01:19] socketio\test\97 has joined the channel
[01:21] equark has joined the channel
[01:21] perezd: anyone in here working on the nano couch project ?
[01:22] deizel has joined the channel
[01:23] mikeal has joined the channel
[01:23] patcito_ has joined the channel
[01:26] deizel has left the channel
[01:27] subbyyy has joined the channel
[01:27] perezd: best way to generate a unique identifier in nodejs? doesn't need to be UUID qualit
[01:27] perezd: quality*
[01:28] tjfontaine: white board keeping track of everything you've previous identified
[01:28] perezd: perfect. thanks.
[01:30] chrisjpowers has joined the channel
[01:31] lzhang has joined the channel
[01:32] sdwrage has joined the channel
[01:34] TheJH: bnoordhuis, I already have something - it's not practicable for taking down a webservice, but it's the simplest kind of collision that hash function has
[01:34] mmalecki_: I somehow knew that TheJH will put together an exploit today
[01:34] TheJH: bnoordhuis, I can show you a 5-6 times increase in time needed to fill an object with 1000 values depending on what chars are in the keys
[01:34] TheJH: mmalecki_, :D
[01:35] mmalecki has joined the channel
[01:36] TheJH: bnoordhuis, you there? sent you some code in PM
[01:37] Tprice has joined the channel
[01:37] dylukes has left the channel
[01:37] mikeal has joined the channel
[01:37] Tprice:  process.binding('evals').NodeScript is the same as the vm mobule?
[01:38] TheJH: mmalecki, hmm, for 10000 inserts, it's much more than x10 :O
[01:39] hipsters_ has joined the channel
[01:41] mc: which is faster for file i/o, a writestream or fs.write?
[01:41] EyePulp has joined the channel
[01:42] packingtown has joined the channel
[01:43] mmalecki: TheJH: nice
[01:43] kn0where has joined the channel
[01:44] packingtown: yep
[01:44] TheJH: mmalecki, more like, not so nice. cause v8 team says patching this is low-prio :(
[01:44] Leemp2: Just a simple noob question.. when using node's assert format, what do you think would be the best way to test the existance of an error during a callback? I ask, because assert.throws() seems to be assert's method for handling failures, but that only accounts for thrown failures, not returned ones
[01:45] mmalecki: Leemp2: assert(!err)
[01:45] mmalecki: TheJH: how much would it take to exploit a remote webservice?
[01:45] Leemp2: mmalecki: Alright, so just checking the trueness of the error object
[01:45] mmalecki: Leemp2: yeah, but don't do that in real code
[01:46] mmalecki: Leemp2: I mean, only in tests
[01:46] TheJH: mmalecki, you mean, slow it down?
[01:47] mmalecki: TheJH: no, is this attack practical?
[01:47] Leemp2: mmalecki: Well, i was debating using assert.equals(error.message, 'My Error Message'). I don't really like it, but it is less of a catch-all than simply testing true/false on the error object
[01:47] EyePulp has joined the channel
[01:47] TheJH: mmalecki, I'd say it's practical. At least you can amplify your attacks impact on CPU usage a lot
[01:47] Leemp2: mmalecki: But i figured i'd drop a line here and see if there was a more readble way to do it than testing the object itself.. that is to say, it's clear what the intention of "assert.throws()" is
[01:48] mmalecki: Leemp2: assert(err instanceof Error) ?
[01:49] mmalecki: or assert(!...)
[01:49] Leemp2: Well they're both catch alls
[01:49] mmalecki: TheJH: I'd say, meh
[01:49] mmalecki: Leemp2: I'm afraid you have to test the message, then
[01:50] Leemp2: I'm generally not fond of the idea.. maybe it's my background though (I'm new to JS)
[01:50] nicholasf: anyone here using express.js? I want to discuss testing methods
[01:50] Leemp2: mmalecki: Righto. Thanks for discussing it with me :)
[01:50] mmalecki: Leemp2: it's pretty common, actually
[01:50] TheJH: mmalecki, "meh"?
[01:50] Leemp2: mmalecki: You mean catch-all's?
[01:51] mmalecki: Leemp2: yeah. or testing message
[01:51] Leemp2: I'm sure they are.. but man, they'll never look safe for me :s
[01:51] mmalecki: Leemp2: or you can add some properties to a new error
[01:51] Leemp2: Testing the message i'm ok with. It's not pretty, but it is less dangerous imo
[01:51] mmalecki: Leemp2: like var e = new Error(); e.subsystem = 'messaging'; callback(e)
[01:52] mmalecki: you'd do something like that in case of messaging subsystem fail
[01:52] mmalecki: let me show you an example
[01:52] mmalecki: TheJH: yeah, well, something like that
[01:52] andrewfff has joined the channel
[01:52] mmalecki: TheJH: set up some real-life project and try cracking it that way
[01:53] Leemp2: Yea i've been debating doing that too. Generally i've been debating doing a lot of things to the failure system, but most JS people slap me when i bring it up haha. So, i've been trying to forget my failure based methodologies .. a bit, at least
[01:53] TheJH: mmalecki, huh, crack? crack and DoS are pretty different
[01:53] mikeal has joined the channel
[01:53] ryanfitz has joined the channel
[01:54] pizthewiz: is it me or is node-oauth almost impossible to read/debug?
[01:54] mmalecki: Leemp2: https://github.com/nodejitsu/haibu/blob/8f10ede3196fe6d958b41642eb1df10d68fa4994/lib/haibu/core/spawner.js#L148-153
[01:55] mikeal has joined the channel
[01:55] mmalecki: TheJH: hm, isn't cracking a catch-all term for breaking a computer system?
[01:56] Leemp2: mmalecki: ty
[01:56] ger^kallisti_ has joined the channel
[01:56] TheJH: mmalecki, but not for DoS - I also wouldn't call DoS "break"
[01:56] mmalecki: Leemp2: my pleasure :)
[01:57] tenderloaf has left the channel
[01:57] Leemp2: Can't wait to get this first project done and have a few JS people look at it.. then watch as they rip me a new .. backside. :s
[01:57] mmalecki: TheJH: well, matter of naming, really
[01:57] TheJH: mmalecki, yes
[01:57] Leemp2: I can hear it now, "You're designing your apps like you're writing in C!" :s
[01:57] mmalecki: Leemp2: hah :). ping me when you're done with it, if I have time, I might take a look
[01:58] TheJH: mmalecki, anyway, not sure whether I'm clever enough to/want to spend so much time on finding more practical collisions
[01:58] Leemp2: mmalecki: It'll be a while. I'm taking the long road by implementing a lot of tools that are already done, simply to understand the merchanics of programming asynchronously .. sanely.
[01:58] mmalecki: Leemp2: good choice
[01:59] TheJH: mmalecki, also, what's unique about the collision I found is that I don't have to care about in which direction the string is hashed or what encoding it uses :D
[01:59] booo has joined the channel
[01:59] mmalecki: Leemp2: learning by doing is good
[01:59] mmalecki: I always start learning a new language by writing a project with it. no books, just google in case of any problems
[01:59] TheJH: mmalecki, but in exchange, I have to use one char more for each new collision
[01:59] Leemp2: mmalecki: While we're on the subject, what are your thoughts on event chaining ala node-seq? https://github.com/substack/node-seq
[02:00] Leemp2: Thus far, it's my personal favorite method (it was the first route i went, once i realized that i was starting to nest event dependencies)
[02:00] icewhite has joined the channel
[02:00] gigafied has joined the channel
[02:03] kmiyashiro has joined the channel
[02:04] jesusabdullah: seq is alright. If you like it, use it!
[02:04] TheJH: ryah, you're not here?
[02:04] macav has joined the channel
[02:05] macav has left the channel
[02:05] Leemp2: jesusabdullah: Well, the question had the intent to get the options of more seasoned individuals on the subject :). I may like many incorrect methodologies hehe :)
[02:05] jesusabdullah: sure
[02:05] jesusabdullah: For flow control I've used async
[02:06] Leemp2: I believe there is also the idea of using event emitters (Though i am only vaguely familiar with them)
[02:06] jesusabdullah: it's pretty obvious, which I appreciate
[02:06] jesusabdullah: EEs are handy
[02:06] flat has joined the channel
[02:06] jesusabdullah: It depends on the problem of course.
[02:06] Leemp2: Yea
[02:07] ryah: TheJH: im here
[02:07] ryah: TheJH: just ignoring you :)
[02:08] flat: "Error: write EPIPE" is the new way of saying "Error: Variable not defined" in some cases now, in 0.6.6. Good times! Which variable could it be?
[02:09] mmalecki: Leemp2: haven't played with it yet, I only used async
[02:11] raincole has joined the channel
[02:16] jgornick has joined the channel
[02:17] sdwrage has joined the channel
[02:20] josephmoniz has joined the channel
[02:21] mandric has joined the channel
[02:22] bobbuck has joined the channel
[02:27] mmalecki has joined the channel
[02:27] tdr has joined the channel
[02:30] disappearedng has joined the channel
[02:30] disappearedng: In socket.io is there like a browser id as opposed to socket.id? If the user refreshes the page a new socket will be generated
[02:32] k1ttty has joined the channel
[02:32] warz has joined the channel
[02:34] michaelhartau has joined the channel
[02:38] Renegade001 has joined the channel
[02:41] skm has joined the channel
[02:45] ger^kallisti: i just realized: quality of code is often influenced by quality and amount of beer :-O
[02:45] tjfontaine: bell curve
[02:45] tjfontaine: and/or economies of scale
[02:46] warz: finally, somebody else realizes this
[02:47] warz: you just have to know when youve reached the peak of the curve, beer count wise
[02:47] mmalecki: ger^kallisti++
[02:47] warz: and then throttle it there
[02:47] airportyh has joined the channel
[02:47] warz: a true jedi can maintain the ballmer peak for longer than usual
[02:48] warz: it takes practice and good music
[02:48] warz: and optionally something to code, if youre interested in that
[02:48] dec has joined the channel
[02:48] ger^kallisti: oh hell :D i just found out whats a ballmer peak. thats a solid base for my thoughts!
[02:48] elijah-mbp has joined the channel
[02:48] ismell has joined the channel
[02:49] ParadoxQuine has joined the channel
[02:49] warz: http://www.youtube.com/watch?v=8To-6VIJZRE
[02:50] ger^kallisti: "If you can convince your boss that this is all based on legitimate science… There will be no reason to ever come back sober from lunch again."
[02:50] ger^kallisti: heck, ballmer is spooky
[02:51] ger^kallisti: its written the ballmer peak is between 0.129% and 0.138%
[02:51] ger^kallisti: i think his peak is *= 10
[02:52] warz: lol
[02:52] ger^kallisti: try to keep that level!
[02:52] perezd: is process.logging an actual thing in node?
[02:52] perezd: or is someone polluting the global object
[02:53] MrMaksimize has joined the channel
[02:54] abjorn has joined the channel
[02:55] mmalecki: perezd: undefined here
[02:56] ossareh has joined the channel
[02:56] flat has joined the channel
[02:57] _unary has joined the channel
[02:57] Vennril has joined the channel
[02:57] syoyo_ has joined the channel
[02:58] perezd: excellent, global variables ftw
[02:58] amigojapan has joined the channel
[02:59] mmalecki: perezd: what modules are you using?
[02:59] perezd: mikeal's request 
[02:59] perezd: appears to expect that
[02:59] perezd: as a way to introduce logging into itself
[02:59] mmalecki: perezd: link?
[02:59] mmalecki: perezd: lol, sounds stupid
[02:59] Dmitrijus: :)
[02:59] perezd: https://github.com/mikeal/request/blob/master/main.js#L31
[03:00] mmalecki: wtf.
[03:00] perezd: yeah
[03:00] perezd: seems sort of retarded
[03:00] perezd: I am proposing this for NanoCouch project (uses request)
[03:00] perezd: https://gist.github.com/d9eb8b0046fe7e29f526
[03:00] c4milo1 has joined the channel
[03:01] dec: is the cluster module at http://learnboost.github.com/cluster different from the builtin 'cluster' (at least in 0.6.6)?
[03:02] enmand has joined the channel
[03:03] JakeyChan has joined the channel
[03:03] _unary has joined the channel
[03:03] abjorn: yes it is @ dec
[03:04] abjorn: built in cluster is basically just forking, this is specifically aimed at clustering web servers
[03:04] abjorn: looks like anyways
[03:04] tommyvyo has joined the channel
[03:04] abjorn: srs i cannot find a decent fuckin postgresql lib for node :|
[03:04] Zyclops1 has joined the channel
[03:05] Zyclops1: ohh lots of users
[03:05] Zyclops1: ok
[03:05] abjorn: 666
[03:05] dec: abjorn: that module I linked is just a little bit of sugar on top of forking... but I can't get it to freakin' work
[03:05] abjorn: users
[03:05] ger^kallisti: the number of the beast
[03:06] Shaunzie: im a beast o.o
[03:06] abjorn: quick someone leave before shit happens
[03:07] Zyclops1: ok.. ah we're about to build a large system which we really want to scale up to 100,000s of users involving data transferring, push messaging using web sockets etc.  The entire client side is written in javascript (which we've almost finished) with local storage.  Now we're approaching the need to start building the server which will manage all the syncing etc between devices.  my team knows javascript and ruby ver
[03:07] ChrisMatthieu has joined the channel
[03:07] neoesque has joined the channel
[03:08] Zyclops1: Disadvantages: don't know how big the node.js communitiy is and weather it will have long term support (although a 668 in the chat room is promising), don't know what kinda issues we will come across in coding server side js
[03:08] Skaag has joined the channel
[03:08] ger^kallisti: can't wait till this channel reaches 1337 members
[03:08] Shaunzie: Zyclops1: memory leaks? :D
[03:08] equark has joined the channel
[03:08] ChrisMatthieu has joined the channel
[03:09] c4milo1: Zyclops1: race conditions? 
[03:09] c4milo1: Zyclops1: community is pretty big and active 
[03:09] Zyclops1: shaunzie:   memory leaks in what? ruby or node?
[03:09] ger^kallisti: constantly growing
[03:10] abjorn: Zyclops1: Expect bugs and having to keep up with changes until 1.0
[03:10] abjorn: the community is pretty damn large
[03:10] Shaunzie: Zyclops1: node. its pretty experimental still
[03:10] Zyclops1: ahh :(
[03:10] abjorn: I work tech support at a hosting company and you'd be surprised how many people come in asking if we support node.js
[03:10] Zyclops1: so for a production system which you want to service large amount of people
[03:10] abjorn: we don't, but you know
[03:10] Zyclops1: it might not be a good fit
[03:10] abjorn: it's the thought that counts
[03:11] abjorn: not yet, I'd say, zyclops1
[03:11] abjorn: I wouldn't build a company on a site built in node.js yet
[03:11] ger^kallisti: anyone tried a large scaled application with node?
[03:11] Zyclops1: pity.. that pretty much just leaves us on ruby then
[03:11] Darrow has joined the channel
[03:12] yorick: http://www.ocert.org/advisories/ocert-2011-003.html <-- node is vulnerable as well.
[03:13] ger^kallisti: hash?
[03:13] ger^kallisti: yea hash :)
[03:13] abjorn: ain't nothing wrong wit sum ruby on rails, zyclops1
[03:13] yorick: yeah v8 object hashing
[03:13] JaKWaC has joined the channel
[03:13] drudge23 has joined the channel
[03:13] Darrow: This might be a stupid question, but what does the -d flag for npm do?
[03:13] Dmitrijus: Zyclops1: well, by the time you finished developing, most likely node will be quite stable and well supported :)
[03:14] Zyclops1: dmitrijus: we have the next 3 years of development mapped out
[03:14] Zyclops1: so you'd be right :D
[03:14] Zyclops1: haha
[03:14] cognominal_ has joined the channel
[03:14] Dmitrijus: Zyclops1: well, i think sometimes you just need to go for something new :)
[03:15] Zyclops1: yeah..  the issue is though, i've got to be really careful about not shooting my company in the foot
[03:15] abjorn: well then turn the safety on
[03:15] Zyclops1: for example some basic choices…. amazon simpledb + ec2.. very easy to scale.. not choice.. is opening australian and chinese data centres soon.
[03:15] Dmitrijus: Zyclops1: well, just try, if it isn't working out, don't be afraid drop it :)
[03:16] abjorn: Well, you can always push node instances behind an apache/nginx layer
[03:16] abjorn: for reliability
[03:16] fomatin has left the channel
[03:16] Zyclops1: dmitrijus: yeah but we don't want to recode 100'000 lines of javacript into ruby
[03:16] Dmitrijus: Zyclops1: yeah true :)
[03:16] Zyclops1: abjorn: yeah .. i'd want to use nginx for the file transfers
[03:16] abjorn: Zyclops1: That's why my node apps tend to be mostly front end - my back ends tends to be mostly just talking to the database, easy to port to something else
[03:17] Zyclops1: front end?
[03:17] abjorn: on the browser end
[03:17] abjorn: handle all the heavy lifting there
[03:17] Zyclops1: front end i always think of in the browser
[03:17] abjorn: then again I have a soft spot for single page applications so
[03:18] Zyclops1: browser <— talking to the browser <—database
[03:18] abjorn: basically
[03:18] abjorn: I kinda like couchdb for that reason. I don't even need to code a backend, really lol
[03:18] Zyclops1: browser <- server <- db  (with some loadbalancers and static serving stuff stuck in there)
[03:18] Zyclops1: abjorn: what about for processing and syncing and security?
[03:18] abjorn: well it all depends on what you're doing
[03:19] Zyclops1: revolutionising education :)
[03:19] abjorn: It'd be easier to advise you if I knew more about the app
[03:20] Zyclops1: ah basically we're making application for studying running on phones tablets computers etc, with student teacher interaction
[03:20] Zyclops1: and a massive collaborative wikipedia style content creation
[03:20] Dmitrijus: :)
[03:21] CarterL: google wave?
[03:21] Zyclops1: not really
[03:21] Dmitrijus: couchdb is nice, has it's awesome uses, but for most cases it just too damn slow
[03:21] Zyclops1: it's targeted at learning
[03:21] Zyclops1: basically imagine really smart textbooks
[03:21] CarterL: no i mean, use parts of google wave
[03:21] Zyclops1: that the teacher knows what you've learnt
[03:21] disappearedng: Hey I find server side to be lacking in some basic functions like .keys() or .values() Aside from jquery, any recommendations for a server side lib to patch raw js to be more like python or ruby? 
[03:21] Zyclops1: carterL: the letter by letter stuff we don't need
[03:22] ger^kallisti: you guys know about this? https://github.com/Pita/etherpad-lite
[03:22] Zyclops1: cartelL: we've got a git style conflict resolution thingy planned
[03:22] Dmitrijus: disappearedng: google for underscore
[03:22] CarterL: ahh
[03:22] CarterL: Zyclops1: nice
[03:22] abjorn: Dmitrijus: Eh, in a read heavy application, yeah, but in it's own niches it's really performant
[03:22] disappearedng: underscore? ok sure no problem, any other recommendations? 
[03:22] Zyclops1: http://beta.etherpad.org/p/testing
[03:23] joshfinnie has joined the channel
[03:24] abjorn: Zyclops1: Yeah that's probably something you'd want a lot of work done on the server end then, I guess
[03:24] abjorn: idk sounds like something RoR would be good for
[03:25] MatthewS has joined the channel
[03:26] ger^kallisti: everyone loves etherpad :)
[03:26] Dmitrijus: yep!
[03:28] mike5w3c has joined the channel
[03:29] ger^kallisti: ough
[03:29] ger^kallisti: disco
[03:30] ossareh has joined the channel
[03:30] JakeyChan has joined the channel
[03:31] ger^kallisti: feel like I'm loosing my ballmer peak
[03:32] Me1000 has joined the channel
[03:32] deeprogram has joined the channel
[03:33] deeprogram has joined the channel
[03:36] boehm has joined the channel
[03:36] Me1000 has joined the channel
[03:37] hemanth has joined the channel
[03:37] MatthewS has joined the channel
[03:38] fmarier has joined the channel
[03:41] fmarier: I've compiled node from git and installed it in ~/local but I can't find any documentation regarding the best way to install node-waf
[03:41] bitwalker has joined the channel
[03:41] blueadept has joined the channel
[03:42] fmarier: It's sitting in tools/ but a simple copy to ~/local/bin/ doesn't work since it wants to import a few python modules
[03:44] hemanth: fmarier, maybe create a symbolic link at ~/bin/python that pointed to the right version
[03:45] gavin_huang has joined the channel
[03:45] fmarier: hemanth: do you mean this? ~/bin/python/node-waf -> ~/git/node/tools/node-waf
[03:46] kejun has joined the channel
[03:46] meandi7 has joined the channel
[03:47] Zyclops1 has left the channel
[03:47] hemanth: yup, check if the python you are running is the same version where the node-waf is 
[03:48] hemanth: WAF=/usr/bin/python  tools/waf-light
[03:49] andrewfff has joined the channel
[03:49] jaequery has joined the channel
[03:51] jmmills: Is the correct place to ask questions on express, or do they have their own irc channel?
[03:51] willwh: #express
[03:52] jmmills: thanks
[03:55] MatthewS has joined the channel
[03:56] fmarier: hemanth: the only way i've been able to get node-waf to do something is to symlink ~/local/bin/node-waf -> ~/git/node/tools/node-waf and then add ~/git/node/tools/wafadmin to my PYTHONPATH environment variable, but i'm sure that's not the best way to do it
[03:56] fmarier: and the only reason I need node-waf is to get "npm install bigint" to work
[03:56] hemanth: ^_^
[03:57] djbell has joined the channel
[03:58] abjorn has left the channel
[03:58] flat has left the channel
[04:01] deeprogram has joined the channel
[04:02] ger^kallisti: ++[[]][+[]]+[+[]]
[04:03] dexter_e has joined the channel
[04:08] skm has joined the channel
[04:09] ChrisMatthieu has joined the channel
[04:09] bemson has joined the channel
[04:11] bemson: hey folks - I wrote a platform I'd like to publish as an npm module
[04:11] bemson: however it has plugins, one of which is the core use of the platform
[04:12] bemson: ack, I'm dizzy - sorry to be confusing here
[04:12] MrMaksimize has joined the channel
[04:13] bemson: Would it make sense to publish three npm modules? One of which represents the other two npm modules?
[04:13] bemson: Sorta of like a convenience module?
[04:13] devongovett has joined the channel
[04:16] luoluoluo has joined the channel
[04:19] meso has joined the channel
[04:20] kejun has joined the channel
[04:20] barny_e has joined the channel
[04:24] flip_digits has joined the channel
[04:26] guntha has joined the channel
[04:28] kickingvegas has joined the channel
[04:28] isaacs has joined the channel
[04:28] meso_ has joined the channel
[04:30] deeprogram_ has joined the channel
[04:32] ChrisMatthieu has joined the channel
[04:32] isaacs: JasonSmith: hey, you around?
[04:32] JasonSmith: isaacs: Weird, I was just thinking about you
[04:32] isaacs: aww
[04:32] JasonSmith: What's the word?
[04:33] isaacs: so, the easy solution with the _users db?
[04:33] isaacs: not gonna work
[04:33] isaacs: i turned off those routes, just to see what the effect would be.  like an idiot, forgot about the few places where npm actually needs to fetch that record.
[04:33] JasonSmith: oh, okay. I have a staging server ready to rock
[04:33] JasonSmith: So you can test better
[04:34] isaacs: yeah, i think we've only got a few more months of being able to get away wiht this live user testing approach
[04:34] JasonSmith: If NPM needs to fetch that record then write-only, as the name implies won't work well
[04:34] isaacs: right
[04:35] kazupon has joined the channel
[04:35] strevat_ has joined the channel
[04:35] JasonSmith: what does npm need to know from _users?
[04:35] isaacs: if there was a way to get the record for ME, but only with my creds, then we could work around that
[04:36] isaacs: the other case is that you can do `npm owner add jhs blah` to add the jhs user as an owner to the blah package.
[04:36] isaacs: and that needs to get the email address
[04:36] JasonSmith: Well, if you twist my arm I could implement phase 2 of the write-only patch: _show functions only
[04:36] isaacs: right, so we could have a _show that gets you the username, email address, and _rev
[04:36] isaacs: but not the password hash or salt
[04:36] Shaunzie: *sigh* I wish I hadn't upgraded to 0.6.6 -.-
[04:36] Shaunzie: f
[04:36] JasonSmith: Okay, so is leaking email addresses not a concern?
[04:37] JasonSmith: Is it just password cracking that is a concern?
[04:37] isaacs: no, the email address you use as an owner of an npm package is shared with the world.
[04:37] dubenstein has joined the channel
[04:37] isaacs: if you want to use it to distribute your code to other users, you must supply them a way to get in touch with you
[04:37] JasonSmith: Because what CouchDB really needs is shadow passwords. Couch did the exact same thing Unix did and shadow passwords seemed to close the book on this mess
[04:38] isaacs: JasonSmith: +1
[04:38] isaacs: JasonSmith++
[04:38] catb0t: JasonSmith now has 1 beer
[04:38] isaacs: catb0t really needs to interpret apache-style voting for beers ;)
[04:38] catb0t: apachestyle interpret
[04:38] JasonSmith: isaacs: So, another stopgap to think about is, the 1.2 branch has the bcrypt or whatever implementation
[04:38] JasonSmith: where it's computationally expensive to hash a password string, so logging in once is no problem, but cracking is infeasible
[04:39] killing-joke: i don't see an issue at googlecode about http://www.ocert.org/advisories/ocert-2011-003.html
[04:39] CarterL has joined the channel
[04:39] isaacs: will that mean that npm will have to bcrypt the password to log in?
[04:39] isaacs: or no, that'll just be done on the server
[04:39] isaacs: still just user:pass basic auth?
[04:40] JasonSmith: Definitely basic auth, but yes it may require a new hashing algorithm
[04:40] fangel has joined the channel
[04:40] JasonSmith: I haven't read the patch. I tend to catch up with the branch as couch comes closer to release
[04:41] killing-joke: geronimo/tomcat/glassfish/jetty etc are listed, as is rack. node is not on the list.
[04:41] killing-joke: has the hash collision DoS already been fixed in V8?
[04:42] isaacs: JasonSmith: bcrypt hashing would make the situation better.  but, still, anything that relies on computational expense is going to be only a partial solution.
[04:43] isaacs: JasonSmith: really, the salt and hash have to be hidden.
[04:43] JasonSmith: isaacs: yeah, the idea is every 18 months you just bump up the "cycles" integer by 1, or 1 bit, or whatever it is
[04:43] isaacs: bcrypt would be good because hiding eventually fails.
[04:43] hughfdjackson has joined the channel
[04:44] JasonSmith: FWIW the guy who like thought of and implemented that (IIRC an OpenBSD hacker) chimed in on that thread
[04:44] JasonSmith: And I forget what he said but I remember it was not "you are all dumb"
[04:44] isaacs: hehe
[04:44] JasonSmith: so there is a lower limit to the fail
[04:44] isaacs: that's pretty unusual, then
[04:44] isaacs: from a bsd security hacker
[04:44] bemson: Would it make sense to publish three npm modules, where one is a bundle of the other two?
[04:44] bemson: I have a platform which has a recommended config, so a separate npm would be a convenience
[04:44] isaacs: bemson: no reason why not.
[04:45] isaacs: bemson: try it.  if it sucks, unpublish em and do it a different way.
[04:45] bemson: isaacs: great, that's what I needed to hear! :-)
[04:46] JasonSmith: isaacs: I think I didn't mention, my write-only patch now conflicts with couch which is why I didn't just roll that out immediately
[04:46] aroman has joined the channel
[04:46] dubenstein has joined the channel
[04:46] JasonSmith: as I said, we can run any git tag in minutes, but of course that's not the hard part. The hard part is resolving conflicts, testing, and then tagging
[04:46] OmidRaha has joined the channel
[04:46] OmidRaha has joined the channel
[04:47] bulatshakirzyano has joined the channel
[04:47] gf3: isaacs: is there a way to run the npmjs www app continuously, and not have to push it to couch after each change?
[04:47] isaacs: gf3: i think couchapp has some kind of --sync flag
[04:47] isaacs: gf3: which will push to couch after each change for you automatically in the background
[04:48] joshfinnie has joined the channel
[04:48] JasonSmith: I have made a lot of progress on static+ /cc isaacs gf3
[04:48] JasonSmith: Should be able to make a demo npmjs site this weekend
[04:48] Squeese has joined the channel
[04:48] JasonSmith: over 100 passing tests
[04:50] Mortchek has joined the channel
[04:50] tilgovi has joined the channel
[04:50] tilgovi has joined the channel
[04:50] isaacs: sweet!
[04:50] gf3: JasonSmith: what is static+?
[04:51] dubenstein has joined the channel
[04:51] JasonSmith: gf3: You give it a template, and a couch database and it spits out a static web site with one page per document (roughly)
[04:51] gf3: JasonSmith: oh neat
[04:52] JasonSmith: Then it follows the _changes feeds and refreshes your site as documents get updated
[04:52] deeprogram has joined the channel
[04:52] plantain has joined the channel
[04:55] gf3: isaacs: I kinda like the way 'npm' looks in Sansita One
[04:55] gf3: http://www.google.com/webfonts#UsePlace:use/Collection:Permanent+Marker|Pacifico|Patua+One|Sansita+One
[04:55] JasonSmith: Okay, still looking for the code but it uses PBKDF2
[04:56] kmiyashiro has joined the channel
[04:56] isaacs: gf3: we're going to get some sponsored designer attention soon.
[04:56] Shaunzie has left the channel
[04:56] gf3: isaacs: I'm working on a design right now
[04:57] guybrush: killing-joke: they say the google-team is still working on the issue http://www.youtube.com/watch?v=R2Cq3CLI6H8&feature=youtu.be#t=40m28s -- ticket #892388802
[04:57] gf3: isaacs: I can make pretty things: http://gf3.ca
[04:58] andrewfff has joined the channel
[04:58] isaacs: gf3: i'm sure.
[04:59] gf3: isaacs: should I continue?
[04:59] isaacs: gf3: if it's fun :)
[04:59] isaacs: gf3: honestly, i'm probably going to go with the stuff that chris glass comes up with
[04:59] isaacs: gf3: he's also doing the node homepage, documentation, etc.
[04:59] JaKWaC has joined the channel
[04:59] dubenstein has joined the channel
[04:59] isaacs: gf3: and we've got some history with him.  he's easy to work with, etc.
[04:59] isaacs: not that you would'nt be.
[05:00] isaacs: but like, it's his job to do this.
[05:00] isaacs: :)
[05:00] gf3: isaacs: cool, no worries
[05:00] gf3: anyone need a search site?
[05:00] gf3: /lol
[05:00] isaacs: we will still good ideas from anywhere, though :)
[05:00] isaacs: *steal
[05:01] JasonSmith: isaacs: Good news and bad news
[05:01] JasonSmith: Good news is you don't have to calculate the hash client-side. Bad news is its not merged yet
[05:01] JasonSmith: But you just send the plaintext password
[05:01] isaacs: that's cool
[05:03] JasonSmith: what is your timeline? If I help out on that patch it might get merged into trunk soon and I could backport it. Perhaps a week or two to allow time for bikeshedding and complaining
[05:03] tenderlo_ has joined the channel
[05:04] isaacs: JasonSmith: write-only with _show support would be much more helpful
[05:04] isaacs: bcrypt is a nice to have.
[05:04] JasonSmith: write-only and _show-only:
[05:04] JasonSmith: Pro: I could do it entirely myself
[05:05] JasonSmith: Con: It is more controversial and less likely to get into mainstream couch as quickly or without changes
[05:05] fomatin has joined the channel
[05:05] fomatin: hello
[05:05] isaacs: JasonSmith: another option would be just putting a proxy in front of the couchapp.  but, of course, that's dumb.
[05:06] fomatin: does anyone know how to do error handling in expressjs?
[05:06] JasonSmith: isaacs: I guess I'm still not clear on the problem. If the problem is only password cracking, then PBKDF2 would solve that right? The good thing about PBKDF2 is that a couchdb committer already wrote it
[05:06] JasonSmith: So, just some pretty-pleasing to get people to review it and merge it
[05:06] admc has joined the channel
[05:07] sdwrage has joined the channel
[05:07] isaacs: i'm not convinced that pbkdf2 is not crackable.
[05:07] JasonSmith: right
[05:07] isaacs: but, of course, it's a lot *less* crackable than md5
[05:07] isaacs: that much we know;
[05:08] JasonSmith: I might raise an economic argument now, like what are the resources of an NPM attacker, vs. say the resources of a DOD attacker
[05:08] JasonSmith: But I won't. Or did I?
[05:08] isaacs: hahah
[05:09] isaacs: right, so, that's why what we have now has been fine so far.
[05:09] JasonSmith: So, if you want _update only that's totally doable
[05:09] isaacs: i see, so i could have an _update that makes you not need the _rev?
[05:09] JasonSmith: The risk is, first of all, NPM won't *completely* be 100% couchdb compatible until that's all merged in
[05:09] bradleymeck has joined the channel
[05:09] isaacs: right
[05:10] isaacs: pbkdf2 clearly looks like the cheaper path.
[05:10] isaacs: (another economic argument)
[05:10] JasonSmith: Actually you don't need the _rev for update functions already. Couch looks up the document and passes that to the function
[05:10] dubenstein has joined the channel
[05:11] JasonSmith: I keep thinking my original thought. Really smart people struggled with this for a long time in Unix and they formed a consensus around shadow passwords
[05:12] isaacs: yeah.
[05:12] isaacs: that's really what i want
[05:12] isaacs: keep the hash and salt out of view
[05:13] JasonSmith: Yeah, if you are not admin it's just an "x"
[05:13] isaacs: making the hash *better* is of course great.
[05:13] isaacs: but it's just a bigger bandaid
[05:13] JasonSmith: One can argument that it's missing the point
[05:14] isaacs: yes, that is what i'm argumenting ;)
[05:15] JasonSmith: Are you harrassmenting me?
[05:16] isaacs: don't accidentally the grammars
[05:17] JasonSmith: Man I have literally changed my mind based on your spiel about "literally"
[05:17] JasonSmith: Now I struggle with the force of habit
[05:18] JasonSmith: isaacs: Okay, to conclude the discussion, I will email and ask around for the best direction for password security and follow up ASAP
[05:18] JasonSmith: Maybe I can get some momentum behind this shadow password idea
[05:18] dubenstein has joined the channel
[05:19] MUILTR has joined the channel
[05:21] fomatin: hey isaacs
[05:21] fomatin: do you use express?
[05:22] JasonSmith: isaacs: Final note. PBKDF was invented by RSA. You got some balls on you to second-guess it so casually. Just saying
[05:22] isaacs: JasonSmith: hahah
[05:22] isaacs: JasonSmith: it's a principled stance.
[05:23] chjj has joined the channel
[05:23] isaacs: JasonSmith: pbkdf is a "this will be compromised, so minimize the damage" approach to security.
[05:23] isaacs: and that's great.
[05:23] isaacs: but also, try not to get compromised.
[05:23] isaacs: put the wallet in a really nice safe, but also lock the front door.
[05:23] JasonSmith: The buzzword-compatible label for your argument is "defense in depth"
[05:23] dubenstein has joined the channel
[05:25] kickingvegas: JasonSmith: jumping in late to this password thread, but to play Devil's advocate, RockYou stored their passwords in the clear and even after that was revealed, it wasn't an extinction event for the company...
[05:27] JasonSmith: Yeah my biggest fear is not a huge PR disaster for NPM but rather somebody starts placing code in modules secretly
[05:27] JasonSmith: (Another argument for checking in node_modules)
[05:27] JasonSmith: But like what if the mysql module started (asynchronously) fetching your database and sending it organized crime
[05:29] kickingvegas: in other words, the level of effort locking down info is a risk management question.
[05:29] isaacs: JasonSmith: yeah, if your biggest concerns are PR or rm -rf /, then you're not thinking hard enough
[05:30] JasonSmith: Oh I think hard, baby.
[05:31] pquerna: maven set the precedent
[05:31] pquerna: people don't care.
[05:31] pquerna: (about signing)
[05:31] pquerna: its fine though, i check my stuff into node_modules :-/
[05:32] JasonSmith: Million dollar idea:
[05:32] JasonSmith: A company that provides a service of just reading all your checkins and raising red flags
[05:32] whomps has joined the channel
[05:32] pquerna: i shudder to think that a 10 million dollar idea is like
[05:32] JasonSmith: And the way you get bodies in the (virtual) desks is you tell people they get free Node.js training
[05:33] JasonSmith: Yeah. My last million dollar idea cost me ten grand, so
[05:34] jdc0589 has joined the channel
[05:34] jdc0589: anyone with node v8 profiler experience around?
[05:35] jstonne has joined the channel
[05:36] enmand has joined the channel
[05:37] zz_shykes has joined the channel
[05:38] zzak has joined the channel
[05:43] isaacs: pquerna: it's not just that people don't care.  it's that people care about caring, and dont' care.
[05:43] isaacs: pquerna: we all agree that signing is VERY IMPORTANT, but none of us ever check the signature.
[05:43] isaacs: and certainly, none of us ALWAYS check the signature
[05:46] kickingvegas: isaacs: so a CA for NPM?
[05:46] isaacs: kickingvegas: yeah, that's a fantasy
[05:46] isaacs: kickingvegas: npmjs.org/ca.crt
[05:47] kickingvegas: isaacs: dream big. :)
[05:47] couchquid has joined the channel
[05:48] joshfinnie has joined the channel
[05:48] dexter_e has joined the channel
[05:48] dubenstein has joined the channel
[05:49] jdc0589: anyone have a clue what library this is (shared libraries section of a parsed v8 profile log): 7099   80.2%    0.0%  00367000-00368000, Havent used the profiler before
[05:51] whomps: could someone please take a look at this, i'm sure it will be very simple for you, i just dont know best way around it or simply missing the basics http://pastebin.com/TtQSTAaA
[05:52] hughfdjackson: whats the problem?
[05:53] whomps: there is comment in paste, but basically i cant get variable "testy" our of the fetch one back to get
[05:53] hughfdjackson: oh, sorry, it's in a comment
[05:53] whomps: :)
[05:57] hughfdjackson: whomps: are you trying to change 'testy' within the function passed to app.get in fetchTest?
[05:57] hughfdjackson: or are you just trying to pass the correct value to callBack?
[05:58] whomps: im trying to change within the function fetchTest, and then get it back to app.get
[05:59] hughfdjackson: the var declared at line 10 will never be changed w/ your code
[06:00] hughfdjackson: since callBack uses the name testy for one of its arguments
[06:00] satyr has joined the channel
[06:00] hughfdjackson: if you want to mutate testy inside of app.get, as far as my tired brain well tell me, you need to change callback to something like this
[06:00] mattgifford has joined the channel
[06:01] hughfdjackson: function callBack(return_value){ testy = return_value; console.log('callback:' + testy) }
[06:01] whomps: thank you, ill give it a try
[06:02] hughfdjackson: i will say this though : why do you have to mutate it?
[06:02] hughfdjackson: you have (presumably) the correct new value for testy, and all that you execute will be within callBack, or called from it
[06:03] hughfdjackson: maybe it'd be a better idea just to forget about the original value, rather than writing lots of side-effecty code
[06:03] hughfdjackson: (in the functional sense of the term 'side effect'
[06:03] hughfdjackson:  as opposed to pure )
[06:03] whomps: i see
[06:03] hughfdjackson: :D just a thought
[06:04] whomps: that make sense, testy found its way to line 10 after a dozen or soe iterations :)
[06:11] whomps: got it, thank you for your help, hughfdjackson 
[06:11] hughfdjackson: welcome ^^
[06:12] wookiehangover has joined the channel
[06:15] benvie: what's process.platform on os x?
[06:15] benvie: darwin?
[06:15] isaacs: $ node -e console.log'(process.platform)'
[06:15] isaacs: darwin
[06:15] isaacs: yep
[06:16] ericnakagawa has joined the channel
[06:16] benvie: hah that's running on a max? cool
[06:16] benvie: thanks
[06:16] benvie: oh
[06:16] benvie: YOU are running on a mac
[06:18] mattgifford has joined the channel
[06:19] benvie: jimmy wales is staring is watching you wikipedia
[06:19] benvie: always glaring
[06:20] luke` has joined the channel
[06:22] guybrush_ has joined the channel
[06:24] kitt has joined the channel
[06:26] equark has joined the channel
[06:29] kazupon has joined the channel
[06:30] meso has joined the channel
[06:31] jxie has joined the channel
[06:32] xuser has left the channel
[06:35] shiawuen has joined the channel
[06:39] Wizek has joined the channel
[06:41] Heisenmink has joined the channel
[06:47] syggen has joined the channel
[06:47] SamuraiJack has joined the channel
[06:51] notifybot has joined the channel
[06:51] notifybot1 has joined the channel
[06:52] TooTallNate has joined the channel
[06:52] ryan_stevens has joined the channel
[06:56] cognominal has joined the channel
[06:56] Shaunzie has joined the channel
[07:01] subbyyy has joined the channel
[07:01] MerlinDMC has joined the channel
[07:02] vol4ok has joined the channel
[07:06] rurufufuss has joined the channel
[07:07] bulatshakirzyano has joined the channel
[07:10] `3rdEden has joined the channel
[07:10] JaKWaC_ has joined the channel
[07:16] Skaag has joined the channel
[07:17] meen016 has joined the channel
[07:17] `3rdEden has joined the channel
[07:18] ppcano has joined the channel
[07:18] rgl has joined the channel
[07:23] kazupon has joined the channel
[07:24] cognominal_ has joined the channel
[07:25] baoist has joined the channel
[07:25] andrewff1 has joined the channel
[07:26] pizthewiz has joined the channel
[07:27] redir_ has joined the channel
[07:33] harthur has joined the channel
[07:37] [[zzz]] has joined the channel
[07:39] deeprogram has joined the channel
[07:41] madhums has joined the channel
[07:42] [[zzzz]] has joined the channel
[07:46] harthur has joined the channel
[07:46] rendar has joined the channel
[07:46] confoocious has joined the channel
[07:46] confoocious has joined the channel
[07:47] Stephen has joined the channel
[07:47] cognominal___ has joined the channel
[07:50] wmage has joined the channel
[07:51] Morkel has joined the channel
[07:51] Neil__ has joined the channel
[07:55] Murugaratham has joined the channel
[07:57] chjj has joined the channel
[07:59] m4rcs has joined the channel
[08:01] sdwrage has left the channel
[08:02] eddyb has joined the channel
[08:02] ivanfi has joined the channel
[08:03] eddyb: hi, I'm having serious trouble with a C++ module
[08:03] cognominal___ has joined the channel
[08:03] eddyb: when the function is not named init, there's some "module symbol not found" error
[08:03] eddyb: when the setup function is named init... there's this
[08:03] eddyb: symbol lookup error: elm.node: undefined symbol: _ZNK2v85Value11IsUndefinedEv
[08:03] eddyb: that's... so wrong...
[08:04] churp has joined the channel
[08:05] joeyang has joined the channel
[08:07] Shaunzie has joined the channel
[08:10] braoru has joined the channel
[08:13] subbyyy has joined the channel
[08:13] hellp has joined the channel
[08:13] HT has joined the channel
[08:17] joshfinnie has joined the channel
[08:18] levi501d has joined the channel
[08:22] Nopik has joined the channel
[08:23] skylamer` has joined the channel
[08:24] jamesd2 has joined the channel
[08:25] mjr_ has joined the channel
[08:25] meso has joined the channel
[08:26] lzhang has joined the channel
[08:28] stalled has joined the channel
[08:28] satyr has joined the channel
[08:29] magnetik has joined the channel
[08:29] magnetik: Hi
[08:29] Shaunzie: an yong
[08:29] Druide_ has joined the channel
[08:29] magnetik: Is there any known bug with .getPeerCertificate() in an https server ?
[08:30] Shaunzie: mm not that I know of?
[08:30] meso_ has joined the channel
[08:30] magnetik: I'm getting .getPeerCertificate().exponent 10001, but in my certificate it's 65537
[08:31] kurtzhong has joined the channel
[08:34] Stephen has joined the channel
[08:35] MerlinDM has joined the channel
[08:35] tytsim has joined the channel
[08:39] joeyang has joined the channel
[08:41] magnetik: Here is my testing code : http://pastebin.com/NVTxVNGd
[08:43] lzskiss has joined the channel
[08:45] iamcorpix has joined the channel
[08:45] mjr_ has left the channel
[08:46] zilch has joined the channel
[08:46] metalball2 has joined the channel
[08:47] mehlah has joined the channel
[08:47] tytsim has joined the channel
[08:49] akter has joined the channel
[08:49] shiawuen has joined the channel
[08:49] Squeese has joined the channel
[08:49] Renegade001 has joined the channel
[08:49] icewhite has joined the channel
[08:49] r1ngzer0 has joined the channel
[08:49] Witnes5 has joined the channel
[08:49] Frippe has joined the channel
[08:49] paera has joined the channel
[08:49] tim_smart has joined the channel
[08:49] relix has joined the channel
[08:49] rudolfrck has joined the channel
[08:49] ec has joined the channel
[08:49] idefine has joined the channel
[08:49] justicefries has joined the channel
[08:49] remysharp has joined the channel
[08:49] TheDeveloper has joined the channel
[08:49] dthompso99 has joined the channel
[08:49] dragon has joined the channel
[08:49] frogstarr78 has joined the channel
[08:49] xSmurf has joined the channel
[08:49] raydeo has joined the channel
[08:49] ajpiano has joined the channel
[08:49] delnaught has joined the channel
[08:49] maru_cc has joined the channel
[08:49] sechrist has joined the channel
[08:49] gwoo has joined the channel
[08:49] Corey has joined the channel
[08:49] doffm has joined the channel
[08:49] augustl has joined the channel
[08:49] pct has joined the channel
[08:49] JHartig|away has joined the channel
[08:49] jvolkman has joined the channel
[08:49] MerlinDMC has joined the channel
[08:51] joeyang has joined the channel
[08:54] jjd has joined the channel
[08:54] deeprogram has joined the channel
[08:56] stalled has joined the channel
[08:56] coderzach has joined the channel
[09:02] jimt_ has joined the channel
[09:02] magnetik: okay, i've found it, it's giving the decimal representation 
[09:03] magnetik: 10001 (16) == 65537 (10)
[09:03] neshaug has joined the channel
[09:04] levi501d: good to know
[09:06] magnetik: I don't know if in the RSA world the decimal is more used to represent the exponent
[09:12] adambeynon has joined the channel
[09:12] insin has joined the channel
[09:12] eddyb has left the channel
[09:14] tokuzfunpi has joined the channel
[09:15] djazz has joined the channel
[09:16] Brainlag has joined the channel
[09:18] mattgifford has joined the channel
[09:18] sea has joined the channel
[09:19] magnetik: Is there any way to propose some addition to the documentation ? 
[09:19] sea: abc
[09:19] sea: abc
[09:19] stagas has joined the channel
[09:19] mike5w3c_ has joined the channel
[09:21] robhawkes has joined the channel
[09:23] coderzach has joined the channel
[09:24] saesh has joined the channel
[09:25] __johnfelix has joined the channel
[09:26] Morkel has joined the channel
[09:27] snearch has joined the channel
[09:27] __johnfelix has left the channel
[09:27] __johnfelix has joined the channel
[09:27] __johnfelix has left the channel
[09:28] __johnfelix has joined the channel
[09:32] shinuza has joined the channel
[09:34] descipher has joined the channel
[09:35] Squeese has joined the channel
[09:35] stagas has joined the channel
[09:37] braoru has joined the channel
[09:38] herbySk has joined the channel
[09:41] ppcano has joined the channel
[09:43] aliem has joined the channel
[09:45] mange has joined the channel
[09:50] erikzaadi has joined the channel
[09:50] Nss has joined the channel
[09:53] mange has joined the channel
[09:54] josh-k has joined the channel
[09:55] descipher has joined the channel
[09:59] fly-away has joined the channel
[09:59] purr has joined the channel
[09:59] Stephen has joined the channel
[09:59] stonebranch has joined the channel
[09:59] satyr has joined the channel
[10:02] LeMike has joined the channel
[10:02] mmalecki has joined the channel
[10:04] ixti has joined the channel
[10:06] cognominal has joined the channel
[10:14] cognominal_ has joined the channel
[10:15] andrewfff has joined the channel
[10:15] yossi42 has joined the channel
[10:18] superjudge has joined the channel
[10:19] aaronmcadam has joined the channel
[10:22] satyr has joined the channel
[10:22] `3rdEden has joined the channel
[10:22] joshfinnie has joined the channel
[10:24] madhums has joined the channel
[10:24] larsschenk has joined the channel
[10:24] larsschenk has left the channel
[10:26] rasyid7 has joined the channel
[10:27] LeMike: someone working with expressjs ?i alway have "cannot GET /..." but it's routed and the file exists in route directory
[10:31] k1ttty has joined the channel
[10:35] __johnfelix has joined the channel
[10:38] descipher has joined the channel
[10:40] Edy has joined the channel
[10:40] Edy has joined the channel
[10:41] saesh has joined the channel
[10:41] gausby has joined the channel
[10:43] jbpros has joined the channel
[10:44] stagas: LeMike: are you using express.static ?
[10:45] aliem has joined the channel
[10:45] LeMike: err. that means what? got a new clean express project and added only this one routing
[10:45] rasyid7 has joined the channel
[10:47] mikl has joined the channel
[10:49] stagas: LeMike: express.static is for serving static files from a dir. you add it like app.use(express.static(__dirname + '/somedir'))
[10:49] jetienne has joined the channel
[10:51] Juan77 has joined the channel
[10:51] optixx has joined the channel
[10:52] LeMike: no i dont want it to be static. does "require('routes');" parse the whole folder?
[10:52] ger^kallisti has joined the channel
[10:54] piscisaureus__ has joined the channel
[10:54] paera has left the channel
[10:54] mraleph has joined the channel
[10:54] stagas: LeMike: it's a helper module express creates for defining your routes, doesn't deal with static files
[10:56] Dreamer3 has joined the channel
[10:57] LeMike: stagas : do we talk about the same? i want a new controller representing "dev:3000/users", and i routed it with "app.get('/users', routes.users)" and placed a "routes/users.js" with "export.users = ..." . so it's like the index in the generated code, but it doesn't work.
[10:58] stagas: LeMike: exports.users should be in routes/index.js
[10:58] stagas: LeMike: require('./routes') reads routes/index.js only
[10:58] thalll has joined the channel
[10:58] __doc__ has joined the channel
[10:59] skm has joined the channel
[10:59] LeMike: damn this. and how do i modularize it? by placing several require?
[10:59] stagas: LeMike: yes, you could do exports.users = require('./users') in index.js
[11:00] LeMike: ok. thought it would load the whole dir already. thanks stagas!
[11:00] stagas: LeMike: hm that would be exports.users = require('./users').users
[11:01] LeMike: yee. i can handle that. just wasnt clear about the functionality of this framework. would ve been lovely if it reads the whole dir recursive
[11:02] jbpros has joined the channel
[11:03] stagas: LeMike: no, but there's a module that requires a whole dir you might want to use https://github.com/TroyGoode/node-require-directory
[11:03] jomoho has joined the channel
[11:04] LeMike: thanks for that
[11:07] descipher has joined the channel
[11:07] itayneeman has joined the channel
[11:08] __johnfelix has left the channel
[11:08] __johnfelix has joined the channel
[11:10] dexter_e has joined the channel
[11:10] johnfelix has joined the channel
[11:11] nicholasf has joined the channel
[11:17] zilch has joined the channel
[11:17] Squeese has joined the channel
[11:18] cclarke has joined the channel
[11:19] Nassosdim has joined the channel
[11:20] kurtzhong_ has joined the channel
[11:23] Morgawr has joined the channel
[11:24] Morgawr: hello everybody.. I have a fairl simple question... I'm trying to start using node.js (and expressjs) to create a simple website. I've worked with ruby/sinatra in the past and I love how expressjs is similar to it.. anyhow I can't find any simple tutorial that is also not outdated about using expressjs from scratch to create a simple website.. do you guys have any tip on where to look at?
[11:25] Morgawr: I'm not talking about a step-by-step tutorial, I just need a place that explains WHAT I'm doing and WHAT I should do, not straight away what to do.. I want to understand stuff (I'd rather have no single line of code in the tutorial than have a tutorial that is just copypaste)
[11:25] stagas: Morgawr: expressjs.org and http://senchalabs.github.com/connect/ are your friends
[11:26] stagas: sorry expressjs.com
[11:26] Morgawr: ahah yeah I went to .org and it was some weird japanese thing.. :)
[11:26] stagas: :P
[11:27] Morgawr: but yeah, I'll look into that a bit more, the problem is that using a raw "API doc" shows just a list of stuff I can do, but I have no idea where to actually look at to get starded
[11:27] arnee has joined the channel
[11:28] Morgawr: the "guide" in the expressjs.com website is nice to understand how the whole framework works, but doesn't go past that.. at least imo
[11:28] Stephen_ has joined the channel
[11:28] HardPhuck has joined the channel
[11:28] broofa has joined the channel
[11:31] HardPhuck: in terms of performance, say if I have 200 arrays with 1000 members each (strings, max length is about 15 characters), how much memory would that take
[11:33] d0k has joined the channel
[11:33] stagas: Morgawr: well there isn't much more than that. you decide what to put in. you can take a look at https://github.com/stagas/yet-another-express-boilerplate/blob/master/app/server.js to see what a basic configuration looks like
[11:34] Stephen__ has joined the channel
[11:34] coderzach has joined the channel
[11:35] Morgawr: stagas: thanks.. I guess I need to experiment a bit more, because so far all I see everywhere is a "we can do this and this and this" (with a list of features everywhere) and yet nobody actually talking about how and what you should actually be using
[11:35] cclarke has joined the channel
[11:35] RLa has joined the channel
[11:36] Renegade001_ has joined the channel
[11:38] cclarke has joined the channel
[11:38] larsschenk1 has joined the channel
[11:40] cclarke has joined the channel
[11:41] icebox has joined the channel
[11:44] larsschenk1 has left the channel
[11:44] hipsters_ has joined the channel
[11:46] ppcano has joined the channel
[11:47] descipher has joined the channel
[11:47] AndreasMadsen has joined the channel
[11:47] p1d has joined the channel
[11:48] Cromulent has joined the channel
[11:49] deeprogram has joined the channel
[11:49] braoru has joined the channel
[11:50] Morgawr: stagas: can I use that git project for my own project? I mean, I noticed it's an MIT licensing so I guess you'd have no problem right?
[11:50] Morgawr: it's a good backbone to get myself started
[11:50] Morgawr: :)
[11:50] booyaa: morning noders
[11:50] d0k has joined the channel
[11:50] stagas: Morgawr: that's the reason it's there!
[11:50] stagas: :)
[11:50] Morgawr: thanks 
[11:51] Morgawr: just one question though, I noticed the line "app.set('secret', 'your secret');" ... is that a dummy line (placeholder for other stuff) or.. what?
[11:52] stagas: Morgawr: express has this key value thing you can access later with app.settings.foo, so this one is used for the secret key in .cookieParser and .session
[11:53] Dreamer3 has joined the channel
[11:53] Morgawr: ahh
[11:53] Morgawr: but it can be anything I want, right?
[11:54] stagas: yeah
[11:54] Morgawr: ok thanks for the clarification
[11:54] erikzaadi has joined the channel
[11:55] stagas: Morgawr: express only uses a few settings like that (it's in the docs), so the namespace is free to use for your own settings
[11:55] Morgawr: okay, going to get started for real now, I have a backbone...time to experiment and add features and read a lot of documentation :)
[11:55] Morgawr: thanks a lot
[11:56] shinuza has joined the channel
[11:58] cclarke has joined the channel
[11:59] fangel has joined the channel
[12:01] cclarke has joined the channel
[12:02] dexter_e has joined the channel
[12:03] gde33 has joined the channel
[12:04] cclarke has joined the channel
[12:06] tonymilne has joined the channel
[12:06] tonymilne has left the channel
[12:07] larsschenk has joined the channel
[12:08] cclarke has joined the channel
[12:09] larsschenk has left the channel
[12:10] Skaag has joined the channel
[12:10] satyr has joined the channel
[12:11] cclarke has joined the channel
[12:12] kulor-uk has joined the channel
[12:12] cclarke has joined the channel
[12:14] jimt has joined the channel
[12:17] gausby has joined the channel
[12:19] descipher has joined the channel
[12:19] mikl has joined the channel
[12:20] Nss has joined the channel
[12:20] stagas has joined the channel
[12:22] johnfelix has joined the channel
[12:22] johnfelix has left the channel
[12:23] liar has joined the channel
[12:23] notifybot2 has joined the channel
[12:23] notifybot3 has joined the channel
[12:24] notifybot4 has joined the channel
[12:25] ivanfi has joined the channel
[12:26] notifybot5 has joined the channel
[12:26] ivanfi has left the channel
[12:27] cognominal___ has joined the channel
[12:27] mikl has joined the channel
[12:29] cclarke has joined the channel
[12:29] adrianF has joined the channel
[12:30] maushu has joined the channel
[12:32] level09 has joined the channel
[12:33] AndreasMadsen has joined the channel
[12:34] bnoordhuis has joined the channel
[12:34] charlenopires has joined the channel
[12:35] pickels__ has joined the channel
[12:35] stagas has joined the channel
[12:36] madhums has joined the channel
[12:37] shiawuen has joined the channel
[12:39] tokuzfunpi has joined the channel
[12:39] tytsim_ has joined the channel
[12:41] tytsim_ has joined the channel
[12:43] plutoniix has joined the channel
[12:44] booo has joined the channel
[12:45] descipher has joined the channel
[12:46] blup has joined the channel
[12:46] buttface has joined the channel
[12:47] mikl has joined the channel
[12:55] tcurdt has joined the channel
[12:56] scott_gonzalez has joined the channel
[12:57] TheJH has joined the channel
[12:57] zilch has joined the channel
[13:00] pyparadigm has joined the channel
[13:01] simpleton has joined the channel
[13:02] simpleton: Hi. Does anyone use dotcloud? Their IRC channel is dead.
[13:08] Wizek has joined the channel
[13:08] descipher has joined the channel
[13:11] fairwinds has joined the channel
[13:15] N0va` has joined the channel
[13:17] eldios has joined the channel
[13:18] jmar777 has joined the channel
[13:22] erichynds has joined the channel
[13:23] jmar777 has joined the channel
[13:23] RLa: which testing library to use for testing rest web services, including those that do not run on node itself
[13:23] TreasonX has joined the channel
[13:24] mmalecki: RLa: https://github.com/flatiron/api-easy
[13:24] neurodrone has joined the channel
[13:26] CrisO has joined the channel
[13:26] RLa: thanks
[13:26] RLa: looks like it builds on top of vows
[13:26] mmalecki: RLa: yeah
[13:27] eee_c has joined the channel
[13:27] postwait has joined the channel
[13:28] itayneeman has joined the channel
[13:29] ovaillancourt has joined the channel
[13:32] itayneeman_ has joined the channel
[13:35] martndemus has joined the channel
[13:36] CIA-109: node: 03Jeremy Martin 07v0.6 * r8c3a757 10/ doc/api/http.markdown : docs: tiny typo in http.markdown - http://git.io/C-2A4w
[13:37] davetayls has joined the channel
[13:38] saati has left the channel
[13:38] whitman has joined the channel
[13:39] bergie has joined the channel
[13:40] brianseeders has joined the channel
[13:41] Morkel has joined the channel
[13:47] wink_ has joined the channel
[13:48] tytsim has joined the channel
[13:48] trose has joined the channel
[13:49] davetayls has joined the channel
[13:51] tahu has joined the channel
[13:52] CIA-109: node: 03Damon Oehlman 07v0.6 * r744ed46 10/ lib/repl.js : repl: fix repl.start not passing the `ignoreUndefined` arg to the REPLServer constructor - http://git.io/M8pZ0Q
[13:54] erikzaadi has joined the channel
[13:54] Squeese has joined the channel
[13:55] davetayls has joined the channel
[13:55] joshfinnie has joined the channel
[13:59] Poetro has joined the channel
[13:59] mraleph has joined the channel
[14:00] bkaney has joined the channel
[14:00] mehlah has joined the channel
[14:02] eldios has joined the channel
[14:02] kriszyp has joined the channel
[14:02] jmar777: bnoordhuis: thanks for merging ^^. in a doc-writing mood - do you think it would be helpful to split the current example for http.request into two different ones - GET and POST?
[14:02] webguynow has joined the channel
[14:02] webguynow has left the channel
[14:03] bnoordhuis: jmar777: depends, how would it make the documentation better?
[14:03] jocafa has joined the channel
[14:04] jmar777: bnoordhuis: main reason being that the current POST example isn't very "real world" - e.g., 90% of the time you need to do some sort of object serialization and set the content-type header to something like application/x-www-form-urlencoded
[14:04] bnoordhuis: jmar777: object serialization feels out of scope but setting headers sounds good
[14:04] jmar777: bnoordhuis:  i looked around and the only site i could find that provided a good description of that process was pretty outdated and looked like it was coded by a php_developer :p
[14:05] webguynow has joined the channel
[14:06] zilch has joined the channel
[14:06] f1gm3nt has joined the channel
[14:07] jmar777: bnoordhuis: do you think it would at least be worth having a note in there that points someone in the right direction for serializing objects for posting?
[14:09] AaronMT has joined the channel
[14:09] Cromulent has joined the channel
[14:10] Poetro has joined the channel
[14:10] baudehlo has joined the channel
[14:10] Cromulent has joined the channel
[14:11] bnoordhuis: jmar777: hmm, in all honesty, i think that any half-decent programmer should be able to figure that out for him- or herself
[14:12] CIA-109: node: 03Ben Noordhuis 07v0.6 * r3f5bb15 10/ src/udp_wrap.cc : dgram: fix memory leak in error path - http://git.io/kFkBiA
[14:12] JimmyNode has joined the channel
[14:13] jmar777: bnoordhuis: probably - but there are a lot of half-decent+ programmers that are new to web technologies, and how to get from `{foo: 'bar'}` to something that application/x-www-form-urlencoded likes may not be obvious
[14:13] jmar777: bnoordhuis: not a big deal, really - just seemed like a friendly addition, but that's subjective
[14:14] bnoordhuis: jmar777: you've got a point. but the api docs are a reference, not a tutorial
[14:14] jmar777: bnoordhuis: and examples are in the "in-between" land :)
[14:14] bnoordhuis: and i'm afraid that conflating sending a post request and serializing objects just muddles things
[14:15] mehlah has joined the channel
[14:15] tdr has joined the channel
[14:16] enmand has joined the channel
[14:21] kyonsalt has joined the channel
[14:21] kevil has joined the channel
[14:22] kevil: 0
[14:24] level09 has joined the channel
[14:25] lazyshot has joined the channel
[14:25] zmbmartin has joined the channel
[14:25] Poetro has joined the channel
[14:25] napperjabber has joined the channel
[14:26] fumanchu182 has joined the channel
[14:26] zmbmartin has left the channel
[14:27] andrewfff has joined the channel
[14:27] bradleymeck has joined the channel
[14:28] tytsim has joined the channel
[14:28] jstonne has joined the channel
[14:29] robhawkes has joined the channel
[14:31] Destos has joined the channel
[14:34] drostie has joined the channel
[14:35] jp232 has joined the channel
[14:36] martin_sunset has joined the channel
[14:36] rwaldron has joined the channel
[14:37] level09 has joined the channel
[14:39] Cromulent has joined the channel
[14:45] fra000 has joined the channel
[14:47] _olouv_ has joined the channel
[14:50] piscisaureus__ has joined the channel
[14:50] idle-boy has joined the channel
[14:51] willwhite has joined the channel
[14:51] Renegade001 has joined the channel
[14:53] bshumate has joined the channel
[14:54] mikl has joined the channel
[14:55] carlyle has joined the channel
[14:55] EvRide has joined the channel
[14:57] blup has joined the channel
[14:59] drostie: I have a binary encoding format which is as expressive as BSON, more lightweight than it, and has about a 100 LOC encoder and a 100 LOC decoder (as opposed to ~700 LOC for JSON/BSON to do the same thing). I'm pretty proud of that. ^_^
[14:59] willwhite has joined the channel
[15:00] drostie: The only real difference is that I insisted on modularity. The parser is separate from the part which serializes numbers, dates, and byte strings.
[15:01] trose: how would one go about uniquely identifying a user in express? right now I have the client send the user name through a cookie but while writing some unit tests it occurred to me how simple it would be to spoof yourself as another user. My best guess would be to somehow generate a long encrypted string and send that with the cookie. Is this a good idea? also, is there a good module available that would make this easy to implement?
[15:01] pkrumins: just published an article on how to setup stripe payments with node: http://www.catonmat.net/blog/stripe-payments-with-node/
[15:02] jetienne_ has joined the channel
[15:02] TheJH: trose, use a HMAC
[15:02] V1 has joined the channel
[15:03] eee_c has joined the channel
[15:03] TheJH: trose, basically, you set the cookie to the username together with a hash of the username. The hash is salted with a secret only the serve rknows
[15:03] TheJH: trose, that way, you don't have to store data in RAM or so
[15:04] ryanfitz has joined the channel
[15:04] davetayls has joined the channel
[15:06] `3rdEden has joined the channel
[15:06] drostie: trose: it is almost impossible to get what you want to get with existing web technologies. ^_^
[15:06] drostie: Oh wait, nevermind.
[15:07] drostie: Yeah, you're considering spoofing. That's much simpler. Generate a session ID at login time and store it in the cookie.
[15:07] trose: drostie: ಠ_ಠ
[15:07] trose: oh okay
[15:09] Nathan has joined the channel
[15:11] drostie: trose: I first thought you were asking for a way to send a session ID like that *without* a cookie. That's nearly impossible because browsers don't give us a good way to safely store such a thing and crypto primitives to access it. It's like trying to secure magnetic stripes on bank cards: all they can do is say "here's my info," so there's nothing sophisticated that you can do to prove that someone with that info has that card.
[15:12] TheJH: trose, a HMAC is totally secure
[15:12] TheJH: trose, you don't need session IDs
[15:12] trose: drostie, yeah, i want to basically be able to prove a user is who they say they are
[15:13] trose: TheJH, okay
[15:13] trose: i'll look into hmac
[15:13] TheJH: trose, however, you might want to store the login time in the hmac-signed cookie (in the signed part)
[15:14] trose: TheJH, yeah, and have it time out after a while?
[15:14] dexter_e has joined the channel
[15:14] TheJH: trose, yes - maybe also compare it to the time of the last password change
[15:15] TheJH: trose, so that you can be sure that a password change locks out attackers
[15:15] trose: okay
[15:16] drostie: TheJH: I'm a little confused at what you're suggesting. Whose key is being used for the HMAC? The password? Or some private server key?
[15:16] TheJH: drostie, private server key
[15:17] TheJH: drostie, something long, stored in a config file on the server
[15:17] stagas has joined the channel
[15:18] drostie: TheJH: Well, that's a perfectly valid way to create session IDs I suppose, and might even let you get away with not having a database, but if trose has users then presumably s/he can also have user sessions. :P
[15:18] TheJH: drostie, true :D
[15:19] nrstott has joined the channel
[15:19] sylvinus has joined the channel
[15:19] trose: hmm so what if i were to just store the sessionID of the user in my db when they log in? do you think that would be sufficient?
[15:20] drostie: Well yeah. Or more precisely, it depends on the security model. Both approaches fail in the same circumstance: if a bad WiFi steals your login cookie, it gets to log in as you.
[15:23] drostie: The session ID thing is seen in swipe card systems, which is a good way to think about it. You go to a secretary, say "Hi, it's me," she confirms it, hands you a swipe card. When you want to open a door, you have to swipe a card (provide a token) with valid permissions to open that door. The system breaks if someone steals the card. What's on the card is not important, so long as it's hard to make new cards.
[15:24] drostie: And by "hard to make new cards" I mean "hard for everyone but the secretary."
[15:24] arthurdebert has joined the channel
[15:25] devdazed has joined the channel
[15:26] TheJH: drostie, "if a bad WiFi steals your login cookie" - that shouldn't be possible because you should be using HTTPS
[15:26] TheJH: or something better
[15:26] drostie: trose: so basically that's the security model. you could either have the doors use a common database controlled by the secretary, or else you could have them share a common key which can authenticate it.
[15:27] TheJH: drostie, basically, good picture :)
[15:27] tytsim has joined the channel
[15:27] TheJH: s/picture/analogy/
[15:27] trose: awesome
[15:28] trose: thanks for the in depth explanation
[15:28] coderdad has joined the channel
[15:28] Nss_ has joined the channel
[15:29] trose: so what i'm getting out of that is, make sure you only get a swipe card from the secretary and make sure the secretary is not an impostor ;)
[15:29] Skaag has joined the channel
[15:29] TheJH: drostie, so, you have to make sure that stealing the card is as hard as getting confirmed by the secretary (read: SSL everywhere if you use passwords)
[15:29] AvianFlu has joined the channel
[15:30] bkaney has joined the channel
[15:31] neurodrone has joined the channel
[15:32] drostie: trose: Well "make sure the secretary is not an impostor" is actually a huge problem in web security. Lots of so-called "phishing" attacks where someone pretends to be your bank's web site -- or else where someone reuses their passwords at 2 or more web sites, giving one 'secretary' the power to log in as you towards the other 'secretary'.
[15:32] dexter_e has joined the channel
[15:32] bkaney has joined the channel
[15:33] maushu|working has joined the channel
[15:34] izepstan has joined the channel
[15:34] Swizec has joined the channel
[15:34] barberdt has joined the channel
[15:34] maushu|working: SubStack: Did you guys setup stripe for yourselves?
[15:35] barberdt has joined the channel
[15:37] mehlah has joined the channel
[15:38] booo has joined the channel
[15:39] thomblake has joined the channel
[15:41] andrewfff has joined the channel
[15:41] Venom_X has joined the channel
[15:42] raphdg has joined the channel
[15:42] Brandon_R has joined the channel
[15:42] Brandon_R: hi guys
[15:43] jmar777: so.... hash maps, huh?
[15:43] barberdt: somanyhashmaps
[15:44] thomblake has left the channel
[15:45] Brandon_R: can javascript do datastructures like linked lists and binary trees?
[15:45] jmar777: am i alone in thinking that setting a max post/put/etc. size isn't very sufficient for thwarting this new hash collision DoS thingy?
[15:45] mehlah has joined the channel
[15:45] boltR has joined the channel
[15:45] jmar777: Brandon_R: yes - you'd have to make them yourself though if you want direct access to them. they're already use in various places in the hood though
[15:46] Brandon_R: oh cool
[15:46] Brandon_R: i'm thinking of a way to store sockets for a chatrooms
[15:46] Brandon_R: what do you suggest?
[15:46] Brandon_R: an array per room?
[15:46] ChrisMatthieu has joined the channel
[15:47] jmar777: Brandon_R: i would see how quickly you can iterate over keys in an object. you may be better off doing a "hash" per room, so you can more efficiently remove them on signoff/disconnect
[15:47] c4milo has joined the channel
[15:47] behmann has joined the channel
[15:47] cmr: Uh.. no
[15:48] Brandon_R: do you have any ideas of multicast?
[15:48] cmr: Definitely use an array, that is what it is meant for.
[15:48] jmar777: Brandon_R: actually, i think an array would be better
[15:48] Brandon_R: that seems like how a chatroom is
[15:48] tjfontaine: cmr: not in an irc style, no
[15:48] cmr: Brandon_R: Have you read the irc rfc's before? They might be useful for you
[15:49] Brandon_R: nope but will do. irc seems like a good place to start
[15:49] josh-k has joined the channel
[15:49] jmar777: Brandon_R: removal could be done lazily during a broadcast. keep a reference of "sessions" that have disconnected, and as you iterate for broadcasting, remove dead clients at the same time
[15:49] fomatin has joined the channel
[15:50] tjfontaine: generally in ircd's we use hash lookups for send to channel/nick/server, and linked lists for iterating
[15:51] plow has joined the channel
[15:52] Brandon_R: i was looking at this thing called ip multicast and it sounds like a chatbox 
[15:52] Brandon_R: you send a message to all connected clients
[15:52] Brandon_R: is that how it works?
[15:52] plow: hi, can someone point me in the direction of a comet tutorial please, google ain't helping, preferrably socket.io to fallback on ajax if there are no web sockets
[15:52] Brandon_R: socket.io > comet
[15:52] plow: thanks ;)
[15:53] plow: Brandon_R: does it take care of comet are you saying?
[15:53] tjfontaine: Brandon_R: socket.io in this case is not really "multicast ip" but it does have some broadcast mechanisms
[15:53] tjfontaine: Brandon_R: you would more likely use that function for saying "goodbye" to all the clients when you take down the server
[15:53] Brandon_R: i think socket.io broadcast is just a loop over an array whereas ip multicast is some sort of networking protocol
[15:54] Brandon_R: like at the network/router level
[15:54] Brandon_R: i will have to read up on this
[15:54] plow: Brandon_R: how do I do per user comet?
[15:54] Brandon_R: sounds cool
[15:54] cmr: Brandon_R: you can't use multicast over the Internet iirc
[15:54] cmr: Only on private networks.
[15:54] Brandon_R: oh
[15:54] liehu has joined the channel
[15:55] cmr: It'd be hell for the infrastructure to have to duplicate everything all those times..
[15:55] tjfontaine: also, it's not for tcp
[15:55] plow: can anyone tell me how to implement comet in node please?
[15:57] Brandon_R: comet is basically long polling which socket..io supports
[15:57] brianc1 has joined the channel
[15:57] enmand has joined the channel
[15:58] plow: Brandon_R: great, so basically I can do anything I need to do with comet with socket io?
[15:58] Brandon_R: pretty much
[15:58] Brandon_R: woah - Nearly all nodejs http servers are vulnerable to DoS and apparently 
[15:59] Brandon_R: https://groups.google.com/forum/#!topic/nodejs/007S7DUm21o
[16:00] scriptle has joined the channel
[16:01] scriptle has left the channel
[16:02] plow: thanks guys, node is a joy
[16:02] scriptle has joined the channel
[16:02] redir_ has joined the channel
[16:04] cclarke_ has joined the channel
[16:04] mandric has joined the channel
[16:05] rai has joined the channel
[16:05] CarterL has joined the channel
[16:07] fearphage has joined the channel
[16:08] sylvinus_ has joined the channel
[16:09] quijote has joined the channel
[16:10] cjm has joined the channel
[16:13] mehlah has joined the channel
[16:14] blueadept has joined the channel
[16:15] adrianF has joined the channel
[16:15] enmand has joined the channel
[16:16] SamuraiJack has joined the channel
[16:16] stagas has joined the channel
[16:17] bkaney has joined the channel
[16:18] EyePulp has joined the channel
[16:20] [[zz]] has joined the channel
[16:21] deeprogram has joined the channel
[16:22] cclarke has joined the channel
[16:24] [[zzz]] has joined the channel
[16:24] scriptle has left the channel
[16:26] cclarke has joined the channel
[16:28] alessioalex: Brandon_R: same goes for Python, .net, Java etc
[16:30] shiawuen has joined the channel
[16:31] jaequery has joined the channel
[16:34] criswell has joined the channel
[16:35] jarek has joined the channel
[16:35] jarek has joined the channel
[16:35] djazz has left the channel
[16:35] davehamptonusa has joined the channel
[16:36] idle-boy has joined the channel
[16:37] jstash has joined the channel
[16:37] slloyd has joined the channel
[16:39] baudehlo: but not Perl :)
[16:40] omenar has joined the channel
[16:41] bradleymeck: balgarath, if you use strings for dictionary keys virtually everything is affects
[16:41] bradleymeck: is affected*
[16:41] bradleymeck: baudehlo, ^
[16:41] baudehlo: yup.
[16:41] baudehlo: we went through this and fixed it in Perl years ago. 2003 I think.
[16:42] bradleymeck: baudehlo, what was the solution that was chosen?
[16:42] bradleymeck: im also unsure how you would fix generic string dicts :/
[16:42] TheJH: bradleymeck, djb has a solution
[16:42] baudehlo: just properly randomising the hash I think.
[16:42] tbranyen: cool, in dependency hell trying to install nodejitsu's http-server :-/
[16:43] TheJH: baudehlo, https://twitter.com/#!/hashbreaker/status/152070032908750851
[16:43] webben: baudehlo: Indeed the idea for the hack was from the perlsec page!
[16:43] bradleymeck: tbranyen, mmm?
[16:43] TheJH: baudehlo, djb is a pretty good crypto guy, I believe him
[16:43] tbranyen: bradleymeck: something funky the way the dependencies were defined in the package.json
[16:43] tbranyen: npm freaks out
[16:43] TheJH: http://cr.yp.to/critbit.html
[16:43] tjfontaine: djb is great, first he makes a problem then he goes around giving lectures on how to fix it
[16:44] bradleymeck: either way baudehlo that only mitigates to your n number of hash functions
[16:44] baudehlo: TheJH: he's probably talking about something slightly different though. The perl solution has been well reviewed.
[16:44] tbranyen: maybe some versions were pruned out or something
[16:44] bradleymeck: not a real overall solution
[16:44] CarlosC has joined the channel
[16:44] TheJH: tjfontaine, huh? How did he create the problem? :D
[16:45] tjfontaine: TheJH: a lot of the hash functions in question are from his research :)
[16:45] TheJH: tjfontaine, true, but it wasn't his idea to use hashes :
[16:45] baudehlo: part of the problem with JS will be that some people assume ordering of keys.
[16:45] serrghi has joined the channel
[16:46] barberdt: ACTION has made that mistake b4
[16:46] tjfontaine: TheJH: anytime someone brings up djb I just remind them of the plague he introduced with qmail
[16:46] TheJH: tjfontaine, e.g. v8 uses http://en.wikipedia.org/wiki/Jenkins_hash_function#one-at-a-time
[16:46] bradleymeck: baudehlo, i fought the ordering, but the es-discuss thread defeated me /cry
[16:46] bradleymeck: ACTION wishes we had hardware accelerated tries to avoid hashes
[16:46] baudehlo: the perl solution btw is detection of pathological data input, and then randomise at that point.
[16:47] TheJH: tjfontaine, I don't know qmail - what's ba dabout it?
[16:47] baudehlo: TheJH: not much beside the coding style tbh. It's actually pretty good.
[16:48] baudehlo: But the coding style makes extending it pretty hard.
[16:48] tjfontaine: http://en.wikipedia.org/wiki/Qmail#Controversy and not to mention backscatter
[16:48] tjfontaine: also the license is just horrible, making disributing changes virtually impossible
[16:49] confoocious has joined the channel
[16:49] confoocious has joined the channel
[16:49] MatthewS has joined the channel
[16:49] Morgawr: guys, is it considered bad practice using simple res.write() and res.end() when handling requests in express.js? I don't really need the whole power of a render() in the background for my web app...
[16:50] zzak: Morgawr use res.send()
[16:50] Morgawr: zzak: yes, of course I'd use res.send(), it was just an example... :)
[16:51] baudehlo: tjfontaine: yeah the backscatter thing is a problem, but the rest of the issues are really minor.
[16:51] TheJH: tjfontaine, "also the license is just horrible, making disributing changes virtually impossible" WHUT? all software by djb is public domain
[16:51] Morgawr: also depending on the case, I might need to use write() and end() though... I mean, doesn't it throw errors when you do multiple send() in the same request? (I'm still a first starter here...)
[16:51] tjfontaine: TheJH: not until /07
[16:51] zzak: morgawr: for sure: http://expressjs.com/guide.html#res.send()
[16:51] zzak: send() will end() for you
[16:52] jimt has joined the channel
[16:53] Morgawr: zzak: mmm.. this is weird, my problem is that I have two functions called for a single routing (I'm just testing stuff) and each of them just does a res.send()
[16:53] Morgawr: however it displays only the second .send()
[16:53] Morgawr: with .write() and .end() it works fine
[16:54] Morgawr: again, if I do "res.send('testing'); res.send('second  testing');" I only get the first one
[16:54] zzak: because send() will end() the response
[16:54] Morgawr: ah yes, so as I said if I need to write more than one line I can effectively use write() and then end(), yes?
[16:54] mara has joined the channel
[16:54] zzak: try them both with just write() and no end()'s
[16:55] itayneeman has joined the channel
[16:55] Morgawr: zzak: without end() it doesn't work
[16:55] Morgawr: because write() doesn't close the request
[16:55] pizthewiz has joined the channel
[16:56] jmar777: res.send/json/etc. are sugar for writing a discrete response and setting some content-type/length info, etc.
[16:57] zzak: what if you end() it in the second response?
[16:57] jmar777: if you don't know how much data you'll be streaming, then multiple calls to res.write() is probably best, because then you'll get your chunked encoding
[16:57] jmar777: and then end() it when you know you're done
[16:57] Morgawr: jmar777: yeah, exactly what I wanted to ask.. thank you then :)
[16:57] tkaemming has joined the channel
[16:58] Morgawr: just wanted to be sure that write() and end() weren't "obsolete" calls because the higher layer of connect/express handles them in a different way
[16:59] kn0where has joined the channel
[16:59] jmar777: Morgawr: they should be safe - just make sure you handle any required header info if you're writing the response on your own
[16:59] jmar777: Morgawr: it should "work
[17:00] Morgawr: jmar777: okay, gotcha :) thanks
[17:00] jmar777: Morgawr: .... err, just "work" even if you don't write any headers (node sets some "implicit headers" if you call write() before writeHead()), but it may not be the content type expected by the client
[17:01] AndreasMadsen has joined the channel
[17:04] AndreasMadsen_ has joined the channel
[17:05] Skola has joined the channel
[17:05] Cheery has joined the channel
[17:05] briancray has joined the channel
[17:05] Cheery: is there any way I could use gobjects from node.js?
[17:06] Renegade001 has joined the channel
[17:06] stagas has joined the channel
[17:07] aioue has joined the channel
[17:08] ger^kallisti has joined the channel
[17:09] pizthewiz has joined the channel
[17:09] cynicalgrinch_ has joined the channel
[17:10] MatthewS has joined the channel
[17:13] smgt has joined the channel
[17:16] gf3: guh
[17:16] subbyyy has joined the channel
[17:16] tbranyen: gah
[17:16] gf3: where is that isaacs character?
[17:17] gf3: issacs
[17:17] gf3: iisaacs
[17:17] gf3: isaccs
[17:17] gf3: isacss
[17:17] tbranyen: icarus
[17:18] cynicalgrinch_: ah! people! bless
[17:20] cynicalgrinch_: any of you ever hosted an app on dotcloud?
[17:21] criswell has joined the channel
[17:21] metalball2 has joined the channel
[17:22] eee_c has joined the channel
[17:23] voodootikigod__ has joined the channel
[17:23] cjm has joined the channel
[17:25] kn0where: ooh, nodejs.org got redesigned
[17:26] isaacs has joined the channel
[17:26] tjbell has joined the channel
[17:26] davidwalsh has joined the channel
[17:27] Lingerance: ACTION likes the old design
[17:27] Lingerance: Takes me a while to find the documentation link now
[17:28] IrishGringo has joined the channel
[17:29] Cheery has left the channel
[17:33] jakehow has joined the channel
[17:33] corpix has joined the channel
[17:33] thejefflarson has joined the channel
[17:33] mansoor has joined the channel
[17:36] cmr: I also prefer the old design
[17:36] scriptle has joined the channel
[17:36] tuhoojabotti: I like the new one, but it could be better too.
[17:36] kmiyashiro has joined the channel
[17:37] mansoor: did the h4x0rs get to n0d3.j5 too?
[17:38] aroman: anyone know how to group() with Mongoose?
[17:39] kitt has joined the channel
[17:41] patcito has joined the channel
[17:41] AAA_awright: Again?
[17:42] adamstantonvan has joined the channel
[17:42] silky has joined the channel
[17:42] wbednarski has joined the channel
[17:42] isaacs: JasonSmith: hey
[17:43] isaacs: oh, wait, it's midnight or whatever there.  meh.  email.  :)
[17:44] Vennril has joined the channel
[17:45] cjm has joined the channel
[17:46] level09 has joined the channel
[17:47] flip_digits has joined the channel
[17:48] superjudge_ has joined the channel
[17:50] Skaag has joined the channel
[17:50] mbrevoort has joined the channel
[17:51] Nassosdim has joined the channel
[17:51] tuhoojabotti: Overv: Nice app you got there
[17:51] IrishGringo: I have a question...  I wanted to see if I could find some examples of code snippets from MongoDB to parse to SQL databases  using PHP, PYTHON, RUBY, .NET...  I am just doing a survey to look at ways to do BI on incoing data from mongo.
[17:51] Me1000 has joined the channel
[17:51] IrishGringo: i figured someone here may have a clue...  
[17:52] Nopik: MondoDB isnt sql..
[17:54] markdaws has joined the channel
[17:54] armandop has joined the channel
[17:54] erikzaadi has joined the channel
[17:55] slickplaid: code snippets using a nosql database to parse entries in a sql database? I'm confused
[17:55] Blorb has joined the channel
[17:55] markdaws has joined the channel
[17:55] slickplaid: so data coming from an sql server and then being parsed and put into a mongodb store?
[17:55] jimt has joined the channel
[17:56] txdv: more like a wrapper around the sql output
[17:56] kenperkins has joined the channel
[17:56] txdv: and then create a wrapper so it is a distributed key value store
[17:56] txdv: great success, no performance
[17:56] mattgifford has joined the channel
[17:57] slickplaid: one way? or bi-directional back into the sql db?
[17:57] mara has joined the channel
[17:58] JaKWaC has joined the channel
[17:58] dexter_e has joined the channel
[17:58] mattgifford has joined the channel
[17:58] martin_sunset has joined the channel
[17:59] BotRoY has joined the channel
[18:00] LeMike has joined the channel
[18:01] lutungthemonkey has joined the channel
[18:01] captain_morgan has joined the channel
[18:01] lutungthemonkey has left the channel
[18:01] ryan_stevens has joined the channel
[18:01] enmand has joined the channel
[18:02] lazyshot has joined the channel
[18:03] chvid has joined the channel
[18:04] broofa has joined the channel
[18:04] mehlah has joined the channel
[18:06] criswell has joined the channel
[18:06] TheIronWolf has joined the channel
[18:06] fermion has joined the channel
[18:10] voodootikigod_ has joined the channel
[18:10] MUILTR has joined the channel
[18:11] JaKWaC has joined the channel
[18:12] behmann has left the channel
[18:13] NetRoY has joined the channel
[18:13] StanlySoManly has joined the channel
[18:15] Metal3d has joined the channel
[18:15] MatthewS has joined the channel
[18:17] mc: random question.. is it faster to writeStream.write a buffer or a string?
[18:18] cmr: mc: why don't you benchmark it and find out?
[18:18] mc: was just wondering if anyone else already had
[18:18] mc: i'll find out
[18:18] t0mmyvyo has joined the channel
[18:18] cmr: Please share your results, I am curious
[18:19] drostie: Okay, so here's a little more info on the half-BSON half-bencode half-s-expression language I just wrote in Node.js: http://www.bpaste.net/show/21253/
[18:19] drostie: Also it now passes JSLint and some nice test cases. :D
[18:19] chjj: mc: a buffer is faster
[18:19] chjj: mc: https://github.com/joyent/node/blob/master/lib/fs.js#L1319
[18:20] mc: yeah, i thought it would be. and i'm finding the same
[18:20] itayneeman_ has joined the channel
[18:20] chjj: mc: a string gets wrapped by a buffer when you .write()
[18:20] mc: gotcha
[18:20] chjj: so if you just have a buffer, it will always be faster
[18:21] drostie: Clearly we need Buffers which take negative time to be created.
[18:23] slickplaid: temporal buffers
[18:23] tenderloaf has joined the channel
[18:26] medice: once you invent that, i'll be creating buffers between every other operation just in case to boost performance
[18:27] ericnakagawa has joined the channel
[18:28] eee_c has joined the channel
[18:28] drostie: Well you would face new problems, you see, like callbacks firing before the command to call them has been sent out.
[18:29] mc: chjj: i have a question for you.. i was looking at the code for tiny, and i was wondering why you chose to use fs.read/fs.write instead of a readablestream and writablestream?
[18:30] level09_ has joined the channel
[18:30] captain__ has joined the channel
[18:30] NHQ has joined the channel
[18:31] CIA-109: node: 03Ben Noordhuis 07master * rc24276f 10/ (2 files in 2 dirs): net: defer net.Server 'close' event to next tick - http://git.io/eTHKRA
[18:32] cmr: Entirely hypothetical: if I were writing a program, would it be relatively painless to rewrite pieces in C{,++} and expose them to node? Would there be much of a performance gain?
[18:33] tjfontaine: depends
[18:33] bnoordhuis: but it's possible
[18:33] kulor-uk has joined the channel
[18:34] bradleymeck: cmr, crossing js to c++ and back has a performance hits, if the c++ does a huge calculation without touching that bridge you might see a performance gain
[18:34] Morkel has joined the channel
[18:34] populuxe has joined the channel
[18:35] tjfontaine: you're also taking a certain amount of control away from the jit to do some optimization
[18:35] cmr: Hrm. So usually it wouldn't be worth the trouble?
[18:35] tjfontaine: it really depends on what it is you're trying to do
[18:36] madhums has joined the channel
[18:36] tjfontaine: you'll want some profiling around the logic in question
[18:36] bradleymeck: cmr unless you are doing a huge CPU bound task, probably not
[18:37] eddyb has joined the channel
[18:37] eddyb: fix the darn topic in #nodejs
[18:37] eddyb: you might as well just setup a redirect
[18:37] eddyb: anyway
[18:37] NHQ: Can somebody advise what I need to change in my .profile so that npm is where it is sup[posed to be nhq:~ elenagragasin$ which npm /Users/elenagragasin/local/node/bin/npm nhq:~ elenagragasin$ which node /usr/local/bin/node 
[18:38] NHQ: oops
[18:38] NHQ: https://gist.github.com/1522109
[18:38] cjm has joined the channel
[18:38] isaacs: NHQ: how'd you get into that state?
[18:38] eddyb: can I daemonize the current node script, start a bunch of workers/slaves and print at will a tree of processes? or just a list of processes under the current one
[18:38] isaacs: NHQ: also, where do you *want* things to be?
[18:39] mmalecki: hah, nice https://twitter.com/#!/npmjs/status/152453515485265920 :)
[18:39] NetRoY has joined the channel
[18:39] mmalecki: eddyb: daemonizing is hard
[18:39] NHQ: @isaacs proudly been manually installing node and npm versions since 0.2 :D
[18:39] mmalecki: eddyb: I'd go with nohup or a simple C daemonizer
[18:39] teadict: NHQ: isn't that no longer necessary?
[18:40] eddyb: mmalecki: this is supposed to be a master
[18:40] eddyb: possibly the web server, as well
[18:40] NHQ: @isaacs i am trying to run the latest from the Mac OSX installer (v0.6.6) and now NPM is busted
[18:40] isaacs: NHQ: ok, so the thing in /usr/local/bin is what you want?
[18:40] eddyb: but I'd rather have the master above the web server
[18:40] isaacs: NHQ: just remove the one in ~/local/node then
[18:40] isaacs: that'd be my suggestion
[18:40] eddyb: mmalecki: me too, but there's no easy JSON in C & stuff
[18:41] mmalecki: eddyb: no no
[18:41] mmalecki: eddyb: just write a simple daemonizer in C
[18:41] NHQ: i have a linei n ther elooks like this: export NODE_PATH=$HOME/local/node:$HOME/local/node/lib/node_modules 
[18:41] mmalecki: it would daemonize node processes
[18:41] mmalecki: and use cluster to fork slaves
[18:41] eddyb: and use it to start the master?
[18:41] mmalecki: eddyb: yeah
[18:41] teadict: does installing all by hand still have any benefit?
[18:41] eddyb: I'd rather have my own crowd control :P. cluster is not really what I need
[18:41] eddyb: mmalecki: yeah, thanks
[18:42] NHQ: do i cut the first or second local/node path?
[18:42] eddyb: I might as well just wrap around nohup, that's all I need
[18:42] chjj: mc: not sure, i originally wrote it a long time ago. file streams were still somewhat new, and i didnt want any abstraction
[18:42] mc: i'm running in to an issue where i think i'm just murdering the kernel buffer using a write stream
[18:43] heatxsink has joined the channel
[18:43] mc: i guess i'll benchmark and see which is faster
[18:43] chjj: mc: anyway, i stuck with it, i think it kind of felt hacky to share the same fd with a read and write stream, i cant remember exactly why i went that way
[18:43] lzskiss has joined the channel
[18:43] chjj: its just what i decided at the time, maybe it would be cleaner if i used streams instead
[18:44] sarlalian has joined the channel
[18:44] tahu has joined the channel
[18:45] eddyb: mmalecki: actually, I don't need node slaves, I just need to start some servers
[18:45] eddyb: and applications
[18:45] eddyb: I think I'll write the daemonizer and chroot jailer in C(++)
[18:45] sarlalian1 has joined the channel
[18:45] mmalecki: eddyb: sounds good :)
[18:46] eddyb: mmalecki: but, what I'm more interesting in is listing child processes
[18:46] mmalecki: eddyb: calling ps :/
[18:46] mmalecki: eddyb: I don't think there's other way in uv or node
[18:46] mmalecki: eddyb: there's a module for that
[18:46] eddyb: does ps have a flag for childs?
[18:47] mmalecki: eddyb: http://search.npmjs.org/#/ps-tree
[18:47] eddyb: oh, thanks
[18:47] cmr: Does readline use GNU Readline?
[18:47] cmr: Or is it just a name
[18:48] eddyb: just a name, I think
[18:48] eddyb: https://github.com/dominictarr/ps-tree/blob/master/index.js
[18:48] eddyb: some fugly code ^^
[18:48] bnoordhuis: cmr: just a name
[18:48] NHQ: @isaacs success, thanks
[18:48] isaacs: np :)
[18:48] chjj: mc: also, i would still need to use fs.read no matter what, even if i used streams because it needs to perform arbitrary reads, so i guess i just used fs.read and fs.write only to keep things consistent
[18:49] N0va` has joined the channel
[18:49] chjj: mc: i dont know if its worth benchmarking, im sure streams will work great
[18:49] mc: that makes sense
[18:49] eddyb: pstree $$
[18:49] eddyb: mmalecki: ^^
[18:49] mc: with my code i can write 50,000 keys in about 4 seconds, but 100,000 takes 19 and it gets exponentially worse
[18:50] jimt_ has joined the channel
[18:50] mc: i'm assuming i just need to buffer my writes better
[18:50] fermion has joined the channel
[18:50] mmalecki: eddyb: oh, nice
[18:54] arcanin has joined the channel
[18:55] mraleph has joined the channel
[18:56] larsschenk has joined the channel
[18:56] larsschenk1 has joined the channel
[18:57] mikeal has joined the channel
[18:57] socketio\test\10 has joined the channel
[18:57] larsschenk1 has left the channel
[18:59] gf3: isaacs: hola amigo
[19:00] teadict: ¿quiénes hablan Español?
[19:01] rai: [Debería haber un canal hispano)
[19:01] T-Co: Aqui! Un poqo (or whatever:))
[19:01] rai: haha
[19:02] T-Co: + the accents
[19:02] teadict: yo soy de Argentina y pocos conocen node.. todavía no se esparció lo suficiente ):
[19:02] eddyb: me no gusta Español
[19:02] T-Co: me gusta mucho
[19:02] systemfault: me gusta seniorita Español
[19:02] rai: I like Spanish, Catalan, valencian and english
[19:03] gf3: isaacs: ping me when you see this (please)
[19:03] systemfault: I only speak french and english :(
[19:03] T-Co: I lived in Valencia for 7 months in 2006
[19:03] isaacs: gf3: I SEE THIS
[19:03] isaacs: what's up>?
[19:03] rai: really? nice one, im living here right now on Valencia, haha
[19:03] gf3: isaacs: your thoughts? http://dl.dropbox.com/u/2176065/npm/index.html
[19:04] T-Co: rai, I'm so jealous. I lived in Calle Ercilla 8 with 3 other persons
[19:04] isaacs: gf3: pretty wildly divergent from the nodejs branding
[19:04] salva has joined the channel
[19:04] eddyb: gf3: omg that looks good :)
[19:04] isaacs: pretty, though
[19:04] stonebranch has joined the channel
[19:04] teadict: what's this? a npm modules info website?
[19:04] josephmoniz has joined the channel
[19:05] gf3: isaacs: it's not *too* far off
[19:05] T-Co: rai, Right above Cafe Lisboa. Near La Lonha
[19:05] T-Co: La Lonja
[19:05] isaacs: gf3: well, i mean, except for the fonts, colors, and logo, sure :)
[19:06] blup has joined the channel
[19:07] gf3: teadict: it's just a mockup
[19:07] isaacs: gf3: i suspect that we'll have several iterations/explorations of the functionality of the site in the coming months, as well.
[19:07] gf3: eddyb: thanks :)
[19:07] isaacs: gf3: i do like the grey, and the zigzag thing is very pleasing.
[19:07] `3rdEden has joined the channel
[19:07] gf3: isaacs: thank you
[19:07] alessioalex has joined the channel
[19:08] guntha has joined the channel
[19:08] teadict: but it'll become a info site, right?
[19:08] Dulak has joined the channel
[19:08] gf3: isaacs: indeed, I did a fair amount of sketches to come up with (what I believe to be) an extremely simple and usable design
[19:08] gf3: teadict: that was the plan a couple weeks ago
[19:08] hipsters_ has joined the channel
[19:09] JaKWaC_ has joined the channel
[19:09] benvie has joined the channel
[19:10] teadict: a well designed information place for packages would fucking boost up the interest in the public that wants to solve things using node without learning node specifics
[19:10] gf3: teadict: I think isaacs has some even bigger plans for the npm search stuff
[19:11] armandop: @teadict +1
[19:11] isaacs: teadict: yeah, we know it's an issue.
[19:11] isaacs: there have been more pressing issues up to this point.
[19:11] isaacs: but it's climbing up the todo list steadily
[19:12] teadict: imagine finding this module, you read the simple docs and say "holy shit this solves 75% of my problems", and then you see you just have to ./configure, make, make install and npm install module
[19:12] jomoho has joined the channel
[19:12] teadict: it's golden!
[19:12] roborich has joined the channel
[19:12] isaacs: teadict: or just download the installer, and npm install module
[19:12] teadict: or that
[19:13] isaacs: teadict: the ./configure make install dance is too much, though it mus always work :)
[19:13] gf3: well npm comes with node now too, right?
[19:13] teadict: yesh
[19:13] cmr: gf3: I dislike the effect on <a>'s. I feel like the bubble should be shorter and a wee bit more saturation
[19:13] oxn has joined the channel
[19:14] isaacs: gf3: yeah
[19:14] isaacs: gf3: by default anyway
[19:15] cmr: And the text color should be darker.
[19:15] cmr: (Just my opinion, feel free to disregard)
[19:15] teadict: I shouldn't said "it's golden", should've said "this is gold isaacs! gold!"
[19:16] gf3: cmr: shorter as in height or animation time?
[19:16] cmr: gf3: height
[19:16] chrisdickinson: gf3: it might be cool to do a github-style sparkline for the tagged releases
[19:17] chrisdickinson: to monitor package maintainership.
[19:17] gf3: chrisdickinson: that'd be cool, indeed
[19:17] chrisdickinson: gf3: could even be built in, vertically, to the main content area as sort of a bar on the right.
[19:18] gf3: chrisdickinson: that's a great idea
[19:18] chrisdickinson: (which would be a great visual indicator -- if a package has been updated recently, the tag bubble on the timeline will be above the fold.)
[19:18] cmr: Also i assume this is just a sketch thing, but the sidebar extending all the way down the page would be nice
[19:19] gf3: cmr: technically there is no "sidebar" per se
[19:19] gf3: cmr: it is just a column of search results
[19:19] cmr: gf3: but there is visually
[19:19] gf3: chrisdickinson: adding that to the TODO
[19:20] chrisdickinson: ACTION mocks it up
[19:20] gf3: cmr: it will expand/contract with the amount of matches found
[19:21] gf3: isaacs: well think it over and let me know, I'm willing to iterate and implement
[19:21] gf3: isaacs: or work with Chris
[19:21] AndreasMadsen has joined the channel
[19:21] gf3: isaacs: or I can shut up and fuck off ;)
[19:21] snearch has joined the channel
[19:22] agnat_ has joined the channel
[19:25] TooTallNate has joined the channel
[19:27] EhevuTov has joined the channel
[19:27] cjlicata has joined the channel
[19:27] sardaven has joined the channel
[19:27] sardaven: q satyr
[19:29] coderdad has joined the channel
[19:29] MatthewS has joined the channel
[19:29] KarmaTEST has joined the channel
[19:30] jakehow has joined the channel
[19:30] scriptle: I have a question. I'm working with nowjs groups. When a group is created, the user can goto mysite/groupname .... now i would like to call the now.something method defined in the server, from the HTTPrequest object
[19:31] gf3: cmr: it would be too hacky to decrease just the background highlight height and not all line heights, unfortunately
[19:31] maushu has joined the channel
[19:32] Wizek: hi
[19:32] drostie has joined the channel
[19:32] Wizek: does anyone know a solution to this: http://stackoverflow.com/questions/6071817/npm-on-cygwin-unexpected-end-of-file
[19:32] Wizek: ?
[19:33] armandop: sure, install virtual box with a Ubuntu iso :-)
[19:35] mmalecki: armandop++
[19:35] bradleymeck: anyone know how to configure npm's install (of npm itself) to a custom directory if I have multiple versions of npm? ~/.npmrc wont work since it is only able to handle having 1 npm version at a time 
[19:37] mmalecki: bradleymeck: ./configure --prefix=whateves
[19:37] jgornick has joined the channel
[19:37] bradleymeck: mmalecki, but it still searches for ~/.npmrc :(
[19:37] oxn has joined the channel
[19:37] mmalecki: bradleymeck: oh? it's retarded
[19:37] mmalecki: bradleymeck: are you trying to do what I think you are?
[19:38] bradleymeck: mmalecki, probably
[19:38] mmalecki: ah
[19:38] mmalecki: bradleymeck: why'd you need separate .npmrc?
[19:39] bradleymeck: mmalecki, because i need binroot and root to be different for different versions of node
[19:39] bradleymeck: manroot, w/e
[19:39] oxn has joined the channel
[19:39] mmalecki: bradleymeck: npm will install stuff to location depending on process.prefix
[19:39] mikeal has joined the channel
[19:39] mmalecki: I think. at least that's how it behaves in nvm
[19:40] JaKWaC has joined the channel
[19:41] sshaginyan has joined the channel
[19:42] admc has joined the channel
[19:42] oxn has joined the channel
[19:42] harthur has joined the channel
[19:43] oxn has left the channel
[19:45] bradleymeck: mmalecki, mmm i found a way around it, not the prettiest but it will do
[19:45] igl1 has joined the channel
[19:45] mmalecki: bradleymeck: can't we just use `nvm`?
[19:46] mmalecki: it has this useful thing I wrote, `nvm run v0.6.6 script.js`
[19:46] bradleymeck: mmalecki, doesn't nvm use subshells?
[19:47] mmalecki: bradleymeck: no
[19:47] mmalecki: bradleymeck: nave does
[19:47] SamuraiJack has joined the channel
[19:47] bradleymeck: mmalecki, then sure i guess we could, that avoids some of the pain, but ill have to run a couple tests on how it likes being thrown into a chroot
[19:48] mmalecki: bradleymeck: it should be fine. it'll install stuff into /root/.nvm
[19:48] mmalecki: bradleymeck: ping me if you've any questions, I know it quite well
[19:49] Shaunzie has joined the channel
[19:50] jbpros has joined the channel
[19:52] carlyle has joined the channel
[19:53] MRdNk has joined the channel
[19:56] DTrejo has joined the channel
[19:57] JaKWaC has joined the channel
[19:58] sh1mmer has joined the channel
[20:00] sardaven has joined the channel
[20:01] chrisdickinson: gf3: almost done mocking. it'll look a little crappy, but you might get an idea from it?
[20:01] gf3: chrisdickinson: awesome!
[20:02] gf3: chrisdickinson: maybe I should just make a registry search site anyway
[20:04] cclarke has joined the channel
[20:04] mc: man.. i'm crushing this write stream so hard that it writes my first buffer, then sits there and does nothing until the program finishes
[20:05] zinkem has joined the channel
[20:05] lazyshot_ has joined the channel
[20:06] eddyb: http://www.youtube.com/watch?v=R2Cq3CLI6H8
[20:06] eddyb: https://groups.google.com/group/nodejs/browse_thread/thread/d34ed2ec3526db5a?pli=1
[20:08] CIA-109: node: 03Ryan Dahl 07master * r4b3824b 10/ deps/uv/src/win/thread.c : Merge remote branch 'origin/isolates2' - http://git.io/Msj5sA
[20:08] cclarke has joined the channel
[20:10] dgathright has joined the channel
[20:11] stantona has joined the channel
[20:12] rgl has joined the channel
[20:13] eee_c has joined the channel
[20:13] r04r has joined the channel
[20:13] bradleymeck: why did v8 change how JSON.stringify works on Errors :(
[20:13] bradleymeck: ive been living in 0.4.x for too long i guess
[20:13] LeMike: which database to store simple text and less binary with node.js ? whats recommended?
[20:14] mmalecki: bradleymeck: error properties are no longer enumerable
[20:14] bradleymeck: mmalecki, yea which is good i guess haha
[20:14] mmalecki: bradleymeck: :)
[20:15] mmalecki: bradleymeck: but yeah, next time, please switch to next stable release asap :)
[20:15] mmalecki: bradleymeck: (it's fun!)
[20:15] pquerna: its not trivial when you have 40 dependencies
[20:15] chrisdickinson: gf3: okay, don't barf too much: http://dl.dropbox.com/u/15509266/npmdesign/index.html
[20:16] mmalecki: pquerna: I don't think I remember how many dependencies I had to fix
[20:16] mmalecki: pquerna: still, fun!
[20:16] DTrejo: chrisbuchholz: THANK YOU FOR A REDESIGN. SO NEEDED
[20:17] gf3: chrisdickinson: yeah! that's hot stuff
[20:17] gf3: chrisdickinson: totally doable
[20:20] DTrejo: are there office hours today?
[20:20] CrisO has left the channel
[20:21] tjfontaine: sorry the dr has left the building
[20:23] koo3 has joined the channel
[20:23] DTrejo: hey isaacs, are there office hours today?
[20:23] isaacs: DTrejo: if so, i'm not there
[20:23] DTrejo: ah ok
[20:23] DTrejo: thanks
[20:23] isaacs: ACTION still vacationing
[20:23] DTrejo: :)
[20:24] isaacs: contemplating just throwing the whole inbox in a "2011" folder, and starting fresh.
[20:24] isaacs: except you can't also archive git issues as easily ;)
[20:24] mmalecki: isaacs: github API :)
[20:24] sylvinus has joined the channel
[20:25] joshfinnie has joined the channel
[20:27] Edy has joined the channel
[20:27] Edy has joined the channel
[20:28] catshirt has joined the channel
[20:31] pors has joined the channel
[20:33] chrisdickinson: gf3: radical; i'd also love to be able to select multiple packages and get a nice comparison view.
[20:33] franksalim has joined the channel
[20:34] gf3: chrisdickinson: that's an interesting idea
[20:34] rgl has joined the channel
[20:34] gf3: chrisdickinson: I don't think that's the typical use-case though
[20:34] gf3: chrisdickinson: what if switching between packages was uber-fast?
[20:36] tkaemming has joined the channel
[20:37] tvw has joined the channel
[20:37] blup has joined the channel
[20:39] AndreasMadsen has joined the channel
[20:40] joelhooks has joined the channel
[20:40] chrisdickinson: gf3: a two-up view would be most helpful
[20:41] chrisdickinson: being able to quickly see "oh, this package is behind this other one, but it has a more stable updating cycle."
[20:41] gf3: chrisdickinson: I suppose the main (white) are can act just like a card
[20:41] gf3: and more can be added horizontally
[20:41] chrisdickinson: additionally, using the github v3 api in browser to pull in stats like "issues open / issues closed", watchers, etc. would be cool.
[20:42] MatthewS has joined the channel
[20:44] churp has joined the channel
[20:45] davetayls has joined the channel
[20:46] lmatteis: can i list a dependency in packages.json which is not in npm but is on github?
[20:47] isaacs: lmatteis: npm faq, look for "what is a package"
[20:47] isaacs: or npm help json, search for "dependencies"
[20:47] isaacs: lmatteis: you can list a tarball url, or a git url.
[20:47] isaacs: (note: *not* a url to a github *webpage*, though)
[20:48] lmatteis: eheh ok
[20:48] lmatteis: thanks
[20:51] shinuza has joined the channel
[20:51] e-1 has joined the channel
[20:54] nym has joined the channel
[20:54] kenperkins: what's the equivalent of directoryExists in node?
[20:55] cjlicata has joined the channel
[20:55] tbranyen: fs.stat?
[20:56] kenperkins: ah, it's path.exists :P
[20:56] kenperkins: I was looking in fs as well
[20:56] strevat_ has joined the channel
[20:57] stinnes has joined the channel
[20:58] AndreasMadsen has joined the channel
[20:59] BrianE has joined the channel
[21:00] isaacs: dscape: hey
[21:00] isaacs: dscape: care to run your sax profiling test on https://github.com/isaacs/sax-js/commit/1444b1312a1b92e1a25f9d18861f0aa67817c894?
[21:00] isaacs: dscape: i got rid of the indexOf stuff.
[21:00] shinuza has joined the channel
[21:01] bLiNdRaGe has joined the channel
[21:01] N0va` has joined the channel
[21:02] bLiNdRaGe: jade question: so i need a tag that looks like <a href="/blog/#/">Title</a>. The only way i can get my variable dereferenced is to use a(href="/blog/"+blog[i].id) \n object=blog[i].title
[21:02] bLiNdRaGe: unfortunately this causes it to do <a href="/blog/##"><object>title</object></a> which messes up spacing
[21:03] bLiNdRaGe: how can i dereference the blog[i].title without putting it into a new tag? a(...)= fails
[21:03] bLiNdRaGe: wait nvm, that's not what screwing it up
[21:06] larsschenk has joined the channel
[21:06] larsschenk has left the channel
[21:07] martin_sunset has joined the channel
[21:07] isaacs has joined the channel
[21:07] AviMarcus has joined the channel
[21:08] TheJH: hmm, I think I got connection reuse working :)
[21:08] xy has joined the channel
[21:09] herbySk has joined the channel
[21:10] BrianE has joined the channel
[21:10] thax has joined the channel
[21:11] pors has left the channel
[21:12] Heisenmink has joined the channel
[21:12] pors has joined the channel
[21:12] davetayls has joined the channel
[21:13] tk has joined the channel
[21:13] Le-Mike has joined the channel
[21:13] ericmuyser has joined the channel
[21:16] bLiNdRaGe has left the channel
[21:20] Cromulent has joined the channel
[21:21] ericnakagawa has joined the channel
[21:23] AndreasMadsen has joined the channel
[21:23] jonbaer has joined the channel
[21:23] booo has joined the channel
[21:24] jonbaer: Hi, I just experienced this @ https://github.com/joyent/node/issues/340 does anyone know what it's status is (or has anyone else had KPs while running cli apps)
[21:25] pors has left the channel
[21:25] pors has joined the channel
[21:26] Shaunzie: anyone know what the last stable version of node is that is compatible with express 2.4.6?
[21:27] StanlySoManly1 has joined the channel
[21:28] Sorella has joined the channel
[21:31] CarterL has joined the channel
[21:31] Skola has joined the channel
[21:31] swedishkid has joined the channel
[21:32] bwarner has joined the channel
[21:33] hipster__ has joined the channel
[21:34] pandeiro has joined the channel
[21:36] JaKWaC has joined the channel
[21:36] corpix has joined the channel
[21:37] CIA-109: node: 03Ryan Dahl 07v0.6 * r432a2e4 10/ test/simple/test-http-parser-bad-ref.js : 
[21:37] CIA-109: node: Add test for #2438
[21:37] CIA-109: node: Unfortunately valgrind must be used to see the bad read. It would be nice if
[21:37] CIA-109: node: we could improve this test to cause a segfault. - http://git.io/B-xJfQ
[21:39] HalcyonXn has joined the channel
[21:39] zemanel has joined the channel
[21:39] JaKWaC has joined the channel
[21:43] lazyshot has joined the channel
[21:43] rhdoenges has joined the channel
[21:43] blup has joined the channel
[21:44] Shaunzie has joined the channel
[21:44] martndemus has joined the channel
[21:45] eee_c has joined the channel
[21:45] pors has left the channel
[21:45] iammerrick has joined the channel
[21:46] brianloveswords has joined the channel
[21:46] pors has joined the channel
[21:47] superjudge has joined the channel
[21:54] jmar777 has joined the channel
[21:56] bob_ has joined the channel
[21:56] mikeal has joined the channel
[21:56] bob_: hey all - I have a quick question
[21:57] bob_: i am using the net.createConnection to open a socket with a server
[21:57] Shaunzie: I love home brew O.o
[21:57] shinuza has joined the channel
[21:57] bradleymeck has joined the channel
[21:57] fangel has joined the channel
[21:57] Shaunzie: easies package manager I've ever used ._.
[21:57] bob_: the server separates messages with 0, but when I listen for the 'data' event, the messages are not seperated
[21:58] bob_: what is the best way to go about this
[21:58] mikeal1 has joined the channel
[21:58] jamesd_laptop has joined the channel
[21:58] sh1mmer_ has joined the channel
[21:59] cclarke_ has joined the channel
[21:59] strevat_ has joined the channel
[21:59] Fuu` has joined the channel
[21:59] izepstan2 has joined the channel
[21:59] whitman has joined the channel
[22:00] thomblake1 has joined the channel
[22:00] thomblake1 has left the channel
[22:01] cclarke has joined the channel
[22:03] cclarke has joined the channel
[22:04] Heisenmink has joined the channel
[22:04] jimt has joined the channel
[22:07] cclarke_ has joined the channel
[22:09] neilk_ has joined the channel
[22:11] Wa has joined the channel
[22:11] enmand has joined the channel
[22:11] aroman has left the channel
[22:13] mehlah has joined the channel
[22:14] Tobsn has joined the channel
[22:14] criswell has joined the channel
[22:18] kickingvegas has joined the channel
[22:18] HalcyonXn has joined the channel
[22:20] bwarner has joined the channel
[22:20] MrMaksimize has joined the channel
[22:23] MrMaksim_ has joined the channel
[22:24] LukeBrookhart has joined the channel
[22:24] triptec has joined the channel
[22:25] tommyvyo has joined the channel
[22:25] blueadept: anyone know how to get the latest npm working with 0.7.0-pre? (6.6)
[22:25] mehlah has joined the channel
[22:25] isaacs: blueadept: curl http://npmjs.org/install.sh | npm_install=alpha sh
[22:27] tonymilne has joined the channel
[22:27] draginx has joined the channel
[22:27] blueadept: ah cool, thanks isaac
[22:27] isaacs: np
[22:27] draginx: https://groups.google.com/group/nodejs/browse_thread/thread/d34ed2ec3526db5a?pli=1 I'm assuming u guys heard of the "POST data problem" — is there a fix for this?
[22:29] webben: draginx: Ra dk ]]]
[22:29] cory321 has joined the channel
[22:29] StanlySoManly has joined the channel
[22:30] webben: draginx: Randomly seed hash keys. Or, limit lengths of POSTed/GET/ed data that gets dumped into hashes.
[22:30] r1ngzer0: draginx: limit size of POST forms. (until V8 tackles this)
[22:31] draginx: i can do that on the httpd level right?
[22:31] webben: draginx: Apache can likely do that yes.
[22:31] webben: one way or another
[22:32] draginx: how owuld u limit it in node.js?
[22:32] barberdt has joined the channel
[22:32] tbranyen: r1ngzer0: i think that was disproved
[22:32] tbranyen: just don't use POST
[22:32] tbranyen: use PUT
[22:32] tbranyen: ^_^
[22:33] webben: Doesn't matter what you use if it's dumped into a hash.
[22:33] tbranyen: well i was joking
[22:34] TimTim has joined the channel
[22:34] cory321: hi guys
[22:34] cory321: so im trying to install nodejs on windows 7, and it says cygwin is no longer supported and it suggests I use MSVC. 
[22:34] r1ngzer0: it seemed to me that limiting to a few kB would be enough.
[22:34] cory321: do I have to?
[22:34] r1ngzer0: (assuming you have that luxury)
[22:35] Druide_ has joined the channel
[22:36] mehlah has joined the channel
[22:36] hipsters_ has joined the channel
[22:36] martndemus has joined the channel
[22:38] tonymilne has joined the channel
[22:39] mc: grr
[22:39] jimt_ has joined the channel
[22:39] mc: fs.write is deciding to never fire its callback
[22:39] mc: not sure why..
[22:39] CoverSlide: Corey: yes, cygwin is no longer supported
[22:40] isaacs: draginx: if you want to limit it in node.js, just set a limit yourself in whatever is attaching to the "data" event
[22:40] CoverSlide: but if you add the node.exe executable to your PATH, it works nearly identically, except much much faster
[22:40] CoverSlide: damn he left
[22:40] tonymilne has joined the channel
[22:41] draginx: isaacs: uhh how would that work exactly?
[22:41] isaacs: draginx: var len = 0, maxLen = 1024 * 1024; req.on("data", function ( c ) { if (len + c.length >= maxLen) return fail(req, res); len += c.length; doSomething( c ); })
[22:41] draginx: lol i see
[22:41] isaacs: use programming :)
[22:41] isaacs: and javascript
[22:41] mmalecki: I heard it's hard
[22:41] ryanfitz has joined the channel
[22:42] CoverSlide: that's what she said
[22:42] draginx: isaacs: sorry.. I thought the attack meant when the POST data is long and when the Javascript (or language) parses that data — then it gets "attacked"?
[22:42] cmr: Corey: You get around, eh?
[22:43] bnoordhuis has joined the channel
[22:43] JJMalina has joined the channel
[22:43] isaacs: draginx: yeah, but that approach above would limit the size.  so you could return a 413 and kill the connection.
[22:43] draginx: ah I see
[22:43] isaacs: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.14
[22:49] ambroff has joined the channel
[22:50] warz has joined the channel
[22:50] gausby has left the channel
[22:51] stagas has joined the channel
[22:52] Martz has joined the channel
[22:53] mc: grr!
[22:53] sh1mmer: ?
[22:53] mc: any ideas why fs.write won't trigger my callback?
[22:53] tbranyen: fs.writeFile ?
[22:53] mc: fs.write(self._fd, writeBuffer, 0, writeBuffer.length, self._filePos, function (err, written, buffer) { console.log('wee!'); });
[22:54] mc: callback never triggers
[22:54] tbranyen: oh right, forgot about that method
[22:55] tonymilne_ has joined the channel
[22:55] ph^ has joined the channel
[22:55] mc: it writes the buffer
[22:55] mc: just never calls back
[22:55] sh1mmer: mc if you do it to something very spurious do you get an error?
[22:55] tonymilne_ has joined the channel
[22:56] mc: to something spurious? what do you mean?
[22:56] DTrejo has joined the channel
[22:56] sh1mmer: like a fd that doesn't accept writes
[22:57] mc: nope
[22:57] sh1mmer: weird
[22:59] sh1mmer: try a debugger and see what's happening in the event emitter
[23:00] MUILTR has joined the channel
[23:00] StanlySoManly1 has joined the channel
[23:00] MatthewS has joined the channel
[23:02] CoverSlide: what os / version
[23:03] jbpros_ has joined the channel
[23:04] jakehow has joined the channel
[23:04] aioue has joined the channel
[23:05] criswell has joined the channel
[23:06] Me1000 has joined the channel
[23:14] itayneeman has joined the channel
[23:17] drudge23 has joined the channel
[23:22] MrMaksimize has joined the channel
[23:24] ChrisMatthieu has joined the channel
[23:26] hotchkiss has joined the channel
[23:26] blup has joined the channel
[23:27] ericnakagawa has joined the channel
[23:29] MrMaksim_ has joined the channel
[23:29] jimt has joined the channel
[23:30] MrMaksim_ has joined the channel
[23:30] erichynds has joined the channel
[23:31] MrMaksim_ has joined the channel
[23:32] ChrisMatthieu has joined the channel
[23:34] socketio\test\46 has joined the channel
[23:34] samBiotic has joined the channel
[23:35] bwarner has joined the channel
[23:37] mikeal has joined the channel
[23:40] devongovett has joined the channel
[23:40] TRON__ has joined the channel
[23:40] TRON__: what do you guys think of this? https://github.com/ecto/jaccard
[23:40] tvw has joined the channel
[23:41] level09 has joined the channel
[23:41] joshfinnie has joined the channel
[23:43] Dmitrijus: TRON__: nothing good, actually
[23:43] MooGoo: the picard index
[23:43] MooGoo: sounds cool
[23:43] insin: jaccard.makeItSo()
[23:43] Dmitrijus: TRON__: who the well publishes ~20 lines of code as a package? ;]
[23:43] Dmitrijus: s/well/hell/
[23:44] MooGoo: picard.engage()
[23:44] mmalecki: Dmitrijus: why not?
[23:44] iRoj has joined the channel
[23:44] insin: people who don't want to end up with another sprawling util project! :)
[23:44] rasyid7 has joined the channel
[23:44] mmalecki: I find it a good practice.
[23:44] nicholasf has joined the channel
[23:45] Dmitrijus: mmalecki: why it is a good practise? :)
[23:45] NetRoY has joined the channel
[23:45] mmalecki: Dmitrijus: modularization. it's package is good at counting this distance. what else does it need?
[23:45] nicholasf: hi, I have to get a grip on either using promises or eventing with node.js (and testing)
[23:45] nicholasf: can someone recommend a good resource for this?
[23:46] DTrejo: nicholasf: http://stella.laurenzo.org/2011/03/bulletproof-node-js-coding/
[23:46] DTrejo: highly recommended reading
[23:46] nicholasf: thanks
[23:46] nicholasf: ACTION reads that
[23:46] DTrejo: :)
[23:47] insin: ACTION goes to look for a readability bookmarklet
[23:47] vnguyen has joined the channel
[23:47] Dmitrijus: mmalecki: if we would to split every possible algortithm/code into 20lines modules, it would be a mess beyond our ability to manage
[23:48] mmalecki: Dmitrijus: no, why?
[23:48] Nss has joined the channel
[23:48] mmalecki: Dmitrijus: no, really, why?
[23:49] Dmitrijus: mmalecki: packages are harder to manage,, evar :)
[23:49] mmalecki: Dmitrijus: no, npm makes it easy
[23:49] caioketo has joined the channel
[23:49] bingomanatee_ has joined the channel
[23:49] Dmitrijus: mmalecki: no?
[23:49] mmalecki: Dmitrijus: what makes you say that?
[23:50] DTrejo: require('goldensectionsearch').gss(/* blah blah */)
[23:50] DTrejo: so much better than rewriting it
[23:50] Dmitrijus: npm make this easy, which only prooves the point it is hard to manage without npm
[23:50] mmalecki: DTrejo++
[23:50] Dmitrijus: mmalecki: depedencies, api changes and such
[23:50] bingomanatee_: I've come to "depend" on npm … he he
[23:50] Dmitrijus: bingomanatee_: me2
[23:51] Dmitrijus: but still i prefer to keep my dependency list as short as posible 
[23:52] DTrejo: I prefer to use as little code as possible as well
[23:52] shinuza has joined the channel
[23:52] mmalecki: DTrejo++
[23:52] bingomanatee_: I'm quite comfortable with depending on a lot of large well maintained modules. 
[23:52] Dmitrijus: DTrejo: true that
[23:52] DTrejo: let's argue more guuys :)
[23:52] mmalecki: it's one line added to package.json vs 20 lines added to code
[23:52] insin: ACTION is only finally getting away from the browser-dev mindset of "use as little as possible" after months of fiddling with node
[23:53] mmalecki: what I mean, is, dependencies are cheap, code isn't
[23:53] bingomanatee_: I think if you look at the end result of most real company production codebases you are going to end up with some sort of sprawl … a good set of legibility and abstraction conventions are the only real thing you can count on. 
[23:53] Dmitrijus: mmalecki: 20 lines of code, are, cheap! :)
[23:54] sardaven has joined the channel
[23:54] mmalecki: Dmitrijus: nope. you have to maintain them
[23:54] Dmitrijus: i really love modularity and such, but well, not the 20lines modules :)
[23:55] mmalecki: Dmitrijus: https://github.com/mmalecki/node-rget/blob/master/lib/rget.js :)
[23:55] Dmitrijus: mmalecki: IMHO (notice the H), maintaining 1 line in package.json is harder than simple/straightforward 20 lines of code
[23:55] ag4ve has joined the channel
[23:56] mmalecki: Dmitrijus: it's all about trust
[23:56] Dmitrijus: mmalecki: indeed it is :)
[23:56] tommyvyo has joined the channel
[23:59] Brandon_R has joined the channel
[23:59] level09: how is nodes for windows ? 
[23:59] Brandon_R: Hey guys
[23:59] level09: *nodjs
[23:59] Brandon_R: does anyone here know how to use libuv?
[23:59] nicholasf: anyone here from australia?
[23:59] Brandon_R: ie have a tutorial/project on github?
[23:59] nicholasf: im creating a node.js google group for australians
[23:59] Brandon_R: where i can take a look at how the api is used
[23:59] Brandon_R: i can't quite grasp it
