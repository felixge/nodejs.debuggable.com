[00:00] AvianFlu: in order to use the cb identifier, you have to have a cb function somewhere
[00:00] AvianFlu: somebody who knows a ton of coffeescript might want to step in here
[00:01] jakehow has joined the channel
[00:02] smathy: ...or he could just compile it to JS and ask again :)
[00:02] blup: ........ im getting to it, one sec
[00:03] JumpMast3r has joined the channel
[00:03] zackattack has joined the channel
[00:04] seivan has joined the channel
[00:07] adrianmg has joined the channel
[00:07] materialdesigner: doesn't jhbot have a compile gist?
[00:07] blup: http://pastebin.com/jLGARgBV
[00:09] blup: i just copied the relevant parts
[00:09] aaronblohowiak: SubStack: Woot! simple token substitution done.
[00:09] blup: i'm trying to use cb(data) in line 45, but it only works once, afterwards it says cb() is undefined
[00:11] SubStack: rawk
[00:11] ohtogo has joined the channel
[00:12] chjj: substack: i namedropped node-burrito on SO and got 500 rep
[00:12] chjj: http://stackoverflow.com/questions/6851869/lightweight-javascript-to-javascript-parser/6901537#6901537
[00:12] AvianFlu: blup: this looks like you're only calling the cb() in the error function
[00:12] chjj: !
[00:12] SubStack: haha
[00:13] blup: AvianFlu: let me correct it to show what i meant
[00:14] cjm has joined the channel
[00:14] blup: AvianFlu: http://pastebin.com/fki4F5td
[00:15] AvianFlu: blup: if the one in the error handler fires once and then stops, it means there's an error
[00:15] AvianFlu: that's what that second function is for, no?
[00:15] AvianFlu: the one labelled "this works"?
[00:16] blup: AvianFlu: hmmm... sorry, that says error but its not an error handler, its part of 'async'.. its fired once the foreach is finished to do further processing.
[00:16] AvianFlu: oh yeah, the final callback thing
[00:17] ironlad has joined the channel
[00:17] blup: yup
[00:17] AvianFlu: so you're saying you immediately see "finished"?
[00:17] blup: so within the loop i can't call cb() (it works once, then error), but i can at the end.. but id rather have the info progressively
[00:18] AvianFlu: are you sure the loop is looping?  cause this looks like it's hitting an error in the loop and stopping
[00:18] AvianFlu: getJSON looks like it's an http request? or no
[00:19] aaronblohowiak: SubStack: https://github.com/aaronblohowiak/UglifyJS/commit/99e808b725868214a5c4e0da5e4160c607ab5ba3
[00:19] blup: no, it keeps looping and firebug gives me one result and then hundreds of cb() is not defined
[00:19] blup: AvianFlu: yes, its a wrapper for 'request' module
[00:19] AvianFlu: so where's cb defined
[00:19] AvianFlu: OH WAIT
[00:20] AvianFlu: are you thinking that the server code is gonna call your client-side callback?
[00:20] blup: line 20
[00:21] blup: yea, i'm using socketstream, which is based on socket.io
[00:21] AvianFlu: well, your server code doesn't know what 'cb' means
[00:21] blup: like i said, it works normally if i call the cb once. i get the data fine. the problem is calling it multiple times
[00:21] SubStack: aaronblohowiak: that is super neat
[00:21] apanda has joined the channel
[00:22] clifton has joined the channel
[00:22] SubStack: aaronblohowiak: maybe I can hack burrito to support .addKeyword() and .addOperator() using this trickery
[00:22] aaronblohowiak: SubStack: i am thinking about changing it around so the token_interceptor can chose wether to consume from the source stream
[00:24] aaronblohowiak: SubStack: the burrito docs are a little tricky to follow
[00:25] blup: AvianFlu: nevertheless, thanks for your help :)
[00:25] AvianFlu: blup: what's the server-side output?
[00:25] SubStack: aaronblohowiak: what about them?
[00:26] SubStack: just walk some source with a callback which gets a node object
[00:26] R4md4c: bnoordhuis, I solved the problem by using process.on('uncaughtException', function(error) { }); thanks I am able to handle the error gracefully so that the server could continue it is working state
[00:26] aaronblohowiak: so cb is called for every node?
[00:27] bradleymeck: substack you know the best way (or any) to get the uglify js to include comments?
[00:27] aaronblohowiak: bradleymeck: don't use uglify :D
[00:27] bradleymeck: ugg but its ast is much nicer than parse-js
[00:27] dominictarr has joined the channel
[00:27] bradleymeck: or panpg
[00:28] davidcoallier has joined the channel
[00:28] rt1 has joined the channel
[00:28] blup: AvianFlu: server-side output is fine, i get all the json fine..
[00:29] SubStack: bradleymeck: you could check the gaps between the start and end annotations
[00:29] blup: AvianFlu: i'm wondering if i should instead set up an event emitter and make it publish the data for each request
[00:29] SubStack: it's possible
[00:29] SubStack: so long as you have the original source
[00:29] deadman87 has left the channel
[00:29] aaronblohowiak: bradleymeck: they never are put in the AST
[00:29] AvianFlu: blup: I'm not too familiar with socketstream, but it's worth a shot
[00:30] SubStack: bradleymeck: I did a similar trick with https://github.com/substack/jsup
[00:30] aaronblohowiak: SubStack: anyway i can use burrito with a pre-existing AST instead of a string?
[00:31] ceej has joined the channel
[00:31] SubStack: aaronblohowiak: nope but that would be handy
[00:31] SubStack: aaronblohowiak: one sec, hacking this in
[00:32] aaronblohowiak: :D
[00:32] blup: AvianFlu: its a nice 'framework', you should take a look... unless youre anti-coffee ;)
[00:34] [[zz]] has joined the channel
[00:34] blup: AvianFlu: i found my answer: "The difference is that with a callback you're either going to get an error or a result. Never both, and never more than one event. For cases where there are more than two events and/or they can be called multiple times, then you need the more powerful and flexible EventEmitters."
[00:35] markdaws has joined the channel
[00:36] AvianFlu: blup: that quoted sentence sounds pretty on point
[00:37] AvianFlu: I wouldn't say I'm anti-coffee... I just know how to write 'real javascript' and save the coffee for drinking :-P
[00:37] SubStack: aaronblohowiak: ok done
[00:38] aaronblohowiak: ty!
[00:38] SubStack: aaronblohowiak: https://github.com/substack/node-burrito/blob/master/test/ast.js#L6-L7
[00:38] SubStack: the AST must be annotated or it won't work
[00:38] aaronblohowiak: SubStack: that takes a burrito AST, not an uglify ast
[00:38] neoesque has joined the channel
[00:39] SubStack: aaronblohowiak: burrito AST === uglify AST
[00:39] aaronblohowiak: SubStack: ah,what do you mean by annotated
[00:39] SubStack: https://github.com/substack/node-burrito/blob/master/index.js#L7
[00:39] blup: AvianFlu: whichever style fits you best.. however, i can say from experience that coffee tastes better when writing coffee :)
[00:40] hybsch has joined the channel
[00:40] SubStack: aaronblohowiak: the 3rd argument to parse() I think is the one that turns on annotations
[00:40] aaronblohowiak: ok!
[00:40] SubStack: annotations are the objects with name, start, end
[00:41] devongovett has joined the channel
[00:42] odie5533: http://www.indeed.com/jobtrends?q=java%2C+C%2B%2B%2C+C%23%2C+visual+basic%2C+Perl%2C+objective+c%2C+JavaScript&l=
[00:43] mcluskydodallas has joined the channel
[00:43] markstory has joined the channel
[00:43] Cromulent has joined the channel
[00:44] bksf has joined the channel
[00:44] bnoordhuis: odie5533: you're suggesting we should rewrite node in java?
[00:44] ohtogo has joined the channel
[00:45] PragCypher has joined the channel
[00:45] odie5533: I make no suggestions. I only offer raw statstics stating clearly that Java is a better programming language.
[00:46] odie5533: But really I thought it was cool the number of jobs JavaScript has posted are now exceeding those of every other language.
[00:47] bksf: i know i've asked before. but i'm trrying to force https. i have https running, but if the user hits http i get a 'blank' page. anyone?
[00:48] brianseeders has joined the channel
[00:49] odie5533: 301 redirect to the https?
[00:50] mscdex: java isn't better than most programming languages out there
[00:50] mscdex: ;-)
[00:50] odie5533: mscdex: Then why is everyone's software apparently written in Java?
[00:50] mscdex: everyone? :-)
[00:51] csanz has joined the channel
[00:51] mscdex: imho the only thing java is good for is cross-platform software
[00:52] AvianFlu: imho if it weren't for minecraft I wouldn't even have the jvm installed
[00:52] odie5533: I disagree. Python is superior for cross-platform software IMO.
[00:52] odie5533: I disable Java in my browser. Whoever decided to embed Java in a browser was retarded.
[00:52] mscdex: odie5533: i didn't say java was the best cross-platform solution, i just said that's its only strength
[00:53] mscdex: besides, i'd bet more people have the jvm installed on their machines than python
[00:53] bksf: odie5533: no i get that, im just saying that i cant even test for request.socket.pair._secureEstablished / being true
[00:53] bksf: when i hit http not https i get not output logging, errors anything just a 'white screen'
[00:53] bksf: otherwise i could just read the headers
[00:54] sniper506th has joined the channel
[00:54] mscdex: bksf: what do you mean by "forcing https" ? just run an https server on port 443
[00:55] c4milo2 has joined the channel
[00:56] random123: What is it called when you do something like "{spawn} = require('child_process');"
[00:56] random123: the 
[00:56] mikepjura has joined the channel
[00:56] mikepjura has left the channel
[00:56] bksf: mscdex: have you ever actually ... tried that?
[00:57] mikepjura has joined the channel
[00:57] mscdex: bksf: i've run an https server lots of times :-)
[00:57] mscdex: random123: variable assignment?
[00:57] mscdex: heh
[00:57] bksf: regardless of the port, sockets/ports work on services not the other way. https can be run on any port. regardless - connect/node running https on any port whether 443 or 80 or 3000 etc throws an empty screen for http no error logging etc and is fine for https
[00:58] bksf: so if the index is https - any ideas on a solution.
[00:58] bksf: ie, how can i get app.get("/" .. over http not https.
[00:58] mscdex: bksf: i know they can run on any port, but 443 is the port registered for https, so there's generally no mistaking it for something else
[00:58] random123: mscdex: The {} around varname looks odd to me though..
[00:58] csanz has joined the channel
[00:59] random123: mscdex: I know what it does, but I've just never seen it in the specification or head of it before.
[00:59] mscdex: random123: i've never seen anyone use that in ordinary module code
[00:59] bksf: who would mistake it? that doesnt make sense. its the general port for it yeah - but that doesnt make a browser suddenly switch to https.
[01:00] davidcoallier has joined the channel
[01:00] bbrandon has joined the channel
[01:00] socketio\test\24 has joined the channel
[01:01] blup: mscdex: i've actually seen the {} around varnames quite often and i wondered as well why they were there.
[01:01] blup: not sure which projects though
[01:01] bksf: blup: its to encapsulate it as an object
[01:01] mscdex: bksf: if a client is trying to access an https server with an http client on port 443, it's their problem. most sites will do something where they redirect from an http server on port 80 to the https server on port 443
[01:02] csanz has joined the channel
[01:02] mscdex: bksf: not try to handle both types of clients on the same port
[01:02] socketio\test\09 has joined the channel
[01:02] McMAGIC--Copy has joined the channel
[01:02] bksf: i understand that part ...
[01:03] bksf: but im asking ... why does node listen for non https?
[01:03] bksf: i dont need a should / its their fault / etc. im just looking for a solution.
[01:03] socketio\test\85 has joined the channel
[01:04] bksf: because node is listening on https and non https but http with no content served no errors etc
[01:04] bksf: so if i could handle that it would be nice.
[01:04] DTrejo has joined the channel
[01:04] bksf: regardless of port numbers, the node instance will be proxied over nginx
[01:05] DTrejo_ has joined the channel
[01:05] csanz has joined the channel
[01:05] socketio\test\85 has joined the channel
[01:05] k1ttty has joined the channel
[01:06] csanz has joined the channel
[01:07] xandrews has joined the channel
[01:09] blup: so "{spawn} = require 'child_process'" is essentially the same as "spawn = require('child_process').spawn" ?
[01:09] blup: processes*
[01:09] aaronblohowiak: SubStack: https://github.com/aaronblohowiak/macros
[01:09] aaronblohowiak: i gtg in 2 mins
[01:11] jhurliman has joined the channel
[01:11] mike5w3c_ has joined the channel
[01:11] mundanity has joined the channel
[01:16] rchavik has joined the channel
[01:17] seivan has joined the channel
[01:20] jacobolus has joined the channel
[01:20] dhaivat has joined the channel
[01:21] DTrejo has joined the channel
[01:22] socketio\test\72 has joined the channel
[01:22] McMAGIC--Copy has joined the channel
[01:22] socketio\test\97 has joined the channel
[01:25] socketio\test\06 has joined the channel
[01:25] ericmuyser has joined the channel
[01:27] abraxas has joined the channel
[01:28] Stythys has joined the channel
[01:28] socketio\test\33 has joined the channel
[01:28] socketio\test\98 has joined the channel
[01:31] fdenbow has joined the channel
[01:32] jbrokc has joined the channel
[01:33] hij1nx has joined the channel
[01:35] csanz has joined the channel
[01:38] smtlaissezfaire_ has joined the channel
[01:39] Kami_ has joined the channel
[01:41] tilgovi has joined the channel
[01:41] emmanuel has joined the channel
[01:44] catshirt has joined the channel
[01:45] isaacs has joined the channel
[01:46] Anton_ has joined the channel
[01:46] mscdex: yuck node 0.2.3 in webos 3 :-(
[01:48] CStumph has joined the channel
[01:52] boogyman has left the channel
[01:56] broofa has joined the channel
[02:01] ajashton has joined the channel
[02:02] elifou has joined the channel
[02:02] odie5533: I think ubuntu lets you install 0.2.6!
[02:02] necrodearia has joined the channel
[02:02] adam123 has joined the channel
[02:02] adam123: hey guys
[02:02] adam123: i'm having trouble compiling node.js on OS X
[02:03] adam123: 10.5
[02:03] adam123: err.. 10.6
[02:03] adam123: ryah:  you around man?
[02:04] elifou: i'm trying to write a rotating file dump and having trouble with writestreams right now. i really want to do something like var ```ws = fs.createWriteStream(path_to_file, options)``` and then ```ws.flush()``` 
[02:04] elifou: after having written somestuff of course
[02:04] Dreamer3 has joined the channel
[02:04] elifou: i also might be going about this wrong entirely
[02:06] AvianFlu: what are you trying to write?
[02:07] AvianFlu: like, what kind of source is it
[02:08] yuroyoro has joined the channel
[02:08] elifou: i'm just making a little utility "dump" module in javascript that basically wraps around the a writestream. it writes to file. then periodically rotates the files.
[02:08] elifou: i'm testing it now and i kind of wanted to have the option of reading the file after flushing the stream
[02:09] elifou: but leaving it open
[02:09] mscdex: adam123: what's the problem?
[02:09] secoif has joined the channel
[02:10] adam123: mscdex: after i run ./configure, doing a make gives me this error: "/System/Library/Frameworks/Carbon.framework/Headers/Carbon.h:70:35: error: SecurityHI/SecurityHI.h: No such file or directory"
[02:10] mscdex: adam123: and what node version?
[02:11] adam123: mscdex: stable, 0.4.10
[02:11] adam123: actually i think i tried unstable and got the same problem
[02:11] joshthecoder has joined the channel
[02:12] AvianFlu: elifou: yeah, but what's being written?  how it comes in will affect what I suggest you do about it :)
[02:12] heavysixer has joined the channel
[02:12] elifou: just text. utf-8 encoding.
[02:13] mscdex: adam123: what version of xcode do you have?
[02:13] broofa has joined the channel
[02:14] mscdex: adam123: also, are you pulling in node from git or are you using tarballs?
[02:15] secoif has joined the channel
[02:15] AvianFlu: elifou: so you don't want to close the write stream, but you want to read what's been written? is that what you're saying?
[02:16] Swimming_bird has joined the channel
[02:16] adam123: mscdex: doh, that could have been the problem, i don't think i finished installing xcode tools, let me check. also downloading tarballs
[02:16] stalled has joined the channel
[02:17] mscdex: adam123: that might be a problem RE: xcode ;-)
[02:17] elifou: @AvianFlu yes
[02:17] jchris has joined the channel
[02:17] elifou: @AvianFlu I want to know what's been written, including what's left to write
[02:18] skm has joined the channel
[02:19] apanda has joined the channel
[02:20] skampler has left the channel
[02:21] tyoc213 has joined the channel
[02:21] CStumph has joined the channel
[02:22] AvianFlu: is the incoming data a read stream?
[02:22] AvianFlu: cause Stream.pipe() is your friend
[02:24] cjm has joined the channel
[02:24] dexter_e has joined the channel
[02:24] elifou: no, I could probably change that though.
[02:26] elifou: I'll play around with that
[02:27] AvianFlu: the streams most likely have events that you can use to do what you want
[02:28] AvianFlu: and stream.pipe is all sorts of cool
[02:28] AvianFlu: as far as I've seen, you can pipe a read stream to more than one place, too
[02:29] DTrejo has joined the channel
[02:29] AvianFlu: but that may not always be true, I haven't used them for anything super-complicated yet
[02:31] dguttman has joined the channel
[02:32] elifou: AvianFlu. yeah, it looks like i might have too much fun with it. thx for the tip, if not distraction.
[02:36] kriszyp has joined the channel
[02:36] CIA-65: node: 03isaacs 07master * ref35f4d 10/ test/disabled/test-http-default-port.js : Test for default host headers on default ports in https and http - http://bit.ly/pTCl1O
[02:36] CIA-65: node: 03Mikeal Rogers 07master * r24a1f6e 10/ (lib/http2.js lib/https2.js): Fixes https host header default port handling. - http://bit.ly/pSJO7R
[02:37] ryah: adambrault: yes?
[02:37] ryah: wrong adam, sorry
[02:39] mrryanjohnston: anyone here using mongoose-auth for password authentication?
[02:40] shanebo has joined the channel
[02:40] shanebo has left the channel
[02:41] shanebo has joined the channel
[02:41] arpunk: mrryanjohnston: me
[02:42] mrryanjohnston: arpunk: you're using it for username/password authentication?
[02:43] mrryanjohnston: do you perhaps have the code on github?
[02:44] dguttman has joined the channel
[02:46] abraxas: Mmm, new node-mysql. Anyone been playing with it yet?
[02:47] shanebo: abraxas, i think there are a few. this is new?
[02:47] shanebo: care to share the github url?
[02:47] abraxas: I mean there's a new version of node-mysql.
[02:47] abraxas: 0.9.2
[02:48] abraxas: BC incompatibility. Strange that they only changed the minor version number.
[02:49] arpunk: mrryanjohnston: let me finish some stuff and ill gist it for you. Yea, im using user/pass.
[02:50] mrryanjohnston: arpunk: thank you. For some reason I'm having serious troubles with it
[02:51] abraxas: I'm very concerned about the new re-connect strategy in node-mysql, it may completely mess up transactions.
[02:52] neorab has joined the channel
[02:53] bksf: isaacs: sweeeeet. https://github.com/joyent/node/commit/ef35f4d6c1b4cc0f0ff72e2b91c02e078bc19fa3
[02:53] newy has joined the channel
[02:53] CStumph has joined the channel
[02:53] isaacs: bksf: that's why npm's been broken on node master lately.  mikeal actually fixed the code
[02:54] abraxas: Are there any node-mysql maintainers online right now?
[02:55] bksf: ahh very cool.
[02:55] dgathright has joined the channel
[02:56] bksf: isaacs: i gotta say the past yr just doing ios makes me feel like "where have i been" regarding node. i spent the past 4 or 5 days just coding node all day every day ive barely slept
[02:56] eee_c1 has joined the channel
[02:56] bksf: its pretty amazing
[02:56] isaacs: bksf: nice :)
[02:57] bksf: i have a new client signing a big ios project tomorrow and im actually upset hah
[02:57] isaacs: haha
[02:57] bksf: ... but seriously hah
[02:58] bksf: i think that its that everything seems to make sense. not in a technical way necessarily / but in a design pattern friendly way
[02:58] tbranyen: i've been compiling firefox for the past 30 minutes
[02:58] tbranyen: i just wanna sleep
[03:00] _root_ has joined the channel
[03:01] random123: Are the only way to really control async flow in JS the methods like 'async' and 'Step'? It seems like a more elegant solution should exist?
[03:01] kenperkins has joined the channel
[03:02] ajashton has left the channel
[03:03] mscdex: or just abstract the problem into separate functions instead of nested anonymous functions
[03:03] AvianFlu: random123: learning javascript helps too :-P
[03:03] mscdex: :-D
[03:03] AvianFlu: mscdex +10
[03:03] rickharrison: To any mongoose experts: is it possible to do Model.find() inside of a static/method in a schema
[03:05] materialdesigner has joined the channel
[03:05] boehm has joined the channel
[03:08] mike5w3c_ has joined the channel
[03:08] random123: mscdex: that is basically the same, except it looks a lot sloppier, you are just passing callbacks deeper and deeper to control the flow
[03:09] random123: mscdex: I think atleast something like Seq offers a nicer abstraction, but I was hoping for something better
[03:10] mscdex: random123: what do you mean deeper and deeper? if you pull the anonymous functions out, you aren't nesting your code deeper and deeper
[03:11] random123: mscdex: It would seem that the specification for emcascript should handle a true solution to make async look more procedural
[03:12] jvdev has joined the channel
[03:12] mscdex: meh
[03:12] wookiehangover has joined the channel
[03:12] mscdex: they can leave it to userland
[03:13] luke` has joined the channel
[03:13] AvianFlu: random123: try an event emitter
[03:13] mscdex: if it's that much of a problem, there's a variety of control flow modules as you noted and node-fibers
[03:13] AvianFlu: whatever.on('event', fn)
[03:13] mscdex: i've never had it become an issue, but i guess maybe it comes down to the design too
[03:14] AvianFlu: yeah once I stopped using anonymous functions so much, my life got way easier
[03:14] tbranyen: i still use them, i just break stuff out more
[03:14] nairbo_ has joined the channel
[03:15] AvianFlu: yeah, little stuff stays anonymous
[03:16] random123: Well, if I want to read file A then concat to variable, File B and so on without having to make some specialized sequence?
[03:16] jj0hns0n has joined the channel
[03:16] AvianFlu: so you want to read files a-d, and then have a big string that a + b + c + d?
[03:17] AvianFlu: I mean... recursion?
[03:17] tbranyen: or just make an array of file names and pass that to a function that does all that
[03:17] tbranyen: no recursion needed
[03:17] random123: Yes, but at different points
[03:17] random123: Not in a row
[03:18] tbranyen: read them all in at the same time then and get a single callback and then inside that callback work with the data
[03:20] matomesc has joined the channel
[03:21] Guest102918 has joined the channel
[03:24] AvianFlu: random123: https://gist.github.com/1131154 - one way to not nest callbacks
[03:24] AvianFlu: P.S. I didn't run that code, I'm just showing you the idea
[03:26] dexter_e has joined the channel
[03:26] random123: thanks
[03:26] dgathright has joined the channel
[03:26] AvianFlu: that's one case where I'd probably nest the first one
[03:26] AvianFlu: as it's pretty much no code
[03:26] Guest102918: Can I ask an Express question in here?  #express seems to be dead
[03:27] AvianFlu: but I wanted to show the idea
[03:27] random123: Well, from this I realized I am just getting OCD about trying to do this in a procedural way
[03:28] jumpmast3r_ has joined the channel
[03:28] AvianFlu: javascript is a functional programming language, and functions are first-class objects - pass them bitches around!
[03:28] AvianFlu: that's how I feel
[03:29] random123: I was, then my code started to get really messy, because I wanted to load them 1 at a time, when I needed them, instead of just loading them all at the start
[03:33] _root_ has joined the channel
[03:33] AvianFlu: I've never heard of a situation where one should be worried about that in node, but that might just be me
[03:34] random123: In procedural I could get away with it pretty easily, just write a wrapper around it and go "buffer += template(filename);"
[03:34] eee_c has joined the channel
[03:34] AvianFlu: I mean, you can still concat the result of a function call
[03:34] AvianFlu: and if you really want it, fs.readFileSync is a synchronous function that returns the data
[03:34] bksf: everyone keeps speaking about fiber/fibers? on the node mailing list ...
[03:35] bksf: im onyl 5 days in but im a pretty serious coder ive been around the block ... i dropped into the list mid argument. any pointer to what fibers are?
[03:35] bksf: threads?
[03:35] Guest102918: bksf: http://ajaxian.com/archives/adding-fibers-to-your-server-side-v8-diet-offers-efficiency-and-clarity
[03:36] AvianFlu: bksf: the other side of the argument is that fibers are a way to pretend you're not writing javascript
[03:37] AvianFlu: they let you handle asynchronous things with an API that's more synchronous - that might be a neutral short answer
[03:37] MetaMucil has joined the channel
[03:37] AvianFlu: but, I write callbacks, and I troll people on the internet sometimes
[03:37] AvianFlu: (full disclosure :-P )
[03:37] bksf: "but, I write callbacks, and I troll people on the internet sometimes (full disclosure :P)
[03:37] jakehow has joined the channel
[03:37] bksf: hah awesome
[03:37] bksf: reading now, thanks Guest102918 
[03:38] Dreamer3__ has joined the channel
[03:38] random123: If you were allowed to do something like @function for async, and if you do that on a function, it will go back to the event loop and come back when it receives a result, could be JSON data result and continue execution where it left off
[03:38] random123: That would rock
[03:38] _root_ has joined the channel
[03:38] AvianFlu: do you know about process.nextTick?
[03:38] jamescarr: AvianFlu, I'm actually confused by the whole fibers thing on the node mailing list... I thought the original intent of fibers is absolutely nothing to do with synchronous models of programming
[03:38] jamescarr: but rather a good way to handle threading if you want it
[03:39] AvianFlu: the node fibers thing doesn't involve any threads, I thought
[03:39] AvianFlu: fibers in general I think you're right
[03:39] jamescarr: that fibers module seems to be a far cry from fibers as described on wikipeida and the original V* article for v8cgi
[03:39] jamescarr: the fibers addon for v8cgi actually makes good sense
[03:39] AvianFlu: yeah, it SOUNDS like pretend coroutines for one-process node.js
[03:40] AvianFlu: but I try not to use control flow libraries when I can help it, so I may be mistaken
[03:40] chapel: you aren't
[03:41] jamescarr: AvianFlu, ah there is nothing wrong with flow control libraries
[03:41] random123: Well imagine if you could just do, "data = @readFile(filename, 'utf8');" and it was completely Async
[03:41] jamescarr: I actually use Step quite a bit
[03:41] jamescarr: it's useful
[03:41] chapel: it isn't real fibers by any logical sense
[03:41] AvianFlu: I didn't mean to sneer at them
[03:41] chapel: random123: whats the point?
[03:41] AvianFlu: I've used async quite a few times, and step once or twice
[03:41] AvianFlu: there are definitely times to say "yeah... screw this"
[03:41] chapel: you still have to know it's async, and everything else would have to know data couldn't be read until its results came in
[03:41] AvianFlu: but I try to do it myself, cause I feel like I'll be a better coder for it
[03:41] chapel: ACTION likes seq
[03:42] rurufufuss has joined the channel
[03:42] zahanm has joined the channel
[03:42] chapel: AvianFlu: yeah, its not hard to write custom control flow
[03:42] AvianFlu: random123: what do you mean by 'completely async'?
[03:42] chapel: sometimes it saves more time to use a prebuilt one
[03:42] dherman has joined the channel
[03:43] AvianFlu: random123: fs.readFile already passes the file read off to the OS thread pool and then doesn't execute the callback till the result or error returns
[03:43] AvianFlu: and does other code in the meantime
[03:43] chapel: he just wants it so it looks sync
[03:43] AvianFlu: so what's missing?
[03:43] AvianFlu: oh
[03:43] davidbanham: I'm iterating over elements in Jade, but I need to start my index at 1 rather than 0. How would I go about that? https://gist.github.com/1131171
[03:43] chapel: ++i
[03:43] random123: chapel: Nah, if you do @callFunction() then it would immediately go back to the event loop and do other stuff until that function returns a result, for instance JSON, instead of speeding through the rest of the function so you have to nest stuff to control flow
[03:44] AvianFlu: random123: that's how callbacks work
[03:44] chapel: conceptually, that seems more complicated
[03:44] Guest102918: rather, that's exactly what "async" is
[03:44] davidbanham: chapel: Was that at me? This throws a syntax error: https://gist.github.com/1131171
[03:45] chapel: because you would then have to know that everything after @ would be delayed
[03:45] chapel: well ++i preincrements it
[03:45] random123: This would allow you to control flow and make logic much easier and normal while still retaining the benefit of async performance
[03:45] chapel: before its actually read
[03:45] random123: Thats the point
[03:45] Guest102918: oh, he means a "defer"...that's already in the works for ES Harmony
[03:45] chapel: you can also do i + 1 or something
[03:46] davidbanham: chapel: I edited the gist with the ++i where I think it should go. It doesn't work. - 500 SyntaxError: Unexpected identifier
[03:46] chapel: yeah
[03:46] chjj: make
[03:46] chjj: dammit
[03:46] chapel: I don't know jade that well tbh
[03:46] chjj: :)
[03:47] pushStack has joined the channel
[03:47] davidbanham: Yeah it all seems like it should work, but there seem to be a few gotchas.
[03:47] chapel: where you have + i, try + (i + 1) idk
[03:47] euforic has joined the channel
[03:48] mscdex: anyone know of a good write-up that compares mongodb and couchdb?
[03:48] chapel: mscdex: mongo had a good one sometime ago
[03:48] AvianFlu: if you're trying a string concat, you need to '(i+1).toString()'
[03:48] mscdex: i saw that one, but i thought it might be a bit biased
[03:48] mscdex: heh
[03:48] chapel: mscdex: it seemed to be pretty fair tbh
[03:48] mscdex: also, i wasn't sure how up to date it was
[03:48] chapel: coming from a couchdb lover here :)
[03:48] chapel: yeah, lots of changes between the two of them since then
[03:49] chapel: what are you wanting to do?
[03:49] chapel: I could give you some opinions
[03:49] davidbanham: chapel: Hah! Works perfectly. Didn't think of that, cheers. Ugly as balls, but so long as it works I'm happy.
[03:49] chapel: :)
[03:49] jtsnow has joined the channel
[03:50] Guest102918 has left the channel
[03:50] chapel: random123: I think controlling async flow using callbacks and similar is cleaner conceptually
[03:51] chapel: it may not be as pretty
[03:51] mscdex: chapel: a friend of mine was asking for opinions and i've yet to use a nosql store, so i couldn't really tell him
[03:51] chapel: ah
[03:51] chapel: well need to know what he intends to do
[03:51] bksf: AvianFlu: I think that I prefer non-fibered.
[03:51] chapel: usecase is very important in that decision
[03:51] chapel: bksf: good man (well person, don't know your sex, sorry if not)
[03:51] DTrejo has joined the channel
[03:52] materialdesigner has joined the channel
[03:52] descipher has joined the channel
[03:52] bksf: it's weird because the past ten years I've been working on php/js -/blocking .. then the past year ios, threads/delegates but ..
[03:52] bksf: chapel: heh
[03:52] AvianFlu: bksf: javascript is very different from php/ruby/python/etc, and it takes learning
[03:52] chapel: I think if you use something that hides callbacks, you should at least learn them, really understand them, and choose not to use them, not just pass them by because you don't like how the code looks
[03:53] AvianFlu: but I think that ultimately it's better to learn the JS, which is what I did
[03:53] bksf: bksf: i've worked extensively in javascript for a very long time and also AS3. node though is ... different?
[03:53] chapel: hmm, talking to yourself bksf?
[03:53] bksf: (i prefer as3 hah dont k/b me!)
[03:54] bksf: nah to AvianFlu  chapel 
[03:54] te-brian: I'm working on a little test application using mongoosejs and mongoose-auth (everyauth).  I'm completely stuck on how to write Vows tests for my CRUD methods that required the visitor to be authenticated.
[03:54] AvianFlu: it's not different from browsers much, no
[03:54] chapel: mscdex: if he plans on doing a lot of updates, by default he probably should use mongo
[03:54] chapel: couchdb is not made for in place updates
[03:54] mscdex: i just shot him the link to the mongdb comparison page
[03:54] mscdex: :p
[03:54] te-brian: Started off using tobi and some Vows macros to test the various REST urls... but not sure how to simulate authentication.
[03:55] chapel: well, in the sense that it you have to first read, then write, and need the _rev id
[03:55] pifantastic has joined the channel
[03:56] chapel: has anyone had issues with fs and accessing files, lets say I am uploading a file, it is getting written, but when I try to fs.rename it, it just says it doesn't exist
[03:56] zahanm: wow. installing node on ec2 fresh instance and the default AMI doesn't even have 'make'!
[03:56] mscdex: all the projects i currently have that use a database have relational data, but i did start taking a closer look at mongodb's api just for the fun of it :-)
[03:58] bksf: zahanm: it's why ive been using rackspace
[03:58] JakeyChan has joined the channel
[03:58] chapel: mscdex: Ive not used rdb's with node
[03:58] chapel: just couchdb and mongo
[03:58] bksf: way better support, imaging and selection
[03:58] mscdex: i use mysql
[03:58] AvianFlu: rackspace ++
[03:58] bksf: mongoose is a pretty sick orm for mongo
[03:58] mscdex: never tried postgres though
[03:59] zahanm: hah, it was pretty simple to get up and running though. tl;dr 'sudo yum install gcc gcc-g++ make'
[03:59] zahanm: :)
[03:59] zahanm: also, free usage tier
[03:59] bksf: well
[03:59] chapel: I get enough sql with my php work, relational data can be expressed in non-rdb's just as easily
[03:59] chapel: map/reduce is awesome imo
[04:01] gerard0 has joined the channel
[04:01] zackattack has joined the channel
[04:01] Pilate has joined the channel
[04:02] maqr has joined the channel
[04:03] sivy has joined the channel
[04:03] dexter_e has joined the channel
[04:03] gerard0 has joined the channel
[04:05] gerard0 has joined the channel
[04:07] gerard0 has joined the channel
[04:07] gazumps has joined the channel
[04:08] gerard0 has joined the channel
[04:08] weirdbro has joined the channel
[04:09] sivy_ has joined the channel
[04:09] metellus has joined the channel
[04:10] gerard0 has joined the channel
[04:10] mike5w3c_ has joined the channel
[04:10] apanda has joined the channel
[04:10] weirdbro: Yo, can anyone help me get NodeJS installed on windows? I'm following the wiki entry at https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29, but I'm have trouble compiling
[04:10] mscdex: what error?
[04:10] weirdbro: I get one of the predicted errors, "Build failed: -> task failed (err #2): {task: libv8.a SConstruct -> libv8.a}"
[04:10] mscdex: there's also the mingw version in the form of a single exe
[04:11] weirdbro: Yea, I saw that, should I just do that?
[04:11] dguttman has joined the channel
[04:11] gerard0 has joined the channel
[04:11] weirdbro: I got the impression I needed to do it this way to get NPM working
[04:12] mscdex: oh, yeah afaik npm and windows are not compatible
[04:12] isaacs: weirdbro: npm works badly on cygwin, and not at all on native windows.
[04:12] weirdbro: Oh, it works badly?
[04:12] brianseeders has joined the channel
[04:12] weirdbro: Yea, I was going for the cygwin install.
[04:12] weirdbro: Damn.
[04:12] isaacs: weirdbro: check out https://github.com/japj/ryppi that works on windows
[04:12] RC1140 has joined the channel
[04:12] isaacs: if you have python
[04:13] isaacs: or you could use ubuntu on vbox
[04:13] weirdbro: yea, I've got ubuntu on dualboot, I was just hoping to go native
[04:13] weirdbro: oh well
[04:13] isaacs: yeah, native is best.
[04:14] weirdbro: hrm, well, ok
[04:14] weirdbro: thanks
[04:14] weirdbro: need to just get a mac :/
[04:14] mscdex: psh
[04:14] mscdex: just stay in linux
[04:14] mscdex: :-D
[04:15] mscdex: and have a windows vm instead
[04:15] mscdex: hehe
[04:15] weirdbro: But I like iTunes XD
[04:15] mscdex: does itunes run under wine? :p
[04:15] weirdbro: I'd imagine not well
[04:16] weirdbro: anyways, since ubuntu switched to unity I don't know whether to go to kde, xfce, or switch off ubuntu altogether
[04:16] mscdex: i don't care for ubuntu's unity personally
[04:16] mscdex: i've always been a fan of xfce
[04:17] chjj: i heard the man himself used xfce
[04:17] chjj: THE MAN HIMSELF
[04:17] mscdex: yeah he did switch
[04:17] mscdex: recently
[04:17] chjj: ah
[04:18] chjj: weirdbro: try just using a window manager and layering on the stuff you need
[04:18] mscdex: but not because he thinks xfce is better, but because he thinks gnome has been making bad decisions lately
[04:18] chjj: its nice and lightweight feeling
[04:18] febits has joined the channel
[04:18] chjj: gnome has always been too heavyweight for my tastes
[04:20] chjj: if i made a de it would probably look like lxde, i like pcman's style
[04:23] dexter_e has joined the channel
[04:24] andrewfff has joined the channel
[04:27] luke` has joined the channel
[04:29] Qbix1 has joined the channel
[04:30] dexter_e has joined the channel
[04:31] loveshine: foobar is the programmer's music player
[04:32] random123: Check out the reference for IE9 at MSDN http://msdn.microsoft.com its not bad, rivals MDN in a way
[04:33] random123: http://msdn.microsoft.com/en-us/library/yek4tbz0(v=VS.94).aspx
[04:33] chjj: random123: take that back right now or ill never respect you, msdn has terrible documentation, especially for their proprietary dom additions
[04:34] eee_c1 has joined the channel
[04:34] random123: If you look right here http://msdn.microsoft.com/en-us/library/ms123401.aspx under Web Development, they have implimented EMCAScript 5th addition and they are no longer calling it JScript, its JavaScript
[04:34] chjj: in fact, the msdn is the reason so much is incompatible across browsers
[04:35] hippich has joined the channel
[04:36] random123: I actually like Microsoft
[04:36] chjj: i like microsoft as much as i like apple
[04:36] random123: I hate Apple
[04:36] chjj: me too
[04:36] chjj: !
[04:36] drdave has joined the channel
[04:37] random123: They lock down their hardware, I just wish I could pirate OS X Lion so bad
[04:37] random123: I'm not buying their over priced hardware, I have once before and was very displeased
[04:38] chjj: well, they ARE their hardware arent they?
[04:38] chjj: theyre not a pc, theyre a mac
[04:38] chjj: whatever the hell that means
[04:38] drdave: anybody successfully compiling recent versions of node on debian Etch?
[04:38] drdave: I get "error: 'O_CLOEXEC' undeclared (first use in this function)"... which seems linked to a glibc version error...
[04:39] random123: If they were smart they would just unlock it, they would probably be 25% of the market for PCs
[04:39] drdave: does that mean i should give up on node with Etch?
[04:39] chjj: drdave: why are you using etch?
[04:39] random123: As far as I am concerned, they are personal computers as well.
[04:39] drdave: chjj: because that's what this particular VPS is set up with?
[04:39] chjj: why not upgrade to squeeze or something
[04:39] chjj: oh
[04:39] chjj: well, can still upgrade cant you?
[04:39] drdave: unfortunately: not in my hands, no.
[04:39] drdave: even if it happens, it'll happen later...
[04:40] drdave: i was still hoping to get node in the meantime.
[04:40] drdave: in fact, it's a reinstall...
[04:40] chjj: well, if you can edit /etc/apt/sources.list you should be able to upgrade
[04:40] drdave: but for some reason, the previously installed version of node has lost its crypto abilities...
[04:40] drdave: i can...
[04:40] drdave: but it's a VPS, updating straight from apt-get is not a good idea...
[04:42] chjj: so what is the problem? node doesnt build?
[04:42] StepanKuzmin has joined the channel
[04:42] mcluskyd_ has joined the channel
[04:42] drdave: nope.
[04:43] drdave: apparently an incompatibility with glibc.
[04:43] drdave: pretty sure it worked in the past...
[04:43] drdave: but not sure which version broke compat... :|
[04:43] chjj: you could try a different version of glibc or something i guess, just dont use apt-get
[04:44] drdave: you mean for node?
[04:44] drdave: i'm building from git already...
[04:45] chjj: i see
[04:45] chjj: hmm, not sure
[04:48] arlolra has joined the channel
[04:55] jj0hns0n has joined the channel
[04:55] nerdfiles has joined the channel
[04:55] nerdfiles has left the channel
[04:55] admc has joined the channel
[04:57] bbrandon has joined the channel
[04:57] tshpaper has joined the channel
[04:58] rickharrison has joined the channel
[05:00] Peniar has joined the channel
[05:01] Charuru has joined the channel
[05:03] Charuru_ has joined the channel
[05:04] jacobolus has joined the channel
[05:04] Charuru_: hmm
[05:05] jvdev has joined the channel
[05:08] jhurliman has joined the channel
[05:08] blaenk: anyone here use redis? I'm wondering what the difference is between using a hash (hget) and a namespaced value (get my:thing:stuff)
[05:09] vid__ has joined the channel
[05:09] vns has joined the channel
[05:09] TooTallNate has joined the channel
[05:10] iFire: blaenk namespace is less memory efficent
[05:10] iFire: for one
[05:10] blaenk: iFire: ah okay, thank you very much
[05:10] iFire: oops
[05:10] vns has joined the channel
[05:10] odie5533 has joined the channel
[05:10] iFire: uh I mean zsets etc.
[05:11] blaenk: zsets?
[05:11] vns has joined the channel
[05:11] iFire: sets and lists are the main redis "structures"
[05:12] fdenbow has joined the channel
[05:12] iFire: with variations
[05:12] iFire: http://redis.io/topics/memory-optimization
[05:12] iFire: guide to memory optimizations
[05:12] iFire: ooh hashes too
[05:12] iFire: so I was right
[05:12] jvdev has joined the channel
[05:12] iFire: I hope you're using redis 2.2 though
[05:13] blaenk: hashes too what though, that's what I didn't understand
[05:13] blaenk: hashes too are memory efficient?
[05:13] iFire: Since Redis 2.2 many data types are optimized to use less space up to a certain size. Hashes, Lists of any kind and Sets composed of just integers, when smaller than a given number of elements, and up to a maximum element size, are encoded in a very memory efficient way that uses up to 10 times less memory (with 5 time less memory used being the average saving).
[05:14] blaenk: thanks that doc is great
[05:14] iFire: usually less memory is faster
[05:14] iFire: too
[05:14] blaenk: sweet
[05:15] blaenk: hey, do you know of a doc where I can look up what the difference between sets and lists are in redis? is the only difference that lists maintains order?
[05:15] blaenk: yeah seems like it
[05:15] blaenk: and with sets I can do intersections etc.
[05:17] smathy has joined the channel
[05:18] Swizec has joined the channel
[05:18] iFire: http://redis.io/topics/data-types-intro
[05:18] iFire: I did study redis you know
[05:19] iFire: the detail docs do give Big-O
[05:20] zilch has joined the channel
[05:21] zilch: I keep getting this error "An error has occurred: {"stack":"Error: ECONNREFUSED, Connection refused\n    at Socket._onConnect (net.js:599:18)\n    at IOWatcher.onWritable [as callback] (net.js:186:12)","message":"ECONNREFUSED, Connection refused","errno":111,"code":"ECONNREFUSED","syscall":"connect"}" often on my ec2 hosted node/express server
[05:21] zilch: Always when I have this error, I cannot ssh as well
[05:21] zilch: after sometime it automatically vanishes
[05:22] zilch: and during the same time I can start ssh'ing
[05:22] mraleph has joined the channel
[05:23] jonmumm has joined the channel
[05:23] confoocious has joined the channel
[05:24] mcluskydodallas has joined the channel
[05:26] beawesomeinstead has joined the channel
[05:26] mrtazz has joined the channel
[05:26] chjj: zilch: when do you get that error?
[05:26] jonmumm has left the channel
[05:28] zilch: chjj, According to http://www.raditha.com/blog/archives/000604.html it is when all the connection are used up 
[05:28] zilch: I am not able to ssh !!!
[05:29] SamuraiJack has joined the channel
[05:29] zilch: So I guess I am short of network connection !!!
[05:30] iFire: blaenk what are you working on?
[05:31] blaenk: iFire: right now I'm trying to figure out how to map this data set to redis, I'm gisting now
[05:31] blaenk: iFire: I'm thinking about doing it this way https://gist.github.com/1131261
[05:32] blaenk: any thoughts?
[05:33] blaenk: the download hash I can map directly to a redis hash, but the connections, files, and sources lists I don't think I can include as part of that hash. I don't think redis allows that sort of nesting
[05:34] blaenk: namespacing by id and then setting the value as a hahs
[05:34] blaenk: *hash
[05:35] hippich has joined the channel
[05:35] hippich has joined the channel
[05:36] saikat has joined the channel
[05:36] dsxesr has joined the channel
[05:37] dsxesr: s
[05:38] iFire: blaenk set of ids
[05:38] iFire: hmm
[05:38] blaenk: ?
[05:38] iFire: hash of id -> values?
[05:38] simenbrekken has joined the channel
[05:40] iFire: set downloads -> shas
[05:40] slifty_corsair has joined the channel
[05:40] iFire: hash set -> sha 
[05:40] iFire: uh
[05:40] iFire: let me do that again
[05:41] iFire: blaenk what's the difference between index and sha?
[05:41] iFire: like index 1
[05:41] blaenk: sha identifies the download item
[05:42] blaenk: index identifies certain properties of the download
[05:42] blaenk: for example
[05:42] blaenk: 'asldfkjaklsdf' identifies the first download, the first download has 5 files, each identified by a 0-based index, like an array
[05:42] blaenk: if you're asking why not just use an incrementing id, no reason, the hash makes it quicker to look up though
[05:43] blaenk: cause the entire system identifies downloads by the hash
[05:43] iFire: pmed
[05:43] odie5533: Is there a large-ish project on github that uses vows or TDD/BDD for Node.JS that I could look to?
[05:43] lorax_ has joined the channel
[05:44] jj0hns0n has joined the channel
[05:44] iFire: https://gist.github.com/1131261#comments
[05:44] lorax_: hi there
[05:44] iFire: hmm
[05:44] lorax_: I am trying to build node on windows via cygwin
[05:44] iFire: hmm
[05:44] lorax_: i get the following build error
[05:44] iFire: sha is too long and inefficent
[05:44] iFire: so just count up?
[05:44] indexzero has joined the channel
[05:45] lorax_: node/deps/v8/src/assembler.h:46: warning: converting
[05:45] lorax_:  of negative value `-0x000000001' to `unsigned int'
[05:45] lorax_: scons: *** [obj/release/accessors.o] Error 1
[05:45] lorax_: scons: building terminated because of errors.
[05:46] pifantastic has joined the channel
[05:49] zilch: any body using mongohq with their node/express server ?
[05:49] mynyml has joined the channel
[05:51] bastayahijo has left the channel
[05:52] dexter_e has joined the channel
[05:53] _root_ has joined the channel
[05:54] shanebo has joined the channel
[05:55] nerdfiles has joined the channel
[05:55] nerdfiles has left the channel
[05:55] zilch has joined the channel
[05:55] jellosea has joined the channel
[05:56] __tosh has joined the channel
[05:56] jellosea: hey when i do 5382261116 >> 6 i get a wrong result in javascript
[05:56] jellosea: can anyone help
[05:57] Nexxy has joined the channel
[05:57] Nexxy has joined the channel
[05:59] stephank has joined the channel
[06:00] xAt has joined the channel
[06:00] losing has joined the channel
[06:01] slifty_corsair: night night everybody!
[06:01] jellosea: hey when i do 5382261116 >> 6 i get a wrong result in javascript
[06:02] odie5533: jellosea: that integer is probably too big
[06:02] odie5533: JS doesn't support 64 bit integers.
[06:02] jellosea: odie5533: what can i do to fix it?
[06:02] odie5533: use a Big Int class
[06:03] jellosea: do u know one for node.js
[06:03] jellosea: or javascript
[06:03] odie5533: http://www-cs-students.stanford.edu/~tjw/jsbn/
[06:03] odie5533: Thats gotta be the best one for Node. Google uses it to benchmarkt eh V8.
[06:04] hkjels has joined the channel
[06:05] odie5533: jellosea: that integer isn't too big
[06:05] odie5533: I take it back. I get the right answer I just tried it
[06:06] jellosea: are u sure i get a different answer
[06:06] jellosea: from wolfram alpha
[06:06] odie5533: you are right. lol I didn't look closely
[06:06] jellosea: do u know a bigint class i can use?
[06:07] odie5533: I linked you to one already.
[06:07] odie5533: REad about 7 lines up
[06:07] DrPizza: node gives the wrong answer indeed.
[06:08] DrPizza: but I don't know if javascript defines shifts for numbers greater than about 2^32
[06:09] euforic has joined the channel
[06:11] jellosea: oh thanks
[06:11] jellosea: so odie5533 will i be able to do shifts with a bigint class?
[06:16] neshaug has joined the channel
[06:18] binaryjohn has joined the channel
[06:20] dguttman has joined the channel
[06:20] odie5533: I believe so. Check the class
[06:21] SoulRaven has joined the channel
[06:21] tilgovi has joined the channel
[06:21] tilgovi has joined the channel
[06:21] odie5533: BigInteger.prototype.shiftRight = bnShiftRight;
[06:21] newy has joined the channel
[06:23] loob2 has joined the channel
[06:24] Hunter_ has joined the channel
[06:24] odie5533: gist?
[06:24] odie5533: nvm
[06:25] skm has joined the channel
[06:26] topaxi has joined the channel
[06:26] SubStack: hey what
[06:26] SubStack: http://github.com/substack/node-bigint
[06:26] SubStack: npm install bigint
[06:28] zahanm has left the channel
[06:28] rickharrison has joined the channel
[06:31] skm has joined the channel
[06:32] admc has joined the channel
[06:32] ironlad has joined the channel
[06:34] skm has joined the channel
[06:35] hlindset has joined the channel
[06:35] simenbrekken has joined the channel
[06:36] binaryjohn has joined the channel
[06:36] skm has joined the channel
[06:38] balaa has joined the channel
[06:39] zomgbie has joined the channel
[06:43] e6nian has joined the channel
[06:45] Xano has joined the channel
[06:45] cha0s has joined the channel
[06:45] cha0s has joined the channel
[06:46] `3rdEden has joined the channel
[06:47] fdenbow has joined the channel
[06:48] apanda has joined the channel
[06:49] andree has joined the channel
[06:49] McMAGIC--Copy has joined the channel
[06:49] anubhaw has joined the channel
[06:52] drdave has left the channel
[06:54] SamuraiJack has joined the channel
[06:54] zilch has joined the channel
[06:56] newy has joined the channel
[06:56] __class__ has joined the channel
[06:57] groom has joined the channel
[06:57] Kami_ has joined the channel
[06:58] sreeix has joined the channel
[06:58] unlink has joined the channel
[06:58] unlink has joined the channel
[06:58] altamic has joined the channel
[06:59] arpunk has joined the channel
[07:00] fly-away has joined the channel
[07:00] ttpva has joined the channel
[07:01] booo has joined the channel
[07:01] Kami_ has joined the channel
[07:02] StepanKuzmin has joined the channel
[07:04] fille has joined the channel
[07:04] fille: alloha
[07:09] clifton: ohh bigint, i remember you from freshman year of college
[07:09] hybsch has joined the channel
[07:10] clifton: neat implementation
[07:11] Hunter_ has joined the channel
[07:15] ccare has joined the channel
[07:18] aliem has joined the channel
[07:18] djko has joined the channel
[07:19] jbpros has joined the channel
[07:19] djcoin has joined the channel
[07:20] ccare has joined the channel
[07:20] binaryjohn has joined the channel
[07:22] SamNZ has joined the channel
[07:23] SamNZ: Does anyone use cloud9 ide?
[07:23] mscdex has joined the channel
[07:24] mscdex_ has joined the channel
[07:26] pushStack has left the channel
[07:28] zomgbie has joined the channel
[07:30] odie5533: js big int classes should be renamed to "relatively small integers, but too big for javascript"
[07:37] Druide_ has joined the channel
[07:39] adrianolaru has joined the channel
[07:40] random123: All sequencial/serial flow control like Seq/Step/async etc. all depend on process.nextTick and you have to contain the logic until the end of the application or some of the code toward the end wil process ahead of time, is that right?
[07:40] SubStack: not all of them use nextTick
[07:41] zomgbie has joined the channel
[07:41] SubStack: random123: none of those does anything special, it's all just callbacks
[07:43] iFire: http://i.imgur.com/C16a3.jpg
[07:43] random123: SubStack, I see, so from when you begin using .seq, if you don't contain res.end() inside of your chain it will call res.end() ahead of time?
[07:43] SubStack: random123: that is a confusing way to think about it
[07:43] SubStack: there is no 'ahead of time' here
[07:44] SubStack: you just use the flow control library to define some sequence of operations
[07:44] SubStack: then as the results become available asynchronously the control passes to the next item in the sequence
[07:45] SamuraiJack has joined the channel
[07:46] emmanuel_ has joined the channel
[07:46] cosmincx has joined the channel
[07:46] random123: SubStack: If you were chaining together some .seq() in a sequence during part of your App that was doing a readFile and concat'ing it to a string that at the end of your application called res.end() and was not part of the .seq chain then it wouldn't work right?
[07:47] random123: SubStack: Anything outside of the .seq chain would literally execute ahead of time
[07:47] SubStack: no
[07:47] SubStack: not "ahead of time"
[07:47] SubStack: asynchronously
[07:48] negrete has joined the channel
[07:48] SubStack: this is not specific to seq that is how the event loop works in node
[07:49] SubStack: random123: I think you are confusing "the bottom" and "the end"
[07:49] SubStack: the end happens when there are no more events to fire
[07:49] SubStack: the bottom is just the spatial location of the pixelated squiggles that is your source code
[07:51] random123: SubStack: It's been difficult to wrap my mind around after learning and using procedural all my life
[07:51] _root_ has joined the channel
[07:51] SubStack: for a meatspace analogy, you don't start eating immediately after you put some food in the microwave and push the button to heat it
[07:51] SubStack: the microwave beeps at you to come and get it
[07:51] DrPizza: I do
[07:51] random123: SubStack: Or Synchronous I guess I should say
[07:52] ablomen has joined the channel
[07:52] SubStack: callbacks are just a particular style of declarative semantic
[07:52] DrPizza: I kind of wish node had a front-end to add some small syntax extensions to javascript so that you could writ eprocedural code and have it automatically converted to CPS
[07:53] SubStack: DrPizza: see tamejs, streamlinejs, others
[07:53] dnjaramba has joined the channel
[07:54] random123: I thought I knew Asynch from using it on the client-side but the truth is that since you are just manipulating the DOM and it can happen in any order I didn't have to pay attention
[07:54] davidban_ has joined the channel
[07:54] adrianolaru has left the channel
[07:54] SubStack: syntax modifications seem really stifling to me
[07:54] DrPizza: hmm, I looked at streamline, it wasn't really what I was after
[07:54] SubStack: syntax operators aren't manipulatable at runtime the same way callbacks are
[07:54] hidinginabunker has joined the channel
[07:55] SubStack: you can do all kinds of tricks with functions, they're great
[07:55] SubStack: continuation passing style is quite nice I think
[07:55] mc_greeny has joined the channel
[07:55] robhawkes has joined the channel
[07:55] SubStack: and you can build your own libs in userspace to help with the hairy parts
[07:56] stagas: SubStack++
[07:56] v8bot_:  stagas has given a beer to SubStack. SubStack now has 4 beers.
[07:56] catb0t: SubStack now has 1 beer
[07:56] davidba__ has joined the channel
[07:56] DrPizza: tame looks interesting
[07:56] SubStack: that said I have written some crazy stuff to modify the ast at runtime
[07:56] DrPizza: tame looks like a better approach
[07:57] SubStack: for now
[07:57] SubStack: until aaronblohowiak finishes his uglify modifications >:D
[07:57] DrPizza: who what now?
[07:58] SubStack: https://github.com/aaronblohowiak/macros
[07:59] luke` has joined the channel
[07:59] DrPizza: oic
[07:59] ckknight: alternatively, you could use a language that compiles into JS (which may be a superset of JS itself)
[08:00] DrPizza: I'd rather have AST manipulation
[08:00] SubStack: ckknight: you can do that at runtime with aaronblohowiak's lib
[08:00] McMAGIC--Copy has joined the channel
[08:00] SubStack: and hacking the require extensions
[08:01] ckknight: yep
[08:01] seawise has joined the channel
[08:01] theCode has joined the channel
[08:02] _root_ has joined the channel
[08:02] mpavel has joined the channel
[08:02] TomY_ has joined the channel
[08:04] akshatj has joined the channel
[08:07] zackattack has joined the channel
[08:08] radiodario has joined the channel
[08:08] SamuraiJack has joined the channel
[08:09] shapeshed has joined the channel
[08:11] wenbert has joined the channel
[08:11] markwubben has joined the channel
[08:11] wenbert: hello
[08:11] wenbert: anyone around?
[08:12] Sebastien-L has joined the channel
[08:13] nitam has joined the channel
[08:13] wenbert: I am trying to create a simple game. First it has a "lobby". But how do I handle logged-in users? The first thing I can think of using something like now.logged_in_user = "<?php echo $username ?>"
[08:13] wenbert: but I don't that is a very good idea. How do people usually handle these sort of things?
[08:14] ckknight: are you using a PHP backend and now.js on the client, wenbert?
[08:14] k0stask has joined the channel
[08:14] luke` has joined the channel
[08:14] SubStack: wenbert: I would JSON.stringify() that username
[08:15] SubStack: however that's done in php
[08:15] wenbert: ckknight not yet, right now, all I have is a now.js server with a "what is your name?" prompt box
[08:15] hlindset has joined the channel
[08:15] jbpros has joined the channel
[08:15] wenbert: so it is okay to set variables in the client side and pass it over to the server side js?
[08:15] SubStack: wenbert: if you're used to php for templating check out 
[08:15] SubStack: http://jspp.io/
[08:16] SamuraiJack_ has joined the channel
[08:16] ckknight: so you have no server or you have a node.js server?
[08:16] wenbert: I have a node.js server
[08:17] luke` has joined the channel
[08:17] Drakonite: whats now.js ?  is that a typo or is it a thing? :)
[08:18] odie5533: Drakonite: google it.
[08:18] Nexxy: it's an amazingly simple RMI
[08:18] loveshine_ has joined the channel
[08:18] wenbert: It's something new I guess http://nowjs.com/ 
[08:18] wenbert: But it pretty easy to get up and running
[08:19] mcluskydodallas has joined the channel
[08:19] Drakonite: ah, cool
[08:20] odie5533: Does anyone test with gently or Sinon?
[08:21] wenbert: SubStack, is there something more basic than jspp.io?
[08:21] kulor-uk has joined the channel
[08:21] SubStack: wenbert: http://jade-lang.com/ https://github.com/creationix/haml-js
[08:22] wenbert: Thanks SubStack
[08:22] SubStack: also https://github.com/raycmorgan/Mu and https://github.com/hij1nx/weld
[08:23] SubStack: pick whichever one of those looks most promising
[08:24] wenbert: so usually, it is good practice to set a javascript variable on the client side like var foo = '<?php $bar ?>'; and then pass var foo to the server?
[08:24] wenbert: looking them up SubStack
[08:24] kulor-uk has joined the channel
[08:25] liar has joined the channel
[08:26] wenbert: or can node.js access sessions data?!
[08:27] SubStack: use a lib for sessions
[08:28] SubStack: wenbert: like this one http://substack.net/posts/f5680b
[08:29] pickels has joined the channel
[08:29] wenbert: looking it up SubStack ;)
[08:30] arnee has joined the channel
[08:30] balaa has joined the channel
[08:30] thalll has joined the channel
[08:31] random123: SubStack do you think it would be possible to create a flow control like "var json = $('readFile', file, 'utf8');" Where the function $ runs readFile and returns the info (err, data) into json and continues execution where it left off?
[08:32] SubStack: random123: you miss the point of asynchronous programming
[08:33] scas has joined the channel
[08:33] SubStack: instead of var json = ... like you have there
[08:33] SubStack: you just do fs.readFile(file, 'utf8', function (err, body) { var json = JSON.parse(body); /* use json in here */ })
[08:34] SubStack: node is different
[08:34] hkjels has left the channel
[08:34] Shrink has joined the channel
[08:34] hwinkel has joined the channel
[08:35] kdng-tr7 has joined the channel
[08:36] Ans5i has joined the channel
[08:36] m0s has joined the channel
[08:37] kdng-tr7: test
[08:38] random123: SubStack: I'm just thinking though, if you were to pause on the call to $() for only that user because it can't go anywhere until readFile is done anyways, and go back to the event loop until the function is complete wouldn't you still be asyncronous, and just recieve your data inside JSON instead of as parameters to a function, and execution continues?
[08:38] SubStack: random123: node does not work that way
[08:38] random123: Either way, you got your data, it was async, and you are on your way
[08:38] SubStack: that is a coroutine
[08:38] SubStack: coroutines are a bag of worms
[08:39] kdng-tr71 has joined the channel
[08:40] SubStack: in particular if you have coroutines it's no longer non-trivial to reason about your program's execution
[08:40] SubStack: s/non-//
[08:40] _root_ has joined the channel
[08:41] StepanKuzmin has joined the channel
[08:41] kdng-tr71 has joined the channel
[08:42] fyskij has joined the channel
[08:42] SubStack: since you could have a piece of state x
[08:42] luke`_ has joined the channel
[08:43] Guest1977 has joined the channel
[08:43] SubStack: like this: var x = 0; x++; coroutineFunction(); console.log(x)
[08:44] SubStack: and if that code runs twice and gets pre-empted x might not be 1 at the end of it all
[08:44] andrewfff has joined the channel
[08:44] SubStack: requires some more safeguards to protect against that kind of stuff
[08:45] traph has joined the channel
[08:45] gausby has joined the channel
[08:45] whitman has joined the channel
[08:47] SamuraiJack__ has joined the channel
[08:47] SamNZ: Does fs.unlink work with directories?
[08:47] fdenbow has joined the channel
[08:47] davidba__: SamNZ: You want fs.rmdir - http://nodejs.org/docs/v0.4.10/api/fs.html#fs.rmdir
[08:48] random123: The only reason I can think of (error on my part I'm sure but still) is that then you can't decide which of the code should still be in the event loop, for instance, in the browser where you still need to respond to events
[08:48] SamNZ: davidba__: Oh, thanks
[08:48] markwubben has joined the channel
[08:49] random123: And to a smaller part that isn't a problem in Node because you aren't responding to a bunch of events, just you receive a request, and then you res.end() and everything in between happens in serial pretty much however, if they also have a socket.io you need to respond to those
[08:49] bergie has joined the channel
[08:49] kdng-tr71 has joined the channel
[08:50] jMerliN has joined the channel
[08:50] djko has joined the channel
[08:50] TheJH has joined the channel
[08:50] random123: But if you knew for sure that everything was going to happen in serial then I am guessing co-routines would be fine?
[08:51] random123: As long as everything was going to happen in serial for each user, and you had an event loop that interated through each person connected
[08:52] k0stask has joined the channel
[08:52] __doc__ has joined the channel
[08:52] kdng-tr71 has joined the channel
[08:53] SamuraiJack has joined the channel
[08:54] uchuff has joined the channel
[08:55] mscdex: ACTION shakes a fist at coroutines
[08:56] jetienne_ has joined the channel
[08:56] kdng-tr7 has joined the channel
[08:56] SubStack: random123: if you want to write code that way then node probably isn't for you
[08:57] kdng-tr7 has joined the channel
[08:57] random123: SubStack: I don't, I am just trying to figure it out
[08:57] SubStack: what is there to figure out?
[08:57] booo has joined the channel
[08:59] random123: SubStack: Well basically, when you pass a callback you are just passing a point of execution for it after you get what you want. There are a lot of times that what you really want to do is just "return" when the results ready, but you still want an event loop
[09:00] SubStack: you're not passing a point of execution, you're passing a function
[09:00] SubStack: functions are not mere instruction pointers
[09:00] Kingdutch has joined the channel
[09:01] SubStack: they can close over lexical variables
[09:01] SamNZ: functions can be used as namespaces too
[09:01] shanebo: random123, you can do that on most methods. however there are some methods where returns don't work because execution has already passed
[09:02] kdng-tr7 has joined the channel
[09:02] random123: SubStack: It sort of is, in an abstract way, there is so real reason to be pushing data through as arguments and parameters, the only reason we put up with that is because we are passing a function as a callback so we can determine where the program will resume when we get what we want from something like readFile
[09:02] SubStack: random123: you want coroutines
[09:02] SubStack: go use python
[09:03] random123: SubStack: I don't want co-routines lol
[09:03] SubStack: that's what you're describing
[09:03] odie5533: I want coroutines! well, I want to know what they are at least...
[09:03] TheJH: random123, "resume"? you don't resume execution, execution never stops.
[09:03] shanebo: random123, but there's no async way to have an async method return the result without executing lines after your readfile
[09:03] djko has joined the channel
[09:03] SubStack: execution stops when the event loop is empty
[09:03] odie5533: coroutines = yield generators in python?
[09:04] TheJH: SubStack, well, ok...
[09:04] random123: SubStack: I understand there is an event loop and thats why it gets so much performance
[09:04] SubStack: random123: "Coroutines are computer program components that generalize subroutines to allow multiple entry points for suspending and resuming execution at certain locations."
[09:04] Nuck has joined the channel
[09:04] SubStack: this is pretty much what you just described
[09:05] odie5533: If you use variables or data, you can accomplish what coroutines do. Depending on what you want them for at least
[09:05] shanebo: random123, honestly there are use cases where using sync methods rather than async makes more sense.
[09:05] bzinger has joined the channel
[09:06] shanebo: for example, as I understand it, require is sync
[09:06] random123: SubStack, if you called a co-routine though in a web server done in C++ or Python, is there an event loop for when that function is ready to return?
[09:06] odie5533: I had to use I think util.puts because my program crashed before console.log fired
[09:06] SubStack: asynchronous code is harder than synchronous single-threaded code but your whole process isn't going to block
[09:06] SubStack: asynchronous code is way easier than doing the threading yourself
[09:06] ckknight: such as require()
[09:06] SubStack: and worrying about race conditions, mutexes, all that noise
[09:07] odie5533: I remember coding mutexes for a C#.NET application
[09:07] mcluskyd_ has joined the channel
[09:07] odie5533: Terrible experience. Now whenever I program anything with sockets I automatically use Twisted. 
[09:08] mendel_ has joined the channel
[09:08] SubStack: random123: I have no idea how coroutines are commonly implemented
[09:08] piscisaureus has joined the channel
[09:08] SubStack: but I've used them and I think they're more trouble than they're worth
[09:08] odie5533: I think they save the stack
[09:08] hellp has joined the channel
[09:09] jetienne_: yes
[09:09] TheJH: odie5533, what for? stacktraces?
[09:09] SubStack: if you like coroutines then go and use them but that is not how node rolls
[09:09] odie5533: for the next entry
[09:09] jetienne_: sqetjmp/longjmp or some trick on cpp
[09:09] SubStack: jetienne_: gross
[09:09] jetienne_: TheJH: no to restore it later
[09:10] jetienne_: SubStack: you do a lot 'worst' with v8 :)
[09:10] TheJH: ah, ok
[09:10] odie5533: I wonder when I will be able to compile my JS program to an exe..
[09:10] SubStack: but I don't need to care how v8 works to write node programs
[09:10] odie5533: I am guessing.... 3 months.
[09:11] jetienne_: in fact the cpp trick to implement them is quite subtle, you abuse a case of switch/case grammar :)
[09:11] michielc has joined the channel
[09:11] random123: SubStack: What I wonder is, if you are calling a readFile for instance in Node.js, and you absolutely know you have to wait for that file in order to proceed, so you are going to use a callback pattern, is there any loss in that specific circumstance at having the event loop run and sit them there until they receive a result via return from the function in json?
[09:11] kdng-tr7 has joined the channel
[09:11] odie5533: jetienne_: Haskell is lazy executed, perhaps they use something similar?
[09:11] jetienne_: odie5533: it has been done in the past, tjholowaychuk last year from memory
[09:12] odie5533: https://github.com/pkrumins/node-lazy
[09:12] jetienne_: odie5533: node comes with a bunch of js included, just put your js in there. 
[09:12] random123: SubStack: I'm just curious if in that specific circumstance, is it actually un nessessary to use a callback style if you had a choice, just food for thought
[09:12] odie5533: jetienne_: put my what into what!?
[09:12] jetienne_: odie5533: what 'lazy executed' means
[09:12] shanebo: random123 use readFileSync()
[09:13] SamuraiJack has joined the channel
[09:13] SubStack: random123: node is for writing servers
[09:13] TheJH: odie5533, put your JS inside a file in node/lib
[09:13] SubStack: servers are always listening for new connections
[09:13] jetienne_: odie5533: your js with all the other alreeady included in node exe
[09:13] TheJH: don't remember the name
[09:13] random123: shanebo: Isn't readFileSync blocking though?
[09:13] michielc has left the channel
[09:13] SubStack: random123: what if a new user connects while your readFile is blocking?
[09:13] odie5533: jetienne_: you make a list of numbers, 1 to infinity. Then slice off the first 10. It only creates the list as it is needed.
[09:14] shanebo: random123 yes
[09:14] jetienne_: random123:  it is blocking
[09:14] odie5533: jetienne_: neat idea! I'd need to figure out how to hijack the command line to run my program.
[09:14] shanebo: SubStack, you have the same problem when require-ing a file, right?
[09:14] SubStack: random123: or even waiting in a coroutine pool, it's harder to reason about what your code does if functions can just restore half way through
[09:14] jetienne_: odie5533: this is the generator thing ? mozilla got this, but it isnt standard
[09:14] _root_ has joined the channel
[09:15] random123: SubStack, thats why I mean, you can put Node.js back into the event loop, while you wait for readFile to return a result in json?
[09:15] odie5533: jetienne_: haskell does it with everything though.
[09:15] SubStack: random123: no you can't
[09:15] SubStack: random123: because node doesn't let you
[09:15] SubStack: for your own good
[09:15] jetienne_: odie5533: you got generator in ruby/python but not in es205 tho
[09:16] jetienne_: https://developer.mozilla.org/en/javascript/Guide/Iterators_and_Generators odie5533 for mozilla implementation
[09:16] random123: SubStack: I know, but its possible is all I am saying, instead of going back to the event loop and waiting for your callback to fire, just wait in the event loop and wait for your return to fire with a json object, and its an easier pattern and easier to comprehend
[09:16] SubStack: random123: callbacks are *easy*. Don't make them hard.
[09:16] mscdex: shanebo: that's why you should do all of your require()s at the top of the programming before doing anything else
[09:16] SubStack: random123: it's not possible because it's not
[09:16] SubStack: because you can't do it in node
[09:16] SubStack: nor should you
[09:16] kdng-tr7 has joined the channel
[09:17] SubStack: even though you can using v8 c++ trickery
[09:17] SamNZ: random123: functions fire return immediately, there is no wait
[09:17] shanebo: mscdex, but if you've got a decent sized project you require files in required files
[09:17] mscdex: shanebo: and?
[09:18] shanebo: so eventually you will run into a use case where you're requiring while someone hits the server
[09:18] mscdex: shanebo: then you're doing it wrong
[09:18] SubStack: shanebo: require() is for when you fire up your server
[09:18] SubStack: before you .listen()
[09:18] zilch has joined the channel
[09:18] SubStack: that's why it's synchronous
[09:18] shanebo: mscdex, so you *never* lazy load any required file?
[09:19] shanebo: like a controller?
[09:19] mscdex: shanebo: no, because the server is a long lived process anyway
[09:19] jetienne_: shanebo: you can do a require in a function
[09:20] SubStack: what the fuck why would you lazy load anything server-side?
[09:20] shanebo: it is until you end() it right?
[09:20] SubStack: lazy loading is for clients
[09:20] mscdex: shanebo: if this were php where your process "dies" after the connection closes, then yes, lazy loading would be best
[09:20] SamuraiJack_ has joined the channel
[09:20] mscdex: shanebo: but that is not the case with node
[09:21] shanebo: SubStack, in an app with 10 controllers, why the hell would you load all of them at once? Why not require only if a route is hit?
[09:21] SubStack: ...
[09:21] ablomen has joined the channel
[09:21] SubStack: shanebo: require() doesn't work the way you think it does
[09:21] SubStack: results get cached
[09:22] TheJH: shanebo, because you don't want to make all users wait?
[09:22] SubStack: you would absolutely load all of them at once on startup
[09:22] random123: SubStack: This looks exactly what I was talking about http://www.openajax.org/runtime/wiki/JavaScript_Pause_Release
[09:22] jetienne_: oh good question
[09:22] SubStack: so you won't have to block the server when somebody hits a route
[09:22] jetienne_: if nobody no more reference a require('foobar'), is it freed ?
[09:23] SubStack: random123: that looks really full of shit
[09:23] TheJH: jetienne_, it will still be cached in-memory
[09:23] shanebo: SubStack, so you require all controllers, models, views dependencies etc. on every request?
[09:23] zilch has joined the channel
[09:23] SubStack: shanebo: wow you really have the wrong idea
[09:23] jetienne_: TheJH: sure ?
[09:24] SubStack: shanebo: in node you write a server and it runs until you kill it
[09:24] jetienne_: shanebo: on node, the process isnt launched at every request
[09:24] random123: SubStack: Basically, everything is an event, and a lot(and I mean a lot) of events happen sequentially, therefore, you don't need a callback for a sequential event, and you can still have an event loop
[09:24] SamNZ: random123: See also https://github.com/caolan/async
[09:24] SubStack: or until it crashes
[09:24] mscdex: shanebo: you load them all before starting your http server
[09:24] TheJH: jetienne_, if v8 does some insane optimizations, it might go away faster
[09:24] SubStack: shanebo: you require everything exactly once, when the server starts up
[09:24] TheJH: jetienne_, but I don't think that it's that insane
[09:25] jetienne_: shanebo: you launch it and it stay on, thus if you require it, it will be loaded once only
[09:25] SubStack: random123: you should ignore all of that and just write node the node way especially if you are just starting out
[09:25] jetienne_: TheJH: me neither, this is normal allocation/free. if something is no more needed it should be freed. or you got memory leaks 
[09:25] SubStack: or else go use python or another language that has coroutines if you want them
[09:26] jetienne_: i think the is a js preprocessor able to do coroutine no ?
[09:26] TheJH: jetienne_, having everything in memory *once* isn't a memory leak
[09:26] jetienne_: TheJH: it is if you no more use it
[09:27] mscdex: jetienne_: but someone could still do a require() elsewhere when there are no references left, in that case you wouldn't get a performance hit because it's still there
[09:27] Prism has joined the channel
[09:27] TheJH: jetienne_, but it's unimportant. wooow, a whole JS file is still in memory!
[09:28] csanz has joined the channel
[09:29] jetienne_: mscdex: yep but if nobody does you get a leak
[09:29] shanebo: SubStack, I'm still not getting part of this. It must be the node part.
[09:29] jetienne_: i think we should just test 
[09:29] mscdex: i don't consider it a leak, but meh
[09:29] lorinc has joined the channel
[09:29] jetienne_: mscdex: having memory allocated you no more used is what in your words ?
[09:29] mscdex: i'd rather keep the small amount of memory it's using instead of having to go through the whole process of loading it again
[09:30] apoc has joined the channel
[09:30] TheJH: mscdex, exactly my opinion
[09:30] mscdex: especially if the file has changed
[09:30] mscdex: then you could have unexpected behavior
[09:30] jetienne_: both you assume it is small, can you say why ?
[09:30] shanebo: so SubStack if files are basically only required once, how am I assured that my classes are unique the user on a route?
[09:31] kdng-tr7 has joined the channel
[09:31] jetienne_: shanebo: hmm you should learn more about js :) 
[09:31] zilch has joined the channel
[09:31] jetienne_: shanebo: no pun intented but this is clearly the issue here. require() semantic is quite simple in itself
[09:32] SubStack: shanebo: unlearn everything you know about rails or php first
[09:32] jetienne_: shanebo: you get unique instance by doing new goobarcontructor()
[09:32] shanebo: hahah
[09:32] shanebo: SubStack, in other words, forget threaded
[09:32] SubStack: no how require() works has nothing to do with that
[09:33] SubStack: node is not a web framework
[09:33] shanebo: jetienne_, I understand that… but that means a ton of class instances live on indefinitely right?
[09:33] mscdex: node is web scale!
[09:33] Nuck: node is node
[09:33] Nuck: There's no other way to describe it
[09:33] shanebo: mscdex so is mongodb ;)
[09:33] mscdex: shanebo: that's why there are mongdb drivers for node!
[09:33] Nuck: Anything scales if you throw enough servers at it
[09:33] mscdex: web scale compatibility!
[09:34] jetienne_: shanebo: no, once a variable is no more used, it wiill be garbaged collector
[09:34] SubStack: shanebo: you should just write some code, that would clear your confusion up really fast
[09:34] jetienne_: shanebo: once again this is only javascript here, nothing node specific
[09:34] shanebo: SubStack I've got a project written that I'm working on
[09:34] Nuck: LOL
[09:34] mscdex: ACTION shakes a fist at coroutines once more before going afk
[09:35] SubStack: shanebo: this is how modules work: http://nodejs.org/docs/v0.4.10/api/modules.html#modules
[09:35] jetienne_: mscdex: hehe
[09:35] Nuck: Angelo Sotira says that the previous generation "built their platforms" and the current generation "will be marketing"
[09:35] SubStack: ACTION restrains mscdex 
[09:35] random123: SubStack: I'm not leaving Node, I just was curious about that... I don't even know what a co-routine is.
[09:35] Nuck: All I know is, we have to build our own damn servers in JS
[09:35] SubStack: keep it civil!
[09:36] SubStack: random123: a coroutine is the thing that you kept describing that you wanted
[09:36] SubStack: but look how you've angered mscdex so
[09:37] kdng-tr7 has joined the channel
[09:37] Nuck: coroutines can go burn in hell
[09:37] Nuck: Callbacks 4 lyfe
[09:37] jetienne_: Nuck: realx
[09:37] jetienne_: relax
[09:37] McMAGIC--Copy has joined the channel
[09:38] Nuck: jetienne_: But they want to desicrate my sacred callbacks!
[09:38] Nuck: desecrate, even
[09:38] SubStack: ACTION labels some drinking fountains and restrooms with signs reading "callbacks only" and "no coroutines"
[09:38] Nuck: SubStack: LMAO
[09:39] Nuck: SubStack: Just curious, how bad is rent in Oaklan?
[09:39] Nuck: +d
[09:39] VeXii^Zz has joined the channel
[09:39] SubStack: Nuck: oakland is pretty cheap
[09:39] SubStack: compared to SF or berkeley or anywhere on the peninsula until you get to sunnyvale
[09:39] SubStack: http://padmapper.com/
[09:39] Nuck: SubStack: What're the ghetto areas?
[09:40] thalll has joined the channel
[09:40] random123: SubStack: according to http://en.wikipedia.org/wiki/Coroutine JavaScript supports Co-routines since 1.7?
[09:40] lng has joined the channel
[09:40] lng: hi! what is npm port?
[09:41] SubStack: Nuck: or the stackhaus has a vacancy right now
[09:41] e6nian: when there is a devDependencies in package.json , how to avoid install them ?
[09:41] Nuck: SubStack: I'm sure you'll have it filled before I get to the bay area
[09:41] SubStack: hopefully
[09:41] Nuck: I'm applying to this round on Y Combinator, but the applications haven't even opened up yet :P
[09:41] TheJH: random123, they were removed loooong ago
[09:41] AAA_awright: Is there something Node.js going on in San Diego this week?
[09:42] Nuck: If I get in, I'll be moving to the bay area
[09:42] Nuck: If I don't, I go back to saving my pennies to get there anyways in a few years
[09:42] random123: TheJH: Ohhh. I guess this is all old news. Looks like this issue I bring up has been already considered a lot
[09:42] SubStack: years?
[09:43] Nuck: SubStack: Yes, years.  I'm a poor person.
[09:43] TheJH: .. var a="foo"; console.log(a++) /* is this really supposed to show a NaN? shouldn't it show the original value? */
[09:43] catb0t: NaN; undefined
[09:43] shanebo: SubStack, Nuck is only 12, give him some time ;)
[09:43] Nuck: shaneboHey, even though Skype's alerts are covering my screen, I can still see that!
[09:44] shanebo: I kid, I kid :
[09:44] shanebo: :P
[09:44] SubStack: Nuck: that doesn't make any sense, all the tech jobs are around the bay
[09:44] SubStack: a bus ticket costs what, $20?
[09:44] _VeXii^Zz has joined the channel
[09:44] Nuck: SubStack: I'm forming a startup, and I'm so broke I can't get from Modesto to there
[09:44] tim_smart has joined the channel
[09:44] Nuck: I'd hafta pay for a bus to get to BART, then a BART to get to SF
[09:44] Nuck: Plus lodgings, etc.
[09:45] Nuck: I'm cautious with my money
[09:45] Nuck: I don't like letting go.
[09:45] shanebo: Nuck what kind of startup?
[09:45] Nuck: shanebo: Art site.
[09:45] Nuck: Like deviantART, but without the suck.
[09:45] CStumph has joined the channel
[09:46] Nuck: woah
[09:46] Nuck: I never realized how close Alameda was to Oakland
[09:46] Nuck: My cousin lives in Alameda
[09:47] AAA_awright: Specifically, the newest*, biggest**, and best*** art site
[09:47] AAA_awright: * At creation
[09:47] AAA_awright: ** in 2018
[09:47] AAA_awright: *** according to a poll of 1036 former DeviantArt users who already switched
[09:47] SubStack: Nuck: it's $14 to get to BART from Modesto http://www.modestoareaexpress.com/routes/BART.aspx
[09:47] Nuck: AAA_awright: LOL
[09:47] VeXii^570 has joined the channel
[09:47] Nuck: SubStack: Then I pay for BART
[09:47] Nuck: SubStack: the getting there is easy
[09:47] Nuck: I just don't wanna risk being a hobo :P
[09:48] Nuck: Plus I need to get my affairs in order here.
[09:48] mc_greeny has joined the channel
[09:48] SubStack: Nuck: it's $4.10 from dublin/pleasanton to macarthur
[09:48] SubStack: $18.10
[09:48] Nuck: I'm taking a couple classes this semester, and for once I wanna get straight A's.
[09:49] Nuck: SubStack: Yeah, it's cheap, I know :P
[09:49] Nuck: Plus I get it all paid for me if I get into YC :P
[09:50] SubStack: YC is amazingly oversubscribed right now
[09:50] SubStack: don't plan on it
[09:50] Nuck: I know my chances
[09:50] Nuck: I know it's approximately 1 in 30
[09:50] Clex: Is there a way with express to have some "hooks"? I would like to have a function called before each app.get(...)
[09:51] Nuck: Clex: The word is Middleware
[09:51] Nuck: And yes
[09:51] Nuck: That's how Connect works
[09:51] SubStack: Clex: app.use(function (req, res, next) {})
[09:51] SubStack: put that before all your .get()s
[09:51] SamuraiJack__ has joined the channel
[09:51] AAA_awright: Nuck: Did you watch Startup School by chance? The GitHub guys probably had the best advice
[09:51] CStumph has joined the channel
[09:51] SubStack: and call next() in your middleware to pass the buck as it were
[09:52] Clex: Hum, ok thanks.
[09:52] Nuck: AAA_awright: Startup School?  Sounds familiar... I've watched a lot of things over the past few weeks as I've been researching this stuff
[09:52] AAA_awright: At least all I remember was don't get into debt. For nothing. You might have to go slower short-term but it makes you stronger in the long run
[09:53] AAA_awright: Oh wow that was a while ago... I watched it streaming live
[09:53] AAA_awright: Mark Zuckerberg I recall saying "Holywood can't wrap their heads around the notion we just like to build stuff"
[09:53] Nuck: LOL
[09:54] Nuck: AAA_awright: No matter what, I'm gonna need to rack up some bit of debt
[09:54] Nuck: Just the simple act of incorporation will force that upon me
[09:55] e6nian: how to debug the error? "Maximum call stack size exceeded"
[09:55] zilch has joined the channel
[09:55] Nuck: It's basically a question of Y Combinator or some other way to get $5000 and enough for me to move out to the bay
[09:55] AAA_awright: Nuck: If I can't find anyone willing to work on this IRC client or http://magnode.org/ , I've got 50 bitcoins to invest
[09:55] blup: i have a question that's been bugging me since last night.. if you have a function a(args, cb) which contains a loop, can you call the cb multiple times? doesn't seem to work for me.
[09:55] Nuck: AAA_awright: LOL
[09:55] AAA_awright: I already sold off the first 50 last week
[09:56] liquidproof has joined the channel
[09:56] blup: should i make it into an event emitter instead?
[09:56] SubStack: Nuck: then don't incorporate until you raise money
[09:56] kdng-tr7 has joined the channel
[09:56] Nuck: SubStack: We won't, but we need to get our legal stuff in order either way.
[09:57] AAA_awright: e6nian: Are you using any recursive functions? hmm I forget how I've debugged that
[09:57] SubStack: you can fix it all after-the-fact
[09:57] Nuck: We're dealing with art, which is copyrightable.
[09:57] AAA_awright: blup: callbacks are supposed to be called exactly once
[09:57] Nuck: I'm gonna try and get into YC, and wing it from there
[09:57] AAA_awright: blup: For anything else, use an event emitter
[09:57] hwinkel has joined the channel
[09:57] blup: AAA_awright: thanks that's what i thought :)
[09:57] Nuck: If I don't get in, I've got numerous backup plans
[09:58] Nuck: I just really hope I do
[09:58] AAA_awright: Nuck: Do you have a server?
[09:58] Nuck: I feel like I've got a strong team and a strong concept (and with a writer on-staff, we'll have a strong application)
[09:58] random123 has joined the channel
[09:58] Nuck: AAA_awright: We do
[09:58] Nuck: It's a sweet VPS
[09:58] wenbert has joined the channel
[09:59] AAA_awright: Ah yes
[09:59] e6nian: AAA_awright: finally, I got that recursive function :)
[09:59] AAA_awright: But does it web scale?
[09:59] Nuck: 25GB HDD, 8 cores, and something like 8GB of RAB
[09:59] Nuck: *RAM
[09:59] Nuck: And that's just what our SA allocated for us as a "testing server"
[10:01] e6nian: Nuck: which starup are you farming? url pls :)
[10:01] Nuck: e6nian: Huh?
[10:01] zilch has joined the channel
[10:01] Nuck: We don't have a URL yet
[10:01] Nuck: We're still fuzzy on the name
[10:02] Nuck: We have the concept, we have something like 10% of the code done, but we still lack a name.
[10:03] AAA_awright: Nuck: I'm running two Gentoo VPSs for the sites and music strems I linked you to, 4 cores, 1-3 GB memory, 15-120 GB storage
[10:04] kdng-tr71 has joined the channel
[10:04] ditesh|cassini has joined the channel
[10:04] Nuck: AAA_awright: Ah nice :D
[10:05] Poetro has joined the channel
[10:06] e6nian: who use Kue here ?
[10:07] Nuck: SubStack: So where in Oakland are you?
[10:07] e6nian: learmBoost is such a nice company :)
[10:07] ablomen has joined the channel
[10:07] Nuck: e6nian: Agreed
[10:07] maru_cc_ has joined the channel
[10:07] Nuck: So, I've decided that I'm gonna eventually build an issue tracker and project manager on Node + Mongo
[10:08] fly-away has joined the channel
[10:08] Nuck: So a lot like Redmine
[10:08] AAA_awright: Hopefully I'll have the CMS for that done, actually
[10:08] e6nian: Nuck: reinvent the wheel again ?
[10:08] AAA_awright: That's one of my first use-cases
[10:08] AAA_awright: after the blog
[10:08] Nuck: e6nian: Not really?
[10:08] Nuck: I just want Redmine that isn't a bitch to set up
[10:08] Nuck: i.e. - on Node
[10:08] Nuck: Plus I want something that fits better with our architecture
[10:09] e6nian: Nuck: no reinvent, but rebuild the app
[10:09] fermion has joined the channel
[10:09] Nuck: e6nian: huh?
[10:09] e6nian: Nuck: you can try one of my friends's project blumine
[10:09] Nuck: e6nian: That's redmine
[10:09] e6nian: https://github.com/daqing/blumine
[10:10] Nuck: Just forked
[10:10] Nuck: :|
[10:10] e6nian: but it's base on Rails3
[10:10] Nuck: Fuck Ruby
[10:10] blup: i need something for my node scripting playlist... any recommendations?
[10:10] Nuck: Fuck it with a giant rubber fist
[10:10] mendel_ has joined the channel
[10:10] e6nian: blup: socket.io
[10:10] Nuck: Until it bleeeeeeeeeeds
[10:11] e6nian: blup: Kue
[10:11] bripkens has joined the channel
[10:11] __tosh has joined the channel
[10:11] blup: hmmm, i was thinking something more... ummm... instrumental :)
[10:11] jetienne_ has joined the channel
[10:12] Poetro has joined the channel
[10:12] Poetro has joined the channel
[10:12] Nuck: blup: What are you asking about?
[10:12] Nuck: Music?
[10:12] Nuck: Modules?
[10:12] blup: music
[10:13] Nuck: blup: I would tell you, but it's too underground.
[10:13] blup: my coding playlist is overplayed
[10:13] blup: haha
[10:13] Nuck: I've been listening to Junip lately
[10:13] Nuck: Though I also love Gogol Bordello, Beirut, Grizzly Bear, and the soundtrack from Ratchet & Clank (surprisingly good music)
[10:14] e6nian: blup: my code playlist https://github.com/e6nian/code-in-poetry
[10:14] wenbert: i'm planning to put my sessions in redis. is that common practice? 
[10:14] e6nian: wenbert: good choise
[10:14] wenbert: i may set the session using php/some other thing...
[10:15] blup: thanks all, i'll be adding those
[10:15] Nuck: I use Mongo, some people use Redis, others Couch, and yet others still use MySQL
[10:15] Nuck: It's mostly just a matter of taste
[10:15] wenbert: then it would all be easy on node.js to access stuff
[10:15] wenbert: okay then :)
[10:15] e6nian: wenbert: yeah, we did that before, with php,in diffrent system
[10:15] wenbert: awesome
[10:15] wenbert: thanks for the confirmation
[10:16] delian66 has joined the channel
[10:19] TomY has joined the channel
[10:20] StepanKuzmin has joined the channel
[10:22] ryanfitz has joined the channel
[10:22] FireFly has joined the channel
[10:26] necrodearia has joined the channel
[10:27] polyrhythmic has joined the channel
[10:28] _root_ has joined the channel
[10:30] cbiscardi has joined the channel
[10:31] raphdg has joined the channel
[10:32] dominictarr has joined the channel
[10:33] CStumph has joined the channel
[10:34] Poetro has joined the channel
[10:34] Poetro has joined the channel
[10:37] akshatj has joined the channel
[10:38] sreeix_ has joined the channel
[10:39] yept has joined the channel
[10:39] unlink has joined the channel
[10:39] unlink has joined the channel
[10:40] mcluskydodallas has joined the channel
[10:46] cbiscardi has joined the channel
[10:51] bergie has joined the channel
[10:52] shapeshed has joined the channel
[10:52] piscisaureus has joined the channel
[10:56] H4ns` has joined the channel
[10:56] fairwinds has joined the channel
[10:57] ismell has joined the channel
[10:57] ablomen has joined the channel
[11:04] markwubben has joined the channel
[11:06] StepanKuzmin has joined the channel
[11:09] wenbert has joined the channel
[11:09] luke` has joined the channel
[11:10] okuryu has joined the channel
[11:10] c4milo1 has joined the channel
[11:15] materialdesigner has joined the channel
[11:17] luke` has joined the channel
[11:24] temp01 has joined the channel
[11:27] Twelve-60` has joined the channel
[11:28] saschagehlich has joined the channel
[11:28] arpunk has joined the channel
[11:28] BulletBob has joined the channel
[11:30] sreeix has joined the channel
[11:30] eee_c has joined the channel
[11:32] aliemmo has joined the channel
[11:41] fyskij has joined the channel
[11:42] jbpros has joined the channel
[11:43] dexter_e has joined the channel
[11:45] thalll has joined the channel
[11:45] mendel_ has joined the channel
[11:46] mcluskydodallas has joined the channel
[11:48] meandi2 has joined the channel
[11:48] mendel_ has joined the channel
[11:48] burningdog has joined the channel
[11:50] scott_gonzalez has joined the channel
[11:51] humanerror_ has joined the channel
[11:51] DrLou has joined the channel
[11:52] humanerror_ has left the channel
[11:52] humanerror_ has joined the channel
[11:53] matyr has joined the channel
[11:53] hij1nx has joined the channel
[11:54] dhaivat has left the channel
[11:55] maru_cc_ has joined the channel
[11:55] xandrews has joined the channel
[11:55] zilch has joined the channel
[11:57] temp01 has joined the channel
[11:58] wenbert has joined the channel
[12:02] mendel_ has joined the channel
[12:02] Generic_Dumbass has joined the channel
[12:03] gustavowt has joined the channel
[12:04] m0s has joined the channel
[12:06] wenbert has joined the channel
[12:06] PragCypher has joined the channel
[12:07] adrianmg has joined the channel
[12:07] arnee has joined the channel
[12:09] adrianmg: Hi!
[12:10] random123: !iH
[12:11] garrensmith has joined the channel
[12:11] garrensmith: hi all
[12:11] garrensmith: is there a way to manage your development dependancies with npm? Like testing framework etc
[12:11] booo has joined the channel
[12:14] Qbix1 has joined the channel
[12:16] materialdesigner: there's a specific spot in package.json for devDependencies
[12:16] TheJH: garrensmith, type "npm help json" and look at devDependencies
[12:16] ciezr has joined the channel
[12:17] igl1 has joined the channel
[12:17] brianseeders has joined the channel
[12:18] wenbert: anyone used nowjs?  how do I create  a function that can only return to one user? and not "everyone"?
[12:18] Cromulent has joined the channel
[12:18] TheJH: wenbert, for what purpose?
[12:19] garrensmith: TheJH: thanks
[12:19] wenbert: TheJH, like for example, I want to fetch a "Set" from redis. I only want the user requesting it to be able to receive the response
[12:19] wenbert: and not send the response to the entire group
[12:20] TheJH: wenbert, I think that nowjs supports callbacks
[12:20] TheJH: wenbert, from http://nowjs.com/doc/functions : "everyone.now.test = function(val, callback){ callback(val + ' bar!'); }"
[12:21] TheJH: wenbert, wouldn't that work for you?
[12:21] wenbert: TheJH http://pastie.org/2339004
[12:21] arnee has joined the channel
[12:21] wenbert: that's what I have right now. I can return data to the client side, the problem is, "everyone" is accepting it
[12:22] TheJH: wenbert, once again: why don't you use a callback?
[12:23] TheJH: wenbert, something like http://pastie.org/2339011
[12:23] cccaldas has joined the channel
[12:23] asabil has joined the channel
[12:23] wenbert: what do you mean TheJH?
[12:24] MaSch: does anyone know a good nodejs library for syntax highlighing? 
[12:24] sreeix_ has joined the channel
[12:25] wenbert: hmmm let me gather my thoughts
[12:25] arnee has joined the channel
[12:25] squeese has joined the channel
[12:25] wenbert: i think i'll get this
[12:25] wenbert: thanks
[12:26] TheJH: MaSch, for programmatical use?
[12:26] kdng-tr7 has joined the channel
[12:26] MaSch: TheJH: do highlight code thats displayed on a website 
[12:26] davidcoallier has joined the channel
[12:26] MaSch: i don't want to use a client site highlighter :-/ 
[12:27] zilch has joined the channel
[12:27] m0s has joined the channel
[12:28] TheJH: MaSch, would spawning an external process an option? If so, look at how docco does it: http://jashkenas.github.com/docco/
[12:28] MaSch: xD have someone seen that these kiwi package manager guys tell lies about npm :D? 
[12:28] TheJH: MaSch, link?
[12:28] MaSch: TheJH:  https://github.com/visionmedia/kiwi "Kiwi vs Others" 
[12:29] skampler has joined the channel
[12:30] TheJH: MaSch, oh...
[12:30] mendel_ has joined the channel
[12:30] e6nian: MaSch:  last commit is September 03, 2010
[12:30] TheJH: MaSch, that part of the readme is from 2010-03-11 according to git blame
[12:31] MaSch: TheJH: okay 
[12:31] MaSch: you had to use urls to install with npm back then? 
[12:31] McMAGIC--Copy has joined the channel
[12:32] TheJH: MaSch, dunno, but could be
[12:33] matyr has joined the channel
[12:33] justmoon has joined the channel
[12:35] e6nian: Any good js/node.js ident plugin for vim?
[12:35] adrianmg has joined the channel
[12:35] e6nian: Got in the wiki :) https://github.com/joyent/node/wiki/Vim-Plugins
[12:36] davidcoallier has joined the channel
[12:36] industrial: I have a question about testing code
[12:37] ajpiaNOU has joined the channel
[12:37] industrial: I'm trying to test my API, response numbers (200, 404, etc) on each request but also for example
[12:37] industrial: I have a User which has Monsters so I'm testing the /user/xxx/monsters/yyy URL's
[12:38] industrial: i have an add on POST /user/xxx/monsters and a remove on /user/xxx/monsters/yyy
[12:39] industrial: if I were to test the add functionality would I make a loop through getting the monsters of a user, then creating one (via a call), adding one (via a call), getting the monsters again (call) and comparing the monsters lists?
[12:39] industrial: sounds like an integration test, but i just wanna prevent making manual requests to test my API :P
[12:40] mikepjura has joined the channel
[12:40] sniper506th has joined the channel
[12:40] fumanchu182 has joined the channel
[12:42] incon has joined the channel
[12:43] garrensmith: industrial: should you not test one bit of functionality at a time. So to test creating. Create it via the api but then maybe check via the database that it was created. If you test to much at once its hard to find any failure points
[12:44] industrial: garrensmith: right. but for example I should only be able to add monsters that already exist in the database, if not it yields a 404 on the CREATE
[12:45] mehtryx has joined the channel
[12:45] Multiply has joined the channel
[12:45] mapleman has joined the channel
[12:45] garrensmith: sure so create a monster in the database etc, thats the setup part of you test. Then run the test to make sure you get a 404 if it doesn't exist
[12:46] bnoordhuis has joined the channel
[12:46] industrial: hm, k
[12:48] wutwutyes has joined the channel
[12:48] industrial: How do I set my express server in a certain environment (e.g. test)
[12:49] fyskij has joined the channel
[12:49] industrial: its in development by default, it seems
[12:51] wutwutyes_ has joined the channel
[12:51] bradleyg has joined the channel
[12:51] garrensmith: industrial: node NODE_ENV=test app.js
[12:51] industrial: k
[12:53] bergie has joined the channel
[12:53] temp01 has joined the channel
[12:54] sivy has joined the channel
[12:55] davidsklar has joined the channel
[12:56] AaronMT has joined the channel
[12:59] wenbert has joined the channel
[13:00] Brandonn has joined the channel
[13:00] xandrews has joined the channel
[13:00] ianward has joined the channel
[13:03] adrianmg has left the channel
[13:04] dherman has joined the channel
[13:05] willwhite has joined the channel
[13:06] Destos has joined the channel
[13:07] robhawkes has joined the channel
[13:10] dnjaramba has joined the channel
[13:11] mcluskydodallas has joined the channel
[13:12] Qbix1 has joined the channel
[13:12] thalll has joined the channel
[13:14] thalll_ has joined the channel
[13:14] matyr has joined the channel
[13:16] jbpros has joined the channel
[13:16] JumpMast3r has joined the channel
[13:19] tomgallacher has joined the channel
[13:20] wenbert has joined the channel
[13:21] jbrokc has joined the channel
[13:24] _root_ has joined the channel
[13:24] wenbert:  Putting sessions in redis. How do I tell nodejs that this user has owns this ID? (I'm having a hard time "connecting")
[13:25] wenbert: between the sess_id in redis and in php
[13:25] wenbert: am I making sense? lol
[13:25] tomgallacher has left the channel
[13:25] ksheurs has joined the channel
[13:26] replore_ has joined the channel
[13:26] replore has joined the channel
[13:27] postwait has joined the channel
[13:27] mape: wenbert: there is a php session for node module from what I recall
[13:29] temp01 has joined the channel
[13:29] hydrozen has joined the channel
[13:29] meandi2 has joined the channel
[13:30] boaz has joined the channel
[13:30] lukegalea has joined the channel
[13:30] odie5533: Does Node.JS use as a build system? I see CMake, WAF, and SCons.
[13:32] Aikar: TypeError: First argument must be a name at Object.resolveMx (dns.js:217:11) 
[13:32] Aikar: so, what could trigger that error if the first arg is def not empty?
[13:32] thomblake has joined the channel
[13:33] te-brian has joined the channel
[13:33] TheJH: Aikar, please gist the full stack trace and the relevant section of your code
[13:34] Aikar: nvm... i forgot to put a return in the line that checks that domain is not empty
[13:34] thomblake has left the channel
[13:34] Aikar: if (!sEmailDomain) cb();
[13:34] Aikar: dns.resolveMx(sEmailDomain, function(err, mx) {
[13:35] TheJH: ah, ok
[13:35] Aikar: and forgot in another place too...
[13:35] rchavik has joined the channel
[13:38] meandi has joined the channel
[13:39] mcluskydodallas has joined the channel
[13:39] bnoordhuis: odie5533: waf now, gyp soon
[13:39] bnoordhuis: odie5533: scons is used by v8, cmake by the palm developers
[13:40] bnoordhuis: odie5533: i think that once we switch to gyp, both scons and cmake will be dropped
[13:40] slifty has joined the channel
[13:43] matyr_ has joined the channel
[13:44] ceej has joined the channel
[13:45] Cromulent has joined the channel
[13:45] sivy has joined the channel
[13:46] cosmincx has joined the channel
[13:46] PatrickC has joined the channel
[13:47] PatrickC has left the channel
[13:47] davidbanham has joined the channel
[13:49] CrisO has joined the channel
[13:49] bradleymeck has joined the channel
[13:50] tomgallacher_ has joined the channel
[13:50] dexter_e has joined the channel
[13:50] mattp_ has joined the channel
[13:50] drudge: strange http://penr.ee/97AD
[13:50] TheJH: drudge, ignore it
[13:51] TheJH: drudge, aww, wait, "denied"?
[13:51] ptlo has joined the channel
[13:51] drudge: yeah corporate proxy blocks virii
[13:51] TheJH: drudge, what kind of AV? is it a corporate proxy or so?
[13:51] TheJH: :/
[13:53] Aikar: is there a sed command someone knows that can delete lines in place in a file that matches a regex?
[13:53] TheJH: drudge, virustotal says it's clean: http://www.virustotal.com/file-scan/report.html?id=637a459c47f93dda7fc41f1f8c1a77fc0c82fa55533aa938ea636af3b0561d8e-1312811348
[13:53] TheJH: Aikar, I'd use "grep -v" (invert match)
[13:54] Aikar: cat then grep then write out? lol
[13:54] TheJH: drudge, ask your admin to download it for you or so
[13:54] TheJH: Aikar, if you want help with unix commands, this is probably the wrong channel
[13:55] drudge: TheJH: yeah I can download it, I just figured I'd let ryah and others know. Not sure why it triggers
[13:55] aheckmann has joined the channel
[13:56] maushu has joined the channel
[13:56] TheJH: drudge, I think that there was something about it on the mailing list, node is suspicious because it evaluates stuff at runtime (unpacker), does network I/O, does file I/O, ...
[13:57] maushu: Could someone give me a hint why this http server is only pumping 200 kb into the response from a file readstream?
[13:58] maushu: end doesn't seem to be called at all.
[13:59] devongovett has joined the channel
[13:59] gmonnerat has joined the channel
[13:59] unlink has joined the channel
[13:59] unlink has joined the channel
[13:59] gmonnerat has left the channel
[14:00] spasquali has joined the channel
[14:00] brolin has joined the channel
[14:01] SubStack: TheJH: it's a pretty ideal botnet toolkit
[14:01] baudehlo has joined the channel
[14:01] kriszyp has joined the channel
[14:01] TheJH: SubStack, true
[14:02] bradleymeck: substack thanks to dnode and hook.io ... lol
[14:02] maushu: Hmm, drain doesn't seem to fire.
[14:02] TheJH: bradleymeck, haha
[14:02] spasquali has left the channel
[14:02] SubStack: https://github.com/isaacs/sodn
[14:02] TheJH: SubStack, wow, that could get pretty evil
[14:04] butu5 has joined the channel
[14:06] TheJH: SubStack, on the other hand... when people ask "and where is node used besides in the web", we would have a good answer :D
[14:06] TheJH: s/the web/http/
[14:06] brianc has joined the channel
[14:07] CIA-65: libuv: 03Ben Noordhuis 07master * r58dd01a 10/ Makefile : build: add debug target to Makefile - http://bit.ly/qWCwDx
[14:08] explodes has joined the channel
[14:08] bradleymeck: is there an ifdef for lib_uv?
[14:09] TheJH: mhm... anyone here who wants to port some exploits to node?
[14:09] TheJH: (just kidding)
[14:09] bshumate has joined the channel
[14:09] bshumate has joined the channel
[14:10] wenbert has joined the channel
[14:12] rfay has joined the channel
[14:14] geetarista has joined the channel
[14:14] maushu: Ok, so... the windows version is not draining correctly.
[14:14] maushu: Yay.
[14:14] ryanfitz has joined the channel
[14:14] messju has left the channel
[14:14] JoshC1 has joined the channel
[14:15] asabil has joined the channel
[14:18] jtsnow has joined the channel
[14:18] naneau has joined the channel
[14:19] wenbert has joined the channel
[14:21] Country has joined the channel
[14:22] jbpros has joined the channel
[14:23] zemanel has joined the channel
[14:23] Swimming_bird has joined the channel
[14:24] ohtogo has joined the channel
[14:26] WarriorSl has joined the channel
[14:28] hidinginabunker has joined the channel
[14:28] jacobolus has joined the channel
[14:28] CIA-65: node: 03koichik 07master * rd439c09 10/ (3 files in 3 dirs): 
[14:28] CIA-65: node: Improve util.format() compatibility with browser.
[14:28] CIA-65: node: Fixes #1434. - http://bit.ly/pbJi1n
[14:28] odie5533: bnoordhuis: why switch from waf to gyp?
[14:28] bnoordhuis: odie5533: because waf is a huge, huge POS
[14:29] odie5533: hah. waf brags that node.js uses them ;)
[14:29] kenperkins has joined the channel
[14:30] odie5533: gyp seems really similar to cmake.
[14:31] bnoordhuis: odie5533: not really imo, gyp is declarative while cmake is more imperative
[14:32] pjacobs has joined the channel
[14:34] zilch has joined the channel
[14:34] bnoordhuis: odie5533: to wit how bad waf sucks: nearly every time i want to update the wscript, it dies with some cryptic error and i have to read the waf source to find out what's really going on
[14:35] bnoordhuis: i hate it with a passion >:(
[14:35] bnoordhuis: huge time sink!
[14:36] odie5533: it's colorful though
[14:36] mapleman has joined the channel
[14:36] bnoordhuis: not on my vt100 terminal :)
[14:37] sandropadin has joined the channel
[14:37] mikedeboer has joined the channel
[14:38] hidinginabunker has joined the channel
[14:42] clifton has joined the channel
[14:43] versicolor has joined the channel
[14:43] EyePulp has joined the channel
[14:43] ironlad has joined the channel
[14:45] ditesh|cassini has joined the channel
[14:45] sub_pop has joined the channel
[14:46] eresair has joined the channel
[14:47] industrial: How do I see what was wrong exactly in a JSON.parse() ?
[14:47] eignerchris has joined the channel
[14:47] CrisO: which module should I use to connect to mysql? there are bunch listed. Any "preferred" one?
[14:48] EyePulp: CrisO:  I recommend the one that converts you to postgresql.
[14:48] EyePulp: =P
[14:49] CrisO: haha
[14:49] EyePulp: ACTION actually has no useful information.
[14:49] maushu: What is the smallest linux distro capable of running node?
[14:49] CrisO: it's just for a quick thing, I swear!
[14:49] odie5533: maushu: my router can probably run it.
[14:49] arpunk: maushu: openwrt? i think you can get v8 to compile on it
[14:49] EyePulp: my router does run it.  
[14:50] EyePulp: ooh - that sounds like a very warm router.
[14:50] Destos has joined the channel
[14:50] odie5533: The real test of a linux program: Can it be run on a router?
[14:50] DennisRasmussen has joined the channel
[14:50] unknown_had has joined the channel
[14:50] maushu: Hmm.
[14:51] EyePulp: gather 'round the router kids, we're about to start compiling.   bring your graham crackers and marshmallows.
[14:51] joshthecoder has joined the channel
[14:51] TheJH: industrial, try dev-warnings from npm
[14:51] TheJH: !@industrial npm search dev-warnings
[14:51] jhbot: industrial, package dev-warnings: Additional warnings for standard functions
[14:51] TheJH: actually, it's just for JSOn at the moment
[14:52] FireFly has joined the channel
[14:53] industrial: TheJH: ok
[14:53] JoshC1 has joined the channel
[14:54] DennisRas has joined the channel
[14:54] brianloveswords has joined the channel
[14:55] pixel13 has joined the channel
[14:56] jj0hns0n has joined the channel
[14:57] TheJH: industrial, did it work?
[14:57] kimico has joined the channel
[14:57] dexter_e has joined the channel
[14:58] seivan has joined the channel
[14:58] kjeldahl_ has joined the channel
[14:58] aheckmann has joined the channel
[14:58] [[zz]] has joined the channel
[14:59] gazumps has joined the channel
[15:00] kevwil has joined the channel
[15:00] JoshC1 has joined the channel
[15:00] guillermo has joined the channel
[15:01] versicolor has joined the channel
[15:01] rangga_tam has joined the channel
[15:01] rangga_tam: helo
[15:03] tmpvar has joined the channel
[15:03] dgathright has joined the channel
[15:04] robertfw has joined the channel
[15:05] naneau has joined the channel
[15:05] industrial: TheJH: I'm going to check that out tonight at home, right now I need to continue at work..
[15:06] IronBridge has joined the channel
[15:06] TheJH: ah, ok
[15:06] TheJH: hello rangga_tam
[15:07] industrial: if I have a resource A and B and A has B's, when adding one B to one A would my request be POST /A/xxx/B/xxx ?
[15:07] industrial: wondering what the correct REST form would be
[15:09] BillyBreen has joined the channel
[15:09] tmpvar: industrial, i've always sent a POST to /A with the representatino of a new b
[15:09] tmpvar: representation*
[15:09] carmony has joined the channel
[15:09] dguttman has joined the channel
[15:10] adelgado has joined the channel
[15:10] thalll has joined the channel
[15:10] ncamacho has joined the channel
[15:11] smus has joined the channel
[15:11] tmpvar: industrial, for example : curl http://localhost/users -d '{ "username" : "tmpvar" }' -X POST -H "Content-type: application/json"
[15:11] softdrink has joined the channel
[15:15] Wizek has joined the channel
[15:15] hybsch has joined the channel
[15:15] pibi has joined the channel
[15:15] pibi has left the channel
[15:16] liquidproof has joined the channel
[15:16] industrial: tmpvar: yea
[15:16] tmpvar: same goes for /A/x/B
[15:17] csanz has joined the channel
[15:18] wookiehangover has joined the channel
[15:18] jakehow has joined the channel
[15:18] zanes has joined the channel
[15:18] RORgasm has joined the channel
[15:19] isaacs has joined the channel
[15:19] softdrink has joined the channel
[15:20] balaa has joined the channel
[15:20] odie5533: What is the PREFIX_NODE supposed to contain?
[15:20] greg__ has joined the channel
[15:21] mrryanjohnston_ has joined the channel
[15:21] halfhalo-work has joined the channel
[15:21] baoist has joined the channel
[15:21] necromancer has joined the channel
[15:22] zilch has joined the channel
[15:22] figital has joined the channel
[15:23] springmeyer has joined the channel
[15:25] zhujo01 has joined the channel
[15:25] hl7Guy has joined the channel
[15:26] mrryanjohnston_: arpunk: did you ever get a chance to post a snippet on gist? :3
[15:28] mape: tmpvar: how are the perf parts of jsdom moving ahead?
[15:28] dail has joined the channel
[15:28] dail: hello
[15:28] TheJH: does cloudhead have an IRC nick?
[15:28] mape: TheJH: couldhead
[15:29] mape: duh, *cloudhead
[15:29] TheJH: last seen 2 days ago... well, maybe he comes on soon
[15:29] mrryanjohnston_: alternatively, do any of you guys have mongoose-auth/everyauth authentication working with 'password' authentication and if so could i see a code snippet?
[15:30] madsleejensen has joined the channel
[15:30] rangga_tam: i get error when install express.js
[15:31] dail: what is the last stable version of exprtess.js ?
[15:31] bnoordhuis: rangga_tam: you're scarce on details
[15:31] hl7Guy: Hello everyone.  New to node.  I would like to develop a restful api with node.  Any suggestion on node libraries or packages I should check out?  
[15:31] JJMalina has joined the channel
[15:32] mrryanjohnston_: dail: check npm. should be there
[15:32] sivy has joined the channel
[15:32] Cybrix has joined the channel
[15:32] albertosheinfeld has joined the channel
[15:33] kriss has joined the channel
[15:34] loveshine_: how to i get a file descriptor to use it in fs.read?
[15:34] xerox: open
[15:34] jesusabdullah: hl7Guy: restful stuff? I think express or journey
[15:34] Stythys has joined the channel
[15:34] jesusabdullah: express is a sinatra-like thing, journey is a router for json apis
[15:34] xerox: loveshine_: http://nodejs.org/docs/v0.4.10/api/fs.html#fs.open
[15:35] rangga_tam: wait
[15:35] matyr has joined the channel
[15:35] slifty_corsair has joined the channel
[15:35] bnoordhuis: loveshine_: fs.open()?
[15:36] loveshine_: xerox: ah ok. i didn't know i had to open the file first. ty
[15:36] hl7Guy: Yes Restful.  Similar to twitter or Netflix api.  I would like to develop a restful http api with JSON as my media type.  
[15:36] hl7Guy: Sounds like Journey may be the way to go
[15:36] whitman: Can I 'listen' for multiple events in a single "on", as in .on('foo bar' function...) rather than .on('foo', function...).on('bar', function...)?
[15:36] jesusabdullah: It might be
[15:36] jesusabdullah: I actually don't know much about it
[15:37] jesusabdullah: your buzzwords just resonated with it is all :P
[15:37] jesusabdullah: but, I mean, that's what it's for so
[15:37] hl7Guy: lol..thanks for the advice.  I'm definitly going to chech both of them out.
[15:38] mertimor has joined the channel
[15:38] jzacsh has joined the channel
[15:38] seivan has joined the channel
[15:39] rangga_tam: im sorry
[15:39] rangga_tam: i want install zombie.js
[15:39] rangga_tam: not express.js
[15:39] rangga_tam: :)
[15:39] CIA-65: node: 03Ben Noordhuis 07master * rf69822c 10/ lib/http2.js : http2: reword confusing comment - http://bit.ly/ofrHtV
[15:39] rangga_tam: i paste error in http://pastebin.com/AQFjunTu
[15:39] metellus has joined the channel
[15:39] rangga_tam: log
[15:39] ruprict: So, anyone know of a node-ified js date library (think DateJS as a module)?
[15:40] Nican_ has joined the channel
[15:40] madsleejensen has left the channel
[15:40] kriss has joined the channel
[15:41] booo has joined the channel
[15:42] bnoordhuis: rangga_tam: ImportError: No module named js2c <- there is something wrong with your node install
[15:42] Xano has joined the channel
[15:42] wenbert has joined the channel
[15:43] bnoordhuis: rangga_tam: /home/omenk/local/node/include/node/node.h:35:17: fatal error: eio.h: No such file or directory <- more confirmation of a borked install
[15:43] rangga_tam: bnoorhuiss : but i can install express.js tomorrow
[15:43] odie5533: node-waf sucks.
[15:43] odie5533: spent 30 minutes trying to compile node-sqlite. giving up now.
[15:43] tjholowaychuk has joined the channel
[15:43] stagas: ruprict: http://blago.dachev.com/modules?query=date
[15:43] thalll has joined the channel
[15:44] rangga_tam: bnoorhuiss : yes ..
[15:44] cjm: hey all, NodeUp:3 is up - http://news.ycombinator.com/item?id=2860409
[15:44] criswell has joined the channel
[15:44] yorick has joined the channel
[15:44] rangga_tam: bnoorhuiss : what should i do?? reinstall my node.js?
[15:45] caolanm has joined the channel
[15:46] rangga_tam: node.js v0.4 stable or node.js v0.5?
[15:46] balaa has joined the channel
[15:46] xerox: when is SPDY going to be implemented in node http://www.chromium.org/spdy/spdy-whitepaper
[15:46] ruprict: stagas: cheers
[15:46] xerox: chrome already supports it
[15:46] theCode has joined the channel
[15:46] DrPizza: google making the web more proprietary, one protocol at a time.
[15:47] pquerna: xerox: it is
[15:47] broofa has joined the channel
[15:47] chapel: xerox: someone made a spdy server
[15:47] xerox: cool
[15:47] chapel: xerox: I think it was indutny
[15:48] pquerna: Zelest: https://github.com/indutny/node-spdy
[15:48] pquerna: xerox: https://github.com/indutny/node-spdy
[15:48] broofa has joined the channel
[15:49] stephank has joined the channel
[15:50] Fox` has joined the channel
[15:50] bnoordhuis: rangga_tam: v0.4.10
[15:50] rangga_tam: bnoorhuiss : ok thank you very much bnoo
[15:50] Fox`: hello, can someone explain to me what node.js is in stupid-people terms. is it a communication protocol?
[15:50] rangga_tam: :)
[15:51] Swimming_bird has joined the channel
[15:51] industrial: Fox`: its an application server.
[15:51] industrial: or, well, you create application servers with it :p
[15:51] pixel13 has left the channel
[15:52] industrial: node is the framework
[15:52] __tosh has joined the channel
[15:52] stagas: Fox`: you make applications with javascript
[15:52] mikeal has joined the channel
[15:53] Fox`: ok. but it's not like jquery?
[15:53] aconbere has joined the channel
[15:53] EyePulp: Fox`: no. it doesn't need a browser
[15:53] stagas: Fox`: it's an executable, you run it like: node yourapp.js
[15:54] EyePulp: It's a way to run javascript like any standard server-side language, e.g. python or ruby.
[15:54] industrial: (or PHP)
[15:54] slifty_corsair has joined the channel
[15:54] EyePulp: no, not like php. php is moldy poop.
[15:54] EyePulp: =)
[15:54] Fox`: ok
[15:55] industrial: I'm not sure that 'stupid-people' have heard of python or ruby :p
[15:55] Fox`: so do i want to use node.js to build websites?
[15:55] Fox`: yes we have
[15:55] jbpros has joined the channel
[15:55] CIA-65: node: 03Ryan Dahl 07gyp * rf57d70d 10/ (.gitignore configure tools/gyp_node): sketch out configure support - http://bit.ly/ozT0ow
[15:56] industrial: Fox`: depends on what you want to be doing. Just making websites for people? no use django or ruby on rails.
[15:56] stagas: Fox`: yes, or you can build shell applications that access the filesystem, open raw tcp connections, and many more things
[15:56] jchris has joined the channel
[15:56] EyePulp: Fox`: you can use it for that, yes.  But again, you can do most any general purpose server-side computing activities with node.  It just speaks in javascript for its syntax versus python or ruby, or scheme, or erlang, or php.
[15:56] bradleymeck: if its not a  HTML CRUD app Node.js is probably a viable option, CRUD apps are best suited on other things
[15:57] rangga_tam: node.js better for what?
[15:57] Fox`: ok
[15:57] alvaro_o has joined the channel
[15:57] industrial: Fox`: nodejs is good at being fast, it becomes an option when being fast is your current bottleneck.
[15:57] dgathright has joined the channel
[15:57] EyePulp: Fox`: maybe this would be easier to explain if we know what your level of understanding of general computer progamming was.
[15:58] Fox`: average php programmer, below average js programmer
[15:58] systemfault has joined the channel
[15:58] systemfault has joined the channel
[15:58] bradleymeck: rangga_tam: IO, Streams (COMET/WebSocket), low level code (think stuff with man pages), OS integration, C++ integration
[15:58] wenbert: any issues with this? now.sessid = "<?php session_id();?>";
[15:58] materialdesigner has joined the channel
[15:58] Swizec has joined the channel
[15:59] bradleymeck: unless thats being pipped to php it shouldnt work?
[15:59] EyePulp: Fox`: how do you currently run your php pages?  I mean, are you familiar with what web server or module is processing/executing your php code?
[15:59] hij1nx has joined the channel
[15:59] tmpvar: what up hij1nx 
[15:59] HenrikJoreteg has joined the channel
[15:59] kenperkins has joined the channel
[15:59] Fox`: nope. that's my problem. i can make things bu my theory knowledge is a bit lacking
[15:59] deedubs has joined the channel
[15:59] industrial: Fox`: I dont think NodeJS is the right tool for your job. I'd start looking into Ruby on Rails or Django, or even CakePHP first.
[16:00] industrial: NodeJS doesnt do half what those softwares do for easily creating websites
[16:00] EyePulp: Fox`: Node will be hard for you at this point.  You'll learn a lot though if you stick with it.
[16:00] industrial: you'd be writing all that yourself
[16:00] smtlaissezfaire has joined the channel
[16:00] Fox`: oh we're coding the thing in php using the code igniter framework
[16:00] TooTallNate has joined the channel
[16:00] Fox`: i wouldn't want to do the whole thing i javascript
[16:00] Fox`: but we'd be looking at javascript for ajax content loading
[16:01] industrial: thats client side then
[16:01] Fox`: yeh
[16:01] EyePulp: I agree with industrial.  Node is most useful to folks who already have a strong grasp of client/server and asyncronous programming.  JS as a syntax is not the hard part.
[16:01] industrial: nodejs is serverside javascript
[16:02] industrial: so just jQuery then :p
[16:02] Arenstar has joined the channel
[16:02] Fox`: yeh
[16:02] Fox`: i can cope with jquery. written for stupid people
[16:02] nail_ has joined the channel
[16:02] wenbert: is there a way for node.js to get the current $_COOKIE["PHPSESSID"]?
[16:02] McMAGIC--Copy has joined the channel
[16:02] skampler: pretty much was EyePulp said
[16:02] rangga_tam: industrial : node.js better for what?
[16:03] EyePulp: "i can cope with jquery. written for stupid people"  <- wow.
[16:03] delian66 has joined the channel
[16:03] Fox`: fine. i can cope with jquery. stupid people can understand it
[16:04] bradleymeck: wenbert, you can use a cookiedecoder or cookiejar, connect's cookiedecoder is prolly the easiest way
[16:04] industrial: Fox`: I'd start with not calling myself stupid.
[16:04] HenrikJo_ has joined the channel
[16:04] industrial: wenbert: How did you mix PHP and NodeJS?
[16:04] Fox`: ^
[16:05] colinclark has joined the channel
[16:07] industrial: ACTION mv ~
[16:08] Paperjs has joined the channel
[16:09] m0s has joined the channel
[16:10] dgathright has joined the channel
[16:10] slloyd has joined the channel
[16:10] HenrikJoreteg has left the channel
[16:10] wenbert: industrial i'm not quite sure yet. that's the part i am trying to solve
[16:11] wenbert: industrial, im thinking of storing "PHP session ID" and "nowjs clientId" in redis
[16:11] HenrikJo_ has joined the channel
[16:12] mape: wenbert: have you looked at solutions?
[16:12] balaa has joined the channel
[16:12] wenbert: i now.phpsessid = "<?php session_id();?>" then on the server side, add to redis the this.now.clientId "beside" the phpsessid
[16:12] jbrokc has joined the channel
[16:13] HenrikJo_ has left the channel
[16:13] wenbert: with that, i can now match sessionid with this.now.clientId - would that make sense?
[16:13] wenbert: mape, what solutions?
[16:13] wenbert: ACTION is using nowjs
[16:13] Tick-Tock has joined the channel
[16:13] mape: wenbert: I've seen php session sharing with node on github
[16:14] dail: guyssssss
[16:14] dail: big question :D
[16:14] dail: can i set a file like "blablabla.txtt"
[16:14] bradleymeck: set a file?
[16:14] dail: and call a callback when this file will be created ?
[16:15] dail: yes i mean...i have a name like "blabla.txt"
[16:15] dail: can i call a callback when this file will be created on the filesystem ?
[16:15] mape: fs.writeFile('balla.txt', 'hmm', function(){console.log('yay?');});
[16:15] dail: writefile ??
[16:15] dail: no no..i don't know when this file will be created
[16:15] dail: because there is a python program that create it
[16:15] mape: watchFile?
[16:16] dail: i don't know but i have to wait it
[16:16] robi42 has joined the channel
[16:16] dail: watchfile?? hmmmm interesting
[16:16] indutny: ryah: bnoordhuis: pquerna: can you please pull my NPN SNI docs?
[16:16] rangga_tam: hello.. can i upgrade my node.js?
[16:16] indutny: before 0.5.4
[16:16] mape: rangga_tam: feel free to do so
[16:16] edgarallanpoe has joined the channel
[16:16] mape: no cost
[16:16] jtsnow has joined the channel
[16:17] dail: mape...maybe this file has to be created first ?
[16:17] mape: dail: possible, you might want to check the watchFile api docs
[16:17] dail: http://nodejs.org/docs/v0.4.3/api/fs.html#fs.watchFile
[16:17] traph has joined the channel
[16:18] dail: "watch the change" :/ hmmm seems this file has to be created first
[16:18] mape: dail: if you want it done just make a timer to check for the file and if it's there watchFile
[16:18] jerrysv has joined the channel
[16:18] mape: might not scale but depends on what you are doing
[16:19] dail: or can i create it first...then when python could rewrite it...so i get the new timestamp (i think) no?
[16:19] mape: possibly
[16:19] stagas: dail: you can watchFile the parent dir, if a new file is created it callbacks, then you can check for the file
[16:19] dail: or if another program rewrite it the function have problems=
[16:19] jumpmast3r_ has joined the channel
[16:19] dail: hmm i must to try
[16:20] Nican has joined the channel
[16:21] pjacobs2 has joined the channel
[16:21] mcluskyd_ has joined the channel
[16:22] Fox` has left the channel
[16:22] tbassetto has joined the channel
[16:23] zilch has joined the channel
[16:25] gr-eg has joined the channel
[16:25] Tick-Tock has joined the channel
[16:26] Transformer has joined the channel
[16:27] dshaw_ has joined the channel
[16:27] andrewvos has joined the channel
[16:29] eyesUnclouded_ has joined the channel
[16:30] dexter_e has joined the channel
[16:30] DTrejo has joined the channel
[16:31] markdaws has joined the channel
[16:32] jarek has joined the channel
[16:32] jarek has joined the channel
[16:32] smus has joined the channel
[16:32] mc_greeny has joined the channel
[16:33] smus has joined the channel
[16:33] newy has joined the channel
[16:33] Multiply has joined the channel
[16:33] eyesUnclouded has joined the channel
[16:34] klaustsen has joined the channel
[16:34] p3rsist has joined the channel
[16:34] sveisvei has joined the channel
[16:37] nsm has joined the channel
[16:37] Yuffster_work has joined the channel
[16:37] micheil has joined the channel
[16:37] Tick-Tock has joined the channel
[16:38] xandrews has joined the channel
[16:38] towski has joined the channel
[16:39] rickharrison has joined the channel
[16:39] newy has joined the channel
[16:40] p3rsist has left the channel
[16:40] alvaro_o has left the channel
[16:40] luke` has joined the channel
[16:41] dannycoates has joined the channel
[16:44] tomb_ has joined the channel
[16:44] zeade has joined the channel
[16:44] randal has joined the channel
[16:45] unknown_had has joined the channel
[16:47] colinclark has joined the channel
[16:47] maqr has joined the channel
[16:47] fmeyer has joined the channel
[16:48] meandi2 has joined the channel
[16:48] randal has joined the channel
[16:49] isaacs: Anyone else seeing `make bench` timeout around 10000 or 15000 requests?
[16:50] mynyml has joined the channel
[16:50] bradleymeck: on master?
[16:51] nuba: 5667 /w ⁾
[16:51] nuba: oops
[16:52] Paperjs_ has joined the channel
[16:52] Generic_Dumbass has joined the channel
[16:53] jchris has left the channel
[16:54] geetarista has joined the channel
[16:55] Generic_Dumbass has joined the channel
[16:58] andrewvos has joined the channel
[16:59] csanz has joined the channel
[16:59] te-brian has joined the channel
[17:00] bjarman has joined the channel
[17:01] TheJH: WTF? is the transloadid homepage really running on PHP?
[17:01] TheJH: that must be a joke
[17:01] jesusabdullah: It probably is
[17:01] seivan has joined the channel
[17:01] jesusabdullah: those guys originally came from a php background pretty sure
[17:01] sbisbee has joined the channel
[17:01] jesusabdullah: or at least felix did
[17:02] matomesc has joined the channel
[17:02] bradleymeck: cant think a good reason for it to be Node, its a simple page. Existing work in PHP is more battle tested than Node for now.
[17:03] tbranyen: more like battle tested, hacker approved
[17:03] jesusabdullah: Yeah, nothing too compelling about serving that either way
[17:03] jesusabdullah: except maybe "only one major tech in our stack"
[17:03] jesusabdullah: having to run both node and php might be annoying for all I know
[17:03] bradleymeck: lol, almost everything is hacker approved
[17:04] hidinginabunker has joined the channel
[17:04] vid__ has joined the channel
[17:04] unknown_had has joined the channel
[17:04] vipaca has joined the channel
[17:04] vipaca has joined the channel
[17:04] mrryanjohnston_ has joined the channel
[17:05] xtianw has joined the channel
[17:05] mrryanjohnston_: I posted  in here earlier about something similar: could anyone hook me up with a code snippet of their tested/working password authentication using mongoose-auth?
[17:06] topaxi has joined the channel
[17:06] hl7Guy has joined the channel
[17:06] edude03 has joined the channel
[17:07] _sorensen_: isaacs: having trouble installing npm (again), telling me that node is not in the PATH when i do sudo sh, you told me the command before that worked perfect and for the life of me i cannot find it
[17:07] _sorensen_: ^--- bummer
[17:08] geetarista has joined the channel
[17:08] jpuckey: Is there any way to have multiple files compiled within the same scope / context with shared local variables, besides using eval?
[17:08] Cleer has joined the channel
[17:08] tjholowaychuk: jpuckey the vm module
[17:08] tjholowaychuk: but that's still similar
[17:09] jpuckey: I will look into that again - from reading through the API docs, I get the idea that local variables aren't shared though
[17:10] mpavel has left the channel
[17:10] tjholowaychuk: you can pass a context object
[17:10] sveimac has joined the channel
[17:10] jpuckey: cool - I will check it out
[17:11] SuMarDi has joined the channel
[17:11] indexzero has joined the channel
[17:11] jpuckey: tjholowaychuk (working on node.js version of paper.js using your node-canvas library)
[17:11] jpuckey: ; )
[17:11] tjholowaychuk: jpuckey nice!
[17:11] tilgovi has joined the channel
[17:11] tilgovi has joined the channel
[17:11] tjholowaychuk: that's sweet
[17:11] tjholowaychuk: paper is awesome
[17:12] jpuckey: thanks - so is node-canvas!
[17:12] andi5 has joined the channel
[17:12] skymountain has joined the channel
[17:12] beda has joined the channel
[17:13] smus has joined the channel
[17:13] akisma has joined the channel
[17:13] sveimac has joined the channel
[17:13] TheJH: does anyone know when felixge will probably appear here?
[17:16] dshaw_ has joined the channel
[17:16] jesusabdullah: jpuckey: Keep me updated if this paper thing works out yo
[17:17] jpuckey: jesusabdullah: I have a temporary fork at https://github.com/jonathanpuckey/paper.js/ where I will be committing any progress I make
[17:18] jesusabdullah: a TEMPORARY FORK what is this
[17:18] Me1000 has joined the channel
[17:18] jesusabdullah: okay fine watching ;)
[17:18] baoist has joined the channel
[17:18] yept has joined the channel
[17:18] jpuckey: good question ; )
[17:19] nerdfiles has joined the channel
[17:19] dail: OMG am i blind? http://nodejs.org/docs/v0.4.10/api/net.html where is NET createClient ?
[17:19] dail: i have to connect TCP to a server
[17:20] isaacs has joined the channel
[17:20] sveimac has joined the channel
[17:21] butu5 has joined the channel
[17:21] Aikar: dail net.connect()
[17:21] Aikar: err net.createConnection()
[17:22] dail: ops createConnection
[17:22] dail: yes righttttt
[17:22] dail: D:
[17:22] stephank has joined the channel
[17:23] dail: Aikar, can i send message in binary format?
[17:24] reid has joined the channel
[17:25] aconbere has joined the channel
[17:25] robertfw has joined the channel
[17:25] cjm: TheJH: Not sure, I think he's 9 hrs ahead of the west coast
[17:25] TheJH: cjm, he's from germany (like me)
[17:26] CIA-65: node: 03Ryan Dahl 07gyp * rf03ea70 10/ generate-projects.bat : generate-project.bat: Point at the right path - http://bit.ly/rfa3Pd
[17:26] TheJH: cjm, but I don't know when he normally comes in IRC
[17:27] cjm: TheJH: yea I'm not sure
[17:27] smus has joined the channel
[17:28] jmalina has joined the channel
[17:29] aheckmann has joined the channel
[17:30] cjm: gotta run, for anyone who missed it, yesterday's NodeUp podcast is up! http://news.ycombinator.com/item?id=2860409
[17:30] AvianFlu has joined the channel
[17:31] mjijackson has joined the channel
[17:31] dail: is it possible?
[17:31] dail: sending receiving binary data?
[17:32] bnoordhuis: dail: yes, of course
[17:32] bradleymeck: use buffers
[17:32] dail: bnoordhuis hey! :)
[17:32] JJMalina has joined the channel
[17:32] dail: se but do i have to use particular function to send binary data
[17:32] dail: ?
[17:34] racar_J: Hello folks, i'm trying to use a md5 function in nodejs. whats the best & working module for nodejs v0.4.10 ? I tried hashlib but i got a error when i including the module. Thx
[17:34] fille has joined the channel
[17:34] fille: alloh
[17:35] bnoordhuis: racar_J: require('crypto').createHash('md5')
[17:35] luke`_ has joined the channel
[17:35] bnoordhuis: dail: what's the issue in particular? as bradleymeck said, use buffers for binary data
[17:35] racar_J: bnoordhuis, thx
[17:35] dail: ok
[17:36] edude03 has joined the channel
[17:38] ryanfitz has joined the channel
[17:40] eee_c has joined the channel
[17:41] Cromulent has joined the channel
[17:41] dguttman has joined the channel
[17:41] joshontheweb has joined the channel
[17:41] unknown_had has joined the channel
[17:43] threecreepio has joined the channel
[17:43] Wa has joined the channel
[17:44] langworthy has joined the channel
[17:45] norviller has joined the channel
[17:46] maushu has joined the channel
[17:47] hornairs has joined the channel
[17:47] mcluskydodallas has joined the channel
[17:47] Destos has joined the channel
[17:47] hornairs: is there still a way to eval code inside a typical module wrapper (so things like console and require are defined?)
[17:47] hornairs: hopefully not the same module that the eval call is in though
[17:49] chjj: hornairs what do you mean?
[17:49] AvianFlu: hornairs: the devil wrote eval(), don't use it
[17:50] chjj: avianflu: i think he may have just been referring to the vm module's stuff
[17:50] hornairs: AvianFlu i avoid it at all costs normally but its a requirement of the project
[17:50] AvianFlu: I mean, that was a joke :-P
[17:50] davididas has joined the channel
[17:50] chjj: k good
[17:50] chjj: cause eval is not the devil
[17:50] hornairs: and yeah chjj right now im doing vm.runInNewContext(js, global)
[17:50] jesusabdullah: hornairs: If you NEED eval check out vm.runInNewContext or whatever it is
[17:50] hornairs: but thats kind of lame
[17:51] jesusabdullah: ah
[17:51] Qbix1 has joined the channel
[17:51] chjj: hornaris, do runInThisContext, i dont think it gives access to the parent scope, only the global scope
[17:51] chjj: which is what youre asking for
[17:52] whoops has joined the channel
[17:52] indexzero has joined the channel
[17:52] hornairs: chjj: tried that, it doesn't seem to have access
[17:52] chjj: good
[17:52] chjj: its much more efficient too because a new global scope doesnt have to be created
[17:52] hornairs: i think it did in the past and it was reverted
[17:53] broofa has joined the channel
[17:53] `3rdEden has joined the channel
[17:53] sveimac has joined the channel
[17:54] neilk_ has joined the channel
[17:54] hornairs: i'm going to try coping all the k/vs of global to a temp object and running in that context
[17:54] hornairs: maybe that will work
[17:54] chjj: what do you mean, runInThisContext should do what you want
[17:54] chjj: in fact, its how the core module loader works
[17:55] chjj: why doesnt it do what you want?
[17:55] jbpros has joined the channel
[17:56] hornairs: chjj sorry i guess i was unclear! `require` isn't defined when I execute with vm.runInThisContext
[17:56] hl7Guy has joined the channel
[17:56] chjj: because require is not a global variable
[17:56] dnjaramba has joined the channel
[17:56] unknown_had has joined the channel
[17:57] hornairs: oh are those scoped to each file node loads? smart. is there any way I can hook into the code it uses to wrap a module for my own purposes?
[17:57] chjj: hornairs: there is a trick you could use to get around that
[17:58] chjj: var old = global.require; global.require = require; vm.runInThisContext('(function(require) {' + code + '})(require);'); if (old) global.require = old;
[17:59] chjj: saves you the trouble of creating a new context
[17:59] chjj: or else delete `global.require`, etc, you get the idea
[17:59] garrensmith has joined the channel
[17:59] jbrokc has joined the channel
[17:59] hornairs: chjj: that looks awesome, thanks!
[18:00] chjj: sure
[18:01] madsleejensen has joined the channel
[18:02] matyr has joined the channel
[18:03] unlink has joined the channel
[18:03] unlink has joined the channel
[18:03] ironlad has joined the channel
[18:04] DennisRasmussen has joined the channel
[18:04] AvianFlu_ has joined the channel
[18:05] aoberoi has joined the channel
[18:06] racar_J: How can i return a value on anonymus function Ex : stream.on('end' , function() {�md5 = md5sum.digest('hex'); return hex});  how can i expose the md5 value outside the stream ?
[18:06] konobi: racar_J: call a function
[18:06] jhurliman has joined the channel
[18:07] hornairs: racar_j: call a callback with your md5'd value or use a variable outside the anonymous function
[18:07] xerox: return hex -> process(hex)
[18:07] igl has joined the channel
[18:07] booo has joined the channel
[18:08] metellus has joined the channel
[18:08] halfhalo-work has joined the channel
[18:08] davidsklar: a tiny node.js project i'm doing: http://code.ning.com/2011/08/sidekick-using-nodef-js-to-run-scheduled-tasks-for-a-service/
[18:09] xerox: 404
[18:09] daill has joined the channel
[18:09] davidsklar: urp
[18:09] davidsklar: http://code.ning.com/2011/08/sidekick-using-node-js-to-run-scheduled-tasks-for-a-service/
[18:09] davidsklar: thanks for checking :)
[18:10] isaacs has joined the channel
[18:10] xerox: np
[18:10] racar_J: hornairs, i tried to use a var outside the function but i always get "undefined"
[18:10] maushu has joined the channel
[18:11] hornairs: racar_J it might be because the stream doesn't end before you use the value in the variable, so a callback might be a better idea
[18:11] ericmuyser has joined the channel
[18:11] Bonuspunk: racar_J where do u set hex?
[18:12] DennisRas has joined the channel
[18:12] racar_J: nowhere , its the encoding type ?!
[18:12] racar_J: brb
[18:13] matyr_ has joined the channel
[18:13] cronopio has joined the channel
[18:13] DennisRasmussen has joined the channel
[18:15] Bonuspunk: racar_J have u checked http://nodejs.org/docs/latest/api/crypto.html ?
[18:15] zackattack has joined the channel
[18:16] konobi: racar_J: callback(md5)
[18:16] charleyd has joined the channel
[18:16] c4milo1 has joined the channel
[18:16] wadey has joined the channel
[18:16] kavla has joined the channel
[18:17] devongovett has joined the channel
[18:17] rabidewok has joined the channel
[18:19] patcito has joined the channel
[18:19] curtischambers has joined the channel
[18:20] monokrome has joined the channel
[18:22] Charuru has joined the channel
[18:23] admc has joined the channel
[18:24] explodes has joined the channel
[18:28] malletjo has joined the channel
[18:28] carmony_ has joined the channel
[18:29] bejhan has joined the channel
[18:30] bejhan: Hey there, trying to compile nodeJS on solaris, having problems. Can someone help me out?
[18:31] aoberoi has joined the channel
[18:31] RushPL has joined the channel
[18:31] bejhan: Hey there, trying to compile nodeJS on solaris, having problems. Can someone help me out?
[18:31] jomoho has joined the channel
[18:32] a11235 has joined the channel
[18:32] bnoordhuis: bejhan: what's the issue?
[18:32] ncb000gt has joined the channel
[18:33] bejhan: First of it was complaining about stdbool being used
[18:33] bejhan: So I added CFLAGS=-std=c99 before ./configure
[18:33] bejhan: Now I'm getting
[18:34] bejhan: ../deps/libev/ev.c:1284: error: variable-size type declared outside of any function
[18:34] bejhan: ../deps/libev/ev.c:2921: error: storage size of 'sa' isn't known
[18:35] matyr has joined the channel
[18:35] davidascher has joined the channel
[18:36] devaholic has joined the channel
[18:36] androoid has joined the channel
[18:36] bnoordhuis: bejhan: are you building master or 0.4.10?
[18:36] isaacs: _sorensen_: you probably need to pipe the curl to something like  | sudo PATH=$PATH sh
[18:36] indexzero has joined the channel
[18:36] bnoordhuis: bejhan: 0.4.x i presume
[18:36] bejhan: 0.4.1
[18:37] bejhan: 0.4.10
[18:37] isaacs: _sorensen_: you can set up sudo to keep your environment vars the same.  i'm not sure off the top of my head how to do it.  start at `man sudo` and follow the breadcrumbs.
[18:37] AvianFlu: sudo -E preserves your env, IF your /etc/sudoers is set to allow it
[18:37] AvianFlu: which most aren't by default
[18:38] bnoordhuis: too bad rmustacc is offline
[18:38] bnoordhuis: bejhan: apparently struct sigaction doesn't live in signal.h on solaris
[18:39] bejhan: Hmm
[18:39] bejhan: Any remedy?
[18:40] pjacobs has joined the channel
[18:40] hl7Guy has joined the channel
[18:40] bnoordhuis: bejhan: double-check: can you add an `#include <signal.h>` at the top of deps/libev/ev.c?
[18:40] bnoordhuis: bejhan: as in on the very first line
[18:41] bejhan: Okay
[18:41] bejhan: Let me try building again
[18:41] agnat has joined the channel
[18:41] bejhan: Same errors
[18:42] arpunk: bejhan: solaris 10?
[18:42] technoweenie has joined the channel
[18:42] bejhan: SunOS 5.10
[18:42] bejhan: I believe that is Solaris 10?
[18:42] arpunk: yes
[18:43] arpunk: bejhan: http://www.petertribble.co.uk/Solaris/node.html
[18:43] mjijackson_ has joined the channel
[18:44] technoweenie has joined the channel
[18:45] rmustacc has joined the channel
[18:45] bejhan: arpunk: Thanks, I will try that out
[18:45] arpunk: np
[18:45] bnoordhuis: bejhan: a greater power has arrived
[18:45] bnoordhuis: to wit, rmustacc
[18:45] mraleph has joined the channel
[18:45] rmustacc: bejhan: Heard you were having a SunOS build problem.
[18:46] bejhan: rmustacc: Yes, I am
[18:46] rmustacc: What's the environment you're trying to build it in?
[18:46] csanz has joined the channel
[18:46] bejhan: rmustacc:  SunOS mustang 5.10 Generic_142910-17 i86pc i386 i86pc
[18:46] kenperkins has joined the channel
[18:47] _sorensen_: isaacs: perfect, thanks
[18:47] patcito_ has joined the channel
[18:47] rmustacc: Okay, and the error is related to sigaction not being defined.
[18:47] bejhan: Well there is two errors
[18:47] bejhan: ../deps/libev/ev.c:1286: error: variable-size type declared outside of any function
[18:48] bejhan: ../deps/libev/ev.c:2923: error: storage size of 'sa' isn't known
[18:48] rmustacc: Okay.
[18:48] rmustacc: What version of node is this?
[18:48] rmustacc: And which version of gcc are you using?
[18:49] technoweenie has joined the channel
[18:49] bejhan: Node 0.4.10
[18:49] bejhan: GCC 3.4.3
[18:49] context: 3.4.3 ?
[18:49] rmustacc: Okay, give me a moment to fire that up as well.
[18:49] rmustacc: 3.4.3 makes sense there.
[18:50] technoweenie has joined the channel
[18:50] rmustacc: Unfortunately I don't have an s10 box sitting around, but I'll see if I can figure out what it's unhappy about.
[18:50] bejhan: Thank you
[18:50] context: you're using a compiler from 2004.
[18:50] technoweenie has joined the channel
[18:50] bejhan: context: I don't have much choice, the sysadmins are not very inclined to change anything in the dev environment.
[18:50] context: do i want to know the distro and version
[18:51] rmustacc: context: Yes, 3.4.3 is how it works.
[18:51] rmustacc: That's what they shipped with s10
[18:51] context: the DEV environment? 
[18:51] context: find a new job
[18:51] jshaw has joined the channel
[18:51] ksheurs has joined the channel
[18:51] bejhan: context: Haha you make it sound so easy. It would be nice to be using a good version of linux, rather than solaris. I have not been able to build any packages without problems.
[18:51] bnoordhuis: context: i can tell you stories about debian potato and perl 5.003...
[18:52] [Sou|Raven] has joined the channel
[18:52] pifantastic has joined the channel
[18:53] context: bnoordhuis: but its perl.
[18:53] context: :p
[18:53] liquidproof has joined the channel
[18:53] technoweenie has joined the channel
[18:53] mikedeboer has joined the channel
[18:54] konobi: wow... 5.003... that's proper old
[18:54] [Sou|Raven] has joined the channel
[18:54] arpunk: bejhan: just try the precompiled package for solaris 10
[18:54] arpunk: it should work
[18:54] arpunk: and the patches are on that site too
[18:54] indexzero has joined the channel
[18:55] techwraith has joined the channel
[18:55] mrtazz has joined the channel
[18:55] hij1nx has joined the channel
[18:55] technoweenie has joined the channel
[18:56] markwubben has joined the channel
[18:56] JP| has joined the channel
[18:57] rmustacc: bejhan: Unfortunately it's working on the OpenSolaris and illumos machines I have. I know we've only tested on snv121+
[18:57] rmustacc: arpunk: Where are the patches for s10 that you're mentioning?
[18:57] technoweenie has joined the channel
[18:57] bejhan: rmustacc: Thank you for trying, I will try the package arpunk has mentioned. Hopefully this works for me!
[18:58] arpunk: rmustacc: http://www.petertribble.co.uk/Solaris/node.html
[18:58] iammerrick has joined the channel
[18:58] rangga_tam has joined the channel
[18:58] technoweenie has joined the channel
[18:58] arpunk: node works all fine under OpenIndiana/OpenSolaris bits
[18:59] Cromulent has joined the channel
[18:59] fostah has joined the channel
[18:59] technoweenie has joined the channel
[18:59] rangga_tam: anyone who ever used a zombie.js?
[19:00] tbranyen: yeah
[19:00] technoweenie has joined the channel
[19:00] markdaws has joined the channel
[19:01] jbpros_ has joined the channel
[19:01] technoweenie has joined the channel
[19:01] mrtazz has joined the channel
[19:02] technoweenie has joined the channel
[19:03] bejhan: arpunk: This is a bit off topic, but it has to do with the package you directed me to. The author specified to use pkgadd, but I do not have root access, anyway to do this without root and choose a folder I have access to?
[19:03] adrianolaru has joined the channel
[19:04] technoweenie has joined the channel
[19:04] Tobsn has joined the channel
[19:04] hij1nx has joined the channel
[19:05] technoweenie has joined the channel
[19:05] rangga_tam: tbranyen : can u give me examples?
[19:05] tbranyen: for what?
[19:06] tbranyen: like how we used it?
[19:06] tbranyen: honestly i just followed the api
[19:06] tbranyen: and integrated vows
[19:06] technoweenie has joined the channel
[19:07] llrcombs_ has joined the channel
[19:07] technoweenie has joined the channel
[19:08] rangga_tam: emm
[19:09] dpritchett has joined the channel
[19:09] rangga_tam: simulation form login :)
[19:09] sveisvei has joined the channel
[19:09] llrcombs has joined the channel
[19:10] technoweenie has joined the channel
[19:10] sveisvei: npm is having troubles?
[19:10] sveisvei: :P
[19:10] isaacs: sveisvei: no?
[19:10] technoweenie has joined the channel
[19:10] isaacs: sveisvei: you on node master?
[19:10] hidinginabunker has joined the channel
[19:11] sveisvei: hmm, yeah.... maybe just a package, ill check debug info :)=
[19:11] ekryski has joined the channel
[19:12] technoweenie has joined the channel
[19:12] CIA-65: node: 03Ryan Dahl 07gyp * rdb1bf67 10/ (.gitignore Makefile tools/gyp_node node.gyp tools/all.gyp): Move GYP file to the project root - http://bit.ly/pdBQGi
[19:12] jmoyers has joined the channel
[19:13] technoweenie has joined the channel
[19:15] kdente has joined the channel
[19:16] llrcombs has joined the channel
[19:17] eyesUnclouded has joined the channel
[19:17] crodas has joined the channel
[19:20] Lagnus has joined the channel
[19:20] Lagnus__ has joined the channel
[19:20] Lagnus_ has joined the channel
[19:21] thinkt4nk has joined the channel
[19:23] geetarista has joined the channel
[19:23] dreamdust1 has joined the channel
[19:25] booo has joined the channel
[19:26] robhawkes has joined the channel
[19:30] technoweenie has joined the channel
[19:31] stuk_ has joined the channel
[19:32] CIA-65: node: 03Ryan Dahl 07gyp * rd53fccb 10/ tools/gyp_node : Fix MSVS build - http://bit.ly/oTKOL2
[19:32] jshaw has joined the channel
[19:33] gazumps has joined the channel
[19:33] isaacs: sveisvei: node master is a but less stable than the stable branch.  there are also some fixes in npm 1.0.23 that make it send the host header properly
[19:33] yumike has joined the channel
[19:33] pt_tr has joined the channel
[19:34] hl7Guy has joined the channel
[19:35] c4milo1 has joined the channel
[19:37] zastaph has joined the channel
[19:37] aliem has joined the channel
[19:38] Pilate has joined the channel
[19:40] hidinginabunker_ has joined the channel
[19:41] tilgovi has joined the channel
[19:41] tilgovi has joined the channel
[19:42] Pilate has joined the channel
[19:43] pwk0 has joined the channel
[19:43] jhurliman: ryah, ping
[19:44] squeese has joined the channel
[19:44] TooTallNate has joined the channel
[19:44] dherman has joined the channel
[19:45] pwk0: any tutorial on building libuv?
[19:45] ryah: jhurliman: whats up?
[19:46] pwk0: i followed http://vimeo.com/24713213 but obviously the screencast is yet outdated with the source :(
[19:47] ryah: pwk0: building libuv?
[19:47] jhurliman: ryah, i got a basic version of my process.watchers() function working (wraps ev_walk), but it's currently using a global variable to hold which JS callback to fire. since ev_walk() expects a C callback and i couldn't find any way to pass additional context to it
[19:47] piscisaureus has joined the channel
[19:47] mikeal has joined the channel
[19:48] jhurliman: is there a scenario where that would cause problems? i don't know if there is any scenario where my process.watchers() method could be called multiple times concurrently
[19:48] pwk0: yes... i wanted to follow your screencast, but I fail on building libuv, and linking it to my webserver.c
[19:48] pwk0: :(
[19:48] ryah: jhurliman: cool
[19:48] ryah: pwk0: yeah the API has changed - but not drastically. We're working on the build system at the moment
[19:49] Pilate has joined the channel
[19:49] ryah: jhurliman: i think you shouldn't call into JS for each of the ev_walk callbacks
[19:49] pwk0: ok, I downloaded the full example from http://nodejs.org/uv_webserver.tar.gz but cannot build it in linux/32
[19:49] mc_greeny has joined the channel
[19:49] theCole has joined the channel
[19:50] jhurliman: ok. but either way i would still need to pass state from the Watchers() function to WatcherCallback() or back the other direction
[19:50] context: what
[19:50] ryah: yeah...
[19:50] aoberoi has joined the channel
[19:50] monokrome: Is there an ORM that stands out above other ORMs? One that's particularly mature?
[19:50] monokrome: (They all seem rather immature)
[19:51] context: dont think there is a single ORM that covers more than 1-2 db's
[19:51] ryah: jhurliman: i guess you do need a global variable of some sort
[19:51] iammerrick: monokrome: how about one that will also support websql
[19:51] iammerrick: so you can run it on the client!
[19:51] context: websql ?!@#
[19:51] jhurliman: i could have each call to WatcherCallback() push an ObjectWrap pointer to a global array and reset it when the ev_walk() call completes
[19:51] ryah: pwk0: you'll have to apply some effort - it shouldn't be too bad
[19:51] monokrome: I'm really at a point where I don't mind DB coverage. I just want it to cover most queries.
[19:51] jhurliman: then return a JS array instead of using a callback. i'll go that route
[19:51] monokrome: and convert any raw queries back into objects again.
[19:52] pwk0: ryah: undefined reference to `ceil' :(
[19:52] ryah: pwk0: you probably need to "LINKFLAGS=-lm make"
[19:52] context: web sql is deprecated apparently
[19:53] ryah: jhurliman: that sounds good
[19:53] iammerrick: context: really client side storage doesn't use sql anymore?
[19:53] iammerrick: well
[19:53] iammerrick: client databases
[19:53] ncamacho has left the channel
[19:53] ericmuyser has joined the channel
[19:54] jhurliman: the only advantage of going with a JS callback for each watcher is that i could have the callback return true/false to optionally kill that watcher (ev_walk() lets you do that it seems). but for my purposes, i just want to dump info about the watchers not manipulate them
[19:54] context: http://en.wikipedia.org/wiki/Indexed_Database_API
[19:54] pwk0: ryah: same results :(
[19:54] monokrome: Maybe it's best to just go with raw queries at this point.
[19:55] adambeynon has joined the channel
[19:55] Pilate has joined the channel
[19:55] jhurliman: ok off to lunch, i'll do some refactoring and start working on getting the stack traces stored in IOWatcher later
[19:56] christopherdb has joined the channel
[19:56] jhurliman: monokrome, i've found that if you're already setting your project up as an MVC framework, the ORM layer is not as important as it seems. usually easy enough to just put raw queries in your models
[19:57] malletjo: Bonuspunk, yes i have checked this page. Konobi : i'm trying to use a callback but i don't know where to add it.
[19:57] monokrome: jhurliman: Yeah. I've just switched from preferring raw SQL to ORM over the last few years, but when the ORMs aren't mature yet - I think raw SQL is the way to go here.
[19:58] jhurliman: ryah, last question before i run. if i add EV_SIGNAL to my watchers mask i will get an extra callback with type EV_SIGNAL. what is that exactly?
[19:58] bnoordhuis: pwk0: try `LDFLAGS=-lm make`
[19:58] monokrome: Now to find the best choice for a REST API in Node :)
[19:58] simenbrekken has joined the channel
[19:58] malletjo has left the channel
[19:58] context: express?
[19:59] racar_j has joined the channel
[19:59] monokrome: express has a rest middleware?
[19:59] monokrome: I'm looking at webservice.js atm
[20:00] theCole has joined the channel
[20:00] dreamdust1: What do you mean? Express is REST already.
[20:00] tristanseifert has joined the channel
[20:00] monokrome: for making a web service...
[20:00] monokrome: not a web site
[20:00] zilch has joined the channel
[20:00] cronopio has joined the channel
[20:01] tjholowaychuk: monokrome myself and dozens of others have used express for RESTful web services
[20:01] tristanseifert has joined the channel
[20:01] ryanfitz_ has joined the channel
[20:01] monokrome: Yes, I'm sure. I'm trying to find one of the dozens that decided to make it easier :)
[20:01] Pilate has joined the channel
[20:02] tjholowaychuk: it's not too difficult :p app.get('/something', function(req, res){ res.json({ some: 'thing' }) });
[20:02] Chris_ has joined the channel
[20:02] monokrome: Sure, if you only want to support get requests.
[20:02] dreamdust: app.post
[20:02] dreamdust: app.all
[20:03] monokrome: Seems this is better done as a connect middleware.
[20:03] tjholowaychuk: monokrome there's also express-resource for CRUD type stuff
[20:03] pNstK has joined the channel
[20:03] pwk0: bnoordhuis: thanks! I was trying with "env LDFLAGS=-lm make" :D
[20:03] monokrome: tjholowaychuk: That sounds more like what I'm talking about. I'll look at it. Thanks :)
[20:04] tjholowaychuk: monokrome: if it doesnt suite your needs, something custom is only a few lines away. app.VERB() is pretty much all you need
[20:04] jhurliman: from the docs, EV_SIGNAL is described as a signal that another signal was fired. not sure if those would ever be worthwhile to a node app so i removed them from the event mask
[20:04] tjholowaychuk: just wrap that in app.service({ blah blah })
[20:04] theCole has left the channel
[20:04] jhurliman: monokrome, there is also the brand new https://github.com/hueniverse/hapi
[20:05] jhurliman: scratch that, it's so new it doesn't exist yet ha
[20:05] tjholowaychuk: haha :D that's the best kind
[20:05] dreamdust: Yeah, and oauth is arguably not REST ;)
[20:06] racar_j: I'm using crypto for creating my md5 sum (http://http://nodejs.org/docs/latest/api/crypto.html). The problem is when i'm using stream.on('end', function() {md5=md5sum.digest('hex')});  i don't know how to use a callback so i can use the md5 value outside of the 'end' event for comparaison. I tried  ... function(callback) { ... callback(md5); }; but where do i define the callback function ? value = callback(md5)
[20:06] monokrome: jhurliman: That is an empty project.
[20:06] tjholowaychuk: some people forget that js is flexible
[20:06] jhurliman: yeah, oops
[20:06] tjholowaychuk: and you can just wrap the app.get() app.post() etc in anything you want
[20:07] tjholowaychuk: app.map('/user', { GET: fn, POST: fn }) anything like that is trivial to implement
[20:07] monokrome: express-resource will definitely help though. Thanks
[20:07] tjholowaychuk: ontop of the basics
[20:07] pwk0: bnoordhuis: but no, also failed :(
[20:07] jhurliman: dreamdust, actual REST sucks though
[20:07] hl7Guy has joined the channel
[20:07] jhurliman: by actual REST i mean HTTP verb abuse :)
[20:08] aheckmann has joined the channel
[20:08] Pilate has joined the channel
[20:08] context: abuse? 
[20:08] monokrome: except it monkey patches :|
[20:08] context: why do they exist if not to be used
[20:08] bnoordhuis: pwk0: hack the makefile and add it to LDFLAGS / LINKFLAGS
[20:08] adrianolaru has left the channel
[20:08] dreamdust: Because you can't use them as they were intended. Referring to PUT/DELETE/etc.
[20:08] jhurliman: they exist because the original spec authors weren't exactly sure how the web would evolve
[20:09] dreamdust: I think he's talking about the "_method" hidden field
[20:10] ryah: jhurliman: signal watcher is for watching for signals :)
[20:10] jhurliman: ryah, in my simple test i call setTimeout and then process.watchers() and see a timer signal and a signal signal. i couldn't think of a practical use (at the JS level) for the latter so i just removed EV_SIGNAL
[20:11] jhurliman: but i'm not familiar enough with them to know
[20:11] ryah: jhurliman: process.on("SIGINT", function() { console.log(" someone did ctrl+c") })
[20:12] jhurliman: ahhh
[20:12] TooTallNate has joined the channel
[20:12] jhurliman: that would certainly be useful to watch for. i'll add it back in
[20:12] pwk0: bnoordhuis: yes that worked ^^
[20:12] m0s has joined the channel
[20:12] ryah: jhurliman: this is going to be hot - im glad you're doing this
[20:13] jhurliman: just needs a bit of extra code to check if type == EV_SIGNAL and if so, don't attempt to convert IOWatcher.handle_ to a JS object because there is nothing there
[20:13] pwk0: sorry for the noob building questions! :)
[20:13] ryah: bnoordhuis: we need uv_walk
[20:13] jhurliman: :-)
[20:13] bnoordhuis: ryah: yes
[20:13] bnoordhuis: was that a hint?
[20:13] ryah: it's more of a windows problem
[20:13] ryah: but if we started on the unix side im sure they would do it
[20:13] ryah: esp with test
[20:14] bnoordhuis: i'll add that to my to do list, shall i?
[20:14] ryah: bnoordhuis: sure thanks :)
[20:14] malkomalko has joined the channel
[20:14] jhurliman: ryah, are there already libuv equivalents to EV_TIMER / EV_SIGNAL / EV_blah ?
[20:14] jhurliman: the event type bitflags
[20:15] mcluskydodallas has joined the channel
[20:16] jhurliman: i also had to modify the ev.h header to #define EV_WALK_ENABLE as 1 instead of 0. not sure if that's the proper way to do that or if it should be done as part of the build process somehow
[20:16] ryah: jhurliman: yes
[20:16] ryah: jhurliman: it's more or less the same as libev
[20:16] jhurliman: cool ok
[20:17] euforic has joined the channel
[20:18] TooTallNate has joined the channel
[20:18] nym has joined the channel
[20:20] wdperson has joined the channel
[20:20] guillermo has joined the channel
[20:21] synkro has joined the channel
[20:23] ericmuyser has joined the channel
[20:23] tilgovi has joined the channel
[20:24] nym: hey, i'm having problems getting NPM up to date and i have documentation: https://gist.github.com/1132635
[20:24] nym: isaacs: any help would be appreciated
[20:24] isaacs: nym: run as root
[20:24] newy has joined the channel
[20:24] isaacs: curl | sudo sh
[20:24] isaacs: ircretary: inst nym
[20:24] ircretary: nym: `curl http://npmjs.org/install.sh | sh` (or, if there are permission issues, you can try: `curl http://npmjs.org/install.sh | sudo sh`)
[20:27] nym: right, just did that, and it went smoother
[20:27] nym: but i have another issue now
[20:28] harthur has joined the channel
[20:28] nym: sorry, it's just a sqllite error
[20:28] nym: thank you
[20:29] isaacs: np, have fun :)
[20:29] nym: isaacs: thanks!
[20:29] nym: isaacs: by the way, the lockerproject.org is using npm to manage all our dependencies
[20:29] isaacs: nice :)
[20:30] boehm has joined the channel
[20:30] nym: i'm by no means a security expert, but i do have some basic security concerns about npm with respect to The Locker Project
[20:30] isaacs: nym: yeah, i'm working on that :)
[20:31] nym: cool, just mentioning it because our use case is protecting personal data
[20:31] liquidproof has joined the channel
[20:31] isaacs: nym: the short answer for now is to set up a registry internally, configure couch to always require auth and only be accessible via https, and set npm to always-auth as well.
[20:32] cafesofie has joined the channel
[20:32] tristanseifert has joined the channel
[20:32] isaacs: nym: fairly soon, the registry will send out a cert for "registry.npmjs.org" (instead of one for *.iriscouch.com) and the client will validate that.
[20:33] isaacs: nym: you're not using npm to send and fetch your actual personal data you store, are you...?
[20:33] Gus has joined the channel
[20:34] Cleer has joined the channel
[20:34] nym: isaacs: no, but our connectors use node.js dependencies
[20:34] Gus: hi
[20:34] isaacs: nym: right, that's what i thought you meant.  so you wanna make sure that the deps come from who they say they come from, the registry is the "real" registry, etc.
[20:34] nym: right
[20:35] nym: ideally we'd like to maintain our own registry to make sure the versions were the right ones
[20:35] nym: so we can have a "stable" product, so to speak
[20:37] sechrist: woot, I set up a cheap little tv monitor to sit near my workstation dedicated to irc
[20:37] nym: isaacs: please feel free to come by #lockerproject and talk anytime
[20:37] margle has joined the channel
[20:38] isaacs: nym: looks interesting.  i'll check it out after node knockout if i'm still sane ;)
[20:38] nym: i got asked to judge :D
[20:38] nym: now i have a legitimate excuse for going through all the projects
[20:38] nerdfiles1 has joined the channel
[20:39] nerdfiles1 has left the channel
[20:39] tauren has joined the channel
[20:39] chapel: well I personally don't mind just manually curating the node_modules we use, and deploying with them in the repo
[20:39] pt_tr has joined the channel
[20:39] chapel: although, for larger more distributed projects, it might be easier to have a local npm repo
[20:39] nym: isaacs: tim o'reilly + clay shirky are advisors, matt zimmerman (ubuntu cto) just joined us recently
[20:39] isaacs: nice
[20:40] isaacs: chapel: "bundleDependencies" is handy there.
[20:40] nym: ok, thanks again for the help, hopefully will see you in meatspace again soon
[20:40] isaacs: chapel: and then `npm pack` to get a tarball of your project.  from there you can put it on a dist server, take a checksum, whatever.
[20:40] chapel: yeah
[20:40] isaacs: nym: ^ that can also be handy in your case, probably
[20:41] chapel: a couple projects we just use github as is
[20:41] margle: nym: advisors for?
[20:41] chapel: his startup
[20:42] topaxi has joined the channel
[20:42] CIA-65: libuv: 03Ryan Dahl 07master * r75c1090 10/ (.gitignore Makefile README config-mingw.mk config-unix.mk): Bring back standalone makefiles for a better transition - http://bit.ly/npDkTa
[20:43] aoberoi has joined the channel
[20:43] hij1nx_ has joined the channel
[20:44] dambalah has joined the channel
[20:44] dambalah has left the channel
[20:46] softdrink: tjholowaychuk:  how performant would you say node-canvas is?
[20:46] sechrist: I've played with it
[20:46] sechrist: I even made a thing that let serverside js stream a user interface over a video stream with it
[20:46] sechrist: png is expensive imo
[20:46] sechrist: for high framerate
[20:47] sechrist: for a website for just image manipulation.. it's plenty fine
[20:47] softdrink: heh i just need to draw pie charts really
[20:47] sechrist: oh yeah that's fine
[20:47] sechrist: and you can probably come up with a way to cache them
[20:47] sechrist: so it doesn't matter as much
[20:47] tjholowaychuk: yeah png is the worst part
[20:47] tjholowaychuk: the rest is pretty on par with browsers
[20:48] cronopio has joined the channel
[20:49] liar has joined the channel
[20:50] steffan_ has joined the channel
[20:50] loveshine has joined the channel
[20:51] kevwil has joined the channel
[20:53] kkaefer: sechrist: the expensive part about node-canvas is not the drawing itself but the actual image encoding with zlib
[20:53] kkaefer: sechrist: that's probably taking up 80-90% of the total time
[20:53] sechrist: yeah and that's a part of the png process iirc
[20:53] n00dles has joined the channel
[20:53] kkaefer: yes, you can't get around that
[20:54] sechrist: if you just take the rgb off of the buffer
[20:54] kkaefer: you can tweak some options for libpng compression
[20:54] sechrist: it's a lot faster
[20:54] sechrist: oh I didn't think about that
[20:54] sechrist: I just bypassed png
[20:54] kkaefer: but it doesn't get you a lot faster
[20:54] kkaefer: you can maybe get 20% faster at the expense of file size
[20:54] kkaefer: but that's about it
[20:54] sechrist: because with zlib tweaked the container is not expensive?
[20:54] sechrist: eh well I get what you're saying
[20:55] kkaefer: the container is not expensive part, the expensive part is actual compression in libz
[20:55] n00dles has left the channel
[20:55] kkaefer: you can also remove some filters in libpng and together with Z_BEST_SPEED, you can get 20-25%
[20:55] kkaefer: but that's it
[20:56] wookiehangover has joined the channel
[20:56] kkaefer: sechrist: https://github.com/developmentseed/node-blend/blob/master/src/writer.cc#L21-44
[20:56] sechrist: how is taking the rgb straight off of the gl object for feeding into ffmpeg or something NOT cheaper than handling the png?
[20:56] sechrist: for piping it to a browser, ok fine
[20:57] kkaefer: oh, I don't know about that, may be faster
[20:57] sechrist: oh that was the scenario I was talking about png being really slow in
[20:57] m0s_ has joined the channel
[20:57] booo has joined the channel
[20:57] sechrist: each frame was going through zlib and choking.. and I wanted 30fps
[20:57] kulor-uk has joined the channel
[20:58] sechrist: It was pretty awesome to see a physics demo running in node show up in a skype call
[20:58] dgathright has joined the channel
[20:59] m0s has joined the channel
[20:59] unlink has joined the channel
[21:00] sechrist: speaking of which... http://devongovett.github.com/png.js/
[21:00] sechrist: neat
[21:00] devongovett: sechrist: danke
[21:00] devongovett: hehe
[21:00] ryanfitz has joined the channel
[21:01] kuya: does anyone know anything about node-ssh? like if it works :)
[21:01] sechrist: devongovett: I am liking this spinfox
[21:01] sechrist: weeeeeeeeeeee
[21:01] AvianFlu: kuya: that's substack's, right
[21:01] AvianFlu: ?
[21:02] AvianFlu: cause if it is, his last verdict on it was that libssh and libeio don't play nice
[21:02] sechrist: he just fails at integrating it :P
[21:02] kuya: AvianFlu: mikedeboer was the one im looking at... maybe there are two 
[21:02] kuya: https://github.com/mikedeboer/node-ssh
[21:03] AvianFlu: substack tried to make one, and the libs wouldn't play well
[21:03] AvianFlu: that one I've not seen before
[21:03] AvianFlu: I sure would enjoy having a node-scp though!
[21:03] kuya: i could of course download it and run the tests... ;D
[21:03] AvianFlu: kuya: always your most reliable course of action!
[21:04] kuya: but then again... *the* test doesnt look overly complete...
[21:05] steffan__ has joined the channel
[21:06] kuya: ah well, glad i looked at the status of these libs before getting carried away with a new idea! thanks AvianFlu 
[21:06] AvianFlu: np d00d
[21:06] bengrue has joined the channel
[21:07] materialdesigner has joined the channel
[21:08] kevwil has joined the channel
[21:08] levity_island has joined the channel
[21:10] TheJH: woohoo! hacking node.js RPC servers is fun :)
[21:10] xerox: what are you playing with?
[21:11] TheJH: xerox, dnode
[21:11] jmoyers: is there a mail client library that can get emails from a pop or imap inbox?
[21:13] technowe_ has joined the channel
[21:13] baudehlo: there's a node imap module.
[21:13] CIA-65: node: 03Ryan Dahl 07gyp * r03b5831 10/ (Makefile configure Makefile-gyp configure-gyp): 
[21:13] CIA-65: node: Bring back old Makefile and configure script
[21:13] CIA-65: node: GYP and WAF need to live in parallel for some time. - http://bit.ly/n69bIq
[21:13] DTrejo: ^ouch
[21:14] baudehlo: jmoyers: https://github.com/mscdex/node-imap
[21:14] jmoyers: yeah… im just looking at that
[21:15] mscdex: imap ftw!
[21:15] CIA-65: node: 03Ryan Dahl 07gyp * r09f2d38 10/ (6 files in 2 dirs): Upgrade libuv to 75c10905 - http://bit.ly/oTa4B1
[21:15] mscdex: pop3 ftl!
[21:16] yozgrahame has joined the channel
[21:16] zeade has joined the channel
[21:16] CIA-65: node: 03Ryan Dahl 07gyp * rc110fbc 10/ (183 files in 12 dirs): 
[21:16] CIA-65: node: Revert "Remove scons"
[21:16] CIA-65: node: This reverts commit bd270b48a790ba00dd5a0dc9624aabbdedacaea8. - http://bit.ly/qrBA39
[21:17] krh: what is gyp?
[21:17] AvianFlu: a new build system
[21:17] jesusabdullah: Does it look any good AvianFlu ?
[21:17] aoberoi has joined the channel
[21:17] krh: what's it written in?
[21:17] AvianFlu: that question is beyond my pay grade
[21:17] mscdex: i hope we don't get gypped with this one
[21:17] AvianFlu: krh: python, I'm pretty sure
[21:17] jesusabdullah: hah!
[21:18] AvianFlu: it's a new build system for node, it may be quite old
[21:18] tjholowaychuk: im curious about it too
[21:18] tjholowaychuk: wonder if it's mostly for windows integration
[21:18] rmustacc: It's used by v8.
[21:18] tjholowaychuk: and if it still has the suck that waf does
[21:18] balaa has joined the channel
[21:18] AvianFlu: it sounds like it's mostly cause waf sucks
[21:18] tjholowaychuk: rmustacc i thought v8 was using scons?
[21:18] AvianFlu: as opposed to being windows related
[21:18] rmustacc: It provies a json-like description and outputs scons, make, visual studio, etc.
[21:18] jesusabdullah: I see
[21:19] tjholowaychuk: ah
[21:19] AvianFlu: that makes sense
[21:19] rmustacc: It's how v8 handles Windows.
[21:19] tjholowaychuk: yeah i saw the json stuff and got excited
[21:19] krh: ah, http://code.google.com/p/gyp/
[21:20] rmustacc: The real goal is not to have different build systems for different platforms since then one of them is usually left behind.
[21:20] tjholowaychuk: moar abstraction
[21:21] jesusabdullah: YOU're an abstraction!
[21:21] ryah: it's a meta-build system
[21:21] ryah: our goal is actually to depend of every build system
[21:21] ryah: so that you need them all in order to build node
[21:21] hij1nx has joined the channel
[21:22] TooTallNate has joined the channel
[21:22] ryah: currently we have: make, cmake, waf, scons, gyp, and msvs
[21:22] ryah: \o/
[21:22] tjholowaychuk: fun fun fun fun
[21:23] isaacs: ryah: does msvs run in OS X?
[21:23] isaacs: i don't think i have that one
[21:23] ryah: but this meta-build system will surely solve all of our problems!
[21:23] isaacs: ryah: you should generate your gyp file with autoconf
[21:24] ryah: except there's some disagreement about which meta-build system we should use
[21:24] ryah: gyp or cmake
[21:24] ryah: which is why i propose the ultimate solution
[21:24] ryah: a meta-meta build system
[21:24] isaacs: let's write it in node!
[21:24] drudge: haha
[21:24] ryah: it's similar to a factory factory
[21:24] TheJH: here's what I understand: http://xkcd.com/927/
[21:25] halfhalo-work has joined the channel
[21:25] admc has joined the channel
[21:26] ryah: TheJH: yes, that's approximately the situation
[21:26] TheJH: sounds like "don't wove or it will get worse"
[21:26] TheJH: *move
[21:28] chaval has joined the channel
[21:28] chaval: hi there
[21:28] lauratika has joined the channel
[21:28] chaval: who can give me a hand with a nodejs install
[21:28] lauratika has left the channel
[21:28] lauratika has joined the channel
[21:29] lauratika has left the channel
[21:29] lauratika has joined the channel
[21:29] guillermo has joined the channel
[21:29] chaval: who can give me a hand with a nodejs install?
[21:29] jacobolus has joined the channel
[21:30] lauratika: hi everyone im trying to intsall npm in linux and i receive this error http://pastebin.de/18167
[21:30] lauratika: i need to install this in order to run locker, any ideas what can be wrong...thanx a lot
[21:30] isaacs: lauratika: you need node 0.4.10 orhigher
[21:30] bnoordhuis: chaval: what's the issue?
[21:30] isaacs: 90.4 or higher
[21:30] isaacs: *0.4 or higher
[21:30] isaacs: lauratika: but certainly, 0.2.6 will not do
[21:30] havenn has joined the channel
[21:31] lauratika: ok so how can i do this, sorry new on npm
[21:31] isaacs: lauratika: how did you install node?
[21:32] chaval: who can give me a hand with a nodejs install? I followed instructions from https://github.com/joyent/node/wiki/Installation and got this after ./configure http://pastebin.com/WZe18Y8p
[21:33] chaval: using centos
[21:33] chaval: vps
[21:33] lauratika: isaacs i did via locker
[21:33] DTrejo: tjholowaychuk is hot for JSON
[21:34] bnoordhuis: chaval: you need python >= 2.5.2
[21:34] tjholowaychuk: DTrejo haha
[21:34] chaval: got it
[21:34] tjholowaychuk: i was mostly excited because I thought it wasn't python
[21:34] gkatsev: isaacs: why is nodeup 3 130MB?
[21:34] tjholowaychuk: since I dont know py well but meh
[21:34] tjholowaychuk: it's all over
[21:34] nym: lauratika: ok, you want to install node.js - http://nodejs.org/
[21:34] isaacs: gkatsev: i dunno
[21:34] gkatsev: it's very big.
[21:34] isaacs: gkatsev: it's long
[21:35] gkatsev: even for a 2 hour podcast
[21:35] isaacs: gkatsev: no clue
[21:35] isaacs: gkatsev: probably all the encoded mess---bad compression.
[21:35] materialdesigner: it's got secret porn in the middle of it
[21:35] gkatsev: yeah
[21:35] gkatsev: something to look out for in future episodes
[21:35] isaacs: no encoded messages.
[21:35] isaacs: nothing slipping past government blocks
[21:35] isaacs: nothing like that
[21:35] lauratika: i have node installed
[21:35] materialdesigner: lauratika: what version?
[21:35] isaacs: lauratika: you have a very old version of node installed.
[21:35] DTrejo: node --version outputs what ?
[21:35] gkatsev: isaacs: hehe
[21:35] dphase_ has joined the channel
[21:35] isaacs: lauratika: you have 0.2.6, you need 0.4
[21:36] isaacs: DTrejo: it's in the error output lauratika linked above
[21:36] lauratika: oh ok, so can i upgrade via command line?
[21:36] chaval: thnx bnoordhuis I'll try that
[21:37] bnoordhuis: chaval: my pleasure
[21:38] lauratika: ok, installing from wiki
[21:38] lauratika: so after this
[21:38] lauratika: then it's all fix?
[21:38] isaacs: lauratika: then do the curl|sh npm install thingie
[21:39] isaacs: lauratika: and it ought to work
[21:40] lauratika: great thanx issac giving it a try and see what happens cheers!
[21:40] cbiscardi has joined the channel
[21:41] eignerchris has joined the channel
[21:41] sechrist has joined the channel
[21:43] chaval: bnoordhuis: I just installed 2.6 but still the same error, what's more: It still runs 2.4.3 when I execute "python"
[21:43] bnoordhuis: chaval: it's probably installed in a different location or named differently
[21:45] m0s has joined the channel
[21:46] fdenbow has joined the channel
[21:47] jvduf has joined the channel
[21:47] brolin has joined the channel
[21:48] simenbrekken has joined the channel
[21:48] robertfw has joined the channel
[21:49] hidinginabunker has joined the channel
[21:49] technoweenie has joined the channel
[21:49] m00p has joined the channel
[21:51] csm_ has joined the channel
[21:52] max_dev has joined the channel
[21:52] jeedey: http://pastie.org/private/imguympuulqjx7csdwa1ag
[21:52] dshaw_ has joined the channel
[21:55] jacobolus has joined the channel
[21:56] elliottc1ble has joined the channel
[21:58] bradleymeck has joined the channel
[21:58] m0s_ has joined the channel
[22:00] ckknight has joined the channel
[22:00] chaval: bnoordhuis: I got python 2.6 working on the python symlink but got this new error after make: http://pastebin.com/20ajxvJy
[22:01] jellosea has joined the channel
[22:01] bnoordhuis: chaval: congrats, you've just built node :)
[22:01] jellosea: does anyone know how to do a reuglar for loop in jade?
[22:02] bru_ has joined the channel
[22:02] tjholowaychuk: jellosea - for (var i = 0; ...
[22:02] jellosea: like for (var i=0; i < #{foo}; i++)
[22:02] tjholowaychuk: no interp
[22:02] jellosea: tjholowaychuk: it doesn't seem to work
[22:02] tjholowaychuk: it's just js
[22:02] bru_ has joined the channel
[22:02] tjholowaychuk: - for (var i=0; i < foo.length; ++i)
[22:02] jellosea: oh.. i see
[22:02] jellosea: thanks i will ry i
[22:02] jellosea: *try it
[22:03] tjholowaychuk: there's also some special sauce for that since loops dont look too template friendly
[22:03] tjholowaychuk: - each val in foo
[22:04] jellosea: yup, i needed actually the index though
[22:04] jellosea: and it worked great, thanks
[22:04] tjholowaychuk: - each val, i in foo
[22:05] hidinginabunker has joined the channel
[22:06] eyesUnclouded has joined the channel
[22:07] wookiehangover has joined the channel
[22:09] chaval: lol bnoordhuis thank's! I got the same warning before and didn't come able to execute the make install. You made my day ;)
[22:09] CIA-65: node: 03Ryan Dahl 07gyp * r71435ed 10/ (configure configure-gyp): Unify configure scripts - http://bit.ly/mRYFfV
[22:10] escii has joined the channel
[22:10] davidbanham has joined the channel
[22:10] clifton has joined the channel
[22:11] ironlad has joined the channel
[22:12] blup has joined the channel
[22:16] mikeal has joined the channel
[22:16] Drakonite has joined the channel
[22:17] hidinginabunker has joined the channel
[22:17] wadey has joined the channel
[22:18] m00p has joined the channel
[22:21] kulor-uk has joined the channel
[22:22] tobmaster has joined the channel
[22:24] maushu: Where can I get a list of properties of an exception? Specifically a syntax error exception. I know .message
[22:24] odie5533: bnoordhuis: earlier you said gyp is declarative and cmake is more imperative. Can you explain that in the context of build systems?
[22:24] lauratika: i have troubles installing node
[22:24] caolanm has joined the channel
[22:25] materialdesigner: what's your trouble lauratika ?
[22:25] odie5533: lauratika: did you try sudo apt-get install node?
[22:25] bnoordhuis: odie5533: with cmake you tell it 'do that and do it like this'
[22:25] bnoordhuis: odie5533: with gyp it's more like 'hey, i have these *.c files and they should be *.o files - figure it out, will you?'
[22:26] jshaw has joined the channel
[22:26] odie5533: so it makes more assumptions about the environment?
[22:26] bnoordhuis: ^ lots of hand waving of course
[22:26] materialdesigner: any everyauth devs available? I made a plugin that I want to make sure is up to spec for a pull request
[22:26] davidwalsh has joined the channel
[22:26] odie5533: you could always do a pull request, then the developers will check if it is up to spec for you.
[22:26] lauratika: odie5533: yes 
[22:27] m0s has joined the channel
[22:27] bnoordhuis: odie5533: the answer to that is not really yes and not really no
[22:27] zahanm has joined the channel
[22:28] lauratika: actually you are right bnoordhuis
[22:28] lauratika: after ./configure --prefix=$HOME/local/node
[22:28] lauratika: make
[22:29] mcluskyd_ has joined the channel
[22:29] lauratika: terminal keeps loading
[22:29] lauratika: and loading
[22:30] bnoordhuis: lauratika: ?
[22:30] threecreepio has joined the channel
[22:31] lauratika: sorry, after i try make
[22:31] lauratika: then in terminal keeps loading a bunch of code and wont stop
[22:31] alek_br has joined the channel
[22:32] Dreamer3 has joined the channel
[22:32] lauratika: ls: cannot access build/debug/node_g: No such file or directory
[22:32] lauratika has left the channel
[22:32] jellosea: the scope for variables in jade seems to dissapear?
[22:33] CIA-65: libuv: 03Igor Zinkovsky 07master * rf9eda88 10/ test/benchmark-pound.c : fix for pound benchmark - http://bit.ly/odFFBl
[22:34] lauratika has joined the channel
[22:34] lauratika: sorry got disconected
[22:35] bnoordhuis: lauratika: that error message is harmless, you've built node
[22:35] lauratika: yes!
[22:35] lauratika: thanx nopw its working
[22:35] lauratika: great
[22:35] skunkape has joined the channel
[22:36] robertfw has joined the channel
[22:37] micheil has joined the channel
[22:39] Destos has joined the channel
[22:39] __tosh has joined the channel
[22:39] bksf has joined the channel
[22:40] lauratika has left the channel
[22:42] Swizec has joined the channel
[22:42] pandeiro has joined the channel
[22:43] TomY has joined the channel
[22:44] halfhalo-work has joined the channel
[22:44] hasta84 has joined the channel
[22:44] hasta84: Good evening!
[22:45] hasta84: Can anyone tell me how child processes can share a socket?
[22:45] devongovett has joined the channel
[22:45] creationix has joined the channel
[22:46] cjm has joined the channel
[22:46] TooTallNate has joined the channel
[22:47] TheJH: hasta84, could you just relay the data through the process that owns the socket?
[22:48] abraxas has joined the channel
[22:48] Metal3d has joined the channel
[22:49] hasta84: TheJH: haven't tried sending a buffer with the messaging in a fork() process, but it could work
[22:49] hasta84: that
[22:49] hasta84: that was my first thought
[22:49] hasta84: it' some more work
[22:50] bnoordhuis: hasta84: what do you mean with 'share a socket'?
[22:51] lauratika has joined the channel
[22:52] hasta84: bnoordhuis: like listen on the same port and share incoming data, or spread the incoming packets over the child processes
[22:52] AvianFlu: no two processes can listen on the same port, I don't think - you'd have to forward the data, so to speak
[22:53] chapel: they can listen to different interfaces though, so if the machine has different IPs
[22:53] lauratika: i get this error when trying to run install npm any ideas? http://pastebin.de/18171
[22:54] TheJH: lauratika, what are you trying to do?
[22:54] bnoordhuis: actually you can have several processes bind to the same port with setsockopt(SO_REUSEPORT)
[22:55] bnoordhuis: but that's almost never what you want
[22:55] criswell has joined the channel
[22:55] hasta84: mhh.. yeah, I am thinking about the "relay through a main process" option
[22:55] lauratika: im trying to update node which i did succsesfully then trying to run npm inside locker, which is the thing im trying to make it work...locker project
[22:55] bnoordhuis: hasta84: what protocol are you dealing with? http?
[22:56] puffpio has joined the channel
[22:56] hasta84: bnoordhuis: rtmfp
[22:56] tauren has joined the channel
[22:56] TheJH: lauratika, I am pretty sure that you're running npm install in your home directory
[22:56] bnoordhuis: hasta84: you can pass file descriptors (i.e. sockets) to child processes
[22:56] lauratika: ok, is that supose to be this way?=
[22:57] hasta84: bnoordhuis: eh, how do I do that?
[22:57] TheJH: lauratika, where is the locker project on your disk?
[22:57] bnoordhuis: hasta84: look at the SendMsg methods in src/node_net.cc
[22:57] baoist has joined the channel
[22:58] lauratika: home/laurak/lockerproject
[22:58] sctb has joined the channel
[22:58] TheJH: lauratika, go into that folder. is there a package.json? if so, run "npm install" there.
[22:58] gazumps has joined the channel
[22:58] bnoordhuis: hasta84: in short: process.binding('net').sendMsg(child_fd, buf, 0, 1, fd) where buf is a single-byte buffer
[22:59] bnoordhuis: hasta84: you need to send some data to send the fd, unix quirk
[22:59] bnoordhuis: hasta84: or just send data over the channel you get with child_process.fork()
[23:00] hasta84: bnoordhuis: sendMsg looks interesting
[23:01] cjm has left the channel
[23:01] Sorella has joined the channel
[23:01] sechrist has joined the channel
[23:01] hasta84: bnoordhuis: I just tried sending a buffer over a child channel...
[23:01] hasta84: get some weird stuff
[23:02] lauratika has left the channel
[23:02] lauratika has joined the channel
[23:03] hippich has joined the channel
[23:03] lauratika: ok, try that and got this npm WARN prefer global npm@1.0.23 should be installed with -g
[23:03] lauratika: npm@1.0.23 ./node_modules/npm 
[23:03] isaacs: lauratika: install it with the curl command
[23:03] isaacs: lauratika: oh, wait, you're using a program that lists npm as a dependency?
[23:03] isaacs: lauratika: if so, that's fine
[23:03] dreamdust has joined the channel
[23:03] TheJH: isaacs, seems that way
[23:04] isaacs: lauratika: you can safely ignore that warning.  (also, i should really suppress it in that situation, anyone feel like posting an issue?)
[23:04] ph^ has joined the channel
[23:05] hidinginabunker has joined the channel
[23:08] hasta84: bnoordhuis: it seems like buffers can be passed easily
[23:08] bnoordhuis: bnoordhuis: yes, it's way easier to use than fd passing
[23:08] secoif has joined the channel
[23:08] bnoordhuis: portable too, fd passing only works on unices
[23:09] hasta84: bnoordhuis: yes I read posix only, but I don't mind ;)
[23:09] lauratika: isaacs is that ok to ignore warning?
[23:09] lauratika: bit confusing for some people perhaps
[23:09] dreamdust has joined the channel
[23:10] technoweenie has joined the channel
[23:11] mahalie has joined the channel
[23:12] hasta84: bnoordhuis: so if I have a main process which spreads the data from a single socket over child processes, it also has to get data back to send it... won't that become a bottleneck?
[23:12] mahalie: having npm troubles, installs ok but 'npm install x' just hangs. can anyone help?
[23:13] hlindset has joined the channel
[23:13] isaacs: mahalie: use node stable.
[23:13] hlindset has joined the channel
[23:13] isaacs: lauratika: yeah
[23:13] bnoordhuis: hasta84: that's a question without a yes or no answer
[23:13] bnoordhuis: maybe, possibly
[23:13] bnoordhuis: benchmark it!
[23:14] hasta84: bnoordhuis: yes a benchmark would be interesting, I will do that... still have some EC2 credits
[23:15] bnoordhuis: hasta84: node uses unix sockets for process-to-process communication
[23:15] bnoordhuis: at least on linux those are pretty fast
[23:16] DTrejo_ has joined the channel
[23:16] lauratika has left the channel
[23:16] hasta84: bnoordhuis: currently that's the only thing that would matter to me
[23:16] bnoordhuis: hasta84: the libuv pipe benchmark moves 20 gbit/s on my laptop
[23:17] balupton has joined the channel
[23:17] hasta84: bnoordhuis:  that you can work with :)
[23:17] eee_c1 has joined the channel
[23:18] CIA-65: node: 03Ryan Dahl 07master * r587f6c3 10/ test/simple/test-child-process-exec-cwd.js : Fix test-child-process-exec-cwd. - http://bit.ly/o16VIs
[23:18] ditesh|cassini has joined the channel
[23:18] jbrokc has joined the channel
[23:19] BillyBreen has joined the channel
[23:20] gmonnerat has joined the channel
[23:20] gmonnerat has left the channel
[23:21] nerdfiles1 has joined the channel
[23:22] nerdfiles1 has left the channel
[23:22] fairwinds has joined the channel
[23:23] ericmuyser has joined the channel
[23:23] figital has joined the channel
[23:24] mahalie: isaacs, git v0.4 branch?
[23:25] isaacs: mahalie: sure.
[23:25] hasta84: bnoordhuis: while thinking about the concept ther pop up maaany issues and details one has to take care of
[23:25] isaacs: mahalie: or you can download, or use nave or n or something
[23:26] Nuck has joined the channel
[23:26] hasta84: bnoordhuis: like, which child gets the next packet... or... the main process has to buffer the packets if a child process fails before it completes processing...
[23:27] bnoordhuis: hasta84: yep - the node way is to handle it in a single process
[23:27] bnoordhuis: for now anyway
[23:27] Determinist has joined the channel
[23:28] Determinist: AFNOSUPPORT, Address family not supported by protocol <--- help?
[23:28] hasta84: bnoordhuis: sooner or later you have to scale somehow, and having one process won't do... so you go on more machines, but then you run into other problems and at one point you have to do both multicore and multi machine scaling
[23:28] kmiyashiro has joined the channel
[23:28] Determinist: EAFNOSUPPORT, Address family not supported by protocol
[23:29] micheil: Determinist: what address are you using?
[23:29] Determinist: micheil: what do you mean?
[23:29] gerard0` has joined the channel
[23:29] micheil: well, when you do a listen() or similar call, what address are you using?
[23:30] micheil: you'd have to give us more information than the error message.
[23:30] Determinist: micheil: sure, sec
[23:30] Determinist: micheil: https://gist.github.com/aa16925b6f0a5a1522c2
[23:31] CIA-65: node: 03Ryan Dahl 07master * rdf22ccb 10/ (298 files in 23 dirs): Merge branch 'gyp' - https://github.com/joyent/node/commit/df22ccb0de058bbd3d72c14ba4d89d917ad298e0
[23:31] Determinist: micheil: that's all, btw. a really cryptic error with a really short trace
[23:31] micheil: Determinist: and what's the script that's calling it?
[23:31] xerox: is there a node.js api to encode a string in base64
[23:32] Determinist: micheil: it's an entire application with multiple files and the stack trace doesn't reveal anything meaningful
[23:32] TheJH: Determinist, you could try my node patch that adds more information to the stacktrace
[23:32] Determinist: xerox: (new Buffer('foo')).toString('base64')
[23:32] Determinist: TheJH: link?
[23:32] TheJH: Determinist, here's a description: http://groups.google.com/group/nodejs/browse_thread/thread/81aad71844e1f112/5f3868043aa83e7a?lnk=gst&q=stack+solution#5f3868043aa83e7a
[23:32] micheil: Determinist: okay, what sort of application?
[23:33] xerox: actually thinking about it, I wonder if there is a http://en.wikipedia.org/wiki/Basic_access_authentication implementation right there to feed the data to instead of making the header by hand hmm
[23:33] brianseeders has joined the channel
[23:33] micheil: essentially you've asked node.js to listen on an address which it can't support for some reason
[23:33] Determinist: micheil: express app. crashes randomly or goes unresponsive and the only indication of a problem is this cryptic error
[23:33] brianseeders has joined the channel
[23:33] xerox: solved, nevermind.
[23:34] Determinist: TheJH: will take a look in a min, thanks
[23:34] micheil: you'd have to give more then that to be able to get a meaningful answer.
[23:34] Swizec has joined the channel
[23:34] wookiehangover has joined the channel
[23:34] TheJH: Determinist, downside is that you'll have to recompile node and that it gets muuuch slower. really much. not usable in production, I think
[23:35] TheJH: Determinist, but in development, it could help
[23:35] micheil: TheJH: it's more then likely something to do with a call to net.Stream / net.Socket or net.Server
[23:35] Determinist: micheil: what info do you need?
[23:36] micheil: probably any ".listen(" calls in your code.
[23:36] Determinist: micheil: sure, sec
[23:38] Determinist: micheil: got exactly 4 listen() calls originating from my code. not including node_modules/
[23:38] micheil: okay, so, can you give me each one of them?
[23:38] Determinist: micheil: the entire thing?
[23:38] micheil: yeah, the entire call to listen()
[23:38] jarek has joined the channel
[23:38] _3pollard has joined the channel
[23:38] micheil: so path / port / fd / address
[23:40] Determinist: micheil: always listening on hostnames, not FDs, ports are 8080-8082 and 3000, addresses are valid hostnames
[23:40] micheil: are you sure?
[23:40] WhyNo has joined the channel
[23:40] hlindset has joined the channel
[23:40] hlindset has joined the channel
[23:40] Determinist: micheil: this happens after 2 days of the server running in production like a swiss watch and for no apparent reason, i get that error and it goes unresponsive and sometimes even crashes.
[23:40] Determinist: micheil: i'm sure sir
[23:41] micheil: are you doing any http.requests or anything like that?
[23:41] Determinist: micheil: outgoing?
[23:41] micheil: yeah
[23:41] Determinist: micheil: sure
[23:42] micheil: as in making http requests to third party services?
[23:42] pifantastic has joined the channel
[23:42] Determinist: micheil: yes. would seem odd if that's the problem tho. the trace shows DNS.js. this couldn't possibly be a DNS issue since only 2 seconds before such an outgoing request works like a charm
[23:43] micheil: I'm just trying to narrow down the possibilities.
[23:43] WhyNo: Hello, I am looking for a pattern, strategy to use, when make function calls inside a loop, and inside the function is a bunch of async requets. Well, I want to know when all functions have been called. See example: http://pastie.org/2342089
[23:43] micheil: debugging with no / little information from logs doesn't generally work.
[23:43] TheJH: Determinist, you could try my node patch if it doesn't push your server against its CPU/RAM limits
[23:43] micheil: WhyNo: try the Step module on npm
[23:43] TheJH: it's not exactly heavily optimized yet
[23:44] Determinist: TheJH: planning on doing that, but that's going to have some latency since i can't compile stuff on that machine and the admin is on the other side of the world.
[23:44] konobi: Determinist: are the valid hostnames valid due to DNS entries, or entries in /etc/hosts ?
[23:45] Determinist: konobi: dns entries
[23:45] TheJH: Determinist, hmm, cool, I'd really like to see someone besides me use it :)
[23:45] konobi: it might be a resolver failure
[23:45] Determinist: konobi: any idea on how to be sure if that's the case?
[23:46] jtsnow has joined the channel
[23:46] Nuck: ACTION yawns a good afternoon
[23:46] konobi: Determinist: trying using the IP directly instead for a couple of days =0)
[23:46] micheil: konobi: from what I can tell it's something relating to a dns resolve failure, or something making a network related call, but I've got no other information.
[23:46] Determinist: konobi: aside from that? :P
[23:47] WhyNo: @micheil So, could you make post an example of Step from my example use case
[23:47] Determinist: micheil: that makes two of us, dude.
[23:47] markdaws: is it possible to set the node debug port to something other than 5858 with the --debug option? Thanks. 
[23:47] micheil: WhyNo: sorry, not at the moment
[23:47] rmustacc: A shot in the dark might suggest that you're trying to do something ala use ipv6 when there is no support for it.
[23:47] micheil: rmustacc: my initial thoughts were of similar.
[23:47] tuhoojabotti: Nuck: Good night.
[23:47] Determinist: shit, gonna miss my train. be back in a bit, guys.
[23:48] Determinist: i hate NY, btw :P
[23:48] criswell has joined the channel
[23:48] konobi: rmustacc: so getting an AAAA record instead of an A record perhaps?
[23:48] Lukeas14 has joined the channel
[23:50] bbrandon has joined the channel
[23:50] rmustacc: konobi: More like the system is confused and wants to contact a v6 resolver when you don't have support for v6.
[23:51] konobi: c-ares bypasses the system resolver though... or did ryan make the change to fall back to libresolv?
[23:53] dguttman has joined the channel
[23:53] ryanfitz has joined the channel
[23:54] xandrews has joined the channel
[23:55] davidbanham has joined the channel
[23:58] grotto101 has joined the channel
[23:58] deedubs has joined the channel
[23:58] CIA-65: libuv: 03Ben Noordhuis 07master * rcee3cc6 10/ test/benchmark-pound.c : bench: use high-res timer in pound benchmark - https://github.com/joyent/libuv/commit/cee3cc6940e8312284b33ead90dbf661d132b5ff
