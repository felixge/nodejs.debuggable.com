[00:02] ajpiano has joined the channel
[00:03] aconbere: second question of the evening :) anyone tried using zombie.js to load up a JS heavy page?
[00:03] nym_ has joined the channel
[00:03] aconbere: I assume the issues will be similar to those with jsdom
[00:03] aconbere: but I haven't dug that deep
[00:03] aconbere: (I'm having issues with loading jQuery)
[00:03] nym: for some reason i can't google this question and get a straight answer
[00:04] nym: is it JSON.parse(someJsonString) ?
[00:04] Slartan has joined the channel
[00:04] ryah: nym: yes
[00:04] nym: thanks ryah 
[00:04] noahcampbell has joined the channel
[00:05] Tprice has joined the channel
[00:08] xSmurf: fuuuuuuck
[00:08] xSmurf: this is not my day :(
[00:08] xSmurf: some server went awol because someone hit "shutdown -r now" on the wrong box... twice!
[00:08] xSmurf: and bunch of data was lost :'(
[00:09] _sri has joined the channel
[00:11] wereHamster has joined the channel
[00:12] tiareth has joined the channel
[00:12] skohorn has joined the channel
[00:14] piscisaureus: ryah: isaacs: should path.resolve preserve or strip a trailing slash?
[00:14] isaacs: piscisaureus: i vote strip
[00:15] derferman has joined the channel
[00:16] stepheneb has joined the channel
[00:17] siong1987_ has joined the channel
[00:18] zhesto has joined the channel
[00:18] c4milo has joined the channel
[00:19] bingomanatee_: it is an interesting bit of semantic information. An ending slash defining a directory makes it distinct from a file. 
[00:19] mgc has joined the channel
[00:19] justin_ has joined the channel
[00:19] derferman has joined the channel
[00:20] ecto has joined the channel
[00:20] Alex3000 has joined the channel
[00:21] wdperson has joined the channel
[00:21] joeshaw___ has joined the channel
[00:22] ryah: piscisaureus: i don't care about path - as long as it works :)
[00:22] piscisaureus: hah. ok. strip
[00:22] svnlto has joined the channel
[00:23] squeek: TAKE IT OFF! TAKE IT OFF! AHH! PUT IT BACK! PUT IT BACK!
[00:23] wdperson has joined the channel
[00:24] nejucomo has joined the channel
[00:26] derferman has joined the channel
[00:29] twoism has joined the channel
[00:30] zhware has joined the channel
[00:31] aconbere has joined the channel
[00:32] sprout has joined the channel
[00:33] romainhuet has joined the channel
[00:40] jakehow has joined the channel
[00:42] rwaldron__ has joined the channel
[00:48] sudoer has joined the channel
[00:49] Tprice has joined the channel
[00:50] zentoooo has joined the channel
[00:50] MattJ has joined the channel
[00:50] zemanel_ has joined the channel
[00:51] gabeh has joined the channel
[00:51] richcollins has joined the channel
[00:53] broofa has joined the channel
[00:55] Yuffster has joined the channel
[00:58] KrisJordan has joined the channel
[01:04] skm has joined the channel
[01:05] kriskowal: if i had a nickel
[01:05] gkatsev: you'd be $0.05 richer
[01:05] ecto has joined the channel
[01:05] skm has joined the channel
[01:06] ecto: anybody familiar with ec2 here?
[01:06] ecto: $ node server.js
[01:06] ecto: node.js:63
[01:06] ecto:     throw e;
[01:06] ecto:     ^
[01:06] ecto: Error: EACCES, Permission denied
[01:06] ecto:     at Server.<anonymous> (net:1244:14)
[01:06] ecto:     at Server.<anonymous> (/usr/local/lib/node/.npm/connect/0.5.3/package/lib/connect/index.js:154:32)
[01:06] ecto:     at Server.listen (/usr/local/lib/node/.npm/express/1.0.1/package/lib/express/server.js:101:35)
[01:06] ecto:     at Object.<anonymous> (/home/ec2-user/jail/server.js:106:5)
[01:06] ecto:     at Module._compile (node.js:462:23)
[01:06] ecto:     at Module._loadScriptSync (node.js:469:10)
[01:06] ecto:     at Module.loadSync (node.js:338:12)
[01:06] ecto:     at Object.runMain (node.js:522:24)
[01:06] ecto:     at Array.<anonymous> (node.js:756:12)
[01:07] davidc_ has joined the channel
[01:07] davidc_ has joined the channel
[01:08] squeek: whoa. use a pastebin next time.
[01:09] ecto: sorry man, i'm an IRC noob
[01:09] bmizeran_ has joined the channel
[01:09] softdrink has joined the channel
[01:10] ecto: I think it's just not letting me bind to 80, but I can't figure out why
[01:11] eggsby: because 80 is a reserved port probably
[01:11] gkatsev: you need to be root to use port 80
[01:11] eggsby: chances are you need to bind to some other port than proxy to 80
[01:11] eggsby: then*
[01:11] gkatsev: proxy is safesst
[01:11] HAITI has joined the channel
[01:12] gkatsev: if you are just testing, you can either run node as root, or just use a port 8080 or something without proxy.
[01:12] squeek: anything about > 1024 should be kosher.
[01:12] ecto: i get sudo: node: command not found
[01:13] bingomanatee_: Thanks a lot. NOW I CAN'T WRITE PHP GOOD NO MORE'S!
[01:13] ecto: i should probably throw nginx up then?
[01:14] stepheneb has joined the channel
[01:14] eggsby: yeah proxy is the correct way to do it
[01:14] eggsby: if you want to sudo and you're getting that error try to run node from the abs path instead of expecting it to be in your $PATH
[01:17] ecto: thanks guys
[01:17] ecto: sorry for the paste
[01:19] squeek: s'cool. mistakes first time round are okay if you learn.
[01:20] arpegius has joined the channel
[01:23] derferman has joined the channel
[01:24] Tprice has joined the channel
[01:24] derferman has joined the channel
[01:25] KrisJordan has joined the channel
[01:27] astoon has joined the channel
[01:28] mjr_ has joined the channel
[01:29] murz has joined the channel
[01:30] davidascher has joined the channel
[01:33] echosystm: hey SubStack are you around?
[01:34] SubStack: present
[01:35] echosystm: say A sends object { a: 0, b: function() { self.a++ } } to B
[01:35] echosystm: then B goes obj.b();
[01:35] echosystm: B still sees A as being -
[01:35] echosystm: 0
[01:35] noahcampbell_ has joined the channel
[01:35] echosystm: so why are properties sent at all?
[01:36] SubStack: echosystm: properties don't update, yes
[01:37] gkatsev: self in js?
[01:37] echosystm: gkatsev: self as in var self = { a: 0, b: function() { self.a++; }};
[01:38] gkatsev: ok
[01:38] echosystm: so, given that properties don't update, why are they sent SubStack ?
[01:38] echosystm: wouldnt it be better to strip them out ?
[01:38] SubStack: no
[01:39] daniellindsley has joined the channel
[01:39] SubStack: echosystm: when dnode does its initial methods dance it's actually just calling the remote's special methods function that takes an object as its first parameter with methods embedded
[01:40] jimt_ has joined the channel
[01:40] SubStack: so there's no real difference between calling a remote function remote.f({ a : 1, b : 2 }) and populating remote in the first plce
[01:40] creationix has joined the channel
[01:40] SubStack: *place
[01:41] SubStack: anyhow I would just have a be a var scoped to a constructor function
[01:41] SubStack: and write a getter if you want its value
[01:41] SubStack: (function (remote, conn) { var a = 0; this.a = function (cb) { cb(a) }; this.b = function () { a++ } })
[01:42] alek_br has joined the channel
[01:42] SubStack: or `var a` outside the constructor scope if you want it to be shared across sessions
[01:42] echosystm: hm
[01:43] omni5cience has left the channel
[01:43] murz: are there any public (not in private beta) cloud platforms for Node.js?
[01:43] echosystm: this requires you to write your objects a specific way though
[01:43] tiareth has joined the channel
[01:43] SubStack: echosystm: well you already have to use continuation-passing style
[01:44] ecto: i have my reverse proxy up now, but express is looking in /etc/nginx for my views. can i change the path in my conf file or should I just throw my app in the nginx folder?
[01:45] echosystm: i meant in reference to hiding A by closure
[01:45] SubStack: echosystm: if you want to be notified on the remote end when an attribute's value changes I think it's better to have that be explicitly exposed by passing messages
[01:45] haxorjim has joined the channel
[01:45] SubStack: echosystm: well yes, that is the good way of hiding state
[01:46] SoftwareMaven has joined the channel
[01:46] echosystm: hm
[01:46] echosystm: ok
[01:47] echosystm: makes sense, thanks
[01:47] ecto: nvm, i was just starting the process from the nginx folder haha
[01:48] Me1000 has joined the channel
[01:48] banjiewen_ has joined the channel
[01:48] piscisaureus: isaacs: ryah: in the current implementation require('path').join('a/', 'b/', '../../a/../') gives /
[01:48] piscisaureus: wrong! should be ./ (or just . if I were in charge)
[01:49] MattDiPasquale has joined the channel
[01:49] xSmurf: ok c'mon wtf!!! 010.000.000.174.07777-010.002.000.169.54802: ....(e2d6813d4eb7d150e06e4d2854bdd84409399883..  <Buffer 05 00 00 03 28 00 02 00 06 08 01 03 00 04 00 00 07 00 01 05 00 00 00 06 00 04 00 02 08 05 04 00 00 00 08 04 04 00 09 03 09 09 08 08 03 00 00>
[01:50] xSmurf: really, the alpha characters are just missing from the data!!
[01:50] sprout has joined the channel
[01:50] xSmurf: they aren't eaten by tcp gnomes or something I'm pretty sure
[01:50] RockShox: om nom nom
[01:50] elijah-mbp has joined the channel
[01:50] zemanel_ has joined the channel
[01:51] xSmurf: wth can be going on here
[01:52] jimt has joined the channel
[01:52] tjholowaychuk has joined the channel
[01:52] isaacs has joined the channel
[01:53] x_or has joined the channel
[01:54] x_or: Anyone here familiar with writing proxies in node?  I am trying to use http-proxy in front of a rails application, and things work fine with a GET request, but POST requests hang forever.  I am not sure if there is something happening in node or in rails.  I tried with a sinatra application and posts worked fine, and the http-proxy code is pretty small.  I'm wondering if rails is doing something weird and not hanging up the connection.
[01:56] nook has joined the channel
[01:56] ecto: i just set up my first nginx reverse proxy, i could help you with that :)
[01:57] x_or: ecto:  Thanks, fortunately I need to use node and not nginx.  Not that I dislike nginx, but I am doing some custom things with the headers in node and implementing authentication there.
[01:59] cafesofie has joined the channel
[01:59] mikew3c: isaacs: you around? I wanted to let you know I made some updates to http://sideshowbarker.github.com/es5-spec/
[01:59] isaacs: mikew3c: cool :)
[02:00] echosystm: whats a good IDE for doing node.js work?
[02:00] ecto: echosystm: I think Kod just came out
[02:00] echosystm: Kod ?
[02:01] echosystm: oh, found it
[02:02] RockShox: komodo?
[02:02] echosystm: http://kodapp.com/
[02:02] mikew3c: isaacs: changes include: all of the errata are now incorporated into the main body of the document (instead of only being in the annotations) , and incorporated all the additional changes that were made for edition 5.1, and added annos for all the stuff from http://wiki.whatwg.org/wiki/Web_ECMAScript (which documents additions/changes for ecmascript-as-implemented-in-browsers)
[02:03] echosystm: does it have like... autocomplete?
[02:03] echosystm: thats the main thing i want
[02:03] echosystm: otherwise i'll just stick with vim
[02:03] echosystm: :P
[02:04] xSmurf: seriously this is not funny this is somekind of joke or something, how can the data differ from the data on the interface and the data in the callback of net.createConnection.onData??
[02:05] mikew3c: echosystm: there's vim plugin called eclim that enables vim to integrate with Eclipse, including with the Eclipse "WDE" version that has some built-in features specific to editing javascript
[02:06] echosystm: hm
[02:06] echosystm: i'll look into it, thanks
[02:09] tfe1 has joined the channel
[02:10] dgathright has joined the channel
[02:12] Nevtus has joined the channel
[02:12] Nevtus has joined the channel
[02:14] googol has joined the channel
[02:17] ossareh has joined the channel
[02:18] beta_ has joined the channel
[02:20] beta_ has joined the channel
[02:26] eric_f has joined the channel
[02:27] banjiewen has joined the channel
[02:29] c4milo: tjholowaychuk: ! 
[02:29] tjholowaychuk: !
[02:29] c4milo: tjholowaychuk: what's new in 2.x for express?
[02:29] xSmurf: is fs.mkdir recursive (like the -p argument)?
[02:30] tjholowaychuk: c4milo: nothing massive yet. res.render('foo', { locals: { foo: 'bar' }}) is now just res.render('foo', { foo: 'bar' })
[02:30] JusticeFries has joined the channel
[02:30] tjholowaychuk: partial resolution is a bit different
[02:30] tjholowaychuk: refactored view system
[02:30] tjholowaychuk: nothing huge
[02:32] c4milo: xSmurf: try https://github.com/mozilla/skywriter/blob/master/archive/dryice/lib/util.js#L45
[02:32] c4milo: tjholowaychuk: cool 
[02:32] dthompson has joined the channel
[02:33] Ond has joined the channel
[02:33] xSmurf: c4milo: thanks though if it's not recursive I'll just make a child process call to mkdir -p
[02:34] AAA_awright: x_or: Nginx can do custom things with headers, and authentication, plus load balancing and caching and other stuff. No need to re-invent the wheel.
[02:34] c4milo: xSmurf: of course it is recursive
[02:34] AAA_awright: Plus I would trust it's faster.
[02:35] c4milo: xSmurf: sorry it isn't recursive it is even better (non recursive) 
[02:35] xSmurf: huh?
[02:35] c4milo: xSmurf: try that out 
[02:35] xSmurf: I meant if the internal function isn't recursive I'm not gonna bother using some lib
[02:35] markstory has joined the channel
[02:35] c4milo: xSmurf: it split the path and create all the directories 
[02:35] c4milo: splits*
[02:35] xSmurf: yeah i saw
[02:38] c4milo: xSmurf: I don't understand , why do you need it recursive? this function performs better
[02:38] xSmurf: how does it perform better than mkdir -p?
[02:39] xSmurf: although, it's synchronous which actually is better in this case
[02:39] c4milo: xSmurf: do you know what mkdir -p does behind scenes?
[02:39] c4milo: hehe
[02:40] c4milo: it has a lot of things no just creating the path 
[02:40] c4milo: not
[02:40] SubStack: https://gist.github.com/707661 
[02:40] SubStack: mkdir -p!
[02:40] xSmurf: that mkdirSync() doesn't do?
[02:40] x_or: AAA_awright:  Thanks, but I don't know of a module for nginx that does authentication using RPX, and I have that already.
[02:40] SubStack: plus, it's async
[02:41] SubStack: hmmm I'll release a npm module right now, how about
[02:41] SubStack: readysetgo
[02:42] MattDiPasquale has joined the channel
[02:45] dave has joined the channel
[02:45] skyl has joined the channel
[02:46] davejoe has joined the channel
[02:46] skyl: anyone know what the status of bespin/skywriter is?
[02:46] davejoe has joined the channel
[02:47] davejoe: Could somebody explain what `app.use(app.router);` does in express?
[02:47] cferris has joined the channel
[02:47] whyme has joined the channel
[02:48] blueadept has joined the channel
[02:49] montylounge has joined the channel
[02:51] nook has joined the channel
[02:53] Tprice has joined the channel
[02:54] SubStack: pow done
[02:55] matt_c has joined the channel
[02:55] SubStack: xSmurf: you can now `npm install mkdirp`
[02:55] SubStack: also this https://github.com/substack/node-mkdirp 
[02:57] pkrukit has joined the channel
[02:57] pkrukit: \o/
[02:57] robotarmy has joined the channel
[02:57] tmzt: any reason node wwont run on armel? Im putting together a nodejs/mxmlc environment for my android phone :)
[02:58] lakin has joined the channel
[02:58] SubStack: pkrukit: I just released another module to github while you were gone just now
[02:59] pkrukit: SubStack: hahahaa that is so awesome!
[02:59] pkrukit: SubStack: what does it do?
[02:59] pkrukit: is it base64 ;)
[02:59] pkrukit: i can fix that now too
[03:00] SubStack: pkrukit: nah, mkdir -p thing
[03:00] SubStack: I had a gist sitting around so I made it into a proper module
[03:01] pkrukit: ah that one
[03:01] pkrukit: yep know that one.
[03:01] pkrukit: saw the coe in github ages ago!
[03:01] pkrukit: sorry
[03:01] pkrukit: our code base
[03:01] pkrukit: somewhere
[03:01] pkrukit: not sure where it was
[03:06] CIA-121: node: 03Ryan Dahl 07master * r3770462 10/ src/node.cc : Fix process.platform - http://bit.ly/hVQyVA
[03:10] chrischris has joined the channel
[03:10] eric_f has joined the channel
[03:12] zentoooo has joined the channel
[03:12] bitdrift has joined the channel
[03:14] booths has joined the channel
[03:14] booths: NPM doesn't seem to want to install properly for me... getting this http://pastebin.com/HJMrRTFz
[03:14] zentoooo_ has joined the channel
[03:15] bingomanatee_: booths: whats your install environment? Unix/Linux? WIndows?
[03:15] bingomanatee_: MacOSX?
[03:15] bingomanatee_: Chumby?
[03:15] bingomanatee_: "Right Here, Baby!"
[03:16] booths: Ubuntu 10.04 LTS
[03:16] benburkert has joined the channel
[03:17] booths: It's a fresh install, all I've done is install git-core, build-essential, libssl-dev and node
[03:17] bingomanatee_: I am AFK for a sec - but poss. someone else can help
[03:18] andrewfff has joined the channel
[03:19] booths: Anyone?
[03:19] mikeal1 has joined the channel
[03:19] jsninja has joined the channel
[03:20] desaiu: booths: I would grab the stable version off of nodejs.org I had problems installing via git on my Ubuntu as well
[03:20] booths: Hmm, alright.
[03:20] jsninja has left the channel
[03:24] jchris has joined the channel
[03:25] mikeal1: ryah: I need a proposal for a talk from you for nodeconf, you have a guaranteed slot but I still need the talk description
[03:25] davidascher has joined the channel
[03:27] Tim_Smart has joined the channel
[03:30] andrewfff has joined the channel
[03:30] stepheneb has joined the channel
[03:30] Tim_Smart has joined the channel
[03:31] AAA_awright: No fair
[03:33] m14t_ has joined the channel
[03:35] zorzar has joined the channel
[03:39] hobodave has joined the channel
[03:41] nejucomo has joined the channel
[03:41] saikat has joined the channel
[03:42] daniellindsley has joined the channel
[03:42] Aria has joined the channel
[03:44] muk_mb has joined the channel
[03:48] funkatron has joined the channel
[03:53] coj has joined the channel
[03:55] skm has joined the channel
[03:57] skm has joined the channel
[03:58] yozlet has joined the channel
[04:03] bartmax has joined the channel
[04:03] bartmax has joined the channel
[04:04] paulrobinson has joined the channel
[04:07] Tprice has joined the channel
[04:08] losing has joined the channel
[04:08] ryah: ok
[04:09] MikhX has joined the channel
[04:10] alek_br has joined the channel
[04:11] ryah: mikeal1: should i rather talk at jsconf or nodeconf?
[04:11] mikeal1: both
[04:11] mikeal1: :)
[04:11] mikeal1: do a talk for people who need to be convinced to do more node at JSConf
[04:12] mikeal1: then do a talk for people who clearly already love node at NodeConf :)
[04:12] mikeal1: a Future of Node.js talk would be great at NodeConf
[04:13] naturalethic has joined the channel
[04:13] ryah: two talks :<
[04:13] nejucomo: I see crypto has methods for signing/verifying and encrypting/decrypting, but are there none for generating key pairs or asymmetric confidentiality?
[04:15] mikew3c_ has joined the channel
[04:17] mikeal1: only a half hour :)
[04:17] jpld has joined the channel
[04:18] bingomanatee_: Hey NodeConf is at Portland!
[04:18] bingomanatee_: Im from portland. Anyone who wants a tour let me know at Nodeconf. 
[04:19] Aria: Man, wish I could get there.
[04:19] bingomanatee_: Really?
[04:20] Aria: Yeah. I've been meaning to get to PDX for a while anyway. (Bunch of friends there..)
[04:20] bingomanatee_: why can't you make it?
[04:20] Aria: Oh, time and money. 
[04:20] Aria: And just opportunity cost.
[04:20] bingomanatee_: If you do the deal I talked about with mail I'll pay the tickets. 
[04:20] mikeal1: conference is 100% opportunity :)
[04:21] Aria: Hehe. Well then ;-)
[04:21] bingomanatee_: Seriously. 
[04:21] bingomanatee_: Give me a full mail server with header/body parsing and the tix are on me. 
[04:21] Aria: Hehe.
[04:21] bingomanatee_: Give Cybyl a try and I'll bump you to first class. 
[04:23] bingomanatee_: You should consider putting Seattle on your itinerary though - its got a great nightlife. 
[04:23] bingomanatee_: And a considerable tech scene. 
[04:23] bingomanatee_: You could even visit Microsoft :D
[04:24] devdrinker has joined the channel
[04:24] bingomanatee_: You can see the hills they shot to make their wallpaper. 
[04:25] Aria: Hehe. Seattle's neat, though some day I need to go there when I'm other than a starving teenager on a bicycle.
[04:25] bruse: is the seattle tech scene actually in seattle or is it more of a sf->palo alto deal?
[04:25] bingomanatee_: No, actaully, thats the BEST way to see seattle. 
[04:25] bingomanatee_: Its kind of a college town. 
[04:25] Ond: I'm also in the Portland metro area.
[04:25] bingomanatee_: Its adequate - its no SF but its lively. 
[04:25] Ond: Should be good times!
[04:25] amerine has joined the channel
[04:25] bingomanatee_: Hey Ond - see you at nodeconf.
[04:26] Ond: :thumbsup:
[04:26] bartt has joined the channel
[04:26] Aria: Mmm. I just like being able to afford coffee and food.
[04:26] bingomanatee_: Make sure you don't end up at Nosecon. Its much less rewarding. 
[04:26] bingomanatee_: WILSON HICH SCHOOL IN THE HOUUUUUUUUSE!
[04:26] Ond: lol
[04:26] bingomanatee_: TRUST FUNDS N HOME INVASION BOYEEEEE
[04:27] bingomanatee_: <-- really looking forward to "Portlandia" ... "Its where young people go to retire!"
[04:27] Aria: Heh. I so wanna see that.
[04:27] Aria: The promo totally coulda been filmed with my friends.
[04:28] bingomanatee_: Plus - honestly - BEST BEER EVER. 
[04:28] fmeyer has joined the channel
[04:28] bingomanatee_: I almost gave up beer when I left. I mean Guiness is pretty good but the beer there is amazing. 
[04:28] EyePulp has joined the channel
[04:28] Aria: PDX /is/ in competition with Colorado for that one.
[04:28] Aria: It's one reason I stay here.
[04:28] bingomanatee_: You say that now. 
[04:28] Aria: Oh, I say it fully informed.
[04:28] Aria: BC too.
[04:29] bingomanatee_: <-- knows where they keep the GOOD beer. 
[04:29] echosystm: are there any bread and butter datastructure libraries for node?
[04:29] bingomanatee_: The best beer in Oregon never leaves the state. 
[04:29] echosystm: like linked list, array list, etc. etc.
[04:29] bingomanatee_: nope
[04:29] bingomanatee_: All JS core
[04:29] bingomanatee_: AFAIK
[04:29] echosystm: ?
[04:29] echosystm: what do you mean all JS core
[04:29] devdrink_ has joined the channel
[04:30] whyme: echosystm: what's wrong with vanilla JS array?
[04:30] bingomanatee_: I mean : I haven't seen anyone use anything but Arrays and Objects for tactical storage. 
[04:30] bingomanatee_: ^ ^ like this guy. 
[04:30] echosystm: i imagine it would be slow to remove an item from the middle of an array?
[04:30] bingomanatee_: why?
[04:30] echosystm: how are arrays stored in memory?
[04:31] Aria: On modern processors, that varies depending on whether things fit in cache, too.
[04:31] echosystm: if its an actual array in the memory, then you have to iterate to the position, remove the item, push all other elements up one index and then reset the array length
[04:31] whyme: better leave performance concern alone until it hits the fan
[04:31] chrisdickinson: echosystm: if it's a native JS array, they're stored... sort of like pseudo-objects, i do believe.
[04:31] Slartan has left the channel
[04:32] echosystm: ah
[04:32] bingomanatee_: okay - its a little philsophical because as far as I know there are no collection C libraries for JS/Node.
[04:32] devdrin__ has joined the channel
[04:32] derferman has joined the channel
[04:32] echosystm: so v8 doesnt do any weirdness with them?
[04:33] echosystm: i mean, as far as i am aware, v8 compiles objects down to a struct-like thing
[04:33] bingomanatee_: So feel free to write one and prove us wrong but - once you move to Node you really don't concern yourself with those kind of microsavings from my very limited expereince 
[04:33] unomi has joined the channel
[04:33] unomi has joined the channel
[04:33] echosystm: so if you mutate the struct, the whole thing is killed and a new one created
[04:33] echosystm: i imagine that is what happens with an array
[04:33] devdri___ has joined the channel
[04:34] echosystm: in which case, having something like a linked list would give considerable performance gain?
[04:34] chrisdickinson: echosystm: probably not.
[04:34] chrisdickinson: V8 optimizes attribute lookups by placed attributes at a known offset, it seems
[04:35] Aria: V8's pretty clever, most of the time.
[04:35] devdrinker has joined the channel
[04:35] chrisdickinson: removing an object from the middle of an array means that it (and don't quote me on this) would probably just rename all attributes with a name that is a number greater than that offset but less than the array length.
[04:35] chrisdickinson: if you're using splice, yes, it will create a new array, though.
[04:36] echosystm: how else would you remove an element?
[04:36] chrisdickinson: so... generally, i have to second what everyone else is saying. if your dataset isn't absolutely huge, you probably shouldn't worry about the underlying algorithm that the base array system is using.
[04:36] overthemike has joined the channel
[04:36] SubStack: disk is slow, network is slow, cpu is fast
[04:36] SubStack: plan accordingly
[04:36] echosystm: if not using splice, what else would you use?
[04:37] Aria: Also, memory is fast, but cache is still dramatically faster.
[04:37] SubStack: meh
[04:37] chrisdickinson: echosystm: i don't think there is anything else, actually.
[04:37] Aria: So things that fit in it often benefit from inefficient but simple operations.
[04:38] chrisdickinson: that's not to say V8 wouldn't do something clever under the hood, of course.
[04:38] mikeal1 has joined the channel
[04:38] chrisdickinson: (like avoiding copying array elements until they actually require copying.)
[04:38] chrisdickinson: but i don't know that for sure.
[04:39] richcollins has joined the channel
[04:42] temp01 has joined the channel
[04:42] Aria: Yeah.
[04:42] skm has joined the channel
[04:44] devdrink_ has joined the channel
[04:44] eee_c has joined the channel
[04:45] davidascher has joined the channel
[04:50] piscisaureus: v8: /^([a-zA-Z]:|[\\\/](?:[\\\/][^\\\/]+){2})?([\\\/])?(.*)$/.exec('//server/share/hi')
[04:50] v8bot: piscisaureus: ["//server/share/hi", "//server/share", "/", "hi"]
[04:50] jchris has joined the channel
[04:53] davidascher has joined the channel
[04:53] yozlet has joined the channel
[04:53] bingomanatee_: echosystem: Honestly - not trying to be mean but - are you trying to solve an actual problem or prevent ones you think might arise?
[04:54] bingomanatee_: because in my experience with node, you really need to start solving tangible problems and getting used to how things work before projecting future bottlenecks. 
[04:54] Aria: Yeah. You're more likely to run into "buffer to string conversion performance sucks" than "Arrays are slow."
[04:55] mikeal1 has joined the channel
[04:56] piscisaureus: v8: /^([a-zA-Z]:|[\\\/](?:[\\\/][^\\\/]+){2})?([\\\/])?(.*)$/.exec('//server/share')
[04:56] v8bot: piscisaureus: ["//server/share", "//server/share", undefined, ""]
[04:57] overthemike has left the channel
[05:00] temp01 has joined the channel
[05:00] jimt has joined the channel
[05:01] overthemike has joined the channel
[05:02] forzan has joined the channel
[05:05] temp01 has joined the channel
[05:07] piscisaureus: v8: /^([a-zA-Z]:|[\\\/](?:[\\\/][^\\\/]+){2})?([\\\/]|)(.*)$/.exec('//server/share')
[05:07] v8bot: piscisaureus: ["//server/share", "//server/share", "", ""]
[05:08] sechrist has joined the channel
[05:09] mikeal1 has joined the channel
[05:09] temp01 has joined the channel
[05:10] zorzar_ has joined the channel
[05:11] ajpiano has joined the channel
[05:11] jimt has joined the channel
[05:12] smtlaissezfaire has joined the channel
[05:15] bingomanatee_: <-- stores all his data in one big binary blocks.
[05:15] Aria: Doesn't everyone?
[05:15] muk_mb has joined the channel
[05:15] Aria: I mean, ultimately?
[05:15] bingomanatee_: You can emulate linked lists pretty well with regex if you are good. 
[05:16] bingomanatee_: "HEY! I'm not a big binary block. I'm just big boned."
[05:17] arrty has joined the channel
[05:17] JimBastard has joined the channel
[05:18] MikhX has joined the channel
[05:19] temp01 has joined the channel
[05:20] ryah: Math.min - joy
[05:20] shaver: Math.max - think big
[05:20] arrty_ has joined the channel
[05:21] ryah: ACTION is so used to having to #define MIN - nice to have it
[05:22] pkrumins: ryah: i was unable to get async examples on my macbook running for node-png
[05:22] pkrumins: they just kept crashing.
[05:22] sudoer has joined the channel
[05:22] ryah: pkrumins: hm
[05:22] ryah: pkrumins: let me look
[05:22] pkrumins: for 0.3.x
[05:23] pkrumins: i pasted the gdb backtrace
[05:23] pkrumins: yesterday
[05:23] pkrumins: dont have a link right now
[05:26] googol has joined the channel
[05:26] temp01 has joined the channel
[05:26] EGreg_ has joined the channel
[05:28] jimt has joined the channel
[05:32] mikeal1 has joined the channel
[05:33] jimt_ has joined the channel
[05:33] ryah: pkrumins: it seems to work for me
[05:33] ryah: pkrumins: i suspect you've got NODE_PATH problems - or something
[05:37] temp01 has joined the channel
[05:38] Aria: Bash, eh, ryah?
[05:38] ryah: yeah...
[05:38] Aria: Escaped something more exotic?
[05:38] ryah: zsh
[05:39] Aria: Hehe. Good plan, I think.
[05:39] Aria: Much as zsh is neato, it's … neato that kept distracting me from more useful languages.
[05:39] ryah: i was also using the vi keybindings
[05:39] ryah: going with the normal style now
[05:40] ryah: too painful when i shell into other machines
[05:40] Aria: Heh. That's FAR too familiar.
[05:43] temp01 has joined the channel
[05:46] piscisaureus: ryah: isaacs: what about https://github.com/piscisaureus/node/commit/f58723de2c7de88b9dcba13453dd61c71313076f?
[05:48] echosystm: SubStack: you around?
[05:48] ryah: piscisaureus: i'm going to let isaacs review it
[05:48] piscisaureus: ryah: good
[05:48] piscisaureus: hope it's not too heavy
[05:49] ossareh has joined the channel
[05:49] smtlaissezfaire has joined the channel
[05:49] Aria: That looks good!
[05:49] SubStack: echosystm: yep
[05:50] echosystm: i'm a bit confused about something
[05:50] riven` has joined the channel
[05:50] echosystm: A creates an object, B requests that object, B sends the object back to A, B disconnects
[05:51] echosystm: A's reference to the object B sent back is still a remote reference
[05:51] SubStack: that's only for callbacks
[05:51] SubStack: dnode doesn't give a shit about objects
[05:51] echosystm: ?
[05:51] echosystm: what do you mean
[05:52] temp02 has joined the channel
[05:52] SubStack: objects just get copied
[05:52] echosystm: yeah but, what im saying is
[05:52] echosystm: in order for A to do anything with that object it created, but B sent back...
[05:52] SubStack: dnode is basically just some wrappers on top of JSON.parse and JSON.stringify to do bookkeeping for callbacks nested in the data structures
[05:52] echosystm: B obviously still needs to be connected
[05:53] echosystm: at which point it will go A -> B -> A
[05:53] JusticeFries has joined the channel
[05:53] echosystm: do you know what i mean?
[05:53] SubStack: only if the object has functions in it
[05:53] SubStack: functions get wrapped so they turn into RPC calls back to the other side
[05:53] SubStack: that is it
[05:54] echosystm: right
[05:54] echosystm: so, if you want an object to be able to used literally transparently
[05:54] echosystm: it would need to be some kind of proxy?
[05:54] mikeal1 has joined the channel
[05:54] SubStack: whatr
[05:54] SubStack: s/.$//
[05:55] devdrink_ has joined the channel
[05:55] SubStack: echosystm: in practice this stuff really doesn't come up
[05:55] mikeal1: pkrumins: one of you two need to submit a talk on StackVM :)
[05:55] SubStack: I recomment you build it first
[05:55] SubStack: *recommend, bah
[05:55] SubStack: getting sleepy
[05:56] echosystm: hang on, i'll show you my example
[05:56] SubStack: k
[05:56] SubStack: mikeal1: how soon do you need those by?
[05:57] mikeal1: as soon as possible
[05:57] derferman has joined the channel
[05:57] mikeal1: i haven't decided when i'm going to close submissions tho
[05:57] mikeal1: but i'll start announcing talks as I decide they are accepted
[05:57] cafesofie has joined the channel
[05:58] SubStack: k
[05:58] SubStack: well pkrumins will be back in Latvia in April
[05:58] echosystm: http://pastebin.ca/2039283
[05:59] echosystm: ignore the general insanity of it, im just playing around :P
[05:59] mikeal1: are you using 8 space tabs or something?
[05:59] cafesofi_ has joined the channel
[06:00] temp01 has joined the channel
[06:00] echosystm: thts just how it copied out of vim
[06:00] echosystm: hang on
[06:00] devdrin__ has joined the channel
[06:01] RockShox: i clearly dont understand js scoping yet. how can i use an existing db connection in my auth handler. using connect-auth and express
[06:01] echosystm: ok fixed
[06:01] devdri___ has joined the channel
[06:02] echosystm: so, basically
[06:02] SubStack: echosystm: I'm not so sure you want so many getters and setters
[06:02] echosystm: the client requests a map be created, then a node, then it adds the node to the map and quits
[06:02] SubStack: with dnode data-centric interfaces tend to work best
[06:02] echosystm: at which point, the objects held by the server are obviously no longer valid
[06:02] SubStack: since all calls are async and network latency is high
[06:03] echosystm: yeah, im just playing around with it at this stage SubStack 
[06:03] echosystm: this is nothing important
[06:03] SubStack: ah
[06:03] echosystm: so, if i wanted to do something like this
[06:04] echosystm: dnode would either have to know how to unwrap those get/set functions when they come back in
[06:04] devdr____ has joined the channel
[06:04] SubStack: well
[06:04] echosystm: or i would have to send the "objects" as data, rather than actual objects
[06:04] SubStack: instead of doing something like map.getNodes(... node.getId(...) )
[06:05] SubStack: just have each node have an id attribute
[06:05] SubStack: sods this getter nonsense
[06:05] SubStack: ids don't change
[06:06] SubStack: or if nodes are indexed by id, just return an object that maps those ids to the nodes in your callback
[06:06] echosystm: right
[06:07] cnus8n has joined the channel
[06:07] echosystm: hm
[06:10] SubStack: mikeal1: how long are these talks?
[06:10] mikeal1: half hour
[06:11] temp01 has joined the channel
[06:12] SubStack: I could do something about dnode or chainable interfaces or some projects I have the queue like telescreen but I'm not sure where those are going if anywhere
[06:13] mjr_: mikeal1: do you want to hear from me about redis or pcap?
[06:13] mikeal1: yes :)
[06:15] sriley has joined the channel
[06:15] mischief has joined the channel
[06:16] bitdrift has joined the channel
[06:18] SubStack: mikeal1: ok writing something up now
[06:18] temp01 has joined the channel
[06:19] bitdrift: can anyone point me to a good example of how to use connect-auth with express?
[06:19] sechrist: do people use redis with virtual ip swapping for high availability?
[06:19] sechrist: I haven't seen any literature about people doing this
[06:20] sechrist: I've seen some usage of haproxy
[06:20] jchris has joined the channel
[06:20] sechrist: but that doesn't solve HA as much as it does replicating to another redis while you work on one
[06:21] mikeal1: redis is implementing more distributed stuff
[06:21] mjr_: yeah, eventually
[06:21] mjr_: For now, i think people solve it in their client libraries, somehow.
[06:22] SubStack: mikeal1: aha I will illustrate the fuck out of my presentation if accepted
[06:22] SubStack: this could be a lot of fun
[06:22] temp01 has joined the channel
[06:22] sechrist: mjr_: I think I've discussed this with you before
[06:22] mikeal1: they prefix their keys with a server name and in their client map that prefix to a particular host
[06:22] sechrist: doing that certainly possible but pretty annoying
[06:23] sechrist: client-library wise, I mean
[06:23] mikeal1: well....
[06:23] mjr_: I think someone could pretty easily whip up a little layer in node_redis that failed over requests to a second choice.
[06:23] mikeal1: redis' plan for distribution isn't all that different
[06:23] mikeal1: the client is eventually aware of the sharding
[06:23] langworthy has joined the channel
[06:24] sechrist: mjr_: the thing is -- I don't want to modify the C library and the Python library to do the same thing, though
[06:24] augustl has joined the channel
[06:24] sechrist: since I have services that will be using both to talk to redis
[06:24] mjr_: Yeah, that's why nobody does it.  :)
[06:24] sechrist: virtual IPs sounds flawless if you set it up right
[06:24] sechrist: and make sure the arp doesn't mess things up
[06:24] sechrist: I'm not that familiar with layer 2 so I don't know
[06:25] mikeal1: if you can't fit it on one redis server you should just not use redis
[06:25] mjr_: my experience with virtual IP-based systems is pretty flaw-ful.
[06:25] mjr_: Like, what if the server is "up", but sort of broken or slow?
[06:25] tonymilne has joined the channel
[06:25] sechrist: mikeal1: redundancy and high availability are my point
[06:26] mjr_: If you have another complete replica, you could have the clients send at least reads to the other one.
[06:26] mikeal1: you can get redundancy with rsync
[06:26] sechrist: we have a manta that any one of at least two types of nodes in our cloud need to be able to be removed without any consequence on service
[06:26] mikeal1: just continously rsync the append-only log
[06:26] sechrist: with the ridiculous amount of nines we are hoping for
[06:27] sechrist: we don't need concurrency or load balancing of redis
[06:28] sechrist: just need to be able to blow up one out of two and put another in, and nothing be effected
[06:28] temp01 has joined the channel
[06:28] sechrist: which would let us do upgrades of each one
[06:28] sechrist: without downtime
[06:28] mikeal1: yeah
[06:28] mikeal1: just copy the db file
[06:28] mikeal1: it's append only
[06:29] sechrist: that will give me crappy consistency wouldn't it?
[06:29] sechrist: slaveof isn't more efficient?
[06:29] mikeal1: if there is a failure you'll lose whatever was in memory and hadn't been fsync'd yet
[06:29] sechrist: I'd rather only lose stuff that hadn't replicated to the secondary master
[06:30] mikeal1: slaves probably work better
[06:30] sechrist: wait -- are you saying that syncing the file would be faster than the redis protocol's way of replicating?
[06:30] sechrist: ah
[06:31] mikeal1: the redis slave protocol might just rsync the file appends
[06:31] sechrist: http://nosql.mypopescu.com/post/656779883/achieving-zero-downtime-redis-upgrades that was pretty interesting
[06:32] sechrist: yeah thankfully I only have to replicate in one direction
[06:32] sechrist: since writes to the secondary master don't need to sync back up to the primary master
[06:32] Aria has left the channel
[06:33] x_or has joined the channel
[06:34] B2oba has joined the channel
[06:34] B2oba: Hi
[06:35] B2oba: I created my first node.js application and want to run it in a real environment. I couldn't find any hosting, but people suggested getting a VPS instead. I am currently looking between Linode and Slicehost. Anyone has experience with either or both?
[06:37] RockShox: anyone have some thoughts on cookie based authentication schemes
[06:38] RockShox: should i keep the cookies in the users table and update the user every tiem a new one is issued, or keep a seperate table that somehow links to the users
[06:38] RockShox: this is in couch btw
[06:41] masahiroh has joined the channel
[06:41] mjr_: B2oba: I've used them both, and they each seem fine.
[06:42] vborja has joined the channel
[06:43] B2oba: mjr_: Ok, I'll go with Linode then, it is cheaper in terms of price/ram
[06:44] B2oba: mjr_: Any other option you'd recomend looking into?
[06:44] smtlaissezfaire has joined the channel
[06:47] mjr_: I've been getting really good performance for the money from chunkhost
[06:50] B2oba: oh they have a free beta
[06:50] B2oba: interesting :)
[06:50] mjr_: They hooked me with that also, and now I pay them because their stuff is really fast for me.
[06:50] mjr_: I think they are not popular yet, so there's not much contention for resources.
[06:50] mjr_: yet.
[06:51] tpryme has joined the channel
[06:51] B2oba: How hard is it to setup an environment from there... I'm coming from the windows world.
[06:52] void_ has joined the channel
[06:52] B2oba: hum, im creating an account right now... which OS do you suggest? CentOS?
[06:53] jdalton has joined the channel
[06:53] jdalton has left the channel
[06:54] mjr_: I think the cool kids all use ubuntu these days
[06:54] mjr_: And it'll be hard to figure out at first, Linux that is.
[06:54] mjr_: But totally worth it.
[06:54] jchris has joined the channel
[06:57] CrypticSwarm has joined the channel
[06:57] ph^ has joined the channel
[06:57] B2oba: I think i'll go with CentOS 5.5
[06:58] x_or: B2oba:  I have been using slicehost for a long time, I think they are awesome.  Amazing support.  Great products.
[06:59] sudoer has joined the channel
[06:59] Lorentz: You might want to play around with a virtual install on your own machine.
[07:00] Lorentz: It'll sorta simulate what you'll have to go through when using VPS hosting etc.
[07:01] x_or: That is a really good idea.  Familiarize yourself with Linux before you choose one or the other.  
[07:01] fmeyer has joined the channel
[07:01] dthompson has joined the channel
[07:03] mikeal1 has joined the channel
[07:06] mjr_: Someday soon, I'd imagine Joyent will release no.de
[07:09] B2oba: thks for all the feedback. I created a chunk to learn from it -- As a side question, for a production server
[07:09] B2oba: do you run node.js behind a much more "solid/secure" web server? e.g. apache/nginx?
[07:10] mjr_: I expose node to the ravages of the internet
[07:10] mjr_: Many people front it with something
[07:10] googol: B2oba: I like nginx, you can make it retry the request after a few seconds, and have something to auto restart node incase of any problems
[07:11] ph^ has joined the channel
[07:12] isaacs has joined the channel
[07:12] derferman has joined the channel
[07:12] derferman has joined the channel
[07:14] amerine has joined the channel
[07:16] fangel has joined the channel
[07:17] Chetane has joined the channel
[07:19] overthemike has left the channel
[07:23] B2oba: heh, I now have a VPS set up.. how do I get into it? ^^ Putty?
[07:24] piscm has joined the channel
[07:27] void_: B2oba: yes they gave you root password, right?
[07:28] B2oba: void_: Yes... i just connected as root. Looking for some tutorial right now
[07:29] void_: be careful with root account :-)
[07:29] pdelgallego has joined the channel
[07:30] B2oba: oh found a tutorial to get me started... (http://articles.slicehost.com/2010/5/15/centos-5-5-setup-part-1)
[07:31] B2oba: it's pretty exciting :D
[07:31] jkreeftmeijer has joined the channel
[07:31] void_: you have centOS?
[07:32] B2oba: yes, centOS 5.5
[07:33] muhqu has joined the channel
[07:35] teemow has joined the channel
[07:38] tpryme has left the channel
[07:39] mikeal1 has joined the channel
[07:40] isaacs: ircretary: tell booths It's a problem with the latest ry/master.  argv[0] busted.  should be fixed soonish.
[07:40] ircretary: isaacs: I'll be sure to tell booths
[07:40] ezmobius has joined the channel
[07:41] virtuo has joined the channel
[07:41] mikeal1 has joined the channel
[07:41] saschagehlich has joined the channel
[07:50] RockShox: could anyone explain what the "layout" option does in express rendering
[07:50] RockShox: like res.render('template', { layout: false });
[07:50] derren13 has joined the channel
[07:54] cwo has joined the channel
[07:57] jimt has joined the channel
[08:01] hellp has joined the channel
[08:03] SubStack: now to come up with something specific for this talk to focus on
[08:04] mraleph has joined the channel
[08:07] Rixius has joined the channel
[08:09] jbpros has joined the channel
[08:09] DanielSim has joined the channel
[08:11] technoweenie has joined the channel
[08:11] kolor has joined the channel
[08:13] daglees has joined the channel
[08:13] herbySk has joined the channel
[08:15] omni5cience has joined the channel
[08:23] altamic has joined the channel
[08:23] dahankzter has joined the channel
[08:24] ph^ has joined the channel
[08:26] daglees has joined the channel
[08:27] fjakobs has joined the channel
[08:29] ncursestest has joined the channel
[08:29] bingomanatee_ has joined the channel
[08:30] ncursestest has joined the channel
[08:30] ncursestest: /join ##javascript
[08:32] markwubben has joined the channel
[08:33] qFox has joined the channel
[08:34] SamuraiJack has joined the channel
[08:38] pdelgallego_ has joined the channel
[08:39] B2oba has joined the channel
[08:41] zentoooo has joined the channel
[08:42] B2oba: Hi
[08:42] B2oba: When you use node.js behind nginx... is there a performance hit associated with that?
[08:43] B2oba: e.g. will every request go to nginx request handling mechanism, then to node's, and bubble back and reponse are provided?
[08:46] dahankzter: yes but its not really the bottleneck
[08:47] dahankzter: and you kan have multiple node processes behind the same nginx
[08:47] B2oba: so for a comet (e.g. chat) application, i shouldn't be worried about nginx affecting the number of simultaneous requests that can be handled?
[08:47] dahankzter: worried... no *knock knock*
[08:48] dahankzter: i have not tried what you are trying to do but for non comet app it should work fine
[08:49] cafesofie has joined the channel
[08:50] guybrush: the only limitation with nginx is that it can't handle websockets (as far as i understand it)
[08:54] SamuraiJack has joined the channel
[08:54] mikedeboer has joined the channel
[08:57] AAA_awright: B2oba: Yeah, your speed will likely go up with Nginx because you can load-balance multiple Node.js processes
[08:57] AAA_awright: But even with one the hit isn't terribly big
[09:00] mraleph has joined the channel
[09:00] B2oba: Thanks
[09:00] B2oba: I'll install nginx then in front of nodeJS
[09:01] herbySk has joined the channel
[09:02] AAA_awright: Just make sure your application can work with multiple processes and such, and I don't think you can run websockets through it either
[09:02] AAA_awright: idk what progress has been made on that front though
[09:03] altamic has joined the channel
[09:03] hdon has joined the channel
[09:06] matjas has joined the channel
[09:09] jetienne has joined the channel
[09:11] CrypticSwarm has joined the channel
[09:14] aklt has joined the channel
[09:15] saikat has joined the channel
[09:16] adambeynon has joined the channel
[09:20] masahiroh has joined the channel
[09:23] ewdafa has joined the channel
[09:25] temp01 has joined the channel
[09:27] hobodave has joined the channel
[09:32] masahiroh has joined the channel
[09:33] temp01 has joined the channel
[09:33] CrypticSwarm has joined the channel
[09:33] void_ has joined the channel
[09:36] temp01 has joined the channel
[09:37] markwubben has joined the channel
[09:39] clarkfischer has joined the channel
[09:40] Rixius has joined the channel
[09:47] TomY_ has joined the channel
[09:49] xla has joined the channel
[09:50] temp01 has joined the channel
[09:56] pietern has joined the channel
[09:56] rot13 has joined the channel
[09:57] altamic has joined the channel
[09:58] MikhX has joined the channel
[09:59] zentoooo has joined the channel
[10:01] dsirijus has joined the channel
[10:02] DedSirijus has joined the channel
[10:04] bzinger has joined the channel
[10:06] kennon has joined the channel
[10:07] dsirijus has joined the channel
[10:08] MikhX has joined the channel
[10:09] SamuraiJack_ has joined the channel
[10:09] zentoooo_ has joined the channel
[10:10] naan has joined the channel
[10:10] zomgbie has joined the channel
[10:10] naan: hi, i m having issue during make 
[10:11] naan: task failed is libv8.a SConstruct
[10:11] naan: how should i proceed to fix this?
[10:11] mikew3c: naan: you building from the latest source from the repo?
[10:11] B2oba: which version of node.js are you trying to build?
[10:12] naan: i m building from ry-node latest
[10:13] naan: let me verify the build number
[10:13] B2oba: The latest version might be broken/unstable... i built earlier v0.3.1 without any problem
[10:13] yene has joined the channel
[10:13] B2oba: you should try it out
[10:14] naan: B2oba: thanks
[10:14] mikew3c: naan: can you 
[10:14] naan: will check out that version
[10:15] kennon has left the channel
[10:17] romainhuet has joined the channel
[10:20] mikew3c has joined the channel
[10:20] SamHasler has joined the channel
[10:22] MattJ has joined the channel
[10:23] temp01 has joined the channel
[10:24] margle has joined the channel
[10:25] liar has joined the channel
[10:29] d0k has joined the channel
[10:29] d0k_ has joined the channel
[10:30] andrewfff has joined the channel
[10:30] d0k has joined the channel
[10:34] litenjacob has joined the channel
[10:38] kriskowal has joined the channel
[10:42] naan has joined the channel
[10:47] naan: tried building 3.3 but it failed on task libv8.a SConstruct. 3.1 builds fine but need tls module
[10:47] naan: what to do?
[10:49] pdelgallego has joined the channel
[10:50] temp01 has joined the channel
[10:51] saikat has joined the channel
[10:52] alathon has joined the channel
[10:53] mikew3c: naan: what error message(s) are you seeing?
[10:54] mikew3c: maybe you can gist or pastebin them somewhere and post the link here
[10:54] femtoo has joined the channel
[10:54] sveimac has joined the channel
[10:55] naan: scons: *** [obj/release/platform-cygwin.o] Error 1 scons: building terminated because of errors. Waf: Leaving directory `/cygdrive/e/nodejs/node-v0.3.3/build' Build failed:  -> task failed (err #2):         {task: libv8.a SConstruct -> libv8.a} make: *** [program] Error 1
[10:55] mikew3c: ah cygwin
[10:55] naan: yeah :)
[10:56] mikew3c: I don't think I can help much there
[10:56] mikew3c: I don't have a cygwin environment to test on
[10:56] mikew3c: but that message is not the error message you need to look at
[10:56] naan: np
[10:57] temp01 has joined the channel
[10:57] naan: then where should i look
[10:57] naan: ?
[10:57] mikew3c: whatever is actually cause the failure is occurring earlier, before the message gets emitted
[10:58] mikew3c: maybe do "make > LOG 2>&1" and then paste the whole contents of that log into a gist or pastebin
[10:58] naan: okay .. will pipe the output to a file and try to find the issue
[10:58] mikew3c: yeah
[10:58] naan: will do that
[10:58] mikew3c: make sure to pipe the stderr with 2>&1 as well
[10:59] naan: okay
[10:59] naan: thanks
[10:59] hellp has joined the channel
[11:03] vineyard has joined the channel
[11:06] bingomanatee_: cygwin bad. 
[11:07] pdelgallego has joined the channel
[11:08] mikew3c: bingomanatee: ms-dos worse
[11:09] capndiesel has joined the channel
[11:10] pdelgallego_ has joined the channel
[11:10] capndiesel has joined the channel
[11:11] siong1987 has joined the channel
[11:12] zomgbie has joined the channel
[11:15] sth: using the --prof flag, is the log meant to be compressed?
[11:15] zomgbie has joined the channel
[11:18] herbySk has joined the channel
[11:18] margle has joined the channel
[11:19] echosystm has joined the channel
[11:19] temp01 has joined the channel
[11:19] echosystm: anyone know how to disconnect a client from the server side, with socket.io ?
[11:19] echosystm: client.disconnect() doesnt exist
[11:20] echosystm: i cant see any such method anywhere
[11:20] squeek: client.onYourBikeSon() doesn't exist, does it?
[11:21] echosystm: ?
[11:21] mr_daniel has joined the channel
[11:24] charlenopires has joined the channel
[11:25] mape: echosystm: I ended up sending a disconnect message to the client and close it there, not a good way but it works
[11:26] echosystm: yuck :/
[11:26] sveimac_ has joined the channel
[11:26] echosystm: ahwell
[11:26] echosystm: i guess ive got no choice, thanks for the heads up
[11:26] pyrotechinck has joined the channel
[11:26] mikew3c: what is the p method that's in the global scope?
[11:27] zomgbie_ has joined the channel
[11:27] RichardJ: mikew3c: which p method?
[11:28] mikew3c: global.p
[11:28] mikew3c: v8: p
[11:28] v8bot: mikew3c: ReferenceError: p is not defined
[11:28] mikew3c: v8: global.p;
[11:28] v8bot: mikew3c: ReferenceError: global is not defined
[11:29] mikew3c: ah
[11:29] RichardJ: v8: this.p
[11:29] v8bot: RichardJ: undefined
[11:29] RichardJ: seriously, I don't see a p :-)
[11:29] mikew3c: yeah, it's a node thing
[11:29] mikew3c: not a v8
[11:29] mikew3c: try for the node console
[11:29] mikew3c: shell
[11:29] RichardJ: richard@home:~$ node
[11:29] RichardJ: > p
[11:29] RichardJ: ReferenceError: p is not defined
[11:31] mikew3c: ah
[11:31] RichardJ: still not seeing it, unfortunately
[11:31] ttpva has joined the channel
[11:31] mikew3c: yeah
[11:32] mikew3c: it was in v0.2
[11:32] mikew3c: but not in v0.3 apparently
[11:32] mikew3c: whatever it was…
[11:32] tim_smart has joined the channel
[11:33] RichardJ: could be, I'm running 0.3.2 now
[11:34] RichardJ: ah, lunch break
[11:34] RichardJ: finally
[11:34] temp01 has joined the channel
[11:41] temp01 has joined the channel
[11:42] naan: mikew3c: http://pastebin.ca/2039435
[11:45] mikew3c: naan: I see
[11:46] floby has joined the channel
[11:46] herbySk has joined the channel
[11:46] mikew3c: naan: lines 8 and 9 show what the cause is
[11:47] mikew3c: " cannot allocate an object of abstract type ‘v8::internal::CygwinMutex’ "
[11:47] temp01 has joined the channel
[11:47] mikew3c: starting at lines 8 and 9
[11:48] naan: yeah.. i see that
[11:48] naan: google-ing the issue
[11:48] floby: hey there
[11:48] mikew3c: seems to purely be something related specifically to cygwin platform
[11:49] floby: nan: is that your code producing the error ?
[11:49] mikew3c: naan: yeah, seems to be a known problem with the cygwin build of v8
[11:49] naan: okay
[11:49] mikew3c: since a month or more ago
[11:50] naan: floby: tying to build 0.3.3 on cygwin
[11:50] naan: getting this error
[11:50] mikew3c: floby: specifically error is from trying to buld the v8 sources 
[11:50] floby: naan: okay. you can't quite correct it then
[11:51] mikew3c: "problem is because CygwinMutex doesn't define the TryLock() method"
[11:51] naan: i m pretty sure i can't :)
[11:51] mikew3c: but… "This issue is related to V8 port in node.js,"
[11:52] mikew3c: naan: http://groups.google.com/group/nodejs-dev/browse_thread/thread/9f9147b80da1f539?pli=1
[11:52] mikew3c: "use platform-cygwin.cc from https://gist.github.com/734048"
[11:53] naan: awesome .. nice find
[11:54] naan: will try with this
[11:54] mikew3c: see also "A temporary fix is to disable Crankshaft on Cygwin.  There's a flag in flag-definitions.h."
[11:54] floby: ah cygwin <3
[11:55] steffkes has joined the channel
[11:56] sveimac has joined the channel
[11:57] mikew3c: naan: or maybe this patch: http://groups.google.com/group/nodejs/attach/8c24ccb4b209572f/cygwin_033.patch?part=4&view=1
[11:57] mikew3c: hmm, yeahg
[11:57] mikew3c: yeah
[11:57] mikew3c: that looks like the better fix
[11:57] naan: yeah .. patch looks better
[11:58] naan: trying the patch now
[12:00] SamuraiJack_ has joined the channel
[12:07] charlenopires_ has joined the channel
[12:09] everton has joined the channel
[12:11] naan: mikew3c: it worked :) thanks
[12:11] mikew3c: rockin
[12:11] naan: and it would be awesome if we can have this issue listed on https://github.com/ry/node/wiki/Building-node.js-on-Cygwin-(Windows)
[12:12] mikew3c: it's a wiki, bro :)
[12:12] naan: yeah . but i was thinking if we can have few +1s
[12:12] naan: :)
[12:12] broofa has joined the channel
[12:16] jetienne: 0.2.6 got crankshaft ?
[12:18] floby: check the v8 version, although I'm not sure about in which one it appeared first
[12:18] floby: jetienne: By the way I saw your message on github, got it. I'll stick to 0.2.5 for the time being
[12:20] jetienne: floby: oh hi, im just installing 10.04 
[12:20] rkieffer has joined the channel
[12:20] rkieffer has left the channel
[12:20] eee_c has joined the channel
[12:21] floby: jetienne: thanks. in fact I have a release coming up soon, so I won't add any possible issues by updating now
[12:24] aro has joined the channel
[12:25] naan: mikew3c: added the entry in wiki. and thanks a lot for the help today.
[12:26] mikew3c: cool
[12:26] mikew3c: glad I could help
[12:26] sveimac_ has joined the channel
[12:27] broofa has joined the channel
[12:40] rtuin has joined the channel
[12:42] mraleph has joined the channel
[12:45] DanielSim has left the channel
[12:54] matthewford has joined the channel
[12:59] floby has left the channel
[13:00] Vertice has joined the channel
[13:01] naturalethic has joined the channel
[13:08] wdperson has joined the channel
[13:13] void_ has joined the channel
[13:13] herbySk has joined the channel
[13:13] jimt_ has joined the channel
[13:14] jetienne: floby: ok node0.2.6 .deb on 10.04 is queued.
[13:14] jetienne: when it will be ready "sudo add-apt-repository ppa:jerome-etienne/neoip && sudo apt-get update && sudo apt-get install nodejs" to install/update it
[13:14] altamic has joined the channel
[13:15] Yuffster_work has joined the channel
[13:16] aheckmann has joined the channel
[13:17] charlenopires has joined the channel
[13:18] case__: jetienne, GG
[13:19] svnlto has joined the channel
[13:22] sveimac has joined the channel
[13:24] temp01 has joined the channel
[13:25] djanowski has joined the channel
[13:26] darthdeus has joined the channel
[13:36] temp01 has joined the channel
[13:38] funkatron has joined the channel
[13:39] funkatron has left the channel
[13:39] SamuraiJack__ has joined the channel
[13:39] Gruni has joined the channel
[13:44] kriszyp has joined the channel
[13:45] romainhuet_ has joined the channel
[13:48] jimt has joined the channel
[13:49] femtoo has joined the channel
[13:49] ianward has joined the channel
[13:49] dnolen has joined the channel
[13:50] sivy has joined the channel
[13:51] temp01 has joined the channel
[13:51] booths has joined the channel
[13:52] sveimac has joined the channel
[13:54] zomgbie has joined the channel
[13:55] fumanchu182 has joined the channel
[13:57] matthewford has left the channel
[13:59] temp01 has joined the channel
[14:00] yene has joined the channel
[14:01] montylounge has joined the channel
[14:02] Sembiance: morning everyone :)
[14:04] rtuin has joined the channel
[14:05] arpegius has joined the channel
[14:05] marlun has joined the channel
[14:05] marlun has joined the channel
[14:06] Ari-Ugwu has joined the channel
[14:06] kris_ has joined the channel
[14:07] fmeyer has joined the channel
[14:12] aro has joined the channel
[14:13] proppy has joined the channel
[14:17] matjas has joined the channel
[14:19] svnlto has joined the channel
[14:20] romainhuet has joined the channel
[14:21] kanru has joined the channel
[14:22] zemanel has joined the channel
[14:22] jae has joined the channel
[14:24] jessica-m has joined the channel
[14:26] roaet: I am reading the manual for http and I have reached the upgrade event. I have googled what it is but I am not certain if I found anything useful. Does anyone know what an http upgrade request is?
[14:27] amacleod has joined the channel
[14:27] roaet: nevermind.. it appears it is a TLS thing.
[14:29] mikew3c: roaet: yeah
[14:29] mikew3c: I think the Websocket protocol originally made use of it as well
[14:30] mikew3c: but I think it does not now
[14:30] davidsklar has joined the channel
[14:31] mikew3c: hmm
[14:31] mikew3c: or maybe it still does
[14:31] mikew3c: http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-03#section-10.3
[14:31] mikew3c: in the handshake
[14:31] mikew3c: http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-03#section-1.2
[14:33] roaet: i'm looking at evl's tadpole code and it has a ws.js library (websocket i believe). Did he write it or is it some open source thing (or both)?
[14:33] roaet: (assuming you know what I talk about)
[14:33] splashs has joined the channel
[14:33] boaz has joined the channel
[14:34] mikew3c: roaet: dunno anything about that one, sorry
[14:37] roaet: thanks tho
[14:37] garrensmith has joined the channel
[14:42] zomgbie has joined the channel
[14:43] pietern has joined the channel
[14:45] jherdman has joined the channel
[14:46] cferris has joined the channel
[14:47] xla has joined the channel
[14:49] JusticeFries has joined the channel
[14:50] [[zz]] has joined the channel
[14:51] aro has joined the channel
[14:51] IRONkyle has joined the channel
[14:51] eee_c has joined the channel
[14:52] eee_c1 has joined the channel
[14:53] ajpiano has joined the channel
[14:53] sveimac has joined the channel
[14:54] adambeynon has joined the channel
[14:55] sveimac has joined the channel
[14:57] kolor has joined the channel
[15:00] arpegius has joined the channel
[15:01] davglass has joined the channel
[15:02] Yuffster has joined the channel
[15:02] jetienne: floby: ok node0.2.6 deb is now available on ubuntu 10.04 and 10.10
[15:03] proppy: jetienne: we had a discution with ryah about providing .deb on nodejs.org
[15:04] jetienne: proppy: ah ?
[15:04] proppy: and maybe adding a step to generate the deb on buildbot
[15:04] jetienne: proppy: maybe i can help. i got the script alrteady
[15:04] proppy: jetienne: yes, did you use Jeremy Lal packaging ?
[15:04] proppy: (for debian)
[15:04] proppy: as a start base ?
[15:05] jetienne: proppy: no. i did a standalone. aka no huge dependancy
[15:05] jetienne: proppy: thus no conflict with external deps 
[15:05] jetienne: proppy: like v8 
[15:05] matt_c has joined the channel
[15:05] claudiu__ has joined the channel
[15:05] proppy: ok, I researched buildbot FileUpload facilities http://buildbot.net/buildbot/docs/latest/Transferring-Files.html
[15:06] proppy: it seems there is way to have the slave upload build result, to the master
[15:06] jetienne: proppy: i never user fileupload
[15:07] jetienne: proppy: currently my stuff is a script in which you do "make ppa_upload" and the .deb is uploaded to launchpad which compile it for i386, x64
[15:07] proppy: thus if the .deb generation is somehow integrated upstream (on master or in a branch), we would have a way to generate the .deb from the slave
[15:07] proppy: and upload them to a public location
[15:08] proppy: jetienne: yes, that makes the trick for ubuntu, I wonder if it will play nice with debian
[15:08] proppy: jetienne: is openssl the only binary depends of your package ?
[15:08] rubydiamond has left the channel
[15:09] proppy: jetienne: maybe you could try to submit your script to ryah, as a pull request
[15:09] jetienne: proppy: ok i will talk with him to see what he thinks. when your discussion happened ?
[15:09] proppy: jetienne: is your script only compiling a source package or also a binary ?
[15:10] jetienne: proppy: it can do both. on ubuntu 10.10 and 10.04
[15:10] proppy: jetienne: without uploading to ppa ? I mean compiling locally
[15:11] jetienne: proppy: yes. it is able to compile the exec and do a local bin .deb
[15:11] jetienne: make src_delete src_import clean deb_clean deb_base_build deb_upd_changelog deb_bin_build <- the cmdline :)
[15:11] proppy: jetienne: http://nodejs.debuggable.com/2011-01-02.txt 22:16
[15:11] proppy: he suggered that:
[15:11] proppy: [22:22] ryah: should just maintain the deb scripts in the node repo
[15:12] jetienne: proppy: so everyone would run the scripts. good idea
[15:12] jetienne: and would be easy to build the .deb and integrate in nodejs.org
[15:12] jetienne: good idea
[15:13] montylounge has joined the channel
[15:16] Steve____ has joined the channel
[15:19] skyl has joined the channel
[15:22] nefD has joined the channel
[15:24] kanru has joined the channel
[15:25] sveimac has joined the channel
[15:26] _figital has joined the channel
[15:26] qnt4b has joined the channel
[15:28] pengwynn has joined the channel
[15:30] stepheneb has joined the channel
[15:33] shinmei has joined the channel
[15:34] muhqu has joined the channel
[15:37] capndiesel has joined the channel
[15:37] jpld has joined the channel
[15:39] slaskis has joined the channel
[15:41] gabeh has joined the channel
[15:42] namelessnotion has joined the channel
[15:43] gnrfan has joined the channel
[15:44] siong1987 has joined the channel
[15:45] gabeh has joined the channel
[15:46] saschagehlich has joined the channel
[15:48] smtlaissezfaire has joined the channel
[15:50] tomhsx has joined the channel
[15:53] _figital has joined the channel
[15:55] sveimac has joined the channel
[15:56] jpld has joined the channel
[15:56] figital has joined the channel
[15:56] _figital has joined the channel
[15:59] iszak has joined the channel
[16:03] splashs has joined the channel
[16:04] ashb has joined the channel
[16:04] IRONkyle has joined the channel
[16:04] paulrobinson has joined the channel
[16:04] Druid_ has joined the channel
[16:06] davglass has joined the channel
[16:08] tjholowaychuk has joined the channel
[16:08] Sami_ZzZ has joined the channel
[16:09] sonnym has joined the channel
[16:11] briznad has joined the channel
[16:11] bartmax has joined the channel
[16:11] bartmax has joined the channel
[16:12] blueadept_work has joined the channel
[16:15] jamund has joined the channel
[16:18] wilken has joined the channel
[16:18] Thorn has joined the channel
[16:18] Thorn has joined the channel
[16:19] mikew3c_ has joined the channel
[16:20] dustinwhittle has joined the channel
[16:21] elijah-mbp has joined the channel
[16:22] tjholowaychuk has joined the channel
[16:23] softdrink has joined the channel
[16:24] eric_f has joined the channel
[16:26] sveimac has joined the channel
[16:27] jchris has joined the channel
[16:28] Sembiance: v8: 0.1 + 0.2
[16:28] v8bot: Sembiance: 0.30000000000000004
[16:28] Sembiance: v8: use decimal; 0.1 + 0.2
[16:28] v8bot: Sembiance: SyntaxError: Unexpected identifier
[16:29] muk_mb has joined the channel
[16:32] montylounge_ has joined the channel
[16:32] slaskis: use decimal?
[16:33] Sembiance: v8: (0.1 + 0.2).toFixed(1)
[16:33] v8bot: Sembiance: "0.3"
[16:33] oal has joined the channel
[16:33] Sembiance: slaskis: I was reading something on ecmascript 4
[16:33] SoftwareMaven: Are there any unexpected issues with using C++ extensions in node.js (e.g. doesn't work as advertised; works, but you have to think/know about X; etc)? I have a library of native cryptographic code that I would have to use if we decided to use node.js for a web service we are about to construct.
[16:34] gkatsev: Sembiance: ES4 was thrown out for a reason.
[16:34] siong1987 has joined the channel
[16:34] Sembiance: SoftwareMaven: I created a custom C++ node.js extension for my project and I use it in production with no problems
[16:35] Sembiance: SoftwareMaven: VERY simple wrapper around the 'mhash' linux library so I could do whirlpool hash encodings in javascript: https://github.com/Sembiance/node-whirlpool
[16:35] void_ has joined the channel
[16:35] wink_: there are tons of c++ bindings for node, as long as your binding isnt broken you won't have issues
[16:35] Sembiance: SoftwareMaven: I wrote another one too that does some custom C code stuff (bit shifting and combining of two 32bit numbers into a 64bit one, returned to node.js as a string)
[16:35] Sembiance: SoftwareMaven: so as wink_ said, proceed with confidence :)
[16:36] JusticeFries has joined the channel
[16:37] jakehow has joined the channel
[16:37] SoftwareMaven: Cool. Good to know.  Considering clojure, node.js, and erlang as potentials.  Need to know pitfalls around this topic first.
[16:37] benburkert has joined the channel
[16:39] sprout1 has joined the channel
[16:40] blueadept_work has joined the channel
[16:41] mikedeboer has joined the channel
[16:41] dylang has joined the channel
[16:41] Sembiance: SoftwareMaven: erlang eh? :)
[16:41] softdrink has joined the channel
[16:44] trotter has joined the channel
[16:45] gf3 has joined the channel
[16:46] dida has joined the channel
[16:46] gf3 has joined the channel
[16:46] emilepetrone has joined the channel
[16:47] emilepetrone: when using Express, is there a 'view engine' that is for straight html? Jade is driving me up a wall 
[16:47] balaa has joined the channel
[16:47] balaa has left the channel
[16:47] Sembiance: emilepetrone: I use express, but not outputing HTML, so I'm not familiar with their view engines, sorry.
[16:48] emilepetrone: Sembiance: thanks ..hmm
[16:48] IRONkyle has joined the channel
[16:48] gkatsev: express uses ejs, no?
[16:48] gkatsev: weird, TJ isn't here currently.
[16:48] cronopio has joined the channel
[16:48] gkatsev: oh, he is, nvm
[16:48] gkatsev: tjholowaychuk: ^
[16:48] tjholowaychuk: what
[16:48] tjholowaychuk: oh
[16:48] tjholowaychuk: lol
[16:49] tjholowaychuk: no, you can use ejs, mustasche, jade, anything
[16:49] danielrmz has joined the channel
[16:49] tjholowaychuk: haml
[16:49] gkatsev: tjholowaychuk: specifically waht emilepetrone asked about straight html and 'view engine'
[16:49] tjholowaychuk: emilepetrone: if jade is not working out for you try https://github.com/visionmedia/ejs
[16:49] Sembiance: haml. bleh!
[16:50] tjholowaychuk: emilepetrone: you can use app.register() to assign .html to the ejs module
[16:50] tjholowaychuk: Sembiance: haml-ish stuff gives you some interesting capabilities
[16:50] tjholowaychuk: but yeah it is not for everyone
[16:50] tjholowaychuk: but having structure gives flexibility
[16:50] emilepetrone: tjholowaychuk: ok i'll give it a whirl.. thanks
[16:51] tjholowaychuk: emilepetrone: note that you can change the open/close strings so {%  %} instead of <? ?> etc
[16:51] tjholowaychuk: whatever you want
[16:51] cnus8n has joined the channel
[16:52] gkatsev: {{}} to be mustache like
[16:52] emilepetrone: tjholowaychuk: k thanks
[16:52] tjholowaychuk: i might write something kinda like mustache some day (but with more features) because if you restrict the language you can make it more performant
[16:53] tjholowaychuk: mostly getting rid of with(){}
[16:53] daniellindsley has joined the channel
[16:54] Sembiance: tjholowaychuk: where I work we acquired a web site that is all ruby on rails and haml. So I've been learning ruby, rails and haml. I'm so far not a big fan of haml. I've looked at several other template languages, they feel/look nicer to me :)
[16:54] slloyd has joined the channel
[16:54] yozlet has joined the channel
[16:54] tjholowaychuk: haml is nice once you get used to it
[16:54] tjholowaychuk: at first it looks harder to read
[16:54] tjholowaychuk: but it becomes awesome to work with
[16:54] tjholowaychuk: minus % all the time
[16:54] JusticeFries has joined the channel
[16:54] gkatsev: tjholowaychuk: have you looked at mu or nun? based on mustache
[16:55] tjholowaychuk: I dont like mustache
[16:55] bitdrift has joined the channel
[16:55] tjholowaychuk: ive seen mu
[16:55] tjholowaychuk: not nun though I dont think
[16:55] gkatsev: ok, nun is similar to mu, haven't used it much but their docs on github are much more robust
[16:56] danoyoung has joined the channel
[16:56] sveimac has joined the channel
[16:57] jamund has joined the channel
[17:00] qnt4b: Which is the fastest template engine (even if differences are minor)?
[17:01] tjholowaychuk: qnt4b: string concats
[17:01] tjholowaychuk: lol
[17:01] tjholowaychuk: if you need like insane speed dont use any
[17:01] qnt4b: ja, true
[17:02] proppy: ACTION addicted to sinon.useFakeTimers()
[17:02] ajpiano has joined the channel
[17:03] SoftwareMaven: Sembiance:Yeah, Erlang.  The VM is highly suited to extremely concurrent applications. Has its warts, too, though. 
[17:04] ph^ has joined the channel
[17:04] dguttman has joined the channel
[17:05] skohorn has joined the channel
[17:05] slaskis: anyone knows of any atom/rss parser?
[17:06] siong1987 has joined the channel
[17:06] slaskis: can't get libxml or htmlparser to work 
[17:06] gkatsev: slaskis: I found one rss thing but don't haven't found others: http://www.robsearles.com/2010/05/21/rss-feed-parser-for-node-js/
[17:07] aguynamedben has joined the channel
[17:07] bingomanatee_ has joined the channel
[17:07] slaskis: gkatsev: oh, interesting
[17:07] gkatsev: yeah, but it seems very simple, though, I haven't used it, really.
[17:08] dida: I'm having problem with expressjs
[17:08] dida: exactly as described here http://groups.google.com/group/express-js/browse_thread/thread/9d978309e22f1665
[17:08] tjholowaychuk: dida: did you install with npm?
[17:08] dida: I ran the express generator and started the server
[17:08] tjholowaychuk: or the repo (master branch)
[17:09] dida: tjholowaychuk: yes I installed it with npm@0.2.12-1 under node@v0.3.1
[17:09] tjholowaychuk: dida: I dont develop for 0.3.x, so things may break
[17:10] tjholowaychuk: but seems odd for that to be breaking
[17:10] liar has joined the channel
[17:10] tjholowaychuk: if you have { locals: { title: 'foo' }}
[17:10] dida: tjholowaychuk: i see. since i'm new to nodejs, any suggestion?
[17:10] tjholowaychuk: it should be fine
[17:10] tjholowaychuk: dida: use 0.2.6
[17:10] gkatsev: using stable is always a good idea if you are new to something
[17:10] Me1000 has joined the channel
[17:11] dida: tjholowaychuk: I didn't change anything, I do have { locals: {title: 'Express'}}
[17:11] stagas: tjholowaychuk: hasn't the syntax changed on that? I use res.render(view, locals)
[17:11] tjholowaychuk: stagas: res.render(view, { foo: 'bar' })
[17:11] tjholowaychuk: just got rid of locals
[17:11] tjholowaychuk: options/locals are in the same object
[17:11] tjholowaychuk: potential collisions, but nice api
[17:12] tjholowaychuk: just dont use "debug" etc as locals :)
[17:12] tjholowaychuk: haha
[17:12] tjholowaychuk: I will list reserved stuff some time
[17:13] dida: tjholowaychuk: so how do i install node 0.2.6 with having version 0.3.x installed?
[17:14] matthewford has joined the channel
[17:14] dida: is it possible? or I should remove it 1st?
[17:14] tjholowaychuk: dida:github.com/visionmedia/n
[17:14] tjholowaychuk: http://github.com/visionmedia/n
[17:14] ph^ has joined the channel
[17:14] dida: it's like rvm
[17:14] stagas: dida: v0.3.1 should be fine, try doing res.render('view', { title: 'Express' });
[17:14] dida: ok cool
[17:15] dida: stagas: I did that
[17:15] tjholowaychuk: stagas: hes using 1.0.1 i think
[17:15] tjholowaychuk: from npm
[17:15] matt_c has joined the channel
[17:15] dida: tjholowaychuk: yes i am
[17:16] charlenopires has joined the channel
[17:16] daniellindsley has joined the channel
[17:18] losing has joined the channel
[17:19] daniellindsley has joined the channel
[17:20] hunterloftis has joined the channel
[17:20] dida: tjholowaychuk: which node version I'm using by default?
[17:20] dida: ie. when started a new terminal session
[17:20] tjholowaychuk: node --version
[17:20] qnt4b: fwiw I get the same result as dida with latest everything
[17:20] djanowski has left the channel
[17:21] tjholowaychuk: qnt4b: really?
[17:21] tjholowaychuk: hmm
[17:21] tjholowaychuk: let me double check
[17:21] davidc_ has joined the channel
[17:22] dida: tjholowaychuk: I mean is there a way to set one version as a default?
[17:22] eric_f has joined the channel
[17:22] tjholowaychuk: dida: n 0.2.6
[17:22] tjholowaychuk: etc
[17:22] tjholowaychuk: will install or activate it
[17:23] tjholowaychuk: if installed
[17:23] xSmurf: mroing nodites
[17:23] tjholowaychuk: morning
[17:23] SubStack: rawr
[17:24] perezd has joined the channel
[17:24] perezd: anyone in here hosting with rackspace?
[17:24] perezd: I've used EC2 exclusively for a few years, but have a new project and considering alternatives
[17:25] binarypie has joined the channel
[17:26] hunterloftis: When you guys are implementing a persistent login ("[ ] Remember me"), do you prefer a traditional database/cookie approach, or do the redis/mongo/whatever-backed session stores work well?
[17:27] sveimac has joined the channel
[17:27] tanepiper: you use the cookie to store the session data, and recover the session is it's still alive normally
[17:27] tanepiper: but express/connect have reddis and mongo backends to store the sessions
[17:28] xSmurf: but you don't need persistence, why not just use memcached?
[17:28] hunterloftis: tanepiper: Yep thanks, what I'm getting at is, I could store a cookie myself (res.cookie...) and then store a token in the database for "rememberme"
[17:28] hunterloftis: tanepiper: Or I could just use a mongo-backed session and put all the "rememberme" stuff into session.rememberme
[17:28] kriskowal has joined the channel
[17:29] amerine has joined the channel
[17:29] tanepiper: remember me usually just sets the expire date on the session to a long time, and you just store the session with the session id, and in the cookie and on visit check to see if the session still exists
[17:30] stagas: hunterloftis: just set the session expire to far future and you're done, no need for rememberme flags. if you then want the cookie to expire (not rememberme), just set req.sessionStore.cookie.persistent = false
[17:30] noahcampbell has joined the channel
[17:30] hunterloftis: ok guys, thanks, that's what I was looking for
[17:31] qnt4b: tjholowaychuk: same result with the jade example ('user is not defined')
[17:31] hunterloftis: I'll need to look into the express session stuff because the only place I'm setting session expiry is at startup right now
[17:31] tjholowaychuk: qnt4b: I will look in a minute
[17:31] qnt4b: tjholowaychuk: no prob, just an fyi
[17:32] bingomanatee_: <-- quite proud of his form rendering library
[17:32] emilepetrone has joined the channel
[17:32] bingomanatee_: checkout github bingomanatee/deformer
[17:33] Aron has joined the channel
[17:33] nonnikcam has joined the channel
[17:34] stagas: bingomanatee_: link? it's a 404
[17:34] Aron has joined the channel
[17:34] strmpnk has joined the channel
[17:34] bingomanatee_: sorry = https://github.com/bignomanatee/deformer
[17:35] rsms has left the channel
[17:35] joelklabo has joined the channel
[17:35] bingomanatee_: I always hated the Zend_Form library and vowed to replace it with something better. Not quite "there" yet but... on the way. 
[17:38] sprout1 has joined the channel
[17:40] bingomanatee_: ** some stuff didn't push over. one sec.
[17:41] tjholowaychuk: dida: works fine for me
[17:41] tjholowaychuk: qnt4b: I tried latest connect/express/jade from npm
[17:41] tjholowaychuk: all good for me
[17:41] tjholowaychuk: with 0.2.6
[17:42] derren13 has joined the channel
[17:42] EyePulp has joined the channel
[17:44] qnt4b: tjholowaychuk: it works when I use 'locals' but not without; 0.3.4-pre and 1.0.1
[17:45] isaacs has joined the channel
[17:45] tjholowaychuk: qnt4b: dont use 0.3.x
[17:45] tjholowaychuk: lol
[17:45] tjholowaychuk: or expect this sort of thing if you do at least :p
[17:45] qnt4b: but... :(
[17:45] tjholowaychuk: its not a stable release, I dont want to support it lol
[17:46] tjholowaychuk: although that is a strange thing to break
[17:46] kris_ has joined the channel
[17:46] dgathright has joined the channel
[17:47] cnus8n has joined the channel
[17:47] qnt4b: locals is the old form, right? that works but the new style doesn't.
[17:48] tjholowaychuk: the new style is in master
[17:48] tjholowaychuk: since it breaks compat
[17:48] strmpnk has joined the channel
[17:48] ryah: https://github.com/ry/node/commit/bdb1464fbced4eda55f7cda255c3e36f7cc6d74d#commitcomment-233825
[17:49] yene_ has joined the channel
[17:50] RockShox: anyone know how to use express session middleware with cradle
[17:50] tjholowaychuk: RockShox: gotta write an adapter
[17:50] bingomanatee_: stagas: sorry again .. NOW the repo is up to date.
[17:50] tjholowaychuk: or use something existing out there
[17:50] Me1000 has joined the channel
[17:50] benburkert has joined the channel
[17:50] RockShox: darn
[17:51] tjholowaychuk: well its not magical
[17:51] tjholowaychuk: lol
[17:51] RockShox: redis has magic
[17:51] pengwynn has joined the channel
[17:51] tjholowaychuk: because I wrote a store for it already
[17:51] davidascher has joined the channel
[17:51] bingomanatee_: You need to make this IRC channel more interactive TJ. 
[17:51] RockShox: ok then write me one for cradle :P
[17:51] tjholowaychuk: i dont use couch :p sorry
[17:52] bingomanatee_: I kind of expect node to create solutions in real time based on user requests.
[17:52] tjholowaychuk: haha
[17:52] tjholowaychuk: yeah it should be writing all of this for us
[17:52] bingomanatee_: "Pony"
[17:52] hunterloftis has joined the channel
[17:52] tjholowaychuk: obviously
[17:52] bingomanatee_: * calls him "Prancer"
[17:52] bingomanatee_: "YAY! Prancer can fly!"
[17:54] briznad has joined the channel
[17:55] hunterloftis: So, I haven't yet seen a way to change the expiration of a MemoryStore session in express.session (to extend it for a user who checks "remember me.") - req.session only has lastAccess, id, and req.
[17:55] hunterloftis: Has anybody done this already?
[17:56] tjholowaychuk: hunterloftis: you can use the maxAge option
[17:56] davida has joined the channel
[17:56] tjholowaychuk: but you shouldnt use MemoryStore anyway
[17:56] hunterloftis: tjholowaychuk: Yeah I see that for the initialization, but I need to change individual maxAges
[17:56] tjholowaychuk: right right
[17:56] hunterloftis: Like, I don't want to set everyone's session to expire in 2 weeks... only for the users who have checked it. I'm open to different stores, especially if that's possible.
[17:57] sveimac has joined the channel
[17:57] tjholowaychuk: hunterloftis: they should be uniform
[17:57] tjholowaychuk: we just need an api
[17:58] hunterloftis: tjholowaychuk: What are the current methods people are using for semi-persistent sessions?
[17:58] stagas: hunterloftis: for not rememberme set req.sessionStore.cookie.persistent = false, you need latest connect I think that's not on npm yet
[17:58] hobodave has joined the channel
[17:58] hobodave has joined the channel
[17:58] tjholowaychuk: stagas: I still think that is a huge hack
[17:58] tjholowaychuk: haha
[17:58] stagas: tjholowaychuk: but it works! :)
[17:58] tjholowaychuk: feels wonky to be settings props on the store
[17:59] tjholowaychuk: shitty api though haha
[17:59] hunterloftis: I feel like, since each session instance also has a session cookie on that particular client, I should have access to that cookie's properties
[17:59] hunterloftis: like expires
[17:59] stagas: it's good for now, maybe this cookie/session thing needs to be refactored to allow individual settings
[17:59] tjholowaychuk: the whole damn library needs a refactor
[17:59] tjholowaychuk: haha
[18:00] tjholowaychuk: but yes
[18:00] tjholowaychuk: i agree
[18:00] tjholowaychuk: bad apis make me barf
[18:00] JusticeFries has joined the channel
[18:01] hunterloftis: tjholowaychuk: Why do you not suggest the memory sessions?
[18:01] tjholowaychuk: hunterloftis: because your process will explode
[18:01] aklt has joined the channel
[18:01] tjholowaychuk: its just for a default / test env
[18:01] yozlet has joined the channel
[18:01] tjholowaychuk: other than that and supplying an example its useless
[18:01] hunterloftis: tjholowaychuk: Gotcha, so is redis or mongo more stable for a production store?
[18:01] tjholowaychuk: I used redis
[18:02] tjholowaychuk: connect-redis
[18:02] hunterloftis: This is the weirdest app ever
[18:02] hunterloftis: We'll be running redis, mongo, and sql
[18:02] hunterloftis: mysql*
[18:02] tjholowaychuk: hahaha
[18:02] lukegalea has joined the channel
[18:02] tjholowaychuk: I hate passing maxAge to the store constructor
[18:02] yene_ has left the channel
[18:02] tjholowaychuk: but some stores need that info
[18:02] tjholowaychuk: well
[18:02] tjholowaychuk: all of them
[18:03] lukegalea: hey guys. Wow. I had no idea how many node folks there are on IRC. Sweet. 
[18:03] hunterloftis: Yeah there should be a default, but I may modify at least the store we use to copy the default into newly created sessions, and then expose the data
[18:03] isaacs: ryah: so, what's process.platform set to on windows?
[18:04] isaacs: "windows", "win32"?
[18:04] montylounge has joined the channel
[18:04] stagas: cygwin
[18:04] tjholowaychuk: hunterloftis: yeah we could copy the the cookie and plop it on a non-enumerable Session#cookie prop
[18:05] tjholowaychuk: hunterloftis: then just session.cookie.expires = null etc
[18:05] hunterloftis: tjholowaychuk: exactly
[18:05] tjholowaychuk: should work
[18:06] isaacs: stagas: no, i mean, on mingw
[18:06] isaacs: stagas: cygwin is posix
[18:07] isaacs: (ish)
[18:07] stagas: isaacs: ah sorry :) there's a mingw version?
[18:08] isaacs: stagas: sorta
[18:08] isaacs: stagas: i mean, it doesn't yet work, but piscisaurus (bert) is working on getting it there.
[18:08] isaacs: stagas: the idea is that you'll download a .exe, and just click it, and it'll work
[18:08] BillyBreen has joined the channel
[18:08] isaacs: but like, path stuff is all crazy, and there are other issues, i'm sure.
[18:09] isaacs: i have a dream that one day all operating systems will be posix.
[18:09] isaacs: if not for m$, we'd be there already.
[18:10] msekimura has joined the channel
[18:11] lukegalea: Hey, has anyone gotten a sort to work using mongoose? I'm finding that if I add a sort to any of my queries I get no results. 
[18:11] lukegalea: sorry for repeating my google group question, just hoping to get more interest here ;) 
[18:12] lukegalea: I'm calling find().sort([['date_time', -1]]).first(...) and getting nothing back.
[18:12] lukegalea: but removing the sort and all is fine.
[18:12] cronopio has joined the channel
[18:12] stagas: sounds nice but I'm used to cygwin now, having all those posix shell tools in windows
[18:13] hunterloftis: lukegalea: It's been a while but I feel like I remember mongoose's sort not matching the mongo shell sort syntax. Which are you using there?
[18:13] hunterloftis: lukegalea: I feel like it might be 'ascending' and 'descending' strings
[18:14] hunterloftis: eg, .sort([['date_time', 'descending']]).first(...
[18:14] lukegalea: hunterloftis: Thanks for the suggestion. I tried that too. No difference.
[18:15] hunterloftis: lukegala: if you remove first() are you getting any matches?
[18:15] hunterloftis: lukegalea: *
[18:15] shaver: what's the recommended way to send email from node?
[18:16] lukegalea: hunterloftis: Not sure how best to look for matches without using first, each, etc.. exec maybe? If I do exec instead of first I get the same: { _queues: [ null ], data: [] }
[18:17] hunterloftis: lukegalea: try using .all(err, results) and then console.dir(results)
[18:17] ossareh has joined the channel
[18:19] xla has joined the channel
[18:19] amerine has joined the channel
[18:20] lukegalea: hunterloftis: Same deal. I get [] when I run: Observation.find().sort([['date_time', 'descending']]).all( function(results) { console.dir(results); } );
[18:20] sveimac has joined the channel
[18:21] hunterloftis: lukegalea: Okay, now same deal, without the sort.
[18:21] hunterloftis: lukegalea: (trying to make sure there is a result set for you to be sorting and filtering on)
[18:21] lukegalea: hunterloftis: I get back 6 records.
[18:21] hunterloftis: and all 6 have a date_time attribute?
[18:22] lukegalea: they do. My model is set to cast them to Date and there's an index on it.
[18:22] niklasfi has joined the channel
[18:22] lukegalea: I should perhaps confirm that mongo returns them properly if I query via shell..
[18:23] lukegalea: (i mean with the sort)
[18:23] hunterloftis: lukegalea: yep
[18:23] niklasfi: is an http request a buffer in the way that i can directly put it into fs.read as an argument?
[18:24] lukegalea: hunterloftis: in the shell it works perfectly when I say: db.observations.find().sort([['date_time','-1']]);
[18:24] lukegalea: I would love to see what mongoose is sending to mongo.. some way of logging queries ala ActiveRecord maybe.
[18:24] trotter has joined the channel
[18:25] hunterloftis: lukegalea: Sorry mate, we're at the end of my ideas then - I agree, mongoose is a good start but there is some room to make it easier to create/debug queries
[18:25] hunterloftis: lukegalea: You can try the raw mongodb interface but it's pretty ugly... if you're doing pretty simple queries it won't be an issue though
[18:25] lukegalea: hunterloftis: Ya. I might just brute force it and bring all records over into NODE and sort there.
[18:25] isaacs: ryah: nvm, found it in waf's guts.
[18:26] lukegalea: hunterloftis: I wonder if there is any way for me to drop into raw mongodb interface and then reify to get the models? 
[18:26] lukegalea: Like the mongoose equivelent of AR's find_by_sql
[18:27] hunterloftis: lukegalea: We considered the same thing, and it would be easy to get the reference to mongo... but on the other hand, keeping the models synced, I can't speak to that.
[18:27] hunterloftis: lukegalea: one thing to consider is, mongoose may be trying to sort the records itself with .sort() instead of passing on a properly formatted .sort to mongodb
[18:28] hunterloftis: lukegalea: So the date sort might confuse it? I'm just making stuff up now, you'd have to check the source. I just can't think of another reason to modify the sort interface.
[18:28] qnt4b has joined the channel
[18:28] lukegalea: I guess I could just get all the ids via a direct query, then query again using mongoose to get the reified models.. something like _id in my_array_of_ids that have been sorted correctly.. 
[18:29] sechrist has joined the channel
[18:29] lukegalea: hunterloftis: ya, I'll see if I can track it down in the source.
[18:30] lukegalea: hunterloftis: thanks for your help. I could always log a bug in the issue tracker and do something terrible and hacky and hope that it gets fixed before I try to go live with my hack. One way or another - it's good to know I'm not doing anything wrong. :)
[18:30] hunterloftis: lukegalea: good luck, let me know where you end up going. We dropped mongo for mysql, for a variety of reasons though not just the issues we had with mongoose.
[18:32] lukegalea: hunterloftis: for this app, Redis might work well too. But I do like Mongo. I think I'll "stay on target" as long as I can.
[18:32] sechrist: hunterloftis: I believe that is called nonosql
[18:32] sechrist: which is becoming a new trend post-nosql
[18:32] lukegalea: I hear there's a new mongoose version out soon.
[18:32] derferman has joined the channel
[18:34] hunterloftis: sechrist: Yep, but we did discover, in implementing it both ways, that for certain less data-driven applications nosql might be great
[18:34] creationix has joined the channel
[18:35] sechrist: forcing a schema on top of mongo, such that mongoose does
[18:35] hunterloftis: sechrist: essentially, if you can't ever imagine a single time you might ever want to JOIN anything
[18:35] sechrist: seems pointless really
[18:35] hunterloftis: sechrist: I agree
[18:36] hunterloftis: lukegalea: We thought this had a lot of potential: https://github.com/amark/mongous but it's too early for us to use
[18:36] hunterloftis: lukegalea: Are you using mongoose master or 1.0?
[18:37] hunterloftis: lukegalea: 1.0 does things very differently, so you might want to try it as well. https://github.com/LearnBoost/mongoose/tree/1.0
[18:38] davidwalsh has joined the channel
[18:38] Aria has joined the channel
[18:39] onar_ has joined the channel
[18:39] springmeyer has joined the channel
[18:40] floby has joined the channel
[18:40] stagas: isaacs: I don't get the chain.first and chain.last thing in your slide flow control lib :)
[18:40] broofa has joined the channel
[18:43] yrashk has joined the channel
[18:43] kolor has joined the channel
[18:45] wilken has joined the channel
[18:45] adambeynon has joined the channel
[18:47] wilken: does anyone have expericence with clientrequests? after a lot of investigation it seems my entire request ends op in the request workqueue and is never sent to the server. has anyone experienced anything similar? fyi i do call req.end()
[18:47] charlenopires has joined the channel
[18:48] dmcquay has joined the channel
[18:48] fangel has joined the channel
[18:49] mikeal1 has joined the channel
[18:50] dguttman has joined the channel
[18:50] litenjacob has joined the channel
[18:50] sudoer has joined the channel
[18:50] cronopio: its there some wrong in: c = [inspiracion:'texttextextext'] passed to jade file using locals off render,  in jade,  =c['inspiracion'] no return nothing
[18:50] stride: evening folks
[18:50] stride: stagas: have a link to those slides? :)
[18:51] mjr_ has joined the channel
[18:51] tjholowaychuk: cronopio: = ***** has to be valid js
[18:51] stagas: stride: https://github.com/isaacs/slide-flow-control
[18:52] tjholowaychuk: cronopio: tag= some.js.here
[18:52] dtrasbo has joined the channel
[18:52] floby has joined the channel
[18:52] sudoer has joined the channel
[18:52] aconbere has joined the channel
[18:52] cronopio: tjholowaychuk: thaks man, but whats its invalid?
[18:53] tjholowaychuk: cronopio:what is that [inspiracion:'texttextextext']
[18:53] tjholowaychuk: supposed to do
[18:53] losing has joined the channel
[18:54] cronopio: tjholowaychuk: i guess its an array, that show me console.log(c)
[18:54] sprout1 has joined the channel
[18:54] cronopio: tjholowaychuk: Im very newbie in JS world :(
[18:54] tjholowaychuk: ah
[18:54] tjholowaychuk: you cant use : in an array
[18:54] tjholowaychuk: its not associative
[18:54] tjholowaychuk: { foo: 'bar' }
[18:54] tjholowaychuk: is fine
[18:55] zomgbie has joined the channel
[18:55] isaacs has joined the channel
[18:56] tjholowaychuk: hunterloftis: not sure what would be best to support session cookies
[18:56] tjholowaychuk: might be kinda messed as far as expiration goes in MemoryStore / redis etc
[18:56] cronopio: tjholowaychuk: that mean var c = {} an object? and using c.inspiracion in jade?
[18:57] tjholowaychuk: cronopio: yeah
[18:57] Huvet has joined the channel
[18:57] cronopio: tjholowaychuk: thanks!! you always help a lot!!
[18:57] dgathright has joined the channel
[18:59] Huvet: hi! how do I load a webworker with a relative path? the docs say: var w = new Worker('foo.js'); but I just get "No such file or directory '/foo.js'". Any ideas?
[18:59] matt_c_ has joined the channel
[19:00] Huvet: or can I transform a relative path to an absolute somehow?
[19:00] x_or: creationix:  I think I have found a bug in nvm.  If I run . ~/.nvm/nvm.sh and then try to "nvm use" and of the installed versions, it cannot find them.  And, when I do an install it tries to install into the root directory (/) rather than ~/.nvm.  https://gist.github.com/768349
[19:00] adambeynon has joined the channel
[19:01] trotter has joined the channel
[19:01] creationix: x_or: sounds like your NVM_DIR variable isn't set right
[19:01] creationix: newer versions of nvm try to set it automatically
[19:02] x_or: It is empty.  Should I set manually or reinstall nvm?
[19:02] tjholowaychuk: x_or: n !
[19:02] tjholowaychuk: haha
[19:02] cronopio: tjholowaychuk: its possible set var p = someotherstring; c = {p: 'sometext'}??
[19:02] creationix: tjholowaychuk: did you ever delete your nvm branch?
[19:02] tjholowaychuk: creationix: way back
[19:03] creationix: cool
[19:03] creationix: n looks nice
[19:03] x_or: I could definitely just reinstall nvm if this is the easiest thing to do.  I don't mind doing that.  But, I want to make sure I am installing correctly since I think I grabbed the most recent version only a few days ago.
[19:03] creationix: x_or: try to echo $NVM_DIR
[19:04] x_or: Hmm, git pull grabbed a bunch of things, obviously my repo was dated.
[19:04] hunterloftis: tjholowaychuk: brb, then let me hear what you mean about messed up session cookie representation in stores
[19:05] bingomanatee_: Is there any handy node tool to read a text file line by line and chunk the buffering that way?
[19:05] dthompson has joined the channel
[19:05] dthompson has joined the channel
[19:05] alek_br has joined the channel
[19:05] x_or: creationix:  Now I get "." when I run echo $NVM_DIR.
[19:05] x_or: That looks better.
[19:05] piscisaureus has joined the channel
[19:05] x_or: Ah, things are OK now.
[19:06] x_or: Just needed to update the .nvm directory.  Thank you .
[19:06] tapwater has joined the channel
[19:06] wilken: is anyone using clientrequest? i am really stumped.
[19:07] piscisaureus: ryah: here?
[19:07] creationix: x_or: :)
[19:07] fly-away has joined the channel
[19:07] piscisaureus: or anyone who understands how repl autocomplete works?
[19:07] wilken: i have a small client script that sends a request... it just seems like the request is never sent, but i get no error or anything
[19:07] maushu has joined the channel
[19:07] aconbere has joined the channel
[19:08] floby: realise you're home alone
[19:08] floby: *le look around*
[19:08] floby: walk around in the house completely naked
[19:08] floby: bumped into brother
[19:08] floby: *poker face*
[19:08] wilken: hehe
[19:09] stepheneb has joined the channel
[19:09] ryah: piscisaureus: yes
[19:09] ryah: piscisaureus: what's up?
[19:09] wilken: as i undersand it a request should end on req.end. there is no req.close, server.flush etc that should be called?
[19:09] robotarmy has joined the channel
[19:09] bentruyman has joined the channel
[19:09] davidascher has joined the channel
[19:09] piscisaureus: from repl.js (REPLServer.complete):
[19:09] piscisaureus:     var dir, files, f, name, base, ext, abs, subfiles, s;
[19:09] piscisaureus:     group = [];
[19:09] piscisaureus:     for (i = 0; i < require.paths.length; i++) {
[19:10] piscisaureus:       dir = require.paths[i];
[19:10] piscisaureus:       if (subdir && subdir[0] === '/') {
[19:10] piscisaureus:         dir = subdir;
[19:10] piscisaureus:       } else if (subdir) {
[19:10] piscisaureus:         dir = path.join(dir, subdir);
[19:10] piscisaureus:       }
[19:10] piscisaureus: IOW: when a require.paths entry is relative, it is joined with the previous require.paths entry
[19:10] piscisaureus: is that correct?
[19:12] tfe1 has joined the channel
[19:12] mikeal has joined the channel
[19:12] ryah: i didn't write this, but i think that's right
[19:13] grim_fandango has joined the channel
[19:13] Squax has joined the channel
[19:13] grim_fandango: Does anyone know if there is Connect session support for CouchDB?
[19:13] grim_fandango: I can't seem to find it mentioned anywhere but I might be looking in the wrong places.
[19:13] lukegalea: hunterloftis: Sorry, had to run to a meeting. Re: mongoose version. I'm using 1.0. I'll try master. thanks again for your help.
[19:14] ryah: piscisaureus: is the repl working?
[19:14] dtrasbo has joined the channel
[19:14] alek_br has joined the channel
[19:14] piscisaureus: ryah: I wish. no. it will not work anytime soon
[19:14] ryah: piscisaureus: you still need stdout passed to readline?
[19:15] tomhsx_ has joined the channel
[19:15] piscisaureus: ryah: that will be needed anyway
[19:15] shockie has joined the channel
[19:15] piscisaureus: but I'm not really sure about what to do next
[19:15] piscisaureus: The thing is that console io is completely different from network io and file io on windows
[19:16] ryah: right..
[19:16] pquerna: windows <3
[19:16] ryah: piscisaureus: is it sync?
[19:16] piscisaureus: so using either net.* or fs.* with a console fd will utterly fail
[19:16] piscisaureus: ryah: out is always sync
[19:16] ryah: piscisaureus: does it use vt100-style tty?
[19:17] ryah: i mean the same control characters work?
[19:17] piscisaureus: i dont know what that is
[19:17] piscisaureus: control characters work, but ansi escape codes don't
[19:17] ryah: like for color and cursor position?
[19:17] piscisaureus: no those dont work
[19:17] ryah: do you have tcsetattr() ?
[19:18] piscisaureus: i guess not
[19:18] ryah: hm
[19:18] ryah: well, i think we can write a small synchronous stream thing for stdout
[19:18] piscisaureus: I think we should use a dedicated stream type for stdin
[19:19] ryah: is there a way to poll on stdin?
[19:19] emilepetrone has joined the channel
[19:19] jchris has joined the channel
[19:19] piscisaureus: I guess so, yeah
[19:19] piscisaureus: peekchar() or something like that
[19:19] ryah: can you select on it?
[19:19] piscisaureus: nope
[19:19] ryah: :(
[19:19] piscisaureus: on windows can do select only on sockets ever
[19:20] piscisaureus: we could use overlapped i/o
[19:20] ryah: so - we can do a special sync out stream for stdout (avoid net.Stream) and maybe start a separte thread for stdin ?
[19:20] ryah: and use ev_async to notify the main loop?
[19:21] felixge has joined the channel
[19:21] piscisaureus: i think node will already work with stdout correctly if stdio.isStdoutBlocking reports true (it then starts using fs.* methods)
[19:21] ryah: do you have stderr in windows?
[19:21] piscisaureus: yep
[19:21] piscisaureus: works just like stdout
[19:21] jwcooper_ has joined the channel
[19:22] langworthy has joined the channel
[19:22] admc has joined the channel
[19:22] emilepetrone has left the channel
[19:22] piscisaureus: ryah: it hurts my mind, these are some considerations:
[19:23] piscisaureus: - console stdin is different from pipe stdin
[19:24] piscisaureus: - console stdout is also different from pipe stdout is just realize
[19:24] piscisaureus: stdout always blocks
[19:24] piscisaureus: there is no non-blocking io possible on stdin, but asynchronous behaviour can be realized with overlapped i/o
[19:25] AAA_awright_ has joined the channel
[19:25] piscisaureus: however overlapped i/o can't be used in conjunction with select unless you're willing to use multiple threads
[19:26] piscisaureus: btw: http://twitter.com/fearthecowboy/status/22851184251375616 -- I'm eager to hear what his plans are :-)
[19:27] pquerna: cowboys should be feared
[19:28] piscisaureus: ryah: in the end I think we need to have our own vt100 emulation layer
[19:29] piscisaureus: ryah: unless we want to create api functions like tty.setColor and tty.setCursorPosition and the such
[19:29] piscisaureus: ryah: git, mingw, cygwin all have their own vt100 emulation
[19:29] ryah: piscisaureus: lovely
[19:29] piscisaureus: though we can't use that because its GPL
[19:30] ryah: piscisaureus: what is the tty interface in windows? can it do ncurses style stuff?
[19:30] ryah: i mean - is readline even possible?
[19:30] piscisaureus: yes very well
[19:30] losing_ has joined the channel
[19:31] ryah: sure, then we can abstract out the escape codes for clearing lines and moving cursors and what not
[19:31] ryah: (do you know of any docs for that?)
[19:31] SoftwareMaven: Is there a list somewhere of any high traffic sites using node.js?
[19:31] dthompson has joined the channel
[19:32] jpick has joined the channel
[19:33] piscisaureus: ryah: windows console api is at http://msdn.microsoft.com/en-us/library/ms682073%28v=VS.85%29.aspx
[19:33] pquerna: SoftwareMaven: https://github.com/ry/node/wiki
[19:33] pquerna: SoftwareMaven: has a list of quite a few companies/projects
[19:33] pquerna: SoftwareMaven: though its not organized into 'high traffic' sites
[19:35] ryah: piscisaureus: hm - i see
[19:35] tilgovi has joined the channel
[19:35] piscisaureus: ryah: what docs? like http://en.wikipedia.org/wiki/ANSI_escape_code ?
[19:36] jimt_ has joined the channel
[19:37] ryah: oh the fun :)
[19:37] joelklabo has joined the channel
[19:38] isaacs: piscisaureus: re: require.paths joining...  that's, um... weird.
[19:38] ryah: yeah, i guess we should do tty.clearLine() etc
[19:38] ryah: tty.clearLine(process.stdout)
[19:38] beta_ has joined the channel
[19:38] ryah: on windows it'll ignore the parameter and use the bound function
[19:39] ryah: it would be super awesome if we actually had readline working in windows though
[19:40] ryah: piscisaureus: it sounds like the biggest problem is to poll on stdin
[19:40] richcollins has joined the channel
[19:41] jimt has joined the channel
[19:41] tomhsx has joined the channel
[19:41] falconair has joined the channel
[19:42] falconair: hi, is there a channel for express.js? I can't figure out how to ... serve a static html page!
[19:42] eee_c has joined the channel
[19:43] piscisaureus: ryah: that's correct
[19:43] piscisaureus: ryah: it isn't that difficult to hack something together that somwhat works
[19:44] broofa has joined the channel
[19:44] trotter has joined the channel
[19:44] piscisaureus: I mean, you could create a socketpair and use a separate thread to pump stdin into it, and then select on the other end
[19:45] piscisaureus: but it will be slow and hacky
[19:45] piscisaureus: isaacs: I think I misunderstood the paths part. sorry for the fuzz
[19:45] isaacs: piscisaureus: np
[19:45] isaacs: piscisaureus: the issue is that the repl sets cwd() as the require path.
[19:45] isaacs: piscisaureus: er, not as the require path, but as the base for relative requires
[19:47] Aria has joined the channel
[19:47] piscisaureus: isaacs: ok. it wasn't really that important. I was just replacing string magic + path.join by path.resolve throughout node
[19:47] lukegalea has joined the channel
[19:47] isaacs: piscisaureus: kewl
[19:48] deepthawtz has joined the channel
[19:48] hellp has joined the channel
[19:48] piscisaureus: isaacs: kewl is not in my dictionary. please restate your comment 
[19:49] isaacs: piscisaureus: kewl is cool, spelled without over-taxing the right ring finger.
[19:49] isaacs: ;)
[19:49] niklasfi: hello, could you have a look at this snippet: http://ideone.com/HIrBo ? what i am basically trying to do there is to send a file from my harddisk to the user. My snipet works with a "hello world!" textfile, but it fails for larger (PDF)-files. can anyone tell me what i am missing?
[19:49] piscisaureus: ah :-)
[19:50] isaacs: niklasfi: use sys.pump() or Stream#pipe
[19:51] isaacs: niklasfi: var fstr = fs.createReadStream(filename); fstr.on("error", handleTheError); sys.pump(fstr, response);
[19:51] ryah: piscisaureus: why will that be slow?
[19:51] isaacs: niklasfi: this way, you skip the string conversion, and just use buffers.
[19:51] ryah: piscisaureus: i actually have code for that
[19:52] piscisaureus: ryah: I don't know. I use that with child processes and for child processes it is slow.
[19:52] niklasfi: isaacs: i was not trying to convert strings... i just wanted to stick to raw binary. i want to be able to throttle my clients. how would i realize that with stream.pipe?
[19:53] Max-Might has joined the channel
[19:53] ryah: piscisaureus: https://github.com/ry/node/tree/v0.1.12/deps/coupling
[19:53] ryah: this does a blocking read() on stdin
[19:53] alathon has joined the channel
[19:53] onar has joined the channel
[19:53] ryah: in a separate thread
[19:53] isaacs: niklasfi: well, stream.pipe or sys.pump will throttle the read ops based on what the client can handle (tcp backpressure)
[19:54] ryah: piscisaureus: and has a pipe to the main thread
[19:54] isaacs: niklasfi: if you want to do that manually, check out the code of sys.pump.  it's a pretty simple function.
[19:54] ryah: ring buffer and everything
[19:54] isaacs: niklasfi: but basically, the {encoding:"binary"} is unnecessary
[19:54] jelveh has joined the channel
[19:54] piscisaureus: ryah: we could use that for the time being, but it won't just work. because you cannot select on a pipe either.
[19:55] augustl_eee has joined the channel
[19:55] ryah: piscisaureus: yeah, you'd need to make it into a socket
[19:55] pekim: falconair: Have you got the static provider middleware configured?
[19:55] jamesarosen has joined the channel
[19:55] pekim: app.configure(function() {
[19:55] augustl_eee: is there something in the fs module to check if a file exists?
[19:55] pekim:     ...
[19:55] pekim:     app.use(express.staticProvider(__dirname + '/public'));
[19:55] pekim:     ...
[19:55] pekim: });
[19:55] niklasfi: isaacs: ... thanks. it was "encoding: 'binary'" and i was thinking that i was extra cautious
[19:55] qnt4b: SoftwareMaven: saw this the other day: http://twitter.com/jussil/status/12048190433918976
[19:56] jimt has joined the channel
[19:56] kriszyp__ has joined the channel
[19:56] piscisaureus: ryah: ot - i'm not really twittering actually. maybe some day.
[19:58] piscisaureus: ryah: far-future thinking. can node_net eventually switch to exposing completion notifications (instead of readyness notifications)?
[19:58] niklasfi: isaacs: i just looked up what pipe does. is: if (dest.writable) if(false===dest.write(chunk)) dest.write(chunk)
[19:59] dnyy has left the channel
[20:00] kriszyp__ has joined the channel
[20:00] ryah: piscisaureus: perhaps
[20:01] piscisaureus: ryah: if (answer != 'over my dead body') bert = 'happy'
[20:02] ryah: it also used to do that
[20:02] femtooo has joined the channel
[20:02] piscisaureus: ryah: why no more?
[20:02] Huvet has left the channel
[20:03] AAA_awright has joined the channel
[20:03] ryah: i thought it would be better to write it in js rather than c
[20:03] springmeyer: is there any way to pass a command to node on the command line like $ node -c "require('./foo')"  like $ python -c "import foo" ?
[20:06] SubStack: springmeyer: -e
[20:06] springmeyer: SubStack: ah, thanks!
[20:07] springmeyer: I see that now with $ man node, but it was not listed with $ node --help
[20:08] creationix: is there a socks client for node anywhere?
[20:08] jpick has joined the channel
[20:09] maushu has joined the channel
[20:09] MattJ: xSmurf: Around?
[20:09] xSmurf: ohai
[20:10] creationix: or my question is: could node's tcp stack be monkey patched enough to splice in a socks client
[20:10] yozgrahame has joined the channel
[20:10] ajpiano has joined the channel
[20:10] creationix: so that it would be transparent
[20:10] MattJ: creationix: did you manage to get the SOCKS5 stuff working?
[20:10] MattJ: er
[20:10] creationix: haven't tried yet
[20:10] xSmurf: nope
[20:10] MattJ: stop confusing me by talking about SOCKS
[20:10] MattJ: xSmurf: Did you? :)
[20:10] MattJ: xSmurf: Could you send me the link to your code again? I have some time to review it now
[20:10] xSmurf: nope :/
[20:10] cafesofie has joined the channel
[20:11] xSmurf: I'm 100% sure something in node is fucked
[20:11] SubStack: socks5 eh?
[20:11] dnyy has joined the channel
[20:11] alek_br has joined the channel
[20:11] SubStack: creationix: I have some socks5 node code sitting around
[20:11] xSmurf: I can see the hash being passed on the NIC and yet all the alpha characters are missing in the callback data buffer!
[20:11] xSmurf: SubStack: yes? I'm interested too
[20:12] creationix: SubStack: cool, I don't need it right now, just wondering how hard it would be if I needed it
[20:12] SubStack: https://github.com/substack/node-prox 
[20:12] konobi: creationix: tsocks
[20:12] xSmurf: MattJ: I matched my code against some test suit someone linked me on jdevs, seemed to match perfectly
[20:12] SubStack: lots of bugs still since I put that project on the backburner while I build some other stuff
[20:12] creationix: SubStack: do you think it would possible to hijack the normal tcp client to make it transparent to existing code?
[20:12] SubStack: I'll revisit it though
[20:13] matt_c has joined the channel
[20:13] SubStack: creationix: you can get pretty close
[20:13] xSmurf: MattJ: the other weird part is if I ignore the weird hash issue and send the activate IQ anyway, I get a SID already in used error
[20:13] creationix: I guess worst case, you require net and replace all it's properties with wrapped versions
[20:13] MattJ: xSmurf: Do you have a link to your code? I had it open in a tab, but had to kill my browser since
[20:13] SubStack: that is pretty much what prox does
[20:13] xSmurf: yeah gimme a sec
[20:14] halfhalo: ACTION thinks node should be ported to killer nics
[20:14] creationix: SubStack: right, but replace the properties on the original object that require('net') returns
[20:15] SubStack: creationix: well you'd need to bind the socks5 server info somehow
[20:15] SubStack: creationix: and it only really makes sense to wrap over createClient, since createServer would require tons more custom handling
[20:16] creationix: true
[20:16] halfhalo: 400mhz dedicated node CPU.... Mmmmmm
[20:16] creationix: halfhalo: that's practically a pixi!
[20:16] halfhalo: Yup
[20:16] halfhalo: But on a nic
[20:16] creationix: well, except the pixi has webos using most it's resources
[20:17] halfhalo: And now on mobos
[20:17] mattc has joined the channel
[20:19] jbpros has joined the channel
[20:19] mattmob has joined the channel
[20:20] SubStack: creationix: you might be able to get away with just net.createConnection = socks5.createConnection('socks5.server.moo', port).connect
[20:20] tlrobinson has joined the channel
[20:20] creationix: SubStack: I wonder if http clients would then use the new client
[20:20] creationix: or if they already have a reference to the old method
[20:21] creationix: (new http clients of course)
[20:21] SubStack: I can test that if you like
[20:21] teemow has joined the channel
[20:21] creationix: that would be fun
[20:21] creationix: I have to go in a bit though
[20:22] teddy_ has joined the channel
[20:22] aklt has joined the channel
[20:22] aho has joined the channel
[20:24] siculars has joined the channel
[20:25] piscisaureus: isaacs: ryah: 
[20:25] piscisaureus: here are three patches to review https://github.com/piscisaureus/node/compare/ry...master
[20:25] piscisaureus: - it adds path.resolve and drops path.split and path.normalizeArray
[20:25] piscisaureus:   (path.join is still there but only path.resolve is really windows-safe)
[20:25] piscisaureus: - fs.realpath is completely reworked to not rely on path.split
[20:25] piscisaureus:   (currently on windows realpath is basically resolve+stat. When windows gets lstat/readlink support it should be easy to use the posix version for windows too)
[20:25] piscisaureus: - throughout node, path.join is replaced by path.resolve.
[20:25] piscisaureus:   (except for the argv[0] case where isaacs' patch needs to land first)
[20:25] piscisaureus: - path tests are fixed to be correct on windows. realpath tests are untouched, they still fail on windows.
[20:25] piscisaureus: - when this lands, the 'realpath modules' patch that was backed out two days ago can come back in
[20:25] Ond has joined the channel
[20:26] vineyard has joined the channel
[20:26] SubStack: hmmm could be some more bugs in prox
[20:29] ph^ has joined the channel
[20:29] montylounge has joined the channel
[20:33] saikat has joined the channel
[20:36] aguynamedben has joined the channel
[20:37] bingomanatee_: When I was at the node camp in SF someone mentioned that they had a library for simplifying url cleint requests - does that ring any bells?
[20:37] adambeynon has joined the channel
[20:38] SubStack: like a WWW::Mechanize for node?
[20:38] pkrumins: i should finish node-browser -_-
[20:39] SubStack: pkrumins: you could throw it together with chainsaw
[20:39] pkrumins: the most troubling part is cookie parsing
[20:39] hunterloftis: tjholowaychuk: Back - ok so, did you think of a reason not to expose cookies to session instances?
[20:39] pkrumins: that's what keeping me from finishing it
[20:39] mikedeboer has joined the channel
[20:41] qnt4b has joined the channel
[20:43] SamuraiJack has joined the channel
[20:44] bingomanatee_: My client reading function ... isn't. No response coming back: https://gist.github.com/768541
[20:45] jimt has joined the channel
[20:45] MikhX has joined the channel
[20:46] xSmurf: SubStack: what's this Binary lib that your socks lib depends on?
[20:47] overthemike has joined the channel
[20:47] SubStack: https://github.com/substack/node-binary 
[20:47] SubStack: it's on npm too
[20:47] xSmurf: right
[20:47] xSmurf: thx
[20:47] overthemike has left the channel
[20:49] bingomanatee_: found answer - I didn't force request.end() .. not sure why U should have to but you do. 
[20:50] ph^ has joined the channel
[20:53] Aria: Because you can send data with the request.
[20:53] yozlet has joined the channel
[20:53] yozlet has left the channel
[20:54] FMJag has joined the channel
[20:55] sudoer has joined the channel
[20:56] deepthawtz has joined the channel
[20:58] ryah: piscisaureus: isaacs is going to review it
[21:00] beta_ has joined the channel
[21:00] admc has joined the channel
[21:02] femtoo has joined the channel
[21:03] namelessnotion has joined the channel
[21:05] Hello71 has joined the channel
[21:06] isaacs: piscisaureus: hey, just so i know what i can skip over, did you chance the posix versions at all, besides adding a level of indentation?
[21:08] ryah: isaacs: git diff -b 
[21:08] isaacs: oh, that ignores indentation?
[21:08] pedrobelo has joined the channel
[21:08] piscisaureus: brb
[21:09] astoon has joined the channel
[21:09] ryah: yeah
[21:09] ryah: <3 git
[21:09] pkrumins: i hate pants!
[21:10] charlenopires has joined the channel
[21:10] gkatsev: pkrumins: kilts?
[21:10] pkrumins: i hate kilts, too
[21:11] bentruyman has joined the channel
[21:11] JusticeFries_ has joined the channel
[21:11] gkatsev: you must have fit in well in that bottom-less party NPH had in harold and kumar escape
[21:12] kylejginavan has joined the channel
[21:13] kylejginavan has joined the channel
[21:13] piscisaureus: isaacs: ehm yeah they're completely reworked actually
[21:13] kylejginavan has left the channel
[21:14] piscisaureus: you mean realpath I guess?
[21:14] isaacs: piscisaureus: yeah, i see the changes to the otehr path stuff
[21:15] charlenopires has joined the channel
[21:16] broofa has joined the channel
[21:16] deepthawtz has joined the channel
[21:25] Tim_Smart has joined the channel
[21:27] springmeyer_ has joined the channel
[21:28] Aron has joined the channel
[21:29] matt_c_ has joined the channel
[21:29] Aron- has joined the channel
[21:30] dsirijus has joined the channel
[21:31] davida has joined the channel
[21:32] liar has joined the channel
[21:33] dantalizing has joined the channel
[21:35] davidascher has joined the channel
[21:35] bartt has joined the channel
[21:37] ybit has joined the channel
[21:42] opengeard has joined the channel
[21:42] CIA-121: node: 03Ryan Dahl 07master * r22561df 10/ doc/index.html : Joyent link goes to no.de - http://bit.ly/giL21x
[21:43] CIA-121: node: 03Ryan Dahl 07master * rb6dafc1 10/ lib/repl.js : 
[21:43] CIA-121: node: Allow for two streams in REPL
[21:43] CIA-121: node: Towards windows compatibility. - http://bit.ly/ekZIyH
[21:43] booths has joined the channel
[21:43] aconbere has joined the channel
[21:44] booths: How would one go about changing the timezone in node... All my Dates are GMT, but typing date into the cli return EST.
[21:44] gkatsev: it uses whatever the machine you are on uses
[21:44] booths: Well my machine is telling me EST and node REPL is telling me GMT
[21:45] Insanity5902 has joined the channel
[21:45] ryah: piscisaureus: http://bit.ly/ekZIyH
[21:45] masahiroh has joined the channel
[21:46] er1c_ has joined the channel
[21:46] Insanity5902 has joined the channel
[21:46] lukegalea has joined the channel
[21:46] binarypie has joined the channel
[21:46] piscisaureus: ryah: kewl (just learned that from isaacs)
[21:47] gkatsev: booths: oh, weird
[21:48] mikeal has joined the channel
[21:48] booths: Well... I guess it only _really_ matters for when I"m converting it to SQL format... I just need to subtract 5 then... but would be nice if I could change it somehow
[21:52] hornairs has joined the channel
[21:52] kevwil has joined the channel
[21:53] sanslocust has joined the channel
[21:55] sanslocust: traits requires node@*, You have: node@v0.2.6. that mean anything to anyone?
[21:56] sanslocust: trying to npm install couchdb
[21:56] sechrist: your npm may be old
[21:56] piscisaureus: ryah: what is the use of tty.open?
[21:56] sechrist: npm install npm?
[21:57] sechrist: piscisaureus: I use for opening ssh
[21:57] sechrist: and something I whipped up that works kind of like expect
[21:57] isaacs: sanslocust: sechrist is right. npm install npm, then it should work, most likely
[21:58] ryah: piscisaureus: to create a new pty
[21:58] sanslocust: tried that no good. I just installed npm too, so it only updated to the latest version
[21:58] ryah: piscisaureus: it's not used by node and i think you can ignore it
[21:58] isaacs: sanslocust: what's npm -v?
[21:58] isaacs: `npm -v`
[21:58] sanslocust: 0.2.13-3
[21:59] sanslocust: that's current I guess?
[22:00] isaacs: sanslocust: yeah
[22:00] isaacs: sanslocust: weird that that's the error you're getting.
[22:01] isaacs: sanslocust: also, it looks like promised-io has bad data.
[22:01] isaacs: sanslocust: bug Kris Zyp about it
[22:01] isaacs: http://packages.dojofoundation.org/promised-io
[22:01] jamund has joined the channel
[22:02] jelveh has joined the channel
[22:02] femtooo has joined the channel
[22:02] pedrobelo has joined the channel
[22:03] dguttman_ has joined the channel
[22:04] broofa has joined the channel
[22:06] piscisaureus: From: Garrett Serack [mailto:garretts@microsoft.com] 
[22:06] piscisaureus: Subject: RE: FW: NodeJS on Windows : Need some help?
[22:06] piscisaureus: Hey Ryan and Bert,
[22:06] piscisaureus: I just thought I’d drop you a line—we’ve been having quite a few conversations internally regarding Node, and then I found out that a couple folks from Joyent were here a couple days ago—they talked with some other folks in the company, but I didn’t find out about it until today (I’d have loved to been in that meeting :D) .   
[22:06] piscisaureus: Anyway, I just wanted to make sure you both know that I’m working feverishly on getting the time or resources necessary to get node running right on Windows.
[22:06] piscisaureus: G
[22:06] springmeyer_ has joined the channel
[22:07] bmizerany has joined the channel
[22:07] nejucomo has joined the channel
[22:07] piscisaureus: ryah: isaacs: you been there?
[22:07] Druid_ has joined the channel
[22:08] mjr_: Would be fantastic to get help from MS to make node work well on Windows.
[22:11] fangel has joined the channel
[22:12] isaacs: piscisaureus: not i
[22:12] isaacs: mjr_: yes, indeed.
[22:13] isaacs: mjr_: especially if they did that by making Windows run on Unix ;P
[22:13] mjr_: Yeah, you should mention that to them.
[22:14] SubStack: windows 8 is going to run on ARM, so that would be an easy way to do it
[22:14] sanslocust: isaacs: sorry, where is the link between promised-io and traits?
[22:14] googol has joined the channel
[22:15] isaacs: sanslocust: it's just not reporting the error, and ten failing later on incorrectly
[22:15] sanslocust: isaacs: kris zyp has something to do with traits too?
[22:15] sanslocust: ahhh
[22:15] isaacs: couchdb requires promised-io, which is hosted on the dojofoundation's registry, and lacks a "dist-tags" hash
[22:15] isaacs: npm doen'st expect that data to be missing, since the npm jsregistry couchapp requires it
[22:16] sanslocust: ok, i'm with ya
[22:16] isaacs: there is a Difference Of Kind between having a single data source and having more than one.
[22:16] sanslocust: thx
[22:16] isaacs: things get more complicated fast
[22:16] mjr_: It's really hard to imagine how much more complicated they get
[22:16] isaacs: mjr_: omg, i know
[22:16] mjr_: As part of rewriting my python thing in node, I'm also going from 1 of something to n of them.
[22:16] isaacs: mjr_: supporting 2 data stores is NOT twice as complicated as having 1.
[22:17] mjr_: The 1->n issues are so numerous that I can't even imagine what I was thinking 4 months ago.
[22:17] isaacs: it's like, between 1 and 2 there's this exponential jump, and then 3+ is a lot easier
[22:17] mjr_: Might as well just plan for n, doing something for 2 sounds like trouble to me.
[22:17] isaacs: because once you have >1, you might have 10000
[22:17] isaacs: so you just plan on that
[22:17] isaacs: right
[22:17] isaacs: mjr_: well, now there are n package registries, since you can push a redirection doc into the registry
[22:18] mjr_: But your point is, anything more than 1 is so much more than 1 more hardness, even if n=1.
[22:18] googol has joined the channel
[22:18] mjr_: Just being able to have n > 1, suddenly you've entered this other crazy world where simple things are hard.
[22:19] matjas has joined the channel
[22:19] Squax has left the channel
[22:19] mikew3c_ has joined the channel
[22:20] LoRe has joined the channel
[22:20] mjr_: Man, every time I get to use this line in node I smile:  fs.createReadStream(filename).pipe(res)
[22:21] mjr_: One line, metered streaming from disk.
[22:23] piscisaureus: node_stdio.cc#168
[22:23] piscisaureus:     // XXX selecting on tty fds wont work in windows.
[22:23] piscisaureus:     // Must ALWAYS make a coupling on shitty platforms.
[22:23] piscisaureus: Ryah, you knew that all along!
[22:24] tjholowaychuk: mjr_: iron-node
[22:24] tjholowaychuk: haha
[22:24] tjholowaychuk: MS will probably copy it
[22:24] tjholowaychuk: and clame it as their own, and then have 5000 bugs
[22:24] tjholowaychuk: claim *
[22:25] cognominal has joined the channel
[22:25] isaacs: mjr_: yeah, it's pretty rockin
[22:26] bitdrift has joined the channel
[22:26] ryah: piscisaureus: yep :)
[22:27] ryah: but we got rid of that coupling thing later because it was so easy to just select on stdin :)
[22:27] ryah: (coupling is that little lib that i linked you to earlier)
[22:28] ryah: extra thread + blocking read loop
[22:28] ryah: + pipe
[22:28] ryah: (which needs to be a socket, apparently)
[22:31] Ond has left the channel
[22:32] mfernest has joined the channel
[22:32] echosystm has joined the channel
[22:33] springmeyer_ has joined the channel
[22:34] ryah: piscisaureus: can you use process.platform instead of require('os').isWindows ?
[22:34] SubStack: there's an 'os' module? rawk \m/
[22:34] kriszyp has joined the channel
[22:35] nefD: whee! 3d demo with particles and lighting :D http://www.sevrd.com/code/three/demo3.html
[22:35] piscisaureus: ryah: what is the value of process.platform on windows?
[22:35] mraleph has joined the channel
[22:35] kriszyp: hey sanslocust, me and isaacs were chatting about the issue on email, guess chat might be more efficient...
[22:35] piscisaureus: ryah: why btw?
[22:36] ryah: piscisaureus: i don't want to load the os module for everything
[22:36] rsms has joined the channel
[22:36] piscisaureus: ryah: is it heavy?
[22:36] piscisaureus: ryah: but, sure, np.
[22:37] ryah: no, but it's more than process.platform
[22:37] ryah: piscisaureus: process.platform is win32 for you, or?
[22:38] piscisaureus: D:\nodejs\node-src>node -e "process.platform"
[22:38] piscisaureus: win32
[22:38] ryah: :)
[22:38] amerine has joined the channel
[22:38] mfernest: process.platform -> PLATFORM on SunOS
[22:39] piscisaureus: ryah: will it be win64 on win64?
[22:40] piscisaureus: ryah: will change that after isaacs finishes his review
[22:41] niklasfi has left the channel
[22:41] hosh_work has joined the channel
[22:41] hosh_work: Has anyone played with using Backbone.js inside of Node.js?
[22:41] peon has joined the channel
[22:43] felixge has joined the channel
[22:43] felixge has joined the channel
[22:44] isaacs: ryah: with bd19a18 cherry-picked into it, piscisaureus/master builds fine and npm still passes its tests.
[22:44] sanslocust: kriszyp: let me know if you need any more details
[22:46] piscisaureus: isaacs: your patch could be simplified a little now:
[22:46] piscisaureus: - if (!isWindows && argv0.indexOf('/') !== -1 && argv0.charAt(0) !== '/') {
[22:47] piscisaureus: -    process.argv[0] = path.join(cwd, process.argv[0]);
[22:47] piscisaureus: + if (!isWindows && argv0.indexOf('/') !== -1) {
[22:47] piscisaureus: +    process.argv[0] = path.resolve(process.argv[0]);
[22:47] isaacs: piscisaureus: no, we DO want to resolve if you do ./node
[22:47] isaacs: piscisaureus: oh, i see, you swapped cwd
[22:47] isaacs: er, swapped s/join/resolved/
[22:48] isaacs: piscisaureus: but won't that just still attempt to resolve it if you type "node", turning it into cwd+"node"?
[22:48] piscisaureus: if (!isWindows && argv0.indexOf('/') !== -1) { will prevent that, right?
[22:48] sonnym has joined the channel
[22:48] isaacs: oh, right
[22:49] isaacs: so path.resolve("./node") is the same as path.join(cwd, "node")?
[22:49] isaacs: right?
[22:49] piscisaureus: yes
[22:49] isaacs: and path.resolve("/bin/node") just returns /usr/bin/node
[22:49] isaacs: (without the /usr, typo)
[22:49] piscisaureus: yes
[22:50] piscisaureus: and path.resolve('/dir2', '/usr/4') returns /usr/4
[22:50] isaacs: i'm really confused by path.resolve :)
[22:50] RockShox: is there any kind of headless browser plugin for node
[22:50] RockShox: i want to take a snapshot of a page
[22:51] piscisaureus: isaacs: path.resolve is great :-p
[22:51] piscisaureus: it works like this:
[22:51] isaacs: oic, it's like "cd with these arguments, and then do pwd"
[22:51] piscisaureus: yeah
[22:51] isaacs: cd args[0], cd args[1], ... , pwd
[22:51] piscisaureus: exactly that
[22:51] isaacs: ok
[22:51] isaacs: the docs should explain it like that.  i think that's easy to grok.
[22:51] RockShox: we call that normalize usually
[22:51] RockShox: not resolve
[22:51] isaacs: then it makes sense that cwd is prepended
[22:52] piscisaureus: isaacs: prepending cwd was just to cater windows
[22:52] isaacs: piscisaureus: yeah, but it's good to find the semantic overlap and leverage that, i think
[22:52] piscisaureus: isaacs: yeah
[22:53] isaacs: in any event, i think that for the argv0 patch, it doesn't make much of a difference.  the way i did it, ti's basically just preventing a function call when you start it with /, but equivalent either way.
[22:53] piscisaureus: yeah. leave it alone
[22:53] piscisaureus: it's fine here because it is only called on windows
[22:54] isaacs: ok.  other than that, i mean, i can't vouch for how it actualy works on windows, but it doesn't seem to disturb anything as far as i can tell.
[22:54] piscisaureus: but generally I want people & node to use resolve because it handles windows paths correctly in all cases
[22:54] isaacs: same tests all pass.
[22:54] isaacs: piscisaureus: yeah
[22:54] isaacs: piscisaureus: the good thing about join() is that it *doesn't* respect slashed path parts.
[22:55] isaacs: so you can do path.join(base, "/foo") and still be under "base"
[22:55] piscisaureus: sure. but when would you need that?
[22:55] piscisaureus: not for safety
[22:55] isaacs: a package manager :)
[22:55] isaacs: actually, you need a second join if you need safety
[22:55] isaacs: path.join(base, path.join("/", thing))
[22:55] isaacs: so that thing can't have ".." in it
[22:56] piscisaureus: isaacs: ah
[22:56] isaacs: but mostly for convenience, or to prevent innocent mistakes, which are far more common than malicious intent.
[22:56] isaacs: npm's main job is a data validator
[22:56] piscisaureus: isaacs: :-)
[22:58] piscisaureus: isaacs: seriously, this is the first valid use case I encountered
[23:00] hunterloftis has joined the channel
[23:00] piscisaureus: isaacs: all over place, join is used where the intent was resolve. sometimes it will be assumed that the second path is relative, other times join is skipped when the second part is already absolute
[23:00] bingomanatee_ has joined the channel
[23:00] blueadept has joined the channel
[23:00] isaacs: piscisaureus: i use join a *lot* in npm.
[23:01] isaacs: piscisaureus: almost 100% of the time, the first arg is an absolute path
[23:01] creationix: I also use join with absolute paths all the time
[23:01] isaacs: creationix: right, but join("/foo", "/bar") --> /foo/bar
[23:01] dmcquay has joined the channel
[23:01] isaacs: resolve("/foo", "/bar") --> /bar
[23:02] isaacs: join("foo") --> "foo".  resolve("foo") --> join(cwd, "foo")
[23:02] jbpros: is it possible to do something like expresso's `assert.response()' with jamsine-node?
[23:02] piscisaureus: isaacs: join("foo") should be normalize("foo")
[23:02] jbpros: I mean jasmine-node.
[23:02] isaacs: piscisaureus: ok, but join("fo", "bar") is "foo/bar", not cwd/foo/bar
[23:03] creationix: isaacs: right, that's what I would expect
[23:03] creationix: I think of join as a smart path concat
[23:03] isaacs: i've used join() instead of appending with "/" specificaly because i didn't wnat to go through and replace "/" with "\\" for windows support
[23:03] creationix: not a resolver
[23:03] isaacs: creationix: right, that's what it is
[23:03] isaacs: ideally, on windows, it'll be smart about joining with "\\" instead of "/"
[23:03] piscisaureus: isaacs: it is now
[23:03] isaacs: piscisaureus++
[23:03] v8bot:  isaacs has given a beer to piscisaureus. piscisaureus now has 2 beers.
[23:03] creationix: that's what I always used join for on python
[23:03] bingomanatee_: Can you parse HTML pages with jsdom or is it only for creating markup?
[23:04] creationix: used to deploy python apps to linux and windows in a past life
[23:04] creationix: bingomanatee it uses a html parser
[23:04] SwiftLayer has joined the channel
[23:04] piscisaureus: isaacs: well. we'll keep join around then :-)
[23:04] tjholowaychuk: bingomanatee_: htmlparser is the lib
[23:04] bingomanatee_: thx
[23:04] tjholowaychuk: node-htmlparser on github
[23:04] bingomanatee_: can you npm it
[23:05] bingomanatee_: ?
[23:05] JusticeFries has joined the channel
[23:05] creationix: tjholowaychuk: is that the good one that supports html5 style parsing?
[23:05] tjholowaychuk: creationix: I dont think so, there is one named html5 (i think)
[23:06] dguttman has joined the channel
[23:06] JusticeFries has joined the channel
[23:07] CrypticSwarm has joined the channel
[23:07] caligula_ has joined the channel
[23:07] JusticeFries_ has joined the channel
[23:07] jimt has joined the channel
[23:08] joshholt_ has joined the channel
[23:08] adamholt has joined the channel
[23:09] SoftwareMaven has joined the channel
[23:09] piscisaureus: you can't work on node without being on irc. that should be documented :-p
[23:09] KrisJordan: is there a quick/dirty way to check if a given script was run from command line node or required by another script?
[23:09] SubStack: fact
[23:09] piscisaureus: where can I see the beers wall of fame?
[23:10] mbrochh has joined the channel
[23:10] SubStack: KrisJordan: process.argv[2] === __filename I think
[23:10] SubStack: verifying...
[23:10] CIA-121: node: 03isaacs 07master * r48334dc 10/ src/node.js : 
[23:10] CIA-121: node: Fix regression introduced in fe804d9b
[23:10] CIA-121: node: It breaks argv[0] on posix systems, and makes it so that npm can't
[23:10] CIA-121: node: determine whether node was run from an explicit location, or via "node",
[23:10] CIA-121: node: so the configs default improperly.
[23:10] CIA-121: node: If on windows, don't do this behavior. On posix, go back to the old
[23:10] piscisaureus: v8bot: piscisaureus
[23:10] v8bot: piscisaureus: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[23:10] CIA-121: node: behavior. - http://bit.ly/hSWYnh
[23:10] piscisaureus: v8: piscisaureus
[23:10] v8bot: piscisaureus: ReferenceError: piscisaureus is not defined
[23:11] piscisaureus: piscisaureus--++
[23:11] v8bot:  piscisaureus has given a beer to piscisaureus--. piscisaureus-- now has 1 beers.
[23:11] piscisaureus: hmm
[23:11] piscisaureus: beers
[23:12] piscisaureus: v8bot: ?
[23:12] v8bot: piscisaureus: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[23:12] piscisaureus: v commands
[23:12] piscisaureus: v8 commands
[23:12] v8bot: piscisaureus: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[23:12] piscisaureus: v8: commands
[23:12] v8bot: piscisaureus: ReferenceError: commands is not defined
[23:12] KrisJordan: @Substack thanks 
[23:12] creationix: v8: (![]+[])[+[]]+(![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]
[23:12] v8bot: creationix: "fail"
[23:12] thebigbad: v8bot: v commands
[23:12] v8bot: thebigbad: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[23:13] thebigbad: v8bot: `v commands
[23:13] v8bot: thebigbad: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[23:13] thebigbad: I give up
[23:13] piscisaureus: `v commands
[23:13] v8bot: piscisaureus: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[23:13] SubStack: KrisJordan: ah whoops, process.argv[1]
[23:13] SubStack: yep that seems to work
[23:13] piscisaureus: `v beers
[23:13] v8bot: piscisaureus:  has 0 beers.
[23:13] piscisaureus: my beers are gone!
[23:13] creationix: v8: 9999999999999999
[23:13] v8bot: creationix: 10000000000000000
[23:13] KrisJordan: awesome 
[23:14] piscisaureus: oh wait I just had them gheghe
[23:14] ako has joined the channel
[23:14] piscisaureus: `v beers isaacs
[23:14] v8bot: piscisaureus: isaacs has 6 beers.
[23:14] kriskowal: v8 Object.keys(this)
[23:14] v8bot: kriskowal: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[23:14] creationix: kriskowal: need the :
[23:14] kriskowal: yeh
[23:14] piscisaureus: v8: this.toString()
[23:14] v8bot: piscisaureus: "[object global]"
[23:14] SubStack: `v beers SubStack
[23:14] v8bot: SubStack: SubStack has 2 beers.
[23:14] kriskowal: v8: Object.keys(this)
[23:14] v8bot: kriskowal: []
[23:15] piscisaureus: `v beers ryah
[23:15] v8bot: piscisaureus: ryah has 1 beers.
[23:15] piscisaureus: too little
[23:15] creationix: v8: Object.getOwnPropertyNames(this)
[23:15] SubStack: v8: Object.getOwnPropertyNames(this)
[23:15] v8bot: creationix: ["TypeError", "decodeURI", "print", "parseFloat", "Number", "URIError", "encodeURIComponent", "RangeError", "ReferenceError", "RegExp", "Array", "isNaN", "console", "Date", "Infinity", "Boolean", "Error", "NaN", "execScript", "String", "Function", "Math", "undefined", "encodeURI", "escape", "unescape", "decodeURIComponent", "EvalError", "SyntaxError", "Object", "eval", "parseInt", "JSON", "isFinit [Output truncated...]
[23:15] v8bot: SubStack: ["TypeError", "decodeURI", "print", "parseFloat", "Number", "URIError", "encodeURIComponent", "RangeError", "ReferenceError", "RegExp", "Array", "isNaN", "console", "Date", "Infinity", "Boolean", "Error", "NaN", "execScript", "String", "Function", "Math", "undefined", "encodeURI", "escape", "unescape", "decodeURIComponent", "EvalError", "SyntaxError", "Object", "eval", "parseInt", "JSON", "isFinit [Output truncated...]
[23:15] piscisaureus: ryah++
[23:15] v8bot:  piscisaureus has given a beer to ryah. ryah now has 2 beers.
[23:15] SubStack: hahah
[23:15] creationix: lol
[23:15] piscisaureus: we should have nodebot
[23:16] creationix: v8: parseInt('tn64jeyta', 35).toString(36)
[23:16] v8bot: creationix: "noderocks"
[23:16] creationix: poor mans encryption
[23:17] piscisaureus: `v commands
[23:17] v8bot: piscisaureus: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[23:17] piscisaureus: `v git
[23:17] v8bot: piscisaureus: Cairo - Windows Shell Alternative - Home - http://cairoshell.github.com/
[23:18] piscisaureus: `v help
[23:18] v8bot: piscisaureus: For a list of commands, type "`v commands".  For help on a specific command, type "`v help <command>".						Join #v8bot for more support.
[23:18] piscisaureus: `v help git
[23:18] v8bot: piscisaureus: git Command: Searches GitHub and returns the first result. Usage: `v git <search>. Optionally: `v git <search> @ <nick>
[23:18] piscisaureus: `v help google
[23:18] v8bot: piscisaureus: google Command: Use "`v google <search query>" to perform a quick Google search. Only the first result will be returned. 					Also, append "@ <nick>" to direct the result to a specific user.
[23:19] jakehow has joined the channel
[23:20] w0rse has joined the channel
[23:20] piscisaureus: `v google readconsole msdn
[23:20] v8bot: piscisaureus: ReadConsole Function (Windows) - http://msdn.microsoft.com/en-us/library/ms684958(v=vs.85).aspx
[23:20] wdperson has joined the channel
[23:22] wdperson has joined the channel
[23:23] amerine has joined the channel
[23:25] paulrobinson has joined the channel
[23:25] paulrobinson_ has joined the channel
[23:26] eee_c has joined the channel
[23:27] jimt_ has joined the channel
[23:29] andoma has joined the channel
[23:29] andoma: hi, what's the idiomatic way of doing config files for node.js projects?
[23:30] piscisaureus: andoma: stuff json in a file
[23:31] creationix: no, stuff js in a file and require it
[23:31] creationix: then you don't have to quote strings
[23:31] creationix: and it can load other data if needed
[23:31] andoma: creationix: yeah, that's my idea too.. just wanted to check around
[23:32] mjr_: And you can have comments
[23:32] andoma: mjr_: good point yes ..
[23:32] creationix: json is great for stuff going over the wire or coming from untrusted sources
[23:32] mjr_: I like the require("./config") scheme quite a bit.
[23:32] creationix: but config files are much better with plain js
[23:32] c4milo has joined the channel
[23:32] andoma: mjr_: and then the file just defines a global variable like config: { ..... }
[23:33] andoma: or something
[23:33] creationix: andoma: module.exports = {...}
[23:33] creationix: and then in your file
[23:33] creationix: var config = require('./config')
[23:33] andoma: k
[23:33] paulrobinson has joined the channel
[23:33] [[zz]] has joined the channel
[23:34] aconbere has joined the channel
[23:38] ryah: piscisaureus: does "make lint" work for you on windows?
[23:40] piscisaureus: ryah: didn't know it existed, but it works!
[23:40] ryah: piscisaureus: sweet. python ftw
[23:41] piscisaureus: ryah. hmm. Found 376 errors, including 90 new errors, in 29 files (233 files OK).
[23:41] piscisaureus: it is not used so often is it?
[23:41] ryah: piscisaureus: nope
[23:41] ryah: it's new
[23:42] jimt has joined the channel
[23:42] CIA-121: node: 03Bert Belder 07master * r7c731ec 10/ (doc/api/path.markdown lib/path.js test/simple/test-path.js): 
[23:42] CIA-121: node: Path.resolve, path module windows compatibility
[23:42] CIA-121: node: Removes path.normalizeArray() and path.split() - http://bit.ly/hdUnvv
[23:42] CIA-121: node: 03Bert Belder 07master * rdea2331 10/ lib/fs.js : Rework fs.realpath, primordal windows compatibility - http://bit.ly/i0I671
[23:42] CIA-121: node: 03Bert Belder 07master * r1ac133e 10/ (lib/repl.js src/node.js): 
[23:42] CIA-121: node: Replace string magic + path.join by path.resolve
[23:42] CIA-121: node: Because path.resolve is more elegant and windows-safe. - http://bit.ly/ie6Xsu
[23:45] aconbere has joined the channel
[23:45] richcollins has joined the channel
[23:45] thiagodantas has joined the channel
[23:46] thiagodantas has left the channel
[23:47] jimt_ has joined the channel
[23:50] dida has joined the channel
[23:51] aconbere: anyone used mongo-native to run map reduce jobs?
[23:52] skm has joined the channel
[23:53] aconbere: hmpf I think I found it
[23:53] piscisaureus: can anyone help me with waf?
[23:53] piscisaureus: If I change a .h file that is included by a .cc file, it detects that and rebuilds the appropriate files.
[23:53] piscisaureus: But if I change a .cc file that is included by a .cc file, it doesn't rebuild.
[23:54] piscisaureus: Is it possible to change that?
[23:55] MattDiPasquale has joined the channel
[23:55] sivy has joined the channel
[23:57] jashkenas has joined the channel
[23:57] bingomanatee_: Whats the best way to run a node script line by line and see the state of variables?
[23:58] ryah: piscisaureus: rather branch in wscript and add the _win.cc file to node.sources
[23:58] Aria: node-inspector's neat.
[23:58] ryah: bingomanatee_: in master   "node debug script.js"
[23:59] bingomanatee_: when you say "in master" you mean in the 2.6 branch?
