[00:00] sebastia_ has joined the channel
[00:01] sebastia_ has joined the channel
[00:02] achiu has joined the channel
[00:02] mjr_: micheil: how long do you think it'll be before your update to websocket-server?
[00:02] mjr_: node-inspector is broken in the latest chrome
[00:04] dmojoryder has joined the channel
[00:05] LordMetroid: Success, I am getting closer and closer to my application framework by the minute
[00:05] LordMetroid: Now I will have to go to bed though :(
[00:05] CoverSlide: ACTION tucks LordMetroid in
[00:05] [[zz]] has joined the channel
[00:05] CoverSlide: nighty-night
[00:06] micheil: mjr_: no idea yet.
[00:06] micheil: mjr_: I've got to re-implement every websocket draft in the wild (75, 76, 07, 08)
[00:07] micheil: mjr_: and I need to design the API to node-webscoket-protocol
[00:07] TooTallNate: micheil: that sucks :O
[00:07] CoverSlide: BAM! >> http://en.wikipedia.org/wiki/WebSocket#draft-ietf-hybi-thewebsocketprotocol-06
[00:07] micheil: I'm going to be working a lot on it over the next few weeks thanks to sponsorship from superfeedr.com
[00:07] CoverSlide: micheil: you sound like a walking endorsement
[00:07] vikstrous has joined the channel
[00:08] micheil: CoverSlide: hey, they're doing the project a lot of help, as otherwise it probably wouldn't be getting the attention
[00:08] micheil: as I'm both full-time employed and doing freelance work at the moment
[00:09] Murvin: is there a way to do IP allow / deny ,  not just reading from the req.header['remote_addr'] or x-forwarded-...
[00:09] jvduf: anyone has some good resources on doing safe and secure authentication using 100% javascript client side + node.js server side?
[00:10] micheil: CoverSlide: also, it's kinda rare for companies to decide to invest in open source projects within node.js (they tend to write their own things)
[00:11] CoverSlide: Murvin: read from req.socket.address()
[00:11] dgathright has joined the channel
[00:11] Guest29340 has joined the channel
[00:11] micheil: hmm.. or req.socket.remoteAddr
[00:11] Murvin: CoverSlide: but, then basically, I have to my only ipAddress filtering
[00:11] Murvin: right?
[00:12] Murvin: like, I have a whitelist or all the subset of IPs.. etc
[00:12] CoverSlide: that is correct
[00:12] Murvin: hmm.. 
[00:12] CarterL has joined the channel
[00:12] CoverSlide: probably would be better to catch it on the 'connection' event rather than the 'request' event
[00:13] slifty has joined the channel
[00:13] Murvin: more work for me. lo.. let me take a look of npm and see if someone done that middleware already. lol
[00:13] jtrudeau has joined the channel
[00:13] CoverSlide: httpServer is basically a net.Server with some more abstraction
[00:13] level09 has joined the channel
[00:14] Murvin: ok
[00:15] JasonSmith_ has joined the channel
[00:15] mikl has joined the channel
[00:15] mikl has joined the channel
[00:15] jacobolus has joined the channel
[00:15] keyvan has joined the channel
[00:16] yorick_ has joined the channel
[00:19] jj0hns0n has joined the channel
[00:19] bnoguchi has joined the channel
[00:19] craigpetchell has joined the channel
[00:20] bnoguchi: jvduf: what are you looking for in particular?
[00:22] jvduf: bnoguchi: so I don't know a lot about security yet, I want to know about the best practices of secure authorization for a full javascript client side app
[00:22] mendel_: guys, if I call require multiple times for the same file.. will it require the file only once?
[00:23] jvduf: bnoguchi: i've been looking into modules and got everyauth running without any problems... but there's no documentation on how safe it is, best practices of implementing it etc
[00:23] bnoguchi: So you're using password based authentication?
[00:24] jvduf: yes (got it linked to linkedin and twitter as well) but password based is the starting point
[00:24] mikl has joined the channel
[00:24] mikl has joined the channel
[00:25] bnoguchi: jvduf: Passwords are sent in plaintext if not using https; the cookie only stores the session id, and all other sensitive session date (e.g., access tokens) are stored server-side
[00:27] jamescarr: redis redis redis
[00:30] patcito_ has joined the channel
[00:30] necromancer: how does require() work?
[00:30] necromancer: does it inject the other javascript into this JS file/
[00:31] jvduf: bnoguchi: yes that's what i've found so far... and it works flawlessly but I still don't have enough knowledge to judge if I implemented it securely
[00:31] level09 has left the channel
[00:31] SubStack: necromancer: no, the required source runs in a separate context
[00:31] necromancer: oh ok
[00:31] SubStack: you can implement require() yourself with fs and vm.runInNewContext
[00:32] bnoguchi: jvduf: I'd recommend reading the Rails guide on security. It's applicable to all kinds of web apps. Covers several important things you should keep in mind wrt security - http://guides.rubyonrails.org/security.html
[00:33] jvduf: bnoguchi: awesome that's exactly what I was looking for!
[00:33] necromancer: SubStack: so how would i link all of my app's files together?
[00:33] jvduf: background info to get started with this stuff and see how to implement it myself with node and for example everyauth
[00:33] SubStack: there's no link step, this is javascript
[00:34] mrryanjohnston: does it make sense to define a model in mongodb for an embedded document? The mongoose orm shows Comments as being defined but not defined as a model in the db as comments on a blog post. While this makes sense for comments (each comment would be unique to a blog post), I'd like to have one-to-many type of relationship in which many users can have the same reward
[00:34] jaequery: guys i got a stupid question
[00:34] jaequery: how can i just load an external js file as if it were "on" the current file?
[00:34] SubStack: necromancer: http://nodejs.org/docs/v0.4.10/api/all.html#modules
[00:35] theCole has joined the channel
[00:35] mrryanjohnston: jaequery: check out the exports function
[00:35] SubStack: jaequery: what are you trying to accomplish?
[00:35] mrryanjohnston: jaequery: http://nodejs.org/docs/v0.3.1/api/modules.html
[00:35] jaequery: my app.js is a big chunk of mess, i want to split it down to config.js, bootstrap.js, controllers.js
[00:35] jaequery: im not a fan of exports as i have to pass objects around back and forth
[00:36] jaequery: i just want to split the file into multiple files 
[00:36] jvduf: bnoguchi: going to read this and play some more with everyauth! thx man! 
[00:36] dreamdust has joined the channel
[00:36] SubStack: jaequery: use exports
[00:37] gazumps has joined the channel
[00:37] necromancer: SubStack: can i also require() JSON files into a variable and expect that variable to become an object with the properties/values of that JSON?
[00:37] SubStack: jaequery: also don't pass so much state around then
[00:37] schwab has joined the channel
[00:38] jaequery: so exports is the only way?
[00:38] SubStack: no
[00:38] SubStack: but they are the cleanest way
[00:38] jaequery: but i really dont want to use exports
[00:39] euforic: For some reason I'm not getting a response on my https post http://pastie.org/2419587 
[00:39] jaequery: i like how things are since it gives me flexibility
[00:39] progme has joined the channel
[00:39] jaequery: i just need to split them in multiple files
[00:39] mrryanjohnston: jaequery: you can't retain that flexibility with exports? just curious
[00:40] jamescarr: express/jade question
[00:40] jamescarr: is there anyway to do something like this:
[00:40] jamescarr: h1= title || 'Default Title'
[00:41] mrryanjohnston: jamescarr: https://gist.github.com/1167018
[00:41] jamescarr: currently I always get title is not defined
[00:41] mrryanjohnston: will that work for your needs?
[00:41] jamescarr: which annoys me
[00:41] jaequery: with exports, the code starts to get bloated and ugly
[00:41] jamescarr: lemme check
[00:41] jaequery: very quickly
[00:41] jaequery: i dont want to pass objects around thinking it already exists and what not
[00:42] jamescarr: no worky
[00:42] mrryanjohnston: her
[00:42] mrryanjohnston: er*
[00:42] mrryanjohnston: https://gist.github.com/1167018
[00:42] mrryanjohnston: second h1 shouldn'
[00:42] mrryanjohnston: t have an =
[00:43] jaequery: SubStack: so whats the solution
[00:43] jamescarr: still get "title is not fefined"
[00:43] jamescarr: frown
[00:44] mrryanjohnston: https://gist.github.com/1167018
[00:44] mrryanjohnston: ^ ?
[00:45] mrryanjohnston: er
[00:45] mrryanjohnston: !== **
[00:47] jamescarr: that's it!
[00:48] ditesh|cassini has joined the channel
[00:49] jamescarr: thanks
[00:49] theCole_ has joined the channel
[00:50] akshatj has joined the channel
[00:51] stalled has joined the channel
[00:51] clifton has joined the channel
[00:52] k1ttty has joined the channel
[00:52] clifton: any recommendations on how to handle twitter authentication, you'd think there'd be a blog post somewhere with a basic example, but ive had none such luck
[00:53] mrryanjohnston: clifton: everyauth
[00:54] TooTallNate: clifton: it sucks. twitter oauth sucks
[00:54] mikeal has joined the channel
[00:54] clifton: boo
[00:55] clifton: i know how bad facebook sucks because we use their oauth stuff in our main app
[00:55] TooTallNate: i'm just bitching cause it's what I'm currently doing at work: Oauth integration with like 6 different services
[00:55] TooTallNate: I like Facebook's better than Twitter's
[00:55] devongovett has joined the channel
[00:55] bnoguchi: clifton: Checkout out https://github.com/bnoguchi/everyauth
[00:56] ggg has joined the channel
[00:56] clifton: but i was hoping to use twitter oauth authentication for nodeko because it has short usernames and everyone has an account there
[00:56] clifton: word im checking it out now
[00:56] clifton: thanks bnoguchi 
[00:56] visnup: fyi we use everyauth/mongoose-auth for the nodeko website
[00:57] tylerstalder has joined the channel
[00:57] visnup: thanks bnoguchi!
[00:57] mrryanjohnston: TooTallNate: Twitter oauth is actually really nice thanks to bnoguchi 
[00:57] bnoguchi: visnup: gotta get you that blog post soon :P
[00:58] ggg: anyone experienced with express, mongoose and everyauth would mind looking at the following link, its an issue i cant resolve, thanksL http://stackoverflow.com/questions/6074245/node-mongoose-get-last-inserted-id
[00:58] ggg: ahah, funny I just said that and that bnoguchi is there, I love your module
[00:59] achiu has joined the channel
[00:59] ggg: the everyauth module
[00:59] mrryanjohnston: bnoguchi: ps, sorry for crapping all over the everyauth/mongoose-auth issue area in github. I was trying to figure it out for a while ;)
[00:59] bnoguchi: mrryanjohnston: np
[01:00] sebastia_ has joined the channel
[01:00] ggg: bnoguchi: may i suggest to add in the doc with more detail how the auth flow process works, took me a while to understand its was /auth/facebook the link to follow
[01:00] sebastia_: has anyone compared the performance of zeromq against dnode?
[01:01] skm has joined the channel
[01:01] bnoguchi: ggg: Yeah, planning on adding documentation for it when I document how to write your own modules
[01:02] SubStack: sebastia_: performance? pfft
[01:02] progme has joined the channel
[01:02] ggg: is it on how to write your own module from javascript, or from lets say C/C++ to node,js module ?
[01:02] jvdev has joined the channel
[01:02] SubStack: sebastia_: I use dnode to serve up raw framebuffer data to the browser and it works pretty well
[01:02] SubStack: in real time
[01:02] bnoguchi: ggg: write your own everyauth module
[01:03] ggg: ohhh...ok everyauth... nice
[01:03] bnoguchi: ggg: i.e., the documentation will be about how to write your own module.
[01:03] sebastia_: what kind of latency would one expect using dnode for IPC?
[01:03] bnoguchi: ggg: and how the api works
[01:03] bnoguchi: ggg: why do you need to "fetch" the last _id?
[01:04] max_dev has joined the channel
[01:04] SubStack: sebastia_: give http://browserling.com a spin
[01:05] SubStack: all dnode
[01:06] sebastia_: SubStack: more interested in IPC rather than server<->client
[01:07] bradleymeck has joined the channel
[01:08] SubStack: well it's even less latency in that case
[01:08] neoesque has joined the channel
[01:08] SubStack: sebastia_: also check out hookio, which is built on top of dnode
[01:10] Bonuspunkt has joined the channel
[01:11] sebastia_: yeah, I'm trying to decide between using hookio or writing a EventEmitter-ish wrapper around zeromq
[01:11] mrryanjohnston: SubStack: browserling looks pretty sweet
[01:11] Nicolas_ has joined the channel
[01:12] Nicolas_: hi
[01:12] mendel_: how do I emit a custom event on a unix connection? (with createConnection)
[01:12] mendel_: I can't just conn.emit('myEvent')?
[01:12] Nicolas_: How can i make link between Node.js & MongDB in a security way ?
[01:12] scottschecter has joined the channel
[01:13] SubStack: sebastia_: what are you building?
[01:13] bnoguchi: Nicolas_: Set up mongodb auth from mongo shell
[01:13] bnoguchi: Nicolas_: Then, the node.js driver has options for specifying username + password to the db
[01:13] Nicolas_: bnoguchi  Thanks !
[01:14] bnoguchi: Nicolas_: You won't be able to connect to the db otherwise
[01:14] TooTallNate: mendel_: yes, what you did is fine
[01:14] mendel_: TooTallNate: yeah, but on the server side socket.on('myEvent') isn't working
[01:15] sebastia_: SubStack: a little HTML5 game server
[01:15] ivan has joined the channel
[01:15] eee_c has joined the channel
[01:15] TooTallNate: mendel_: oh, I thought you were trying to do it within the same process
[01:15] chrisconley has joined the channel
[01:16] mendel_: no, inter process
[01:16] TooTallNate: sounds like you want socket.io/dnode/these other communications frameworks
[01:16] Sorella has joined the channel
[01:16] mendel_: that's all too much, just want a simple unix connection between those two
[01:16] korch: SubStack: raw framebuffer data, do you think it would be possible to "stream" over websockets and draw to a canvas in realtime and get enough fps to make it look like video?
[01:17] TooTallNate: you're gonna need some form of IPC
[01:17] mendel_: they are both event emitters, so it should work
[01:17] TooTallNate: well they're in different process, so it doesn't work like that
[01:17] korch: i have been kicking around an idea to stream video from a kinect, to node, then to a browser using websockets + canvas as a poor man's video stream
[01:17] TooTallNate: mendel_: what you really need to do is send over "structured" data to the server via conn.write()
[01:17] hydrozen has joined the channel
[01:17] TooTallNate: then the server recieves that data as 'data' events
[01:18] mendel_: one, I will create it with socket.write({event: 'MyEvent', data: 'blast'})
[01:18] TooTallNate: and you need to parse it into an event on the server
[01:18] mendel_: yeah
[01:18] mendel_: will do that
[01:18] TooTallNate: i don't think you can write a JS object like that though
[01:18] mendel_: JSON.stringify?
[01:18] TooTallNate: you probably want to JSON.stringify() it first
[01:18] mendel_: it's a buffer, so maybe it'll work
[01:19] TooTallNate: korch: why not <video> or flash, and encoding the video in real time?
[01:19] TooTallNate: mendel_: JSON.stringify(buffer.toString())
[01:19] tjholowaychuk has joined the channel
[01:21] brunomartins has joined the channel
[01:21] skm has joined the channel
[01:21] aurojit has joined the channel
[01:25] m14t has joined the channel
[01:28] korch: TooTallNate: proof of concept/experimental territory, just to see if we can do realtime video *without* flash, <video> :)
[01:28] storrgie has joined the channel
[01:28] ctang has joined the channel
[01:28] TooTallNate: korch: cool cool
[01:29] TooTallNate: but encoding video in realtime is pretty cool too ;)
[01:29] korch: TooTallNate: also, btw, your repos are awesome, thanks for the icecast repo
[01:29] TooTallNate: korch: np
[01:29] febits has joined the channel
[01:29] korch: i actually ended up not using it because i determined that icecast http streaming wasn't going to work for my project, but i used icecast-stack for about 2 weeks, good stuff
[01:30] korch: compared to the 6,000 lines of nasty, abandoned, un-extendible spaghetti code in the official icecast server, your node version was a breath of fresh air :P
[01:31] TooTallNate: haha, ya, it's funny how compilcated they make it
[01:31] TooTallNate: when it turns out to be ~100 lines of node.js
[01:32] tjholowaychuk: moar abstraction
[01:32] korch: they always do make code *WAY* more complicated than it needs to be. that is actually one of my sub-missions in life, to stop that, preferably GTA style, with an Uzi and a bazooka and fighting the cops :)
[01:34] Nuck: Ugh I can't program when I'm this sick :(
[01:34] WarriorSl has joined the channel
[01:35] neoesque has joined the channel
[01:37] tjholowaychuk: Nuck try working from home when your gf watches dr. phil etc all day
[01:37] dexter_e has joined the channel
[01:37] tjholowaychuk: im at starbucks right now to get away from the madness
[01:38] tbranyen: ha tjholowaychuk i wrote something similar for backbone->express stuff
[01:38] tjholowaychuk: tbranyen oh nice :D haha repo?
[01:38] tjholowaychuk: i just get comments sometimes about how people dont like the low level routing
[01:39] tjholowaychuk: even though it's so trivial to build upon
[01:39] tbranyen: yeah i was writing backbone in node and wanted to share with the client
[01:39] tbranyen: sec
[01:39] tjholowaychuk: sweet
[01:39] tjholowaychuk: i've gotten started with similar things a few times
[01:40] tjholowaychuk: but it always ends up a bit more opinionated than i want
[01:40] ditesh|cassini has joined the channel
[01:40] CIA-65: node: 03Nathan Rajlich 07master * r8ec31a3 10/ lib/repl.js : 
[01:40] CIA-65: node: Use Object.getPrototypeOf() on the object in the REPL tab-completion.
[01:40] CIA-65: node: Some people use __proto__ to augment an Object's prototype after it's been created.
[01:40] CIA-65: node: This patch helps make the "new" prototype properties visible if necessary.
[01:40] CIA-65: node: This is also more consistent with the while logic below. - http://git.io/7uyHHA
[01:40] tbranyen: yeah, after my ~3 weeks of messing with it i wasn't happy and decided client and server probably shouldn't be shared if you wanna get shit done
[01:41] TooTallNate: woah that scared the shit out of me!
[01:41] tjholowaychuk: ahahaha
[01:41] TooTallNate: I was like: WTF, I didn't push anything just now!!!
[01:41] tjholowaychuk: tbranyen yeah, that's the problem I guess, after you right to make things cute/automated
[01:41] d0k has joined the channel
[01:41] tjholowaychuk: you realize you could have just finished your whole app
[01:41] tbranyen: yup
[01:41] tbranyen: i kept writing abstractions to make it less painful
[01:42] tjholowaychuk: the web kinda makes me mad
[01:42] tjholowaychuk: because i just hate everything
[01:42] tjholowaychuk: i hate express, i hate jquery, i hate caustic
[01:42] zmbmartin: Is it possible to get results from a mongoose query non async with no callback like count?
[01:42] TooTallNate: lol
[01:42] tjholowaychuk: i dont know what perfect is
[01:42] tjholowaychuk: but i want it
[01:42] tjholowaychuk: haha
[01:42] TooTallNate: zmbmartin: no
[01:42] tjholowaychuk: which seems increasingly impossible to find haha
[01:43] zmbmartin: TooTallNate: I have a list of items that I am returning and those items are associated with things. How do I loop through the items and query things? Then I want to pass that onto the view in express
[01:43] tbranyen: tjholowaychuk: i know what you mean... i've been getting more involved with backbone and even though i like it... i don't see it as "perfect"
[01:43] dustindiaz has joined the channel
[01:44] dustindiaz: are the joyent support folk in here?
[01:44] tbranyen: i've been helping out by triaging bugs and such lately
[01:44] tjholowaychuk: tbranyen yeah definitely. I was playing around with it a bit last night
[01:44] TooTallNate: zmbmartin: you're gonna want to look at one of the *many* async flow-control libs
[01:44] tjholowaychuk: and replaced the 140ish line todo list thing
[01:44] tjholowaychuk: with ~25 lines of caustic
[01:44] tbranyen: lol
[01:44] tjholowaychuk: but
[01:44] zmbmartin: TooTallNate: ok any recommendation?
[01:44] tjholowaychuk: even then that's not perfect either because of other issues
[01:44] tbranyen: sup dustindiaz
[01:44] dustindiaz: hey there
[01:44] tjholowaychuk: it all just makes me mad
[01:44] tjholowaychuk: haha
[01:45] TooTallNate: zmbmartin: I just do it manually keeping a counter usually. but that's hardcore
[01:45] TooTallNate: I've used "step" in the past
[01:45] vladikoff has joined the channel
[01:45] TooTallNate: there's a whole bunch though
[01:45] zmbmartin: TooTallNate: alright, thanks for the info
[01:45] tbranyen: i'm not finding my code anywheres tjholowaychuk urgh.. i found some commented out crap
[01:45] tbranyen: maybe i scraped it
[01:45] dustindiaz: tbranyen: do you work on joyent?
[01:46] tjholowaychuk: tbranyen shit that sucks, i lost a whole bunch of code the other day
[01:46] ryah: TooTallNate: landed your patch
[01:46] tjholowaychuk: no clue where i put it
[01:46] tjholowaychuk: probably /tmp
[01:46] TooTallNate: ryah: saw that, thanks!
[01:46] tbranyen: dustindiaz: nope, just saying hi.  you may remember from such issues as copyrights in ender :-p
[01:46] ryah: TooTallNate: thank you :)
[01:46] dustindiaz: ah. yeah.
[01:46] tbranyen: tjholowaychuk: lol i made ~/tmp and basically just use that now instead
[01:46] jtsnow has joined the channel
[01:47] dustindiaz: ryah: who do i ask to add an ssh key for our Ender website?
[01:47] tjholowaychuk: ryah I have a stupid question, are the tty cursor movement type methods available to process.std{out,err}?
[01:47] tbranyen: gonna go check my desktop maybe i just didn't commit
[01:47] TooTallNate: tjholowaychuk: I don't think so
[01:48] tjholowaychuk: hmmm
[01:48] danfo has joined the channel
[01:48] jamescarr: sometimes I think dnode might be more for my needs
[01:48] jamescarr: rather than raw socket.io
[01:49] piscisaureus has joined the channel
[01:49] tjholowaychuk: moar?
[01:49] jamescarr: trying to figure out if there's an appropriate way todo request-reply with io
[01:49] ryah: dustindiaz: support@joyent.com
[01:49] tjholowaychuk: jamescarr the new socket.io supports acks
[01:49] tjholowaychuk: it's pretty handy
[01:49] jamescarr: OH!?
[01:49] tjholowaychuk: pass a callback
[01:50] jamescarr: to the emit/
[01:50] jamescarr: >
[01:50] dustindiaz: ryah: ok. altho we've tried a few times
[01:50] tjholowaychuk: jamescarr: yeah :D
[01:50] jamescarr: ack...
[01:50] ryah: dustindiaz: you can do that manually to
[01:50] piscisaureus has joined the channel
[01:50] tjholowaychuk: jamescarr something like sock.emit('foobar', baz, callback)
[01:50] jamescarr: aw shit
[01:50] jamescarr: thats nice
[01:50] dustindiaz: we've tried that too
[01:50] CarterL has left the channel
[01:50] ryah: dustindiaz: you can also wait approximately 2 days for no.de to upgrade :)
[01:50] tjholowaychuk: jamescarr then on the SS you get a function to invoke
[01:50] tjholowaychuk: for the the listener
[01:50] dustindiaz: i see
[01:51] dustindiaz: ryah: also, i have no idea who does what.. i just thought i'd ask and your name looked familiar :)
[01:51] jamescarr: tjholowaychuk, thanks dude
[01:51] dustindiaz: so pardon my ignorance :/
[01:51] SubStack: korch: I don't think pure-javascript video playing over canvas will be fast enough any time soon
[01:51] davidascher has joined the channel
[01:52] SubStack: sebastia_: it sounds really premature to be worried about transport efficiency if you're just building a game server
[01:52] chrisdickinson: SubStack: i wonder if it's fill-rate limited.
[01:53] ryah: tjholowaychuk: methods cursor movements are on process.stdout/err if its a tty
[01:53] chrisdickinson: if so, then maybe webworkers could help.
[01:53] tjholowaychuk: ryah oh
[01:53] tjholowaychuk: awesome
[01:53] tjholowaychuk: didn't know that
[01:53] SubStack: tjholowaychuk: I really wish socket.io would spin off its raw transports into a separate module too
[01:54] toki_kanno_ has joined the channel
[01:54] SubStack: so the fancy event stuff can be iterated on without affecting all the modules like dnode that just use it as a dumb websockets with fallbacks style transport
[01:54] tjholowaychuk: SubStack yeah i know what you mean
[01:54] tjholowaychuk: I think the abstraction is at a somewhat reasonable level
[01:54] tjholowaychuk: the basic event stuff is almost a bare minimum for functionality
[01:54] tjholowaychuk: but I kindof agree
[01:55] tjholowaychuk: just more work to set up I guess
[01:55] SubStack: well it will be easier to refactor it all pretty soon once testling comes online
[01:55] tjholowaychuk: though RPC etc could easily extend the JSON stuff that it has
[01:55] tjholowaychuk: I ended up having to ditch JSON for some recent stuff
[01:56] tjholowaychuk: it was way too slow
[01:56] tjholowaychuk: we have a weird serialization protocol now
[01:56] gf3: JSONX
[01:56] gf3: it's the latest
[01:56] gf3: tell yo' friends
[01:57] bradleymeck has joined the channel
[01:58] Drakonite has joined the channel
[01:58] gf3: tjholowaychuk: but SRSLY, what was JSON too slow for?
[01:58] tjholowaychuk: cant say yet
[01:59] tjholowaychuk: but it was like 15x too slow
[01:59] gf3: awkward
[01:59] gf3: tjholowaychuk: what about BSON?
[01:59] nibblebot has joined the channel
[01:59] tjholowaychuk: nope
[01:59] tjholowaychuk: it had to serialize quickly as well
[01:59] tjholowaychuk: so that was an issue
[01:59] losing has joined the channel
[01:59] tjholowaychuk: as well as the size
[01:59] tbranyen: tjholowaychuk: woot found my code on the desktop
[01:59] Nuck: tjholowaychuk: What did you do instead?
[02:00] tjholowaychuk: with json i think we had like 500mb of data in ~30s
[02:00] tjholowaychuk: something gross
[02:00] Nuck: tjholowaychuk: Didja use Regex?
[02:01] tjholowaychuk: no :p
[02:01] Nuck: Because then you have two problems.
[02:01] tbranyen: tjholowaychuk: https://gist.github.com/1167133 although in my case i wanted to call actual backbone router methods within express
[02:01] tbranyen: but i just noticed a shortsighted design, i'm only using GET methods
[02:01] tjholowaychuk: tbranyen ah gotcha
[02:02] tjholowaychuk: yeah the backbone stuff is only set up for GET
[02:02] tjholowaychuk: i guess you could have
[02:02] tjholowaychuk: 'search/:query': 'search'
[02:02] tjholowaychuk: and
[02:02] tjholowaychuk: 'POST user': 'blahblah'
[02:02] tjholowaychuk: but omitting GET for some is kinda awkward
[02:02] tbranyen: :| this actually kind of sucks
[02:02] tjholowaychuk: :|
[02:02] tbranyen: now that i think of it, why does backbone only allow GETs
[02:02] tjholowaychuk: i like that face
[02:02] tbranyen: haha
[02:02] tbranyen: i'm literally making it
[02:03] tjholowaychuk: that will be the express logo
[02:03] tjholowaychuk:  :|
[02:03] Nuck: COLONPIPE
[02:03] tjholowaychuk:  Node.js :|
[02:03] tbranyen: that sounds hazardous
[02:03] Nuck: It does
[02:03] JumpMast3r has joined the channel
[02:04] tjholowaychuk: man, i havent had coffee in a week
[02:04] tjholowaychuk: this is so good
[02:04] gf3: tjholowaychuk: dude, same
[02:04] blueadept has joined the channel
[02:04] gf3: tjholowaychuk: I've been all over David's rice tea
[02:04] tbranyen: what about tea? are you weaning off coffee, or did you stop cold turkey?
[02:04] tjholowaychuk: i was just stuck working from home, and our coffee tastes really bad
[02:04] tjholowaychuk: so i avoid it at all costs
[02:05] jvdev has joined the channel
[02:05] trotter has joined the channel
[02:06] tbranyen: when bonnie buys coffee she buys shit, i buy the gourmet expensive stuff cause i want to taste it
[02:06] SubStack: tjholowaychuk: if you want some turtle and/or robot logos for express I can hook you up
[02:06] tjholowaychuk: i like gross tasting coffee
[02:06] tjholowaychuk: but a very specific gross taste
[02:06] tjholowaychuk: not cheap gross
[02:06] tjholowaychuk: quality gross
[02:06] tjholowaychuk: SubStack wahoo!!
[02:06] tjholowaychuk: :|
[02:06] gf3: Timmy Hos?
[02:06] tjholowaychuk: is the new logo
[02:06] tjholowaychuk: haha
[02:06] seivan has joined the channel
[02:07] bentkus has joined the channel
[02:08] achiu has joined the channel
[02:10] perezd has joined the channel
[02:13] ckpcw has joined the channel
[02:14] Twelve-60 has joined the channel
[02:16] luke` has joined the channel
[02:16] socketio\test\99 has joined the channel
[02:19] ryanfitz has joined the channel
[02:20] zmbmartin: Anyone here that can help me with step?
[02:20] zmbmartin: It seems to be not getting passed the first step(function)?
[02:21] wadey has joined the channel
[02:21] theCole_ has joined the channel
[02:22] tjholowaychuk: hm
[02:22] tjholowaychuk: ENOTTY
[02:23] tjholowaychuk: shouldnt tty.isatty() just return false
[02:24] jerrysv has joined the channel
[02:24] tjholowaychuk: nvm it's something else
[02:26] igl1 has joined the channel
[02:27] harthur has joined the channel
[02:27] Emmanuel` has joined the channel
[02:29] mikeal has joined the channel
[02:29] jhurliman has joined the channel
[02:30] jacobolus has joined the channel
[02:31] bnoordhuis: tjholowaychuk: isatty() can also raise EBADF
[02:31] tjholowaychuk: bnoordhuis it was because I had an unconditional tty.getWindowSize(1) that I forgot about
[02:33] TheNetuno has joined the channel
[02:33] TheNetuno has left the channel
[02:33] max_dev has joined the channel
[02:34] ckknight has joined the channel
[02:35] Nuck: I'm curious
[02:35] Nuck: Does Haraka work well?
[02:37] MrWarGames has joined the channel
[02:38] racar has joined the channel
[02:42] hij1nx has joined the channel
[02:42] Wayne_ has joined the channel
[02:43] ckknight has joined the channel
[02:44] mehlah has joined the channel
[02:44] unlink has joined the channel
[02:44] dennis__ has joined the channel
[02:45] clifton has joined the channel
[02:46] jbschw has joined the channel
[02:47] tilgovi has joined the channel
[02:47] tilgovi has joined the channel
[02:48] gtramont1na has joined the channel
[02:49] zmbmartin: SubStack: I am trying to figure out some flow control with seq.js https://gist.github.com/1167194 It seems that it never gets past the first seq?
[02:49] dennis__: Hi, I cannot seem to get npm to work on OS X Lion. It always complains that it couldn't read dependencies, package.json missing. Any ideas?
[02:50] newy has joined the channel
[02:51] meso has joined the channel
[02:52] jamescarr: tjholowaychuk, is there a way to custom render 404s in express?
[02:53] tjholowaychuk: jamescarr yeah just add a middleware at the end of your config
[02:53] tjholowaychuk: if it reaches that
[02:53] tjholowaychuk: nothing else did
[02:53] tjholowaychuk: so you can respond
[02:55] SubStack: zmbmartin: you have to call this()
[02:55] SubStack: Analytics.find({listing_id: listings[0]}, this)
[02:55] SubStack: then the next seq callback gets the analytics object as its first parameter
[02:55] tshpaper has joined the channel
[02:56] vidi has joined the channel
[02:56] dennis__: how can i determine whether npm has been correctly installed?
[02:57] jamescarr: DAMN
[02:57] jamescarr: my clever coffeescript no longer works :)
[02:58] mlb-: being clever makes a lot of things not work =]
[02:59] SubStack: cleverness is orthogonal to working properly
[03:00] CIA-65: node: 03Ryan Dahl 07master * r4fa1315 10/ tools/test.py : Support MSVS build directories in tools/test.py - http://git.io/4g6pxA
[03:00] tjholowaychuk: cleverness is awesome until it sucks
[03:00] mlb-: I wouldn't say that. When I get clever, things certainly work until my Jenga tower finally topples over.
[03:01] paul_irish has joined the channel
[03:01] SubStack: if you want solid software, write tests
[03:01] SubStack: cleverness has little to do with it
[03:01] mlb-: Cleverness is more like a spice that should be used in moderation.
[03:01] SubStack: disagree
[03:02] dennis__: i'm trying to install redis using npm. it seems to work and creates a node_modules/redis directory. however, requiring redis does not work (not found) and calling npm install tells me that npm could not read dependencies. what do i need to fix?
[03:02] SubStack: although "cleverness" is really not something that is well-defined enough to speak much about
[03:02] mlb-: I'll agree with that.
[03:03] paul_irish: :/ with node knockout this weekend i'm a little concerned about popular websocket libraries and their incompat with hybi -10. anyone else feeling stressed about that?
[03:03] tjholowaychuk: i think generally they meet half-way. something like drupal or rails that is perhaps more clever gets you pretty far but it makes some things really difficult or much more confusing
[03:03] SubStack: it is not so useful to call those things "clever"
[03:03] tjholowaychuk: yeah i guess
[03:04] SubStack: they are opinionated about a great number of things
[03:04] SubStack: node libraries tend to be opinionated about less things
[03:04] mlb-: When frameworks help too much, that's more like having training wheels welded to your bike
[03:04] tjholowaychuk: hehe
[03:04] smathy has joined the channel
[03:05] dennis__: does anybody feel kind enough to point an unclever guy into the right direction?
[03:05] paul_irish: dennis__: just ask, bro
[03:06] SubStack: mlb-: I suspect it's simpler than that.
[03:06] dennis__: i'm trying to install redis using npm. it seems to work and creates a node_modules/redis directory. however, requiring redis does not work (not found) and calling npm install tells me that npm could not read dependencies. what do i need to fix?
[03:06] SubStack: it's easy for libraries to try to do too much
[03:06] clifton has joined the channel
[03:06] SubStack: libraries that try to do less can focus more on doing a few things well
[03:06] SubStack: unix-style
[03:07] tjholowaychuk: helps that we have a PM that actually works most of the time
[03:07] tjholowaychuk: some platforms really suck for that
[03:07] tjholowaychuk: so i can sorta see why they cram
[03:07] mlb-: I don't mind opinions. When I share them, things are great. It's when they're forced on as facts that I find things start to run against the grain.
[03:07] guybrush: most usefull libs are those which solve 1 problem, just stick some of them together instead of using a framework-thing
[03:07] azeroth__ has joined the channel
[03:07] tjholowaychuk: require('noop')
[03:08] SubStack: I'm not arguing against libraries expressing opinions, I'm arguing against libraries expressing too many opinions at once
[03:08] SubStack: it's super easy to sneak in some confounding opinions when there are too many
[03:08] SubStack: it's bad experimental design
[03:08] EyePulp has joined the channel
[03:09] fayce has joined the channel
[03:09] SubStack: as mad scientists we should be wary of such things!
[03:09] mlb-: Oh, no argument there. Tunnelvision makes for a poor library.
[03:09] mlb-: That just goes along with choosing the best tool for a job.
[03:10] CIA-65: libuv: 03Ben Noordhuis 07master * r5202406 10/ (4 files in 4 dirs): Make uv_getsockname() operate on uv_handle_t handles. - http://git.io/4Sx03A
[03:10] CIA-65: libuv: 03Ben Noordhuis 07master * r36ce74f 10/ (25 files in 4 dirs): Add UDP support to libuv. - http://git.io/1S7KLQ
[03:10] CIA-65: libuv: 03Bert Belder 07master * r5c9d749 10/ (8 files in 3 dirs): win: udp support - http://git.io/pXIojQ
[03:10] CIA-65: libuv: 03Bert Belder 07master * r1870c18 10/ (4 files): win: change uv_getsockname signature to support udp - http://git.io/mCWb3Q
[03:12] SubStack: node tends towards reductionism and rails tends toward a kind of holism
[03:12] mehlah has joined the channel
[03:13] eboyjr has joined the channel
[03:14] SubStack: at least with respect to surrounding ecosystems
[03:14] SubStack: the two are not so directly comparable but the software that has been built up around them is
[03:15] mlb-: Well, when a good part of your community are refugees from perl and it's "There's more than one way to do it" syndrome, it's not surprising to see them fall in love with a One True Way
[03:16] jvdev has joined the channel
[03:16] tjholowaychuk: yeah i get a lot of confused people expecting "the" way to do something in express all the time
[03:16] SubStack: tmtowtdi is great
[03:16] chrisumbel has joined the channel
[03:16] mlb-: Only in moderation.
[03:17] chrisumbel_ has joined the channel
[03:17] SubStack: it works best when you can move the choices out into a package manager
[03:18] SubStack: and where the core language or framework doesn't play favorites
[03:19] SubStack: as is the case with perl and ruby's core ring of blessed distributions or python's batteries included
[03:19] tjholowaychuk: there are benefits to both, but i definitely love that about js/node, with ruby i always felt like i had to use rails (even though I still used sinatra anyway)
[03:21] jamescarr has joined the channel
[03:22] vidi has joined the channel
[03:23] tjholowaychuk: man i really wish github let you comment in the compare view
[03:24] kenperkins has joined the channel
[03:25] apanda has joined the channel
[03:25] bradleymeck has joined the channel
[03:26] CIA-65: libuv: 03Bert Belder 07master * r36c9b79 10/ (2 files): Fix bugs in test-udp-send-and-recv and benchmark-udp-packet-storm - http://git.io/VUaplw
[03:27] jakehow has joined the channel
[03:27] jakehow_ has joined the channel
[03:28] spetrea has joined the channel
[03:30] dguttman has joined the channel
[03:31] galaxywatcher has joined the channel
[03:31] JakeyChan: what is the _linklist used for ?
[03:32] rgl has joined the channel
[03:33] boehm has joined the channel
[03:33] fayce has joined the channel
[03:35] ap80 has joined the channel
[03:36] newy has joined the channel
[03:38] ap80 has left the channel
[03:39] jamescarr: GOD!!!
[03:40] jj0hns0n has joined the channel
[03:41] EvRide has joined the channel
[03:41] davidascher has joined the channel
[03:42] apanda has joined the channel
[03:42] jamescarr: fucking hell
[03:42] CrypticSwarm has joined the channel
[03:42] jamescarr: I can't believe it
[03:42] slickplaid: what?
[03:42] jamescarr: wasted a goddamn 30 minutes just to make a virtual work in mognoose
[03:42] jamescarr: that is so annoying i can scream
[03:43] slickplaid: oh yeah?
[03:43] slickplaid: The docs on mongoose leave something to be desired :D
[03:43] tjholowaychuk: abstractions ftw
[03:43] jamescarr: OH YEAH
[03:43] jamescarr: I was using a plugin on the model (mongoose-auth)
[03:44] jamescarr: apparently, if you define virtuals before that call, your virtuals get wiped out
[03:44] slickplaid: really?
[03:44] tjholowaychuk: there must be a reasonable way to report async errors for a test framework :( serial toooo slow
[03:44] jamescarr: I mean, before doing something like UserSchema.plugin( mongooseAuth, definition)
[03:44] tjholowaychuk: i made my express tests serial to see how slow they would be
[03:44] slickplaid: right
[03:44] tjholowaychuk: and it goes from <800ms to >15s :(
[03:44] jamescarr: ah well, least it's working
[03:44] tjholowaychuk: sad panda
[03:44] jamescarr: time to commit this bitch
[03:45] jamescarr: tjholowaychuk, I am super sad panda
[03:45] jamescarr: :)
[03:45] tjholowaychuk: npm install sadpanda
[03:45] jamescarr: try to pass myself off as some genius and then I spend half an hour over simple string concatenation :-P
[03:46] tjholowaychuk: hehe
[03:46] jamescarr: so are there any test frameworks that work well with socket.io yet?
[03:47] jamescarr: I mean, like selenium
[03:47] tjholowaychuk: soda?
[03:47] tjholowaychuk: oh
[03:47] tjholowaychuk: wont selenium be fine?
[03:47] tjholowaychuk: (though it does kinda suck)
[03:48] chrisdickinson: jamescarr: as in, use socket.io to communicate to test driver browsers?
[03:49] jamescarr: nah, to test sites that use socket.io
[03:49] chrisdickinson: ah
[03:50] mfncooper has joined the channel
[03:51] c4milo1 has joined the channel
[03:51] jamescarr: tjholowaychuk, everytime I try expresso I always wind up getting a little lost :(
[03:51] tjholowaychuk: jamescarr im writing the spiritual successor to it right now actually haha
[03:51] jamescarr: good!
[03:51] tjholowaychuk: because they all frankly kinda suck in different ways
[03:51] tylerstalder has joined the channel
[03:51] JoshC1 has joined the channel
[03:52] tjholowaychuk: doing what i can to combine the good
[03:52] tjholowaychuk: and the interface will be somewhat agnostic, you can have tdd-style, bdd-style, export-style like expresso
[03:52] tjholowaychuk: blah blah
[03:53] tjholowaychuk: I have a landing-strip reporter with a unicode plane crashing
[03:53] tjholowaychuk: haha
[03:53] tjholowaychuk: parallel tests suck for reporting though gah
[03:53] jamescarr: yeah, the parallel one is a little difficult
[03:54] dshaw_ has joined the channel
[03:54] kurtzhong has joined the channel
[03:54] tjholowaychuk: i refuse to do all serial though, so slow, but with a progressive interface with describe/it for the bdd style etc it'll be easier to control which is which
[03:55] tjholowaychuk: but i'll add exports/key style like vows/expresso for the people who still like that
[03:55] tjholowaychuk: i think it looks fine but somewhat limiting
[03:55] mediahack has joined the channel
[03:55] jamescarr: eh, there's stuff to like and dislike about vows' approach
[03:55] isaacs has joined the channel
[03:56] jamescarr: I tend to write a ton of helper methods 
[03:56] tjholowaychuk: yeah that's the thing
[03:56] tjholowaychuk: they are all good in a few ways
[03:56] jamescarr: makes my tests nice and clean, but there's a lot of helpers all over
[03:56] tjholowaychuk: some of the vows stuff is really bad like this.callback etc haha
[03:56] tjholowaychuk: but expresso sucks for apps
[03:56] tjholowaychuk: and client-side obviously haha
[03:56] tjholowaychuk: i want something that works fine in the browser too
[03:57] Siph0n has joined the channel
[03:57] tjholowaychuk: i like expect(n) too, but then you cant easily use stuff like should
[03:57] geetarista has joined the channel
[03:57] tjholowaychuk: but then it's a huge PITA to track assertions
[03:58] tjholowaychuk: might have to just add a hook for should and friends
[03:58] jamescarr: hmmmmm
[03:59] [[zz]] has joined the channel
[03:59] tjholowaychuk: would be easy enough to provide the hook
[03:59] tjholowaychuk: just slightly lame
[03:59] Malar has joined the channel
[03:59] jamescarr: heh... one of my coworkers complained when I had him hilight something in cygwin and press ctrl+ins to copy it...
[03:59] jamescarr: he said it doesn't follow standards
[04:00] jamescarr: heh... I think my workplace is the only place I ever saw terminals where ctrl+c copies text
[04:00] jtsnow has joined the channel
[04:01] tjholowaychuk: jamescarr you use vows sometimes right?
[04:01] tjholowaychuk: does it buffer up the parallel reporting output?
[04:01] tjholowaychuk: until they're done?
[04:01] jamescarr: I use it on a large mortgage project
[04:01] tjholowaychuk: oh wait yeah duh you just said you used it haha
[04:02] jamescarr: I dont think it runs in parallel
[04:02] tjholowaychuk: i think the "batch" things do
[04:02] tjholowaychuk: or something like that
[04:02] jamescarr: I never try though... I have 89 vows so far 
[04:02] tjholowaychuk: ACTION curious $ time make test
[04:02] jamescarr: and it all shows up correctly in the cli
[04:02] tjholowaychuk: yeah
[04:02] jamescarr: vows  0.48s user 0.01s system 96% cpu 0.507 total
[04:02] tjholowaychuk: that's the thing, if they are parallel and you're outputting the test labels as you go
[04:03] tjholowaychuk: it wouldnt look right
[04:03] theCode has joined the channel
[04:03] tjholowaychuk: for async stuff at least
[04:03] jamescarr: vows --spec has it all ordered
[04:03] tjholowaychuk: though I think the listing of tests is pretty overrated
[04:03] tjholowaychuk: dot matrix ftw
[04:03] jamescarr: tjholowaychuk, the reports are more important
[04:03] jamescarr: for the most part, I want tests to run in CI
[04:03] tjholowaychuk: I can only speak for my self
[04:03] tjholowaychuk: when I only care about the failures
[04:04] tjholowaychuk: but yeah, I think vows buffers per batch
[04:04] tjholowaychuk: and then outputs them in order
[04:04] kenperkins: can someone please tell me about a JS editor that has an open-file-stack that moves the current file to the top of the stack and allows easy switching?
[04:04] parshap: kenperkins: vim? or do you mean an editor written in js?
[04:04] ismell has joined the channel
[04:05] kenperkins: I mean a nice visual editor with a file browser, and formatting, etc
[04:05] kenperkins: I leave VI for editing when I'm in a terminal
[04:05] tjholowaychuk: jamescarr just started but when I get a bit more done I'll add you to the repo
[04:05] jamescarr: I use gvim with NERD
[04:05] tjholowaychuk: so you can check it out
[04:05] Ratty_: I edit everything in a terminal
[04:05] jamescarr: for the file browsing
[04:05] jamescarr: tjholowaychuk, cool
[04:05] jamescarr: kenperkins, gvim with janus as a start
[04:06] tjholowaychuk: jamescarr I hope to make it modular / extensive enough that people can stop writing js test frameworks for both node / client
[04:06] jamescarr: I added a bunch of other shit
[04:06] tjholowaychuk: and just write a thin layer on this
[04:06] tjholowaychuk: or just use the tdd/bdd/exports style bundled
[04:06] jamescarr: cool
[04:06] jamescarr: kenperkins, https://github.com/jamescarr/.vim
[04:06] neorab: "people can stop..." oh you crazy dreamer, you
[04:06] mike5w3c has joined the channel
[04:06] tjholowaychuk: haha
[04:06] tjholowaychuk: well judging by the vows source, it was as big/quick of a hack as expresso
[04:07] tjholowaychuk: and jasmine-node is lame
[04:07] kenperkins: im trying to not use vim, that's kind of the point
[04:07] neorab: I've written my own, and am mostly asshamed, but it wasn't for node or client, TestComplete...
[04:07] jamescarr: tjholowaychuk, yes
[04:08] jamescarr: tjholowaychuk, jasmine is okay for client side, sucks balls on the serverside
[04:08] neorab: unit testing automated functional testing libraries just didn't catch on where I work though
[04:08] chrisdickinson: tjholowaychuk: what about platoon?
[04:08] jamescarr: I tried with it
[04:08] jamescarr: I tried real hard
[04:08] jamescarr: and I gave up
[04:08] tjholowaychuk: chrisdickinson what's that
[04:08] jamescarr: I mean, I really wanted jasmine-node to work
[04:08] tjholowaychuk: jamescarr yeah, just like jspec
[04:08] tjholowaychuk: really bad for async
[04:08] chrisdickinson: tjholowaychuk: that's my test framework.
[04:08] tjholowaychuk: ACTION looks
[04:08] jamescarr: but it doesnt. it's only good enough for the simplest of things that are not sync
[04:08] chrisdickinson: it's a little silly.
[04:08] isaacs: anyone here on the east coast US right now?
[04:08] chrisdickinson: but it was designed to work in browser.
[04:09] mape: tjholowaychuk: around?
[04:09] tjholowaychuk: im going more abstract with this one and building up the api
[04:09] tjholowaychuk: mape no
[04:09] JakeyChan: hi
[04:09] tjholowaychuk: :|
[04:09] mape: damit :(
[04:09] tjholowaychuk: haha
[04:09] mape: tjholowaychuk: had any issues with node-discount failing to build on linux?
[04:09] JakeyChan: what's means of "module.parent " ?
[04:09] jamescarr: tjholowaychuk, I have ran into some brick walls where old habits are popping up
[04:09] pizthewiz has joined the channel
[04:10] tjholowaychuk: mape hmm not personally
[04:10] jamescarr: today I wrote some code to monitor for changes in a database and expire objects...
[04:10] jamescarr: I didn't TDD it
[04:10] davidascher has joined the channel
[04:10] seivan has joined the channel
[04:10] jamescarr: I'm a bad man
[04:10] isaacs: JakeyChan: it's the module that called require() to load the current module
[04:10] tjholowaychuk: haha
[04:10] JakeyChan: isaacs: thanks :)
[04:10] isaacs: np
[04:11] mape: tjholowaychuk: https://gist.github.com/313e6ed0f4a3c839d7cf
[04:12] tjholowaychuk: mape hmm looks like it cant find the header so maybe there's a -dev version of discount or something?
[04:12] tjholowaychuk: not sure
[04:12] JakeyChan: the global variable means "it is global object" ???
[04:12] tjholowaychuk: i build from source
[04:12] mape: tjholowaychuk: nope, npm install discount
[04:12] tjholowaychuk: isaacs woah enough deps for TAP haha
[04:12] tjholowaychuk: :D
[04:12] isaacs: JakeyChan: yes
[04:12] JakeyChan: isaacs: than you again :D
[04:12] mike5w3c_ has joined the channel
[04:13] isaacs: JakeyChan: http://nodejs.org/docs/v0.4.11/api/globals.html http://nodejs.org/docs/v0.4.11/api/modules.html
[04:13] tjholowaychuk: there we go, tap-producer
[04:13] tjholowaychuk: nom nom
[04:15] carmony has joined the channel
[04:15] ryanfitz has joined the channel
[04:16] mfncooper: Since we're on testing ... there has to be code somewhere that lets me create a readable stream from a string, and a writable stream to a string / buffer, but my search skills are failing me. Pointers, anyone?
[04:17] hasenj has joined the channel
[04:17] SubStack: mfncooper: why would you want to do that?
[04:17] SubStack: if you already have the whole string why would you need a stream of its contents?
[04:17] mfncooper: To pass it to an API for unit testing.
[04:18] mfncooper: I don't want to have to use the file system just to get me a stream to give to what I'm testing.
[04:18] SubStack: just make an event emitter
[04:18] SubStack: and .emit('data', chunk) to it
[04:18] jakehow_ has joined the channel
[04:18] jakehow has joined the channel
[04:19] mfncooper: Yeah, I guess. And the other direction?
[04:19] esteth has joined the channel
[04:21] tjholowaychuk: nom
[04:21] adelgado has joined the channel
[04:22] bnoguchi has left the channel
[04:25] jamescarr: damn
[04:26] jamescarr: I'm not sure I'll write a large app in coffeescript again
[04:26] jamescarr: can be hard as a mofo to debug 
[04:28] jtsnow has joined the channel
[04:29] rmcastil has joined the channel
[04:29] MUILTFN has joined the channel
[04:29] Isaiah has joined the channel
[04:31] Dreamer3 has joined the channel
[04:32] bosky101 has joined the channel
[04:40] stalled has joined the channel
[04:41] tk has joined the channel
[04:42] yenz: jamescarr: are you debugging a problem in the CS->JS step?
[04:42] uptownben has joined the channel
[04:42] dexter_e has joined the channel
[04:42] jamescarr: yenz, I wrote a large app with serverside coffeescript
[04:42] uptownben: Hi All.
[04:42] yenz: i thought one of the niceities of CS was that the JS it generates is fairly intelligble and thus "should" be the same to debug?
[04:42] jamescarr: I never generate js from it
[04:42] jamescarr: I could though
[04:42] jamescarr: I supposed
[04:43] confoocious has joined the channel
[04:43] confoocious has joined the channel
[04:44] uptownben: I need to create some web services and need to use sessions with them, I was considering "restify" but didnt see any support for sessions, does anyone have any suggestions? I need to develop web services with authentication for access.
[04:45] jamescarr: it is weird that git push :branch_name is the syntax to delete a remote branch
[04:47] kurtzhong has joined the channel
[04:49] wookiehangover has joined the channel
[04:50] wookiehangover has joined the channel
[04:50] confoocious has joined the channel
[04:50] confoocious has joined the channel
[04:50] aoberoi has joined the channel
[04:52] tjholowaychuk: uptownben express? they are basically the same thing
[04:52] tjholowaychuk: but express has more support, better abstraction etc
[04:53] tylerstalder has joined the channel
[04:55] nate200 has joined the channel
[04:55] nate200: Hello
[04:55] nate200: Anybody here?
[04:56] blkcat: there are 631 other people in here, i think it's safe to say
[04:56] nate200: haha I was jking
[04:56] nate200: I have a question regarding JavaScript
[04:57] ryah: nate200: just ask
[04:57] tjholowaychuk: right meow
[04:57] nate200: I'm very good at HTML and CSS but I'm now learning JavaScript
[04:58] nate200: in JavaSript what are all the begining functions exampe document.write
[04:58] jamescarr: so I guess you could make a twilio app that you dial into and can hear conversations from an irc channel
[04:59] newy has joined the channel
[04:59] jamescarr: by having the server run a bot in the irc channel
[04:59] avalanche123 has joined the channel
[04:59] nate200: there is document is that the only starting point?
[05:00] gartenst_ has joined the channel
[05:00] ryah: jamescarr: soundslike a nice demo
[05:01] mape: jamescarr: do it!
[05:01] mfncooper has left the channel
[05:01] jamescarr: yeah... it'd be fun ;)
[05:01] nate200: can anybody help with that?
[05:01] thepatr1ck: nate200: in the browser the global scope is window, so that is your starting point
[05:01] nate200: so window.document.write would work?
[05:02] nate200: Yeah I know about window
[05:03] thepatr1ck: you don't need the window part, and .write should generally be avoided, but yes it would work
[05:03] kurtzhong has joined the channel
[05:03] sebastia_ has joined the channel
[05:03] nate200: I see so I should deal with functions mostly then
[05:05] nate200: I see this a lot in the examples I'm learning from: document.write("First character: " + str.charAt(0) + "<br />");
[05:05] nate200: I should avoid the document.write then?
[05:06] guest_859 has joined the channel
[05:06] nate200: anybody got twitter?
[05:06] jamescarr: nope
[05:06] nate200: in this case do I write the document write then?
[05:07] nate200: thats just part of the code that I pulled of the website
[05:08] gvz has joined the channel
[05:08] nate200: so document then stands alone in that sence?
[05:09] rhaen has joined the channel
[05:09] nate200: anybody?
[05:10] nate200: Im making a complete list of all the functions
[05:11] wadey has joined the channel
[05:12] gf3: WAT
[05:13] nate200: Can anybody help me? its an easy question
[05:13] gf3: you asked like 5 different questions
[05:14] jamescarr: LOL
[05:15] blkcat: nate200: buy yourself a javascript book
[05:17] nate200: ok this is the important one: in JavaSript where document.write does the document stand alone as the only way to start that particular action?
[05:17] stalled has joined the channel
[05:18] nate200: Its pretty difficult to ask this in google or I would
[05:19] davidascher has joined the channel
[05:20] amigojapan has joined the channel
[05:20] gf3: nate200: your question does not make sense
[05:22] versicolor has joined the channel
[05:22] amigojapan: if I have a file called test1.js  that contains var test="hello";  and a second file called test2.js that contains require("./test1.js"); console.log(test);  I get an error,  hwo can I get something from the scope of one required program to another?
[05:22] amigojapan: how*
[05:22] gf3: amigojapan: see exports
[05:22] gf3: http://nodejs.org/docs/v0.4.11/api/modules.html#module.exports
[05:23] amigojapan: thanx gf3
[05:23] gf3: np
[05:23] tilgovi has joined the channel
[05:23] tilgovi has joined the channel
[05:23] brainproxy: heya amigojapan, trying out node.js? :)
[05:24] amigojapan: yeah brainproxy, I am making a multiplayer joust
[05:25] zilch has joined the channel
[05:25] brainproxy: amigojapan: nice
[05:25] tk has joined the channel
[05:25] jesusabdullah: Question about nomenclature: What do you call the "slots" of a buffer?
[05:26] jesusabdullah: For instance, buffer[12] is the 13th ___________ of the buffer ?
[05:26] SubStack: bytes?
[05:26] bosky101 has joined the channel
[05:26] yenz: array index
[05:26] SubStack: octets
[05:26] yenz: ?
[05:26] yenz: thingalinger?
[05:26] jesusabdullah: Nevermind
[05:26] jesusabdullah: hah!
[05:27] Slashbunny has joined the channel
[05:27] jesusabdullah: In decimal, the values in a buffer can be up to 255 so I was like, "255? 8? What"
[05:27] jesusabdullah: derp
[05:27] SubStack: .. Math.pow(2,8)-1
[05:27] catb0t: 255
[05:27] SubStack: :p
[05:29] jesusabdullah: Yeah I know :(
[05:29] jesusabdullah: I knew this, really I'm just being rusty
[05:35] zilch has joined the channel
[05:36] scottschecter has joined the channel
[05:36] nate200: I just downloaded JavaScript Bible 6th Edition has anybody heard of it?
[05:36] jdonley83 has joined the channel
[05:37] jdonley83: Hello all!
[05:37] polotek has joined the channel
[05:38] jesusabdullah: I haven't
[05:38] jesusabdullah: sup polotek 
[05:38] jesusabdullah: long time no see irl; busy?
[05:38] polotek: what up
[05:38] jesusabdullah: Not much, just workin'
[05:38] jdonley83: I'm trying to dink around a bit with expressjs and on trying to run the app i'm getting the 'node.js not compiled with openssl crypto support' I already went ahead and 'sudo apt-get install libssl-dev' and reconfigured node and remade node.  but i'm still getting the issue.  Any pointers?
[05:39] polotek: yeah I don't go to all the meetups and such. just every once in a while
[05:39] jesusabdullah: Yeah, I hear you
[05:39] jesusabdullah: I think they'll wear on me soon
[05:39] polotek: feel free to take a break. you won't miss too much :)
[05:40] jesusabdullah: https://gist.github.com/1166734 :D
[05:40] jetienne has joined the channel
[05:40] jesusabdullah: Started dinking around with the crypto module earlier
[05:40] jesusabdullah: Learned it's really easy to do cheesy little password-based ciphers
[05:40] tmpvar: haha, misread dinking as drinking.. and hi ;)
[05:40] jesusabdullah: Sup yo
[05:40] tmpvar: what is going on
[05:41] jesusabdullah: n2m XD
[05:41] ryanf has joined the channel
[05:41] polotek: tmpvar: what are you working on these days?
[05:41] tmpvar: i just got texturing working webgl-standalone
[05:41] jesusabdullah: noding, the usual
[05:41] tmpvar: stoked
[05:41] polotek: I see your tweets about crazy C++ shit
[05:41] jesusabdullah: No shit?
[05:41] tmpvar: lol
[05:41] ryanf has left the channel
[05:42] polotek: nice
[05:42] SamuraiJack has joined the channel
[05:42] tmpvar: yeah, basically round 1 is spidermonkey + webgl on the desktop
[05:42] tmpvar: (and ios ;))
[05:42] jesusabdullah: Are you trying to implement webgl with opengl server-side? o__o
[05:42] tmpvar: jesusabdullah, http://imagebin.org/169414
[05:42] tim_smart has joined the channel
[05:43] jesusabdullah: DON'T YOU POINT AT ME
[05:43] jesusabdullah: with your
[05:43] jesusabdullah: your
[05:43] jesusabdullah: MONKEY
[05:43] tmpvar: lol
[05:43] tmpvar: that is what i just rendered :)
[05:43] tmpvar: took me a while, because im a nub.
[05:43] jdonley83: I'm trying to dink around a bit with expressjs and on trying to run the app i'm getting the 'node.js not compiled with openssl crypto support' I already went ahead and 'sudo apt-get install libssl-dev' and reconfigured node and remade node.  but i'm still getting the issue.  Any pointers?
[05:43] jesusabdullah: That's sweet
[05:43] alnewkirk has joined the channel
[05:44] jesusabdullah: I think feeling like a nub means you're learning
[05:44] jamonkko has joined the channel
[05:44] jesusabdullah: If you feel like you know what's up, it's because you're not learning new things anymore
[05:44] tmpvar: jesusabdullah, yep! this is my first go with the programmable pipeline
[05:44] tmpvar: it. is. awesome.
[05:44] polotek: jdonley83: we're not ignoring you. just not sure what the problem is
[05:44] polotek: are you sure you're using the newly compiled version of node?
[05:44] polotek: did you actually install it?
[05:44] jdonley83: polotek: ty
[05:45] gf3: tmpvar: ohai!
[05:45] hekkwan has joined the channel
[05:45] losing has joined the channel
[05:45] tmpvar: gf3, hi thar
[05:45] jakehow has joined the channel
[05:45] jakehow_ has joined the channel
[05:45] gf3: tmpvar: say hi to Stefan for me tomorrow!
[05:45] jesusabdullah: tmpvar: programmable pipeline?
[05:45] jdonley83: looks like i've got v0.4.8
[05:45] tmpvar: gf3, im in AZ :)
[05:45] jdonley83: and i ran make install
[05:45] tmpvar: and who you do?
[05:45] zylo has joined the channel
[05:45] gf3: tmpvar: nvm then!
[05:45] tmpvar: who are ya?
[05:46] tmpvar: jesusabdullah, shaders and all that fun stuff :)
[05:46] gf3: tmpvar: I'm a good friend of his, he mentioned that he worked with you :)
[05:46] tmpvar: aha, are you also a gypsy?
[05:46] tmpvar: ^_^
[05:46] polotek: jdonley83: when you run ./configure do you see "Checking for opensll"
[05:46] polotek: openssl*
[05:47] polotek: If that says "yes" then you should be good
[05:47] jesusabdullah: tmpvar: I see!
[05:47] polotek: if not, that is your problem
[05:47] jesusabdullah: tmpvar: Who are you working for these days if you don't mind me asking?
[05:47] mailtruck has joined the channel
[05:47] tmpvar: consulting for arc90, and hacking on my own stuff :)
[05:47] tmpvar: im taking probably to the end of the year.. then sf or ny
[05:48] tmpvar: (im in az atm)
[05:48] jacobolus has joined the channel
[05:48] gf3: tmpvar: haha, no sir, I am firmly planted in Toronto
[05:48] CarterL has joined the channel
[05:49] gf3: tmpvar: I am also playing with Digamma
[05:49] tmpvar: gf3, i keep hearing good (biased?) things!
[05:50] gf3: tmpvar: me too, he gets so excited talking about it, then I get all excited
[05:50] polotek: who's coming to node summercamp?
[05:50] tmpvar: I am
[05:50] gf3: tmpvar: it seems to be working well, save for a few minor hiccoughs
[05:50] stonebranch has joined the channel
[05:50] tmpvar: gf3, nice, I havent had the time to peek it
[05:50] tmpvar: polotek, there better be internet
[05:50] polotek: geeks in the woods man. fun times
[05:50] tmpvar: haha
[05:51] polotek: there will be just enough internet to be annoying
[05:51] polotek: no phone service I hear
[05:51] tmpvar: oh wow
[05:51] jdonley83: polotek: yep, with a result of 'yes' :)
[05:51] tmpvar: but there will be beer
[05:51] dexter_e has joined the channel
[05:51] jesusabdullah: tmpvar: I'd be happy to see you in sf :v
[05:52] polotek: tmpvar: you couldn't get people to show up without beer
[05:53] polotek: jdonley83: when does it actually error? can you require('crypto') ?
[05:53] tmpvar: jesusabdullah, yep, we'll see
[05:53] jesusabdullah: Sweet
[05:54] jetienne has joined the channel
[05:54] riven has joined the channel
[05:54] riven has joined the channel
[05:57] stephank has joined the channel
[05:57] tilgovi has joined the channel
[05:57] tilgovi has joined the channel
[05:57] amigojapan: gf3: ok, I have 2 questions,   why does it haveto be enclosed in a timeout, and more important, how do I get data into the second script? all I was able to do is rend the signal "ready"   but I want to send a variable     (sorry, I am a noob to node.js)
[05:58] gf3: amigojapan: I need some context
[05:58] jdonley83: polotek: hmm, well, it's throwing the error when I try to run the 'node app.js' command on a brand new unmodified expressjs project.  I can't tell from the stack trace what line in the app.js file is causing the issue
[05:58] amigojapan: gf3: I am talking about the script a.js on the page that you sent me http://nodejs.org/docs/v0.4.11/api/modules.html#module.exports
[05:59] polotek: jdonley83: just go into the reql and type require('crypto')
[05:59] polotek: if you get the same error then I would post on the mailing list
[05:59] polotek: it's probably something in your environment
[05:59] sivy has joined the channel
[06:00] polotek: If crypto loads fine, then it's probably something in express
[06:00] gf3: amigojapan: it's not necessary, it's just an example
[06:00] rchavik has joined the channel
[06:01] jesusabdullah: amigojapan: What is this? I think I missed the party
[06:01] meso has joined the channel
[06:02] xAt has joined the channel
[06:02] jdonley83: polotek: require('crypto') printed out a json object of things.  about half of the items are undefined (*might not be important)
[06:03] amigojapan: jesusabdullah: well, basically, I have this variable in my program, called SERVER_SIDE    then I require("client-server-common.js");      inside of it, I want to use the value I set to SERVER_SIDE       but it is out of scope
[06:03] gf3: amigojapan: a.js: exports.test = 7       b.js: var a = require( './a' ); console.log( a.test ) // 7
[06:03] ryanj has joined the channel
[06:04] amigojapan: ok let me try gf3, thanx
[06:05] achiu has joined the channel
[06:05] jdonley83: polotek: would it be overkill just to wipe all my node stuff from my comp and just rebuild again?  The first time I had built node it was without openssl.  I just reconfigured it just now.
[06:05] guidocalvano has joined the channel
[06:05] CarterL: anyone have experience building sites with node.js where the html is rendered client side?
[06:05] polotek: jdonley83: that's an idea
[06:06] jdonley83: polotek: k, i'll tackle that tomorrow evening than, gots to get to bed for the night.  tyvm for the help
[06:06] polotek: jdonley83: cheers
[06:06] amigojapan: ok gf3, thanx, that works....
[06:07] jdonley83 has left the channel
[06:07] simenbrekken has joined the channel
[06:08] amigojapan: gf3: although, I guess I formulated my original question wrong, sorry.   let me restate it
[06:08] amigojapan: gf3:  basically, I have this variable in my program, called SERVER_SIDE=true; then I require("client-server-common.js"); inside of it, I want to use the value I set to SERVER_SIDE but it is out of scope
[06:08] zylo has joined the channel
[06:09] neoesque has joined the channel
[06:09] aspect: require("client-server-common.js").init({server_side:SERVER_SIDE}); // making things explicit will make your life easier down the track
[06:10] zilch has joined the channel
[06:10] gf3: what he said ↑ 
[06:10] bosky101 has joined the channel
[06:10] avalanche123 has joined the channel
[06:10] amigojapan: ok aspect,  then I haveto make an init function inside client-server-common.js? I am a newbe to node
[06:11] amigojapan: ok, I will experiment
[06:11] garrensmith has joined the channel
[06:13] tilgovi has joined the channel
[06:13] tilgovi has joined the channel
[06:13] zylo has left the channel
[06:16] versicolor has joined the channel
[06:18] markdaws has joined the channel
[06:20] zilch has joined the channel
[06:22] jesusabdullah: I agree with aspect
[06:22] jesusabdullah: Another alternative: require("client-server")(SERVER_SIDE)
[06:22] jesusabdullah: or new require("client-server")(SERVER_SIDE)
[06:23] amigojapan: jesusabdullah: I tried what aspect  tols me, but now it warns me there is no init method... but I did make function init() in the required file
[06:23] newy has joined the channel
[06:23] jesusabdullah: amigojapan: exports.init? or just, "function init" ?
[06:23] jesusabdullah: What require returns is the "module.exports" object
[06:23] jesusabdullah: and exports = module.exports
[06:23] seivan has joined the channel
[06:23] amigojapan: I see jesusabdullah
[06:23] jesusabdullah: so, you could do
[06:24] gvz has joined the channel
[06:24] amigojapan: continue please...
[06:24] jesusabdullah: module.exports = { "init": function(server) { ... } }
[06:24] jesusabdullah: or, exports.init = function() { ... }
[06:24] amigojapan: I see
[06:24] jesusabdullah: or, module.exports = function(server) { ... }
[06:24] jesusabdullah: All reasonable things to do, depending on what you want the api to look like
[06:24] amigojapan: ok, I will try it out
[06:25] jesusabdullah: Awesome. Hope that helped!
[06:25] nate200: is assert a good practice in JavaScript?
[06:26] gf3: nate200: WAT
[06:27] jesusabdullah: nate200: In what sense?
[06:27] cpetzold has joined the channel
[06:27] jesusabdullah: It's uncommon to see code asserting on-the-fly. Usually, asserts are used in tests only.
[06:27] jesusabdullah: That said, I've never heard anybody say, "what the fuck why is there an assert in here DONT USE ASSERT"
[06:29] gf3: the question is ambiguous
[06:29] gf3: ?g
[06:29] nate200: alright assert is a no go then thanks
[06:29] framlin: I use assert for situations, where it is vital to assert some state, because going on with wrong state would break the business. Bat that is very very rare
[06:29] gf3: nate200: http://eloquentjavascript.net/
[06:30] robotmay has joined the channel
[06:30] andree has joined the channel
[06:30] blkcat: ^
[06:30] blkcat: just read that, seriously :)
[06:30] skm has joined the channel
[06:30] amigojapan: jesusabdullah: well, I tried this, I put in sxript x,.js   require("./y.js).hey();    and in y.js I put module.exports.hey(){ console.log("test");}    but tstill  some erroe complaining about module
[06:31] gf3: amigojapan: you have a syntax error
[06:32] nate200: Thanks I will take a look at it, I'm not tottaly in the dark with javascript though
[06:33] nate200: Im having trouble with DOM
[06:33] amigojapan: gf3: in what part? I get "unexpected token {"  right after hey on y.js
[06:33] tilgovi has joined the channel
[06:34] gf3: module.exports.hey(){ console.log("test");}
[06:35] nate200: and the JavaScript Syntax
[06:35] amigojapan: gf3: I dont get it, what is wrong?
[06:36] framlin: module.exports.hey = function hey(){console.log('test');}
[06:36] gf3: ↑ 
[06:36] amigojapan: ah ok framlin, thanx
[06:36] gvz has joined the channel
[06:36] framlin: ;)
[06:37] amigojapan: great framlin,  now it works, this is just what I wanted!!!
[06:37] SubStack: earthquack
[06:37] amigojapan: SubStack: are you ok?
[06:38] SubStack: yep
[06:38] gf3: SubStack: another?
[06:38] amigojapan: SubStack: I live in japan, so I often get earthquakes
[06:38] gf3: too soon, bro
[06:38] SubStack: this is only the 3rd I've felt in california
[06:39] jamescarr: SubStack, eh, we had one today
[06:39] jamescarr: out in VA
[06:39] CarterL: any one have experience using cloud9 when programming js and node.js?
[06:40] SubStack: looks like this one is centered under san leandro
[06:42] slifty has joined the channel
[06:43] CarterL: SubStack: was it a big one?
[06:43] aurojit has joined the channel
[06:44] SubStack: CarterL: 3.9
[06:44] jesusabdullah: I should do some research on comparing earthquake experiences
[06:44] jesusabdullah: there has to be some function of distance
[06:44] jesusabdullah: ie, a "felt like"
[06:44] SubStack: or maybe just a 2.3
[06:44] SubStack: yeah just a 2.3
[06:44] CarterL: my dad just moved to cali
[06:44] SubStack: pretty small
[06:45] mikey_p: trying to click on the details is just 404: http://earthquake.usgs.gov/earthquakes/recenteqsus/Maps/US2/37.39.-123.-121.php
[06:45] sgimeno has joined the channel
[06:46] SubStack: oh there was a 3.9 and a 2.3
[06:46] SubStack: in rapid succession
[06:46] jesusabdullah: Ah!
[06:46] SubStack: revised down to 3.6
[06:47] SubStack: http://earthquake.usgs.gov/earthquakes/recenteqsus/Quakes/nc71625060.php
[06:47] jesusabdullah: I think I felt both!
[06:47] SubStack: http://earthquake.usgs.gov/earthquakes/recenteqsus/Quakes/nc71625065.php
[06:48] shapeshed has joined the channel
[06:48] luke` has joined the channel
[06:48] CIA-65: node: 03Ryan Dahl 07master * r4e1d6fc 10/ (113 files in 4 dirs): Mark tests which are broken in libuv - http://git.io/Qq3cEg
[06:48] CIA-65: node: 03Ryan Dahl 07master * r06428d8 10/ (Makefile tools/test.py): 
[06:48] CIA-65: node: tools/test.py to support marking files a libuv-broken
[06:48] CIA-65: node: Use
[06:48] CIA-65: node:  export NODE_USE_UV=1
[06:48] CIA-65: node:  python tools/test.py --libuv simple pummel
[06:48] CIA-65: node: To run the equivalent of "make test-uv". - http://git.io/L5L8fQ
[06:48] garrensmith: morning all
[06:51] ckknight has joined the channel
[06:51] nate200: Ill show a code, can you tell me how I should write it w/o using document write?
[06:51] CarterL: morning garrensmith
[06:51] nate200: <script type="text/javascript">
[06:51] nate200: var parents = ["Jani", "Tove"];
[06:51] altamic has joined the channel
[06:51] altamic has joined the channel
[06:52] nate200: var children = ["Cecilie", "Lone"];
[06:52] nate200: var family = parents.concat(children);
[06:52] nate200: document.write(family);
[06:52] nate200: results: Jani,Tove,Cecilie,Lone 
[06:53] jamescarr: document.write?
[06:53] anubhaw has joined the channel
[06:53] jamescarr: you shouldnt use that
[06:53] nate200: yes, what should i be doing?
[06:53] mikedeboer has joined the channel
[06:54] simenbrekken has joined the channel
[06:55] CIA-65: node: 03Igor Zinkovsky 07master * r19ff87a 10/ vcbuild.bat : vcbuild.bat - for building from cmd-line using msbuild - http://git.io/hGbcUw
[06:55] nate200: how should that be written where i get the same results
[06:56] anubhaw: "npm install" should always install modules locally w.r.t project root if -g flag is not provided .. right ? . Whenever I do "npm install" packages get installed in usr/lib/node/.npm/   
[06:56] framlin: nate200: where do you want to see yout result and how should it be presented?
[06:57] framlin: on that it depends, how you should rewrite it
[06:57] groom has joined the channel
[06:57] riven` has joined the channel
[06:57] nate200: Alright I will be able to rewrite this in the if/else form?
[06:58] nate200: JavaScript Syntax
[06:58] nate200: would that be an option then?
[06:59] gf3: nate200: SRSLY: http://eloquentjavascript.net/
[07:00] nate200: is that question unanswerable?
[07:00] framlin: I trhink you could read some tutorials about jQuery and leran ther, who to manipulate the DOM, so that you can present the concatenated array in the way you like to see it
[07:01] framlin: i thin if/else has nothing to do with your problem ... ;)
[07:01] ckknight has joined the channel
[07:03] nate200: Yeah I have been looking at jQuery and I can hack most codes using JavaScript but I have also been learning on W3Schools and they use document.write religiously and its messing me up big time.
[07:03] gf3: nate200: http://w3fools.com/
[07:03] nate200: your write
[07:04] nate200: right*
[07:05] meso has joined the channel
[07:05] nate200: seems I can't get write outta my head
[07:05] framlin: If you want to really understand, what jQuery does, then you should go to read the DOM-API and to code the getElementById-bla-blubb-stuff yourself. I think its good to understand what they are doing, but today I would not code it myself again ....
[07:06] saikat has joined the channel
[07:08] dob_ has joined the channel
[07:09] gf3: CarterL: yes, the book is good
[07:09] djcoin has joined the channel
[07:10] azeroth_ has joined the channel
[07:10] rfay has joined the channel
[07:11] CarterL: gf3: thanks, i'll check it out
[07:13] jetienne: i got N and O from node.js logo :) 
[07:13] jetienne: did you notice those arent real hexagone ? how irregular of node.js :)
[07:13] anubhaw: well for those who don't know why that would have happened. The answer is npm1.0 introduced global/local installation concept . So if you have older version of npm (npm -v) then you would not see any local installation. 
[07:14] isaacs has joined the channel
[07:14] bergie_ has joined the channel
[07:14] topaxi has joined the channel
[07:16] uptownben_ has joined the channel
[07:17] raphdg has joined the channel
[07:17] Druide_ has joined the channel
[07:18] Isaiah has joined the channel
[07:24] jacobolu_ has joined the channel
[07:26] bosky101 has joined the channel
[07:26] pig_ has joined the channel
[07:26] alek_br has joined the channel
[07:27] zilch has joined the channel
[07:28] mraleph has joined the channel
[07:28] nate200: hi, Does anybody want to take a look at a application I had created? Its pretty neat
[07:28] gf3: I'm certain you haven't finished reading Eloquent yet
[07:29] nate200: haha..not yet I will read though
[07:29] aabt has joined the channel
[07:29] ablomen has joined the channel
[07:30] nate200: here is the application: http://ascarp.org.ua/whiteboard/
[07:30] nate200: This is my current website: http://passwordis.com
[07:30] gf3: http://cloud.gf3.ca/9ZBm
[07:31] nate200: what that gf3?
[07:31] gf3: your application
[07:32] nate200: it didn't work?
[07:33] chjj: ahh, node is less than 100 watchers away from beating jquery on github, so close
[07:34] [AD]Turbo has joined the channel
[07:34] hybsch has joined the channel
[07:39] pibi has joined the channel
[07:40] pibi has left the channel
[07:40] nate200: I have 3 current users on there its a whiteboard chat application and can add picures draw add text boxes move them chat on the side chage colors save it and I think thats it 
[07:40] dgathright has joined the channel
[07:41] tmpvar has joined the channel
[07:41] H4ns: nate200: nice, but requires flash.
[07:41] jomoho has joined the channel
[07:41] yellowbean has joined the channel
[07:42] chjj: ACTION doesnt have flash installed
[07:42] nate200: yeah the new Ipad 2 has flash
[07:42] chjj: what???
[07:42] chjj: why?
[07:42] chjj: wtf
[07:42] chjj: the one thing i agreed with apple on
[07:42] chjj: and they screw that up too
[07:42] chjj: by adding flash
[07:43] nate200: haha good for my app though
[07:43] H4ns: chjj: you can finish your sentence before you press return.  no animals will be hurt.
[07:43] nate200: haha
[07:43] depywork: lol
[07:43] chjj: H4ns: my thoughts come in small segments when i am upset by flash
[07:44] chjj: but, i am sorry i took up 4 extra lines on your screen, i know theyre very valuable
[07:44] gf3: I demand a refund
[07:46] nate200: gf3: did you take a look at my website?
[07:46] gf3: yes, briefly
[07:46] fly-away has joined the channel
[07:46] piscis has joined the channel
[07:47] nate200: What did you think as it is now?
[07:48] gf3: nate200: I think it doesn't do/say much
[07:48] gf3: none of the links go anywhere
[07:48] gf3: and there is no content
[07:49] nate200: yeah I haven't added any content yet I'm looking to improve its look still
[07:50] gf3: nate200: ahh, well your design needs to take your content into consideration
[07:50] nate200: I'm looking into adding a map design like google maps for the front page where My map is currently at
[07:50] gf3: why?
[07:51] nate200: for Local of people using my app
[07:51] stonebranch has joined the channel
[07:52] nate200: they will have a visual to their hometown or current location
[07:52] whitman has joined the channel
[07:52] H4ns: nate200: do you have a use case for that application?  i mean, who would use it and for what?  do those users benefit from a map?
[07:54] [AD]Turbo has joined the channel
[07:54] mikedeboer has joined the channel
[07:54] nate200: Yes I will be using the chat application as a learning tool for people and use password protection to use a map so users will be able to find cities using a map and Im rambling and not sure what this all says cause it doesnt display everything so I'm just going to send it and go from there
[07:55] mixin has joined the channel
[07:55] mpavel has joined the channel
[07:56] nate200: I am also going to use a voice confrence button so while using the application you will be able to comunicate using a mic 
[07:57] mpavel has left the channel
[07:57] H4ns: nate200: yeah, all nice and well, but who'd want to do that and for what?
[07:57] ccare has joined the channel
[07:58] asabil has joined the channel
[07:58] nate200: I would like to use it to teach people some computer skills and set it up like an online school
[07:59] mc_greeny has joined the channel
[08:00] nate200: I would also use it for small business organizing meetings online.
[08:00] H4ns: nate200: maybe you want to make that clear in your user interface somehow so that when one visits the site, there is an indication of the purpose.
[08:00] [AD]Turbo: hi there
[08:00] gf3: nate200: what H4ns said
[08:00] H4ns: nate200: i'd recommend that you focus on one use case, then on the next.
[08:00] ttpva has joined the channel
[08:01] nate200: Thank you your right I try and do to much nothing gets done
[08:02] clu3 has joined the channel
[08:02] clu3_ has joined the channel
[08:02] nate200: I will update the site tomorrow with one thing in mind 
[08:03] meso has joined the channel
[08:03] amigojapan has joined the channel
[08:03] CIA-65: libuv: 03Ryan Dahl 07multiplicity3 * r107fb52 10/ (38 files in 3 dirs): unix: multiplicity - http://git.io/9JCc_A
[08:04] nate200: most of the site will be password protected hence the name passwordis.com
[08:05] H4ns: nate200: do you think that naming your system after a nuisance is a good approach to make people want to use it?
[08:06] robotmay has joined the channel
[08:06] irahgel has joined the channel
[08:06] cosmincx has joined the channel
[08:07] nate200: well I have thepasswordis.com as well
[08:07] gf3: oh, well then
[08:07] gf3: problem solved
[08:07] H4ns: nate200: that's obviously changing the whole thing completely!
[08:08] JoshC1 has joined the channel
[08:08] JakeyChan: sorry, I have question for simple thing :(
[08:09] ckknight has joined the channel
[08:09] nate200: so when I tell someone its like -password.com their like what and they don't know if its passwordis.com or thepasswordis.com, and I'm like either or.
[08:09] amigojapan: is there any function like require that uses the same name space as the script that called it?
[08:09] JakeyChan: what does mean of "require.extensions[""]  = function (module, filename) {}" ???
[08:09] gf3: amigojapan: don't fight it :)
[08:10] sfoster has joined the channel
[08:10] SubStack: I concur.
[08:10] amigojapan: gf3: it just dont work like the include I use on the browser, I just want to share the same sourcecode between teh client and the server
[08:10] SubStack: being explicit about passing state around is good
[08:10] SubStack: where the state spans files
[08:11] amigojapan: SubStack: doesnt work that way in browserss
[08:11] gf3: amigojapan: you're going to have to modify your code to work in both environments
[08:11] SubStack: amigojapan: it sure can!
[08:11] CIA-65: libuv: 03Ryan Dahl 07master * rb09411a 10/ README : Update build instructions - http://git.io/7FHXqA
[08:11] SubStack: http://github.com/substack/node-browserify
[08:11] amigojapan: ok SubStack, let me look at it
[08:12] gf3: amigojapan: you can infer commonjs/node support by checking for exports/module.exports
[08:12] SubStack: you can just write your code the node way and it will work in the browser
[08:12] SubStack: AS IF BY MAGIC
[08:12] hekkwan has joined the channel
[08:13] nate200: brb
[08:13] gf3: kk
[08:13] amigojapan: ACTION is tempted to just copy and paste the code I want into the server.... instead of shareing a code base between the client and server
[08:13] Sebastien-L has joined the channel
[08:14] bradwright_ has joined the channel
[08:14] SubStack: amigojapan: you might be able to get away with: if (typeof module === 'undefined') { var module = { exports : window }; var exports = module.exports }
[08:15] SubStack: but the browserify solution is much prettier
[08:15] bradwright has joined the channel
[08:16] amigojapan: ok SubStack
[08:17] robhawkes has joined the channel
[08:18] markwubben has joined the channel
[08:19] robhawkes has joined the channel
[08:19] nate200: Also I don't want a huge following with the website so it caters to the Users
[08:20] nate200: using the features
[08:21] aklt has joined the channel
[08:23] nate200: Then after they feel confident with what they learned they can take a certifaction test from what they have learned from the website
[08:23] CIA-65: libuv: 03Ryan Dahl 07master * r58fab07 10/ BSDmakefile : Remove BSDmakefile - http://git.io/tYDqzQ
[08:24] nate200: Ill make hats and t-shirts of course
[08:24] framlin: is there any way to install/update npm (i use 0.210 curently) if I only have http:80 - access as normal user and not as root/sudo?
[08:25] amigojapan: rhmm, I may be able to simulate an include by opening a file and eval()ing it
[08:25] amigojapan: ok lets try that out
[08:25] framlin: If I do not use sudo npm-istalls tells me to uzse sudo if I do, I become Error: ETIMEDOUT, Connection timed out
[08:25] bergelmir has joined the channel
[08:26] bergelmir has joined the channel
[08:26] framlin: so what I am looking for is a way to download the whole stuff via http and than "make" it without the need of any net-connection any more
[08:27] Glenjamin: wget the tarball from github, and then run npm on the tarball
[08:27] framlin: the admins here are paranoid .... ;)
[08:27] Glenjamin: ah, sorry - installing npm itself
[08:28] isaacs: ircretary: inst framlin 
[08:28] ircretary: framlin: `curl http://npmjs.org/install.sh | sh` (or, if there are permission issues, you can try: `curl http://npmjs.org/install.sh | sudo sh`)
[08:28] nate200: Im going to work on a new layout and content for my website..Ill let you know when its done
[08:29] Glenjamin: framlin: see https://github.com/isaacs/npm#readme specifically the bit after "if this fails"
[08:29] nate200: One thing is ecomerce hard to figure?
[08:29] ldblackfox has joined the channel
[08:29] isaacs: framlin: git clone git://github.com/isaacs/npm; cd npm; make install
[08:30] NetRoY has joined the channel
[08:30] CIA-65: libuv: 03Ryan Dahl 07master * rd135122 10/ doc/iocp-links.html : Remove iocp-links - out of date, wrong info - http://git.io/LTZYAQ
[08:31] Nuck: I love my company so much
[08:32] EvRide: Nuck: what is it?
[08:32] Nuck: Apparently I roam Office Depot, trying to pick up ladies in the pen aisle.
[08:32] Nuck: EvRide: Unnamed Startup 493.
[08:32] rurufufuss has joined the channel
[08:33] EvRide: what a coincidence. Mine is Unnamed Start 495
[08:33] EvRide: startup*
[08:33] Nuck: EvRide: OMG NEIGHBOR :P
[08:34] EvRide: yup!
[08:34] Nuck: [1:14:18 AM] Peter Lejeck: "Speaking of long hard objects with "pen" in their name, wanna see my long hard object with "pen" in its name?"
[08:34] Nuck: And FUCK YES
[08:35] Nuck: My colleague installed Ubuntu on their Android and built NodeJS on it :D
[08:35] EvRide: that's quite the accomplishment
[08:36] nate200: where do I start with a eccomerce development?
[08:37] uchuff has joined the channel
[08:37] nate200: Nuck that was an awsome story
[08:38] framlin: isaac: that results in make: *** [install] Fehler 13
[08:38] felixhummel has joined the channel
[08:38] Fabryz has joined the channel
[08:39] framlin: isaacs: error installing npm@1.0.26 Error: EACCES, Permission denied '/usr/local/lib/node_modules'
[08:39] Fabryz: no one answering me in #socket.io so, copypasta time:[10:31] <Fabryz> Is there any directy way to retrieve a session var other than using socket.get('myvar', function (err, myvar) { }); ? [10:31] <Fabryz> something like io.sockets[id].myvar 
[08:39] Fabryz: [10:31] <Fabryz> Is there any directy way to retrieve a session var other than using socket.get('myvar', function (err, myvar) { }); ? [10:31] <Fabryz> something like io.sockets[id].myvar 
[08:39] framlin: please use 'sudo' or log in as root to run this command.
[08:39] Fabryz: damn, pasted twice
[08:40] Nuck: framlin: you know isaacs is offline, right?
[08:40] framlin: no, I do not ... ;)
[08:40] Glenjamin: framlin: either make /usr/local/lib/node_modules writable by your user, or sudo the install
[08:41] Nuck: Left approximately 6 minutes ago (guessing by the timestamps, I had a jump when I resynced my clock)
[08:41] ehedenst has joined the channel
[08:41] dob_ has joined the channel
[08:41] max_dev has joined the channel
[08:42] framlin: that was my question: I am not able to sudo the install, becaus then i get: Error: ETIMEDOUT, Connection timed out
[08:42] nate200: Nuck just so you know I tweeted that on my twitter
[08:44] Nuck: nate200: Linky?
[08:44] jvduf has joined the channel
[08:44] nate200: http://twitter.com/#!/Web_Advances <-Don't worry I have 5 followers
[08:44] amigojapan: yep gf3, I beat it, I creted my own include function, using eval
[08:45] gf3: amigojapan: gross
[08:45] gf3: amigojapan: you are doing it wrong
[08:45] amigojapan: gf3: I know
[08:45] amigojapan: gf3: I am a quick and dirty kind of guy though
[08:46] Nuck: nate200: Retweeted that shit.
[08:46] __doc__ has joined the channel
[08:46] nate200: right on..was gonna say I wish I had more followers cause that was pretty damn funny 
[08:47] gf3: amigojapan: me too, that's why I shave with a spoon
[08:47] amigojapan: lol gf3, I hadent heard that one before :)
[08:48] bzinger has joined the channel
[08:48] Nuck: hadent?
[08:49] amigojapan: Nuck: haden't
[08:49] Nuck: hadn't
[08:49] amigojapan: right
[08:49] erikh_ has joined the channel
[08:49] Nuck: nate200Web Advances sounds like a hashtag for sexual advances made online.
[08:49] amigojapan: sorry Nuck, English is not my native language, although I work as an English teacher in Japan
[08:49] nate200: haha i know thats bad
[08:49] Nuck: amigojapan: ...
[08:49] nate200: I just started it
[08:50] Nuck: In fact, I thought that was the MEANING of it.
[08:50] Nuck: I was like "fitting hashtag"
[08:50] hellp has joined the channel
[08:50] nate200: wow dude
[08:51] dominictarr has joined the channel
[08:51] nate200: Im prolly gonna tweet that too
[08:53] nate200: Yeah I did that is also extremely funny
[08:56] newy has joined the channel
[08:58] bingomanatee has joined the channel
[08:58] booo has joined the channel
[08:59] booo: hi, i'm searching a nice http-client library? any out there? i need all types of http methods and support for redirects or 301
[08:59] Skola has joined the channel
[08:59] Skola: for once in my life CSS has confused me more than 10 minutes
[09:00] Skola: I'm setting a body wrapper of 960px in width
[09:00] Skola: and it happily turns up as an obese 1362px
[09:00] Skola: what the shit
[09:00] mikl has joined the channel
[09:00] Skola: there's just an h1 in there :S:S
[09:01] japj has joined the channel
[09:01] EvRide: Skola: url?
[09:01] mehtryx has joined the channel
[09:01] Skola: localhost :[
[09:02] langworthy has joined the channel
[09:02] Skola: if I can't find a way to fix it soon I will put it online though
[09:02] EvRide: pastebin?
[09:02] H4ns: booo: how does http.request() not work for you?
[09:02] rfay has joined the channel
[09:02] Raynos has joined the channel
[09:04] parshap: booo: should do fine, but https://github.com/mikeal/request is a common alternative
[09:05] chjj: http://groups.google.com/group/nodejs/browse_thread/thread/882ce172ec463f52
[09:05] parshap: booo: *http.request should do fine, that is
[09:05] chjj: ACTION is scared
[09:05] booo: parshap, i used request but i had problems with redirects or permanently moved resources
[09:05] unlink has joined the channel
[09:05] unlink has joined the channel
[09:06] Skola: EvRide will do in a sec
[09:06] Skola: it works fine in Firefox
[09:06] Skola: not in Chrome
[09:06] Skola: will mess around a bit first
[09:06] parshap: booo: mikeal's Request should follow 3xx redirects
[09:08] booo: parse, ok, thx. i will check this again
[09:08] blueadept: is this a good way of structuring functional objects in node? http://pastie.org/private/lfbrnmagvdjvadfmtcba
[09:10] parshap: blueadept: what is a "functional object"
[09:10] blueadept: well just a function i mean
[09:10] fdenbow has joined the channel
[09:10] parshap: blueadept: and i don't see what benefit the iffy is providing
[09:11] parshap: appLoader = { childstart: function ... , bootup: function ... }
[09:11] parshap: is fine
[09:11] nate200: Has anyone seen Lindsey Lohan's website?
[09:11] pickels has joined the channel
[09:11] parshap: you're essentially just namespacing your function names
[09:11] kulor-uk has joined the channel
[09:12] blueadept: oh yeah the if is verbose, i need to take that out
[09:13] EvRide: nate200: im on it now, what
[09:13] EvRide: what's special about it?
[09:13] parshap: blueadept: by iffy i meant the immediately self-invoking function, just to be clear
[09:13] nate200: http://www.lindsaylohan.com/
[09:13] blueadept: ah
[09:13] EvRide: ya, nate, what about it?
[09:14] jamonkko has joined the channel
[09:14] nate200: it's horriable
[09:14] EvRide: ya
[09:14] Skola: I THINK ITS AWESOME
[09:14] Skola: especially the loading graphics
[09:15] Skola: after the L I'm really curious which other letters are gonna appear
[09:15] chjj: of course its horrible, its flash
[09:15] EvRide: chjj: hey now, don't blame flash. blame the developer
[09:15] Skola: much awesome has been done with Flash
[09:15] mikedeboer has joined the channel
[09:15] davidcoallier has joined the channel
[09:15] nate200: it was worse Like 2 hours ago
[09:16] markwubben has joined the channel
[09:16] parshap: a 5MB flash file that loads at ~80KBs? seriously?
[09:16] Skola: yes but it's totally worth the wait
[09:16] Skola: .. :[]
[09:16] catb0t: SyntaxError: Unexpected token :
[09:17] Skola: lol catb0t :[]
[09:17] parshap: X-Powered-By:ASP.NET
[09:17] nate200: nature.swf was mansion.swf like 2 hours ago
[09:17] parshap: ^_____^
[09:17] EvRide: flash is easy for people to get started with. so graphic artists who don't know shit about anything get into it and make utter crap
[09:17] catb0t: lol however,  separator probably only applies to msvc builds, however one generates 
[09:17] nate200: asp.net over php?
[09:18] parshap: lol wait
[09:18] EvRide: good flash DEVELOPERS like myself make much much better content (note: I'm getting out of flash though)
[09:18] parshap: is this flash thing not actually interactive in any way?
[09:18] EvRide: nope, its a coming soon page, lol
[09:18] parshap: oh well
[09:19] parshap: at least her website is better than her acting
[09:19] Skola: well it has boobs
[09:19] parshap: HURR burn :<
[09:19] Skola: :[
[09:19] EvRide: with a highly compressed dubstep remix of In For the Kill by La Roux, completely ruins the song for me
[09:19] nate200: Thats a good website idea call out peoples stupid ass designs
[09:19] Skola: no
[09:19] EvRide: just absolutely butchered
[09:19] Skola: it's not
[09:19] Skola: it's not really cool
[09:19] Skola: the way to make the interwebs prettier is to make good shit
[09:20] Skola: it's way too easy trashing others :[]
[09:20] japj: !doc link dgram#createSocket
[09:20] ckknight has joined the channel
[09:20] japj: !link doc dgram#createSocket
[09:21] japj: damn where did that bot go?
[09:21] EvRide: had to take a bot nap
[09:21] akshatj has joined the channel
[09:21] Glenjamin has joined the channel
[09:22] kurtzhong has joined the channel
[09:23] andrewfff has joined the channel
[09:24] maushu has joined the channel
[09:25] thepatr1ck has joined the channel
[09:26] ohtogo has joined the channel
[09:28] blup has joined the channel
[09:29] rasputnik has joined the channel
[09:30] ckknight has joined the channel
[09:30] fly-away has joined the channel
[09:30] meso has joined the channel
[09:31] rasputnik: writing a small library and I'd like require() to return an Object. Is there any sample code to show how you'd 'construct' an instance via require?
[09:31] hekkwan has joined the channel
[09:31] jvdev has joined the channel
[09:32] rasputnik: clarify: I can see how to return an object with module.exports, but not how to pass the initializer information in via a require
[09:34] parshap: you can't pass arguments to a module via `require`
[09:34] jesusabdullah: require("module").init(options) or require("module")(options)
[09:34] DrMcKay has joined the channel
[09:34] parshap: your module can export a constructor that you can then call with your initialization data
[09:34] jesusabdullah: yeah, or new require("module")(options)
[09:34] parshap: or your module.exports object can have an initialize function that takes the data
[09:35] parshap: yeah what jesusabdullah said
[09:35] seivan has joined the channel
[09:35] jesusabdullah: We just had this discussion---me and someone else, I mean---a few hours ago so it was fresh in my mind
[09:36] newy has joined the channel
[09:36] rasputnik: thanks both - require('foo').init(….) seems neat enough, thanks. That'll be ok to require mulitple times won't it?
[09:37] jesusabdullah: rasputnik: var foo = require("foo"); foo.init(); foo.init();
[09:37] jesusabdullah: or whatever. Just assign it to a variable and use that.
[09:38] CrypticSwarm has joined the channel
[09:38] parshap: calling require multiple times is fine too though
[09:39] parshap: maybe a little verbose
[09:39] mikedeboer has joined the channel
[09:41] pdelgallego has joined the channel
[09:42] rasputnik: the library is just a little wrapper around Restler in any case, it just adds some convenience methods to wrap a couple of backend REST APIs. Thanks, this'll save passing options hashes around for every call.
[09:42] framlin: these modules drive me crazy ;) .. I have var pcap = require('pcap') ang get Cannot find module './../.npm/pcap/0.2.8/package/pcap'
[09:42] framlin: why is node not looking under ../node_modules/....?
[09:43] rasputnik: generally not a fan of instances personally, prefer static methods - but will let me refactor a lot of boilerplate I need otherwise
[09:44] rasputnik: framlin: have you got some funny environment variable set?
[09:44] framlin: there is no ../.npm, only ../node_modules/node_pcap/
[09:44] framlin: what name could that funny variable have, to have a look at .. ?
[09:46] adrianmg has joined the channel
[09:46] ehedenst has joined the channel
[09:46] adrianmg has left the channel
[09:46] depywork has joined the channel
[09:47] N0va has joined the channel
[09:47] framlin: this node_pcap is recommanded at the nodejs-site, but I am just too dumb to get ir installed an running correct behind the firewalll :(
[09:52] rasputnik: framlin: I'm guessing, but 'set | grep -i node' might show something up that's still pointing at the old .npm paths?
[09:53] rfay has joined the channel
[09:54] booo has joined the channel
[09:54] framlin: rasputnik: only _=node_modules/ seems to be concerned to nodejs .... there are som einode-lines too
[09:54] booo: parshap, do you know if the redirect also works with the put method? at the moment it seems like only get works with the request lib
[09:54] framlin: so I think, NO, I do not have any funny ENV-vars
[09:56] framlin: I begin to ask myself if it could be wise to check if there would be a better node-package-module
[09:56] framlin: at least, if I sit behind that firewall
[09:58] ehedenst has joined the channel
[09:58] temp01 has joined the channel
[09:59] eldios has joined the channel
[09:59] eldios: yo yo yo
[09:59] eldios: =)
[09:59] parshap: booo: looks like Request does not follow redirects on POST or PUT methods
[09:59] parshap: https://github.com/mikeal/request/blob/master/main.js#L239
[10:00] parshap: i'm not really sure what the correct thing to do is, to be honest
[10:00] kawaz_air has joined the channel
[10:00] parshap: i think a 303 is supposed to result in a GET to the new location
[10:00] pyrotechnick has joined the channel
[10:00] booo: parshap, yeah found this one minute ago. i'm also not a http expert :)
[10:01] jaequery has joined the channel
[10:02] booo: i double check the spec and try to code a solution or issue a bug ticket
[10:02] parshap: http://stackoverflow.com/questions/4764297/difference-between-http-redirect-codes#4764456 seems to have some answers
[10:02] te-brian has joined the channel
[10:02] riven has joined the channel
[10:03] bitch333z has joined the channel
[10:03] parshap: Request should most likely be following 303s
[10:03] parshap: i would open an issue
[10:04] parshap: looks like there has already been some discussion on the topic https://github.com/mikeal/request/issues/search?q=redirect
[10:09] maushu has joined the channel
[10:09] nate200: Alright talk to you later
[10:09] bitch333z: can someone view node.js from view source option in browsers?
[10:09] hackband has joined the channel
[10:10] SubStack: I'm not even sure how to begin to go about responding to that.
[10:11] bitch333z: since its a server side javascript, what if someone used the mysql module,
[10:11] bitch333z: viewing its source would reveal sensitive data
[10:11] DrMcKay: umm...
[10:11] bitch333z: I've not gone deep in node.js, and this might sound like a dumb question I'll have to admit later
[10:11] SubStack: no
[10:11] parshap: booo: i kind of agree with with isaacs' comments here https://github.com/mikeal/request/issues/29#issuecomment-1237612
[10:11] SubStack: no it wouldn't
[10:12] SubStack: bitch333z: node is just like ruby or perl or php, only instead of those languages running on the server, javascript runs on the server in the same capacity
[10:12] bitch333z: SubStack thank you.
[10:13] bitch333z: Is any good book out for Node.js yet?
[10:13] mike5w3c_ has joined the channel
[10:13] bitch333z: All the ones I've found seems to be in progress
[10:13] arcchTT has joined the channel
[10:13] arcchTT: hi good people of node
[10:13] arcchTT: is there a default timeout on http requests?
[10:15] chrisumbel has joined the channel
[10:15] chrisumbel has joined the channel
[10:17] fermion has joined the channel
[10:18] booo: parshap, i would like to see an option to change the behaviour of the client
[10:19] booo: however it's a decision of the library authors
[10:20] tjholowaychuk has joined the channel
[10:21] depywork has joined the channel
[10:21] depywork has left the channel
[10:21] craigpetchell has joined the channel
[10:22] gmjbook has joined the channel
[10:28] levi501d has joined the channel
[10:29] arcchTT: eish
[10:29] arcchTT: how is this 120 second idle timeout set?
[10:30] depywork has joined the channel
[10:30] tjholowaychuk: arcchTT in http.js, i think it's still hard-coded in
[10:30] tjholowaychuk: req.socket.setTimeout()
[10:30] cjroebuck has joined the channel
[10:30] tjholowaychuk: "socket.setTimeout(2 * 60 * 1000); // 2 minute timeout"
[10:32] parshap: tjholowaychuk: i was looking too. that's for incoming connections to an http server, no?
[10:32] tjholowaychuk: yeah
[10:33] arcchTT: tjholowaychuk: thanks
[10:33] parshap: tjholowaychuk: but he was looking for a timeout for "http requests"?
[10:34] Glenjamin: SubStack: technically node is more like twisted or eventmachine, where python/ruby is replaced by v8 JS
[10:35] jbrokc has joined the channel
[10:35] yenz: tjholowaychuk: you're up late!  thanks for all your hard work in the node world :)
[10:35] tjholowaychuk: yenz haha thanks. yeah, cant sleep at all tonight :|
[10:35] tjholowaychuk: yenz go nuts :)
[10:35] arcchTT: might be worth documenting this?
[10:35] yenz: ty ty 
[10:36] arcchTT: docs only refer to sockets as having no timeout
[10:36] yenz: i get a ton of valuable info from reading the scrollback... but i'm going on vacay for a couple weeks
[10:36] tjholowaychuk: arcchTT that might be just for net.js
[10:36] arcchTT: tjholowaychuk: yes it is
[10:36] tjholowaychuk: nice! I need a vacation haha
[10:36] arcchTT: tjholowaychuk: but threw me off all the same :)
[10:40] adambeynon has joined the channel
[10:40] bingomanatee has joined the channel
[10:41] bitch333z has joined the channel
[10:43] CoinOpeBoy has joined the channel
[10:43] ambroff has joined the channel
[10:43] FireFly has joined the channel
[10:44] jamonkko has joined the channel
[10:45] langworthy has joined the channel
[10:45] hekkwan has joined the channel
[10:45] arcchTT: tjholowaychuk: unrelated Q, but why does socket.setTimeout not appear in the object printed by console.log(socket)
[10:46] tjholowaychuk: arcchTT it does if you do > console.log(require('net').Socket.prototype)
[10:46] tjholowaychuk: it's a method on the proto
[10:47] habeebperwad has joined the channel
[10:48] Emmanuel` has joined the channel
[10:48] habeebperwad has left the channel
[10:48] venu has joined the channel
[10:50] hakunin has joined the channel
[10:50] butu5 has joined the channel
[10:50] rfay has joined the channel
[10:51] bitch333z has joined the channel
[10:51] arcchTT: tjholowaychuk: oh okay. i thought the prototype was just another object property
[10:52] kurtzhong has joined the channel
[10:53] arcchTT: tjholowaychuk: ah, got it. :)
[10:54] tjholowaychuk: it's a different object
[10:54] tjholowaychuk: console.log() just doesnt happen to show those
[10:54] tjholowaychuk: https://github.com/visionmedia/inspect
[10:54] tjholowaychuk: outputs a hierarchical display, it's not perfect and far less convenient since it's not in core but hey
[10:54] tjholowaychuk: gives you the idea
[10:55] ballantyne has joined the channel
[11:01] arcchTT: could be useful, thanks. i guess i've never actually interrogated what prototyping means in spite of using it all the time
[11:03] bitch333z has joined the channel
[11:04] rendar has joined the channel
[11:05] tjholowaychuk: arcchTT it's an awesome concept
[11:05] tjholowaychuk: a little wonky with js
[11:05] tjholowaychuk: since .prototype and constructors are in the mix
[11:05] tjholowaychuk: but
[11:05] tjholowaychuk: meh
[11:06] Glenjamin: arcchTT: This was my attempt at explaining JS's prototypes http://blog.glenjamin.co.uk/i-think-i-finally-really-understand-javascrip
[11:06] industrial: I love the Lua metatable implementation
[11:07] industrial: basically allows you to roll your own OOP system, however complex (limited, though) you want it
[11:08] tjholowaychuk: yeah i like the lua stuff too, not sure it needs to really have all the lookup stuff that it does but i like that lua chooses a few concepts and just goes with those
[11:08] tjholowaychuk: js is moving towards being more trendy
[11:08] tjholowaychuk: and less focused IMO
[11:08] industrial: for example, a very simple one; https://github.com/Industrial/lua_site/blob/master/lib/industrial/class.lua
[11:08] tjholowaychuk: :D
[11:09] tjholowaychuk: that's the way it should be, typeof/instanceof really blow
[11:11] industrial: Lua has a chicken-egg problem, it's not one of the cool kids' languages like Ruby had an explosion since 03 and now Javascript does with NodeJS
[11:12] industrial: It's mostly used in embedded projects, user configuration etc, while the language itself is just as powerful as another (and LuaJIT2 rox your sox)
[11:12] tjholowaychuk: yeah it's unfortunate that lua is not the browser lang
[11:12] arcchTT: the prototypical approach feels subtle, flexible but powerful and efficient. all my favourite things.
[11:12] tjholowaychuk: we're stuck with poor misguided js
[11:12] tjholowaychuk: arcchTT yeah it's very flexible
[11:13] tjholowaychuk: slightly less so with js, but still nice if you're from ruby or something
[11:13] langworthy has joined the channel
[11:13] arcchTT: <- ruby virgin
[11:14] arcchTT: ...and proud of it. having found node i feel no compulsion to sleep around
[11:15] arcchTT: and no compunction for having not, just to be sure
[11:16] parshap: tjholowaychuk: js is becoming python. the "std" lib redundancies are already there
[11:16] jamonkko has joined the channel
[11:16] tjholowaychuk: im not a py guy, im glad js at its core is bare-bones though
[11:16] tjholowaychuk: ruby's stdlib is so stale
[11:17] tjholowaychuk: and useless
[11:17] parshap: (re js becoming "trendy" :o)
[11:17] tjholowaychuk: oh
[11:17] tjholowaychuk: haha
[11:17] rasputnik has left the channel
[11:19] hij1nx has joined the channel
[11:21] seivan has joined the channel
[11:22] DrMcKay: so, when can I start to feeling cool in public just by saying "I'm a JS programmer"?
[11:23] DrMcKay: s/ to //
[11:24] chjj: well youre going to have to differentiate between server and client side
[11:24] chjj: (only server side js coders are cool) ;p
[11:24] arcchTT: both are cool
[11:24] DrMcKay: "I'm a node.js programmer. Call me back."
[11:24] arcchTT: :)
[11:24] arcchTT: the publicity problem for client side js is the DOM imo
[11:25] DrMcKay: DOM is a piece of shit, IMHO
[11:25] tjholowaychuk: and the fact that people are writing it with different languages that compile to it lol
[11:25] tjholowaychuk: that says alot
[11:25] DrMcKay: tjholowaychuk: true
[11:25] tjholowaychuk: you dont see that too much with ruby/py/lua/blahblah
[11:25] eee_c1 has joined the channel
[11:26] DrMcKay: you don't see it at all, I suppose
[11:26] framlin: DrMcKay: NOW ;)
[11:26] arcchTT: i write "low-level" client side js but at some point it has to interact with the DOM, at which point it falls over
[11:26] chjj: ACTION goes to make a js to ruby compiler
[11:26] DrMcKay: framlin: so, I guess I'll start going out :D
[11:26] junkee[] has joined the channel
[11:26] DrMcKay: chjj: js to brainfuck
[11:27] chjj: yeah, ill do that too
[11:27] DrMcKay: it reminds me of a cool programming task
[11:27] DrMcKay: you got an array of states of boolfuck vm memory and you were supposed to generate a program that generated them 
[11:27] junkee[] has left the channel
[11:27] junkee[] has joined the channel
[11:27] DrMcKay: boolfuck = brainfuck, but with boolean instad of bytes
[11:28] DrMcKay: but I wrote it in Delphi.
[11:28] DrMcKay: ACTION awaits for stones being thrown
[11:28] chjj: delphi!
[11:29] mikl has joined the channel
[11:29] mikl has joined the channel
[11:29] DrMcKay: hey, I was 15 maybe!
[11:31] DrMcKay: yeah, I was 15
[11:31] antono has joined the channel
[11:31] DrMcKay: but I like this code
[11:31] DrMcKay: besides that Delphi bullshit, it looks even clean
[11:32] chjj: i tried to decipher delphi or something
[11:32] japj: I remember Turbo Pascal
[11:32] chjj: it was a program written in delphi that modified opcodes in a binary
[11:32] DrMcKay: japj: who doesn't
[11:32] chjj: so it was hard
[11:32] DrMcKay: chjj: skynet?
[11:32] chjj: and i didnt figure it out
[11:32] japj: pfff. that brings back memories ;)
[11:33] DrMcKay: no shit, they wrote Skynet in Delphi?!
[11:34] DrMcKay: no shit, this code is a state of art
[11:34] okuryu has joined the channel
[11:34] DrMcKay: also, I've started thinking about versioning my home directory
[11:34] DrMcKay: that would bring back the memories!
[11:35] DrMcKay: "see, son, in this revision daddy started coding in server side JavaScript"
[11:36] chjj: whats a "revision daddy"
[11:36] chjj: ;p
[11:36] H4ns: i still have this in my .cshrc:  alias suntools suntools -i -S
[11:36] H4ns: gotta clean up some day.
[11:36] chjj: drmckay: not a bad idea
[11:36] DrMcKay: I feel so young, I had to google suntools
[11:36] chjj: ACTION is a revision daddy
[11:36] DrMcKay: chjj: :D
[11:37] DrMcKay: oh, that would resolve problems with synchronization
[11:37] H4ns: DrMcKay: and you've probably not got a useful result
[11:37] DrMcKay: H4ns: not really
[11:37] DrMcKay: H4ns: something about Java
[11:37] langworthy has joined the channel
[11:37] knifed has joined the channel
[11:37] DrMcKay: H4ns: http://toastytech.com/guis/sv35.html <- this?
[11:37] H4ns: DrMcKay: not that it matters much, but suntools was the NeWS based user interface that sun had before they switched to, i think, motif
[11:38] H4ns: DrMcKay: i ran it on my sun 3/80 in the early 1990ies
[11:38] DrMcKay: well, looks better than GNOME 3
[11:38] rc2 has joined the channel
[11:39] DrMcKay: H4ns: it looked like in this link?
[11:39] H4ns: DrMcKay: yeah, that's what it was.
[11:39] H4ns: DrMcKay: it basically sucked, and i mostly used twm back then.  ah, those were the days.
[11:40] rmcastil has joined the channel
[11:40] DrMcKay: H4ns: but I still believe it was better than GNOME 3 ;)
[11:40] H4ns: DrMcKay: i'd not believe that.  all the guis of the 1980ies sucked very very hard, and suntools was no exception.
[11:41] rc2: Epeli: just downloaded the tarball of your geekslides from git and am playing around with it :) very nice
[11:41] Epeli: rc2:  cool
[11:42] DrMcKay: ACTION goes to find some virtual machine he could instll suntools on
[11:42] cosmincx1 has joined the channel
[11:42] pita has joined the channel
[11:42] Epeli: rc2:  if you really get into it, integrate it with this http://imakewebthings.github.com/deck.js/
[11:42] scottschecter has joined the channel
[11:43] Epeli: that would be awesome
[11:43] mehtryx has joined the channel
[11:43] H4ns: ACTION feels sorry to have mentioned it.
[11:43] DrMcKay: well, playing with suntools is a fair excuse for slacking off, isn't it?
[11:43] H4ns: DrMcKay: fair enough!
[11:44] DrMcKay: H4ns: so than, thanks for mentioning :)
[11:44] H4ns: DrMcKay: just ask me if you need more suggestions for wasting some quality time with ancient systems.
[11:44] dexter_e has joined the channel
[11:44] framlin: Deplphi, best coding-environment ever!
[11:44] rc2: Epeli: i'm really not much of a hacker - big newb to all this stuff - but will let you know how i get on for sure /me checks deck.js
[11:45] DrMcKay: H4ns: if I get alive with suntools, I'll ;)
[11:45] DrMcKay: framlin: you're joking, right?
[11:45] DrMcKay: framlin: also, what did you put at the end of your message?
[11:47] rc2: Epeli: this looks like nice... can you have animated svg in the slides?
[11:47] booo has joined the channel
[11:48] blueadept has joined the channel
[11:48] blueadept has joined the channel
[11:48] N0va has joined the channel
[11:49] Epeli: rc2: Sure. You can have anything you can have on normal webpage. Youtube video, webgl games etc
[11:49] DrMcKay: oh. we're having a DevMeetings here where I live. next one will be about comparing node.js and PHP performance.
[11:50] DrMcKay: I'm pretty much afraid to go
[11:50] arcchTT: css transitions are awesome
[11:51] DrMcKay: you think that PHPers may be dangerous?
[11:51] mikl has joined the channel
[11:51] mikl has joined the channel
[11:51] gquental has joined the channel
[11:52] rc2: Epeli: this is perfect for what i need - i just need to be able to control multiple instances of this from another browser (to serve music notation to musicians live in a performance) so server/client is like conductor/musicians :)
[11:52] Epeli: rc2:  wow, that's really nice use case :)
[11:53] Epeli: rc2:  let me hear how it goes :)
[11:53] dexter_e has joined the channel
[11:53] arcchTT: all an online presentation app needs are a) auto-scaling and b) an easy design mode, and powerpoint will be dead within the decade
[11:53] DrMcKay: arcchTT: true
[11:54] mbutubuntu has joined the channel
[11:54] mbutubuntu: hello everybody
[11:54] Peniar has joined the channel
[11:54] arcchTT: and no jquery
[11:54] arcchTT: :D
[11:54] jbrokc has joined the channel
[11:54] brianseeders has joined the channel
[11:55] DrMcKay: arcchTT: it's almost only CSS, isn't it?
[11:55] DrMcKay: arcchTT: nah, I see that deck.js has a fair amount of js
[11:55] Charuru has joined the channel
[11:56] DrMcKay: most are commands, though
[11:56] DrMcKay: *comments
[11:56] rc2: Epeli: i just need to figure out how to code! in the manage.js  i need another funtion that will just grab a defined slide rather than the next previous thing - i dont want to have to be linear - any hints - i want the interface to be a bunch of links to different slides 
[11:56] zastaph has joined the channel
[11:56] xastey has joined the channel
[11:56] arcchTT: yeah the high css:js ratio is a good thing
[11:56] dexter_e: arcchTT: http://280slides.com/
[11:57] DrMcKay: btw, does anyone know if oo.org allows to easily write a file format handler or something?
[11:57] DrMcKay: that would cool to have deck.js as a backend which everyone can save to
[11:57] hackband_ has joined the channel
[11:58] dexter_e: Has anyone done dynamic routing in node? 
[11:58] kwk has joined the channel
[11:58] kwk: Can I use node modules like log4js when packaged as tar.gz and installed without having npm installed?
[11:58] dexter_e: I would like to keep memory usage low but be able to load different modules at run-time with /url/app1/   url/app2/ 
[11:58] Epeli: rc2:  it should be trivial. Just create here https://github.com/epeli/geekslides/blob/master/public/js/manage.js#L66 bunch of new buttons according to the slides and bind socket.io emits to them
[11:59] arcchTT: dexter_e: this is good
[11:59] dexter_e: Its been around since 2006
[12:00] rc2: Epeli: yeah i really need to rtfm - i only started looking at js last week never mind node and socket.io :) 
[12:00] mehtryx has joined the channel
[12:00] aaronmcadam has joined the channel
[12:00] arcchTT: i just saw... i'm continually blown away by how long ago all of this was possible and how long it's taking to go really mainstream
[12:01] Epeli: rc2: Right attitude and you'll will surely nail it :)
[12:01] dexter_e: arcchTT:  if real utility was the only criteria for corporate adoption, huge companies like oracle wouldn't exist
[12:02] infynyxx has joined the channel
[12:02] socketio\test\04 has joined the channel
[12:02] dexter_e: oracle db rakes in billons of dollars for software which can be replaced with free products: why?
[12:02] arcchTT: yeah
[12:02] DrMcKay: dexter_e: and it would better
[12:02] arcchTT: i think we underestimate the value of "support"
[12:02] mbutubuntu: hey guys any VM with node.js pre-built-in?
[12:03] DrMcKay: arcchTT: well, open source community provides better support than many companies, I believe
[12:03] dexter_e: DrMcKay: I agree
[12:03] dexter_e: the real answer is:  accountability 
[12:03] arcchTT: DrMcKay: yeah but tell my mom that!
[12:03] DrMcKay: arcchTT: her phone number or e-mail?
[12:03] dotcomstu has joined the channel
[12:03] Glenjamin: enterprise level deployments want an SLA from someone
[12:03] arcchTT: lol
[12:03] Glenjamin: so they can be blamed
[12:04] arcchTT: i was gonna ask: what's node's phone number
[12:04] Glenjamin: you don't a warranty with OSS
[12:04] dexter_e: Glenjamin: precisely
[12:04] DrMcKay: Glenjamin: true
[12:04] Glenjamin: but hey
[12:04] infynyxx has joined the channel
[12:04] Glenjamin: i work for a Big Co
[12:04] Glenjamin: and we're using Node
[12:04] Raynos: Does anyone have any recommended on node.js based Event driven architecture?
[12:04] DrMcKay: it's all about having a person to blame when something doesn't work, I believe
[12:04] Raynos: recommended reading*
[12:04] arcchTT: yeah the guy who takes html5 saas and gives it a warranty and phone number will make a fortune
[12:04] mbutubuntu: obviouslt business support is for businesses... open source support is for little business or developers/users
[12:05] dexter_e: arcchTT: +1 415 400 0600
[12:05] dexter_e: :)
[12:05] arcchTT: is that your mom, or node? :)
[12:05] dexter_e: its node
[12:05] dexter_e: hHFAHAHAHAA
[12:06] arcchTT: im extually surprised
[12:06] burningdog has joined the channel
[12:06] Peniar has joined the channel
[12:06] kwk: hi. i want to use npm to install packages from tarballs NOT by downloading and compiling them. Is this possible? 
[12:07] DrMcKay: kwk: npm install <tarball>
[12:07] blueadept has joined the channel
[12:07] blueadept has joined the channel
[12:07] DrMcKay: kwk: it can be done with URL as well
[12:07] kwk: DrMcKay: Thank you! So on my build host I do "npm pack rbytes@0.3.8" to create a tarball, right?
[12:08] Sembiance: greetings and salutations
[12:08] Skola: quick question; when working with coordinates (2D), do I put x or y first in an array/object?
[12:08] dexter_e: If everything which is required()  is compiled into the C application during server start , does that mean dynamic url based app routing is not possible without server restart?
[12:08] DrMcKay: kwk: I haven't used pack yet, but it's possible
[12:08] tjholowaychuk: Skola i've only ever seen/done (x,y)
[12:08] Sembiance: Skola: I've always thought of any coordinates as X, Y    width, height
[12:08] Skola: ok, I thought as much
[12:09] Skola: but yeah, margin: 0 auto, if you know what I mean :S
[12:09] DrMcKay: kwk: yes
[12:09] dexter_e: I wanted to do dynamic routes which essentially load any module based on whats in the url, is this possible?
[12:09] al3xnull_ has joined the channel
[12:09] boehm has joined the channel
[12:09] DrMcKay: kwk: but not with 0.3.8, it doesn't work
[12:09] kwk: DrMcKay: On this page under step 4 it says I have to download an "install.sh" file to download npm. https://github.com/joyent/node/wiki/Installation This is black magic to me because I need to deploy npm to a host without internet access. 
[12:10] DrMcKay: kwk: oh...
[12:10] progme has joined the channel
[12:10] DrMcKay: kwk: wait, give me a sec
[12:10] Sembiance: Skola: Well, for margins and padding, I always think of star treks tribbles. As in TRibBLe  or TRBL  or top, right, bottom, left
[12:10] Sembiance: Skola: but that's a CSS thing, not so much a node.js thing :)
[12:10] gquental has joined the channel
[12:10] kwk: DrMcKay: This seems to work for me: "npm pack rbytes@0.0.2" I swizzled the version number :)
[12:11] dexter_e: myapp.com/cradle/somefunction    or     myapp.com/connect/somefunction   
[12:11] Skola: haha that's creative ;p
[12:11] DrMcKay: kwk: npm pack npm should work
[12:11] Skola: I have no problem remembering it with CSS, after doing it thousands of times
[12:11] dexter_e: basically make a url based require()
[12:11] H4ns: dexter_e: what would be the problem with that?
[12:11] Skola: not to say that it took me thousands of times, but ja
[12:12] dexter_e: would it need to be required first?
[12:12] tjholowaychuk: dexter_e wouldnt have to be
[12:12] tjholowaychuk: that's all up to you
[12:12] H4ns: dexter_e: you can require() on demand
[12:12] kwk: DrMcKay: Ok, now I have an npm tarball but how to I install it without npm? hen egg problem :)
[12:12] dexter_e: require on demans!?
[12:12] H4ns: dexter_e: nothing prevents you from requiring some module in response to an incoming http request.
[12:12] DrMcKay: kwk: shit.
[12:13] DrMcKay: kwk: wait! npm is in this npm
[12:13] DrMcKay: kwk: give me a sec, again
[12:13] dexter_e: Ok. Thanks everyone :)
[12:13] SubStack: curl -N 71.198.76.38:8080
[12:13] adrianmg has joined the channel
[12:13] dexter_e: I thought require was a compile-time thing 
[12:13] kwk: DrMcKay: Just to let you know you're really helping me out here! Thank you dude!
[12:14] H4ns: dexter_e: there is no such thing as "compile time" with javascript.
[12:14] dexter_e: H4ns:  I was under the impression this was the function of V8
[12:14] DrMcKay: kwk: got it
[12:14] H4ns: dexter_e: yeah, but the compiler is invisible to the programmer.
[12:14] DrMcKay: kwk: npm is in bin directory of the package
[12:15] tjholowaychuk: dexter_e require() is a node function written with js
[12:15] H4ns: dexter_e: so you, as a programmer, don't have to concern yourself with "compile time".  v8 compiles as needed.
[12:15] DrMcKay: kwk: I believe that when you unpack it and tell him to install that npm tarball, it will do it
[12:15] tuhoojabotti: npm install npm
[12:16] SubStack: hey lookit, I maked the ansi progress bars not require a screen reset
[12:16] DrMcKay: tuhoojabotti: no Internets
[12:16] tuhoojabotti: :(
[12:16] DrMcKay: kwk: unpack it all, node package/bin/npm <tarball with npm>
[12:16] SubStack: and data can be appended to the stream as the progress bars are updating even
[12:16] dexter_e: are there any performance drawbacks for repetitively running require()  ?
[12:16] SubStack: (amazingly tricky to do)
[12:16] tjholowaychuk: SubStack annoying hey
[12:17] DrMcKay: npmception?
[12:17] chjj: dexter_e: require caches modules, if thats what youre wondering
[12:17] DrMcKay: npm installing npm packed by npm
[12:17] tuhoojabotti: dexter_e: require is cached
[12:17] tuhoojabotti: ah
[12:17] bnoordhuis has joined the channel
[12:17] tuhoojabotti: Already said
[12:17] tuhoojabotti: ACTION hides
[12:17] dexter_e: I thought one of the performance features of Node was that your app lives as a high performance C application with no more need for interpretation
[12:18] H4ns: dexter_e: you thought wrong.
[12:18] tuhoojabotti: huh
[12:18] tuhoojabotti: Yeah :D
[12:18] dexter_e: really ?
[12:18] dexter_e: are you sure about that?
[12:18] tuhoojabotti: dexter_e: V8 "compiles" js into assembly and stuff like that.
[12:18] tbranyen: tjholowaychuk: i can't find the mozarella fireferret download anywheres!
[12:18] tuhoojabotti: And optimizes it
[12:18] tjholowaychuk: tbranyen hahaha
[12:18] chjj: v8 doesnt compile anything, it uses black magic instead
[12:18] tuhoojabotti: Node is more or less just a wrapper
[12:19] dexter_e: right but its compiled in a binary with no more interpreting , right? 
[12:19] tuhoojabotti: chjj: Hence the wuotes
[12:19] tuhoojabotti: quotes*
[12:19] DrMcKay: chjj: so now I know what ate my cat
[12:19] H4ns: dexter_e: no.
[12:19] tjholowaychuk: dexter_e it's a VM
[12:19] H4ns: dexter_e: did you actually try out node yourself?
[12:19] dexter_e: I did. I thought this was the reason we have to restart the server when changes happen in JS.
[12:19] chjj: yes, all black magic
[12:20] DrMcKay: btw, I believe it would be possible to change v8 into actual compiler
[12:20] dexter_e: because its not re-interpreted upon requests
[12:20] DrMcKay: but it wouldn't make real sense, since v8 is a jit
[12:20] H4ns: dexter_e: you don't have to restart your server, but you need to make sure that your running v8 reloads the changed javascript.
[12:20] Fabryz: for some reason i'm not able to use process.uptime();
[12:20] Fabryz: TypeError: Object #<EventEmitter> has no method 'uptime' 
[12:20] DrMcKay: !doc link process
[12:20] DrMcKay: FUCK, dmkbot!
[12:20] DrMcKay: !ping
[12:20] dexter_e: H4ns and how is that done?
[12:21] Fabryz: he's dead
[12:21] tuhoojabotti: DrMcKay: It's not here.
[12:21] tuhoojabotti: dexter_e: nodemon!
[12:21] tuhoojabotti: D:
[12:21] Fabryz: we are all doomed
[12:21] DrMcKay: for fucks sake, I even have no idea why he keeps disconnecting
[12:21] Glenjamin: Fabryz: looks like uptime is only 0.5+
[12:21] tjholowaychuk: dexter_e http://en.wikipedia.org/wiki/Just-in-time_compilation
[12:21] dexter_e: right but nodemon restarts the server
[12:21] tuhoojabotti: Yes
[12:21] Fabryz: Glenjamin damn that's why. I was using >0.5 unstable last week, now I got back to 4.11 stable
[12:21] Fabryz: thanks
[12:21] DrMcKay: maybe IP changes and he can't deal with it?
[12:22] tbassetto has joined the channel
[12:22] H4ns: dexter_e: please experiment with require() and require.cach
[12:22] H4ns: dexter_e: require.cache even - it is documented.
[12:22] dmkbot has joined the channel
[12:23] DrMcKay: wait, I could deploy new version of it before
[12:23] dexter_e: H4ns: thanks, will do.
[12:23] H4ns: dexter_e: you should also look at the documentation for the repl module
[12:24] H4ns: dexter_e: by playing interactively with a running node instance, you can learn a lot.
[12:24] dmkbot has joined the channel
[12:24] skydda has joined the channel
[12:24] skydda: anyone help?
[12:24] dexter_e: Sweet. will do.  
[12:24] dexter_e: I totally though JIT would more like recompile on every request , not on every restart
[12:25] dexter_e: this was my misconception, i think
[12:25] tuhoojabotti: It's not php!
[12:25] skydda: Build failed:  -> task failed (err #1):
[12:25] H4ns: dexter_e: compilation is transparent to you, as a programmer (save the timing aspects).  you can consider all your javascript to be interpreted.
[12:25] tjholowaychuk: yeah try not to compare to php
[12:25] chjj: that would be very wasteful
[12:25] bradleymeck has joined the channel
[12:26] dexter_e: chjj:  hence my question about running require() upon every http request
[12:26] DrMcKay: well, comparing anything to php is like kicking lying retarded guy with no legs
[12:26] albertosheinfeld has joined the channel
[12:26] H4ns: dexter_e: please read this:  http://nodejs.org/docs/v0.4.11/api/all.html#require now.
[12:27] chjj: i declare drmckay the analogy king
[12:27] skydda: Help with cygwin compiling? Build failed:  -> task failed (err #1):
[12:27] kwk: DrMcKay: Would you mind if I put your IRC nick in a code snippet, just to credit you?
[12:27] DrMcKay: skydda: post full logs somewhere
[12:27] DrMcKay: kwk: no problem :)
[12:27] DrMcKay: kwk: if it's GH, you can link to my account, mmalecki
[12:28] kwk: it is :)
[12:28] adrianmg has left the channel
[12:28] al3xnull has joined the channel
[12:29] kwk: DrMcKay: There you go https://gist.github.com/1167959 Thank you sooo much!!!!
[12:29] DrMcKay: kwk: my pleasure :)
[12:29] japj: bnoordhuis: ping
[12:30] ceej has joined the channel
[12:30] bnoordhuis: japj: pong
[12:30] DrMcKay: hmm... my bot could actually do one funny thing...
[12:30] japj: bnoordhuis: heya, I 'discovered' today that udp on windows/node doesn't work yet, but I saw that you've been working on udp support in libuv ;)
[12:30] bnoordhuis: japj: me and bert yes
[12:31] DrMcKay: japj: node --use-uv should work, I believe
[12:31] japj: bnoordhuis: I was wondering what still needs to be done to get it integrated in node?
[12:31] bnoordhuis: japj: https://github.com/joyent/libuv/pull/153 <- is it about that?
[12:31] skydda: DrMcKay: http://pastebin.com/nLBiKh77
[12:31] bnoordhuis: japj: i have a udp branch in bnoordhuis/node that i'm merging today
[12:31] japj: bnoordhuis: ah no, that's just a compilation fix for mingw
[12:31] DrMcKay: skydda: it fails to link something, do you have all dependencies?
[12:31] japj: bnoordhuis: ah cool
[12:32] skydda: Everything shown on the tutorial :O
[12:32] bnoordhuis: japj: need to fix one more thing, latest rebase against master broke something
[12:32] DrMcKay: skydda: true, it doesn't link external deps in this link...
[12:33] DrMcKay: skydda: the rest of the build goes with no problems?
[12:33] skydda: Yeah
[12:33] ceej has joined the channel
[12:34] japj: bnoordhuis: does that branch support multicast udp or is that disabled? (with all the talk on the mailinglist I'm slightly confused about the state of that atm)
[12:34] DrMcKay: skydda: `make distclean` and make it once again, then post whole log (this seems to be last stage of build)
[12:34] xtianw has joined the channel
[12:35] bnoordhuis: japj: unix_dgram is out, multicast and broadcast are missing for now
[12:35] bnoordhuis: japj: but we'll add those last two
[12:35] skydda: DrMcKay: rm -rf out/doc find tools -name "*.pyc" | xargs rm -f File not found - *.pyc rm -rf out/ node node_g
[12:36] DrMcKay: skydda: that file not found is not a problem
[12:37] stagas: v8: new Date(100) == new Date(100)
[12:37] v8bot_: stagas: false
[12:37] kwk has left the channel
[12:37] stagas: v8: +new Date(100) == +new Date(100)
[12:37] v8bot_: stagas: true
[12:37] stagas: ??
[12:37] DrMcKay: stagas: conversion to int
[12:37] DrMcKay: v8: 0 + new Date(100)
[12:37] v8bot_: DrMcKay: "0Wed Dec 31 1969 16:00:00 GMT-0800 (PST)"
[12:37] christophsturm has joined the channel
[12:37] adambeynon has joined the channel
[12:37] DrMcKay: stagas: or to string...
[12:37] skydda: DrMcKay:Thats what 'make distclean' prints out
[12:38] DrMcKay: skydda: yeah, go on with build (run make)
[12:38] DrMcKay: skydda: or ./configure first
[12:38] skydda: DrMcKay: ./configure rans succesfully
[12:38] DrMcKay: v8: [1, 2] == [1, 2]
[12:38] v8bot_: DrMcKay: false
[12:39] DrMcKay: that always makes me chuckle a bit
[12:39] DrMcKay: skydda: make
[12:39] aconbere has joined the channel
[12:39] ank has joined the channel
[12:40] neoesque has joined the channel
[12:40] DrMcKay: btw, is it normal that test-dgram-multicast takes so much time?
[12:40] jmar777 has joined the channel
[12:41] andrewvos has joined the channel
[12:42] DrMcKay: oh... test-dgram-multicast fails, I think...
[12:42] heavysixer has joined the channel
[12:42] dexter_e: From the documentation:  " Node has several modules compiled into the binary. "     and  binary modules can be loaded as well right?
[12:42] skydda: DrMcKay: I have time to drink coffee at this point? [5/37]
[12:43] DrMcKay: could anyone run tests on current master?
[12:43] DrMcKay: skydda: what?
[12:43] H4ns: dexter_e: right, but this is mostly meant for modules written in C++
[12:43] skydda: DrMcKay:How long this should take ?
[12:43] BillyBreen has joined the channel
[12:43] DrMcKay: skydda: is your computer legit?
[12:43] DrMcKay: skydda: or do you work at a company?
[12:44] DrMcKay: skydda: build usually takes around few minutes
[12:44] nephics has joined the channel
[12:44] dexter_e: H4ns: Is it true that after server is started the JS is interpreted once and the binary incarnation of it is used to process http requests?
[12:45] H4ns: dexter_e: in general, that is the case.
[12:45] DrMcKay: dexter_e: that's how JIT works
[12:45] H4ns: dexter_e: but as i repeatedly wrote:  as a programmer, you can't control when or how v8 compiles your code.
[12:46] H4ns: dexter_e: it might even be compiled multiple times, once fast to get going, and then later again with more optimizations enabled.
[12:46] Deebster: DrMcKay: 0 == '' && 0 == '0' && '' != '0'
[12:46] Deebster: I alrways like that in duck-typed languages
[12:46] DrMcKay: Deebster: yeah, you would have to check types as well
[12:47] DrMcKay: Deebster: it's usually useful, though
[12:47] dexter_e: H4ns: Hope my questions aren't frustrating. I'm new and just trying to fully absorb.
[12:47] kriszyp has joined the channel
[12:47] Deebster: I like dynamic casting but many get freaked out when they see ===
[12:47] H4ns: dexter_e: i can always stop responding.
[12:47] mikekunze has joined the channel
[12:48] dexter_e: H4ns: :)   I know. thank you for continuing
[12:48] DrMcKay: Deebster: well, that's just how many languages do it and it's rather their problem that they don't understand it ;)
[12:48] arthurdebert has joined the channel
[12:49] DrMcKay: (oh, that fun moments when I didn't know why "a" != "a" in C)
[12:49] DrMcKay: but I believe that in C++0x it would be actually equal...
[12:50] skydda: DrMcKay: make failed
[12:50] DrMcKay: skydda: *full* log
[12:51] Renegade001 has joined the channel
[12:52] piscisaureus has joined the channel
[12:52] DrMcKay: again, could anyone run tests with current master?
[12:52] skydda: DrMcKay: Where do i find full log? :/
[12:52] DrMcKay: skydda: copy make output
[12:54] skydda: http://pastebin.com/i2GHsT87
[12:54] DrMcKay: um... ld segfaulted?
[12:55] jzacsh has joined the channel
[12:55] ccare has joined the channel
[12:55] jzacsh: having some trouble with mongoose api. anyone know how to use the custom methods you can write for a given schema?
[12:55] DrMcKay: skydda: which version are you compiling?
[12:56] skydda: latest
[12:56] DrMcKay: skydda: v0.5 or v0.4?
[12:56] skydda: DrMcKay:0.5
[12:57] DrMcKay: skydda: try v0.4
[12:58] CarterL has joined the channel
[12:59] jzacsh: here's the project i'm trying to write. you can see in line 10 i'm unable to find in the mongoose object where my method is: http://bit.ly/rhK5X2
[13:00] chjj: http://www.google.com/search?q=node
[13:00] chjj: node beats wikipedia
[13:01] DrMcKay: jzacsh: +1 for having your own git host (I know shit about mongoose unfortunately)
[13:02] DrMcKay: chjj: world domination on it's finest
[13:02] chjj: :)
[13:02] kawaz_air has joined the channel
[13:02] chjj: drmckay: now what needs to happen is, node pops up if you search for "microsoft" or "apple"
[13:02] squeese has joined the channel
[13:03] chjj: ...or google
[13:03] DrMcKay: chjj: :D
[13:03] framlin: lol
[13:03] DrMcKay: anyone SEO here?
[13:03] DrMcKay: (or DNS spoofing may be the way)
[13:04] bosky101 has joined the channel
[13:04] Sembiance: ZOMG!
[13:04] DevX101 has joined the channel
[13:05] jzacsh: DrMcKay: :) thanks
[13:06] jzacsh: ACTION thinks he may have found his way through the mongoose object
[13:07] eee_c has joined the channel
[13:08] febits has joined the channel
[13:08] Sembiance: jzacsh: I'm curious, why did you choose to go with mongoose over mongodb-native or node-mongolian?
[13:09] Vertice has joined the channel
[13:09] davidsklar has joined the channel
[13:09] jzacsh: Sembiance: no particular reason -- pretty mongoosejs website, i guess. i plan on playing with all of them.
[13:10] jzacsh: Sembiance: at the moment i'm thinking i don't care about the pretty wrapper given by mongoose, as this is really annoying to figure out
[13:10] framlin: multiplayer ;)
[13:11] Sembiance: jzacsh: I first looked at mongoose, but decided not to use it because I didn't want an ORM, I just wanted a mongodb-client.
[13:11] Sembiance: framlin: ?
[13:12] hl7Guy has joined the channel
[13:13] framlin: jzacsh is 'playing with all of them' .....
[13:13] Sembiance: oh hehehehe
[13:14] Sembiance: jzacsh: I then went to use node-mongolian for a week or so, but then realized it didn't support several mongodb commands, in particular the one I needed was .distinct()  so then I looked at the mongodb-native one, and realized that it's API is almost as simple and straight-forward as node-mongolian. I've been using mongodb-native since then, it's been working great :)
[13:15] bshumate has joined the channel
[13:15] blueadept has joined the channel
[13:15] blueadept has joined the channel
[13:15] garrensmith has joined the channel
[13:16] level09 has joined the channel
[13:16] nephics: Sembiance: there is also another client simulating the mongodb shell, see: https://github.com/gett/mongojs
[13:16] H4ns: is there a lightweight in-memory database for node?  one that writes a transaction log and maybe supports snapshots?
[13:16] Sembiance: nephics: oh, interesting...
[13:16] tjholowaychuk: redis?
[13:17] Sembiance: mmmm.... redis is yummy...
[13:18] H4ns: i'm looking for something simpler.
[13:18] tjholowaychuk: how can you get more simple than that
[13:18] pyrotechnick: recompile it
[13:18] H4ns: tjholowaychuk: it could be written in javascript to start with.
[13:18] tjholowaychuk: and be unstable
[13:18] H4ns: tjholowaychuk: ?
[13:19] tjholowaychuk: causing way more of a PITA becoming less simple
[13:19] tjholowaychuk: :p
[13:19] pita: ftw
[13:19] tjholowaychuk: haha!
[13:19] tjholowaychuk: H4ns I wouldn't bother with pure-node databases
[13:19] tjholowaychuk: personally
[13:19] tjholowaychuk: it's kinda fun to toy around with
[13:19] tjholowaychuk: but yeah
[13:19] garrensm_ has joined the channel
[13:19] rfay has joined the channel
[13:21] figital has joined the channel
[13:21] daisuke_ has joined the channel
[13:21] chrisconley has joined the channel
[13:21] CrisO has joined the channel
[13:21] heavysixer has joined the channel
[13:22] Poetro has joined the channel
[13:22] irahgel1 has joined the channel
[13:23] Glenjamin: don't write a DB in node
[13:23] Glenjamin: v8 has a hard memory limit
[13:23] Glenjamin: of 1 gig]
[13:23] CarterL: Glenjamin: learn that the hard way?
[13:23] H4ns: Glenjamin: and how are you sure that 1 gig is a limitation?
[13:23] Glenjamin: yes
[13:24] davidwalsh has joined the channel
[13:24] DrMcKay: well, the funny part was when my node in-memory k-v store bet memcached on performance
[13:24] Glenjamin: how am i sure its there, or how am i sure its a limit?
[13:24] Metal3d has joined the channel
[13:24] Sembiance: H4ns: well my redis DB is consuming about 12GB of RAM right now, so I'd be kinda screwed if it was written in node :)
[13:24] H4ns: Glenjamin: how are you sure that it is a limitation for the application that i'm writing?
[13:24] tjholowaychuk: you'll only cause yourself pain
[13:24] DrMcKay: but I compiled node with best options and memcached came from Fedora, so this benchmark wasn't any reliable
[13:24] tjholowaychuk: by using node for a db
[13:24] H4ns: hey, i am not saying that redis is bad, i just need something much smaller and simpler.
[13:25] tjholowaychuk: redis is tiny
[13:25] Sembiance: H4ns: you don't really get smaller than redis. it's pure awesome and super small
[13:25] Glenjamin: http://code.google.com/p/v8/issues/detail?id=847
[13:25] Sembiance: H4ns: although there is a 'tiny' learning curve to grasp all the commands and how to model your data in redis, once you get over that small learning curve, redis is very simple and very straightforward.
[13:25] Glenjamin: also, when you get above about 500MB of objects the GC cycles become noticably slow
[13:26] DrMcKay: H4ns: https://gist.github.com/c642966f1d5f46602723
[13:26] DrMcKay: but yeah, Glenjamin is right, don't use that
[13:26] hasta84_ has joined the channel
[13:26] Glenjamin: I have a process which an in-memory cache which has to monitor its memory usage and restart itself at 850MB
[13:27] H4ns: guys, rest assured, i have thought about this.  all _i_ need is a way to persist a relatively small data structure incrementally.  it is too small to make 1gb be a limit, but too large to serialize it completely on every update.
[13:28] Glenjamin: then I'm not aware of anything that'll do that specifically, but a simple object and some deep copy operations for snapshotting should do you
[13:28] thomblake has joined the channel
[13:28] stagas: H4ns: check out this https://github.com/stagas/ministore it's in memory but also can save to disk
[13:28] nephics has left the channel
[13:28] thomblake has left the channel
[13:29] H4ns: stagas: thanks, i'll look at that.
[13:29] Glenjamin: we first discovered the limit when writing this process with debug logging and log4js-node having a memory leak
[13:29] Glenjamin: discovering your database-like process can't have more than 1GB of memory in use is scary :s
[13:30] baudehlo has joined the channel
[13:30] Sembiance: H4ns: If you just want to store json, use mongodb
[13:32] jzacsh: Sembiance: thanks for the tip, i'll consider mongodb-native :)
[13:33] max_dev has joined the channel
[13:33] jzacsh: ACTION is at a conference and stopped watching this channel
[13:33] hl7Guy has joined the channel
[13:33] Sembiance: jzacsh: nephics pointed me to this project too, but I haven't used it before: https://github.com/gett/mongojs
[13:33] jzacsh: oh, neat!
[13:33] Sembiance: jzacsh: the mongodb-native driver is pretty gosh darn easy and powerful already though, so I'm not sure why I need another layer on top
[13:36] rmcastil has joined the channel
[13:38] gnarff has joined the channel
[13:39] japj: piscisaureus: http://sourceforge.net/tracker/?func=detail&atid=302435&aid=2035902&group_id=2435
[13:39] rfay has joined the channel
[13:39] jtsnow has joined the channel
[13:41] Vertice has joined the channel
[13:42] isufy has joined the channel
[13:42] metaverse has joined the channel
[13:42] mrdoodles has joined the channel
[13:43] Deebster: what unit testers are people using?
[13:44] Glenjamin: my own! but i'd recommend vows or nodeunit
[13:44] Sembiance: hehe, not doing any tests
[13:44] Sembiance: bad on me
[13:44] Deebster: ideally I'd like one that can run in a browser as well as I'm reusing modules front and back
[13:44] garrensm_: expresso is cool else I use my own
[13:44] garrensm_: Deebster: look at jasmine then
[13:46] Deebster: garrensm_: looks good, cheers
[13:46] Raynos: I'm using an abstraction on vows
[13:46] Glenjamin: Deebster: out of interest, what modules are you managing to share?
[13:47] garrensm_: Deebster: np
[13:47] garrensm_: anyone using couchdb?
[13:47] archhTT has joined the channel
[13:47] Deebster: I'm writing a multiplayer version of http://chainfactor.com/ (site down atm) so the game grid is something both sides use
[13:48] dexter_e: I'm using couchdb
[13:48] Deebster: garrensm_: I am, although I haven't got that far yet :)
[13:48] DevX101 has joined the channel
[13:48] garrensm_: dexter_e: cool, u using cradle?
[13:48] dexter_e: yeah
[13:49] CarterL: dexter_e: how difficult is it to use couchdb w/ node.js?
[13:49] dexter_e: it was super easy
[13:49] dexter_e: I just cut and pasted the examples from github and everything just worked
[13:49] garrensm_: dexter_e: I wrote a couchdb orm on top of cradle I need some testers www.github.com/garrensmith/lazyboy if you interested
[13:49] dexter_e: and it works great 
[13:50] gnarff has left the channel
[13:50] Deebster: Glenjamin: is that rare?
[13:50] dexter_e: peeping it *
[13:50] CIA-65: libuv: 03Bert Belder 07master * r1f28f81 10/ src/win/winsock.h : Fix mingw missing IPV6_V6ONLY - http://git.io/Mmk2PA
[13:50] N0va has joined the channel
[13:50] Glenjamin: Deebster: not especially
[13:51] tbassetto has joined the channel
[13:51] Sembiance: garrensm_: clever name :)
[13:51] garrensm_: Sembiance: thanks
[13:51] garrensm_: docs are at www.garrensmith.com/LazyBoy/
[13:51] Sembiance: garrensm_: any particular reason you kind of made your own 'schema' with the models, versus using json-schema?
[13:52] garrensm_: Sembiance: I haven't seen json-schema do you have a look
[13:52] garrensm_: *link
[13:52] Sembiance: http://json-schema.org/  see the top link.
[13:52] CarterL: has anyone used knockout.js w/ node.js?
[13:53] Sembiance: garrensm_: I use this to validate: https://github.com/garycourt/JSV
[13:53] rfay has joined the channel
[13:54] garrensm_: Sembiance: json schema looks cool how do I use it with node?
[13:54] Sembiance: garrensm_: that JSV link I sent you is how you use it in node
[13:54] garrensm_: Sembiance: yeah sorry just figured that, stupid question
[13:54] Sembiance: garrensm_: no worries :)
[13:54] garrensm_: Sembiance: thanks
[13:54] chrisconley has joined the channel
[13:56] Sembiance: garrensm_: CouchDB was the first NoSQL database I played around with. I never ended up using it in an actual project though. Since then I've gone on to use redis in one project and mongodb in another.
[13:56] Sembiance: garrensm_: CouchDB and neo4j are the only other nosql databases that I have a desire to use in a project some day
[13:56] Sembiance: garrensm_: just waiting for a project that has a data model that fits well with one of them before I use one of them ;)
[13:56] garrensm_: Sembiance: I really like the restful approach to couchdb and redis is just plain awesome.
[13:57] garrensm_: Sembiance: I'm not a huge fan of mongodb for some reason but I haven't used it enough to truly have an opinion :-)
[13:57] hellp has joined the channel
[13:57] Sembiance: garrensm_: from when I played around with couch, it seemed likes the biggest advantages it gives is a full version history and conflict resolution.
[13:57] garrensm_: Sembiance: also great replication
[13:58] Sembiance: garrensm_: I'm only using mongodb to basically shove a JSON document in, and get a JSON document out :)
[13:58] mikl has joined the channel
[13:58] mikl has joined the channel
[13:58] chjj: mongo query syntax has always looked ugly to me
[13:59] Sembiance: chjj: at first is kinda is ugly, but you get used to it
[13:59] heavysixer has joined the channel
[13:59] chjj: maybe it looks ugly to me because i had to write a parser for it
[13:59] chjj: or an interpreter i guess
[13:59] dexter_e: it looks a bit ugly to me too
[14:00] dexter_e: also I couldn't get mongo to clone as reliably as couchdb
[14:00] dexter_e: couchdb can clone just like a git repo , its sweet 
[14:01] chjj: i wish you could efficiently do views on the fly with couch, so you could just Function.toString something and send it in a request body
[14:01] chjj: that would be awesome
[14:01] EyePulp has joined the channel
[14:01] Yuffster has joined the channel
[14:02] tbranyen: dexter_e: eh, couchdb can't mere
[14:02] tbranyen: merge*
[14:02] tbranyen: so when you replicate
[14:02] tbranyen: >_>
[14:02] JumpMast3r has joined the channel
[14:02] dole has joined the channel
[14:03] DrMcKay: what would you choose for failsafe and high speed doc store?
[14:03] dexter_e: tbranyen:  it expects your app to manage that
[14:03] dexter_e: the same way you have to resolve conflicts with a git merge, right?
[14:04] tbranyen: git will automerge if it can
[14:04] dole: i'm trying to get a coffeescript compiler in cygwin, and i've been trying to build node.js, but i'm failing while trying to configure, and returns the error that i cannot configure a cxx compiler. i already made the change in rebaseall, but still no luck
[14:04] tbranyen: couch won't even attempt
[14:05] dexter_e: yeah if you need auto-merge you will have to wrap it
[14:05] dgathright has joined the channel
[14:05] dole: also windoze 7
[14:05] Sembiance: dole: no chance of ditching windows? or maybe even getting a vmware with linux?
[14:06] pjacobs has joined the channel
[14:06] dole: it's work related and i have three days left... i think this is just to keep me busy >_>
[14:06] bradleymeck has joined the channel
[14:06] japj: dole: there is a nodejs windows binary on the main website
[14:06] dole: gfd i shoulda installed ubuntu on this machine three months ago
[14:07] dole: oh rly
[14:07] dexter_e: tbranyen:  cradle has db.merge 
[14:07] uchuff has joined the channel
[14:07] tbranyen: dexter_e: oh neato
[14:07] dexter_e: if you want to get the auto-merge
[14:07] dole: i'm never writing software win windoze again
[14:08] dole: er
[14:08] dole: coding in general
[14:08] dexter_e: tbranyen: you can also do bulk-save with merge option
[14:08] springmeyer has joined the channel
[14:08] anaio has joined the channel
[14:08] dexter_e: which you could use as a replicate-automerge solution
[14:09] baudehlo: of course by the time you're needing multiple couchdb nodes you must have grown pretty big, I imagine.
[14:09] smtlaissezfaire has joined the channel
[14:09] booo has joined the channel
[14:10] MrNibbles: hmm, hey gents
[14:10] japj: piscisaureus: ping
[14:11] MrNibbles: best way (without using charles) to load a resource from your local machine rather than a remote site?
[14:11] jtsnow has joined the channel
[14:11] dexter_e: tbranyen: are you using another solution which replicates with auto-merging ?
[14:11] MrNibbles: e.g have main.js load from my machine, rather than the site i am working on
[14:12] tbranyen: dexter_e: what? no. i have a couchdb instance utilized, i'm just not messing with replication at all
[14:12] tbranyen: until i figure out what i'm going to do
[14:12] kdng-saleem3 has joined the channel
[14:12] tbranyen: what you're talking about i don't think applies to replication, but i could be wrong
[14:14] tbassetto has joined the channel
[14:14] dexter_e: it sounded like you needed git style auto merging for your docs
[14:15] heavysixer has joined the channel
[14:15] tbranyen: dexter_e: yeah max ogden was talking to me about something like that
[14:15] dexter_e: since replicate just saves a new version I just suggested the merge function of something like cradle
[14:16] dexter_e: you could have your own replication function with auto-merging
[14:17] kdng-saleem3 has joined the channel
[14:18] willwhite has joined the channel
[14:18] Glenjamin: MrNibbles: why not charles? Thats pretty much exactly what its for
[14:19] kdng-saleem3 has joined the channel
[14:20] mikl has joined the channel
[14:20] kawaz_air has joined the channel
[14:20] JakeyChan has joined the channel
[14:21] chuck_daniel has joined the channel
[14:23] MrNibbles: Glenjamin: it liked to eat almost an entire processor when its filtering for a lot of files
[14:23] garrensm_: anyone used sprout core?
[14:25] Glenjamin: MrNibbles: I'm not aware of any other similar tools. Stackoverflow might be a good place to ask
[14:25] chuck_daniel has joined the channel
[14:25] aelien27 has joined the channel
[14:26] kriszyp has joined the channel
[14:27] achiu has joined the channel
[14:28] Destos has joined the channel
[14:28] luke` has joined the channel
[14:28] chjj: anyone know what markdown implementation github uses serverside?
[14:28] chjj: or where the code is?
[14:29] japj: http://github.github.com/github-flavored-markdown/
[14:30] geetarista has joined the channel
[14:30] charleyd has joined the channel
[14:31] chjj: japj, that doesnt appear to be the serverside code
[14:31] chjj: it doesnt include the code block fences for example, it doesnt contain all of gfm features
[14:31] japj: chjj: "f you're interested in how we render Markdown files, you might want to check out Redcarpet, our Ruby interface to the Upskirt library."
[14:32] chjj: ah, nice
[14:32] Kingdutch has joined the channel
[14:32] jvdev has joined the channel
[14:32] adambeynon has joined the channel
[14:33] chjj: thank you sir
[14:35] JoshC1 has joined the channel
[14:35] jakehow_ has joined the channel
[14:35] jakehow has joined the channel
[14:35] nibblebot has joined the channel
[14:37] jzacsh has joined the channel
[14:37] rfay has joined the channel
[14:38] sbisbee has joined the channel
[14:38] toki_kanno has joined the channel
[14:38] clifton has joined the channel
[14:40] mikl has joined the channel
[14:40] devrim has joined the channel
[14:42] kdng-saleem3 has joined the channel
[14:42] ansy has joined the channel
[14:42] CoverSlide has joined the channel
[14:42] ansy has left the channel
[14:43] kdng-saleem3 has joined the channel
[14:44] moritz_ has joined the channel
[14:45] kdng-saleem3 has joined the channel
[14:45] shanebo has joined the channel
[14:45] aconbere has joined the channel
[14:46] achiu has joined the channel
[14:47] kmiyashiro has joined the channel
[14:47] heavysixer has joined the channel
[14:47] Charuru has joined the channel
[14:47] mbrevoort has joined the channel
[14:49] fatjonny has joined the channel
[14:50] dob__ has joined the channel
[14:51] eazyigz_ has joined the channel
[14:51] edude03 has joined the channel
[14:51] kdng-saleem3 has joined the channel
[14:52] eazyigz_: I have an EJS template served from Express.  What is my best option to refresh that EJS template with new data, is it to re-run the node express server (in cron)?
[14:53] kdng-saleem3 has joined the channel
[14:53] CoverSlide: eazyigz_: the templates are not cached
[14:53] CoverSlide: where are you updating the data?
[14:53] ryanfitz has joined the channel
[14:54] eazyigz_: CoverSlide: a node script updates the data.  It's the same script that runs my Express server.
[14:54] kdng-saleem3 has joined the channel
[14:54] davidascher has joined the channel
[14:56] CoverSlide: so by 'updating the data' do you mean you're changing the script that holds the data? or the script itself is changing the data?
[14:56] TheJH has joined the channel
[14:56] TheJH has joined the channel
[14:56] brianc has joined the channel
[14:56] eazyigz_: CoverSlide: the latter
[14:56] meandi has joined the channel
[14:56] CoverSlide: then you shouldn't have to re-run the server
[14:56] carmony has joined the channel
[14:57] mynyml has joined the channel
[14:57] eazyigz_: CoverSlide: so I should have my server run in a separate node script than the one that re-calculates the data?  I mean, I"ll probably use a cron job to recalculate...
[14:57] dshaw_ has joined the channel
[14:58] nibblebo_ has joined the channel
[14:58] CoverSlide: yeah that would be best
[14:58] hybsch has joined the channel
[14:58] kevwil has joined the channel
[14:58] CoverSlide: restarting a server just to update some data is typically a bad way to go
[14:59] bradleymeck has joined the channel
[14:59] CoverSlide: you'd probably be better off having it update the data using a timer than cron
[14:59] CoverSlide: just so you won't have to use a separate process
[15:00] eazyigz_: CoverSlide: I'm just trying to understand - if i'm using 'exports' in one script, and the express script 'require's that module, will it pick up the latest data that is being exported?  Or do I have to 'require' the module every time a request is made?
[15:00] nibblebo_ has joined the channel
[15:01] eazyigz_: CoverSlide: sorry, i missed your last 2 posts.  I guess I don't need cron after all...
[15:01] eazyigz_: and can possibly keep everything in one script!
[15:02] CoverSlide: eazyigz_: why would you need to re-require a module? just require it once and run the data-pulling function as needed
[15:03] eazyigz_: If i 'require' a module once, then whatever that module exports won't be updated in my script with new changes.  Unless I re-require it.  Is that right?
[15:03] versicolor has joined the channel
[15:03] losing has joined the channel
[15:03] CoverSlide: in practice, you shouldn't be updating modules during runtime
[15:03] H4ns: eazyigz_: yes.  but require() caches, so you'd need to flush the cache.
[15:04] H4ns: eazyigz_: are you saying that your data resides in a module that you require()?
[15:04] heavysixer has joined the channel
[15:04] eazyigz_: CoverSlide: then my only option is to have all my code in one module?
[15:04] eazyigz_: I mean to avoid updating at runtime...
[15:05] dob__: did somebody try to use jquery ui autocomplete with nowjs? I have the problem that  i don't know how i can set the data: with content from the server.
[15:05] eazyigz_: H4ns: yes that is what I'm saying.  But I'm trying to figure out the best way to structure my app.
[15:05] H4ns: eazyigz_: ok, so you want to have your data in a local file and periodically refresh it?
[15:06] H4ns: eazyigz_: or do you want to refresh it whenever it has been updated?
[15:06] CoverSlide: no, in fact it's best to have your logic spread out across several modules, depending on the structure of your app, of course
[15:06] eazyigz_: H4ns: Yes. And serve that data with Express.
[15:06] H4ns: eazyigz_: lets just look at how you get to your data first, no matter how you serve it.
[15:06] rfay has joined the channel
[15:06] H4ns: eazyigz_: so it sits in a local file, is externally updated and you want to reload it when it has changed, right?
[15:06] mikl has joined the channel
[15:07] gazumps has joined the channel
[15:07] eazyigz_: H4ns: yes, using 'exports' and 'require'
[15:07] H4ns: eazyigz_: why are you using exports and require?  would it not be better to use json as a data format?
[15:08] daisuke_ has joined the channel
[15:08] eazyigz_: H4ns: well, one module 'exports' my JSON (which it re-calculates every hour).  So my Express module should 'require' that 2nd module.  Isn't that right?
[15:09] H4ns: eazyigz_: hold on, does the code in the module that you require calculate the data, or are you talking about a seperate process that recalculates the data once a hour and then writes to a file?
[15:09] jetienne has joined the channel
[15:09] eazyigz_: H4ns: the first option
[15:10] H4ns: eazyigz_: good, so why do you need to require the module again and again?
[15:10] moritz_: hey guys, i just started hacking with node, and im trying to implement a "file upload proxy": i want to open up a http server on port 8080 and just accept PUT / POST uploads and redirect them to an other server via PUT / POST. Can s.o. help me get started?
[15:10] Glenjamin: basically, require uses a cache
[15:10] H4ns: eazyigz_: can't it just recalculate whatever it needs to recalculate the data and update its exported objects?
[15:10] sub_pop has joined the channel
[15:10] JoshC1 has joined the channel
[15:10] H4ns: eazyigz_: ah.  i think i understand your problem.
[15:11] eazyigz_: H4ns: How will require know that the external module has changed its data?  It changes every hour.
[15:11] RORgasm has joined the channel
[15:11] H4ns: eazyigz_: you think that if the code in your module updates whatever it has exported, the importing module does not see the changes.
[15:11] eazyigz_: correct
[15:12] H4ns: eazyigz_: this is not the case.  say if you have exported an object using exports.foo = {} and then change foo from within the exporting module, the change will be visible in the importing module.
[15:12] binaryjohn has joined the channel
[15:12] H4ns: eazyigz_: no automatic copying is going on.  objects are passed by reference.
[15:12] eazyigz_: Hmmm...  but there is a cache issue, so I have to flush the cache too?
[15:12] H4ns: eazyigz_: no.  you don't have any cache issues.
[15:12] rfay has joined the channel
[15:12] eazyigz_: I thought 'require' caches
[15:12] Glenjamin: it does
[15:12] H4ns: eazyigz_: you just need to make sure that you change the object that the importer is accessing.
[15:13] H4ns: eazyigz_: it caches, but you don't want to reload your module anyway.
[15:13] H4ns: eazyigz_: you are confused :)
[15:13] samuelkadolph has joined the channel
[15:13] uptownben has joined the channel
[15:13] uptownben: Hey all.
[15:13] eazyigz_: so I need to flush the cache, or no?
[15:13] softdrink has joined the channel
[15:13] H4ns: eazyigz_: no
[15:13] H4ns: eazyigz_: you also don't need to require your module multiple times.
[15:14] eazyigz_: H4ns: thanks, I will go give this a try
[15:14] squeese has joined the channel
[15:14] Glenjamin: it'd be easier to use fs.read and JSON.parse
[15:14] uptownben: I need a good combo of modules for putting together webservices, sessions and MongoDB.. any suggestions?
[15:14] H4ns: Glenjamin: he has a completely different problem.
[15:14] Glenjamin: not as I read it :s
[15:14] Glenjamin: oh
[15:14] Glenjamin: i see
[15:14] H4ns: eazyigz_: try with some isolated test module that sets up a timer which modifies data which the module has exported.
[15:14] robertfw has joined the channel
[15:15] eazyigz_: will do
[15:15] Glenjamin: H4ns: i'm with you now
[15:16] Vertice has joined the channel
[15:16] CoverSlide: uptownben: Express can take care of webservices and sessions, node-mongodb is good for mongo, or mongoose if you want orm
[15:16] TheJH: hey, wow, useful topic! and ryah set it...
[15:16] term_ has joined the channel
[15:16] Sembiance: uptownben: I use expressjs, dustjs for templating, JSV for json-schema validation of form submissions, mongodb-native for connection to mongodb
[15:16] CoverSlide: wow
[15:17] qrst: Question for anyone that uses jade: how do you do plain iteration with '- each'?
[15:17] Sembiance: uptownben: I use 'fugue' in front of express
[15:18] Sembiance: uptownben: I'm sorry to say that I'm not handling session state at all as my requests are all stateless/sessionless
[15:18] mikl_ has joined the channel
[15:18] tjholowaychuk: uptownben that's essentially what express is for, it's just not opinionated about what db you use etc
[15:18] kdng-saleem3 has joined the channel
[15:18] qrst: Is there something like '- each in range(1, 3)' or something?
[15:18] tjholowaychuk: qrst - each val in arr
[15:18] ksheurs has joined the channel
[15:18] tjholowaychuk: - each val, i in arr
[15:18] paul_irish has left the channel
[15:18] tjholowaychuk: -each val, key in obj
[15:18] Clarke_ has joined the channel
[15:19] tjholowaychuk: or you can use regular js if you really want - arr.forEach(function(val){
[15:19] qrst: tjholowaychuk: is there a way to iterate without creating a specific object?
[15:19] Sembiance: qrst: var arr = [1, 2, 3];   arr.forEach(function(i) { console.log(i); });      or    for(var i=1;i<3;i++) { console.log(i); }
[15:19] tjholowaychuk: qrst not sure what you mean
[15:19] qrst: Sembiance: thanks, that's what I was looking for.
[15:19] qrst: thanks to you both!
[15:19] Sembiance: qrst: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/foreach
[15:20] progme has joined the channel
[15:20] kdng-saleem3 has joined the channel
[15:20] Sembiance: qrst: you can also do this:   var fruit = [ "apple", "pear", "peach" ];    fruit.forEach(function(item, i) { console.log("#" + i + ": " + item); });
[15:20] Sembiance: qrst: the docs detail it
[15:21] jj0hns0n has joined the channel
[15:22] versicolor has joined the channel
[15:22] mikl has joined the channel
[15:23] sivy has joined the channel
[15:23] Clarke_: I've been installing node.js and npm under cygwin. It seemed to install OK. How can I verify?
[15:24] amigojapan: hi, anyone know if there is a way in socket.io to get a socket's ID?
[15:24] andrewvos has left the channel
[15:25] halfhalo-work has joined the channel
[15:26] tmpvar has joined the channel
[15:26] aheckmann has joined the channel
[15:26] tshpaper has joined the channel
[15:26] sub_pop has joined the channel
[15:27] _sorensen_ has joined the channel
[15:27] kenperkins has joined the channel
[15:27] CoverSlide: amigojapan: from the client or the server?
[15:28] amigojapan: CoverSlide: server
[15:28] MarkHurd has joined the channel
[15:28] MarkHurd has left the channel
[15:29] jtsnow has joined the channel
[15:29] amigojapan: CoverSlide: well, basically, I want to do some cleanup after someone disconnects, and I can only think of knowing who is was by the socket id
[15:29] amigojapan: hwo it was*
[15:30] al3xnull has joined the channel
[15:30] cfq has joined the channel
[15:30] kevwil has joined the channel
[15:31] jakehow has joined the channel
[15:31] jakehow_ has joined the channel
[15:31] tomtomaso has joined the channel
[15:32] DevX101 has joined the channel
[15:33] micheil has joined the channel
[15:33] CoverSlide: amigojapan: there should be an 'id' property on the socket itself
[15:33] amigojapan: ok CoverSlide, is it capital, or what?   just id?
[15:33] CoverSlide: yeah
[15:34] rafeca has joined the channel
[15:34] amigojapan: ok, thanx
[15:35] garrensm_: Clarke_: there is a node.exe now
[15:36] kevwil_ has joined the channel
[15:36] sonnym has joined the channel
[15:36] CoverSlide: Clarke_: run `node` in the console, if it says 'command not found' it didn't install
[15:36] CoverSlide: or there's something up with the path
[15:37] CarterL: garrensm_: so does that mean we can develop node.js stuff in windows?
[15:37] bradleymeck has joined the channel
[15:37] garrensm_: CarterL: yes, its still on the unstable branch 
[15:37] CoverSlide: Technically you can, although it's still very buggy
[15:37] mixin has joined the channel
[15:37] amigojapan: CoverSlide: aparently on disconnect socket.id is undefined
[15:38] CoverSlide: and npm won't work until `around Christmas` was the last projection I saw
[15:38] CoverSlide: good
[15:38] CoverSlide: then save it on connection
[15:38] CoverSlide: and you'll have access to it on 'disconnect'
[15:38] joshthecoder has joined the channel
[15:38] amigojapan: CoverSlide: I haveto know which socket got disconnected
[15:39] hackband has joined the channel
[15:39] CoverSlide: amigojapan: are you familiar with how closures work?
[15:39] amigojapan: no CoverSlide
[15:40] vipaca has joined the channel
[15:40] vipaca has joined the channel
[15:40] creationix has joined the channel
[15:40] amigojapan: CoverSlide: all I want to know is the socket.id inside the disconnect event
[15:41] Clarke_: node runs, but I don't see node.exe. 
[15:42] CoverSlide: Clarke_: try `which node`
[15:43] Clarke_: However, npm does not run unless I go into it's directory and run it. A path problem. Do I change the path in Windows or via cygwin?
[15:43] Clarke_: which node -- I got it, and it's there.
[15:44] boaz has joined the channel
[15:44] CoverSlide: cygwin
[15:44] jtrudeau has joined the channel
[15:44] CoverSlide: or rather, bash
[15:44] CoverSlide: (or whatever shell you're running)
[15:45] pjacobs2 has joined the channel
[15:45] bradleymeck has joined the channel
[15:46] amigojapan: is there some way to dump all the information of an array? like print_r() in PHP?
[15:46] CoverSlide: amigojapan: console.log(array)
[15:46] amigojapan: ok
[15:46] amigojapan: I will try it
[15:47] CoverSlide: amigojapan: https://gist.github.com/1168347 << socket.id does not become undefined
[15:47] binaryjohn has joined the channel
[15:47] xanatos has joined the channel
[15:47] amigojapan: CoverSlide: ok, but my program says different
[15:47] CoverSlide: then your program is wrong
[15:48] mixin has joined the channel
[15:48] LordMetroid has joined the channel
[15:48] Vertice has joined the channel
[15:48] amigojapan: CoverSlide: maybe I need the %d thing
[15:48] LordMetroid: How would you do configuration of an application?
[15:49] LordMetroid: Would you simply make a module which exports a json object and which location you specify as a CLI argument
[15:49] junkee[] has joined the channel
[15:49] LordMetroid: And then do require on it each time you need the some setting?
[15:49] CoverSlide: LordMetroid: lots of ways, easiest way is to create a config.json file, and run config = JSON.parse(fs.readFileSync('./config.json'))
[15:50] jamonkko has joined the channel
[15:50] bergie__ has joined the channel
[15:51] DevX101 has joined the channel
[15:52] luke`_ has joined the channel
[15:52] mendel_: is there a way to restrict the nodejs api in a js file? I'm requiring it but I don't want it too use spawn_process/fs etc
[15:52] bergie_ has joined the channel
[15:54] CoverSlide: mendel_: you'd probably have to override require
[15:54] mrchess` has joined the channel
[15:54] sylvinus has joined the channel
[15:54] LordMetroid: Is there a JSON object included as standard now in JavaScript?
[15:54] CoverSlide: LordMetroid: yes
[15:54] stagas: mendel_: http://nodejs.org/docs/latest/api/vm.html#vm.runInNewContext
[15:54] visnup: ncb000gt: questions about nko?
[15:54] LordMetroid: All because Crockford didn't want people to use eval
[15:54] pandeiro has joined the channel
[15:55] tarzeau has joined the channel
[15:55] CoverSlide: Because eval isn't good
[15:55] nibblebot has joined the channel
[15:55] CoverSlide: and it's slow
[15:55] tarzeau: can i use node.js for example to make a web visitor counter?
[15:55] LordMetroid: I completely agree, eval is dangerous
[15:56] confoocious has joined the channel
[15:56] confoocious has joined the channel
[15:56] devongovett has joined the channel
[15:56] tarzeau: or display the latest 3 log entries of /var/log/access.log ?
[15:56] tarzeau: in realtime, that is
[15:56] LordMetroid: tarzeau: Yes, of course you can
[15:56] tjholowaychuk: tarzeau of course
[15:56] Yuffster_work has joined the channel
[15:56] ph^ has joined the channel
[15:56] tarzeau: how does that work? i don't want to use php. cgi is fine, or any serverside shell script
[15:57] tjholowaychuk: use ... node?
[15:57] tarzeau: is there a very simple example? that even /me would understand?
[15:57] H4ns: tarzeau: it is possible, but you'll need to start by reading some documentation.  http://nodebeginner.org/ may help
[15:57] zemus has joined the channel
[15:57] LordMetroid: You write a server side program in JavaScript and run it using node
[15:57] tarzeau: LordMetroid: must the server side program be in javascript? can't it be any language i prefer?
[15:58] H4ns: tarzeau: once you've made it through that or another tutorial, look at the docs. http://nodejs.org/docs/v0.4.11/api/all.html
[15:58] tarzeau: LordMetroid: C? objective-c? shell script?
[15:58] H4ns: tarzeau: then come back with specific questions.
[15:58] aoberoi has joined the channel
[15:58] LordMetroid: You can use any language but not with node
[15:58] tarzeau: H4ns: thanks for the hint. opened and reading ...
[15:58] tjholowaychuk: tarzeau node is js
[15:58] nibblebot has joined the channel
[15:58] tarzeau: i see, thanks
[15:58] H4ns: tarzeau: the idea here is that we _want_ to use javascript on the server, hence node.js
[15:58] Clex: tarzeau: you are funny.
[15:58] madsleejensen has joined the channel
[15:58] tarzeau: but how can you do stuff with only javascript? that's so limiting?
[15:59] tjholowaychuk: ACTION headdesk
[15:59] H4ns: tarzeau: it is not limiting at all.  now read.
[15:59] isaacs has joined the channel
[15:59] stagas: tarzeau: node has a set of extra functions so you can do all sorts of stuff
[15:59] LordMetroid: JavaScript may be one of the most flexible languages in existence
[16:00] tjholowaychuk: LordMetroid wouldn't go that far
[16:00] stephank has joined the channel
[16:01] LordMetroid: tjholowaychuk: How far would you go?
[16:01] tjholowaychuk: i dunno haha, half-flexible? haha
[16:01] CoverSlide: [                                                   ]  <-- this far
[16:01] tjholowaychuk: lua/lisp etc
[16:01] H4ns: LordMetroid: look at common lisp for a flexible language.
[16:02] CoverSlide: or scheme
[16:02] ph^_ has joined the channel
[16:02] LordMetroid: Lisp is of course more flexible
[16:02] CoverSlide: lua? really?
[16:02] markdaws has joined the channel
[16:02] gnrfan has joined the channel
[16:02] smathy has joined the channel
[16:03] tjholowaychuk: CoverSlide more so than js
[16:03] H4ns: LordMetroid: javascript is nice, it is dynamic, it is small, and it is deployed on a huge number of machines around the planet.  also, it gets a lot industry support, which makes it fast.  but "most flexible"?  not really.
[16:03] tbranyen: lua owns
[16:03] tbranyen: friend wrote moonscript which is basically coffeescript for lua
[16:03] davidascher has joined the channel
[16:03] creationix: JavaScript is flexible, but the syntax, especially lambdas is painfully verbose
[16:04] H4ns: tbranyen: lua is so bad that you need a different surface syntax?
[16:04] tbranyen: H4ns: do you feel that way about JS?
[16:04] CoverSlide: hmm i glanced at it once, wasn't too impressed, it seemed to be just something simple to throw into C to do heavier work
[16:04] CoverSlide: maybe I should look at it again
[16:04] H4ns: tbranyen: what way?
[16:04] creationix: 10.times do |i|; puts i; end
[16:04] tbranyen: CoverSlide: well it has a lot of annoying crap, like no sparse array support
[16:04] context: http://www.escapistmagazine.com/news/view/112511-Xbox-Owner-Sues-Microsoft-for-500-Billion-Yes-Billion
[16:04] creationix: vs
[16:04] creationix: (10).times(function (i) { console.log(i); })
[16:05] tjholowaychuk: CoverSlide it's pretty slick, it's no lisp but I would argue that js should be going more that route since it's already somewhat similar
[16:05] markdaws has joined the channel
[16:05] tjholowaychuk: except more shitty
[16:05] tbranyen: creationix: most modern interpreters can handle dot notation on numbers now
[16:05] creationix: tbranyen: really, it did't work last time I tried in v8
[16:05] LordMetroid: CoverSlide: Would you advice making config global or did you mean to have a var in the example?
[16:05] creationix: it was about a year ago though
[16:06] CoverSlide: LordMetroid: I would recommend making nothing global, just pass the config through your functions and constructors
[16:06] LordMetroid: ok
[16:06] CoverSlide: config would just be set in your 'main' module
[16:06] CoverSlide: creationix: double dot trick 10..times( ..)
[16:07] LordMetroid: mm, yes that is what I intend to do
[16:07] creationix: CoverSlide: that's nasty
[16:07] CoverSlide: it saves one character
[16:07] tbranyen: yeah, weird.  i just tried again and its not working for me.  oh well.
[16:07] XniX23 has joined the channel
[16:07] CoverSlide: and you don't need shift to type it
[16:07] creationix: besides, my point wasn't the parens around 10, but the "function (i) {})" vs "do |i|;;end"
[16:07] tbranyen: yeah
[16:08] tbranyen: CoverSlide: whitespace is less ugly than double . imo
[16:08] chrislorenz has joined the channel
[16:08] XniX23: hi guys, im having a problem. I want to install express however i have 5.5 pre version of none and it says i need < 5
[16:08] kmiyashiro: XniX23: npm install express 
[16:08] markdaws has joined the channel
[16:08] XniX23: i don't remember how exactly i installed node so im not sure how to remove it to install 4.x version
[16:08] kmiyashiro: oh
[16:09] CoverSlide: XniX23: use nave, or n, or nvm
[16:09] CoverSlide: the authors of all three are on here right now
[16:09] CoverSlide: ACTION personally uses nave
[16:09] XniX23: i have to check what these words mean first
[16:10] CoverSlide: that they are packages that allow you to havbe multiple versions of node without having to uninstall them
[16:10] caolanm has joined the channel
[16:10] creationix: nvm was first :P
[16:10] guillermo has joined the channel
[16:10] XniX23: creationix: im assuming youre the creator of nvm?
[16:11] garrensmith has joined the channel
[16:11] creationix: yep
[16:11] creationix: isaacs made nave and tjholowaychuk made n
[16:11] creationix: they are slightly different programs, so choose the one that works the way you do
[16:11] isaacs: nave is the only right one
[16:11] isaacs: the others are wrong
[16:11] brianc: haha
[16:11] isaacs: ACTION has ruby drama envy
[16:11] brianc: I prefer 'n' myself
[16:11] creationix: isaacs: bring it!
[16:12] isaacs: ;P
[16:12] halfhalo-work: ACTION gets the popcorn
[16:12] brianc: I've used them all
[16:12] brianc: they all work well
[16:12] XniX23: which one is easiest to use?
[16:12] creationix: isn't nave subshell based?
[16:12] brianc: like creationix said, use whichever suites your style
[16:12] isaacs: yeah
[16:12] brianc: nave is subshell based
[16:12] creationix: nvm is environment based
[16:12] isaacs: what does n do?
[16:12] brianc: so you gotta type a bunch of "exit" at some point
[16:12] garrensmith: is there a html to jade converter?
[16:12] isaacs: aliases?  symlinks?
[16:12] isaacs: it's not subshells, right?
[16:12] brianc: n copies the binary files over
[16:12] creationix: nvm just modifies your $PATH, no symlinks
[16:13] brianc: or symlinks them
[16:13] isaacs: i see
[16:13] vidi has joined the channel
[16:13] isaacs: yeah, that's the other approach
[16:13] brianc: it doesn't use PATH or subshell
[16:13] garrensmith: creationix: you still working for HP even with them cancelling webos
[16:13] Anton_: node's forked processes have nulled stdout and stdin, is it by design?
[16:13] Anton_: or is it bug?
[16:13] Vertice has joined the channel
[16:13] creationix: I like minimalism and nvm doesn't require a new subshell or change anything that affects other sessions
[16:13] malletjo: Hello folks, i can't figure out a good solution for this. I'm doing a for loop and in the loop i'm doing a mysql query and in the callback of the query i'm doing some other stuff. The problem its in the callback of the query, i need some stuff i got in the for loop but when i'm in the callback i'm already at the end of the for loop and i lost all my content. Any ideas ?
[16:13] creationix: webOS is not canceled!
[16:14] isaacs: creationix: it is not quite as trivial to add to a new machine or make updates to, though
[16:14] creationix: isaacs: "source nvm/nvm.sh" done
[16:14] creationix: update, "git pull"
[16:15] DrMcKay: creationix: that's what I love in nvm
[16:15] jhurliman has joined the channel
[16:15] DrMcKay: creationix: and thank you for writing it :)
[16:15] creationix: in case anyone doesn't know, we're all friends here and there isn't really any competition between n, nvm, and nave, they are different programs for different people
[16:15] paulwe has joined the channel
[16:16] DrMcKay: well, sane people use what they like and don't flame each other
[16:16] markdaws has joined the channel
[16:16] halfhalo-work: lies
[16:16] creationix: I think I'll write a webOS game for node knockout
[16:16] creationix: maybe that will convince people it's not dead
[16:16] creationix: a node based game
[16:16] creationix: running on my phone
[16:16] H4ns: malletjo: you can't use a for loop around your async calls to mysql.  one way to solve the problem is a counter variable that you decrement in the callback.  if it is non-zero, you have more work to do and start another mysql query.
[16:16] isaacs: creationix: yeah, but to add nave to another machine, i just scp $(which nave) other-machine:/usr/local/bin/nave
[16:17] halfhalo-work: psh, webos.  what has that ever done for me.   Oh, wait....
[16:17] justmoon has joined the channel
[16:17] CIA-65: node: 03Mikeal Rogers 07master * rcdbecc4 10/ doc/api/http.markdown : 
[16:17] CIA-65: node: docs: Improved http2 agent docs
[16:17] CIA-65: node: Fixes #1517. - http://git.io/djpvxQ
[16:17] H4ns: malletjo: but in general, it would be better to try to restructure the sql so that it returns all data in one call.
[16:17] CoverSlide: HP did announce at one point they were going to put webOS on their laptops. did they end up doing any of that?
[16:17] malletjo: H4ns, yeah im trying to figure it out
[16:17] alvaro_o has joined the channel
[16:18] CoverSlide: ^ in addition to windows, not instead of
[16:18] newy has joined the channel
[16:18] sirdancealot has joined the channel
[16:18] gf3: CoverSlide: I feel like that was doomed to begin with
[16:18] XniX23: suppose i installed nave with npm
[16:18] brianc: anyone run into issues w/ node's openssl conflicting w/ a 3rd party c++ addon's version?  Basically I have to compile node without ssl support to use a c++ native module which uses libssl
[16:19] brianc: and it breaks my hea-hea-hea-hea-heaheaheaart
[16:19] XniX23: i now go to a folder, use nave install 0.4.9 and then i just use npm install express?
[16:19] amigojapan has joined the channel
[16:19] isaacs: XniX23: it's `nave use 0.4.9`
[16:19] CoverSlide: it might have helped to spread the OS
[16:19] isaacs: XniX23: if you're using npm 1.0, then `npm install express` is a local install anyhow
[16:19] H4ns: brianc: link the openssl that the extension needs into the extension.
[16:19] H4ns: brianc: (statically, that is)
[16:20] brianc: H4ns: the extension is already compiled & is closed source
[16:20] H4ns: brianc: tuff luck.
[16:20] brianc: tears
[16:20] H4ns: brianc: you could try relinking, but that'd be messy.
[16:20] amigojapan: CoverSlide: socket.id was undefined even on connection, but what I did is generate a randome number and set it as the ID,  and stored id as socket.id    then I was able to get that number on disconnect.... it worked
[16:20] brianc: I was hoping there was an option in node for it to use libssl without modifying it's "global" behavior 
[16:21] amigojapan: CoverSlide: only a language like JS would let me do something like that, if this were java, I wouldnt be able to set socket.id to anything
[16:21] CoverSlide: amigojapan: ok, as long as it works. 
[16:21] H4ns: brianc: you might be able to link openssl to node statically
[16:21] explodes has joined the channel
[16:21] CoverSlide: amigojapan: wait a minute ... what version of socket.io were you running?
[16:21] mike5w3c has joined the channel
[16:21] malletjo: H4ns, i could use some global var and a counter. When the counter is at 0 i can parse another object.
[16:22] brianc: H4ns: will that work? Wont both versions still use the same symbols?
[16:22] H4ns: brianc: but then, maybe relinking the extension is also not too hard.
[16:22] amigojapan: CoverSlide: I donwloaded it and isntalled it pretty recently
[16:22] explodes: isaacs: Is there a way to edit my npmjs.org profile?
[16:22] CoverSlide: hmm
[16:22] brianc: H4ns: i mean wont both node and the extension both use the same libssl symbols? 
[16:22] isaacs: explodes: reset the account and recreate it
[16:22] isaacs: explodes: http://admin.npmjs.org/reset and then `npm adduser`
[16:22] H4ns: brianc: when you have them linked statically, no dynamic lookup will be done. effectively, the addresses will be already resolved.
[16:22] CoverSlide: isaacs: boo
[16:22] amigojapan: CoverSlide: although, the problem might be that someone sent me his copy of socket.io and I have been using that dicrectory, so maybe I am using an old one
[16:22] brianc: H4ns: good to know. I'm a bit of a "linker" noob
[16:22] H4ns: malletjo: yes. the variable does not need to be global.
[16:23] isaacs: CoverSlide: ?
[16:23] explodes: isaacs: I just did that, there is no other profile information besides username/email/password?
[16:23] H4ns: brianc: i have not tried it myself.  linking ssl to node statically should be possible in any case.
[16:23] fdenbow has joined the channel
[16:23] isaacs: explodes: nope, that's it.
[16:23] CoverSlide: isaacs: so the only way to change your user info is to delete your user info?
[16:23] H4ns: brianc: (that'd just require some manipulation of the linker command line)
[16:23] explodes: cool, thanks.
[16:23] isaacs: CoverSlide: yeah, the "account" is just a key.
[16:23] creationix: I just read "isaacs explodes" and thought, that can't be good"
[16:24] unlink has joined the channel
[16:24] unlink has joined the channel
[16:24] isaacs: CoverSlide: all the relevant bits (ie, what packages you own) is in the package metadata.
[16:26] apanda has joined the channel
[16:26] ditesh|cassini has joined the channel
[16:26] ecin has joined the channel
[16:27] jsj has joined the channel
[16:30] gartenst_ has joined the channel
[16:32] eignerchris has joined the channel
[16:32] ph^ has joined the channel
[16:32] dshaw_ has joined the channel
[16:32] shipit has joined the channel
[16:33] Anton_: node's forked processes have nulled stdout and stdin, is it by design or is it bug?
[16:35] kevwil has joined the channel
[16:36] ph^_ has joined the channel
[16:36] CoverSli1e has joined the channel
[16:36] te-brian has joined the channel
[16:37] scottschecter has joined the channel
[16:38] davidascher has joined the channel
[16:38] XniX23: isaacs: i used the "nave use 0.4.9" command and it compiled (or whatever it was doing). How do i install express on that 0.4.9 version?
[16:38] arthurdebert has joined the channel
[16:38] mundanity has joined the channel
[16:38] guidocalvano has joined the channel
[16:39] Vertice has joined the channel
[16:39] dnjaramba has joined the channel
[16:40] XniX23: ah nevermind, for some reason sudo npm install -g express didnt work while npm install express worked ^^
[16:40] TooTallNate has joined the channel
[16:40] aurojit has joined the channel
[16:40] garrensmith: isaacs: out of interest how much of the original code for npm is still in the current release? 
[16:40] isaacs: garrensmith: hm, i'm not sure.  not much, probably
[16:41] isaacs: garrensmith: considering that the "original code" was a single shell script ;)
[16:41] chjj: !
[16:41] chjj: wow
[16:41] TooTallNate has joined the channel
[16:41] garrensmith: isaacs: lol, did you do complete rewrites each time or incremental?
[16:41] AvianFlu has joined the channel
[16:41] isaacs: and then it was an "npm-install.js" which was basically just a translation of that shell script to 0.0-style node js, using promises and a global "node" object.
[16:42] isaacs: garrensmith: it's pretty incremental now.  it's a much bigger program.
[16:42] guidocalvano_ has joined the channel
[16:42] garrensmith: isaacs: whats your test coverage like? Do you rely on that a lot when doing changes?
[16:42] isaacs: garrensmith: my test coverage of npm itself is pretty awful.
[16:43] garrensmith: isaacs: so how do you test if you have introducted any breaking changes?
[16:43] isaacs: garrensmith: some of the pieces are well covered, as i abstract them out (semver, minimatch, etc) but the program as a whole is mostly just covered by a handful of integration tests.
[16:43] chjj: well, theres tons of people using npm, im sure he would be notified pretty quickly if there was a problem ;)
[16:43] isaacs: yep
[16:43] garrensmith: isaacs: ok interesting
[16:44] garrensmith: isaacs: nice to know everyones design and development approacj
[16:44] garrensmith: *approach
[16:44] TheJH: scream-based testing?
[16:44] isaacs: you have to weigh the costs of writing tests vs the savings.  in most cases it's a no-brainer, but there's no reason to be dogmatic about it, imo
[16:44] TheJH: sounds fun :)
[16:44] CoverSlide: when do we get to hear isaacs's sexy voice again on a podcast?
[16:44] TheJH: http://troll.me/images/dos-equis-man/i-dont-always-test-my-code-btu-when-i-do-it-is-in-production.jpg
[16:44] chjj: yeah npm seems like it would be fairly hard to test
[16:44] isaacs: different programs require different testing approaches
[16:45] garrensmith: isaacs: agreed
[16:45] nibblebot: isaacs: do you have an npm install script for smartmachines? the curl|sh fails for me
[16:45] isaacs: my goal is to eventually abstract out anything general-purpose that npm uses (there's still a bunch more to do there) and have those pieces well covered.
[16:45] isaacs: nibblebot: you may need to set tar=gtar in your ~/.npmrc file.
[16:45] isaacs: nibblebot: also, maybe prefix=~/local or something, if you'd prefer it not to be in /opt/local
[16:45] nibblebot: isaacs: ah i always forget gnu tools
[16:46] nibblebot: hope it's that simple
[16:46] isaacs: nibblebot: yeah, it'll be better soon for no.de machines at least.
[16:46] bradleymeck has joined the channel
[16:46] gr-eg has joined the channel
[16:47] elijah has joined the channel
[16:48] dguttman has joined the channel
[16:49] dnjaramba has joined the channel
[16:49] CarterL has left the channel
[16:50] ph^ has joined the channel
[16:50] ckpcw has joined the channel
[16:50] fyskij has joined the channel
[16:51] prettyrobots has joined the channel
[16:52] Malar has joined the channel
[16:53] pen_ has joined the channel
[16:56] booo has joined the channel
[16:56] fermion: anyone have a pointer about using forever + node + expressjs launching in production mode (for express)?
[16:57] progme has joined the channel
[16:57] kdng-saleem3 has joined the channel
[16:59] neilk_ has joined the channel
[17:00] CoverSlide: fermion: what kind of pointers would you like?
[17:00] zcopley has joined the channel
[17:01] fermion: CoverSlide: I'm not sure — I guess I'm not even sure if what I want to do is possible
[17:01] tjholowaychuk: fermion what do you want to do?
[17:01] fermion: I tried: forever start -c "EXPRESS_ENV=production node" app.js
[17:01] fermion: erm, "
[17:01] fermion: 's out of place there
[17:01] tjholowaychuk: NODE_ENV
[17:01] AvianFlu: it's NODE_ENV, no?
[17:01] AvianFlu: yeah
[17:02] fermion: tjholowaychuk: heya, I'd like forever to start/restart my express site in prod mode
[17:02] tjholowaychuk: EXPRESS_ENV is old
[17:02] AvianFlu: fermion you can just put it on the line with it I think
[17:02] fermion: cool, I'll give that a whirl
[17:02] tjholowaychuk: fermion take a look at http://learnboost.github.com/cluster/ as well
[17:02] pizthewiz has joined the channel
[17:02] AvianFlu: NODE_ENV=production forever start (whatever)
[17:02] tjholowaychuk: if you dont have luck
[17:02] Me1000 has joined the channel
[17:02] lorinc has joined the channel
[17:03] fermion: AvianFlu: cool — I guess I assumed that that CLI arg wouldn't propagate to subsequent processes when forever does its thing
[17:03] CoverSlide: ACTION puts his cluster server behind forever :o
[17:03] fermion: hehe
[17:03] Me1000 has joined the channel
[17:03] AvianFlu: yeah, you only have to worry about that for shell changes
[17:03] AvianFlu: reboots, different users, stuff like that
[17:04] topaxi has joined the channel
[17:04] AvianFlu: that's when ENV changes
[17:04] tjholowaychuk: ACTION monit -> forever -> cluster -> node
[17:04] tjholowaychuk: haha
[17:04] tjholowaychuk: jk
[17:04] AvianFlu: I mean, hey, why not
[17:04] AvianFlu: I'm sure it would stay up XD
[17:05] fermion: AvianFlu: you're right, it's fine
[17:05] fermion: cool
[17:05] fermion: I assumed it'd restart in development mode
[17:05] shanebo has joined the channel
[17:05] fermion: awesome, thanks tjholowaychuk, AvianFlu, CoverSlide
[17:05] fermion: in no particular order
[17:05] Bonuspunkt: how do i set multiple cookies via one http response?
[17:06] geetarista has joined the channel
[17:07] ph^ has joined the channel
[17:08] nibblebot: isaacs: it's because /bin/sh is not bash
[17:08] aoberoi has joined the channel
[17:08] nibblebot: certain constructs not supported
[17:08] theCode has joined the channel
[17:11] LordShiva has joined the channel
[17:12] irahgel1 has left the channel
[17:13] wadey has joined the channel
[17:13] CoinOpeBoy has joined the channel
[17:13] zeropx has joined the channel
[17:13] aklt has joined the channel
[17:14] freeformz has joined the channel
[17:17] butu5 has joined the channel
[17:20] necrodearia has joined the channel
[17:21] guidocalvano has joined the channel
[17:23] futoase has joined the channel
[17:24] butu5 has joined the channel
[17:24] newy has joined the channel
[17:25] mcluskydodallas has joined the channel
[17:25] heavysixer has joined the channel
[17:26] hij1nx has joined the channel
[17:27] confoocious has joined the channel
[17:27] aheckmann has joined the channel
[17:28] jhurliman has joined the channel
[17:32] simenbrekken has joined the channel
[17:32] cesarcastillo has joined the channel
[17:34] cesarcastillo has left the channel
[17:34] AdamMagana has joined the channel
[17:34] AdamMagana has left the channel
[17:35] luke` has joined the channel
[17:36] CrypticSwarm_ has joined the channel
[17:37] malletjo: H4ns,  well how can i still have access to this variable in my callback ? i have like 3  nested mysql callback ? ( sorry for the delay )
[17:38] LordMetroid has joined the channel
[17:38] freeformz has joined the channel
[17:38] dgathright has joined the channel
[17:39] navaru has joined the channel
[17:39] navaru has left the channel
[17:39] malletjo: H4ns, but if im using a counter , i dont do my stuff async , so it will take much more time for processing
[17:40] trotter has joined the channel
[17:40] zemanel has joined the channel
[17:41] malletjo: there is any way i can pass some params to the callback of mysql other then err, results and field ?
[17:41] tylerstalder has joined the channel
[17:41] brokenjames has joined the channel
[17:43] NetRoY has joined the channel
[17:43] Yoric has joined the channel
[17:44] arthurdebert has joined the channel
[17:44] kdng-saleem3 has left the channel
[17:44] kdng-saleem3 has joined the channel
[17:45] carmony_ has joined the channel
[17:45] Wa has joined the channel
[17:47] butu5 has left the channel
[17:48] jarek has joined the channel
[17:48] jarek has joined the channel
[17:49] zeade has joined the channel
[17:49] AvianFlu: malletjo you have access to anything in the parent scope that hasn't been overridden
[17:50] malletjo: AvianFlu, so i can't use the async of mysql , because it will be overwritten. ( like i did in the for loop )
[17:50] AvianFlu: I didn't look at your code, is it pasted above?
[17:51] markdaws has joined the channel
[17:51] malletjo: AvianFlu, nope i cant pasted it ; its under nda. Ill do a usecase to explain
[17:51] Me1000 has joined the channel
[17:51] AvianFlu: I understand
[17:51] softdrink: is anyone using requirejs's optimizer directly in node?
[17:52] Poetro_ has joined the channel
[17:52] Poetro_ has joined the channel
[17:53] CrabDude has joined the channel
[17:53] aconbere has joined the channel
[17:54] sylvinus has joined the channel
[17:56] MaSch has joined the channel
[17:56] theCode has joined the channel
[17:57] hdon- has joined the channel
[18:00] cpetzold has joined the channel
[18:01] hackband has joined the channel
[18:02] Aikar: is there an npm command that checks for updates but doesnt actually update?
[18:02] ckpcw has left the channel
[18:03] malletjo: AvianFlu, http://pastebin.com/cbxeGKSg ( a example )
[18:03] tarzeau has left the channel
[18:04] ekryski has joined the channel
[18:06] Me1000 has joined the channel
[18:08] jarek_ has joined the channel
[18:09] malletjo: AvianFlu, like you said one solution is the stop the processing with a "counter" and use my params so that its not been overridden. Any others possibility ?
[18:10] garrensmith: tjholowaychuk: hey, is there a html to jade converter?
[18:10] AvianFlu: not that I can think of offhand
[18:10] tjholowaychuk: garrensmith you bet
[18:10] malletjo: if i could pass some stuff to my mysql callback it should work , but i wasnt able to do it
[18:10] robi42 has joined the channel
[18:10] garrensmith: tjholowaychuk: awesome you have a link or is it on github
[18:10] tjholowaychuk: garrensmith https://github.com/donpark/html2jade
[18:10] tjholowaychuk: havent tried it personally
[18:10] truite has joined the channel
[18:10] tjholowaychuk: heard it works pretty well
[18:10] garrensmith: tjholowaychuk: thanks will give it a go
[18:11] dgathright has joined the channel
[18:13] fmeyer has joined the channel
[18:13] asabil has joined the channel
[18:13] malletjo: Anyone knows if Felix Geisendorder ( node-mysql ) is coming here ?
[18:13] kdng-saleem3 has joined the channel
[18:14] dob_ has joined the channel
[18:14] CoverSlide: he pops in sometimes
[18:14] CoverSlide: you'd have to ask his secretary if he is scheduled to come in
[18:14] malletjo: ;) i  assumed
[18:15] brion has joined the channel
[18:15] brion has joined the channel
[18:15] fmeyer has joined the channel
[18:16] AvianFlu: malletjo  he's felixge
[18:16] malletjo: Anyone here used node-mysql and was able to pass to querys callback some params ?
[18:17] isaacs has joined the channel
[18:17] malletjo: AvianFlu, danke
[18:17] TheJH: malletjo, he was here the last time four days ago
[18:17] heavysixer has joined the channel
[18:18] malletjo: TheJH, thx as far as i know ill need to use the counter for processing all my object one by one.
[18:18] Silly_Wabbit has joined the channel
[18:18] djbell has joined the channel
[18:19] TheJH: malletjo, you want to pass stuff to your callback? in other words, prepopulate the arguments of the callback?
[18:19] dgreene has joined the channel
[18:19] dmkbot has joined the channel
[18:20] dmkbot has joined the channel
[18:20] malletjo: TheJH, i want some stuff from my function pass too my mysql callback , but mysql callback seems fixed like ( err, results, fields )
[18:20] dmkbot has joined the channel
[18:20] dmkbot has joined the channel
[18:20] TheJH: malletjo, could you gist your code?
[18:21] dmkbot has joined the channel
[18:21] malletjo: like i said to AvianFlu , its under NDA , but i did a simple example  http://pastebin.com/cbxeGKSg
[18:21] tilgovi has joined the channel
[18:21] tilgovi has joined the channel
[18:22] trotter has joined the channel
[18:22] dmkbot has joined the channel
[18:22] TheJH: malletjo, http://pastebin.com/YESPD5gu
[18:23] dmkbot has joined the channel
[18:23] malletjo: TheJH, if i line #23 , i could do somethings like function(e,r,f ... my_params ) , but doesnt seems to be able
[18:23] TheJH: malletjo, oops, you'll also need to add a "i" to the call at the end
[18:23] TheJH: malletjo, but apart from that, it should work. the closure preserves the value of i
[18:24] garrensmith: tjholowaychuk: could I have a jade layout with a html view using jade and express?
[18:24] malletjo: add "i" at line #28 ? "})(i)}" you meant ?
[18:25] zemanel_ has joined the channel
[18:25] tjholowaychuk: garrensmith you could use a combo of engines
[18:25] tjholowaychuk: but html isnt really a template engine
[18:25] SvenDowideit has joined the channel
[18:25] tjholowaychuk: you could use app.register() to tie it in though
[18:25] tjholowaychuk: to kinda fake an html template engine
[18:25] Fabryz: how to get the current server ip/port?
[18:25] garrensmith: tjholowaychuk: agreed I just want to embed some html inside a jade view
[18:26] CoverSlide: server.address() ??
[18:26] malletjo: TheJH, thx let me try
[18:26] chjj: damn github
[18:26] tjholowaychuk: garrensmith with the latest releases you can do `include file.html`
[18:26] tjholowaychuk: for a literal include
[18:26] tjholowaychuk: or `include foo` to include foo.jade
[18:26] chjj: thats the first time ive gotten a generic nginx 502 page from github
[18:26] TheJH: malletjo, yes, that's what I meant
[18:26] krolow has joined the channel
[18:26] malletjo: i will keep you updated , thx to all
[18:26] garrensmith: tjholowaychuk: perfect thats what I want
[18:26] CoverSlide: wow, that requires some talent
[18:27] CoverSlide: the octocat 404 annoys me tho
[18:27] krolow: hi, someone know about socket.io I started receive in debug: "debug - discarding transport"
[18:28] josdehar has joined the channel
[18:28] indexzero has joined the channel
[18:30] guidocalvano has joined the channel
[18:30] markdaws_ has joined the channel
[18:30] josdehar has joined the channel
[18:33] larsemil has joined the channel
[18:33] perezd has joined the channel
[18:33] malletjo: TheJH, seems to worked , do you have any tutorial explain on how this worked ( closure and how you just add a function )
[18:33] mbrevoort: tjholowaychuk: hi, have you done or know of any log rolling capabilities for Cluster?
[18:33] CrypticSwarm__ has joined the channel
[18:33] tjholowaychuk: mbrevoort not built in, I just use http://linuxcommand.org/man_pages/logrotate8.html
[18:34] tjholowaychuk: but it could be done with node too, just hasn't been yet I guess :D
[18:34] tjholowaychuk: would be nice to have
[18:34] TheJH: malletjo, maybe this? http://stackoverflow.com/questions/750486/javascript-closure-inside-loops-simple-practical-example
[18:36] dylang: I'm finally ready to announce changelog: https://github.com/dylang/changelog  Feedback greatly appreciated, I hope it to be helpful for everyone participating in Node Knockout.
[18:36] mbrevoort: tjholowaychuk: cool, ok, I'll probably create something, probably as a cluster plugin or at least that's easily wrappable
[18:36] gridmesh has joined the channel
[18:36] patcito has joined the channel
[18:36] malletjo: "Since there is no block scope in JavaScript - only function scope - by wrapping the function creation in a new function, you ensure that the value of "i" remains as you intended."
[18:37] malletjo: thx again
[18:37] DrMcKay: any idea for new GH avatar?
[18:37] DrMcKay: something node related?
[18:37] TheJH: DrMcKay, new GH avatar?
[18:37] DrMcKay: TheJH: yeah, I need something new
[18:37] TheJH: DrMcKay, you mean, something new for the octodex?
[18:38] DrMcKay: TheJH: yeah :D
[18:38] DrMcKay: but no, I don't have octodex in my avatar
[18:38] reid has joined the channel
[18:38] TheJH: DrMcKay, uhm, that sentence doesn't make sense to me - to you know http://octodex.github.com/ ?
[18:39] DrMcKay: ahh, this
[18:39] DrMcKay: oh.
[18:39] pickels has joined the channel
[18:39] DrMcKay: I didn't think about that
[18:39] chrizel has joined the channel
[18:40] DrMcKay: TheJH: oh, no! 
[18:41] DrMcKay: you got me wrong
[18:41] DrMcKay: I want someone for myself
[18:42] DrMcKay: but wait, do they accept octodexes from everyone?
[18:42] rsdio has joined the channel
[18:42] stagas: dylang: nice!
[18:44] kdng-saleem3 has joined the channel
[18:44] DrMcKay: shit, I know why my bot doesn't report issues
[18:45] harthur has joined the channel
[18:45] truite has left the channel
[18:46] kdng-saleem3 has joined the channel
[18:46] rsdio has left the channel
[18:46] jerrysv has joined the channel
[18:46] japj: is it still running?
[18:46] rsdio has joined the channel
[18:46] kdng-saleem3 has joined the channel
[18:46] DrMcKay: japj: not now, it started to spin
[18:47] DrMcKay: I'm getting him on in few seconds
[18:47] losing has joined the channel
[18:48] Aphelion has joined the channel
[18:48] mikedeboer has joined the channel
[18:49] weezle has joined the channel
[18:52] MaSch has joined the channel
[18:52] Skola: HN down?
[18:52] Skola: or is it my interwebs
[18:53] samuelkadolph: http://www.isup.me/news.ycombinator.com
[18:53] tomtomaso has joined the channel
[18:53] Skola: cheers
[18:53] Skola: ja it's up for me again
[18:53] garann has joined the channel
[18:53] freeformz has joined the channel
[18:55] heavysixer has joined the channel
[18:55] FearOfMusic has joined the channel
[18:56] ekryski: I have a question for y'all.  If you are running Redis with node and using it for session stuff do you think its better to have redis on its own box or have one on each physical box with its node instances?
[18:57] vikstrous has joined the channel
[18:57] CoverSlide: either way, doesn't really make that much of a difference
[18:58] jerrysv: depends on your cores, how much memory you have, how much disk is being hit for redis, and how much traffic you're looking at taking
[18:58] jerrysv: if you have an extra core, and the traffic is low, same machine all the way
[18:58] mikl has joined the channel
[18:58] jerrysv: we use memcache on each webserver, but that doesn't ever hit disk
[18:58] ekryski: ya I guess. traffic will probably be high. I thinking of using redis instead of memcache
[18:59] ekryski: I was gonna run a node instance per core.
[18:59] jerrysv: define pretty high
[18:59] ekryski: ha ha.
[18:59] dmkbot has joined the channel
[18:59] dmkbot: *she reading the manual and copy/pasting the deadline synopsis I kept gett* reported by FugueNation: https://github.com/joyent/node/issues/1582
[18:59] dmkbot: *http.response.statusMessage missing* reported by auduny: https://github.com/joyent/node/issues/1564
[18:59] dmkbot: *Public key and TLS ? * reported by Dededede4: https://github.com/joyent/node/issues/1472
[18:59] DrMcKay: yay!
[18:59] jerrysv: ekryski: seriously :)
[19:00] CStumph has joined the channel
[19:00] CoverSlide: DrMcKay: how often are you hitting the github api?
[19:00] ekryski: well right now its low like 10 req/s but I'm thinking in the neighbourhood of 5-10000 req/s
[19:01] ekryski: depends on how we want to scale out.  We are servicing about 3000 users right now but we are likely gonna be closer to 100,000 by the end of the year (no joke!)
[19:02] Skola: on what very solid analysis is this number based? :D
[19:02] CoverSlide: time machine
[19:02] ekryski: yes!
[19:02] ekryski: ^
[19:02] nicka_ has joined the channel
[19:02] mikeal has joined the channel
[19:02] nicka_: howdy
[19:02] nicka_: can someone tell me why I can't get this direct TCP connection to redis to work: http://pastebin.com/G95LS8YD
[19:03] nicka_: driving me nuts!
[19:03] nicka_: seems like it should be so simple
[19:03] DrMcKay: CoverSlide: every 5 seconds :)
[19:04] CoverSlide: DrMcKay: won't you hit the limit? it's like 5000/day right?
[19:04] DrMcKay: no, it doesn't hit the limit somehow
[19:04] ekryski: I can't disclose much but we are running pilots with carriers and they want to role things out to between 1-5 % of their subs. Even if one of the carriers we are dealing with does this we are looking at between 100,000 and 5 million users
[19:04] DrMcKay: I can curl the API and I see like 4000 reqs left
[19:04] stonebranch has joined the channel
[19:05] DrMcKay: my guess is that it fucks at some moment and doesn't query it later
[19:06] CoverSlide: nicka_: do you get an error or just no data?
[19:06] DrMcKay: I don't really care for now
[19:06] nicka_: CoverSlide: just no data. 
[19:06] nicka_: CoverSlide: I havent attached anything to .on('error'') though should i try that?
[19:07] LordMetroid: I need to check wheter either of two files exists on the harddrive, shall I do this by fl.statSync of fl.stat?
[19:07] CoverSlide: nicka_: of course, because you haven't sent the server anything to tell it that you're connected
[19:07] devongovett has joined the channel
[19:08] nicka_: CoverSlide: doesnt net.createConnection() handle that?
[19:08] CrypticSwarm__ has joined the channel
[19:08] apanda has joined the channel
[19:08] CoverSlide: nicka_: the net module doesn't know anything about the redis protocol or how to tell it you're there
[19:10] brianc: hi
[19:10] brianc: can't find this in the code...where is process.nextTick defined?
[19:10] nicka_: CoverSlide: redis knows i'm there, it says ' 1 clients connected' in the console
[19:10] nicka_: CoverSlide: and when i telnet to it I can just begin sending commands
[19:11] brianc: foundt
[19:12] LordMetroid: I first thought that it would be sufficient with fs.statSync but then I thought, node.js is suppose to be asynchronized. Do I really want to go back and forth to the harddrive twice
[19:13] chrislorenz has joined the channel
[19:14] yept has joined the channel
[19:15] jvdev has joined the channel
[19:15] LordMetroid: But I have no idea on how I would actually go about doing an asynchronous check
[19:15] LordMetroid: I imagine, it would be something like creating a function object which I use as callback for both the calls
[19:15] wookiehangover has joined the channel
[19:16] LordMetroid: and when one of them answers true, I simply set a variable in that object literal so I will not execute several files if there are more than one
[19:16] nicka_: CoverSlide: ok got it.  apparently you have to use this format "*3\r\n$3\r\nSET\r\n$5\r\nmykey\r\n$7\r\nmyvalue\r\n"  the raw protocal (http://redis.io/topics/protocol) when you do direct TCP.  but not telnet?  How does it even know the difference?  Hmmm.
[19:17] nicka_: s/protocal/protocol
[19:17] LordMetroid: Or is that solution stupid and I should go with the less complex fs.statSync
[19:17] CoverSlide: nicka_: what does it send in telnet when you connect?
[19:18] CoverSlide: LordMetroid: use fs.statSync only when you don't care whether the code blocks
[19:19] nicka_: CoverSlide: http://pastebin.com/WfypPy8t
[19:19] CoverSlide: ie. when you first start up a script and have no connections to worry about
[19:19] kriskowal has joined the channel
[19:19] CoverSlide: nicka_: so you're expecting your node script to receive data without sending it a query first?
[19:20] pt_tr has joined the channel
[19:20] kriskowal: does anyone know the dance to start using weakmaps and proxies?
[19:21] dmitrig01 has joined the channel
[19:21] bradleymeck: prayers and dreams? v8 just added most of it via cli args, weakmaps > proxies
[19:21] CoverSlide: --harmony-weakmaps ??
[19:21] ckknight has joined the channel
[19:21] nicka_: CoverSlide: it sends the data on 'connect' event... anyway it works now like this:  http://pastebin.com/cnbzwAty
[19:22] Anton_: bnoordhuis: hi, i talked to you about SEGFAULT in node(when there was many http requests, garbace collector etc). Was there any progress with that issue?
[19:22] hydrozen has joined the channel
[19:22] Anton_: it was couple a weeks ago
[19:22] dgathright has joined the channel
[19:22] unlink has joined the channel
[19:22] unlink has joined the channel
[19:23] nicka_: CoverSlide: also it appears the protocol is not as simple as I first thought so I guess I'll just use node_redis or whatever :/
[19:23] bnoordhuis: Anton_: no sorry, swamped with other stuff
[19:23] xanderer has joined the channel
[19:23] dgathright has joined the channel
[19:24] Poetro has joined the channel
[19:24] Poetro has joined the channel
[19:24] felixhummel has joined the channel
[19:24] LordMetroid: Okay, object literal it is, fs.stat to query all possible files and then gather the results in the object literal, when all queries have returned, continue with the execution of the program
[19:25] dmitrig01: Hey all; is there a good way to determine what's stopping my process from finishing to execute?
[19:25] creationix has left the channel
[19:25] CIA-65: libuv: 03Ryan Dahl 07master * r80e5491 10/ include/uv.h : Simplify UDP docs - http://git.io/vdP9PA
[19:26] Nuck has joined the channel
[19:28] Anton_: bnoordhuis: is it somewhere in issue tracke so i can watch progress and not bother you?
[19:28] Yoric has joined the channel
[19:28] tmedema has joined the channel
[19:28] tmedema: Anyone I can ask about Hook.io?
[19:28] stonebranch has joined the channel
[19:28] bnoordhuis: Anton_: maybe, not 100% sure
[19:28] CoverSlide: tmedema: maybe #nodejitsu
[19:29] tmedema: CoverSlide: thanks
[19:29] bnoordhuis: Anton_: check joyent/node and please open a new issue if there's nothing yet
[19:29] Anton_: bnoordhuis: ok
[19:29] Anton_: bnoordhuis: and while you here, node's forked processes have nulled stdin and stdout, is it by design?
[19:29] achiu has joined the channel
[19:30] bnoordhuis: Anton_: you mean after child_process.fork()?
[19:30] Anton_: yes
[19:30] bnoordhuis: i was going to say it's by design
[19:30] bnoordhuis: but what version of node are we talking here?
[19:31] tomsub has joined the channel
[19:31] Anton_: 0.5.3 and 0.5.4
[19:31] chrizel has joined the channel
[19:31] Anton_: it's just spawned processes have ok stdout and stdin
[19:31] whitman has joined the channel
[19:31] Anton_: and forked have null
[19:32] brolin has joined the channel
[19:33] Vertice has joined the channel
[19:33] bnoordhuis: Anton_: with nulled stdin you mean process.stdin == null or that fd 0 is closed?
[19:34] Anton_: process.stdin == null
[19:34] Anton_: and stdout == null
[19:35] Anton_: that's why i can't use stdout.on('data'...)
[19:35] Anton_: i was trying to get output when running node app as a daemon
[19:35] hasta84__ has joined the channel
[19:36] bnoordhuis: Anton_: hmm, i think that the child should inherit the stdio streams from the parent
[19:36] bnoordhuis: Anton_: but if your app runs as a daemon, the daemonizer will close fds 0, 1 and 2 (or reroute them)
[19:37] bnoordhuis: Anton_: try it in non-daemonized mode
[19:37] Anton_: i redirected parent's stdout in the file and child's output got lost
[19:37] Anton_: i tried as a non daemon also
[19:37] Anton_: fork() still generate nulled stdio on child
[19:37] bnoordhuis: without touching stdin and stdout in any way?
[19:38] Anton_: i replace parent's stdout.write with my function
[19:38] slifty has joined the channel
[19:39] dgathright has joined the channel
[19:39] ghostwriter has joined the channel
[19:39] trotter has joined the channel
[19:39] bnoordhuis: Anton_: don't do that :)
[19:39] Layke has joined the channel
[19:39] Anton_: i was just trying to get all output from all nodes to one file
[19:40] Marak has joined the channel
[19:41] Anton_: now i just open one file with 'a' from all processes and works fine
[19:41] Anton_: but still i'm curious why i can't use stdout.on('data'...) with forked process
[19:42] Layke: Is there an FAQ that answers how I can have my node server always running? Like it would be with apache?
[19:43] AvianFlu_ has joined the channel
[19:43] Anton_: Layke: http://howtonode.org/deploying-node-upstart-monit
[19:43] Layke: Thanks Anton_ 
[19:46] bnoordhuis: Anton_: you can but don't mess with the stdio streams, it won't work across fork/execve unless you're really careful
[19:46] guidocalvano has joined the channel
[19:46] bnoordhuis: Anton_: you can pass in custom fds with the customFds property
[19:48] tomtomaso has joined the channel
[19:49] Nexxy:  Layke https://github.com/indexzero/forever
[19:49] Layke: Was actually just reading that this very second.
[19:49] Nexxy: ^-^
[19:49] Layke: How does that help me though. Can't that crash as well?
[19:50] Cromulent has joined the channel
[19:50] Nexxy: everything can crash
[19:50] Layke: Wouldn't using multiple instances of monit be better?
[19:50] tjholowaychuk: Layke: cluster!
[19:50] Layke: Nexxy,  I'm completely new to node.js but will be distributing accross multiple servers. If you guys say indexzero is the easiest solution than I will use that.
[19:51] tjholowaychuk: Layke http://learnboost.github.com/cluster/
[19:51] tjholowaychuk: there's also fugue
[19:51] tjholowaychuk: im not sure if it's maintained anymore haven't looked
[19:51] CoverSlide: indexzero is the solution to every node problem
[19:51] tilgovi has joined the channel
[19:51] tilgovi has joined the channel
[19:53] Layke: I have to admit though, that I still don't quite "get" node.js. I've  tried in the past, just couldn't understand how it is a benefit. 
[19:53] Layke: I've only just now started to use it due to wanting to use socket.io which I do get :)
[19:54] Aikar: Layke: think of it this way
[19:55] Anton_ has joined the channel
[19:55] Aikar: which do you consider more effecient. A) You go to get oil changed in your car, you sit and wait for it to finish. B) You go to get oil changed in your car, and you go shopping next door while waiting for it to be ready
[19:55] Aikar: B) is an idea of async operations, doing things while waiting for another to finish, vs waiting for 1 to finish to do the other
[19:56] Aikar: under A), you can have your wife go do the shopping while you wait (multi thread), but still not as an effecient use of time
[19:56] achiu has joined the channel
[19:56] Aikar: node.js is a great environment for working in an async environment
[19:56] Aikar: other languages were not designed to be async, so async operations in them are more of a hack, and the syntax isnt as friendly
[19:56] CoverSlide: with threads you can clone yourself and one of you watches the oil change guy to make sure he doesn't steal your wallet while the other goes shopping
[19:57] Layke: Aikar,  I think I'm just stumped, because I've always been a PHP developer. I've only ever known LAMP for like 7+ years. 
[19:57] DrMcKay: Aikar++
[19:57] v8bot_:  DrMcKay has given a beer to Aikar. Aikar now has 2 beers.
[19:57] catb0t: Aikar now has 1 beer
[19:57] prettyrobots has joined the channel
[19:57] DrMcKay: or you could go multiprocessing (fork)
[19:57] Aikar: CoverSlide: your wallet better be in your pocket if your shopping :P
[19:58] DrMcKay: but well, it could result in funny situations
[19:58] CarterL has joined the channel
[19:58] DrMcKay: I mean, people are not used to seeing half of bodies shopping
[19:58] Aikar: Layke: it really boils down to the advantages of async vs sync, node.js just happens to be one of the main "environments" that provides an easy to work with async environment.
[19:59] Aikar: since the javascript language was designed to be used async
[19:59] DrMcKay: specifically, people got interested in async when they noticed c10k problem
[19:59] Aikar: asyncs main advantages come into play when you do operations that dont return results instantly, such as I/O
[19:59] Layke: I'm sure after I start using it, that I will understand. I'm thinking very linear-ally. Make a request. Open connection. Execute code. Build a response object proceedurally. Respond. Close connection. 
[19:59] jonaslund: I don't really had any sync/async things in mind when they designed javascript
[20:00] Aikar: stuff like database queries and Web responses are I/O
[20:00] Layke: Where in that timeline does node.js differ?
[20:00] CoverSlide: Layke: PHP only works on the part of the http server that runs on a 'request' event, while apache does all the rest, with node, you control every aspect of it. there's no apache server because the server is IN YOUR CODE
[20:00] Aikar: layke, a connection is accepted, then theirs time for data to actually be sent to your server with the request
[20:00] Aikar: that time there is lost in sync systems
[20:00] Aikar: node will do other things instead (unwind the stack)
[20:01] markwubben has joined the channel
[20:01] Aikar: when the request comes in (maybe 20ms later), it then acts on it
[20:01] Aikar: then your code will likely query a database
[20:01] DrMcKay: Layke: you may like this: http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/
[20:01] Layke: Great thanks DrMcKay  - Any extra reading material wil be great. :)
[20:01] Aikar: while you wait for the DB response to come back (say 30ms), sync systems will sit there doing nothing, node will not
[20:01] shanebo has joined the channel
[20:02] Aikar: then you write the resp back to the client (which may be more data then a single buffer, it could take 20ms), node will be looking for work to do in all of these "waiting" points, where as a sync system sits there... waiting for it to finish before it moves onto next
[20:03] DrMcKay: Aikar: great explanation :)
[20:03] Aikar: so you could have say 100ms of "waiting" time in PHP for a single request, when theres actually only 3ms of "operations"
[20:03] Layke: Trying to digest... give me aminute. lol
[20:04] Layke: So Aikar, do you still send a response object to the client in one go?
[20:04] dmitrig01 has left the channel
[20:04] Aikar: this is the hard part to digest
[20:04] Aikar: theres this concept of a "stack"
[20:04] Aikar: you know stac ktraces on error
[20:04] Layke: Yes.
[20:04] Aikar: anytime node hits a waiting point, the stack unwinds
[20:05] Aikar: and itll stay at the bottom until it has work to do
[20:05] Layke: How does it detect a waiting point?
[20:05] Aikar: that "work" (callback) will then be the first level of the stack
[20:05] Aikar: any I/O type work
[20:05] Aikar: reading/writing a socket
[20:05] Aikar: and/or file
[20:06] Aikar: reading the request from a web request is input, sending the response is output
[20:06] Layke: So I already have my project.. it's near alpha, probably will launch in about 3 months. I'm past the point of being able to use node.js for my entire project right? 
[20:06] Aikar: sending a db query is output, receiving the response is input
[20:06] Layke: node.js can't be wrapped around what I already have. 
[20:06] ezmobius has joined the channel
[20:06] Layke: I need to build on top of node.js
[20:06] blkcat: Layke: uh, that's sort of for you to decide, isn't it? :)
[20:06] Aikar: youd have to make the decision if a large part of your app is built around I/O and would it be wort hdelaying/rewriting for it
[20:07] CarterL: Layke: http://joyeur.com/2011/08/11/node-js-meetup-distributed-web-architectures/
[20:07] brianc: ugg...ugly question: if a c++ module does something on another thread, is there a way to "attach" the callback back to the main runloop thread in node?  
[20:07] CarterL: watch the first video
[20:07] bsstoner has joined the channel
[20:07] CarterL: its 25 minutes
[20:08] thalll has joined the channel
[20:08] mbrochh has joined the channel
[20:08] Layke: Cheers. 
[20:08] CarterL: watch the others if you want
[20:08] CarterL: but that should give you some indication on whehter its a right fit and being able to use parts of php / node.js together
[20:08] Aikar: a big "clear" advantage of node is say you have 1 user request a page, and that DB query takes a whopping 3s to finish. the PHP process sits there for all 3 seconds before it does anything. but in PHP its multi threaded so other requests can still come through, but at the expense of using a thread per connection
[20:08] Aikar: in node, if a query takes 3s, node could service 4000 other complete requests in that time frame, all on the same single process w/o any addtl theads
[20:09] Aikar: threads*
[20:09] mbrochh: hey folks... let's say I need an app that gets a list of 1 million URLs out of a DB and then pings all those URLs and writes some information about each URL back into the DB... I think node.js would be a good fit for this, but I wonder what database to use for this...
[20:09] Aikar: mbrochh: yes it would be better than any sync system
[20:09] brianc: Aikar: though at that point your database is going to most likely shit the bed
[20:09] japj: brianc: all javascript code in node is executed on a single thread. if you do something in C++ on a different thread there is a mechanism to have the callback to be called on that main javascript thread
[20:09] mbrochh: If I used postgres or mysql, would I be able to write to the DB without sacrificing the non blockingness of node.js?
[20:09] brianc: mbrochh: yes, both postgres and mysql have node bindings which are fully async
[20:09] Aikar: mbrochh: with a good client yes
[20:09] Aikar: mbrochh: or you can look at mongodb
[20:10] brianc: japj: do what mechanism do you speak?
[20:10] Layke: The reason why I'm looking to node.js is because I landed on socket.io as a solution (or alternative to cometd ). My **current** problem, is that I want notifications / messages which my users receive to immediately pop up in the window. This is a sample UI.  http://chrisacky.com/images/notifications.png (The Zero in the top left) .
[20:10] CoverSlide: mbrochh: yes, because all the querying happens over sockets, which do not block
[20:10] Aikar: Layke: you can use node as a side process to PHP, someone i know does that
[20:10] chjj: node as a side-dish === bad
[20:10] Aikar: you dont HAVE to use node as your web server
[20:11] Aikar: not really
[20:11] brianc: japj: sorry...OF what mechanism do you speak? I don't wanna emit the event on another thread
[20:11] Aikar: its not as good as if your system was fully node, but it doesnt inherently make node bad :P
[20:11] chjj: when did i say it makes node bad? it makes you bad for not giving node more love
[20:11] Layke: Aikar,  yeah, what I was thinkign of was running node.js from say node.site.com:1337 and then having node power my notifications system. 
[20:12] Aikar: Layke: you can load node on a random port, then load the socket.io client on the php page and still use the client side JS
[20:12] Aikar: then interface with the same DB your php code uses
[20:12] Aikar: Layke: thats exactly what this site i know uses it for
[20:12] brianc: Layke: which database are you using?
[20:12] Aikar: real time notifications
[20:12] japj: brianc: node uses the eio library with a thread pool
[20:12] Layke: brianc,  mysql.
[20:12] Aikar: but their main site is PHP, well for a Flash based game
[20:12] Layke: Aikar,  That sounds like my exact requirement.
[20:13] stephank has joined the channel
[20:13] brianc: japj: I don't have control over the c++ libraries threads. It starts its own threads (because it's a bastard).  eio still works?
[20:13] japj: brianc: normally if you want to do asynchronous c++ code, it gets executed in on e of the eio threads and then when you are done you trigger the callback from the main js thread
[20:13] Aikar: so it seems for your use case it wouldnt give you much benefit to rewrite entire app stack, just tie in the portions that could take advantage of real time messaging
[20:14] japj: brianc: that should not be a problem I think, as long as you have a c++ callback function that gets called by your c++ library
[20:14] Aikar: then as you see fit replace existing parts as you get more comfortable with node and feel it would be better done in node
[20:14] brianc: japj: yeah this c++ library is a beast & does some non-blocking socket stuff on it's own and then triggers a c++ callback function in another thread. how now do I marshal the callback function back into node's thread?
[20:14] Layke: Aikar,  Yeah. That would be the plan I guess. A lot of people I know use node.js for powering their REST APIs
[20:15] Layke: Well a few people. I don't actually know that many people ^^
[20:15] brianc: japj: know of any examples of this on github I could look at? 
[20:15] japj: brianc: there are some async node examples yes, I'm trying to find a link now
[20:15] brianc: japj: you're so good to me
[20:15] Aikar: node can do alot of things well that is already done in other langs, so that if you havent done it already, then do it in node. but if youve done it already, you have to weigh the advantages of rewriting the system to node. if you have very little gain, a rewrite may not be worth it
[20:16] AphelionZ has joined the channel
[20:16] AphelionZ: can anybody help me out with a code review? 34 lines. I just want to make sure I'm doing this right http://pastie.org/2424200
[20:16] jetienne has joined the channel
[20:16] Aikar: i need to restart my browser, links take way too long to open
[20:16] Layke: And Aikar , I know javascript... so I know node.js ?
[20:17] vikstrous has joined the channel
[20:17] Aikar: AphelionZ: first off, fix whitespace please :P
[20:17] Aikar: indentation isnt consistent
[20:17] japj: brianc: I use similar techniques in https://github.com/japj/node-sdlmixer/blob/master/src/node-sdlmixer.cc, but there are other examples aswell. https://github.com/isaacs/node-async-simple
[20:17] Aphelion: <_<
[20:17] TheJH: Aphelion, just use .forEach to iterate through arrays
[20:17] Aphelion: i think that was a miss
[20:17] Aikar: Layke: you know the syntax, yes. but theres still environment specific stuff to know in node, and knowing the libs avail to you and how to use them
[20:17] japj: brianc: unfortunately there has been a big discussion about async javascript code on the mailinglist, so that is polluting my search results
[20:17] AphelionZ: woah there's an aphelion in here
[20:17] AphelionZ: i never thought I'd meet you...
[20:18] Aphelion: why hello there
[20:18] Aikar: O.o
[20:18] AphelionZ: :D
[20:18] liar has joined the channel
[20:18] AphelionZ: Aikar:  hang tight i'll fix it
[20:18] Aikar: AphelionZ: * fix whitespace please :P
[20:18] chjj: AphelionZ: you should abstract it out a bit more, for example, write a separate `request` function, that buffers a response and passes the data to a callback
[20:18] CoverSlide: AphelionZ is from planet Vegeta?
[20:18] mbrochh has left the channel
[20:18] Aphelion: AphelionZ: congratulations, you've met the person who sniped your first choice of a nick.
[20:18] Aphelion: AphelionZ: also, ah-ha
[20:18] TheJH: :D
[20:18] AphelionZ: nah i just threw a Z on there because this dude took my nick apparently
[20:18] Aphelion: lol
[20:18] AphelionZ: did you take it from AIM in like 1998 too?
[20:19] Aphelion: no
[20:19] TheJH: rotfl
[20:19] TheJH: that would have been fun :(
[20:19] Aikar: AphelionZ: apart from that it doesnt look bad to me, and .forEach is a TAD slower than for(;;) so id leave it as for(;;) since youve already written it that way
[20:19] brianc: japj: you made my day. thank you.
[20:20] Aphelion: AphelionZ: only my IRC client notifies me every time someone talks to you now because it prefix matches for notification. >_<
[20:20] AphelionZ: well i guess we're even then
[20:20] ttilley: heh
[20:20] Aikar: but then again, JSON use to be slower than msgpack, and google fixed that... (JSON is now faster than msgpack), so they may have finally optimized .forEach
[20:20] fairwinds has joined the channel
[20:20] AphelionZ: interesting
[20:20] TheJH: AphelionZ, I'd leave away those semicolons :D
[20:20] japj: brianc: hope it helps, I know it is difficult to get clear information on writing async c++ modules for node
[20:20] AphelionZ: haha im from the church of Crockford
[20:20] fwg: ugh
[20:21] AphelionZ: semicolons all the time (plus i need to fix that ==)
[20:21] Aikar: i sometimes leave semicolons off, but i really cant stop putting them, as im a PHP dev for day job, thatll bite me too much if i indentionally dont put them :P
[20:21] chjj: step 1: unlearn the crockford nonsense, step 2: profit
[20:21] Aikar: intentionally*
[20:21] japj: brianc: note though that some of the api is probably going to change in node 0.5/0.6 since they're making things more crossplatform
[20:21] walt has joined the channel
[20:21] walt: haha, I like the bot in #nodejs :)
[20:21] chjj: who? catb0t?
[20:21] chjj: where is he
[20:22] Aikar: AphelionZ: maybe put a try catch and result checking on the JSON.parse for line 19
[20:22] catb0t: who will be possible in my application and run npm link connect then npm uses it much the last element off of the summer will be in fact theirs fault
[20:22] chjj: there he is
[20:22] CoverSlide: .. 'Where is catbot'
[20:22] catb0t: 'Where is catbot'
[20:22] japj: brianc: if you have a specific issue you can also send an email to the mailinglist
[20:22] AphelionZ: ahh very nice :) thank you
[20:22] walt: chjj: try joining #nodejs
[20:22] japj: !help
[20:22] AphelionZ: as far as you guys can tell there's nothing completely ridiculous about that code though?
[20:22] japj: nope, catbot has no help
[20:22] CoverSlide: `help
[20:22] gbot2: Paste the Javascript (only the portions relevant to your problem) in a pastebin (see `paste), and tell us what you expected, what else you tried and what actually happened. You might also consider reading: http://diveintomark.org/archives/2003/05/05/why_we_wont_help_you/
[20:22] CoverSlide: wtf
[20:22] Aikar: AphelionZ: correct
[20:23] xerox: can one setup a sort of "local npm repository" to put one's projects in it, so that they are easily installed inside ./node_modules/ of new projects that need them, without publishing to the public npm repo?
[20:23] CoverSlide: we stole #javascript 's old and crusty bot?
[20:23] walt: anyway, I am going to write a small server for a flash application. It's just a basic server-client setup, not much different than chat server in design. Is node.js suitable for this?
[20:23] Aikar: AphelionZ: other than result checking
[20:23] ecin has joined the channel
[20:23] Aikar: AphelionZ: like verifying you got a result from the db, then verify the data from twitter is valid
[20:23] AphelionZ: yeah i'll definitely add that. Thank you Aikar and thank you chjj
[20:24] fairwinds: hi. in express app.post('/something/:id', ... and .post('/something', ... are going to same route. What can I do to differentiate
[20:24] CoverSlide: fucking fire drill
[20:25] mraleph has joined the channel
[20:26] lampe has joined the channel
[20:27] tomtomaso has joined the channel
[20:28] xeodox has joined the channel
[20:28] jakehow_ has joined the channel
[20:28] jakehow has joined the channel
[20:29] xeodox: How do I Check what version my node.js is?
[20:29] DrMcKay: umm... is CoverSlide running away now?
[20:29] DrMcKay: xeodox: node --version
[20:29] xeodox: v0.5.0-pre …is this good?
[20:29] DrMcKay: xeodox: update
[20:29] xeodox: why?
[20:29] TheJH: DrMcKay, if his connection times out, we know it was a real fire :D
[20:29] DrMcKay: TheJH: :D
[20:30] BillyBreen has joined the channel
[20:30] DrMcKay: xeodox: it's an old version
[20:30] DrMcKay: xeodox: newest one is v0.5.4
[20:30] xeodox: DrMcKay: should I update to 5.4 unstable? or 4.11 stable?
[20:30] xeodox: it's unstable though
[20:30] fairwinds: fairwinds: sorry for noise. It is all good.
[20:31] DrMcKay: xeodox: are you a developer or will you be running it in the production?
[20:31] xeodox: prod
[20:31] DrMcKay: then 0.4.11
[20:31] jvdev has joined the channel
[20:32] postwait has joined the channel
[20:32] rfay has joined the channel
[20:33] ckknight has joined the channel
[20:33] vikstrous has joined the channel
[20:33] sandropadin has joined the channel
[20:34] tylerstalder has joined the channel
[20:34] sandropadin has left the channel
[20:35] mikedeboer has joined the channel
[20:36] mcluskydodallas has joined the channel
[20:36] RevoOf has joined the channel
[20:36] admc1 has joined the channel
[20:37] DrMcKay: CoverSlide: ping?
[20:37] CoverSlide: DrMcKay: pong!
[20:37] robotmay has joined the channel
[20:37] DrMcKay: I was actually wondering if are you alive
[20:37] CoverSlide: just a fire drill
[20:37] Poetro has joined the channel
[20:38] hellp has joined the channel
[20:38] DrMcKay: well, *real* programmers use laptops then
[20:38] TheJH: DrMcKay, :D
[20:38] DrMcKay: gosh, I just visualized it
[20:38] chrisumbel has joined the channel
[20:38] CoverSlide: well im running putty > cygwin > ssh > my laptop > irssi
[20:38] TheJH: running down the stairs with the laptop in his hands
[20:38] arthurdebert has joined the channel
[20:38] CoverSlide: does that count?
[20:39] DrMcKay: CoverSlide: I would say so
[20:39] TheJH: but still, writing it in IRC before running is crazy enough :D
[20:39] DrMcKay: CoverSlide: wait... putty? you're running windows?
[20:39] DrMcKay: TheJH: I would :D
[20:39] DrMcKay: TheJH: always better to let people know than to randomly timeout
[20:39] chrisumbel_ has joined the channel
[20:39] CoverSlide: It's my workstation here
[20:39] RevoOf has left the channel
[20:40] DrMcKay: CoverSlide: I feel sorry for you :(
[20:40] CoverSlide: I need it cause we're an ASP.net shop
[20:40] CoverSlide: but it's a 32" screen
[20:40] CoverSlide: so that's kinda awesome
[20:40] DrMcKay: oh, that may be good
[20:40] DrMcKay: I have a dualhead at home
[20:41] CoverSlide: but I'm leaving in 2 days anyway
[20:41] DrMcKay: CoverSlide: new job?
[20:41] CoverSlide: yup
[20:41] DrMcKay: CoverSlide: node?
[20:41] CoverSlide: no, unfortunately
[20:41] CIA-65: node: 03Ben Noordhuis 07master * r2513538 10/ Makefile : test: add dgram tests to test-uv list (+8 more commits...) - http://git.io/IwRNkg
[20:42] DrMcKay: one of my monitors is 24" and second one is 22"
[20:42] bnoordhuis: ^ this the big one, guys
[20:42] bnoordhuis: *this is
[20:42] DrMcKay: CoverSlide: but ASP, seriously?
[20:42] DrMcKay: btw, you can do ASP on Linux as well
[20:42] DrMcKay: ACTION git pulls
[20:42] tmedema has joined the channel
[20:42] tmedema: How does one check if a given "file" is a folder with fs.readdir?
[20:43] charleyd has joined the channel
[20:43] CoverSlide: I am aware, but they have their own library that doesn't work on mono
[20:43] ckknight has joined the channel
[20:43] CIA-65: node: 03Ryan Dahl 07master * r2876141 10/ lib/dns_uv.js : dns_uv: add localhost hack for windows - http://git.io/jM4dGw
[20:44] DrMcKay: ACTION git pulls again
[20:44] DrMcKay: oh, no, it's for Windows
[20:44] CoverSlide: ACTION git resets
[20:45] DrMcKay: CoverSlide: :D
[20:45] DrMcKay: shit, dgram test still fails for me
[20:46] mehtryx has left the channel
[20:46] DrMcKay: bnoordhuis: test-dgram-multicast timeouts, what to do?
[20:46] bnoordhuis: DrMcKay: with what version of node and with or without --use-uv?
[20:47] DrMcKay: bnoordhuis: v0.5.5-pre, without --use-uv
[20:47] DrMcKay: bnoordhuis: but I'm gonna install master, give me a sec
[20:47] bnoordhuis: DrMcKay: wfm with master
[20:48] dshaw_: killer
[20:49] DrMcKay: bnoordhuis: yes, it still timeouts
[20:49] DrMcKay: (without --use-uv)
[20:49] tomtomaso has joined the channel
[20:49] DrMcKay: alias node='node --use-uv' is enough, or do tests do magic to environment?
[20:50] bnoordhuis: DrMcKay: if you do `make test-all` run it as `NODE_USE_UV=1 make test-all`
[20:51] DrMcKay: bnoordhuis: OK, give me a second
[20:52] xtianw: fairwinds: In what order do you have them assigned?
[20:53] topaxi has joined the channel
[20:53] DrMcKay: bnoordhuis: is it normal that it throws like shitload of errors with uv?
[20:53] kuebk^ has joined the channel
[20:54] bnoordhuis: DrMcKay: so far yes :)
[20:55] ryanfitz has joined the channel
[20:55] CarterL has left the channel
[20:56] DrMcKay: bnoordhuis: it doesn't timeout with uv
[20:56] DrMcKay: but it does without it
[20:57] walt has joined the channel
[20:58] bnoordhuis: DrMcKay: uv doesn't supprt multicast atm
[20:58] state has joined the channel
[20:59] DrMcKay: bnoordhuis: but it does timeout *without* uv
[20:59] bnoordhuis: DrMcKay: that's probably a problem with your local setup
[20:59] bnoordhuis: DrMcKay: multicast is a fickle beast
[21:00] DrMcKay: bnoordhuis: so `rm -rf --no-preserve-root /` will fix that?
[21:00] ceej: is there an easy way if using another language like php, to call a nodejs process and have it render then javascript and send it back?
[21:00] bnoordhuis: DrMcKay: kids these days with their --no-preserve-root
[21:01] DrMcKay: bnoordhuis: :). have you read classic Unix horror story?
[21:01] bnoordhuis: DrMcKay: i wrote one of the chapters
[21:02] DrMcKay: bnoordhuis: oh... wow.
[21:03] xerox: this could be interesting to node http://www.usenix.org/events/hotos03/tech/full_papers/vonbehren/vonbehren_html/index.html
[21:04] DrMcKay: ACTION goes to try rm -rf / on VM
[21:04] brunomartins has joined the channel
[21:04] fairwinds: xtianw: sorry am tired is all. I have  post(/something, followed by post(/something/:id and they work fine
[21:04] CoverSlide: seen it
[21:04] eee_c1 has joined the channel
[21:05] davidwalsh has joined the channel
[21:06] xtianw: fairwinds: Ok great
[21:07] TheJH: DrMcKay, there's a ubuntu rm -rf on youtube, I think
[21:08] japj: a professor at my school once accidently rm -rf'ed / as root on an HPUX machine
[21:08] DrMcKay: bnoordhuis: btw, which guy are you in this story?
[21:09] DrMcKay: japj: working under root account ftw
[21:09] DrMcKay: I'm almost sure bnoordhuis is the assembler guy
[21:09] japj: DrMcKay: needless to say, after the server was restored he didn't get the root password anymore ;)
[21:10] DrMcKay: japj: well, I would give him any password after that
[21:10] CoverSlide: ACTION is reminded of this: https://github.com/MrMEEE/bumblebee/commit/a047be85247755cdbe0acce6f1dafc8beb84f2ac << rm -rf on /usr dir
[21:10] ceej: anyone tried it before?  sending data/html to node from say ruby or php have it render the javascript and send it back?
[21:10] kaueraal has joined the channel
[21:10] DrMcKay: CoverSlide: I was sure someone is gonna mention that :D
[21:11] DrMcKay: ceej: it doesn't make sense
[21:11] DrMcKay: ceej: node should work as a whole web server stack, not as it's part being fired from PHP which is fired from Apache
[21:12] bnoordhuis: DrMcKay: i was half kidding - but i've been using linux since 2.0.27 and made nearly all possible mistakes in those 15 years
[21:12] bnoordhuis: DrMcKay: including `rm -rf / tmp/foo` (notice the space)
[21:12] DrMcKay: bnoordhuis: oh... well, same happened with bumblebee
[21:13] DrMcKay: and I forgot about metaphorical meaning of "to write a chapter of a story"
[21:13] mynyml has joined the channel
[21:13] jvdev has joined the channel
[21:13] Nuck: Wow
[21:13] Nuck: Node Knockout's prizes are fucking AWESOME
[21:14] TheJH: haha: https://a248.e.akamai.net/assets.github.com/img/65b2e9f694b2df66f4038b9f930ebf32b8c1d7a3/687474703a2f2f66696c65732e6d796f706572612e636f6d2f416e746f6e4469617a2f636f6d6d656e74732f6e6f742d616c776179732d6261636b75702e6a7067
[21:14] sirdancealot has joined the channel
[21:14] walt has joined the channel
[21:14] Nuck: OH DEAR GOT WHAT THE FUCK THAT URL D:
[21:14] trotter has joined the channel
[21:14] DrMcKay: TheJH: it happens too often ;)
[21:15] DrMcKay: well, I keep 5 replicas of my important directories around
[21:15] DrMcKay: Unison <3
[21:15] Layke: \eho 
[21:15] Layke: Who is that guy?
[21:16] context: touchpad is expensive on ebay :/
[21:16] DrMcKay: Layke: most interesting guy in the world
[21:16] Layke: He's not familair to me DrMcKay 
[21:16] TheJH: Layke, which guy?
[21:16] DrMcKay: context: what were you expecting?
[21:16] context: drmckay: cheaper
[21:17] Layke: TheJH,  do I need to paste that URL again? It should have taken up your entire IRC window?
[21:17] CIA-65: node: 03Ryan Dahl 07master * r52a40e0 10/ (src/node.cc test/simple/test-executable-path.js): Add process.features.debug; fixes simple/test-executable-path.js - http://git.io/1rIFbQ
[21:17] Layke: https://a248.e.akamai.net/assets.github.com/img/65b2e9f694b2df66f4038b9f930ebf32b8c1d7a3/687474703a2f2f66696c65732e6d796f706572612e636f6d2f416e746f6e4469617a2f636f6d6d656e74732f6e6f742d616c776179732d6261636b75702e6a7067
[21:17] DrMcKay: they should say WebOS is going to be back
[21:17] TheJH: Layke, :D
[21:17] DrMcKay: and do it like with Duke Nukem
[21:17] Layke: lol @ You were the OP. I misssed that.
[21:17] vidi has joined the channel
[21:18] Layke: Does anyone use socket.io ?
[21:18] fwg: probably
[21:18] Layke: I don't actually know what my question is yet... I'd more like a discussion.
[21:18] context: now. do i want to buy a touchpad !
[21:18] TheJH: Layke, dunno who the guy on the photo is. but he's also on my favorite picture: https://bitly.com/n5pVWV
[21:18] Aikar: Layke: id say alot of ppl do :P im using it atm
[21:18] fwg: that has 2 typos :/
[21:18] bsstoner has left the channel
[21:18] PatF has joined the channel
[21:19] Layke: Okay Aikar , can I throw some more things at you..
[21:19] state: Nasty socket bug in the newest chrome though
[21:19] Layke: state: bring?
[21:19] Layke:  /s/bring/being
[21:19] Aikar: i dunno, i was about to head home :P
[21:19] state: Layke: bring?
[21:19] robertfw has joined the channel
[21:19] Layke: state: typo for being.
[21:19] state: Anyone running node as a daemon on debian?
[21:20] state: Layke: Oh: newest chrome doesn't implement websockets properly so it falls back to polling. It's fine for most things: but I was counting on that socket support
[21:20] softdrink: tjholowaychuk:  is there a good way to rip through a directory recursively and build a single css file out of the stylus files there?
[21:20] state: Layke: "properly" isn't the right way to put it. I think it's just a mistake. 
[21:20] ceej: DrMcKay: yee sorry, not much sleep and thinking out loud :)
[21:21] tjholowaychuk: softdrink you could add a make target
[21:21] tjholowaychuk: and then "cat $^ > style.css"
[21:21] DrMcKay: chjj: fair enough :)
[21:21] softdrink: ohsnap. i probably should have just used make for the other build stuff anyway.
[21:22] Layke: Completely OT.. anyone remmeber http://www.youtube.com/watch?v=sTJ7AzBIJoI from like 1999?
[21:22] CoverSlide: oh god
[21:22] CoverSlide: that was the most annoying thing
[21:22] Layke: I got bored yersday and rewrote the lyriucs... http://chrisacky.com/08/a-developers-lifestyle-song/
[21:22] CoverSlide: played the hell out
[21:22] Layke: rewrote the lyrics
[21:23] DrMcKay has joined the channel
[21:23] DrMcKay: that was fast
[21:23] CoverSlide: there's no sex in the champagne room?
[21:23] Layke: DrMcKay, it bodes well for me that speed impresses you.
[21:23] CoverSlide: ACTION stopped reading at "NetBeans"
[21:25] Layke: You have to be playing the Youtube video while readin it though ;)
[21:25] Nuck: Oh look, new CurlyBraceCast >_>
[21:26] softdrink: tjholowaychuk:  you might appreciate this: https://github.com/mbostock/d3/blob/master/Makefile
[21:26] tjholowaychuk: softdrink hmm
[21:26] tjholowaychuk: the listing is a little verbose but yeah :)
[21:26] tjholowaychuk: i dig it
[21:27] state: No debian daemons? https://gist.github.com/715255 is working well for me -- but I want to log the server output somewhere. 
[21:27] tjholowaychuk: $(shell find foo/*.js) would probably do it though
[21:27] tjholowaychuk: for some of those
[21:27] tjholowaychuk: make is sexy sometimes
[21:27] navaru has joined the channel
[21:27] chrisumbel has joined the channel
[21:28] greg__ has joined the channel
[21:28] navaru has left the channel
[21:28] chrisumbel_ has joined the channel
[21:29] CoverSlide: ACTION writes all his CGI apps in make
[21:31] fly-away has joined the channel
[21:32] bosphorus has joined the channel
[21:33] vizzord has joined the channel
[21:33] mrdoodles has joined the channel
[21:34] bosphorus has joined the channel
[21:34] hackband has joined the channel
[21:34] DrMcKay: CoverSlide: well, real programmers write them in machine code
[21:34] DrMcKay: or Brainfuck, whichever you prefer
[21:34] state: i write emails in machine code
[21:35] abjorn has joined the channel
[21:35] greg__ has joined the channel
[21:35] DrMcKay: state: well, each time I send email I write a program to send it for me
[21:35] DrMcKay: in machine code, of course
[21:35] hekkwan has joined the channel
[21:35] ckknight has joined the channel
[21:36] stephank has joined the channel
[21:36] Wizek has joined the channel
[21:37] dnyy has joined the channel
[21:37] ekryski1 has joined the channel
[21:38] tim_smart has joined the channel
[21:38] Layke: Okay, I'm stuck. I have my node server running. I have socket.io running. I want to be able to provide a way for all users to be able to receive notifications when they receive a new message. (Like Facebook, Like Google Plus etc). Not sure what questions I should be asking in order to make this happen... 
[21:39] TheJH: Layke, connect to socket.io in your client JS and listen for messages
[21:39] Nuck: DrMcKay: Pussy.  I write a raw socket client then directly communicate with the remote mailserver to send a mail.
[21:39] TheJH: Layke, have a callback in the browser that fires on incoming whatever-messages
[21:39] context: eh
[21:39] context: 'connect to socket.io, wait for message, notify user of new message when i receive one'
[21:40] TheJH: context, that's shorter, yes :)
[21:40] chrisumbel has joined the channel
[21:40] DrMcKay: Nuck: well, I use a multimeter to analyze network traffic. tcpdump is for pussies.
[21:40] Layke: TheJH: Suprisingly that is actually the bit that I already knew to do.. the bit that I am stuck at is how do I interface from node.js/socket.io so that I am checking for new messages. I don't understand how I can do this efficiently.
[21:40] chrisumbel has joined the channel
[21:41] context: layke: what !
[21:41] Nuck: DrMcKay: lol
[21:41] context: layke: you tell the server to send the client a new message notification
[21:41] mrdoodles: is anyone using mongoose ?
[21:41] context: mrdoodles: ive played with it
[21:42] context: layke: pretty sure 'sit and wait' is the most effecient you can get.
[21:42] TheJH: context, I think Layke wants to know how you can do userid->connection object or so
[21:42] Nuck: DrMcKay: I connect directly into the internet by peering with Tier 2 and using raw protocols and a small button.
[21:43] DrMcKay: Nuck: :D.
[21:43] CoverSlide: I use them to keep snakes out of my hut
[21:43] Nuck: DrMcKay :P
[21:43] Anton_: Nuck: i'm morseing all my seeding torrents
[21:43] Anton_: manually
[21:43] Layke: context: So, should I, from my serverApp.js be checking for new messages at regular intervals? I pasted this earlier, but this is my front end UI... http://chrisacky.com/images/notifications.png top left after the email... I want that number to refresh with how many messages I actually have,.
[21:43] DrMcKay: Anton_: :D
[21:43] Nuck: Anton_: When I'm feeling lazy I us IP-over-Carrier-pidgeon
[21:44] DrMcKay: Nuck: someone actually implemented this as a device driver, IIRC
[21:44] Nuck: DrMcKay: Probably.
[21:44] Anton_: :)
[21:44] Nuck: I remember seeing a video of IPCP
[21:44] context: layke: uhhh, why are you 'checking'
[21:44] context: layke: let socket.io/node handle the messages to begin with.
[21:44] Layke: context: I'm not. I haven't written a single line of code yet.
[21:44] jvdev has joined the channel
[21:45] Layke: I've just copied and pasted some demo and started node ot check everyhtin was working.
[21:45] context: layke: you dont 'check' you SEND the message using socket.io
[21:45] Layke: It is.. not I'm trying.
[21:45] context: socket.io GETS message
[21:45] context: you SEND message to other client
[21:45] context: layke: so just start writing code
[21:45] chrisumbel has joined the channel
[21:45] Nuck: DrMcKay: 418 I'M A TEAPOT
[21:45] context: make it better along the way
[21:46] context: or... write no code and spend a week writing down the perfect way to do it
[21:46] ckknight has joined the channel
[21:46] DrMcKay: Nuck: they did: http://en.wikipedia.org/wiki/IP_over_Avian_Carriers
[21:46] malletjo: Hello folks, with node-mysql whats the best way to insert "null" value without being escaped with "mysql.format" ? 
[21:46] context: drmckay: hahah i remember that
[21:46] DrMcKay: Nuck: 418 is even in node source :)
[21:46] Nuck: Really?
[21:46] context: malletjo: "field = NULL" ?
[21:47] Layke: Okay.  So, stepping back from everything... People send emails to users with my app. ie.. you can send an email to layke@myapp.com and my application will look at all emails received and look at the user, in this case "layke", then it will add the message to my mysql database... at what point can I involve socket.io in this process?
[21:47] Layke: ^^ context 
[21:47] Nuck: I can actually see Coffee Pot controllers being implemented seriously eventually lol
[21:47] DrMcKay: Nuck: yes :)
[21:47] DrMcKay: well, it would be interesting...
[21:47] context: layke: id use node, and query the db once every minute or something like that for new messages
[21:47] malletjo: context, well i use the format so my query is field = ? , field2= ? ... so when i use format , looks like it put \'null\' like a string 
[21:47] DrMcKay: at a company it would reduce latency when accessing a Coffee Pot
[21:48] context: layke: or have whatever is handling your email to begin with send a message to node a new message was received
[21:48] Nuck: Well, even just the controlling of coffee-pot brewing
[21:48] context: layke: or look at Haraka for handling email directly in node
[21:48] Nuck: I totally want a coffepot that I can mod to support HTCPCP
[21:48] Layke: context,  I can have what receives the mesage POST to node.
[21:48] Layke: I use sendGrid.
[21:48] context: layke: then do that... ?
[21:48] context: why check constantly when you can just sit and wait....
[21:48] Layke: Which can post to any URI.. then I can run the node code to broadcast the message?
[21:49] wojohowitz has joined the channel
[21:49] Layke: Yeah okay. 
[21:49] context: layke: why are you asking questions you already know the answer to
[21:49] DrMcKay: Nuck: you would have to make your own one
[21:49] Nuck: context: Have you dealt with Haraka before?
[21:49] DrMcKay: but still, worth it
[21:49] Layke: context,  I don't know the answers.
[21:49] Layke: context, I'm about 60 minutes into learning node.js
[21:49] tbranyen: woot
[21:49] CoverSlide: i know all the answers
[21:49] Layke: In fact I haven'\t started learning, just reading and asking questions.
[21:49] Nuck: DrMcKay: I would just mod out the control panel on a coffeepot and add a RESTful API to it.
[21:49] CoverSlide: except the right ones
[21:49] marlun: I'm having some problems with socket.io. I've never used it before so I tried the example on the page but I get an on the client side (chrome) that io is not defined.
[21:49] context: if you tell node about a new message, why would node not be able to do anything with this new found information?
[21:50] context: layke: best way to learn is to start playing
[21:50] Layke: And to start playing I need to learn the basics.. which would be the docs right? 
[21:50] DrMcKay: Nuck: sounds easy
[21:50] Layke: Where should I start to learn the basics?
[21:50] DrMcKay: ACTION goes to look for open source coffeepot
[21:50] isaacs: Layke: nah, just open your editor and bang on the keyboard a little
[21:51] Nuck: `POST http://coffeepot/coffee` - brew coffee
[21:51] wojohowitz: anybody working with express and a backbone client? what are you testing with?
[21:51] context: my first 4-6 hours of learning node, i had a small site running node/faye/jquery-mobile with another app here sending messages to node with a real time notification system of activity going on in the other app
[21:51] CoverSlide: No, I think we need a new protocol for this
[21:51] Nuck: `GET http://coffeepot/coffee` - check the status of coffee
[21:51] context: isaacs++
[21:51] v8bot_:  context has given a beer to isaacs. isaacs now has 2 beers.
[21:51] CoverSlide: coffeepot://192.168.10.4/brew
[21:52] Nuck: `POST http://coffepot/timer` - set a timer on it
[21:52] Nuck: CoverSlide: No, I'm being RESTful >:C
[21:52] isaacs: Nuck: why so POST happy?
[21:52] Nuck: The coffee is a resource
[21:52] gazumps has joined the channel
[21:52] Nuck: So POST changes the state of the coffe resource
[21:52] CoverSlide: wait, we need authentication
[21:52] Nuck: GET retrieves information on that state
[21:52] isaacs: Nuck: right, but it could be a PUT
[21:52] DrMcKay: Nuck: OAuth?
[21:52] isaacs: since you're setting the state
[21:52] CoverSlide: PUT would be better
[21:52] Nuck: isaacs: Ah true.
[21:52] Nuck: Okay, then, PUT it is.
[21:53] foxkid_ has joined the channel
[21:53] Nuck: CoverSlide: agreed, we should use HTTP Basic.
[21:53] Nuck: Over HTTPS, of course.
[21:53] isaacs: a POST should only be used if it's (a) not repeatable without additional side effects, (b) should never be cached, and (c) no other method is applicable
[21:53] CoverSlide: PUT https://richard:1234@coffepot/timer
[21:53] Nuck: isaacs: Ah true.
[21:53] Nuck: CoverSlide: Yush!
[21:53] isaacs: traditionally, POST usually (but not always) implies adding an entry to a list.
[21:53] Nuck: It should return JSON too.
[21:54] Nuck: If there is no coffee, it should return false.
[21:54] isaacs: so you'd POST /comments -d "comment", but you'd PUT /comment/comment-id -d "comment"
[21:54] jetienne: http://twitter.com/#!/jerome_etienne/status/106483849374076928/photo/1/large webgl is fun :)
[21:54] Nuck: If there is coffee, it should return the percentage filled
[21:54] Nuck: There should also be a GET http://coffeepot/info, which will return information like the capacity of the coffeepot.
[21:54] DrMcKay: GET https://coffeepot/status is a must
[21:55] Nuck: DrMcKay: Agreed.
[21:55] japj: does it include the sugar and milk percentages?
[21:55] DrMcKay: japj: yeah, sure
[21:55] Nuck: japj: WTF coffeepot has sugar and milk built in?
[21:55] Nuck: That's the Milk API
[21:55] isaacs: Nuck: yeah, totally
[21:55] Nuck: And sugar API
[21:55] DrMcKay: Nuck: there are such, I think
[21:55] isaacs: you should POST to add sugar and milk to your coffee
[21:55] rsdio: ihnah, but this reminds me of http://www.ietf.org/rfc/rfc2324.txt
[21:55] DrMcKay: isaacs: true
[21:55] isaacs: since that's not repeatable without side effects.
[21:55] Nuck: Fair enough
[21:55] DrMcKay: isaacs: but we need coffee id then
[21:56] dominictarr has joined the channel
[21:56] DrMcKay: I guess PUT should return it
[21:56] isaacs: PUT /my-cup -d "coffee", returns a "cup-id"
[21:56] isaacs: or coffee-id
[21:56] DrMcKay: yeah, sound good
[21:56] isaacs: and then POST /order/coffee-id -d "sugar=1&milk=0"
[21:56] Nuck: Status should return {"state": "brewing", "done": 0.5}
[21:56] Nuck: If it's halfway through brewing
[21:57] context: you should have a GET /status
[21:57] isaacs: POSTing sugar=1 multiple times will add multiple sugars
[21:57] Nuck: context: Already done.
[21:57] context: cup-id ? so you know what cup is yours ?
[21:57] Nuck: isaacs: Aye.
[21:57] DrMcKay: also, add callback parameter, so that people can use it from browser with AJAX
[21:57] isaacs: PUT sugar=1 should return a 405 if it's already added more than 1 sugar
[21:57] Nuck: GET /cup?
[21:58] context: whats the http status code for 'Brewing'
[21:58] isaacs: oh, actually, that's not quite right.
[21:58] DrMcKay: context: and suddenly HTTP seems so incomplete for me
[21:58] isaacs: 405 should only be used if the method is not allowed for a given *resource*, but shouldn't change
[21:58] CoverSlide: Is the Host: header supported?
[21:59] vikstrous has joined the channel
[21:59] DrMcKay: isaacs: 400 maybe?
[21:59] Guest87054 has joined the channel
[22:00] isaacs: DrMcKay: no, it should be a 409
[22:00] isaacs: pretty much any PUT failure should be a 409
[22:00] isaacs: since that means "you can't PUT that thing"
[22:00] DrMcKay: isaacs: ah, true
[22:00] isaacs: "The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request."
[22:00] Nuck: I should implement this API on Node.js :D
[22:00] isaacs: ACTION <3 2616
[22:00] DrMcKay: "I have a headache" == 409, then
[22:00] isaacs: Nuck: yes, please.
[22:00] isaacs: Nuck: also, on a coffeepot
[22:00] isaacs: :)
[22:01] jakel has joined the channel
[22:01] Nuck: isaacs: As soon as we get Linux on coffeepots, definitely :D
[22:01] Nuck: Node on a coffeepot would be badass
[22:01] isaacs: Nuck: nah, you should write a little interface thingie to an arduino
[22:01] Nuck: arduino?
[22:01] isaacs: Nuck: or pick up a webos device, and have that drive it
[22:01] isaacs: since it's got node already
[22:01] sfoster has joined the channel
[22:01] isaacs: arduinos are little programmable chipset thingies
[22:01] isaacs: they don't run node, though
[22:02] CoverSlide: someone should work on that
[22:02] xerox: isaacs: what's the npm help to read to learn how to manage one's own private packages in order to be able to install/update them in new private projects
[22:02] CoverSlide: then our coffeepot dreams can come true
[22:02] Nuck: ACTION is actually gonna do this
[22:02] isaacs: xerox: npm help registry maybe?
[22:02] DrMcKay: well, I have an ARM processor lying around in my closet
[22:02] Nuck: No arduino yet, but I'll build an API using Express :D
[22:02] DrMcKay: but I'm not sure if can it even run Linux
[22:02] isaacs: Nuck: restify, man
[22:02] isaacs: Nuck: it's built for this task.
[22:03] igl has joined the channel
[22:03] isaacs: Nuck: also, comes with thing you can use to write a little coffeepot api client easily
[22:03] Yoric has joined the channel
[22:03] Nuck: Can I get another no.de yet?
[22:03] Nuck: Or is it still one-per-person?
[22:03] isaacs: it's one per person
[22:03] CoverSlide: or integrate one of these babies with node: http://www.raspberrypi.org/
[22:04] CoverSlide: and your `pot
[22:04] DrMcKay: I wonder if this can run Linux: http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1227128468
[22:05] DrMcKay: but node compilation would take ages
[22:05] CoverSlide: 72Mhz
[22:07] skampler has joined the channel
[22:08] vikstrous has joined the channel
[22:08] Nuck: isaacs: But wait, RESTify lacks sessions, right?
[22:08] Nuck: So I'll hafta do it all myself
[22:08] isaacs: Nuck: what do you need sessions for?
[22:08] isaacs: i thought this was restful
[22:08] Nuck: isaacs: For cups!
[22:09] Nuck: lol
[22:09] CoverSlide: store ids in-process
[22:09] Nuck: I think I'll use Redis as a backend to store the coffee and cups.
[22:09] CoverSlide: no need for sessions
[22:09] Nuck: Fair enough
[22:09] isaacs: Nuck: you create a cup id, and then that gets passed back as part of the request
[22:09] Nuck: That's easier.
[22:09] isaacs: the API should be pot-agnostic
[22:09] isaacs: :)
[22:09] isaacs: seriously, writing the restful api is the easy part.
[22:09] isaacs: this project always fails when it comes time to interface with an actual coffee pot
[22:10] isaacs: no one ever does that part
[22:10] jaequery has joined the channel
[22:10] Nuck: If somebody can write me a C module to interface with an Arduino in a coffepot, I will do it.
[22:10] isaacs: Nuck: you should do that bit.
[22:10] isaacs: Nuck: if you can do that, the rest is trivial
[22:10] DrMcKay: Nuck: it's easy
[22:10] Nuck: I don't do C :P
[22:10] max_dev has joined the channel
[22:10] hellp has joined the channel
[22:11] DrMcKay: I do, together with microcontrollers
[22:11] jvdev has joined the channel
[22:11] CoverSlide: Every programmer needs to do C, at least a little bit
[22:11] Nuck: Not I.
[22:11] AvianFlu: CoverSlide++
[22:11] v8bot_:  AvianFlu has given a beer to CoverSlide. CoverSlide now has 2 beers.
[22:11] DrMcKay: I think that Arduino isn't even neccesary
[22:11] isaacs: yeah, you need C for much the same reason that you need to know JavaScript
[22:11] hij1nx has joined the channel
[22:11] isaacs: not everyone has to be a C *expert*, but you should be able to write a little hello world thing and interface wtih an API
[22:11] DrMcKay: isaacs: very true
[22:11] AvianFlu: data types too, and some basic "what's a pointer"
[22:11] isaacs: C is always there.  it is inescapable
[22:11] Nuck: I never learned C.
[22:12] isaacs: Nuck: no time like the present!!
[22:12] Nuck: lolno
[22:12] DrMcKay: but well, knowing C deeply gives you great insight on how things work
[22:12] Nuck: Plus this would require knowledge of Arduino and V8.
[22:12] isaacs: it's really not as hard as it seems
[22:12] smathy: I think C is a good learning exercise, but I think there's a whole world of programmers who will never need it.
[22:12] DrMcKay: we would just need to dissassemble front panel
[22:12] isaacs: smathy: there are a whole world of drivers who will never pump their own gas.  you should still know how to.
[22:13] garrensmith: c is also quite fun :-)
[22:13] Nuck: isaacs: We call them Oregonisms.
[22:13] jetienne: this is only a language
[22:13] jetienne: nothing special or magical about it
[22:13] isaacs: yeah
[22:13] isaacs: jetienne++
[22:13] v8bot_:  isaacs has given a beer to jetienne. jetienne now has 1 beers.
[22:13] smathy: isaacs… I think it's a different "should" in those cases.  I think plenty of programmers can steer their careers in a way that they'll never need to know it.
[22:13] mike5w3c_ has joined the channel
[22:14] smathy: isaacs… ...and...  there are people who will never pump their own gas?
[22:14] isaacs: smathy: yes.
[22:14] isaacs: smathy: steering your career in a way that you'll never benefit from knowing C is basically saying that you'll steer your career away from being a programmer.
[22:14] DrMcKay: isaacs: no way. how's that even remotely possible?
[22:14] isaacs: which is fine.
[22:14] isaacs: DrMcKay: take taxis
[22:14] CoverSlide: yes it's possible to never know or need to know C, but the value that understanding how things work at the C level is invaluable
[22:14] DrMcKay: isaacs: oh, true.
[22:14] DrMcKay: CoverSlide++
[22:14] v8bot_:  DrMcKay has given a beer to CoverSlide. CoverSlide now has 1 beers.
[22:14] isaacs: brb.  please continue.
[22:15] smathy: isaacs… I disagree.  There are plenty of programming tasks out there without having to know C.
[22:15] CoverSlide: `value is invaluable` ... i just noticed that
[22:15] Country has joined the channel
[22:15] tomh: tomh++
[22:15] v8bot_: tomh: Don't cheat!  You can't give a beer to yourself.
[22:15] tomh: damn
[22:15] smathy: CoverSlide… completely agree, as I led off with - if nothing else, C is a great learning exercise.
[22:15] jetienne: so no comment on my superbe node.js logo in webgl ???
[22:15] vikstrous has joined the channel
[22:15] mcluskyd_ has joined the channel
[22:15] DrMcKay: http://gadgetscrunch.com/usb-desktop-coffee-maker-personal-coffee-maker-desk/
[22:15] CoverSlide: ACTION pets jetienne
[22:15] isaacs[away]: jetienne: post it on the wiki!
[22:15] jetienne: i mean it is better that the Xth version of the langauge war :)
[22:15] DrMcKay: jetienne: it's nice :)
[22:15] CoverSlide: better yet, open source it
[22:15] softdrink: tjholowaychuk:  $< gives me the first prerequisite… is there a good way to get the *second*?
[22:16] jetienne: thanks111 i needed this :)
[22:16] DrMcKay: CoverSlide: it's js...
[22:16] jetienne: isaacs[away]: im doing a demo for knockout :)
[22:16] smathy: My professors were saying the same about assembler when I was learning C.
[22:16] skampler: c is easy, so why not learn it?
[22:16] DrMcKay: jetienne: but, yeah, make it a gh repo
[22:16] CoverSlide: well where's the url? I though he only sent an image
[22:17] sechrist has joined the channel
[22:17] DrMcKay: but seriously, there are some things that sane people write only in C
[22:17] jetienne: DrMcKay: 
[22:17] jetienne: DrMcKay: it is already let me find it
[22:17] tomtomaso has joined the channel
[22:17] DrMcKay: and there are things which can't be written in anything else
[22:17] sechrist: err
[22:17] sechrist: I was with you until your second sentence
[22:18] DrMcKay: sechrist: ever tried embeeded programming?
[22:18] sechrist: pretty sure whatever speed advantages you get in c can be done in machine code
[22:18] sechrist: but i'm just nitpicking
[22:18] jetienne: DrMcKay: https://github.com/jeromeetienne/learningthreejs.com/tree/master/source/data/lets-write-something/nodeLogo but the code isnt cleaned for external use 
[22:18] DrMcKay: sechrist: oh, true
[22:18] walt: is the discussion on making a motorized coffee thing with nodejs interface? I'm in
[22:18] sechrist: it's usually hard to beat gcc unless you have a hot loop somewhere and it's just being dumb
[22:18] walt: I have some microcontrollers lying around at home
[22:18] DrMcKay: walt: yes
[22:18] chrisumbel has joined the channel
[22:19] Nuck: I'm gonna build a couple modules, namely cup and pot modules.
[22:19] DrMcKay: walt: ARM, AVR?
[22:19] walt: DrMcKay: PIC
[22:19] chrisumbel has joined the channel
[22:19] DrMcKay: walt: oh, I never liked them
[22:19] walt: well, it's what I have. I don't care much
[22:19] walt: it's all the same in most ways
[22:19] skampler: nice to see Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0) finally being put to use
[22:19] DrMcKay: walt: true :)
[22:20] sechrist: I love HTCPCP/1.0
[22:20] sechrist: I'm about to get a coffeemate that supports 1.1!
[22:20] Nuck: Nah fuck HTCPCP
[22:20] DrMcKay: PCP?
[22:20] walt: I can get some CPLD's from school too
[22:20] Nuck: We're just doing a RESTful api
[22:20] walt: if I want
[22:20] DrMcKay: I didn't like it really :<
[22:20] sechrist: HCWS = Hot Coffee Web Sockets
[22:20] Nuck: Because HTCPCP lacks too many functions
[22:20] micheil: what's this?
[22:21] walt: so, what's the major idea? What does the machine do?
[22:21] sechrist: with HTCPCP, you can do MORE than get/post/put and delete!
[22:21] DrMcKay: I think we can go for TCP/HCTP
[22:21] micheil: hangon, is this the coffee pot protocol over websockets?
[22:21] sechrist: POUR /floor1/livingroom?type=folgers&where=inyourcup
[22:21] Nuck: sechrist: You PUT /coffee
[22:21] parshap has joined the channel
[22:21] sechrist: no you POUR it
[22:21] walt: I think it should use OSC
[22:21] CoverSlide: last 3 days at this job, still haven't done a bit of work all week. And my bosses are too dumb / scared to say anything.
[22:21] Nuck: PUT creates coffee
[22:21] Nuck: It starts it brewing.
[22:21] CoverSlide: Initimidate authority, that's my motto
[22:21] sechrist: fuck this, my coffeepot will just have a dnode api
[22:22] CIA-65: node: 03Ben Noordhuis 07master * raccc34c 10/ test/simple/test-eval.js : 
[22:22] CIA-65: node: test: fix simple/test-eval
[22:22] CIA-65: node: Test expects output of console.error(process.argv) to be spread out
[22:22] CIA-65: node: over several lines but if /path/to/node is short, it stays on a single line. - http://git.io/1Le0Xw
[22:22] visnup: Nuck: thanks (about the nko prizes)
[22:22] CoverSlide: If your boss isn't scared of you, you might as well be unemployed
[22:22] visnup: Nuck: I was worried they were underwhelming
[22:22] DrMcKay: CoverSlide: well, it's your right as a programmer to purge their servers
[22:22] walt: here's the thing. Controlling the coffee pot is not really the issue. What you want is a way of getting the coffee from the pot to your hand.
[22:22] walt: solve that one.
[22:22] sechrist: CoverSlide: I've heard weenies that get wrapped up in corporate life tell me that "Your boss should never think that you're smarter than him"
[22:22] sechrist: which is complete bs
[22:22] DrMcKay: walt: robots, I build those
[22:22] sechrist: no wonder they never got their promotions
[22:22] Nuck: I'm building Pot and Cup modules, and then I'll be making a RESTful API
[22:22] micheil: nice
[22:22] Nuck: You can apply it over any protocol you want.
[22:23] sechrist: Oh wait.. Nuck, you're actually messing with a coffee pot?
[22:23] micheil: Nuck: open source them, and I'll show you something awesome.
[22:23] walt: DrMcKay: right. So what we really want is a robot running a nodejs service, communicating with a coffee pot(running another nodejs service accessible only from the robot).
[22:23] Nuck: micheil: I'm gonna :D
[22:23] walt: and we interface with the robot
[22:23] DrMcKay: walt: yes :D
[22:23] micheil: we really need something to communicate to Phidgetsbc boards
[22:24] Nuck: sechrist: No, I'm building a Pot and cup emulation myself, but it can be modified to fit anything :B
[22:24] Nuck: Build a C module and I will do it.
[22:24] micheil: (they are computer boards like arduino, but but for event based applications, like sensors and shit)
[22:24] DrMcKay: btw, do humans have a restful API?
[22:24] sechrist: yeah
[22:24] DrMcKay: I mean, only method I know is PUT
[22:24] micheil: DrMcKay: no, humans' are too screwy, they'd always return 500 errors
[22:24] DrMcKay: and works for half of population
[22:24] Nuck: Quick, come up with a name for it.
[22:24] walt: DrMcKay: actually, we want a cluster of robots, communicating over a third internal protocol only accessible by robots, and we interface with the cluster from a centralized server. The robots determine together who is closest to the request, and handles it.
[22:24] Nuck: ACTION is making a repo
[22:24] sechrist: EAT SLEEP FUCK, are the keywords
[22:25] Nuck: CoffeeScript :D
[22:25] Nuck: lol
[22:25] DrMcKay: walt: actually, we need skynet
[22:25] walt: DrMcKay: there are of course a cluster of coffee machines also, and all robots can talk to all coffee machines
[22:25] DrMcKay: Nuck: lol :D
[22:25] sechrist: can you define the coffee flavors in a coffeescript?
[22:25] micheil: CoffeePipe or something
[22:25] walt: DrMcKay: yes we do. 
[22:25] sechrist: drip drip
[22:25] sechrist: coffeescript
[22:25] Nuck: lol
[22:25] Nuck: Just to annoy people, I'm gonna do that.
[22:25] DrMcKay: walt: but we put them in the cloud later?
[22:25] sechrist: micheil: what is special about that board, versus other arm boards?
[22:26] walt: DrMcKay: yes, we are of course running our central service in the cloud
[22:26] CoverSlide: Node Cloud CoffeePot
[22:26] CoverSlide: like Google Cloud Print
[22:26] CoverSlide: but with coffee
[22:26] DrMcKay: nodejitsu can host us
[22:27] walt: when all this is done, any programmer can be anywhere in the world, and have coffee delivered using a simple http request
[22:27] walt: it will be the epitome of humanity
[22:27] sechrist: what about espresso?
[22:27] sechrist: and can I whitelabel it with the starbucks logo?
[22:27] gazumps has joined the channel
[22:27] walt: sechrist: that's in Node Cloud CoffeePot 2.0
[22:28] sechrist: Ahhhhhh
[22:28] micheil: sechrist: all the data on it is evented
[22:28] micheil: so it'll notify you of changes
[22:28] DrMcKay: sechrist: you can have robot walking after you with a cup in his hand!
[22:28] sechrist: socket.io caffeine party
[22:28] micheil: fits really well with the node.js style
[22:28] Nuck: Named it CoffeeScript.
[22:28] Nuck: https://github.com/NuckChorris/CoffeeScript
[22:28] SubStack: sechrist: dnode is great for that because brewing coffee takes a while
[22:28] micheil: socket.io can get out of my coffee thanks.
[22:28] DrMcKay: Nuck: URL :D
[22:28] Nuck: :D
[22:28] Nuck: I'm gonna start working shortly.
[22:28] micheil: it'd just add a bad taste and too many additives
[22:28] sechrist: can I hook.io all of my coffeepots into my brain.js module?
[22:29] Nuck: Hope to have it done within a couple days, I'll shove it on no.de (even if it means taking out my current no.de project)
[22:29] CoverSlide: of course!
[22:29] sechrist: so that I can think about brewing
[22:29] SubStack: just pot.brew(function (err) { if (err) { console.error(err) } else { console.log('coffee is ready!') } })
[22:29] DrMcKay: sechrist: brain.js is not yet supported I think
[22:29] sechrist: and it starts brewing
[22:29] sechrist: ah
[22:29] sechrist: ok
[22:29] joshthecoder: kcups.js makes brewing coffee fast!
[22:29] joshthecoder: ;)
[22:29] walt: after the services is deployed, I will write a coffee->chocolate converter, and then I'll be happy
[22:29] sechrist: yeah so since there's actual technology to manipulate software with thoughts, I've been curious how to get one working so I can think about javascript events.. and they happen
[22:29] SubStack: yeah if you ran a coffee shop you could use hook.io to glue all your pots together into a coffee network
[22:29] sechrist: hahha
[22:29] gartenst_ has joined the channel
[22:30] DrMcKay: joshthecoder: we tried that, but it isn't compatible with Arduino boards :(
[22:30] SubStack: shit I should buy all the parts to do this
[22:30] SubStack: I've built far less complicated circuitry
[22:31] Nuck: SubStack: I promise I'm serious about this, I will write a RESTful Coffeepot API
[22:31] CStumph has joined the channel
[22:31] DrMcKay: SubStack: it's seriously easy to hook up to coffee pot front panel
[22:31] cconstantine: is there a stock/canonical implemention of a heap for node?
[22:31] SubStack: pfft
[22:31] sechrist: SubStack: don't do that
[22:31] joshthecoder: DrMcKay "incompatible" isn't in my vocabulary
[22:31] SubStack: Nuck: but you'll need to do polling or long polling
[22:31] sechrist: buy up a ton of xbox 1s, get linux on them, and make them node clusters
[22:31] SubStack: REST is shit for that
[22:31] Nuck: SubStack: Why would I need polling?
[22:31] DrMcKay: joshthecoder: well, we all know that it's a feature, right?
[22:31] joshthecoder: ACTION hacks apart his kcup brewer and make it brew a cup when he tweets "brew"
[22:31] sechrist: actually I bet somebody could sell a niche vps that is hosted 100% on recycled xbox ones
[22:32] SubStack: Nuck: because you'll want to be notified when your coffee is ready!
[22:32] SubStack: I guess you could set up an http server on both ends
[22:32] SubStack: but meh
[22:32] DrMcKay: joshthecoder: :D
[22:32] sechrist: joshthecoder: we had a button at the office next to the kcup machine that lit a light off in the main office area
[22:32] Nuck: SubStack: You GET /status
[22:32] SubStack: DrMcKay: I was more thinking retrofitting the french press
[22:32] CoverSlide: I think we'd have to upgrade the connection 
[22:32] sechrist: it was for the normal coffee machine, but yeah
[22:32] SubStack: with some servos and microcontrollers
[22:32] sechrist: if you made coffee, you turn the light on
[22:32] KingJamool has joined the channel
[22:33] Nuck: SubStack: It'll be pot-agnostic.
[22:33] DrMcKay: sechrist: Facebook has a thing which gets you a beer and lets you post to your wall
[22:33] vikstrous has joined the channel
[22:33] CoverSlide: To CoffeeSockets
[22:33] SubStack: and tapping into water from the sink via some surgical tubing
[22:33] sechrist: CoffeeSockets
[22:33] aho has joined the channel
[22:33] joshthecoder: SubStack: yeah having to refill the tank is too much work :\
[22:33] slip has joined the channel
[22:33] DrMcKay: joshthecoder: have you got it working already?
[22:33] CoverSlide: My new job they have a kegerator and Free Beer Fridays
[22:33] guillermo has joined the channel
[22:34] joshthecoder: I might as well run a tub from the machine to my desktop where it pour into my cup. Never have to get up again!
[22:34] cconstantine: Or is there a sorted hash? (keys sorted by value, not be insertion order)
[22:34] steffan_ has joined the channel
[22:34] SubStack: cconstantine: you can keep a list of keys or an order field in your hash and sort on demand
[22:34] DrMcKay: also, we need some reliable unit tests
[22:34] mikeal has joined the channel
[22:34] SubStack: cconstantine: but the standard object does not maintain a sorted order
[22:35] DrMcKay: we need something like electronic senses
[22:35] cconstantine: SubStack, I would really rather have the O(logN) insert and O(N) iteration of a sorted set
[22:35] SubStack: cconstantine: maybe this will be of use: https://github.com/substack/node-sorted
[22:35] Nuck: Yeah, we need a way to detect coffee levels
[22:36] Nuck: You guys discuss the hardware a bit, I've gotta run to the Apple Store soon
[22:36] cconstantine: SubStack, thanks
[22:36] Nuck: My mom's given up on getting a new laptop every 3 years and now wants to switch to Mac.
[22:37] DrMcKay: Nuck: so she will have to switch each year?
[22:37] CoverSlide: shit, we better put our names on a patent
[22:37] Nuck: DrMcKay: No, so her comptuer will last 6 years :P
[22:37] chapel: （╯°□°）╯︵ ┻━┻
[22:37] Nuck: CoverSlide: lol
[22:37] CoverSlide: you know some startup's crazy enough to actually make this
[22:38] DrMcKay: joshthecoder: where do I fill a bug report? I tweeted "brew" and it didn't work :<
[22:39] Nuck: I think the pot should be implemented as an extension of EventEmitter, do you agree?
[22:39] DrMcKay: Nuck: of course
[22:39] AvianFlu: hook.io-coffee
[22:39] freeformz has joined the channel
[22:39] craigpetchell has joined the channel
[22:40] Nuck: If we do this, I will seriously highfive all of you and buy you beers when I can actually buy beer.
[22:41] chrisumbel_ has joined the channel
[22:41] DrMcKay: Nuck: I'm counting on you :D
[22:41] DrMcKay: I'm gonna disassemble my coffeepot panel
[22:42] Nuck: How do I make something inherit from EventEmitter?
[22:42] Nuck: I ain't doing the C, somebody else is gonna hafta do that :P
[22:42] DrMcKay: Nuck: just like with regular prototypes
[22:42] DrMcKay: I can
[22:42] Nuck: Ugh I hate prototypes.
[22:42] DrMcKay: Nuck: wait with that laptop
[22:42] Nuck: I'll research this some more when I get back :P
[22:42] DrMcKay: Jobs is not longer a CEO of Apple
[22:43] justinTNT has joined the channel
[22:43] freeformz has joined the channel
[22:43] walt: I thought old steve would be dead by now
[22:43] DrMcKay: Nuck: or maybe it was only Mashable trolling on Twitter
[22:43] sechrist: yep
[22:44] sechrist: http://mashable.com/2011/08/24/breaking-steve-jobs-resigns-from-apple/
[22:44] sechrist: trollin'
[22:44] DrMcKay: but Reuters says he did
[22:44] sechrist: http://finance.yahoo.com/q?s=AAPL
[22:44] sechrist: woooo
[22:44] DrMcKay: ah, that's gotta be a ride down
[22:45] munkale has joined the channel
[22:45] DrMcKay: btw, will it render Apple products cheaper or more expensive?
[22:45] sechrist: tim cook
[22:45] sechrist: of coruse
[22:45] sechrist: course*
[22:45] DrMcKay: Tim Cook is an idiot
[22:46] tbranyen: Thats Captain Cook to you
[22:47] DrMcKay: but seriously, once he said something so stupid that only thing I remebered was that he's an idiot
[22:47] DrMcKay: I'm looking for it
[22:47] CoverSlide: wow didn't take any time at all for it to hit wikipedia
[22:47] munkale: so once you get CRUD routes for a few objects, app.js starts to get big. i'm thinking about separating out into models so that within app.js you just have some simple validation and pass off the parameters to a model to work on them and crud them into redis. does anyone have any thoughts here?
[22:48] brianseeders has joined the channel
[22:48] DrMcKay: http://www.engadget.com/2011/01/18/apple-on-ipad-competition-windows-is-big-and-heavy-android-i/
[22:49] jakehow_ has joined the channel
[22:49] jakehow has joined the channel
[22:50] justinTNT: munkale: of course
[22:51] CIA-65: node: 03Ben Noordhuis 07master * r8f24548 10/ src/node_net.cc : 
[22:51] CIA-65: node: net: fix multicast on sunos
[22:51] CIA-65: node: setsockopt(IP_MULTICAST_TTL|IP_MULTICAST_LOOP) takes an unsigned char as
[22:51] CIA-65: node: its argument on sunos.
[22:51] CIA-65: node: Partially fixes simple/test-dgram-multicast: test hangs after socket
[22:51] CIA-65: node: close but it no longer throws EINVAL exceptions. - http://git.io/Lm3PTQ
[22:51] CrisO has joined the channel
[22:51] munkale: justinTNT: i'm using express. so i was thinking of making a models directory to sit next to my views dir
[22:52] munkale: sound like a good idea? and then every time there's a call to one of them i'll open my redis connection, use it, and close it?
[22:52] [[zzz]] has joined the channel
[22:53] slifty_corsair has joined the channel
[22:53] DrMcKay: "For the ubercool interactive charts, you need to install the Adobe Flash Player" <3 Google
[22:54] davidwalsh has joined the channel
[22:54] justinTNT: well, like you said, app.js gets big, and it makes sense to do something to tame it.
[22:55] Count_0 has joined the channel
[22:56] munkale: justinTNT: does it do anything terrible to redis performance to open and close the connection for each crud operation?
[22:56] ryanfitz has joined the channel
[22:56] justinTNT: sorry, dunno
[22:56] CIA-65: node: 03Ryan Dahl 07master * rf9dae9e 10/ node.gyp : Add dgram_legacy and dgram_uv to node.gyp - http://git.io/sTWqkg
[22:56] Count_0 has left the channel
[22:56] munkale: ok. thanks for your thougths
[22:56] janogonzalez has joined the channel
[22:56] ceej has joined the channel
[22:57] steffan__ has joined the channel
[22:59] ryanfitz has joined the channel
[23:00] freeformz has joined the channel
[23:00] KingJamool has joined the channel
[23:01] jbrokc has joined the channel
[23:05] jellosea has joined the channel
[23:06] jellosea: how can i call a constructor with .apply() ? i get an error if i try and do new obj.prototype.constructor.apply(this, args):
[23:06] EyePulp has joined the channel
[23:06] socketio\test\09 has joined the channel
[23:07] jaybroni has joined the channel
[23:10] JumpMast3r has joined the channel
[23:10] booo has joined the channel
[23:13] dgathright has joined the channel
[23:14] MaSch has joined the channel
[23:16] jomoho has joined the channel
[23:17] MaSch has joined the channel
[23:18] dshaw_1 has joined the channel
[23:19] bradleymeck has joined the channel
[23:19] jellosea: how can i call a constructor with .apply() ? i get an error if i try and do new obj.prototype.constructor.apply(this, args):
[23:19] bradleymeck: anyone know if we can export env vars, something like putenv?
[23:20] weezle has left the channel
[23:20] bradleymeck: jellosea you dont, there are many long discussions on why new fails w/ varargs
[23:20] CIA-65: node: 03Ryan Dahl 07master * r06f750c 10/ (node.gyp src/udp_wrap.cc): fix windows build - http://git.io/Exoshg
[23:20] jmoyers has joined the channel
[23:21] bradleymeck: jellosea use y=Object.create(x.prototype); x.apply(y,z)
[23:21] jellosea: awesome  thanks
[23:22] hornairs has joined the channel
[23:24] CIA-65: node: 03Ryan Dahl 07master * r48918f5 10/ tools/gyp/pylib/gyp/generator/msvs.py : 
[23:24] CIA-65: node: Reapply Peter Bright's fixes for GYP on MSVS
[23:24] CIA-65: node: Originally 71333b3f5b12183b2709704fec160df916cb637a - http://git.io/Q3bCbw
[23:24] sonnym has joined the channel
[23:25] hybsch has left the channel
[23:25] H4ns` has joined the channel
[23:27] amasad has joined the channel
[23:27] bradleymeck: ryah, would you accept a patch to set local env vars (putenv / _putenv)?
[23:27] bradleymeck: or is that user landish
[23:27] ryah: bradleymeck: we already have that
[23:27] bradleymeck: didnt see it in docks... /goes to scour
[23:27] ryah: might not be in the docs
[23:28] ryah: would accept a docs patch :)
[23:28] micheil has joined the channel
[23:28] ryah: it also doesnt work correctly on solaris
[23:28] ryah: but probably you're not testing there :)
[23:28] bradleymeck: im not testing there, ill add docs patch after bit of testing
[23:28] kawaz_air has joined the channel
[23:29] shipit_ has joined the channel
[23:31] Twelve-60 has joined the channel
[23:31] k1ttty has joined the channel
[23:34] tmpvar has joined the channel
[23:38] clifton has joined the channel
[23:40] jetienne has joined the channel
[23:43] gazumps has joined the channel
[23:43] justinTNT has joined the channel
[23:44] TooTallNate: ryah: do you know what would make NODE_MODULES not be defined while compiling an addon?
[23:44] TooTallNate: somebody is experiencing that with node-time: https://github.com/TooTallNate/node-time/issues/9
[23:45] trepan has joined the channel
[23:47] jtrudeau has joined the channel
[23:47] vikstrous has joined the channel
[23:48] jacobolus has joined the channel
[23:50] shanebo: hey guys, any recommendations for node hosting?
[23:50] sechrist: nodejitsu
[23:50] skm has joined the channel
[23:51] shanebo: sechrist, looks slick
[23:51] shanebo: are you on it?
[23:51] sechrist: Yeah I use it
[23:51] sechrist: it is slick
[23:51] sechrist: check out the nodejitsu github
[23:51] sechrist: they're pretty baller
[23:52] robertfw has joined the channel
[23:53] shanebo: sechrist too bad it's in beta
[23:53] Ellypse has joined the channel
[23:53] bnoordhuis: shanebo: no.de obviously!
[23:54] sechrist: nooooooooooo(de)
[23:54] mikey_p: does anyone actually use no.de?
[23:54] sechrist: no(de)
[23:54] isaacs[away]: mikey_p: i do
[23:54] bradleymeck: ACTION wants to get our stack running inside a no.de
[23:54] mikey_p: seemed somewhat unusable when I last tried it (no support for package.json)
[23:54] isaacs[away]: working on a new release.
[23:54] isaacs[away]: mikey_p: yeah.
[23:54] isaacs[away]: mikey_p: i knwo :)
[23:54] mikey_p: and when I tried to install manually i filled up /tmp in about 5 seconds :(
[23:55] isaacs[away]: right
[23:55] sechrist: http://www.joyentcloud.com/products/smart-appliances/node-js-smartmachine/
[23:55] sechrist: ahaha I love this video
[23:55] sechrist: mjr said epoll is sexy
[23:55] cjheath has joined the channel
[23:55] mikey_p: i wanna like it, but I'm sticking with heroku for now
[23:55] isaacs[away]: sure sure
[23:55] smus has joined the channel
[23:55] isaacs[away]: mikey_p: they're all wip's
[23:56] isaacs[away]: mikey_p: http://isaacs-testing-hostrouter-again.no.de/ <-- running on the new kit
[23:56] kUrld has joined the channel
[23:56] sechrist: The Royal Bank of Scotland uses node?
[23:56] sechrist: for what?!
[23:56] bnoordhuis: sechrist: sunos's port mechanism is on par with epoll
[23:56] seivan has joined the channel
[23:56] cjheath: Morning all! I'm looking in to using node.js to deliver an embedded webserver on the Gumstix platform (ARM Cortex A8, 64MB RAM). Any experiences to share?
[23:57] dominictarr: hey, clifford!
[23:57] sechrist: bnoordhuis: he was taking a stab that joyent uses sun?
[23:57] sechrist: haha
[23:57] cjheath: Hiya mate - got my email?
[23:58] sechrist: well that can't be
[23:58] sechrist: they offer nix/win
[23:58] ezmobius has joined the channel
[23:58] mynyml has joined the channel
[23:58] dominictarr: yeah, my mind has been boggling. that cortex board stuff is *really* cool.
[23:59] schwab has joined the channel
[23:59] cjheath: It runs Linux, so shouldn't be too hard
[23:59] cjheath: I'd really like not to have to go to one of the tiny web servers, or a commercial embedded product
