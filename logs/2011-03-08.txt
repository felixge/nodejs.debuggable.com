[00:00] piscisaureus: ryan___: hmm I'll cleanup my code then show it.
[00:01] ryan___: piscisaureus: GetQueuedCompletionStatus calls the callback you gave it
[00:01] ryan___: ?
[00:01] boogyman has joined the channel
[00:01] piscisaureus: ryan___: not exactly
[00:02] ryan___: well - okay
[00:02] piscisaureus: ryan___: a second
[00:02] ryan___: ACTION goes back to his own stuff
[00:02] amerine has joined the channel
[00:03] boogyman has left the channel
[00:03] creationix_: asimismo: I just use upstart on linux and whatever Joyent wrote on no.de (solaris)
[00:03] creationix_: nothing fancy
[00:03] gerad has joined the channel
[00:03] creationix_: upstart is little more than a while true loop in bash
[00:04] creationix_: from a monitoring perspective
[00:04] asimismo: creationix_: Ok. We've got Zabbix, so I can do a port test and such.
[00:04] airhorns has joined the channel
[00:05] creationix_: some people use monit
[00:05] asimismo: Just wondered if other best practices had emerged.
[00:05] piscisaureus: ryan___: you pass a pointer to a "overlapped" struct to every windows api call operation that supports iocp
[00:05] piscisaureus: windows fiddles only with the overlapped struct, but if you allocate more memory than windows needs you can use the extra space to store your own metadata.
[00:05] piscisaureus: So I store a pointer to the callback in that extra space and iocp_poll calls that
[00:06] creationix_: asimismo: you could ask felixge what he uses for transloadit or rauchg_ what he uses for learnboost
[00:06] creationix_: my most busy site only gets on average a couple thousand visitors a day, that's nothing from a node server's perspective
[00:06] asimismo: creationix_: Ok, thanks.
[00:07] ryan___: piscisaureus: okay
[00:07] asimismo: Yeah, our load is low now. But once the app takes off... ;-)
[00:08] ryan___: piscisaureus: so - it seems that you can mark all the ev_check watchers as pending after you get an io packet (or whatever they call it) 
[00:08] ryan___: then call all those callbacks
[00:08] ryan___: then call the callback for the io packet
[00:08] paulrobinson has joined the channel
[00:09] ryan___: or?
[00:09] piscisaureus: ryan___: just call them every time ... hmmm
[00:09] ryan___: "completion packet", sorry
[00:09] tmpvar has joined the channel
[00:09] ryan___: piscisaureus: the nexttick one is zero overhead
[00:10] piscisaureus: does not sound very efficient but I guess it'll do.
[00:10] piscisaureus: ryan___ I will try that before bothering you further
[00:11] ryan___: i do need to redo how nextTicks are dispatched for long-stack traces... so i'm not against refactoring it either
[00:11] piscisaureus: ryan___ let's see if I can get node to get acceptable throughput with 10k sockets, then see further.
[00:12] tmpvar: official song is pretty good
[00:12] ryan___: piscisaureus: :)
[00:13] sleeplessinc has joined the channel
[00:13] riven` has joined the channel
[00:14] rburhum has joined the channel
[00:15] piscisaureus: Some stuff is just too complex for me. The official node song, for example.
[00:17] altamic has joined the channel
[00:17] altamic has joined the channel
[00:17] piscisaureus: I like dumb and simple. http://www.youtube.com/watch?v=bB3M4Bi1eLU
[00:18] pcardune has joined the channel
[00:22] sleeplessinc: Wondering who chose the official song.
[00:22] sonolin has joined the channel
[00:23] matyr has joined the channel
[00:23] sonolin: Hello
[00:23] stalled has joined the channel
[00:23] aphelion has joined the channel
[00:23] aphelion has joined the channel
[00:24] sonolin: I'm trying out the best/most secure/easiest way to stream data to a particular user using node.js and socket.io
[00:24] sonolin: How my app will work - somebody makes a phone call, and my "Twilio" PHP app will log the call in the database, and make a request to my node.js app
[00:24] lukegalea has joined the channel
[00:25] sonolin: the node.js app should then update the *authenticated* clients with the JSON data for the phone call
[00:25] jpick has joined the channel
[00:25] sonolin: so that the JS/HTML client updates it with a modal popup "Phone Call received from XXXXXX"
[00:25] sonolin: is this doable?
[00:26] creationix_: sonolin: easy, just have php hit an http endpoint on the node server
[00:26] creationix_: which sends a message to the client via the socket.io channel
[00:26] sonolin: "via the socket.io channel"... how do I make sure I only send to the correct client tho?
[00:27] creationix_: you have a handle to each client
[00:27] sonolin: I don't want "John Doe" recieving a phone call, but node updating both "John Doe" and "Jane Doe"
[00:27] jimt has joined the channel
[00:27] pHcF has joined the channel
[00:27] creationix_: you'll need to somewhere keep track of which clients you want to send the message to
[00:27] sonolin: what do you mean by that? Sorry, I'm jumping into node.js today ;)
[00:28] creationix_: sonolin: node servers are long running, the handles to the clients are just objects in memory
[00:28] sonolin: ok so are you saying I should store their unique ID generated by Node.js in the database, along with their username?
[00:28] creationix_: you can give them ids if you want, that may help
[00:28] Zil has joined the channel
[00:28] creationix_: and have a hash table somewhere that translates the ids to socket.io handles
[00:28] sonolin: ok that maeks sense
[00:29] sonolin: *makes
[00:29] creationix_: I'm not sure if socket.io generates unique ids for each user (beside the fd of the actual socket)
[00:29] creationix_: actually, I think it does internally, not sure if it's exposed though
[00:30] sonolin: hm I'm a little confused still
[00:30] creationix_: if you have a database like redis that also works as a great in-between
[00:30] sonolin: can you help me think this out?
[00:30] sonolin: step 1 -> Client connects via socket.io
[00:30] creationix_: redis clients can be notified with values in the database changes
[00:30] sonolin: I'm using mysql
[00:30] zzak: +1 redis
[00:31] creationix_: redis can be used with mysql, they serve different purposes
[00:31] sonolin: oh I see
[00:31] creationix_: but node can do what redis does too, you just have to code it yourself
[00:31] sonolin: ok... well 
[00:31] sonolin: how do I get the user's username to store in the database?
[00:31] creationix_: in the redis case, php would update some value in the redis database and node would just see the change and forward it to the right user
[00:32] zzak: redis is good for pub/sub
[00:32] creationix_: username probably comes from your session
[00:32] sonolin: yes
[00:32] sonolin: but how do I access that via node.js
[00:32] sonolin: for instance, how do I assign that username to a particular handle?
[00:32] creationix_: socket.io should have the cookie values frmo the client
[00:32] sonolin: I'm a little confused on that
[00:32] sonolin: ohhh
[00:32] creationix_: including the PHP session id
[00:32] sonolin: wow
[00:32] sonolin: that's cool
[00:32] creationix_: if it's the same domain at least
[00:33] creationix_: depends on how you're hosting the two servers
[00:33] tktiddle has joined the channel
[00:33] skm has joined the channel
[00:33] mrlase: Anyone else having problems with connect-redis saying "TypeError: Object function RedisStore(options) { ...... } has not method 'set'"
[00:33] mrlase: ?
[00:33] sonolin: how would I decode the PHP session ID? would I have to store that in the DB?
[00:33] creationix_: and if it doesn't have the cookie header, you can just have the client explicitly send it's session id to the node server in the body of a message
[00:34] sonolin: ok that makes sense, I'm just concerned with session hi jacking
[00:34] mrlase: wait wait, nvm, my bad, wasn't setting the store as new..
[00:34] sonolin: if somebody gets that session id, they can just pass it to the node server as well
[00:34] creationix_: sonolin: can't you do that anyway?
[00:34] sonolin: well I guess they could do the same thing in their browser right?
[00:34] creationix_: or is the http server over ssl/tls?
[00:34] sonolin: no its not all ssl 
[00:34] sonolin: so I guess that point is null
[00:34] skm has joined the channel
[00:35] creationix_: sonolin: another option, is couchdb, the browser can directly subscribe to changes on the database over http
[00:35] sonolin: hm interesting
[00:35] atmos has joined the channel
[00:35] creationix_: and then php can update the database directly through http calls
[00:36] sonolin: so if a new entry is created, the client is automatically updated?
[00:36] Zil: Sup guys
[00:36] creationix_: redis, socket.io, and couchdb can all push events to their clients
[00:36] davidascher has joined the channel
[00:36] sonolin: ok 
[00:36] sonolin: thanks for all the help
[00:36] creationix_: redis and couchdb both have query types that push changes to clients (they specify what changes they want to see)
[00:36] sonolin: hm ok
[00:37] axfraxfr has joined the channel
[00:37] Zil: Hey guys, can't find anything in the doc's about the <on> method called from a socket object ie socket.on('connection', function(client){...
[00:37] creationix_: if you just want pus/sub, couch is probably too heavyweight
[00:37] sonolin: this is turning into a big project.. the original task was like 4 hours lol
[00:37] creationix_: also I'm not sure how good browser support is for the changes feed
[00:37] creationix_: sonolin: then just use node with socket.io
[00:37] sonolin: kk 
[00:37] sonolin: that's what I'm gonna do I think
[00:37] isaacs: ryah: https://gist.github.com/859599
[00:37] sonolin: thanks
[00:37] creationix_: have a little http server in node that the php script can make calls to
[00:37] isaacs: or anyone else, reallyt
[00:38] creationix_: and then in-process the node server can route messages to the clients
[00:38] bradleymeck1 has joined the channel
[00:38] isaacs: i'm thinking the paths are a bit too noisy
[00:38] sonolin: ok cool
[00:38] atmos: anyone know of any express apps that use mustache templating ?
[00:38] sonolin: should I store the session ID in the DB?
[00:38] sonolin: so that I can get their user data to properly route the message?
[00:38] creationix_: isaacs: you should use some cool unicode character instead of "node_modules" ;)
[00:39] isaacs: creationix_: ha
[00:39] tprice has joined the channel
[00:40] creationix_: sonolin: yeah, the simplest method for you will probably be for node to just keep a hash of session id -> socket handles, and php will tell node what messages to send to what session ids
[00:40] creationix_: the rest of the logic will be in php
[00:40] creationix_: when a user connects to socket.io, it needs to tell the node server (either through cookie headers or the body message) it's session id
[00:41] SubStack: ☠
[00:41] creationix_: node does support socket.io over ssl, but the client probably won't like
[00:41] tprice: what's the best way to store a lot of data for sessions of an app and can be acsessed really
[00:41] squeeks_: redis, memcached, etc
[00:42] sonolin: ok
[00:42] tprice: whats a good module for a redis client?
[00:42] sonolin: good to know
[00:42] piscisaureus: ryan___: node isn't really using watcher priorities, is it?
[00:42] sonolin: just curious, does node have a decent MVC framework? 
[00:43] sonolin: I have to pick a framework for a next prjoect, and I'm kind of leaning towards Rails (I'm a Django guy)... but Node/js sounds kind of cool
[00:43] squeeks_: tprice: node-redis floats my boat, at least
[00:43] zzak: tprice: https://github.com/mranney/node_redis
[00:43] mjr_: my boat is also floated
[00:43] ryan___: piscisaureus: there are a few places they are used
[00:43] malkomalko has joined the channel
[00:44] jetheredge has joined the channel
[00:44] pillowfactory has joined the channel
[00:45] piscisaureus: ryan___: I could only find the debug watcher being set to max pri
[00:45] creationix_: sonolin: check out expressjs
[00:45] MatthewMueller has joined the channel
[00:47] Evet_ has joined the channel
[00:47] ttpva has joined the channel
[00:48] fly-away has joined the channel
[00:48] tprice: what about storing data in memory?
[00:49] MatthewMueller has left the channel
[00:49] themiddleman_itv has joined the channel
[00:49] creationix_: tprice: that's the easiest, but it has different limitations
[00:49] tprice: would that work?
[00:49] creationix_: you're probably capped at 1gb and if your process dies, so does all the data
[00:49] creationix_: but it's super fast and doesn't even require non-bocking APIs
[00:50] creationix_: var db = {};
[00:50] creationix_: done!
[00:50] creationix_: key value store
[00:52] ryan___: piscisaureus: i think the eio async watcher hsa a priority
[00:52] ryan___: piscisaureus: and the GC idle watcher a minimum priority
[00:53] creationix_: tprice: if you want in-memory, but out of process, then redis would be a good choice
[00:53] matyr_ has joined the channel
[00:54] slickplaid: redisftw
[00:55] mjr_: I love me some redis.  
[00:55] slickplaid: same
[00:55] mjr_: Currently wrestling with a couchdb issue, so I can hang around and be redis-y.
[00:56] ttpva has joined the channel
[00:57] Zil: Is <on> equivalent to <addListener(event, λ)>
[00:57] langworthy has joined the channel
[00:57] Zil: I see it being used with socket.io and node but I can't find it mentioned anywhere in the doc
[00:58] slickplaid: I believe on is socket.io's implementation of addListener, yes.
[00:58] mattikus has joined the channel
[00:58] seivan has joined the channel
[00:59] creationix_: Zil it should be in the node docs
[00:59] insin: http://nodejs.org/docs/v0.4.2/api/events.html#emitter.on
[00:59] Zil: Alright, the event's where can I find a list of them? Or are they similar to the ones that are in the node doc's with the event require
[00:59] creationix_: http://nodejs.org/docs/v0.4.2/api/events.html
[00:59] slickplaid: Oh, i see what you were asking now.
[00:59] slickplaid: ^^ what they said then :D
[01:00] Zil: Alright, I was looking at the right spot, I was just kind of lost haha thanks :)
[01:01] charlenopires has joined the channel
[01:02] testuser has joined the channel
[01:05] shiawuentan has joined the channel
[01:06] tshpaper has joined the channel
[01:07] softdrink has joined the channel
[01:08] Remoun has joined the channel
[01:08] OhMeadhbh has joined the channel
[01:09] deepthawtz has joined the channel
[01:12] raidfive has joined the channel
[01:13] perlmonkey2 has joined the channel
[01:13] lukegalea has joined the channel
[01:13] nonnikcam has joined the channel
[01:14] wilmoore has joined the channel
[01:18] sonolin has left the channel
[01:19] creationix_ has left the channel
[01:20] sprout has joined the channel
[01:26] ryanfitz has joined the channel
[01:28] zentoooo has joined the channel
[01:29] hassox has joined the channel
[01:32] paul_k has joined the channel
[01:33] mickael has joined the channel
[01:34] jtsnow has joined the channel
[01:35] siaoeh has joined the channel
[01:36] lukegalea has joined the channel
[01:36] mdoan has left the channel
[01:39] sivy has joined the channel
[01:40] sivy has joined the channel
[01:41] papyromancer has joined the channel
[01:42] fisted has joined the channel
[01:43] matschaffer has joined the channel
[01:44] bradleymeck2 has joined the channel
[01:44] ryan_ has joined the channel
[01:45] piscisaureus: why does the buildbot not keep its history?
[01:48] piscisaureus has joined the channel
[01:49] Tony_ has joined the channel
[01:50] piscisaureus: PING 1299549034801
[01:50] Tony_: hi, i'm just run "node npm install mysql" on the windows binary provided at http://node-js.prcn.co.cc, but it occured a DNS error
[01:51] Tony_: Is there anyone suffering from the same issue?
[01:51] MikhX has joined the channel
[01:51] isaacs: Tony_: it doens't work very well on that, i don't think.
[01:51] isaacs: Tony_: seen a lot of issues
[01:52] piscisaureus: <q>
[01:52] piscisaureus: Node 0.4.1 binaries were released. NPM seems to be broken - please report here and suggest a solution to the NPM author. As a workaround you can copy the new exe to older releases of the binaries with older NPM. The problems are: 1) NPM relies on sh and a few other tools for non-critical tasks like displaying its own installation logs. These tools don't exist in our stripped package. 2)...
[01:52] piscisaureus: ...Newer releases of NPM perform setuid operations which are not necessary in our single-user xcopy-style installation. 
[01:52] piscisaureus: </q>
[01:52] mickael has joined the channel
[01:52] isaacs: piscisaureus: it should only be doing that if process.setuid is available, and if the current uid is 0
[01:52] libv8 has joined the channel
[01:53] piscisaureus: ^-- isaacs: that is what the website says. I have nothing to do with that package.
[01:53] isaacs: piscisaureus: please post an issue :)
[01:53] isaacs: piscisaureus: oh, ok
[01:53] seivan has joined the channel
[01:53] isaacs: maybe i'll take a look later.
[01:54] isaacs: been busy with npm 1.0
[01:54] piscisaureus: more important :0
[01:54] isaacs: Speaking of which!  here's a preview: https://gist.github.com/859599
[01:54] BillyBreen has joined the channel
[01:54] fusspawn: *cant wait for npm 1.0* 
[01:55] fusspawn: ooo -p makes me happe
[01:55] piscisaureus: I think --long makes me happy
[01:55] piscisaureus: mucho easier to dive into a package internals once you can see what it depends on
[01:56] fusspawn: ACTION just spent most of the day setting up a parser for npm output.. do want -p
[01:56] fusspawn: even if it made the day mostly worthless :/
[01:56] Yuffster has joined the channel
[01:56] lukegalea has joined the channel
[01:57] jtsnow has joined the channel
[01:58] Tony_: Is there anyone tried out the redis-node package, is that stable and fast?
[01:58] mickaelz has joined the channel
[01:59] Emmanuel__ has joined the channel
[01:59] Guest58918 has joined the channel
[01:59] timmywil has joined the channel
[02:01] gazumps856 has joined the channel
[02:01] sechrist has joined the channel
[02:02] jimt has joined the channel
[02:02] BillyBreen has joined the channel
[02:05] Tony_ has left the channel
[02:06] mbrochh has joined the channel
[02:06] Jourkey has joined the channel
[02:06] piscisaureus: poll: a = static_cast<A*>(malloc(sizeof(A)) 
[02:06] piscisaureus: or a = new A() ?
[02:06] piscisaureus: ^-- A is a dumb data type
[02:06] axfraxfr has joined the channel
[02:07] yozgrahame has joined the channel
[02:08] zakabird: is the ugly way faster? reminds me why I like untyped dynamic  langs more 
[02:09] piscisaureus: I don't think the ugly way is faster
[02:10] Evet has joined the channel
[02:12] sivy_ has joined the channel
[02:13] lukegalea has joined the channel
[02:13] Murugaratham has joined the channel
[02:19] Qix_ has joined the channel
[02:23] ryan_: piscisaureus: new A()
[02:23] yhahn has joined the channel
[02:24] piscisaureus: ryan_: yah ok. Looks really bad when mixed with libev api implementation
[02:24] piscisaureus: but yeah
[02:25] vilsonvieira has joined the channel
[02:25] raidfive has joined the channel
[02:26] ryan_: piscisaureus: the libev backend should be done in c though
[02:26] ryan_: or?
[02:27] piscisaureus: ryan_: why? I am not writing a libev backend
[02:27] piscisaureus: I am writing an event loop with libev api
[02:27] ryan_: it should still be done in C, imo
[02:27] ryan_: why use c++?
[02:27] ryan_: that will only anger the gods
[02:28] jesusabdullah: C would anger the v8 gods :(
[02:28] tbranyen: c/c++ its all the same when the lights go out
[02:28] ryan_: ACTION looks for the mute button
[02:28] jacobolus has joined the channel
[02:29] jesusabdullah: It's /ignore
[02:29] tbranyen: remind me to mute my humor, welp
[02:29] hassox has joined the channel
[02:29] jesusabdullah: hehe :)
[02:30] ryan_: piscisaureus: ev is a c api, iocp is a c api
[02:30] ryan_: why introduce c++?
[02:30] piscisaureus: ryan_: yeah. I was writing c style code mostly. Though I was very tempted to do:
[02:30] piscisaureus: struct ev_stupid {
[02:30] piscisaureus:   bool active;
[02:30] piscisaureus:   ev_stupid *next;
[02:30] piscisaureus: }
[02:30] piscisaureus: struct ev_check: ev_stupid { ... }
[02:30] piscisaureus: O.o
[02:30] tmpvar has joined the channel
[02:31] piscisaureus: ryan_: no worries. will be C.
[02:31] ryan_: good :)
[02:32] lukegalea has joined the channel
[02:32] piscisaureus: I actually just started hating c++ again so we're safe
[02:33] AAA_awright has joined the channel
[02:34] sprout has joined the channel
[02:37] kkaefer has joined the channel
[02:38] piscisaureus: ryan_: your reasoning is a fallacy btw.
[02:38] piscisaureus: The road is bricks, the garage is bricks. Why use steel to build a car?
[02:39] fusspawn: the roads tar. 
[02:39] andrewfff has joined the channel
[02:39] tbranyen: garage is cheap paneling
[02:40] stepheneb has joined the channel
[02:40] fusspawn: the cars probally not steel.
[02:40] fusspawn: but yes i agree :P
[02:42] dguttman has joined the channel
[02:43] exitdescription has joined the channel
[02:46] asimismo has joined the channel
[02:46] eyesUnclouded has joined the channel
[02:48] pillowfactory has joined the channel
[02:51] softdrink has joined the channel
[02:51] Murugaratham has joined the channel
[02:52] ryan_: piscisaureus: you're not building a car, you're just building a driveway
[02:52] ryan_: piscisaureus: use bricks
[02:52] Apes has joined the channel
[02:52] piscisaureus: ryan_: I'm building a highway :p
[02:56] piscisaureus: ryan_: btw, you plan on landing that path.relative patch? If so, I'm going to shoot at it once more.
[02:56] Croms has joined the channel
[02:56] piscisaureus: ACTION Concentration problems or just multitasking?
[02:56] Zil has joined the channel
[02:58] lukegalea has joined the channel
[02:59] soulofpeace has joined the channel
[03:03] pyrony has joined the channel
[03:04] zzak: a brick driveway..
[03:04] possibilities has joined the channel
[03:04] zzak: sounds expensive
[03:06] Qix_ has joined the channel
[03:09] eb4890 has joined the channel
[03:09] hij1nx has joined the channel
[03:09] Aria has joined the channel
[03:10] jtsnow has joined the channel
[03:11] sleeplessinc has joined the channel
[03:11] axfraxfr has joined the channel
[03:11] eventi has joined the channel
[03:12] jakehow has joined the channel
[03:12] briznad has joined the channel
[03:13] Yuffster_work has joined the channel
[03:15] wilmoore has joined the channel
[03:16] mike5w3c has joined the channel
[03:17] lukegalea has joined the channel
[03:19] ajashton has joined the channel
[03:21] rburhum has left the channel
[03:22] FunkyFortune has joined the channel
[03:22] Emmanuel__ has joined the channel
[03:23] pcardune_ has joined the channel
[03:23] ajashton has left the channel
[03:23] tmpvar has joined the channel
[03:25] piscisaureus: quits
[03:28] jacobolus has joined the channel
[03:28] lukegalea has joined the channel
[03:29] tfe_ has joined the channel
[03:32] mnot has joined the channel
[03:34] zachsmith has joined the channel
[03:36] timmywil has joined the channel
[03:38] bartt has joined the channel
[03:38] guybrush: i have a problem with npm, when installing a package which has tarball-url-dependencies npm says it does not find the packages on which the tarball-url-package depends
[03:38] davidascher has joined the channel
[03:38] guybrush: anyone else experienced the same problem?
[03:40] guybrush: like, the package i want to install depends on http://x.y/z.tar.gz and z depends on cradle - npm says it does not find cradle
[03:41] paul_k has joined the channel
[03:42] davidascher has joined the channel
[03:42] lukegalea has joined the channel
[03:43] Murugaratham has joined the channel
[03:45] mikegerwitz: heh, was wondering when you'd do that
[03:46] guybrush: i am trying to write a deploying-tool which is a wrapper of npm
[03:46] guybrush: my projects are all npm-packages
[03:46] guybrush: but i do not want to publish them into the npm-registry :D
[03:47] guybrush: since its customer related stuff
[03:47] mikegerwitz: guybrush: sorry I have little experience with npm and Mr. npm guy appears to have vanished..I'm sure someone'll be able to help eventually
[03:47] guybrush: right
[03:48] srid has joined the channel
[03:48] srid has joined the channel
[03:48] srid: no.de users - do you install your own mongodb, or use an external service like mongohq?
[03:48] whaka has joined the channel
[03:50] pillowfactory: hello
[03:50] zachsmith: srid I installed it myself
[03:51] pillowfactory: dumb question: should I be using npm, or "freezing" the libraries in my project?
[03:51] zachsmith: srid: it was pretty easy
[03:51] srid: initially, yea. but need to worry about auto-start (what if the no.de machine restarts?) and regular maintainence.
[03:53] zachsmith: srid: I feel like using something like mongohq would be a huge bottleneck if you're doing a lot of reads
[03:53] srid: that's what I feel too.
[03:53] lukegalea has joined the channel
[03:53] srid: I'd prefer something like dotcloud.com - but their python client is buggy for me.
[03:54] tilgovi has joined the channel
[03:55] nwhite_ has joined the channel
[03:56] AAA_awright: guybrush: That package probably dissappeared from the central repository, that's been causing a lot of problems recently
[03:57] guybrush: AAA_awright: thx for the hint, will check it out
[03:57] AAA_awright: I would always sugguest providing URLs directly to the project page of the modules you depend on
[03:58] AAA_awright: Mostly selfishly for people like me who manage dependencies by hand with Git
[03:58] guybrush: right now i am deploying everything with git
[03:59] guybrush: wanted to try to switch to npm
[03:59] guybrush: since dependencies are managed way better
[03:59] guybrush: git-submodules are not so cool
[04:00] AAA_awright: They can work, with an army of git commits and symlinks in a node_modules/ subdirectory
[04:01] AAA_awright: And without needing the additional system-wide setup npm requires can actually be easier to setup
[04:01] guybrush: right
[04:01] guybrush: but
[04:02] guybrush: if you want to deploy multiple versions of the same package
[04:02] meso has joined the channel
[04:02] raidfive has joined the channel
[04:03] guybrush: you will have to manage that, npm does that for free
[04:06] lukegalea has joined the channel
[04:07] jtsnow has joined the channel
[04:07] olegp has joined the channel
[04:07] apoc has joined the channel
[04:07] framlin has joined the channel
[04:07] bruse has joined the channel
[04:07] guybrush: especially when it comes to deploying to more than 1 machine -- maybe git is the better approach still figuring it out
[04:07] Zil has joined the channel
[04:08] guybrush: fearing the dependency-hell :D
[04:09] Qix_ has joined the channel
[04:09] tilgovi has joined the channel
[04:09] [tm] has joined the channel
[04:10] drostie has joined the channel
[04:10] papyromancer has joined the channel
[04:10] ec|detached has joined the channel
[04:10] rudebwoy has joined the channel
[04:12] seivan has joined the channel
[04:12] malkomalko has joined the channel
[04:13] jimt_ has joined the channel
[04:15] Nacho has joined the channel
[04:16] sivy has joined the channel
[04:19] luke` has joined the channel
[04:21] brianc has joined the channel
[04:22] sivy has joined the channel
[04:23] inimino has joined the channel
[04:27] dnolen has joined the channel
[04:28] foobnoob has joined the channel
[04:29] cognominal has joined the channel
[04:31] pkrumins: ACTION breaks silence by throwing e
[04:31] Me1000 has joined the channel
[04:31] malkomalko: :D
[04:34] Viriix has joined the channel
[04:34] lukegalea has joined the channel
[04:35] Murugaratham: catch {...}
[04:35] tmzt_: careful, you might get a stack trace
[04:36] tk has joined the channel
[04:36] mynyml has joined the channel
[04:36] tk has joined the channel
[04:36] mjr_ has joined the channel
[04:37] wadey has joined the channel
[04:38] gkatsev: hm... I have a no.de machine but when sshing i get permission denied (publickey), is that because the machine was created before an sshkey was posted to the account?
[04:38] papyromancer has joined the channel
[04:42] Viriix has left the channel
[04:42] ryankirkman has joined the channel
[04:42] ryankirkman: Does it make sense to want to send my response to a http request in 1 packet?
[04:43] briznad has joined the channel
[04:43] shaver: yes
[04:43] razvandimescu has joined the channel
[04:45] ryankirkman: shaver: How do I do it? The reason I want this is it seems like I'm incurring a whole roundtrip every time I receive a packet / chunk
[04:48] Shrink has joined the channel
[04:48] Shrink has left the channel
[04:48] rhdoenges has joined the channel
[04:49] lukegalea has joined the channel
[04:56] stonecobra has joined the channel
[04:56] mjr_: If you have nagle, then it'll tend to coalesce them into larger packets.
[04:56] mjr_: Nagle is on by default in node, isn't it?
[04:57] shaver: you don't need TCP_CORK?
[04:57] mjr_: that's how you'd make SURE
[04:57] mjr_: But good ole automagical Nagle should tend to make packets larger
[04:58] shaver: trust in nagle, but cork your sockets
[04:58] mjr_: And it'll certainly push out a full MTU packet once you've got enough data to fill one and the timer hasn't expired.
[04:58] gkatsev: oh, to ssh to no.de its node@machine
[05:00] lukegalea has joined the channel
[05:01] DTrejo has joined the channel
[05:02] ryankirkman: Hmm
[05:05] ryankirkman: So in summary, does doing something like (https://gist.github.com/02a8108fb9da74d3fc18) buffer the response such that it will be sent in 1 packet?
[05:05] mjr_: one or more, sure
[05:06] mjr_: By buffering it explicitly in node you sort of take control of when the first byte gets emitted.
[05:06] mjr_: Except when do you call sendHeader
[05:06] mjr_: ?
[05:07] ryankirkman: I'm using express.js
[05:08] papyromancer has joined the channel
[05:08] ryankirkman: So they have this method called "send(obj)", which I think they wrap around the response object
[05:08] ryankirkman: and it says in the docs it is equivalent to a write() and an end()
[05:09] ryankirkman: http://expressjs.com/guide.html#res-send-body-status-headers-status-status-
[05:10] tmzt_: it detects what type of object you send, for instance, it can create application/json if you pass a normal object, or send the contents of a Buffer, or just a status code (number)
[05:10] dwww has joined the channel
[05:10] ryankirkman: Right, so I am always sending JSON data
[05:11] kriszyp has joined the channel
[05:11] tmzt_: what's the question?
[05:12] dominic_ has joined the channel
[05:12] lukegalea has joined the channel
[05:13] david has joined the channel
[05:13] ryankirkman: From Before: (Does it make sense to want to send my response to a http request in 1 packet?) then ... (How do I do it? The reason I want this is it seems like I'm incurring a whole roundtrip every time I receive a packet / chunk), e.g. sometimes my request takes ~400ms to complete rather than ~200ms
[05:13] mjr_: Do you have 200ms RTT to your server?
[05:13] ryankirkman: Yes I do
[05:13] mjr_: Because that's a long time.
[05:13] mjr_: Oh, O
[05:13] mjr_: K
[05:14] ryankirkman: Australia -> America (San Francisco)
[05:14] ryankirkman: Ok, so I think it could be CouchDB
[05:14] ryankirkman: Rather than node
[05:14] tmzt_: oh sorry, didn't realize you were on the same topic
[05:15] ryankirkman: Because I am seeing the same behaviour when I do the raw http request to CouchDB
[05:15] ryankirkman: perhaps because the browser lists chunk in its TE header?
[05:16] sub_pop has joined the channel
[05:16] ryankirkman: CouchDB and Node.js are on the same server though, so I am thinking I could buffer CouchDB's response in Node and send it all at once
[05:17] ryankirkman: But I don't know if a) That is possible and b) How I would do it
[05:19] ryankirkman: This is the express.js wrapper around response: https://github.com/visionmedia/express/blob/master/lib/response.js
[05:21] kylefox has joined the channel
[05:22] windsurf_ has joined the channel
[05:22] Spion_ has joined the channel
[05:24] seivan has joined the channel
[05:25] rhdoenges:  /quit
[05:25] Evet_ has joined the channel
[05:26] Evet has joined the channel
[05:30] hij1nx has joined the channel
[05:33] lukegalea has joined the channel
[05:35] aways|bnc has joined the channel
[05:35] briznad has joined the channel
[05:35] void_ has joined the channel
[05:36] Astro has joined the channel
[05:39] whaka has joined the channel
[05:40] jimt has joined the channel
[05:41] paul_k has joined the channel
[05:44] lukegalea has joined the channel
[05:45] windsurf_ has left the channel
[05:46] mattikus has joined the channel
[05:48] mlncn has joined the channel
[05:49] fangel has joined the channel
[05:51] papyromancer has joined the channel
[05:51] jimt_ has joined the channel
[05:52] tedsuo has joined the channel
[05:53] mike5w3c has joined the channel
[05:55] sub_pop: wow so nStore got pwned by the changes in npm...
[05:55] tedsuo: sitting down to install 0.42, and noticed this build line in on the wiki: export JOBS=2 # optional, sets number of parallel commands.
[05:55] tedsuo: anyone know what parallel commands refers to?
[05:55] tbranyen: npmignore doesn't seem to work with npm install in a package folder to test
[05:55] tbranyen: weird
[05:56] Aria: tedsuo: number of concurrent compiles.
[05:56] Aria: (set JOBS= the number of cores you have, unless your disks are the bottleneck for compiling.)
[05:57] tedsuo: Aria: cool, so it just speeds up compiling if you have multiple processors?
[05:57] Aria: Yep.
[05:57] tedsuo: Aria: sweet thanks
[05:57] Aria: And in node, I imagine, it works right. (haven't tried)
[05:57] tbranyen: oh bam
[05:57] Aria: Some badly written makefiles in other systems may fail, but node should be good.
[05:57] tbranyen: i had no idea about that iether
[05:57] void_ has joined the channel
[06:00] lukegalea has joined the channel
[06:00] void_ has joined the channel
[06:01] JaMeSiTeGeN has joined the channel
[06:02] kawaz_air has joined the channel
[06:05] whaka has joined the channel
[06:06] theturtle321 has joined the channel
[06:08] zachsmith has joined the channel
[06:09] mjr_: It seems to spread out the V8 build as well
[06:12] yozgrahame has joined the channel
[06:12] JaMeSiTeGeN: Any idea on a method to have V8 as a Linux kernel module?
[06:12] JaMeSiTeGeN: And how can I be used.
[06:12] SamuraiJack has joined the channel
[06:13] lukegalea has joined the channel
[06:16] theturtle321 has joined the channel
[06:16] Murugaratham has joined the channel
[06:19] kawaz_air has joined the channel
[06:24] dthompson has joined the channel
[06:26] FireFly has joined the channel
[06:29] Emmanuel__: JaMeSiTeGeN: why would anyone want to do that ?
[06:29] Gregor has joined the channel
[06:30] Croms_ has joined the channel
[06:31] MikhX has joined the channel
[06:33] JaMeSiTeGeN: Emmanuel__: Simple even faster Javascript :) I'm working on a LinuxOS written is almost compleatly Javascript.
[06:34] tbranyen: JaMeSiTeGeN: i had that idea too
[06:34] tbranyen: just not smart enough to execute it
[06:34] tbranyen: i'd have to build on top of lfs or something
[06:34] KryosDion has joined the channel
[06:36] lukegalea has joined the channel
[06:36] tbranyen: time to dink around with this in windows
[06:36] tbranyen: fuuuuuck
[06:36] davidascher has joined the channel
[06:37] AAA_awright: JaMeSiTeGeN: Are you still set on doing that? Javascript doesn't have the instructions necessary to program for hardware, too
[06:37] JaMeSiTeGeN has left the channel
[06:39] nwhite has joined the channel
[06:39] siculars has joined the channel
[06:40] ryankirkman has joined the channel
[06:40] deepthawtz has joined the channel
[06:40] ryankirkman: If do socket.setNoDelay(), will I notice any speed increase with a Round-Trip Time of 200ms?
[06:41] ryankirkman: e.g. is node.js waiting for an ACK before sending any subsequent packets?
[06:41] muk_mb has joined the channel
[06:43] zakabird: i guess this has has already been discussed here? http://www.reddit.com/r/programming/comments/fyjod/is_nodejs_wrong/
[06:43] samcday: ryankirkman: Should do - setNoDelay turns off nagle's algorithm
[06:44] ryankirkman: samcday: From what I can see, I am getting 400ms response time on big result sets, vs 200ms response time for small result sets
[06:45] ryankirkman: samcday: I am using express.js and adding a module that does res.socket.setNoDelay()
[06:45] samcday: ryankirkman: Well it's extremely subjective to how you're generating said data, sending it, etc
[06:45] Aria: zakabird: not that I've seen, but that person is trying to do everything inline and not use the tools given.
[06:45] ryankirkman: Would that accomplish the right thing?
[06:45] ryankirkman: sacday: In short, I am using node.js as a proxy for couchdb (I need to do some business logic / authentication stuff)
[06:45] zakabird: just reading thru the comments on reddit now. kinda interesting
[06:46] dspree has joined the channel
[06:46] Croms has joined the channel
[06:46] ryankirkman: samcday: So both node.js and couchdb are on the same server.
[06:46] hassox has joined the channel
[06:46] dominic_ has joined the channel
[06:47] samcday: ryankirkman: Are you accessing Node in a RESTful manner? Requests in / data out in a single http request?
[06:48] ryankirkman: samcday: Yes
[06:48] samcday: ryankirkman: Well regarding the latency of a request, it really could be a number of things. You might be doing something blocking elsewhere in your app, or there might be something up with the way you're grabbing data from couchdb
[06:48] lukegalea has joined the channel
[06:49] samcday: Have you tried timing the express request handler and seeing how long that takes?
[06:49] ryankirkman: samcday: It is unlikely that I am blocking elsewhere. I am the only user at the moment.
[06:50] ryankirkman: samcday: I have X-Response headers turned on for express.js. I am getting under 20ms all the time, and usually under 10ms so that is insignificant compared to the total time.
[06:51] samcday: ryankirkman, yeah it is quite insignificant. I dunno, perhaps there's something up with http parser
[06:51] mjr_: I am currently quite stymied by this "socket hang up" in the http client.
[06:51] samcday: I really doubt the actual socket data transfer is taking 150+ ms
[06:52] ryankirkman: samcday: In wireshark it looked like it was waiting for ACKs from the client. I then used res.socket.setNoDelay(), but not too much seemed to change
[06:53] samcday: ryankirkman: Maybe express is doing something with chunking or it's overriding setnodelay. I'm not sure as I haven't worked with express much. Mayhaps try and just use http.Server directly first
[06:54] mraleph has joined the channel
[06:56] theturtle321 has left the channel
[06:57] aho has joined the channel
[06:58] davidascher has joined the channel
[06:58] sirkitree has joined the channel
[06:59] jankoprowski has joined the channel
[07:02] _jdalton has joined the channel
[07:02] Qix_ has joined the channel
[07:05] mjr_: zakabird: that blog post gets written about once a week.
[07:05] mjr_: What about servers that do heavy computation?  Node sucks!
[07:06] mjr_: The answer is either, don't do that in node, or use one of the many fine ways of spawning subprocesses.
[07:08] SubStack: or writing the heavy-lifting parts in C++ modules that can make use of the thread pool
[07:08] samcday: Yeah, EIO is your friend
[07:08] samcday: As I'm sort of learning right now
[07:08] mjr_: That's a bit painful, but certainly an option.
[07:08] breccan has joined the channel
[07:09] mjr_: Surely not as easy as, oh, I dunno, dnode?
[07:09] mjr_: I hear that's really easy.
[07:09] lukegalea has joined the channel
[07:09] SubStack: that's what I hear too
[07:14] Murugaratham has joined the channel
[07:14] windsurf_ has joined the channel
[07:14] windsurf_: I'm 'working on my first basic net server http://pastebin.com/aiktCzDm
[07:14] mattikus has joined the channel
[07:14] windsurf_: which part of that is considered a client connection
[07:15] windsurf_: say there are two remote clients that have connected to my server
[07:15] windsurf_: is each of those a 'socket' or a 'connectionListener' ?
[07:20] Qix_ has joined the channel
[07:20] lukegalea has joined the channel
[07:21] liar has joined the channel
[07:25] aways|bnc: ACTION Hi all How are you ?
[07:27] gh0stz has joined the channel
[07:28] pascalopitz has joined the channel
[07:29] flippyhead has joined the channel
[07:30] johans_ has joined the channel
[07:30] lukegalea has joined the channel
[07:30] johans_: join #jquery
[07:30] johans_ has left the channel
[07:31] mikeal has joined the channel
[07:31] Lagnus has joined the channel
[07:33] skohorn has joined the channel
[07:34] johndahlstrom has joined the channel
[07:35] jimt has joined the channel
[07:35] pquerna: ryah: scary. now you can.. detect failures.
[07:35] Yuffster_work has joined the channel
[07:36] pomodoro has joined the channel
[07:37] dguttman has joined the channel
[07:37] mscdex: whoa, i didn't know multipart/x-mixed-replace was available on more than just gecko-based browsers nowadays
[07:37] mscdex: awesome
[07:38] OhMeadhbh has joined the channel
[07:38] groom has joined the channel
[07:38] dubbe has joined the channel
[07:39] atiti has joined the channel
[07:39] pquerna: ryah: oh, for socket.io, heh, I thought you were still on the botnet... 
[07:40] SeanBannister: Just got my node.js server running 34,283 simultaneous connections, CPU and RAM is fine, must be a connection limit I'm hitting
[07:40] dominic_ has joined the channel
[07:40] amerine has joined the channel
[07:42] seivan has joined the channel
[07:45] unfo-: SeanBannister, ulimit
[07:45] SeanBannister: unfo-: already worked on ulimit and the kernel tcp settings
[07:45] unfo-: SeanBannister, check. rogerroger
[07:45] nyholt has joined the channel
[07:46] sechrist has joined the channel
[07:46] SeanBannister: unfo-: lol, you just made me google rogerroger until I figured out what you were saying :)
[07:47] unfo-: hahah ;D
[07:47] unfo-: SeanBannister, think star wars clone army ;)
[07:47] whaka has joined the channel
[07:48] ph^ has joined the channel
[07:48] sivy has joined the channel
[07:48] whaka has left the channel
[07:49] davidascher has joined the channel
[07:52] mikeal has joined the channel
[07:53] dominic_ has joined the channel
[07:54] zab has joined the channel
[07:55] dubbe: ACTION is away: I'm away (gone at 8th Mar, 08:55:18)
[07:55] dubbe: ACTION returns (I'm away [6s]) (total away time: 6s)
[07:55] dubbe: ACTION is away: I'm away (gone at 8th Mar, 08:55:45)
[07:55] fangel has joined the channel
[07:58] emattias has joined the channel
[07:58] zakabird: does a 'programmers blog' using node where 'code posts' can be exec'd via node sound like a good idea?
[07:58] ttpva has joined the channel
[07:58] troessner has joined the channel
[07:59] zomgbie has joined the channel
[07:59] zakabird: im trying to write one for myself:  organize things with a web app interface, launch compiles from button on page etc
[07:59] sveimac has joined the channel
[07:59] mape: zakabird: make sure to secure it though
[08:00] zakabird: yeah. need to look into vm's
[08:00] zakabird: but for now on local machine i *want* full control of fs and exec..
[08:01] lukegalea has joined the channel
[08:01] zakabird: i think the securing part may be hard. I know lua can be sandboxed well, not sure about python etc. Havn't used vm's... 
[08:02] zakabird: I think a web ide of sorts for many programming tasks might be very useful. 
[08:03] meso has joined the channel
[08:03] zakabird: it would be much easier to come up with new interfaces etc than it would in eclipse or whatever
[08:04] zakabird: if its a local or team tool, then i guess security would not be too much of an issue
[08:04] unfo-: dubbe`away, public away messages and away nicks :(
[08:04] zakabird: but im not sure
[08:05] zpao has joined the channel
[08:05] dubbe`away: unfo-, it is something my irc-client thought of of it's own... i am trying to get rid of it
[08:06] luke` has joined the channel
[08:06] dubbe: unfo-, i think i got it now! :)
[08:06] unfo-: dubbe, ^______^ the internets thank you ;)
[08:07] dubbe: ACTION thanks himself
[08:07] zakabird: can anybody see themselves having a use for something like that? people seem happy with the command line...
[08:09] TomY has joined the channel
[08:09] TomY_ has joined the channel
[08:10] dominic_ has joined the channel
[08:10] jimt has joined the channel
[08:10] swistak has joined the channel
[08:10] jesusabdullah: http://fuckyeahnouns.com/node.js It was actually relevant :D
[08:12] zum has joined the channel
[08:12] meso has joined the channel
[08:14] bergie has joined the channel
[08:14] V1 has joined the channel
[08:15] jimt_ has joined the channel
[08:15] Druid_ has joined the channel
[08:17] mekazu has joined the channel
[08:18] mAritz has joined the channel
[08:18] mkopras has joined the channel
[08:19] kawaz_air has joined the channel
[08:19] zakabird has joined the channel
[08:22] kal-EL_ has joined the channel
[08:24] sechrist: man
[08:24] sechrist: I want couchdb with the ops features of riak
[08:24] sechrist: why doesn't this exist
[08:24] sechrist: stupid cap theorem >:( 
[08:25] pietern has joined the channel
[08:26] v8bot has joined the channel
[08:28] mytrile has joined the channel
[08:30] Murugaratham has joined the channel
[08:30] jesusabdullah: What's a cap theorem?
[08:31] exitdescription: cap theorem 
[08:31] sechrist: some silly person thinks that we can't have consistency, availability, and persistence in a distributed system at the exact moment in time
[08:31] sechrist: hogwash
[08:32] unfo-: ^_^
[08:32] exitdescription: soft consistensy
[08:32] sechrist: one day this whole datastore problem will be solved
[08:32] sechrist: and we won't even think twice about what system to use
[08:32] mhausenblas has joined the channel
[08:32] sechrist: you throw all your shit into this magic system
[08:33] sechrist: and it scales infinitely and is simple to query with predictable response times
[08:33] sechrist: it will happen >:(
[08:33] exitdescription: as long as there's latency before the eventual writes to disk .. there won't be any solution 
[08:33] sechrist: no stop that
[08:33] sechrist: you gotta believeeeee
[08:34] dominic_ has joined the channel
[08:34] mhausenblas_ has joined the channel
[08:34] exitdescription: believe  ... ridiculous 
[08:34] jollyroger_ has joined the channel
[08:34] jesusabdullah: No no no,
[08:34] [AD]Turbo has joined the channel
[08:34] jesusabdullah: believeeeee!
[08:34] sechrist: FairyDustDB
[08:36] jesusabdullah: I believe in fairies! I believe in fairies!
[08:36] lukegalea has joined the channel
[08:36] ukev has joined the channel
[08:36] exitdescription: i believe we're all fairies
[08:37] jollyroger_ has joined the channel
[08:37] jollyroger_: hi everybody there
[08:37] [AD]Turbo: hi there
[08:37] dubbe: hi
[08:37] jollyroger_: fhi
[08:39] msucan has joined the channel
[08:40] xla has joined the channel
[08:41] jollyroger_: Guys, is dbsslayer the only way to use mysql with node.js?
[08:41] SubStack: sechrist: I think that thinking of the database as a separate system is part of the problem
[08:42] TomY has joined the channel
[08:42] jollyroger_: what you mean?
[08:42] sechrist: everything is a separate system
[08:42] SubStack: it should integrate well with the target language's existing data structures
[08:42] sechrist: there's separate systems within the same process
[08:42] sechrist: and thread even
[08:42] dominic_ has joined the channel
[08:43] Evet: i typed npm install npm for a fresh nodejs install
[08:43] Evet: yeah i did this.
[08:43] SubStack: querying should work with the same language that you're using
[08:43] SubStack: bonus points for being able to use local state in the query
[08:43] SubStack: have the computer figure out how that should work
[08:43] sechrist: that's what orms are for!
[08:43] sechrist: (and fail horribly at)
[08:44] prof-freud has joined the channel
[08:44] SubStack: you still get horrible impedence mismatch with ORMs
[08:45] Croms_ has joined the channel
[08:45] SubStack: I want to be able to do var x = 10; query(function (y) { return y < x }).on('data', fn)
[08:45] SubStack: plus object graph traversals
[08:46] SubStack: plus the ability to host transparent persistence on a subtree of the graph
[08:46] SubStack: using something akin to harmony proxies
[08:47] SubStack: nodedb
[08:48] adambeynon has joined the channel
[08:48] SubStack: couch views come pretty close I think
[08:48] SubStack: not that I've even used couch yet >_<
[08:49] romainhuet has joined the channel
[08:50] insin has joined the channel
[08:50] razvandimescu has joined the channel
[08:50] lukegalea has joined the channel
[08:51] sechrist: couch views are sweet
[08:52] sechrist: and they're why i'm on the fence with riak and couch
[08:52] SubStack: neo4j looks neat too
[08:52] sechrist: that sounds weird
[08:52] dubbe: i havn't really gotten the hang of couch after years of using mysql...
[08:52] sechrist: just because of it's name, it won't be adopted
[08:52] SubStack: oh wait java? blech
[08:52] SubStack: disregard that
[08:52] sechrist: lol
[08:53] breccan has joined the channel
[08:56] muhqu has joined the channel
[08:56] SamuraiJack has joined the channel
[08:57] tbassetto has joined the channel
[08:57] liquidproof has joined the channel
[08:59] exitdescription: but how do you maintain atomic transactions on couchdb ?
[09:02] jollyroger_: guys
[09:02] exitdescription: whut?
[09:03] jollyroger_: i'm freaking out, what is the easiest database to use with node.js?
[09:03] jollyroger_: mysql doesn't work goddamn, for some reason i can't install dbslayer on my server
[09:03] jollyroger_: weird strange errors
[09:03] dominic_ has joined the channel
[09:04] mscdex: jollyroger_: you've tried node-mysql?
[09:04] jollyroger_: mscdex: i read it's unstable
[09:04] v8bot has joined the channel
[09:04] mscdex: i haven't had any issues with it...
[09:04] mscdex: and it's used in a production environment
[09:05] jollyroger_: mscdex: so you recommend it over dbsslayer?
[09:05] mscdex: felixge uses it in production too
[09:05] mscdex: yeah
[09:05] jollyroger_: allright, i'll give it a try
[09:05] jollyroger_: mscdex: thanks
[09:05] markwubben has joined the channel
[09:05] Jonasbn_ has joined the channel
[09:06] Guest67719 has joined the channel
[09:06] mscdex: if you need Blob support, i have a patch for that for node-mysql
[09:07] jollyroger_: no thanks
[09:07] jollyroger_: not yet at least :)
[09:09] lukegalea has joined the channel
[09:10] erabuj has joined the channel
[09:12] mytrile has joined the channel
[09:13] sechrist: http://www.charliesheentopten.com/topmoment4.html 
[09:13] sechrist: what the hell
[09:15] nivoc has joined the channel
[09:16] andrewfff has joined the channel
[09:17] teemow has joined the channel
[09:20] lukegalea has joined the channel
[09:23] seivan_ has joined the channel
[09:26] brianmario has joined the channel
[09:26] aabt has joined the channel
[09:26] Remoun has joined the channel
[09:27] andrewfff has joined the channel
[09:30] flou has joined the channel
[09:31] CrazyGoogle has joined the channel
[09:32] seivan has joined the channel
[09:32] eventi has joined the channel
[09:34] jdalton has joined the channel
[09:34] jdalton has left the channel
[09:36] lukegalea has joined the channel
[09:40] muhqu_ has joined the channel
[09:40] pomodoro has joined the channel
[09:42] dsirijus has joined the channel
[09:43] ttpva_ has joined the channel
[09:43] mysterion` has joined the channel
[09:45] saikat has joined the channel
[09:47] lukegalea has joined the channel
[09:48] markwubben has joined the channel
[09:48] msch has joined the channel
[09:50] markwubben has joined the channel
[09:52] jbpros has joined the channel
[09:54] insin has joined the channel
[09:54] mhausenblas has joined the channel
[09:57] herbySk has joined the channel
[09:59] mike5w3c has joined the channel
[10:01] seivan has joined the channel
[10:02] lukegalea has joined the channel
[10:08] bzinger has joined the channel
[10:08] riven has joined the channel
[10:08] Egbert9e9 has joined the channel
[10:10] ph^ has joined the channel
[10:12] ph^_ has joined the channel
[10:12] lukegalea has joined the channel
[10:13] seivan has joined the channel
[10:14] aklt has joined the channel
[10:16] xla has joined the channel
[10:18] markwubben has joined the channel
[10:18] wav1 has joined the channel
[10:20] micheil has joined the channel
[10:21] pietern has joined the channel
[10:23] andrewfff has joined the channel
[10:25] Throlkim has joined the channel
[10:25] ttpva has joined the channel
[10:27] Adman65 has joined the channel
[10:27] davidc_ has joined the channel
[10:28] Nohryb has joined the channel
[10:28] dominic_ has joined the channel
[10:29] papyromancer has joined the channel
[10:33] atiti has joined the channel
[10:33] lukegalea has joined the channel
[10:35] Gruni has joined the channel
[10:35] saikat has joined the channel
[10:35] eyesUnclouded has joined the channel
[10:36] saikat has joined the channel
[10:38] Astro has joined the channel
[10:38] sveimac has joined the channel
[10:40] mcahornsirup has joined the channel
[10:41] jimt has joined the channel
[10:44] kristsk has joined the channel
[10:45] herenowcoder has joined the channel
[10:45] johndahlstrom has joined the channel
[10:46] seivan has joined the channel
[10:46] rooty has joined the channel
[10:48] jollyroger_ has joined the channel
[10:48] jollyroger_: I'm frustrated
[10:48] jollyroger_: dreamhost sucks
[10:49] rooty: they do so much
[10:51] unfo-: jollyroger_, how much does that cost?
[10:51] jollyroger_: 15$/month for a VPS
[10:51] jollyroger_: which is not too bad
[10:51] jollyroger_: still, they suck
[10:51] unfo-: hmmh
[10:52] jollyroger_ has left the channel
[10:53] aphelion has joined the channel
[10:53] unfo-: should check out micro instances from EC2.. cheaper than that
[10:53] unfo-: oh he left
[10:54] seivan has joined the channel
[10:55] breccan has joined the channel
[10:59] atiti has joined the channel
[10:59] jollyroger_ has joined the channel
[11:01] xsyn has joined the channel
[11:02] dve has joined the channel
[11:06] lukegalea has joined the channel
[11:06] samcday: God damn, someone needs to write a good C++ lib to abstract away all the boilerplate necessary with making async node stuff
[11:07] dve: samcday: have you tried the aysnc module?
[11:08] samcday: dve: Talking about C++ addons
[11:08] samcday: Working with V8 directly
[11:08] samcday: There's alot of boilerplate crap when you want to go into a thread
[11:08] dve: ahh i see
[11:09] samcday: But yeah I use that async module, it's fantastical =D
[11:09] squeeks_: unfo-: you realise a micro EC2 instance works out to be $14/mo, right?
[11:09] squeeks_: that's before S3, EBS, or whatever else you get on top.
[11:14] hellp has joined the channel
[11:17] siaoeh has joined the channel
[11:18] siaoeh: Does minifying server.js files give any difference on performance?
[11:18] guybrush: no
[11:18] jimt has joined the channel
[11:18] siaoeh: Will it give more overhead instead?
[11:18] guybrush: no
[11:19] siaoeh: It will be compiled n interpreted by nodejs?
[11:19] guybrush: minifying js only makes sense when it comes to delivering the code to the client
[11:19] guybrush: since bandwith is expensive
[11:19] samcday: Actually that's an interesting question though.
[11:19] guybrush: *width
[11:20] samcday: Google Closure compiler actually inspects javascript and does optimizations
[11:20] siaoeh: Was thinking along that line to somehow obfuscate it
[11:20] samcday: Wonder if there would be a way to make it work with node code lol
[11:20] floby has joined the channel
[11:20] lukus has joined the channel
[11:21] siaoeh: Obfuscate vs minifying does it impact performance at all?
[11:21] guybrush: optimizations != minification ^^
[11:21] guybrush: those are 2 different things
[11:21] samcday: guybrush: "The Closure Compiler compiles JavaScript into compact, high-performance code. The compiler removes dead code and rewrites and minimizes what's left so that it downloads and runs quickly"
[11:21] guybrush: right
[11:21] guybrush: so closure does minification AND optimazation
[11:21] samcday: Correct
[11:22] samcday: I was simply saying, if it does dead-code analysis and optimizes code paths
[11:22] samcday: That might actually have a benefit for larger node projects
[11:22] samcday: Would make debugging production code a bitch though
[11:22] guybrush: V8 does code-optimizations as far as I know
[11:22] samcday: Yes, but at compile time
[11:22] jetienne: samcday: you minify only working code. dont debug it
[11:23] samcday: Doing them at source level would save V8 having to do it
[11:23] knirhs has joined the channel
[11:23] Ian_Corne has joined the channel
[11:23] samcday: jetienne: When did I say you should minify untested code?
[11:23] Ian_Corne: Hello!
[11:23] masahiroh has joined the channel
[11:23] knirhs has left the channel
[11:23] jetienne: samcday: ?
[11:23] jetienne: samcday: unless you debug working code...
[11:23] samcday: I said deploying Closure-compiled code to production (where you would deploy it for a speed optimization) would make debugging harder if you have issues, as you won't get correct line numbers on stack traces etc.
[11:24] skohorn has joined the channel
[11:24] jetienne: samcday: relax you seems touchy
[11:24] jimt_ has joined the channel
[11:24] samcday: Not touchy at all :)
[11:24] guybrush: samcday: if there is any difference at all, it will be very minimal i guess
[11:25] siaoeh2 has joined the channel
[11:25] Ian_Corne: Anyone who can point me to node path?
[11:25] samcday: Well this is all moot really, as I doubt closure compiled code would work for node lol
[11:25] siaoeh2: Trains always cut network off don they
[11:25] guybrush: mmh closure-compiled code is valid javascript, isnt it?
[11:25] jetienne: Ian_Corne: what do you mean ?
[11:26] jetienne: guybrush: yes
[11:26] Ian_Corne: well i'm trying to install https://github.com/agnat/node_mdns/blob/master/README.textile
[11:26] siaoeh2: As I was saying minifying js codes is already some level of obfuscation
[11:26] Ian_Corne: and node-waf configure is failing on node path
[11:26] samcday: lol sorry to hijack you siaoeh2 
[11:26] siaoeh2: Lol np
[11:26] samcday: Yes minfying would obfuscate
[11:26] samcday: As all variable/fn names are removed
[11:26] siaoeh2: At least comments are gone
[11:27] samcday: well, replaced with compact ones
[11:27] unfo-: squeeks_, if you use it on-demand sure, but a 1 year plan reserved is cheaper
[11:27] samcday: So even if you beautified the minified JS, it'd still be fairly unreadable
[11:27] siaoeh2: Sometimes u just dun find the need for ppl to know how things are done
[11:27] jetienne: Ian_Corne: pastbin your error
[11:27] samcday: Well if we're talking about Node code though, I don't see the point. 
[11:28] siaoeh2: But if obfuscation do not impact any performance, I'd rather obfuscate 
[11:28] samcday: If you're not gonna make it open source, it's not that easy for someone to get access to the node.js source code
[11:28] mike5w3c has joined the channel
[11:28] MikhX has joined the channel
[11:28] siaoeh2: Wat if it's a freelance work n I dun want my clients to noe how it's done
[11:29] siaoeh2: Or if they have the full source and decide to engage some cheaper vendors
[11:29] siaoeh2: Just thinking along that line lol
[11:29] samcday: Good point I suppose.
[11:29] samcday: Would be interesting to see something like Zend encoder for Node!
[11:30] Ian_Corne: http://paste.ubuntu.com/577418/
[11:30] siaoeh2: Although it defeats the opensource spirit but uglifying it n releasing it elsewhere is another thing
[11:30] Ian_Corne: jetienne: ^^
[11:30] siaoeh2: Maybe someone shud test n blog about it lol
[11:30] samcday: Well, yeah... But if yuo'rer doing freelance work, ethically (and probably legally), you should be handing over something they can use.
[11:31] samcday: If they've paid you for deliverables, you can't really put them in vendor lock.
[11:31] siaoeh2: It depends on t&c I guess
[11:31] jetienne: inarru: dns_sd.h this is what you need
[11:32] Ian_Corne: ah
[11:32] q_no has joined the channel
[11:32] siaoeh2: Or wat if they let someone else handle another phase and screws up something n u have to come in to fix their part n redo wat they supposed to
[11:32] Ian_Corne: and any idea in which package I can find that? (ubuntu)
[11:32] jetienne: Ian_Corne: looking
[11:32] Ian_Corne: ok thanks!
[11:33] siaoeh2: Maybe I shud read up more or ask the contributors if that makes any difference in performance lol
[11:33] dsirijus has joined the channel
[11:33] jetienne: sudo apt-get install libavahi-compat-libdnssd-dev  <- Ian_Corne try this
[11:34] Ian_Corne: yes I found it too
[11:34] Ian_Corne: thanks :)
[11:34] jetienne: Ian_Corne: it works ?
[11:34] Ian_Corne: configure works now
[11:34] Ian_Corne: but
[11:34] Ian_Corne: Checking for function DNSServiceGetAddrInfo : not found 
[11:34] Ian_Corne: but it worked with npm too now
[11:35] Ian_Corne: so it's all good :))
[11:35] jetienne: Ian_Corne: cool :)
[11:35] Ian_Corne: I'll keep lurking here
[11:36] Ian_Corne: anyone know of a ppa for nodejs? the one in the natty repo is quite old
[11:37] jimt has joined the channel
[11:39] jetienne: sudo add-apt-repository ppa:jerome-etienne/neoip && sudo apt-get update && sudo apt-get install nodejs
[11:39] jetienne: Ian_Corne: it will install 0.4.2
[11:39] jetienne: Ian_Corne: i maintain the stable branch in .deb
[11:39] Ian_Corne: also for the main archive?
[11:39] jetienne: Ian_Corne: nope just the ppa
[11:40] jetienne: main archive got many rules which make recent node.js impossible
[11:40] Ian_Corne: oh
[11:40] Ian_Corne: ok
[11:40] erabuj has joined the channel
[11:40] Ian_Corne: I've installed it from source now, so it's ok but it's good to know :)
[11:40] jetienne: ok
[11:41] Ian_Corne: since there's no uninstall created
[11:41] p0ns has joined the channel
[11:43] jetienne: Ian_Corne: cd /path/to/node && make uninstall <- this should work
[11:44] floby: jetienne: ping
[11:44] jetienne: floby: pon g
[11:44] floby: jetienne: I'm not sure but I think you speak french right ?
[11:44] jetienne: floby: i do
[11:44] SamuraiJack_ has joined the channel
[11:44] Ian_Corne: aha ok
[11:45] floby: jetienne: cool, do you know if there is any repository for the translation of nodejs docs ?
[11:45] jollyroger_ has joined the channel
[11:45] aphelion has joined the channel
[11:45] d0k has joined the channel
[11:45] Ian_Corne: aha jetienne you don't have a natty build yet :)
[11:45] floby: jetienne: because I've been starting on my own a french branch on my fork
[11:45] jetienne: floby: nope. i dont. i spoke to a guy in charge of node doc. i dont remember his name. isaacs were talking about translation yesterday. i dunno more
[11:46] jetienne: floby: good :)
[11:46] jetienne: Ian_Corne: natty = ?
[11:46] Ian_Corne: ubuntu 11.04
[11:46] Ian_Corne: development version
[11:47] jetienne: ah ok, no :) i stick to stable everything :)
[11:47] floby: jetienne: so if you or another french speaker want to help, you can pull request me ;)
[11:47] jetienne: floby: ask on #parisjs, maybe some people may be interested. there is a mailing list too
[11:47] floby: jetienne: good idea
[11:48] seivan_ has joined the channel
[11:50] jimt has joined the channel
[11:51] Ian_Corne: well jetienne it's not really an issue, I just use the maverick ppa then :)
[11:51] malkomalko has joined the channel
[11:52] jetienne: :)
[11:53] fly-away has joined the channel
[11:54] devrim has joined the channel
[11:55] RusAlex has joined the channel
[11:55] RusAlex: hi progressive guys
[11:57] masahiroh has joined the channel
[11:58] fermion has joined the channel
[11:59] kristsk: uh huh
[11:59] anno^da has joined the channel
[12:00] teemow has joined the channel
[12:02] anno^da has left the channel
[12:06] tc77 has joined the channel
[12:06] seivan has joined the channel
[12:07] mickaelz has joined the channel
[12:09] fermion has joined the channel
[12:11] eee_c has joined the channel
[12:12] ennay has joined the channel
[12:18] ennay has left the channel
[12:20] mraleph has joined the channel
[12:21] nyholt has joined the channel
[12:23] FireFly|n900 has joined the channel
[12:24] wav1 has joined the channel
[12:25] dberlinger has joined the channel
[12:30] lukegalea has joined the channel
[12:32] __tosh has joined the channel
[12:39] fisted has joined the channel
[12:39] kkaefer has joined the channel
[12:39] chiel has joined the channel
[12:39] stepheneb has joined the channel
[12:39] FunkyFortune has joined the channel
[12:39] Gruni has joined the channel
[12:39] adelcambre has joined the channel
[12:39] Bonuspunkt has joined the channel
[12:39] andrewfff has joined the channel
[12:39] iFire has joined the channel
[12:39] mlncn has joined the channel
[12:39] __tosh has joined the channel
[12:39] dberlinger has joined the channel
[12:39] wav1 has joined the channel
[12:39] FireFly|n900 has joined the channel
[12:39] nyholt has joined the channel
[12:39] mraleph has joined the channel
[12:39] eee_c has joined the channel
[12:39] fermion has joined the channel
[12:39] seivan has joined the channel
[12:39] tc77 has joined the channel
[12:39] teemow has joined the channel
[12:39] RusAlex has joined the channel
[12:39] devrim has joined the channel
[12:39] fly-away has joined the channel
[12:39] jimt has joined the channel
[12:39] d0k has joined the channel
[12:39] jollyroger_ has joined the channel
[12:39] SamuraiJack_ has joined the channel
[12:39] erabuj has joined the channel
[12:39] q_no has joined the channel
[12:39] MikhX has joined the channel
[12:39] mike5w3c has joined the channel
[12:39] Ian_Corne has joined the channel
[12:39] lukus has joined the channel
[12:39] hellp has joined the channel
[12:39] xsyn has joined the channel
[12:39] atiti has joined the channel
[12:39] rooty has joined the channel
[12:39] johndahlstrom has joined the channel
[12:39] herenowcoder has joined the channel
[12:39] kristsk has joined the channel
[12:39] mcahornsirup has joined the channel
[12:39] Astro has joined the channel
[12:39] eyesUnclouded has joined the channel
[12:39] papyromancer has joined the channel
[12:39] dominic_ has joined the channel
[12:39] davidc_ has joined the channel
[12:39] Adman65 has joined the channel
[12:39] ttpva has joined the channel
[12:39] Throlkim has joined the channel
[12:39] pietern has joined the channel
[12:39] markwubben has joined the channel
[12:39] xla has joined the channel
[12:39] aklt has joined the channel
[12:39] ph^_ has joined the channel
[12:39] Egbert9e9 has joined the channel
[12:39] bzinger has joined the channel
[12:39] herbySk has joined the channel
[12:39] mhausenblas has joined the channel
[12:39] mysterion` has joined the channel
[12:39] muhqu has joined the channel
[12:39] CrazyGoogle has joined the channel
[12:39] flou has joined the channel
[12:39] Remoun has joined the channel
[12:39] aabt has joined the channel
[12:39] nivoc has joined the channel
[12:39] Guest67719 has joined the channel
[12:39] Jonasbn_ has joined the channel
[12:39] v8bot has joined the channel
[12:39] liquidproof has joined the channel
[12:39] tbassetto has joined the channel
[12:39] romainhuet has joined the channel
[12:39] adambeynon has joined the channel
[12:39] TomY has joined the channel
[12:39] msucan has joined the channel
[12:39] ukev has joined the channel
[12:39] [AD]Turbo has joined the channel
[12:39] kal-EL_ has joined the channel
[12:39] mkopras has joined the channel
[12:39] mAritz has joined the channel
[12:39] mekazu has joined the channel
[12:39] Druid_ has joined the channel
[12:39] V1 has joined the channel
[12:39] bergie has joined the channel
[12:39] zum has joined the channel
[12:39] swistak has joined the channel
[12:39] luke` has joined the channel
[12:39] troessner has joined the channel
[12:39] emattias has joined the channel
[12:39] fangel has joined the channel
[12:39] mikeal has joined the channel
[12:39] sivy has joined the channel
[12:39] sechrist has joined the channel
[12:39] dubbe has joined the channel
[12:39] groom has joined the channel
[12:39] Yuffster_work has joined the channel
[12:39] Lagnus has joined the channel
[12:39] liar has joined the channel
[12:39] Qix_ has joined the channel
[12:39] mattikus has joined the channel
[12:39] aho has joined the channel
[12:39] dspree has joined the channel
[12:39] ryankirkman has joined the channel
[12:39] siculars has joined the channel
[12:39] Guest30242 has joined the channel
[12:39] FireFly has joined the channel
[12:39] dthompson has joined the channel
[12:39] aways|bnc has joined the channel
[12:39] Spion_ has joined the channel
[12:39] sub_pop has joined the channel
[12:39] mjr_ has joined the channel
[12:39] cognominal has joined the channel
[12:39] inimino has joined the channel
[12:39] brianc has joined the channel
[12:39] Nacho has joined the channel
[12:39] rudebwoy has joined the channel
[12:39] elliottcable has joined the channel
[12:39] [tm] has joined the channel
[12:39] bruse has joined the channel
[12:39] framlin has joined the channel
[12:39] apoc has joined the channel
[12:39] olegp has joined the channel
[12:39] raidfive has joined the channel
[12:39] bartt has joined the channel
[12:39] jacobolus has joined the channel
[12:39] wilmoore has joined the channel
[12:39] exitdescription has joined the channel
[12:39] sprout has joined the channel
[12:39] AAA_awright has joined the channel
[12:39] bradleymeck2 has joined the channel
[12:39] matyr_ has joined the channel
[12:39] jetheredge has joined the channel
[12:39] stalled has joined the channel
[12:39] riven has joined the channel
[12:39] [[zz]] has joined the channel
[12:39] terite has joined the channel
[12:39] julienXX has joined the channel
[12:39] fusspawn has joined the channel
[12:39] hunterloftis has joined the channel
[12:39] randallagordon has joined the channel
[12:39] kenbolton has joined the channel
[12:39] polyrhythmic has joined the channel
[12:39] jlewis has joined the channel
[12:39] xSmurf has joined the channel
[12:39] omni5cience has joined the channel
[12:39] tbranyen has joined the channel
[12:39] dschn has joined the channel
[12:39] gsf has joined the channel
[12:39] jiveB has joined the channel
[12:39] orospakr has joined the channel
[12:39] Nevtus has joined the channel
[12:39] Chunk has joined the channel
[12:39] nilyt has joined the channel
[12:39] pedrobelo has joined the channel
[12:39] SeanBannister has joined the channel
[12:39] tg has joined the channel
[12:39] jetienne has joined the channel
[12:39] MrNibblesFreenod has joined the channel
[12:39] sav has joined the channel
[12:39] c4milo has joined the channel
[12:39] forzan has joined the channel
[12:39] jjardon has joined the channel
[12:39] gf3 has joined the channel
[12:39] Twelve-60 has joined the channel
[12:39] comster has joined the channel
[12:39] abraham has joined the channel
[12:39] aconran has joined the channel
[12:39] cce_ has joined the channel
[12:39] Aikar has joined the channel
[12:39] eresair has joined the channel
[12:39] pastak has joined the channel
[12:39] gormer has joined the channel
[12:39] slloyd has joined the channel
[12:39] mrdonald has joined the channel
[12:39] killfill has joined the channel
[12:39] aelaguiz_ has joined the channel
[12:39] L4rd0 has joined the channel
[12:39] bwinton has joined the channel
[12:39] throughnothing has joined the channel
[12:39] dylang has joined the channel
[12:39] bradleymeck has joined the channel
[12:39] daleharvey has joined the channel
[12:39] boaz has joined the channel
[12:39] zzak has joined the channel
[12:39] Vertice has joined the channel
[12:39] PyroPeter has joined the channel
[12:39] larsemil has joined the channel
[12:39] phiggins has joined the channel
[12:39] squeeks_ has joined the channel
[12:39] Nomon has joined the channel
[12:39] mif86 has joined the channel
[12:39] ntelford has joined the channel
[12:39] raz has joined the channel
[12:39] sugardave has joined the channel
[12:39] arkx has joined the channel
[12:39] slickplaid has joined the channel
[12:39] jtrally has joined the channel
[12:39] heavysixer has joined the channel
[12:39] justis_ has joined the channel
[12:39] strimpaz_ has joined the channel
[12:39] shajith_ has joined the channel
[12:39] mrkurt has joined the channel
[12:39] vilhonen_ has joined the channel
[12:39] dispalt_ has joined the channel
[12:39] sugyan_ has joined the channel
[12:39] jesusabdullah has joined the channel
[12:39] __sri has joined the channel
[12:39] sstreza has joined the channel
[12:39] gredman_ has joined the channel
[12:39] caligula__ has joined the channel
[12:39] meso_ has joined the channel
[12:39] disq has joined the channel
[12:39] hobs has joined the channel
[12:39] Atmoz has joined the channel
[12:39] loktar has joined the channel
[12:39] kawaz_home has joined the channel
[12:39] mischief has joined the channel
[12:39] unlink has joined the channel
[12:39] sonnym has joined the channel
[12:39] jeromegn has joined the channel
[12:39] narph has joined the channel
[12:39] TheCowboy has joined the channel
[12:39] kloeri has joined the channel
[12:39] freeformz has joined the channel
[12:39] ruxpin has joined the channel
[12:39] mikegerwitz has joined the channel
[12:39] ryah has joined the channel
[12:39] robarnold has joined the channel
[12:39] zmack has joined the channel
[12:39] devinus has joined the channel
[12:39] sadiq has joined the channel
[12:39] mikeputnam has joined the channel
[12:39] adamholt has joined the channel
[12:39] Martz has joined the channel
[12:39] ekes has joined the channel
[12:39] vuliev has joined the channel
[12:39] persson_ has joined the channel
[12:39] aakour_ has joined the channel
[12:39] chilts has joined the channel
[12:39] russell_h has joined the channel
[12:39] grncdr has joined the channel
[12:39] MiiCode2 has joined the channel
[12:39] wang has joined the channel
[12:39] Crshman has joined the channel
[12:39] pkrumins has joined the channel
[12:39] gkatsev has joined the channel
[12:39] Sembianc1 has joined the channel
[12:39] ajpiano has joined the channel
[12:39] benatkin has joined the channel
[12:39] rajab has joined the channel
[12:39] sstephenson has joined the channel
[12:39] mattijs_ has joined the channel
[12:39] mscdex has joined the channel
[12:39] temp01 has joined the channel
[12:39] peol has joined the channel
[12:39] zilt has joined the channel
[12:39] cloudhead has joined the channel
[12:39] beawesomeinstead has joined the channel
[12:39] dans has joined the channel
[12:39] bengl has joined the channel
[12:39] cyraxx has joined the channel
[12:39] RichardJ has joined the channel
[12:39] brianloveswords has joined the channel
[12:39] cainus has joined the channel
[12:39] gwoo has joined the channel
[12:39] SvenDowideit has joined the channel
[12:39] JeremyCL has joined the channel
[12:39] Sami_ZzZ_ has joined the channel
[12:39] triel has joined the channel
[12:39] wdperson has joined the channel
[12:39] mediacoder has joined the channel
[12:39] pt_tr has joined the channel
[12:39] mrlase has joined the channel
[12:39] hoodoos has joined the channel
[12:39] ringomanatee has joined the channel
[12:39] borgling has joined the channel
[12:39] asdfsafdsa has joined the channel
[12:39] mnbvasd has joined the channel
[12:39] jan____ has joined the channel
[12:39] rbranson has joined the channel
[12:39] slaskis has joined the channel
[12:39] viirya has joined the channel
[12:39] ivan has joined the channel
[12:39] joshthecoder has joined the channel
[12:39] couchquid has joined the channel
[12:39] figital has joined the channel
[12:39] sigue has joined the channel
[12:39] jimmyz2 has joined the channel
[12:39] oninoshiko has joined the channel
[12:39] samcday has joined the channel
[12:39] boucher has joined the channel
[12:39] mlangenberg has joined the channel
[12:39] aegir has joined the channel
[12:39] CIA-75 has joined the channel
[12:39] akl has joined the channel
[12:39] Tobias| has joined the channel
[12:39] sth has joined the channel
[12:39] blowery has joined the channel
[12:39] deoxxa has joined the channel
[12:39] tsyd has joined the channel
[12:39] ollie has joined the channel
[12:39] skrug has joined the channel
[12:39] tmm1 has joined the channel
[12:39] halfhalo has joined the channel
[12:39] jakob has joined the channel
[12:39] Guest42813 has joined the channel
[12:39] cferris has joined the channel
[12:39] konobi has joined the channel
[12:39] cilantro has joined the channel
[12:39] gmci has joined the channel
[12:39] DoNaLd` has joined the channel
[12:39] Connorhd has joined the channel
[12:39] dantalizing has joined the channel
[12:39] L_star has joined the channel
[12:39] moneal_ has joined the channel
[12:39] walkah has joined the channel
[12:39] Blackguard has joined the channel
[12:39] sr has joined the channel
[12:39] maru_cc__ has joined the channel
[12:39] lstoll has joined the channel
[12:39] superdug has joined the channel
[12:39] barodeur has joined the channel
[12:39] tswicegood has joined the channel
[12:39] Epeli has joined the channel
[12:39] chapel has joined the channel
[12:39] mlins has joined the channel
[12:39] astralab_ has joined the channel
[12:39] brianm has joined the channel
[12:39] gaYak has joined the channel
[12:39] jwm has joined the channel
[12:39] linkmauve has joined the channel
[12:39] Minos has joined the channel
[12:39] mmso has joined the channel
[12:39] andoma has joined the channel
[12:39] themcgruff has joined the channel
[12:39] stynx_ has joined the channel
[12:39] termie has joined the channel
[12:39] rjack has joined the channel
[12:39] geoffeg_ has joined the channel
[12:39] hdon has joined the channel
[12:39] zaiste has joined the channel
[12:39] paulrollo has joined the channel
[12:39] tanepiper has joined the channel
[12:39] MikeW has joined the channel
[12:39] webben has joined the channel
[12:39] mape has joined the channel
[12:39] RushPL has joined the channel
[12:39] franck34 has joined the channel
[12:39] jakeskik has joined the channel
[12:39] ybit has joined the channel
[12:39] zined_ has joined the channel
[12:39] kei has joined the channel
[12:39] hoodow has joined the channel
[12:39] brainproxy_ has joined the channel
[12:39] Slashbunny has joined the channel
[12:39] MaSch has joined the channel
[12:39] cha0s has joined the channel
[12:39] Prometheus has joined the channel
[12:39] rphillips_ has joined the channel
[12:39] pzich has joined the channel
[12:39] spaceinvader has joined the channel
[12:39] matt_c has joined the channel
[12:39] lianj_ has joined the channel
[12:39] jspiros has joined the channel
[12:39] KrooniX has joined the channel
[12:39] leoric has joined the channel
[12:39] rjbs- has joined the channel
[12:39] tmzt_ has joined the channel
[12:39] pekim_ has joined the channel
[12:39] janne- has joined the channel
[12:39] cnu has joined the channel
[12:39] TheEmpath2 has joined the channel
[12:39] wao has joined the channel
[12:39] kawaz_work has joined the channel
[12:39] fromz has joined the channel
[12:39] zhware has joined the channel
[12:39] ysynopsis has joined the channel
[12:39] FMJaggy has joined the channel
[12:39] marienz has joined the channel
[12:39] Kudos has joined the channel
[12:39] nuba has joined the channel
[12:39] rednul has joined the channel
[12:39] marcab has joined the channel
[12:39] jbergstroem has joined the channel
[12:39] neshaug has joined the channel
[12:39] joeshaw has joined the channel
[12:39] criswell has joined the channel
[12:39] s0enke has joined the channel
[12:39] ashb has joined the channel
[12:39] doki_pen has joined the channel
[12:39] doffm has joined the channel
[12:39] shachaf has joined the channel
[12:39] chrisdickinson has joined the channel
[12:39] addisonj has joined the channel
[12:39] meder has joined the channel
[12:39] Lorentz has joined the channel
[12:39] tomaw has joined the channel
[12:39] onar has joined the channel
[12:39] crodas has joined the channel
[12:39] benvie has joined the channel
[12:39] ivanfi has joined the channel
[12:39] tylergillies has joined the channel
[12:39] micxer has joined the channel
[12:39] zedas has joined the channel
[12:39] thermal has joined the channel
[12:39] petermanser_ has joined the channel
[12:39] gbot2 has joined the channel
[12:39] johnnywengluu has joined the channel
[12:39] justin____ has joined the channel
[12:39] Kinbote_ has joined the channel
[12:39] keeto has joined the channel
[12:39] ircretary has joined the channel
[12:39] badas has joined the channel
[12:39] eirikur has joined the channel
[12:39] ddollar has joined the channel
[12:39] Ezku\ has joined the channel
[12:39] inarru has joined the channel
[12:39] synoptase`off has joined the channel
[12:39] steadicat has joined the channel
[12:39] tux21b has joined the channel
[12:39] voodootikigod has joined the channel
[12:39] chrischris_dcon has joined the channel
[12:39] beppu has joined the channel
[12:39] wereHamster has joined the channel
[12:39] jperras has joined the channel
[12:39] er1c_ has joined the channel
[12:39] Kami_ has joined the channel
[12:39] wink_ has joined the channel
[12:39] guybrush has joined the channel
[12:39] coffeecup has joined the channel
[12:39] Pilate has joined the channel
[12:39] scoates has joined the channel
[12:39] morgabra has joined the channel
[12:39] stride has joined the channel
[12:39] thedjinn has joined the channel
[12:39] pquerna has joined the channel
[12:39] sucaba-524 has joined the channel
[12:39] sanslocust has joined the channel
[12:39] Draggor has joined the channel
[12:39] SubStack has joined the channel
[12:39] krazyivan has joined the channel
[12:39] niclone has joined the channel
[12:39] dorkitud1 has joined the channel
[12:39] roger_raymond has joined the channel
[12:39] hipe has joined the channel
[12:39] bluegene has joined the channel
[12:39] drudge has joined the channel
[12:39] NickP has joined the channel
[12:39] Hadaka has joined the channel
[12:39] nail_ has joined the channel
[12:39] frodenius has joined the channel
[12:39] DoubleV has joined the channel
[12:39] naneau has joined the channel
[12:39] darklajid has joined the channel
[12:39] augustl has joined the channel
[12:39] kig has joined the channel
[12:39] Roelven has joined the channel
[12:39] Throlkim has joined the channel
[12:41] lukegalea has joined the channel
[12:44] hij1nx has joined the channel
[12:46] L4rd0: which mysql module do yall recommend?
[12:47] L4rd0: looking at dbslayer atm, but bit worried that it has been in beta since 2007 
[12:47] kristsk: i have this in production: https://github.com/Sannis/node-mysql-libmysqlclient
[12:48] RusAlex: kristsk: in which production ?
[12:49] L4rd0: thanks kristsk, probably a safer option...
[12:49] kristsk: in production which makes a some money.
[12:49] eventi has joined the channel
[12:51] [AD]Turbo has joined the channel
[12:54] lukegalea has joined the channel
[13:01] siaoeh2 has joined the channel
[13:02] Croms has joined the channel
[13:02] gozala has joined the channel
[13:03] zomgbie has joined the channel
[13:03] dnolen has joined the channel
[13:03] Croms_ has joined the channel
[13:04] lukegalea has joined the channel
[13:07] eventi: express connect dependency hell
[13:07] mauritslamers has joined the channel
[13:08] dubbe: eventi: agreed!
[13:08] eventi: copied all versions from laptop to ubuntu, getting https not found
[13:08] eventi: from connect.js
[13:08] eventi: ugh
[13:09] eventi: I'm even doing epress@1.0.7 and connect@0.5.10
[13:09] eventi: *express
[13:09] dubbe: try node 0.4.1
[13:10] eventi: yeah? I tried 0.4.2 and 0.4.0 (laptop version) and stable
[13:10] eventi: might as well
[13:10] dubbe: i got it working with node 0.4.1 express@1.0.7 and connect@0.5.10
[13:10] eventi: i had 0.4.0 in dev
[13:10] eventi: ACTION is now saying "Works in dev"
[13:11] eventi: hurts as a sysadmin to say that
[13:11] dubbe: :)
[13:11] eventi: what are you using for diff node versions? I'm using nave
[13:11] eventi: seems ok
[13:12] eventi: no.de seems to do some magic with environments
[13:12] floby has joined the channel
[13:13] eb4890 has joined the channel
[13:13] hij1nx has joined the channel
[13:14] dubbe: i installed something called n
[13:14] dubbe: i am pretty noob with node.js, started last week :)
[13:14] hij1nx has joined the channel
[13:15] dberlinger has joined the channel
[13:15] jmar777 has joined the channel
[13:15] eventi: ugh
[13:15] eventi: no dice
[13:15] eventi: I'm going to try npm bundle
[13:17] lukegalea has joined the channel
[13:17] dubbe: yeah, i used npm to install n, express and connect
[13:18] jbpros has joined the channel
[13:19] Sembiance: hrm, I think I'm the only one who doesn't use npm.
[13:20] Sembiance: I just like being able to control exactly where the source is, what version it is (latest git clone or a fork, etc). Plus I've come across 1 or 2 packages where the author would warn users not to use the npm version for various reasons. Seems like it's just all around safer to handle it manually.
[13:21] dubbe: Sembiance: I like the simplicity of it
[13:21] Sembiance: I guess maybe in a year or two when there is dependencies all over the place and I'm using a ton more modules than I do today (5) then maybe I'll use it :)
[13:21] eventi: seems like I'll have to go that route
[13:21] kriszyp has joined the channel
[13:22] dubbe: eventi: have you tried express@1.0.8 from git?
[13:22] eventi: not yet
[13:22] eventi: I'll try anything at this point
[13:23] squeeks_: I hear cocaine is a hell of a drug
[13:23] dubbe: eventi: try it... it should have better support newer node and connect, the reason i couldn't insall it was npm's fault
[13:23] floby has joined the channel
[13:23] eventi: I just finished cloning it - gotta switch trains - i'll keep you posted
[13:24] astoon has joined the channel
[13:24] siaoeh2 has joined the channel
[13:25] gormer has joined the channel
[13:31] eventi has joined the channel
[13:31] jimt_ has joined the channel
[13:35] tiemonster has joined the channel
[13:38] lukegalea has joined the channel
[13:38] zachsmith has joined the channel
[13:40] Aikar: hmm, this cloud9 has alot of potential but still alot to go
[13:40] xandrews has joined the channel
[13:42] samcday: Aikar, Agreed
[13:42] samcday: It's pretty amazing already imo, but still lacking a lot of stuff before I'd move from Eclipse
[13:43] Aikar: lil bold to say "all the features eclipse etc provides" and then it doesnt even have code completion yet lol....
[13:43] Aikar: thats... kind of a big thing
[13:43] samcday: Yeah it is
[13:44] samcday: Also I wasn't necessarily saying it has to have *everything* Eclipse does
[13:44] samcday: I don't use even 10% of the shit Eclipse provides lol
[13:44] samcday: But right now Cloud9 is like, 0.001% of Eclipse :P
[13:44] eventi: dubbe: no dice
[13:44] Aikar: oh your one of the devs? lol. well i mean that code completion is like a first requirement of an ide
[13:44] samcday: When it gets to 0.005% of Eclipse it will be fantastic!
[13:44] samcday: No I'm not hehe
[13:44] eventi: now arriving in penn station NY
[13:44] dubbe: eventi: darn
[13:44] samcday: I'm agreeing that code completion is a big deal, and also a big development project
[13:44] eventi: ughh deps suck
[13:44] Aikar: ah
[13:45] perlmonkey2 has joined the channel
[13:45] samcday: Then again - code completion in Eclipse javascript IDE sucks man.
[13:45] samcday: If you don't use prototypes for all your declarations, most of your stuff won't come up in code complete anyway
[13:45] Aikar: the way you said "also I wasn't necessarily saying" i thought you meant you wrote the line on the cloud9 desc :P
[13:45] samcday: orite! lol
[13:45] samcday: bleary eyed - sorry for any confusion
[13:45] samcday: i'm confusing myself just by staying awake tbh
[13:46] Aikar: yeah i only tested PHP files so far, i just got it working. master is broken, but tag 0.2.0 least semi works
[13:46] samcday: I got a beta invite
[13:46] samcday: The beta is fairly stable, there must be stuff on the site that isn't in the github
[13:46] samcday: or something
[13:46] Aikar: seems lil silly to have a 'private beta' for FOSS...
[13:46] fumanchu182 has joined the channel
[13:47] samcday: holy shit
[13:47] samcday: the website has already changed
[13:47] samcday: They're al;ready selling it
[13:47] mikegerwitz: Aikar: not entirely. That's the whole cathedral vs bazaar concept
[13:47] Aikar: "hey lets release the code in its current state and let people test, but only let a few people test the REAL latest changes, and lets leave master in a broken state"... doesnt make much sense lol
[13:47] floby: viù does code completion =)
[13:47] floby: vim*
[13:48] samcday: Well, they're obviously trying to make a product out of it, which is fair enough
[13:48] Emmanuel__ has joined the channel
[13:48] Aikar: samcday: yeah selling it with them hosting the process
[13:48] samcday: Good on them for releasing so much as open source ;D
[13:48] Aikar: free if you run your own
[13:48] Sorella has joined the channel
[13:48] Aikar: or free for open source projects hosted on their server
[13:48] mikegerwitz: floby++ :)
[13:48] samcday: Mmm
[13:48] jimt has joined the channel
[13:48] Aikar: afk going to work, be back in 25~ :P
[13:49] samcday: haha =D
[13:49] floby: mikegerwitz: although I don't use it. for javascript I mainly use snipmate and the built-in silly code completion.
[13:50] floby: "code completion" being "word completion"
[13:51] davidc_ has joined the channel
[13:52] mikegerwitz: floby: Heh, ah :) I use vim for everything that can be opened in a text editor
[13:52] paul_k has joined the channel
[13:52] floby: mikegerwitz: same here, I read my logs in vim rather than grepping them
[13:53] Jonasbn_ has joined the channel
[13:53] mikegerwitz: floby: Ah I don't go so far as to do that (unless I'm piping grep output to it, but I normally just use less unless I want syntax highlighting)
[13:54] FireFly|n900 has joined the channel
[13:55] floby: mikegerwitz: true. I only do it when people are watching so I can look cool at mastering my vim
[13:56] jlecker has joined the channel
[13:56] mikegerwitz: floby: haha 
[13:59] Nohryb has joined the channel
[13:59] eventi has joined the channel
[14:00] dyer has joined the channel
[14:00] charlenopires has joined the channel
[14:01] MattJ has joined the channel
[14:01] tmpvar has joined the channel
[14:01] jollyroger_ has joined the channel
[14:02] drostie has joined the channel
[14:02] amacleod has joined the channel
[14:02] jollyroger_ has left the channel
[14:03] dominic_ has joined the channel
[14:03] chillfactor has joined the channel
[14:04] lukegalea has joined the channel
[14:04] bmavity has joined the channel
[14:05] malkomalko has joined the channel
[14:05] Druid_ has joined the channel
[14:05] rooty has joined the channel
[14:06] lukegalea: Good morning all
[14:06] malkomalko: morning luke
[14:06] mscdex: possibly
[14:06] lukegalea: I have an interesting problem today :)
[14:06] lukegalea_ has joined the channel
[14:06] lukegalea: We have an *awful* cisco load balancer in front of all our infrastructure.
[14:07] lukegalea: We have a sneaking suspicion that high connection loads that are fine in testing directly with node will cause our LB to fail.
[14:07] lukegalea: What tools are people using to test c10k connection loads?
[14:07] tmpvar: what model is the lb?
[14:07] lukegalea: lemme check.
[14:07] lukegalea: but I'm guessing ab -n 100000 -c 10000 http://blah isn't going to work :)
[14:07] kristsk: wasnt siege or somth ?
[14:07] jimt has joined the channel
[14:08] tmpvar: siege may work
[14:08] chillfactor has left the channel
[14:08] kristsk: dunnno if 1 source will be enought thou
[14:08] tmpvar: or you might want to write something that does what you want (easy with node)
[14:08] eventi: lukegalea:  you'll run outta fd's in the client
[14:09] lukegalea: it's a css 11501
[14:09] lukegalea: total piece of crap. Can't terminate ssl, etc..
[14:09] trotter has joined the channel
[14:09] lukegalea: I'll take a look at siege. I'm okay with multiple sources.
[14:09] matschaffer has joined the channel
[14:09] lukegalea: I'm actually trying to simulate long polling requests.
[14:09] lukegalea: If I can't find a tool, I'll just write something in node.
[14:09] lukegalea: I'm guessing a single node client could handle more than 10k requests.
[14:10] kristsk: depends.
[14:10] eventi: eventi: ^^^^^^
[14:10] eventi: you'll run outta file descriptors
[14:10] lukegalea: hmm... 
[14:10] troessner has joined the channel
[14:10] lukegalea: I was thinking of ephemeral ports.. I could increase that to > 10k...
[14:11] lukegalea: but FDs are an issue as well eh?
[14:11] eventi: yeah - bites us all
[14:12] lukegalea: It's funny that for all the buzz around the term c10k there isn't a clear testing mechanism for it.
[14:12] kristsk: ulimit -n or somth, if you can.
[14:12] lukegalea: aah.. http://engineering.monetate.com/do-c10k-testing-with-gevent
[14:12] kristsk: it wont open :/
[14:12] lukegalea: weird. fine for me.
[14:13] lukegalea: anyway.. that link describes a python way to do it using ec2.. But I might just stick with node for this. I'll give it a go and report back.
[14:15] jlecker has joined the channel
[14:15] maushu has joined the channel
[14:16] prof-freud has joined the channel
[14:17] Venom_X has joined the channel
[14:18] mlncn has joined the channel
[14:20] seivan has joined the channel
[14:26] PyroPeter has joined the channel
[14:28] L4rd0: CSS11501 Maximum concurrent connections per I/O module: 200000 with 256-MB RDRAM
[14:29] lukegalea_ has joined the channel
[14:30] L4rd0: Used to use them before we moved to the cloud...
[14:30] dyer has joined the channel
[14:31] mbrochh has joined the channel
[14:31] mbrochh has joined the channel
[14:31] jmar777: Someone please fill in the blank, there HAS to be a word for this. _________ refers to the synchronous or asynchronous nature of the element.
[14:31] AphelionZ has joined the channel
[14:31] jmar777: the word that "sounds" right is something like synchronicity, but that's not it...
[14:32] squeeks_: Congratulations, you've now made a lot of people worldwide scratch their heads and become slightly confused.
[14:32] dberlinger has joined the channel
[14:32] jmar777: hehe
[14:33] jmar777: having a hard time describing. Imagine this question: "Hey squeeks, what is the _______ of http.get()". To which, you would say "http.get is asynchronous"
[14:34] davidsklar has joined the channel
[14:34] squeeks_: You know, in the world of node, unless stipulated, everything is async unless specified otherwise. Even then you shove it on event watch where a mugshot of the method name will get pranced around.. sorry got carried away there.
[14:35] jmar777: lol
[14:35] jmar777: this is driving me nuts. i know there's a word, somewhere...
[14:35] jmar777: if not, i think it's high time we make one
[14:37] lukegalea: jmar777: apparently synchronousness is a word.
[14:37] squeeks_: Sounds a bit too big for my vocab.
[14:37] lukegalea: heheh
[14:37] jmar777: lukegalea: ha, sounds made up. i didn't even think to search for it
[14:38] squeeks_: I'd just say "is http.get() blocking?" or "is http.get() asynchronous"
[14:38] erabuj has joined the channel
[14:38] montylounge has joined the channel
[14:40] jmar777: IT EXISTS!!! http://en.wikipedia.org/wiki/Asynchrony
[14:40] erabuj_ has joined the channel
[14:40] squeeks_: The more you know.
[14:40] ttpva has joined the channel
[14:41] maushu has joined the channel
[14:41] jmar777: pardon the caps - you don't know the pain that was responsible for.
[14:41] thecarlhall has joined the channel
[14:41] devrim has joined the channel
[14:41] zzak: asyncrommunism
[14:42] jmar777: "Did you mean asean communism?" lol
[14:42] zzak: haha
[14:42] thecarlhall has left the channel
[14:43] Sembiance: rofl
[14:43] floby: git push
[14:43] Sembiance: floby: fast forward error
[14:43] floby: wow that wasn't even close to the right window
[14:43] pascaloptiz has joined the channel
[14:43] lukegalea_ has joined the channel
[14:44] Gregor: lukegalea, jmar777: All words are made up, they exist if they're useful. I'm sure synchrounesness wasn't a word twenty years ago.
[14:44] Gregor: Hm, it's 2011 ... make that forty years :P
[14:45] floby: I think synchrony exists before
[14:45] colinclark has joined the channel
[14:45] floby: existed*
[14:45] hwinkel has joined the channel
[14:45] lukegalea: The dictionary says it's the noun version of synchronous.... I always knew that verbing weirds language, but it appears that nouning weirds language too.
[14:45] jmar777: i'm sure that etymologists have had their hands full for the last couple decades...
[14:45] Gregor: Synchronesness, synchronicity and synchrony are all subtly different :P
[14:45] lukegalea: sorry.. nounness weirds language.
[14:46] lukegalea: or maybe nounness begets the weirding of language??
[14:46] zzak: i speeek gewd
[14:47] jmar777: need to write a blog post on Synchroncity, synchrony, asynchrony, synchronesness, and asean communism
[14:47] zzak: start a new framework, call it castro
[14:47] lukegalea: If there were lightning talks for node conf that would be a good topic.
[14:47] lukegalea: are there?
[14:47] jmar777: zzak: haha
[14:48] jimt_ has joined the channel
[14:48] floby: one could also write a song about synchrony and asynchrony living together in perfect harmony
[14:48] link has joined the channel
[14:49] dberlinger has joined the channel
[14:49] bradleymeck1 has joined the channel
[14:50] jasong_at_apache has joined the channel
[14:50] jmar777: ACTION whistles "... you never give me your synchrony..."
[14:50] okuryu has joined the channel
[14:50] jpstrikesback has joined the channel
[14:51] floby: jmar777: you only give my your funny pointers
[14:51] jmar777: floby: hahaha - i was hating myself for not thinking of a second half
[14:52] floby: floby: I've been thinking for a minute too.
[14:52] mytrile has joined the channel
[14:52] floby: damned not floby: jmar777 ^^^
[14:52] mkrecny has joined the channel
[14:52] jmar777: "...and in the middle of continuations, you block"
[14:53] floby: jmar777: doesn't fit in the melody does it?
[14:53] jmar777: guess it's a beat short...
[14:53] floby: jmar777: and in the middle of continuations you dead block ?
[14:53] floby: dead lock*
[14:54] lexnihilo has joined the channel
[14:54] jmar777: "i never give you my fd..." ok, sorry everyone
[14:54] timmywil has joined the channel
[14:54] floby: ^^
[14:54] floby: jmar777: I can go on for the whole song
[14:55] wilmoore has joined the channel
[14:55] strmpnk has joined the channel
[14:55] eee_c has joined the channel
[14:55] rfay has joined the channel
[14:56] pillowfactory has joined the channel
[14:56] pillowfactory has left the channel
[14:57] lexnihilo: hi all, quick question - is there any way to prevent node from printing stack trace and exiting when a http.request gets ECONNRESET? I tried adding an error listener to the socket already.
[14:58] lessthanzero has joined the channel
[14:58] ncb000gt has joined the channel
[14:59] mlncn has joined the channel
[14:59] L4rd0: try "forever install yourscript.js"
[14:59] L4rd0: worked for tcp connections for me...
[14:59] mkrecny: yeah use forever
[14:59] L4rd0: worked on tcp connections for me...
[14:59] hoodoos: hey, guys, does anybody remember what changed in querystring.unescape lately? like if I used 0.2.5 and now using 0.4.2 it acts kinda strange
[15:00] mkrecny: http://stackoverflow.com/questions/5228254/too-many-open-files-using-child-process/5229103#5229103
[15:00] tfe_ has joined the channel
[15:00] tfe_ has joined the channel
[15:00] orospakr: Hi!  I just noticed that V8/node.js bails out when run on a Geode.  I assume that it's assuming an x86 instruction set extension in the JITter.  I don't suppose there's a means to disable that?
[15:00] eee_c1 has joined the channel
[15:00] brianc: I got libpq bindings working for node-postgres.  Now you can opt to use libpq or pure javascript with the same API
[15:01] tmzt_: is there mongoose or other ORM that makes it easy to expose JSON rest routes via express, including $idref ?
[15:01] kriszyp has joined the channel
[15:01] tmzt_: orospakr: olpc might know
[15:01] ajashton has joined the channel
[15:01] hij1nx has joined the channel
[15:01] orospakr: tmzt_, one laptop per child...?
[15:01] tmzt_: as in, how to make code compatible with geode
[15:01] tmzt_: yeah
[15:02] orospakr: ah, right.
[15:02] orospakr: yeah.
[15:02] orospakr: well, I think this is an issue very specific to v8's codegen.
[15:02] tmzt_: or maybe they have v8 running on the xo1
[15:03] orospakr: brianc, if you're interested, a friend of mine has been maintaining a pg library for node in pure js: https://github.com/aurynn/postgres-js/
[15:03] dubbe has joined the channel
[15:04] brianc: orospakr: ah, yeah I'm familiar w/ that lib
[15:04] glitterfang has joined the channel
[15:04] aheckmann has joined the channel
[15:04] heavysixer has joined the channel
[15:04] omni5cience has left the channel
[15:04] brianc: this is the one I been working on: https://github.com/brianc/node-postgres
[15:04] tmzt_: trying to get my node startup off the ground, need to figure out that ORM question and how to do a type of mailmerge between json data sources (ones a template)
[15:04] Aikar: :O Komodo Edit 7.0 in trunk is getting node.js support, they added require() parsing support few days ago
[15:05] jmar777: Aikar: woot!
[15:05] tmzt_: like, today :)
[15:05] jmar777: Aikar: where can you get 7?
[15:05] Aikar: 2011/03/04 18:55:44 7345 7345 toddw codeintel: nodejs: process require statements
[15:05] Aikar: http://svn.openkomodo.com/openkomodo/log/openkomodo/trunk/src
[15:05] Aikar: not sure, i just saw it on commit
[15:05] tmzt_: komodo still using gecko/xul?
[15:06] Aikar: yeah
[15:06] Aikar: im glad of that :p
[15:06] tmzt_: any faster?
[15:06] Aikar: so much faster than java crap
[15:06] tiemonster: yay java!
[15:06] Aikar: it runs fine for me, cept on samba mounts file navigation can be slow since my mount is on a server out of this building :(
[15:06] statik has joined the channel
[15:06] Aikar: but at home on pure local it runs great
[15:07] Aikar: right now im trying to write tools thatll let me keep a local cache of my remote home folder lol
[15:07] deepthawtz has joined the channel
[15:07] tmzt_: what's wrong with rsync?
[15:07] Aikar: id like 2 way
[15:07] tmzt_: it's not?
[15:07] Aikar: nope
[15:07] Aikar: and rsync isnt meant for realtime either
[15:08] Aikar: ive wrote code that gets lsyncd working perfectly for 2 local dirs... but local <->samba mount isnt working due to the remote changes not issueing inotify events :/
[15:08] tmzt_: we need an open/ssh dropbox
[15:08] kristsk: sshfs ftw!
[15:08] Me1000 has joined the channel
[15:08] Aikar: kristsk: sshfs seemed slower than smbfs...
[15:08] dubbe has joined the channel
[15:08] Aikar: i tried it
[15:08] kristsk: but generaly does note require much mucking around config files
[15:09] davglass has joined the channel
[15:09] tiemonster: Aikar: heck no
[15:09] davglass has left the channel
[15:09] tmzt_: I always wondered why ja didn't have samba support directly in rsync
[15:09] Aikar: tiemonster: heck no what?
[15:09] tiemonster: there's no way its slower
[15:09] Aikar: when i switched my mount to sshfs, files took longer to open
[15:09] tiemonster: unless you're on windows...
[15:09] Aikar: nope, ubuntu
[15:09] tiemonster: how are you authenticating?
[15:09] c4milo has joined the channel
[15:10] Aikar: pub key
[15:10] hswe has joined the channel
[15:10] Aikar: how else would you authenticate? ;)
[15:10] Aikar: passwords are for the birds
[15:10] tiemonster: did you disable password and Kerberos on the server?
[15:10] Aikar: nope, not my call :p
[15:10] tmzt_: actually private key
[15:10] Aikar: its a shared dev server everyone in company uses
[15:10] mikegerwitz: Aikar: I agree. I never use sshfs. Whenever I need to transfer files I just use scp or git :)
[15:10] tiemonster: well, the start up time may be somewhat longer because it has to reauthenticate each time
[15:10] Aikar: tmzt_: yeah but its referred as "public key authentication" :P
[15:10] kristsk: ssfs is nice for dev 
[15:10] tiemonster: but large file transfers will be way faster than SMB
[15:11] Aikar: well source code typically is not large files lol
[15:11] tmzt_: tiemonster: why is that?
[15:11] kristsk: not for overly large files thou
[15:11] tmzt_: for source code use git :)
[15:11] kristsk: um, too slow.
[15:11] tiemonster: tmzt_: which?
[15:11] Aikar: tmzt_: talking about editing code and testing on a remote server
[15:11] tmzt_: use a bare repo, don't try to push to a non bare repo
[15:11] tmzt_: me too, but I just edit live with gedit (gvfs)
[15:12] mikegerwitz: Aikar: Ah testing remotely is a pain. I guess I'd suffer through sshfs then. I do all development locally
[15:12] tiemonster: not a good idea
[15:12] tmzt_: probably could do the same with komodo
[15:12] tiemonster: local dev is the way to go
[15:12] Aikar: my company has a beefy dev server that all devs connect to, which runs a highly configured apache to do a sep install from your home folder for each employee
[15:12] kristsk: mikegerwitz: i have not suffered at all
[15:12] Aikar: tiemonster: our apps too complicated for that
[15:12] tiemonster: a git workflow for remote div is a second best
[15:12] tmzt_: hey, I haven't completely killed it yet
[15:12] kristsk: and i do dev through ssfs
[15:12] tmzt_: I'll be pushing to my alpha server in a while, then opening that up
[15:12] mikegerwitz: kristsk: I haven't tried sshfs in years. Perhaps it's improved since my last attempt
[15:13] kristsk: it is quite nice.
[15:13] tmzt_: .gvfs is about the same thing, just a little more convenient if you use gnome
[15:13] Aikar: so im pretty much editing files over a remote file system, but navigation can be slow at times. especially expanding large folders in komodo
[15:13] tiemonster: I have rsync+inotify that sends diffs to the dev server every time a file is saved
[15:13] mikegerwitz: .gvfs is slow as shit too ._. for ssh
[15:13] Aikar: so i was trying to cache files locally to make komodo faster
[15:13] mikegerwitz: not for smb
[15:13] tmzt_: kernel should be caching directories for fuse
[15:13] kristsk: generaly it does
[15:13] kristsk: but it is tweakable
[15:13] Aikar: tiemonster: im trying to do something like that, im about to try unison
[15:13] kristsk: defaults work fine for me
[15:14] Aikar: but i want my 'working copy' to be a pure local fs
[15:14] tiemonster: Aikar: I've heard good things
[15:14] Aikar: but if i checkout code remotely, i need to see it on my local pc too
[15:14] tmzt_: tiemonster: d.jobitr.com , signup code node1
[15:14] Aikar: so a 2 way sync is really what i need
[15:14] plasson has joined the channel
[15:15] tmzt_: Aikar: why isn't rsync two way?
[15:15] kristsk: my only gripe with sshfs is - git wont work over it.
[15:15] tmzt_: you can reverse the paths
[15:15] Aikar: tmzt_: its source -> target. if i delete a file on target, rsync recreates it
[15:15] kristsk: but that has somthing to do with osx i belive.
[15:15] plasson: hi all
[15:15] tmzt_: might be macfuse
[15:16] tmzt_: plasson: hello
[15:16] tiemonster: kristsk: wha?
[15:16] Aikar: lsyncd handles it better because it uses inotify events. so i got this: http://aikar.co/2011/03/07/2-local-folder-synchronization-lsyncd/
[15:16] tiemonster: git uses ssh by default...
[15:16] Aikar: only problem is the smbfs mountpoint is not issueing the inotify events for lsyncd to work
[15:16] kristsk: yeah, it just wont work :/ and i am using expandrive which in turn uses macfuse
[15:16] plasson: i have a question
[15:16] tmzt_: ssh is not the same as sshfs
[15:17] plasson: i can't make "git checkout" oh any version
[15:17] nonnikcam has joined the channel
[15:17] kristsk: tiemonster: i can't, for instance, check out or commit if files are on a fs which is sshfs
[15:17] kristsk: files == repo
[15:18] dberlinger|away has joined the channel
[15:19] kristsk: plasson: exactly what do you want to do?
[15:20] Aikar: i just want my samba mount to be cached so im able to navigate folders quickly
[15:20] tmzt_: Aikar: I'm trying to do something like this with json template: [{fieldname: 'name'}] data: [{name: 'Name'}] but I need to be able to edit the template or the data, and I need to be able to create a new document from the template and existing data
[15:20] tmzt_: is that something I could do with nova?
[15:20] ph^ has joined the channel
[15:20] montylounge has joined the channel
[15:21] Aikar: hmm im a bit confused by your question
[15:21] Aikar: nova is meant to be used like most other template engines. you build a template, then you 'render' it and pass it an array of variables for it to use in rendering the dynamic content
[15:22] wilmoore has joined the channel
[15:22] Aikar: so div({id: 'content'},  h1(renderVar('pageTitle')), p('Hello!'))
[15:22] tmzt_: okay, the difference is I want to use it on the client side, having data and the template in different json structures
[15:22] softdrink has joined the channel
[15:23] Viriix has joined the channel
[15:23] Aikar: then template.render('template', {pageTitle: 'fooBar'}, function(html) { });
[15:23] Aikar: oh yeah theres no client side support yet
[15:23] Aikar: well, i poked with it a lil bit for jsperf. but that was by removing node.js code and hacking around
[15:23] tmzt_: hmm, so it just creates the html using the tag name in the tempalte
[15:23] Aikar: yeah
[15:24] bradleymeck1 has joined the channel
[15:24] tmzt_: the procedural stuff could be interesting, what I really want is to have paths like @sections/section1 and be able to render multiple copies of that section
[15:24] Aikar: https://github.com/Aikar/node-nova/blob/master/examples/templates/template.js
[15:24] Aikar: thats doable with a partial and passing an array
[15:24] plasson: I'm building node.js on cygwin
[15:25] tmzt_: I think the wysiwyg is going to be the hard part anyway
[15:25] ryanfitz has joined the channel
[15:25] tmzt_: I'll just end up writing this myself
[15:25] Aikar: partial('sections/section1.js', [{title: 1}, {title:2}]) will render section1 twice and partialVar('title') will be set to 1 and 2 respectively
[15:25] dberlinger|away has joined the channel
[15:25] tmzt_: ah
[15:26] tmzt_: that's good
[15:26] tmzt_: so I just need that client side, and to be able to source those js's from mongo
[15:26] orospakr: okay, with gdb, I have determined that node is using SSE2 instructions. I looked into the code, and was happy to find that it can be apparently disabled at runtime.
[15:26] orospakr: however
[15:26] Aikar: well feel free to fork it and modify it to suit your needs lol
[15:26] Aikar: the code itself is pretty much done, i just need to add proper unit testing and finish documentation
[15:26] tmzt_: right, good to have example code to look at, mpl?
[15:27] Aikar: the examples folder has a huge template.js
[15:27] Aikar: https://github.com/Aikar/node-nova/blob/master/examples/templates/template.js
[15:27] plasson: ...it give me a fatal error ...could not load winmm.dll Win32 erro 487
[15:27] Aikar: which covers like every possible way of using the syntax
[15:27] orospakr: "--enable_sse2 (enable use of SSE2 instructions if available)", it's listed as being a "boolean option with default" true, but --enable-sse2=false or --disable-sse2 don't work
[15:28] Aikar: ignore the huge comment block at bottom. thats out of date and shows old style syntax (which still works... just its not as pretty)
[15:28] orospakr: if I do "--enable-sse2 false", node itself interprets that as a javascript module file name.
[15:28] tmzt_: oh wow, this + dnode would be perfect
[15:28] jetienne: orospakr: try --enable-sse2=0
[15:28] tmzt_: getComments can just be moved to dnode
[15:28] orospakr: jetienne, I did.
[15:28] Aikar: the div(h1('blah'), p('blah2')) syntax actually translates to the syntax you see in the large comment
[15:29] orospakr: Error: illegal value for flag --enable-sse2=0 of type bool
[15:29] tmzt_: so the html tags are function calls?
[15:29] Aikar: yeah
[15:29] Aikar: look at lib/nova/helpers.js
[15:29] tmzt_: I'll just replace those with semantic equivalents
[15:29] jetienne: https://github.com/joyent/node/blob/master/deps/v8/src/flag-definitions.h#L156 <- orospakr it is there :) dunno if it help
[15:29] yhahn has joined the channel
[15:29] tmzt_: then I can store the template in a json (for sanitization, etc.)
[15:29] Yuffster has joined the channel
[15:29] Aikar: https://github.com/Aikar/node-nova/blob/master/lib/nova/helpers.js#L317
[15:30] orospakr: jetienne, I get the feeling that v8 command line options weren't fully tested with node's command line parsing stuff, so ones that accept arguments don't work.
[15:30] Aikar: i could of wrapped it with a try catch and caught undefined function errors... but ive read try catch hurts performance
[15:30] sveimac has joined the channel
[15:30] Aikar: so i just manually built every known html tag
[15:31] ceej has joined the channel
[15:31] Aikar: and if you need to use a custom tag, you can still do {'custTag: [['content']]}
[15:31] Aikar: err ' after Tag
[15:32] jetienne: orospakr: i cant set any options to false... you may be right
[15:32] Aikar: hmm, i think for my specific use case at work im gonna combine unison and lsyncd. ill use unison for a sync from remote server -> local every 5 mins or so, then ill have lsyncd push local -> sambamount on save
[15:33] tmzt_: hmm, so you don't execute the js, you actually parse it
[15:33] tmzt_: I see
[15:33] jetienne: node --noenable_sse2 <- orospakr this doesnt trigger any exception... not sure it actually does what is expected
[15:33] Aikar: all of those html() etc functions return a function. so its called on compile and not parse
[15:34] Aikar: the compiler function will execute functions and use their result
[15:34] jpstrikesback has joined the channel
[15:34] tmzt_: ok
[15:34] Aikar: so the html () returns a function that returns {html: []}
[15:34] Aikar: all of this is cached to pure html as much as possible on compile time though
[15:34] sivy has joined the channel
[15:34] tmzt_: hah, I'm just going to have everything as <div> with different classes
[15:34] tmzt_: and generate matching css with > selectors
[15:35] tmzt_: it's not the full page, just a small part of it
[15:35] tmzt_: anyway, I see where to do that with nova
[15:35] Aikar: so div(h1(renderVar('title')), p(renderVar('content'))) is cached to
[15:35] lukegalea: hey.. does anyone have some good sample code for generating md5 hashes using crypto?
[15:35] Aikar: ['<div><h1>', #, '</h1><p>', #, '</p></div>']
[15:36] Aikar: and the # is filled in on render
[15:36] lukegalea: I wrote something I thought was trivial but it disagrees with unix md5 cmd.
[15:36] tmzt_: lukegalea: in node?
[15:36] lukegalea: ya: http://pastie.org/1647668
[15:36] tmzt_: why are you implementing it yourself?
[15:36] tmzt_: Aikar: with regex?
[15:36] Aikar: no
[15:37] lukegalea: no.. just calling crypto.createHash, etc.
[15:37] lukegalea: lemme guess.. there's an easier way?
[15:37] lukegalea: that would be nice ;)
[15:37] tmzt_: sure you don't have extra whitespace etcetera on the command line version?
[15:37] Aikar: tmzt_: on compile time it builds an array of known 'render functions', and as they 'return' (by calling their async callback) the response is filled in place
[15:37] tmzt_: hmm
[15:38] tmzt_: oh, I see so # is really a promise
[15:38] Aikar: and the html is not returned until we only have 1 long string and no functions left to call
[15:38] Aikar: yeah
[15:38] floby: tmzt_ how does it disagree with md5sum ?
[15:38] dubbe: ACTION is away: Auto-away after 30 mins idle (gone at 8th Mar, 16:38:41)
[15:38] tmzt_: floby: wasn't me
[15:38] lexnihilo has joined the channel
[15:38] floby: tmzt: snap
[15:39] Aikar: tmzt_: the # isnt in code, i typed that to just show the concept :P
[15:39] tmzt_: I see that now
[15:39] Aikar: check out nova.js to see how it processes the render callbacks
[15:39] tmzt_: but I think I'll skip the js parsing and just use json
[15:39] floby: lukegalea: how does it disagree with md5sum ?
[15:39] tmzt_: since the templates are being designed on the client
[15:39] tmzt_: not coded
[15:39] Aikar: https://github.com/Aikar/node-nova/blob/master/lib/nova/nova.js#L102
[15:40] lukegalea: floby: Lemme check.. I was running "md5", not md5sum
[15:40] BillyBreen has joined the channel
[15:40] tmzt_: echo -n 'data |md5sum -
[15:40] floby: lukegalea: I thought you were talking about md5sum, I don't have a m5 command on my ubuntu
[15:40] tmzt_: echo -n 'data' |md5sum -
[15:40] lukegalea: aah.. I am running osx.. and I have md5 and *not* md5sum ;)
[15:41] floby: lukegalea: anyway as tmzt_ pointed out I think your problem may come from newlines characters
[15:43] eyesUnclouded has joined the channel
[15:43] lukegalea: floby: Ya, I would have thought so.. but look at this: echo 'something' | openssl dgst -md5 returns b1946ac92492d2347c6235b4d2611184
[15:43] robert_larsen has joined the channel
[15:43] lukegalea: openssl dgst == md5..
[15:43] Astro has joined the channel
[15:43] lukegalea: hmm..
[15:43] tmzt_: -n
[15:43] lukegalea: does echo auto append a newline.
[15:44] lukegalea: .. maybe..
[15:44] tmzt_: echo 'something' | xxd
[15:44] tmzt_: ( or od)
[15:44] tmzt_: vs. echo -n 'something' | xxd
[15:44] jtsnow has joined the channel
[15:44] lukegalea: ahah!!
[15:44] lukegalea: okay. that'll do it
[15:45] lukegalea: That's perfect
[15:45] lukegalea: node agrees with openssl now
[15:45] lukegalea: thanks tmzt_  & floby !!
[15:45] floby: lukegalea: np, I must admit that I spent more time on this than I wanted to
[15:45] floby: lukegalea: when it happened to me
[15:46] lukegalea: Thanks. Much appreciated.
[15:46] mkrecny: how would you request just the header of a URI
[15:46] mkrecny: ?
[15:46] lukegalea: I think because crypto is so new, I was quick to blame it ;)
[15:46] floby: new lines, can't live with'em, can't live without'em
[15:47] halfhalo: Lol
[15:47] robert_larsen: Hi all. Does any of you have experience with using the Google Closure library from Node ?
[15:47] floby: robert_larsen: you missed them! they were here not 1 hour ago ;)
[15:48] robert_larsen: doh :-)
[15:48] floby: robert_larsen: what do you mean use Closure FROM node ?
[15:48] FunkyFortune has joined the channel
[15:48] robert_larsen: I mean, write a server to run from Node, which uses Closure classes.
[15:49] Andi5 has joined the channel
[15:49] Viriix has joined the channel
[15:49] robert_larsen: I am looking into game development with LimeJS, which is built on Closure, and I want to share code between server and client.
[15:49] mytrile has joined the channel
[15:50] robert_larsen: So using the Closure code for inheritance and such would seem natural. But can that code be used from Node ?
[15:50] floby: robert_larsen: I'm not expert enough with Closure to answer that. but you should look in the modules wiki page for a Closure module
[15:51] floby: robert_larsen: if it's pure javascript, there is no reason for it not to work.
[15:51] EyePulp has joined the channel
[15:51] floby: robert_larsen: node doesn't force its inheritance system on you
[15:52] robert_larsen: Seems like there is a wrapper module for closure. Thanks.
[15:52] liar has joined the channel
[15:53] robert_larsen: It's just that you include stuff in closure by adding <script> tags...so I wasn't sure it would work.
[15:53] robert_larsen: But maybe that has been overloaded somehow by the wrapper.
[15:54] tmzt_: you'd probably have to change those to require
[15:54] tmzt_: whihc would require re obfuscating it
[15:55] tmzt_: sounds interesting, need to serve small js to client but want to keep it big in my repo
[15:55] tim_smart has joined the channel
[15:55] mmattozzi has joined the channel
[15:55] robert_larsen: I guess. I will take a look at the closure module.
[15:55] dguttman has joined the channel
[15:56] mraleph: orospakr: V8 should not emit SSE2 if no SSE2 is available. can you describe your problem in more details?
[15:56] tmzt_: maybe get closure working with browserify
[15:56] tmzt_: mraleph: cpuid could be wrong?
[15:56] briznad has joined the channel
[15:56] mraleph: yes
[15:56] tmzt_: wonder what mplayer says
[15:56] lexnihilo has joined the channel
[15:57] orospakr: mraleph, well, it's running on an AMD Geode LX.  I built node there, too.  The OS is Ubuntu 8.04.  Node is 0.4x from git.
[15:58] orospakr: I'm rebuilding it now with the DEFINE_bool macro invocations for sse2, sse2, sse4, and rtdsc set to false (since the way to pass v8 command line options with arguments appears to be broken).
[15:58] mraleph: orospakr: --noenable-sse2 should work
[15:58] insin has joined the channel
[15:58] hornairs has joined the channel
[15:59] tmzt_: robert_larsen: I bet you could put a placeholder for the require var before running closure and just inject it
[16:00] eee_c has joined the channel
[16:00] davidwalsh has joined the channel
[16:01] bradleymeck1 has joined the channel
[16:01] stephank has joined the channel
[16:02] mraleph: orospakr: do you build and run on a different machines?
[16:02] robert_larsen: Sounds possible...but I will take a look at the closure modules.
[16:02] orospakr: mraleph, nope, I built it right on the box.
[16:02] orospakr: mraleph, http://pastebin.com/Up5N9X2a
[16:03] ttpva has joined the channel
[16:04] orospakr: mraleph, as you can see, it's still trying to use an SSE2 instruction.
[16:04] RusAlex: what is more popular, jade or stylus ?
[16:05] orospakr: mraleph, http://pastebin.com/dRp9Y73r
[16:05] void_ has joined the channel
[16:06] RusAlex: http://flisti.com/12878  online vote
[16:06] Aikar: tmzt_: if you end up using nova as a base and add some cool feature, feel free to send a patch :P
[16:06] sleeplessinc has joined the channel
[16:07] jimt has joined the channel
[16:07] davglass has joined the channel
[16:11] asimismo has joined the channel
[16:11] davidascher has joined the channel
[16:11] daniellindsley has joined the channel
[16:12] dthompson has joined the channel
[16:13] atiti has joined the channel
[16:15] robert_larsen has left the channel
[16:16] jimt_ has joined the channel
[16:16] tmzt_: Aikar: d  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, StartColorStr='#80969696', EndColorStr='#59000000'); 
[16:16] tmzt_: oops
[16:16] tmzt_: do you have an example of using nova in the browser?
[16:17] colinclark has joined the channel
[16:17] themiddleman_itv has joined the channel
[16:18] lukegalea_ has joined the channel
[16:18] warz has joined the channel
[16:20] Aikar: tmzt_: look at benchmarks/testjsperf.js where i modified the code to run on the jsperf.com site, but that code isnt fully up to date
[16:20] Aikar: oh right, ive moved stuff
[16:20] Aikar: its jsperf.js
[16:21] Aikar: in benchmarks
[16:21] sub_pop has joined the channel
[16:21] tmzt_: so jresig just a link posted this new js loader, yepnopejs.com
[16:21] nook has joined the channel
[16:22] jimt has joined the channel
[16:23] Me1000 has joined the channel
[16:23] sub_pop has joined the channel
[16:23] Ond has joined the channel
[16:24] erabuj has joined the channel
[16:24] pHcF has joined the channel
[16:25] djazz has joined the channel
[16:26] sirkitree has joined the channel
[16:28] PDR has joined the channel
[16:30] jetienne: tmzt_: is it commonjs compatible ?
[16:31] tmzt_: jetienne: looks like just an async loader, nothing about resolving dependencies
[16:32] jetienne: tmzt_: ok too bad
[16:32] noahcampbell has joined the channel
[16:33] montylounge has joined the channel
[16:34] sleeplessinc has joined the channel
[16:35] ngs has joined the channel
[16:35] AphelionZ has left the channel
[16:35] sleeplessinc has joined the channel
[16:35] tmzt_: jetienne: it has callbacks when the loads complete, I don't know what you mean by commonjs (outside of wrappers)
[16:36] hornairs has joined the channel
[16:36] tmzt_: I'm interested because it should simplifiy only loading the editor scripts when I start the editor, instead of just serving up the <script> tags or not and loading synchronously
[16:37] davglass has left the channel
[16:37] tmzt_: same for css, I don't have to write the injection myself
[16:37] tjholowaychuk has joined the channel
[16:38] tmzt_: tjholowaychuk: do you know of a REST layer for an ORM like mongoose to expose json to express?
[16:38] mraleph: orospakr: sorry, I was afk. hmm. this is bad.
[16:38] jetienne: tmzt_: i mean require("balbla.js") and exports.foo = bar
[16:38] tmzt_: oh, I don't think so
[16:38] tjholowaychuk: tmzt_: nope
[16:38] tmzt_: just read the page I linked
[16:39] tmzt_: I need a team ;)
[16:39] lukegalea_ has joined the channel
[16:39] mraleph: orospakr: can you build a debug version of node?
[16:39] mraleph: orospakr: ./configure --debug and then use node_g
[16:40] mraleph: orospakr: there might be a place which emits cvtsi2sd without checking that sse2 is enabled.
[16:40] sprout has joined the channel
[16:40] L4rd0: Re: libmysqlclient, when is it right to use querySync over query?
[16:40] vipaca has joined the channel
[16:40] vipaca has joined the channel
[16:41] sveimac has joined the channel
[16:42] nuba has joined the channel
[16:44] sirkitre_ has joined the channel
[16:45] jollyroger_ has joined the channel
[16:45] Apes has joined the channel
[16:45] TomY has joined the channel
[16:45] Evet has joined the channel
[16:45] TomY_ has joined the channel
[16:46] jollyroger_: hi guys
[16:46] mraleph: orospakr: are you sure that $pc points to code emitted by V8? I have looked through the source and it looks like all places where we emit cvtsi2sd are correctly guarded by checks  
[16:46] hornairs has joined the channel
[16:46] mytrile has joined the channel
[16:48] fangel has joined the channel
[16:48] eee_c has joined the channel
[16:50] bentruyman has joined the channel
[16:50] Chunk has left the channel
[16:51] davidascher has joined the channel
[16:53] lukegalea_ has joined the channel
[16:54] glitterfang has joined the channel
[16:55] groom has joined the channel
[16:55] djazz has left the channel
[16:55] tmpvar has joined the channel
[16:58] steffkes has joined the channel
[17:05] Draggor: Anyone here use node.js under cygwin and also try using bigint?
[17:05] jeromegn: anybody does socket.io session authentication cross-transport? The technique I've been using only works for websockets it seems.
[17:06] lukegalea_ has joined the channel
[17:08] jmar777: tjholowaychuk: pretty please? https://github.com/senchalabs/connect/issues/232
[17:08] jmar777: tjholowaychuk: i could submit a patch if you concur
[17:09] deepthawtz has joined the channel
[17:09] tjholowaychuk: jmar777: I want to stay away from patching req as much as possible in connect
[17:09] tjholowaychuk: + its not actually all that slow to re-parse
[17:10] tjholowaychuk: I had it memoized for a while
[17:10] tjholowaychuk: and didnt see much gain
[17:11] mkrecny has joined the channel
[17:11] flippyhead has joined the channel
[17:12] kevinliu has joined the channel
[17:12] jmar777: tjholowaychuk: k. not talking about on the prototype, but you want to avoid on the req instance as well?
[17:12] jpstrikesback has joined the channel
[17:13] tjholowaychuk: yeah
[17:13] piscisaureus has joined the channel
[17:13] piscisaureus: mraleph: here?
[17:13] mraleph: yeah
[17:13] mraleph: parts of me at least
[17:14] jmar777: tjholowaychuk: aight. maybe i need to bug ryah about it then lol... :p
[17:14] piscisaureus: mraleph: short question.
[17:14] tjholowaychuk: :D
[17:14] piscisaureus: v8: will the isolates branch support a way of transferring objects from one heap to another
[17:14] v8bot: piscisaureus: SyntaxError: Unexpected identifier
[17:14] piscisaureus: hmm. mraleph: will the isolates branch support a way of transferring objects from one heap to another?
[17:16] bradleymeck1 has joined the channel
[17:16] mraleph: no
[17:17] chester has joined the channel
[17:17] mraleph: short answer.
[17:17] mraleph: :-)
[17:17] mraleph: isolates are called isolates because they are completely isolated (surprise!)
[17:17] bradleymeck: for anyone using vm.runInNewContext :: there is an attack vector if you dont lock down your prototypes as well as reset prototypes after if you pass in anything
[17:18] mraleph: so you can't transfer V8 objects from one isolate to another.
[17:18] stonecobra has joined the channel
[17:18] jakehow has joined the channel
[17:18] piscisaureus: mraleph: hmm yeah I get that :-). So you'd need to use json to transfer stuff?
[17:19] mraleph: you can share C++ objects and bind them to multiple JS objects.
[17:19] lukegalea_ has joined the channel
[17:19] piscisaureus: not v8-secret-uberfast-serialization ...
[17:19] mraleph: nobody can prevent you from doing that.
[17:19] zpao has joined the channel
[17:19] mraleph: you can share e.g. buffers by binding buffer backing storage to several JS objects
[17:20] mraleph: but AFAIK there will be no built-in sharing
[17:20] piscisaureus: mraleph: yes I was considering that too.
[17:21] malkomalko has joined the channel
[17:21] bradleymeck: would be an interesting project to have uni-directional buffer sharing
[17:21] piscisaureus: mraleph: but when you want to combine it with threading you get crazyness
[17:21] malkomalko: my connect-redis problem: https://gist.github.com/c06aa1527d633711b016
[17:21] malkomalko: anybody have any ideas? :)
[17:22] piscisaureus: mraleph: thank you anyway. will get back to you when my evil plan got even more evil
[17:22] Spion__ has joined the channel
[17:23] eee_c has joined the channel
[17:23] dguttman has joined the channel
[17:23] jollyroger_: guys
[17:23] tjholowaychuk: malkomalko: you dont need to pass maxAge to the store anymore
[17:23] jollyroger_: any tutorial on how to use mysql-node
[17:23] jollyroger_: ?
[17:23] tjholowaychuk: if you are using connect-redis >= 1.0 (which is the only one working with connect 1.x)
[17:24] amerine has joined the channel
[17:24] Fullmoon has joined the channel
[17:24] erabuj has joined the channel
[17:24] mraleph: orospakr: any luck running debug version of node?
[17:25] zylo has joined the channel
[17:26] montylounge has joined the channel
[17:28] wadey has joined the channel
[17:28] paulrobinson has joined the channel
[17:28] paulrobinson has left the channel
[17:30] jiggliemon has joined the channel
[17:30] Draggor: On node-ffi, I'm getting Dynamic Symbol Retrieval Error: no such file or directory.  This is happening with bigint, and only on cygwin, my nix box works just fine.
[17:30] jiggliemon: There has got to be a port of Closure Compiler to js.  Right?
[17:30] mlncn has joined the channel
[17:30] tbassetto has joined the channel
[17:31] xsyn has joined the channel
[17:31] jollyroger_: i need some example on how to use mysql-node
[17:31] andrewfff has joined the channel
[17:31] jollyroger_: any idea where to find them?
[17:31] kristsk has joined the channel
[17:34] malkomalko: tjholowaychuk: but the code in connect redis looks for that option or sets the maxAge to 0 does it not?
[17:34] malkomalko: won't a maxAge of 0 expire automatically?
[17:34] dthompson has joined the channel
[17:34] tjholowaychuk: malkomalko: all the expires are relative to each session's .cookie.maxAge prop
[17:34] tjholowaychuk: in 1.x
[17:34] muk_mb has joined the channel
[17:34] tjholowaychuk: which is why the stores need updating
[17:35] tjholowaychuk: this allows us to have muuuuuch greater control at the session level
[17:35] lukegalea_ has joined the channel
[17:35] themiddleman_itv has joined the channel
[17:36] emattias_ has joined the channel
[17:36] jmar777: tjholowaychuk: http://groups.google.com/group/nodejs-dev/browse_thread/thread/8ac0dcc27b764d6a (and you thought I was joking...)
[17:37] tjholowaychuk: jmar777: let me know how it goes
[17:37] tjholowaychuk: the main problem really is that the url can change
[17:38] jmar777: tjholowaychuk: will do. i think it makes sense, and it lets user-land libraries take advantage of it
[17:38] tjholowaychuk: some middleware might rewrite it to plunk in localization stuff etc
[17:38] jmar777: tjholowaychuk: true... but the getter will let you adapt to that if necessary. it would just need to basically check if (_parsedUrl && _oldUrl === req.url)
[17:38] Evet: which template engine is the most common?
[17:39] tjholowaychuk: jmar777: yeah that would be fine
[17:39] asimismo has joined the channel
[17:43] atmos has joined the channel
[17:47] q_no has joined the channel
[17:49] romainhuet has joined the channel
[17:50] jiggliemon: Evet everyone's using Jade.
[17:50] thomasb has joined the channel
[17:50] jiggliemon: thank tjholowaychuk for that.
[17:50] aelaguiz has joined the channel
[17:51] tilgovi has joined the channel
[17:51] aelaguiz: anyone know a good place to get examples of prototypal inheritance in native extensions?
[17:52] lukegalea_ has joined the channel
[17:53] copenhas has joined the channel
[17:54] m14t has joined the channel
[17:57] floby has joined the channel
[17:57] wadey: aelaguiz: I think most people just make "bindings" in the native code, and then write more complicated stuff like inheritance in a JS wrapper
[17:57] tbranyen: ^^ yea
[17:57] aelaguiz: wadey: Interesting.. do you have a good project I can check out?
[17:58] floby: wadey: that's the most common way of doing thing, since JS is more flexible and less prone to giving head-aches
[17:58] wadey: _really_ simple example: https://github.com/wadey/node-microtime/blob/master/index.js
[17:58] wadey: the node.js codebase itself does this a lot
[17:58] wadey: I would look at that
[17:59] wadey: expecially the code for Buffers
[17:59] aelaguiz: okay I see, that makes perfect sense
[17:59] hornairs has joined the channel
[17:59] aelaguiz: okay thanks I will
[17:59] tbranyen: if its a c lib might be best to just map 1:1 to the methods and group into classes natively
[17:59] floby: a lot of db stuff do this too since the binding part is the most boring
[17:59] sprout has joined the channel
[18:01] jackson_ has joined the channel
[18:03] aelaguiz: ah yes I remember where I was getting my examples before, the node.js source. Now I'm good
[18:03] lukegalea_ has joined the channel
[18:03] andrewfff has joined the channel
[18:03] Twelve-60` has joined the channel
[18:04] Evet: jiggliemon: thanks
[18:05] McMAGIC-- has joined the channel
[18:06] patcito has joined the channel
[18:06] threetee has joined the channel
[18:07] jiggliemon: Evet: Thank tjholowaychuk 
[18:07] tjholowaychuk: durr?
[18:07] Evet: a, yeah
[18:07] Evet: :D
[18:07] Evet: thanks tjholowaychuk 
[18:07] dspree has joined the channel
[18:07] lakin has joined the channel
[18:10] aelaguiz: hey anyone got a tip as to what parts of the node.js source I can look to see examples of inheritance?
[18:10] aelaguiz: well wait, nevermind I'm dumb.
[18:11] wadey: search for util.inherits
[18:11] SeanBannister has joined the channel
[18:12] mjijackson has joined the channel
[18:13] xsyn_ has joined the channel
[18:14] glitterfang has joined the channel
[18:14] windsurf_ has joined the channel
[18:16] threetee: hi everyone, I'm having problems requiring npm modules in my node.js code. details are at http://pastie.org/1648232 … any ideas?
[18:17] windsurf_: in the context of my web socket server (for multiple client connections) I would like help understanding my first draft of the server: http://pastebin.com/D6CE0u9W
[18:17] windsurf_: is each client connection a 'socket' ?
[18:17] windsurf_: or a 'connectionListener' ?
[18:18] mscdex: eh?
[18:18] windsurf_: trying to understand that so I can put separate clients into an array to be able to route messages 
[18:18] windsurf_: just trying to figure out the nodejs/net terminology
[18:18] mscdex: your callback to net.createServer takes in a net.Stream object
[18:18] prof-freud has joined the channel
[18:19] zomgbie has joined the channel
[18:19] mscdex: the callback to net.createServer _is_ the connection callback
[18:19] mscdex: so you don't need to add another one
[18:20] pyrony has joined the channel
[18:20] windsurf_: I understand in general what a callback handler is, but I don't see which the callback is in createServer()
[18:20] windsurf_: it accepts an argument but the docs don't say it's a callback, but rather a connectionListener which I'm a bit foggy on the meaning of
[18:21] floby1 has joined the channel
[18:21] xsyn_ has joined the channel
[18:21] windsurf_: in fact, I know from the examples that net.createServer returns a server object, but the docs don't say it actually returns anything
[18:21] kristsk: it does return an object
[18:22] kristsk: so you can do serverReturned.listen(...)
[18:22] mscdex: windsurf_: the example shows it returning the server object
[18:22] wvl has joined the channel
[18:22] windsurf_: i know, but the description of the method doesn't mention a return (i know it works 'cause my basic server is working)
[18:22] mscdex: windsurf_: the connectionListener callback for createServer is just a shortcut instead of manually adding a listener for the 'connection' event
[18:22] windsurf_: i'm now working on really understanding what it's doing. (
[18:23] donghee has joined the channel
[18:23] brapse has joined the channel
[18:23] windsurf_: ah so my .on('connection' is redundant eh?
[18:23] mscdex: yes
[18:23] kristsk: you could do somthing like var server = net.createServer(); server.on("connection", function(...) { ... handle new connection }); server.listen(...);
[18:23] kristsk: yes.
[18:24] windsurf_: ok cool
[18:25] yozgrahame has joined the channel
[18:25] Country has joined the channel
[18:27] windsurf_: ok great, that's working now. So, what's happening on connection...
[18:27] windsurf_: a client has connected to the server,
[18:27] windsurf_: the server created a socket and connected the client to the socket as well?
[18:28] fr0stbyte has joined the channel
[18:28] mkrecny has joined the channel
[18:28] fr0stbyte: anyone recommend a DataMapper?
[18:29] mscdex: windsurf_: a net.Stream object is created and is associated with the fd of the socket
[18:30] windsurf_: so socket is a net.Stream?
[18:30] mscdex: in node land, the two names are used interchangeably
[18:31] windsurf_: oh no, it's a net.Socket
[18:31] windsurf_: yeah i seem to remember reading about that but does that mean that net.Socket is an alias of net.Stream 
[18:31] mscdex: ah ok, guess the name changed
[18:32] mscdex: i'm not sure offhand, it was net.Stream in 0.2.x
[18:33] windsurf_: So server is one to many in terms of client connections
[18:33] windsurf_: but is socket one-to-one?
[18:33] kristsk: yes
[18:33] windsurf_: ok great. 
[18:33] kristsk: well, yes and no. 
[18:33] kristsk: at same time there will be no two same sockets
[18:33] windsurf_: i did this years ago with java but this is already easier.
[18:34] windsurf_: yeah, so one socket instance per client.
[18:34] windsurf_: right?
[18:34] kristsk: yes
[18:34] windsurf_: or is there a caveat?
[18:34] fr0stbyte: In Nodeland, port sockets youuuuu
[18:36] windsurf_: huh?
[18:36] mscdex: windsurf_: i'm not sure what you're asking. every connection is represented by one unique net.Socket
[18:36] windsurf_: ok, then I am on the same page as you 
[18:36] Draggor: ANyone here have any experience using node-ffi on cygwin?
[18:37] mscdex: Draggor: what are you using node-ffi to interface with?
[18:37] tbranyen: i was never able to get node-ffi to work
[18:37] eb4890 has joined the channel
[18:37] tbranyen: :-/
[18:37] bradleymeck: prolly bigint, it doesnt work, you have to do some serious patching, and even then it doesnt work right
[18:37] SubStack: :\
[18:37] Draggor: mscdex: I grabbed the bigint module via npm, it built fine, but when I go to require('bigint') I get no such file or directory at Dynamic Symbol Retrieval
[18:38] mhausenblas has joined the channel
[18:38] Gruni has joined the channel
[18:38] Draggor: bradleymeck: know of any alternatives?
[18:38] bradleymeck: s'ok substack its not your fault, you just need to make real bidnings :(
[18:38] bradleymeck: draggor not quick ones
[18:38] xsyn has joined the channel
[18:39] Draggor: it doesn't have to run fast, it just has to run.  And regular JS numbers aren't working for me.
[18:40] SubStack: Draggor: did the installer make a __dirname + '/build/default/libbigint' ?
[18:40] SubStack: `npm explore bigint` to hop to the directory
[18:41] bradleymeck: draggor i mean to code the solution will take a long time
[18:41] joshfng has joined the channel
[18:41] ambertch has joined the channel
[18:42] gozala has joined the channel
[18:42] dspree has joined the channel
[18:42] gozala1 has joined the channel
[18:44] Draggor: bradleymeck: SubStack: I went and tried pointing the Library call an absolute path.  The lib it built was called cygbigint.dll
[18:44] vipaca has joined the channel
[18:44] vipaca has joined the channel
[18:44] windsurf_: Cool this is working now. Says hello and identifies separate client connections. Anyone see anything fishy with how I'm writing this so far? http://pastebin.com/C9kwfQqa
[18:45] Draggor: wow ate that sentence, made that path absolute, pointed it right at cygbigint.dll, and tried many other names/combinations too.
[18:45] lukegalea_ has joined the channel
[18:46] zemanel has joined the channel
[18:46] mscdex: windsurf_: nothing particularly fishy i suppose...
[18:46] atmos: anyone know how hard it is to write a rendering engine plugin for express ?
[18:47] tjholowaychuk: atmos: pretty easy
[18:47] atmos: tjholowaychuk: if i'm writing one should just do it on the 2.0 beta ?
[18:47] tjholowaychuk: i have some examples laying around
[18:47] windsurf_: mscdex: thanks for looking
[18:47] kristsk: nothing out of ordinary 
[18:47] tjholowaychuk: yea
[18:47] atmos: tjholowaychuk: should reading the ejs one prolly be sufficient ?
[18:47] atmos: i guess before i write it, you haven't seen a mustache one around, have you ?
[18:47] perlmonkey2 has joined the channel
[18:47] SeanBannister has joined the channel
[18:47] Draggor: SubStack: bradleymeck:  I'm willing to make the code changes if I get the bigint functionality.
[18:47] tjholowaychuk: atmos: basically engine.compile(str, options) -> Function, fn.call(scope, locals)
[18:48] tjholowaychuk: atmos: the ejs .compile() is a bit of a quick hack but it would do fine to reference, or jade
[18:48] BillyBreen has joined the channel
[18:48] atmos: k, and the master branch on express should be the 2.0 beta code ?
[18:48] tjholowaychuk: yup, it is in npm as well now
[18:48] AphelionZ has joined the channel
[18:49] atmos: yeah i saw that, i got upgraded because of really loose deps yesterday :)
[18:49] bradleymeck: Draggor then port all the node-ffi stuff to a C++ addon binding
[18:49] tjholowaychuk: atmos: feel free to shoot me a link to the mustache thing I can add it to the docs
[18:50] mikeal has joined the channel
[18:50] tjholowaychuk: I know there is a really over-engineered mustache implementation that tries to do all this funky shit but it doesnt really work
[18:50] atmos: will do, i'm half debating just moving the markup i was given to ejs for simplicity's sake but i think my co-workers really prefer mustache
[18:50] tjholowaychuk: havent seen any clean small implementations
[18:50] atmos: yeah i'm using Milk
[18:50] mikeal has joined the channel
[18:50] tjholowaychuk: hmm not familiar with that one
[18:50] erabuj has joined the channel
[18:50] tjholowaychuk: I only remember Mu or something
[18:51] Draggor: bradleymeck: I take it nobody has done this yet
[18:51] atmos: yeah mu and mustache.js are both kinda weird
[18:51] bradleymeck: draggor not that i know of
[18:51] atmos: https://github.com/pvande/Milk
[18:51] lessthanzero has joined the channel
[18:52] glitterfang has joined the channel
[18:52] masahiroh has joined the channel
[18:52] alek_br has joined the channel
[18:54] __tosh has joined the channel
[18:54] V1 has joined the channel
[18:55] MikhX has joined the channel
[18:57] langworthy has joined the channel
[18:58] ngs has joined the channel
[18:59] mlncn-agaric has joined the channel
[18:59] trotter has joined the channel
[19:00] losing has joined the channel
[19:00] pcardune has joined the channel
[19:01] Draggor: anyone here write a c++ addon binding that's willing to offer some guidance?
[19:02] broofa has joined the channel
[19:04] eyesUnclouded has joined the channel
[19:05] bradleymeck: draggor whatcha need help on?
[19:07] aelaguiz has joined the channel
[19:07] xsyn has joined the channel
[19:07] Draggor: bradleymeck: well the node documentation for doing a C++ addon is light, and the link to postgres seems to have vanished
[19:07] glitterfang has joined the channel
[19:08] Draggor: at the very least this will be a cool learning experience, even if it doesn't work
[19:08] sechrist has joined the channel
[19:08] bradleymeck: basically for a simple binding that is not async you just need to export a function with signature (void init(v8::Object exports)) and the rest is from v8's api (google v8.h for docs after reading embedders guide)
[19:09] torg_ has joined the channel
[19:09] colinclark has joined the channel
[19:09] intrect has joined the channel
[19:09] Draggor: So really making this shouldn't be too bad
[19:09] Draggor: As I'm fine with it blocking
[19:09] bradleymeck: https://github.com/ry/node_postgres
[19:10] bradleymeck: yea, just coding it takes time
[19:10] torg_: did anyone try using express, nodemon and stylus together? im having issues with stylus reloading
[19:10] intrect: Anyone have recommendations for control flow tools? We're looking seriously at async but we don't want to miss anything.
[19:10] kordless has joined the channel
[19:10] atmos: intrect: the async lib isn't bad
[19:10] tiemonster: nodemon sounds like something out of pokemon ;-)
[19:10] torg_: hehe, indeed, but it's actually quite useful
[19:11] tiemonster: looks like it
[19:11] tiemonster: I use a similar tool for Django development all the time
[19:11] CIA-75: node: 03Tony Huang 07master * r502900c 10/ (lib/path.js test/simple/test-path.js): add path.relative - http://bit.ly/guH0N0
[19:11] Draggor: Hokay, time to get lunch, then get cracking
[19:11] OhMeadhbh has joined the channel
[19:12] tiemonster: can npm be used for end-user applications, too, or just libraries and command-line tools?
[19:12] lukegalea_ has joined the channel
[19:12] torg_: probably some file time issues as the files keep getting reloaded
[19:12] tjholowaychuk has joined the channel
[19:12] atmos: tiemonster: i'm using npm to distribute executables that launch web apps and shit
[19:12] atmos: if that's what you mean
[19:13] tiemonster: maybe. do you have some on github?
[19:13] kriszyp has joined the channel
[19:13] robtmr has joined the channel
[19:13] torg_: I'm guessing cluster ought to work well with stylus? :)
[19:13] torg_: maybe I'll give that a shot instead
[19:13] atmos: tiemonster: what're you trying to do ?
[19:15] jmar777: tjholowaychuk: so to punt an error to the next layer in connect, you can either throw if you're in a synchronous context, or next(new Error('..')) if you're not?
[19:15] tjholowaychuk: jmar777: correct
[19:15] tjholowaychuk: it catches anything immediate
[19:16] Jamool has joined the channel
[19:16] nuba has joined the channel
[19:16] Jamool: hello nodesters
[19:16] jmar777: tjholowaychuk: awesome thanks. the man's thought of everything....
[19:17] windsurf_: when would I want to use a Child Process? Is that for say when I have a multi-client socket server and I want a command coming in from a client to invoke some asynchronous file/db activity ?
[19:17] kristsk: umm.
[19:17] atmos: tjholowaychuk: when you use a rendering engine does it basically try to require what you specify ?
[19:17] atmos: so there's no real js in express itself for ejs, it just grabs it from the lib ?
[19:17] sleeplessinc has joined the channel
[19:17] kristsk: windsurf_, probably no.
[19:18] mscdex: windsurf_: child processes are used for starting up and interacting with new (external) processes
[19:18] tjholowaychuk: atmos: by default yup, http://expressjs.com/guide.html#app-register-ext-exports-
[19:18] insin: tjholowaychuk: are there any known issues with jscoverage and the latest node, or should I start looking into whether or not node-qunit just Doing It Wrong?
[19:18] kristsk: spawn is nice for, say, external utilities
[19:18] tjholowaychuk: insin: no clue havent tried it with 0.4.x
[19:18] kristsk: per request spawning probably is not so good idea
[19:19] xsyn_ has joined the channel
[19:20] bradleymeck: windsurf_ for long running stuff (workers), starting up utilities, sandboxing, etc
[19:21] kristsk: things that need to benefit from running on other core/s
[19:22] tiemonster: atmos: enable end users to install a program from npm and run it from the command line. I guess that's the same thing as a command-line tool, eh?
[19:22] losing has joined the channel
[19:23] mikegerwitz: tiemonster: wouldn't the system's package manager be better suited for that?
[19:24] bergie has joined the channel
[19:25] atmos: tiemonster:  yeah
[19:25] atmos: tiemonster: https://github.com/atmos/jinkies
[19:25] tiemonster: mikegerwitz: for a node program? sure - if node itself was in the repositories...
[19:25] atmos: that installs the jinkies executable into yoru path via npm
[19:27] tiemonster: super easy
[19:27] atmos: yup, the npm docs are pretty good
[19:27] tiemonster: then I add daemon support, and it's a stand-alone server
[19:27] tiemonster: screw apt ;-)
[19:27] tbranyen: i <3 npm unpublish, made it easy for me to test and remove a package last night
[19:27] tbranyen: hope they don't get pissed by that
[19:27] atmos: yeah i actually still use a process manager for long running processes
[19:28] atmos: tbranyen: i kinda hate the default behavior of that
[19:28] PDR has joined the channel
[19:28] atmos: i accidently nuked a ton of old packages cause i didn't run it with a specific version
[19:28] tiemonster: atmos: like what?
[19:28] atmos: tiemonster: i use god, it's a ruby process manager
[19:28] xsyn has joined the channel
[19:28] tiemonster: hmm
[19:29] malloc has joined the channel
[19:29] atmos: a lot of our infrastructure is god based so it's easier for others to interact with shit if it goes wonky
[19:30] tiemonster: so you run `god -c config_file -D` to daemonize the process?
[19:30] atmos: sorta, yeah
[19:30] atmos: we just have a folder we can drop configs into and it runs outta init
[19:30] tiemonster: interesting
[19:30] atmos: one sec, i have a config here
[19:30] tiemonster: Isn't Joyent releasing the code for their no.de platform? I wonder what they use...
[19:31] bradleymeck: mikeal raw sockets dont exist in win fully so prolly cant go that route
[19:31] lukegalea_ has joined the channel
[19:31] tiemonster: Win FTW!
[19:31] tiemonster: piscisaureus: lingering by any chance?
[19:32] atmos: https://gist.github.com/675038
[19:32] jimt_ has joined the channel
[19:32] mlncn has joined the channel
[19:32] arthabaska has joined the channel
[19:32] mikeal: we'll invent them for windows!
[19:32] atmos: lolwindows
[19:33] mde has joined the channel
[19:33] bradleymeck: mikeal gl with that XD http://msdn.microsoft.com/en-us/library/ms740548(v=vs.85).aspx
[19:33] tiemonster: atmos: interesting. I think I might stick with npm for now, though.
[19:33] atmos: do it
[19:34] mikeal: word
[19:34] atmos: figured i'd share, we have a few things running that way and it works quite well
[19:34] tiemonster: cool
[19:34] tiemonster: thanks for sharing
[19:34] mikeal: it's insane
[19:34] mikeal: nobody does it
[19:34] brianm has joined the channel
[19:34] mikeal: but we would be so fuckin rockin if we did
[19:34] tiemonster: ruby makes little sense to me
[19:35] mikeal: we could control the congestion control algorithm and shit
[19:35] mikeal: it would be insane
[19:35] bradleymeck: if we could, and had the money for it, it would be nice
[19:36] mikeal: we would be the most hardcore server platform ever
[19:36] mikeal: :)
[19:37] mikeal: hell man, we have most of it in the pcap library already :)
[19:38] gukov has joined the channel
[19:38] mjr_: yes, I hope to soon replace the networking stack in my kernel with node_pcap
[19:38] mikeal: pfft
[19:38] mjr_: I probably did it better than they did anyway
[19:39] mikeal: we need some more Buffer methods to make it fast
[19:39] mikeal: if we had indexOf
[19:39] bradleymeck: mikeal winpcap seems to have a workaround in it somehow
[19:39] mikeal: we could probably do it fast
[19:39] mjr_: If we had a native binary type in JS that we could copy the buffer into and then stay in V8, I think it'd be pretty fast
[19:40] mjr_: But right now, we have to bop back and forth, reading a byte at a time
[19:40] mjr_: I think?
[19:40] tedsuo has joined the channel
[19:40] mjr_: Maybe we could stuff the whole packet into a string and then peel off bytes for subsequent bit twiddling.
[19:40] windsurf_: thanks mscdex kristsk bradleymeck 
[19:40] awenkhh has joined the channel
[19:41] awenkhh has joined the channel
[19:41] fizx has joined the channel
[19:41] bradleymeck: mjr_ not exactly but we have to pop in and out of the C++ bridge when we do anything except access via an index
[19:41] eresair has joined the channel
[19:41] mjr_: even the [] operator is slow though.
[19:42] mjr_: On buffers I mean.  
[19:42] bradleymeck: yup, but it doesnt force the c++ crud at least
[19:42] mikeal: so, we wouldn't need to do that if we had a native indexOf
[19:42] mjr_: Sure, it's still much faster than a trip down C++ lane.
[19:42] mikeal: you would call into indexOf and it would return an integer
[19:43] isaacs has joined the channel
[19:43] maritz has joined the channel
[19:43] mjr_: Yeah, if that could be made fast, that would win.
[19:43] mikeal: indexOf is a pretty well known algorithm
[19:43] mikeal: i don't know it
[19:43] mikeal: but there is one :)
[19:44] mjr_: But the fact that individual byte access through [] though setindexproperties or whatever it's called, is still a lot slower than indexing into a string.
[19:44] mjr_: Any time you leave the V8 reservation, it takes a lot longer than you'd like, apparently.
[19:44] isaacs: mjr_: are you saying it'd be win to make stream.write(anActualFactualString) fast?
[19:45] mjr_: sure, that
[19:45] isaacs: i mean, if you're doing indexOf, it's because you actually want a string, i think
[19:45] mjr_: But also to be able to more easily jam buffers into strings and work with their individual bytes.
[19:46] isaacs: the problem there is that v8::Strings are not just byte arrays
[19:46] mjr_: Not because the buffer API doesn't work, because clearly it does.  Just that it's slow.
[19:46] isaacs: they're trees, and UCS-2 encoded, etc.
[19:46] mjr_: Yeah, they are strings, not byte arrays.
[19:46] maritz: anyone here know haml-js? i have found :if but :else does not seem to work :(
[19:46] mjr_: I think webgl is going to come to the rescue on this though.
[19:47] mjr_: And make byte arrays in JS a high performance reality. 
[19:47] isaacs: we'll see.
[19:47] mjr_: ACTION crosses fingers
[19:47] isaacs: in the meantime, i guess an indexOf for buffers could be implemented in C and be pretty fast
[19:47] windsurf_: anyone know how to enable/disable assertions?
[19:47] tbranyen: mjr_: audio api has been pushing it too
[19:47] isaacs: the algorithm isn't super complicated.
[19:47] tilgovi has joined the channel
[19:47] mjr_: tbranyen: yeah, totally.  Any kind of media processing pretty much wants byte arrays.
[19:48] tbranyen: there are a few new array types introduced into firefox
[19:48] mjr_: or 16 and 32 bytes arrays.
[19:48] bradleymeck: webgl is going to be for specialized people so idk how much steam it will have
[19:49] tbranyen: Float64 Array
[19:49] tbranyen: Int32 Array
[19:49] creationix has joined the channel
[19:49] losing has joined the channel
[19:49] eschnou has joined the channel
[19:50] mackry has joined the channel
[19:51] dyer has joined the channel
[19:51] stonecobra: anyone here using dustjs with express?
[19:51] floby has joined the channel
[19:53] aelaguiz has joined the channel
[19:53] jpick has joined the channel
[19:53] OhMeadhbh_ has joined the channel
[19:57] jimt has joined the channel
[19:58] eaton has joined the channel
[20:01] pascalopitz has joined the channel
[20:02] pascalopitz has left the channel
[20:02] bradleymeck_ has joined the channel
[20:04] piscisaureus: tiemonster: im here
[20:04] tiemonster: piscisaureus: did you see ryah's post about our getuid stuff?
[20:04] tiemonster: not sure what he means about platform-* files
[20:05] piscisaureus: tiemonster: I already responded. 
[20:06] piscisaureus: In the platform-* files platform-specific stuff is located
[20:07] piscisaureus: I agree that that is the place where it should eventually go, but I don't really see why that would be needed right now. Byt ryah is the boss.
[20:07] lukegalea_ has joined the channel
[20:07] jakehow has joined the channel
[20:08] atiti has joined the channel
[20:08] nico103 has joined the channel
[20:08] tiemonster: so what further action is required?
[20:08] wav1 has joined the channel
[20:09] creationix: join ##paws
[20:09] creationix: doh!
[20:09] tiemonster: lol
[20:09] windsurf_ has joined the channel
[20:09] jpstrikesback has joined the channel
[20:10] piscisaureus: ^-- ryah: ?
[20:11] tladuke has joined the channel
[20:11] elliottcable: creationix: ahhaha
[20:11] teemow has joined the channel
[20:11] elliottcable: creationix: mad skills, I think you just exploded my channel
[20:11] jetienne: node -e is v8 and not node, correct ? node -e "require('foobar')" fails if require is in local ./node_modules.... while require('foobar') inside node works
[20:11] mraleph: mjr_ access to buffer with [] is slower than stuff like charCodeAt cause we don't have inlining for external arrays [] yet. we are working on that. 
[20:12] jetienne: elliottcable: what is this misterious organization you are running
[20:12] elliottcable: jetienne: no concern of yours. ;D
[20:12] jetienne: :)
[20:12] mraleph: mjr_ eventually access to buffer contents with [] in hot places should be like 5 instructions
[20:13] mraleph: check that we deal with external array, load elements array, load element, convert it from byte to smi
[20:13] hosh_work has joined the channel
[20:14] gf3 has joined the channel
[20:16] jetienne: is there a need for fast scrapping in node ?
[20:17] noahcampbell has joined the channel
[20:17] jimt has joined the channel
[20:18] lolninja has joined the channel
[20:19] stagas has joined the channel
[20:19] lolninja: if anyone uses nodelint do you know if there is a way to set a /*global list in the config file?
[20:19] jcardoso has joined the channel
[20:19] creationix: mraleph: that sounds very promising
[20:20] losing has joined the channel
[20:20] aabt has joined the channel
[20:20] tbranyen: lolninja: pretty sure its designed to work on a per js file basis
[20:20] lukegalea_ has joined the channel
[20:20] jcardoso has left the channel
[20:21] lolninja: tbranyen, ahh, ok that explains why trying random config options didn't get the desired result :)
[20:21] jmar777_ has joined the channel
[20:21] bmavity_ has joined the channel
[20:21] bradleymeck has joined the channel
[20:22] elliottcable: jetienne: you’re welcome back, by the way
[20:23] tladuke: which of these microframeworks are actively developed?
[20:23] lolninja: my other question was does node.js support the "use strict"; rule, and if it does is it safe to use nodejs as a testing platform for when browsers start supporting it?
[20:23] creationix: tladuke: which microframeworks?
[20:23] creationix: connect, express, and stack are active ones I know about or was involved with
[20:23] tladuke: in the list on the github wiki
[20:23] mikegerwitz: lolninja: no "use strict;" yet, unfortunately. It's in the works
[20:24] lolninja: mikegerwitz, ah thanks
[20:24] tladuke: maybe i just need a router
[20:24] tjholowaychuk: tladuke: http://expressjs.com
[20:25] tjholowaychuk: small / fast / actively developed
[20:25] tladuke: ty
[20:25] Me1000 has joined the channel
[20:27] Jamool: anyone ever mess around with geolocation and node.js?
[20:28] bradleymeck: http://wargamez.mape.me
[20:29] blueadept has joined the channel
[20:29] saikat has joined the channel
[20:29] flou has joined the channel
[20:29] V1: Jamool: I juse geoip and node,
[20:29] jiggliemon has joined the channel
[20:29] doki_pen: heh, I was just going to ask about geoip
[20:29] jetienne: i use phantomjs and geoip :)
[20:29] Jamool: hmmm ok
[20:29] doki_pen: this channel reads my mind
[20:30] Jamool: let me check that out
[20:30] V1: Jamool: > https://github.com/kuno/GeoIP works like a charm
[20:30] jetienne: $ phantomjs /usr/share/doc/phantomjs/examples/ipgeocode.js 
[20:30] davidwalsh has joined the channel
[20:32] tladuke: these might be overkill for me...
[20:32] Gregor: jetienne: Unaware of what phantomjs was, I went to its web site. First line: "PhantomJS is a minimalistic, headless, WebKit-based, JavaScript-driven tool.". Most people like to describe what a tool actually DOES, but phantomjs is better than that, it just describes its environment and dependencies.
[20:32] jiggliemon has joined the channel
[20:32] zachsmith: when I'm using the http module, how can I know when I've recieved an entire line of the body?
[20:32] OhMeadhbh has joined the channel
[20:33] Jamool: V1 think i could use googlemaps geocoding and still get it working real time?
[20:33] ncb000gt: zachsmith: just a single line in the body?
[20:33] zachsmith: ncb000gt: yeah, I want to process each line as they come in
[20:33] jetienne: Gregor: hmmm ? you are complaining about the description ?
[20:33] PyroPeter: Gregor: "phantomjs" sounds quite cool. how dare you doubt it's superiority?
[20:33] ncb000gt: zachsmith: i'm not sure that's actually possible.
[20:34] ncb000gt: it depends on how the data itself comes in
[20:34] Aria has joined the channel
[20:34] V1: Jamool: That might work, but there's an API limit to that. I think 1000 requests per day per ip, or something close to that.
[20:34] ncb000gt: the chunking from the other server on the request and so forth
[20:34] jetienne: Gregor: phantomjs is a full webkit without the UI. so faster to start and runnable on server
[20:34] OhMeadhbh__ has joined the channel
[20:34] tjholowaychuk: phantom would be way better if you didnt need QT
[20:34] ncb000gt: you can check a chunk (convert the buffer to a string) and check for new lines
[20:34] tjholowaychuk: or w/e the deps were
[20:34] mikegerwitz: zachsmith: You have to actually check each chunk for a newline
[20:34] tjholowaychuk: pretty lame
[20:34] Gregor: jetienne: Yes, I have now inferred that from reading further, but only inferred, nowhere does it really SAY that.
[20:35] pHcF has joined the channel
[20:35] zachsmith: ncb000gt & mikegerwitz: thanks! I'll do that
[20:35] gozala has joined the channel
[20:35] Jamool: i just looked through the docs says "this service is not designed to respond in real time to user input" dammit
[20:35] mauritslamers has left the channel
[20:35] jetienne: Gregor: how would you describe it ?
[20:35] jetienne: Gregor: i can change the description in the ubuntu dev
[20:36] jetienne: Gregor: i can change the description in the ubuntu deb
[20:36] _neil has joined the channel
[20:37] dguttman_ has joined the channel
[20:37] creationix has left the channel
[20:37] lolninja: ls
[20:37] kristsk: ls -al
[20:37] lolninja: wrong window :)
[20:37] OhMeadhbh_ has joined the channel
[20:37] ncb000gt: zachsmith: sure just note that you'll need to still do some buffering of the chunks as they come in
[20:38] Gregor: jetienne: phantomjs is a framework for writing JavaScript applications which use WebKit to interface with web sites and use standard web APIs
[20:38] aelaguiz has joined the channel
[20:38] jetienne: noted
[20:39] zachsmith: ncb000gt: yeah
[20:40] dwww has joined the channel
[20:42] kriszyp has joined the channel
[20:44] mape: Easiest way of fixing "Segmentation fault"?
[20:44] Aria: gdb, see what's crashing, look at why...
[20:44] squeeks_: kick it until it stops making noises.
[20:44] piscisaureus has joined the channel
[20:44] Aria: ... though if it's just an undetected ABI change, recompiling things works.
[20:44] tjholowaychuk: mape: valgrind / gdb
[20:45] kristsk: that phantomjs thing looks really interesting 
[20:45] kristsk: thanks
[20:45] Aria: Specifically, in gdb, examine the core (or run it under gdb and when it crashes...) then run a backtrace, look for pointers that have absurdly low values -- 0x0, 0x18 ...
[20:46] mape: Hmm
[20:46] bradleymeck: I wish I could get CEF working with node, but their extensions seem a bit hard to add in
[20:46] mikegerwitz: Aria: The values may not necssarily be low (e.g. a stray pointer referencing a block what was free()'d)
[20:47] Aria: Oh, for sure. But in general, those are much more rare in my experience. (at least as a developer; as someone looking at other people's code, I find mistaken frees to be just as common)
[20:47] jimt has joined the channel
[20:48] seutje has joined the channel
[20:49] isaacs: SubStack: i took npmdep as inspiration and ran with it: https://gist.github.com/859599#file_now%20with%20ansi%20line%20drawing%21
[20:50] vipaca has joined the channel
[20:50] vipaca has joined the channel
[20:50] dguttman has joined the channel
[20:50] tjholowaychuk: isaacs: looks cool man!
[20:50] robtmr has left the channel
[20:52] fangel has joined the channel
[20:53] broofa has joined the channel
[20:53] nuxusr has joined the channel
[20:55] secoif has joined the channel
[20:55] nivoc has joined the channel
[20:55] nico103: I see libumem has been ported (to Linux, Windows)
[20:55] nico103: if you need to debug double frees and leaks... libumem is your ticket (to heaven)
[20:56] Nietecht has joined the channel
[20:56] Aria: Oh nice
[20:57] aways|bnc: ACTION bonn soir�e
[20:57] kristsk: libumetin 
[20:57] nico103: and there's a port of DTrace to Linux too (not complete, but possibly useful to some of you)
[20:57] jmar777_: isaacs: ping
[20:57] TheEmpath2: hail nodelings
[20:57] isaacs: jmar777_: hi
[20:58] jmar777: isaacs: hey man. i replied in the node-dev discussion, but i was hoping you could set me straight on the bench marks (or vise versa :))
[20:59] eaton has joined the channel
[20:59] eaton has joined the channel
[20:59] bartt has joined the channel
[20:59] isaacs: so, basically if you take any pair of comparisons, doing the url.cache without a [[Getter]] property is faster than not
[20:59] jmar777: isaacs: i may be reading them wrong, but it looked to me that it confirmed that caching within the .parsedUrl getter was faster than repetitive calls to url.parse(req.url, true)
[20:59] isaacs: of course, the [[Getter]] is faster if it's cached than doing url.parse() without cache
[20:59] isaacs: especially if the querystring is parsed, since that does a lot of extra work
[21:00] isaacs: i usually just include every combination of cases that i can think of, so that it's easier to get some perspective
[21:00] jmar777: isaacs: right. so would we agree that if parsing was only required once or twice, then calling url.parse() is faster, otherwise, the [[Getter]] + caching is faster?
[21:00] broofa has joined the channel
[21:01] isaacs: yeah
[21:01] isaacs: but url.parse() caching to a var is fastest.
[21:01] nwhite has joined the channel
[21:01] isaacs: if, for example, you call url.parse(req.url) many many times, i'ts still faster than a getter that does url.parse(req.url, true)
[21:01] jmar777: isaacs: definitely agree, but only marginally over using the Getter, and the Getter can be shared between disparate units of code (e.g., different Connect middleware components)
[21:02] isaacs: since querystring parsing is so much slower than url parsing
[21:02] isaacs: i think Tim's suggestion of doing req.uri = req.uri || url.parse(req.url) is probably best
[21:02] isaacs: (basically, that's the noAutoCache case)
[21:03] isaacs: nomenclature's a bit odd, but whatever.
[21:03] jmar777: isaacs: but it breaks visibility constraints, or else has to be done all over. i don't want a nice modular piece of code needing to depend on that happening in some other modular piece of code
[21:03] saikat has joined the channel
[21:03] jmar777: isaacs: hence why i think it belongs in core - then everyone can rely on it being there. and if its lazy, there's no cost unless you use it
[21:04] tjholowaychuk: it would be cool to have req.url a String with the getter. req.url.pathname and req.url would still just be the string
[21:04] tjholowaychuk: i dunno
[21:04] tjholowaychuk: hah
[21:04] windsurf_: I've got my own .js module in MyModule.js. How can I create multiple instances of it from myapp.js ? Do I use require and store the response in different vars?
[21:04] isaacs: jmar777: well, not necessarily
[21:04] tjholowaychuk: ACTION impartial
[21:04] windsurf_: Do I need to use object.create or somethign?
[21:04] isaacs: jmar777: just calling Object.defineProperty makes the GC go into the slow case.
[21:04] mikegerwitz: windsurf_: require() returns the same object every time
[21:04] isaacs: i'm not sure how that affects child objects.
[21:05] windsurf_: mikegerwitz: that's what i was afraid of
[21:05] mikegerwitz: windsurf_: If you want multiple instances, do exports.myobj = function() {}, then instantiate that
[21:05] flou has joined the channel
[21:05] isaacs: tjholowaychuk: your ruby is showing ;P
[21:05] tjholowaychuk: :D
[21:05] tjholowaychuk: just sayin
[21:05] tjholowaychuk: haha
[21:05] jmar777: isaacs: if i put that in a connect middleware, and then i rely on it in another middleware, a) they always have to be in the right order, and b) i can't share the reliant middleware with anyone else, because of deps
[21:05] tjholowaychuk: it would be more like window.location
[21:05] mikegerwitz: windsurf_: or modules.exports = function(), then do `new require()`
[21:05] isaacs: jmar777: or you could just have them both load and cache it
[21:06] isaacs: tjholowaychuk: we could just have the parsed object have a toString:function(){ return this.href }
[21:06] pau|c has joined the channel
[21:06] jmar777: isaacs: yes - but after once or twice of doing that, putting it on the ServerRequest becomes faster
[21:06] windsurf_: mikegerwitz:  ok and for modules.exports don't exports each class method right?
[21:06] tjholowaychuk: isaacs: that too
[21:06] jmar777: isaacs: *after twice or thrice, rather
[21:06] isaacs: jmar777 again, not sure of that.
[21:06] windsurf_: mikegerwitz:  (just the class constructor function ?)
[21:06] jmar777: isaacs: how many iterations did your bench mark do?
[21:06] isaacs: jmar777: the benchmarks show that, however you cut it, doing the same thing manually is faster.
[21:06] isaacs: jmar777: many many many
[21:07] mikegerwitz: windsurf_: not exactly. exports is an object, not a function. It cannot be instantiated
[21:07] isaacs: i forget exactly.  i think 8k for each function?
[21:07] darrend has joined the channel
[21:07] nilyt has joined the channel
[21:07] fizx has joined the channel
[21:07] mikegerwitz: windsurf_: So it's setting "methods" of an object, yes. But not one you can instantiate.
[21:08] windsurf_: mikegerwitz: i'll try it.
[21:08] mikegerwitz: windsurf_: (have to take off to a meeting; hope that answers your question)
[21:08] windsurf_: mikegerwitz: thanks!
[21:08] jmar777: isaacs: but after all those many many's, calling the getter was only ~5% slower than caching to a local variable
[21:09] isaacs: 5 whole percent!!!
[21:09] isaacs: that's a lot!!
[21:09] briznad has joined the channel
[21:09] jmar777: isaacs: which, to me, means cache to a local variable when you can. if you can't, pull it off of .parsedUrl in case someone else already did the work for you
[21:09] isaacs: jmar777: and that's calling the getter that caches to a member
[21:09] jmar777: isaacs: i agree it's not dismissible, when you have the option of caching to a local var. but you don't have that option between middleware components, or all sorts of other scenarios
[21:09] jmar777: isaacs: yes
[21:10] possibilities has joined the channel
[21:10] isaacs: i really a) don't think this functionality is necessary, and b) am opposed to anything that makes http even a tiny bit slower
[21:10] isaacs: at least, in node-core
[21:10] isaacs: API sugar like this belongs in Connect, express, fab, etc.
[21:11] xsyn has joined the channel
[21:11] jmar777: isaacs: i agree in general. what i'm trying to demonstrate though is that the current way is slower if url.parse() is called multiple times, which in a complex response is entirely realistic
[21:11] isaacs: so... don't do that :)
[21:12] mlncn has joined the channel
[21:12] jmar777: isaacs: there is the sugar component, but also the optimization (it just happens to be _slightly_ slower in very simple scenarios where not much is being done with the query string)
[21:12] isaacs: i don't think we're saying new things.
[21:12] jmar777: isaacs: i can't always control that though lol. middlewareA does that, and middlewareB, and C, etc. right now there's no good way for them to collaborate (unless tjholowaychuk changes his mind). even then it only solves it for Connect
[21:13] isaacs: node is not a middleware stack.  connect and express are.
[21:13] zzak: sick burn
[21:13] jmar777: isaacs: i agree. but any sufficiently large code base (should) have some modularity to it. unless every interaction with the query string is in the same lexical scope, or you pass the parsed value around, it will need to be reparsed
[21:14] isaacs: jmar777: sure
[21:14] jmar777: isaacs: middleware is just my current context, but i had this same problem before i started using Connect (a whole week ago...)
[21:14] tjholowaychuk: jmar777: I'll whip up a req.url patch for connect to act like window.location-ish
[21:14] tjholowaychuk: and see how it goes
[21:14] tjholowaychuk: the main question is
[21:14] isaacs: jmar777: i'm not against the functionality.  i'm just against it being built into node.
[21:14] tjholowaychuk: should toJSON be the href
[21:14] tjholowaychuk: or the object
[21:14] bartt1 has joined the channel
[21:15] isaacs: keep in mind, putting something in node-core effectively prevents any further innovation in that particular API
[21:15] jmar777: tjholowaychuk: an alternative would be to do the lazy getter that initially does url.parse(req.url) + another getter for the .query. but that starts to seem hacky
[21:15] tjholowaychuk: we can leave the questionable stuff to connect haha, but I would rather patch req.url than req.parsedUrl
[21:15] fusspawn has joined the channel
[21:15] tjholowaychuk: jmar777: nah I have a plan :)
[21:15] tjholowaychuk: one sec
[21:15] isaacs: tjholowaychuk: oh, but then typeof req.url === "object"
[21:15] tjholowaychuk: yeah thats the thing
[21:16] jmar777: tjholowaychuk: ya. i'd be a total dick at this point for saying i don't like it. so what isaacs said...
[21:16] isaacs: oh, buti guess typeof window.location === "object", too
[21:16] isaacs: ;(req.url = url.parse(req.url)).toString = function () { return this.href })
[21:16] jmar777: isaacs: pleeeease don't lets make the DOM our rationale for node apis lol
[21:17] isaacs: jmar777: window.location was the inspiration for the url.parse object :)
[21:17] msch has joined the channel
[21:17] isaacs: jmar777: and a lot of other stuff, too
[21:17] isaacs: setTimeout, etc.
[21:18] jmar777: isaacs: huh... interesting. i guess my preference would be for user land patches to add to core objects, rather than change them. but that's just preference - i'd be happy to see it either way :)
[21:18] MikhX_ has joined the channel
[21:20] zylo has joined the channel
[21:21] strmpnk has joined the channel
[21:21] losing has joined the channel
[21:24] tjholowaychuk: jmar777: we could comprimise and leave req.url alone and do req.location or something
[21:24] tjholowaychuk: still kinda meh
[21:24] jmar777: tjholowaychuk: is originalUrl a private thing?
[21:24] dyer has joined the channel
[21:24] tjholowaychuk: jmar777: nope
[21:24] jmar777: tjholowaychuk: that's really the only inspiration i had for the parsedUrl name
[21:25] altamic has joined the channel
[21:25] tjholowaychuk: originalUrl is gross, haha I hate camel-cased stuff that is used a lot
[21:25] tjholowaychuk: but
[21:25] jmar777: tjholowaychuk: just seemed like it would look good next to it in the docs :)
[21:25] tjholowaychuk: yeah
[21:25] robhudson has joined the channel
[21:25] breccan has joined the channel
[21:26] jmar777: i think that location.query doesn't make a lot of sense, just from a url semantics point of view
[21:26] tjholowaychuk: yeah i dont really like either
[21:27] jmar777: req.url.query makes the most sense. it's just a question of whether or not you want to become the prototypejs of node.js land...
[21:27] tjholowaychuk: patching that could lead to a lot of WTFs
[21:27] windsurf_: This is MyModule.js – how do I create an instance of that in myApp.js? I need separate instances. Do I just go new require('./MyModule.js') ?
[21:28] wav11 has joined the channel
[21:28] omni5cience has joined the channel
[21:28] unlink has joined the channel
[21:28] unlink has joined the channel
[21:28] jmar777: agree. what if you did a utils.parseUrl(req)? then you could memoize. not sure if it'd expect an api like that to take the request of the actual url though
[21:29] tjholowaychuk: nah that can bloat the process a lot
[21:29] jmar777: * request OR the actual url
[21:29] eee_c has joined the channel
[21:29] jmar777: tjholowaychuk: i would memoize it on the actual request. req.___nothingToSeeHereParsedUrl
[21:29] bartt has joined the channel
[21:30] jmar777: doesn't read as nice as something like req.xyz.query though
[21:30] eaton has joined the channel
[21:30] eaton has joined the channel
[21:30] tjholowaychuk: haha yeah api-wise req.url.pathname etc would be slick
[21:30] Me1000 has joined the channel
[21:30] tjholowaychuk: req.uri.pathname hahaha
[21:30] tjholowaychuk: jk
[21:30] jmar777: ACTION pukes
[21:31] tfe_ has joined the channel
[21:32] t_ has joined the channel
[21:32] jmar777: ok - i gotta run. thanks for the discussion/considerations tjholowaychuk  && isaacs!
[21:32] nciagra has joined the channel
[21:32] tjholowaychuk: see ya
[21:32] isaacs: jmar777: np
[21:33] dguttman has joined the channel
[21:33] dguttman has joined the channel
[21:34] t_ has joined the channel
[21:35] t_: tjholowaychuk: any known issues with app.use() inside of app.configure()'s in the express 2.0.0beta?
[21:35] tedsuo has joined the channel
[21:36] kriszyp has joined the channel
[21:37] tjholowaychuk: t_: nope
[21:38] Hello71 has joined the channel
[21:38] Hello71 has joined the channel
[21:41] t_: aye, good
[21:42] fizx has joined the channel
[21:43] bartt1 has joined the channel
[21:43] amirpc has joined the channel
[21:43] AphelionZ has left the channel
[21:44] amirpc: I'm having a really hard time conceptually understanding how to wrap a C++ object heirarchy via prototypal inheritance in node.js like how do I wrap a native object tree that looks like parent -> child a -> child b 
[21:44] jrabbit has joined the channel
[21:44] jrabbit: Is there an issue with mac osx and platform.h?
[21:45] Aria: Not that I'm aware of.
[21:45] jrabbit: I'm packaging noejs for fink and saw macports was patching it for some reason.
[21:45] Aria: amirpc: Well, depends -- do you need that heirarchy exposed, or can you just wrap each type separately?
[21:46] Aria: Interesting. Any commit messages of note on it, jrabbit ?
[21:46] amirpc: I need the heirarchy preserved in the js layer
[21:46] jrabbit: https://trac.macports.org/browser/trunk/dports/devel/nodejs/files/patch-platform.diff
[21:46] jrabbit: https://trac.macports.org/ticket/28561 hmmm
[21:47] threetee: hi everyone, I'm having problems requiring npm modules in my node.js code. details are at http://pastie.org/1648232 … I'm on OS X 10.6.6 with node installed by homebrew
[21:47] threetee: any ideas why?
[21:49] eresair has joined the channel
[21:49] lukegalea_ has joined the channel
[21:49] ltmon has joined the channel
[21:49] bartt has joined the channel
[21:52] prof-freud has joined the channel
[21:55] romainhuet has joined the channel
[21:56] zorzar has joined the channel
[21:56] squeeks_: export NODE_PATH="/usr/local/lib/node" in your .bash_profile?
[21:57] isaacs: threetee: echo "export NODE_PATH="$(npm config get root -s) >> ~/.bash_profile ; source ~/.bash_profile ; node test.js
[21:57] jackson_ has left the channel
[21:57] amirpc: anyone have any thoughts on how to wrap a C++ object heirarchy and maintain inheritance tree via prototypal inheritance?
[21:59] dguttman_ has joined the channel
[21:59] possibilities has joined the channel
[21:59] isaacs: tjholowaychuk: btw, express is one of the canonical examples of "a package with dependencies" that i'm using to test npm 1.0.
[22:00] tjholowaychuk: isaacs: sounds good
[22:00] isaacs: so, it should actually work :)
[22:00] possibilities has joined the channel
[22:00] brianmario has joined the channel
[22:00] davidwalsh has joined the channel
[22:00] tjholowaychuk: are you toying with the plugin thing at all? I see what you mean by that now
[22:00] tjholowaychuk: express-namespace or something could be all "hey I work with express 2.0 but not 1.x"
[22:01] tmzt_: anybody know of a xpath for json?
[22:01] tjholowaychuk: or would you just have express as a dep? (seems weird)
[22:01] threetee: squeeks_ isaacs: thanks, that worked! I had NODE_PATH set to $HOME/local/lib because that's where npm seemed to be placing the modules. Also, the npm binary was installed in $HOME/local/bin by the install script. Is that normal?
[22:01] davidascher has joined the channel
[22:01] isaacs: threetee: sure, if that's how you set it up.
[22:01] lukegalea_ has joined the channel
[22:02] losing has joined the channel
[22:02] threetee: isaacs: I didn't set it up per se, I just ran "curl http://npmjs.org/install.sh | sudo sh"
[22:02] isaacs: threetee: sorry, i mean, if node is in ~/local/bin/node, then that's how it would default
[22:03] jeromegn: tjholowaychuk: since your so involved with 'connect', I thought I'd ask: is touch() available to all session objects regardless of the Store used or is this a feature every store has to implement?
[22:03] jeromegn: reading the code here, but I'm a tad lost
[22:03] threetee: isaacs: sure, that makes sense, but I don't quite understand why having NODE_PATH set to ~/local/lib wouldn't have worked
[22:03] tjholowaychuk: jeromegn: will work with all
[22:03] tjholowaychuk: jeromegn: it just updates the prop
[22:04] tmzt_: why is url in core by the way?
[22:04] hornairs has joined the channel
[22:04] jiggliemon has joined the channel
[22:05] bradleymeck: tmzt_ because its actually really hard to deal w/ and is used for many many things i would presume
[22:06] jrabbit: does node's python dependencies exceed 2.5?
[22:07] darrend has left the channel
[22:07] jimt_ has joined the channel
[22:08] throughnothing has joined the channel
[22:09] tilgovi has joined the channel
[22:09] jeromegn: tjholowaychuk: Basically when I call touch() on the returned session object from Store.get(), my app throws a undefined method touch! so I'm thinking I'm using it on the wrong object, but i don't know how to gain access to that object somehow... (I'm using connect-mongodb if that changes anything)
[22:10] davidascher has joined the channel
[22:10] tjholowaychuk: jeromegn: hmm yeah req.session should be an instanceof connect.session.Session
[22:11] tjholowaychuk: unles something is wrong and it is undefined
[22:11] tjholowaychuk: the middleware itself transforms it to a Session on get()
[22:11] tjholowaychuk: but I have not tried a mongodb store
[22:11] jeromegn: alright, I'll keep on trying
[22:12] jeromegn: I'm using a pretty old version of connect I think
[22:13] zomgbie has joined the channel
[22:13] broofa has joined the channel
[22:13] aklt has joined the channel
[22:15] jpick has joined the channel
[22:16] bartt has joined the channel
[22:16] tmzt_: hmm, maybe nova+jsonpath
[22:19] dyer has joined the channel
[22:20] viewsrc has joined the channel
[22:20] viirya has joined the channel
[22:21] tjholowaychuk has joined the channel
[22:21] brapse has joined the channel
[22:21] Zil has joined the channel
[22:21] bartt has joined the channel
[22:21] FireFly|n900 has joined the channel
[22:22] AphelionZ has joined the channel
[22:23] sveimac has joined the channel
[22:24] lukegalea_ has joined the channel
[22:24] Lagnus has joined the channel
[22:25] bartt1 has joined the channel
[22:26] bartt2 has joined the channel
[22:26] xla has joined the channel
[22:27] bartt3 has joined the channel
[22:29] nwhite has joined the channel
[22:30] postwait has joined the channel
[22:30] postwait: Quick v8 question... if I create a Persistent<Value> from a Local<Value>
[22:30] postwait: how, later, do I tell v8 it can be collected?
[22:30] jrabbit has left the channel
[22:33] xsyn has joined the channel
[22:34] mraleph: postwait: Dispose it
[22:34] mraleph: postwait: see Persistent::Dispose 
[22:34] postwait: mraleph: gratzi
[22:36] bradleymeck: mraleph is there a way to prevent people from setting .__proto__ on things
[22:37] ph^ has joined the channel
[22:37] lukegalea_ has joined the channel
[22:37] mraleph: bradleymeck: I don't think so.
[22:37] bradleymeck: cause i just found an attack vector w/ shared contexts using it
[22:38] Remoun has joined the channel
[22:38] threetee has joined the channel
[22:39] stonecobra: just published my ssl proxy example.  Serve the same content on http and https: https://gist.github.com/861260
[22:39] axfraxfr has joined the channel
[22:40] jakehow has joined the channel
[22:40] kriszyp has joined the channel
[22:41] isaacs has joined the channel
[22:42] mraleph: bradleymeck: yeah it's pretty well known that once you've got a hold on prototype of something you can do all sorts of nasty stuff.
[22:42] bradleymeck: yea... wish i could lock out .__proto__ cause otherwise you simply cant share objects between contexts w/o hell happening
[22:42] rfay has joined the channel
[22:43] fr0stbyte_ has joined the channel
[22:43] mraleph: bradleymeck: btw. I think access checks should prevent this kind of attack even for shared contexts, but I am not sure that node exposes access tokens api
[22:43] bradleymeck: right now i dont think so, but ill look into it ty
[22:44] mraleph: bradleymeck: http://code.google.com/apis/v8/embed.html#security
[22:45] benvie has joined the channel
[22:46] asabil has joined the channel
[22:46] batok has joined the channel
[22:47] fr0stbyte has joined the channel
[22:51] mjr_ has joined the channel
[22:51] zorzar_ has joined the channel
[22:53] nivoc has joined the channel
[22:54] eresair has joined the channel
[22:55] fr0stbyte has joined the channel
[22:56] Egbert9e9 has joined the channel
[22:58] Croms has joined the channel
[22:59] glitterfang has joined the channel
[23:00] jmar777 has joined the channel
[23:01] CIA-75: node: 03Tom Hughes 07v0.4 * r74954ce 10/ (8 files in 4 dirs): 
[23:01] CIA-75: node: Add string class that uses ExternalAsciiStringResource.
[23:01] CIA-75: node: Change the natives to use this class instead of creating completely new
[23:01] CIA-75: node: strings. Reduces memory usage by about 1 MB. - http://bit.ly/hFGd0n
[23:02] mjr_: One extra megabyte!
[23:02] dguttman has joined the channel
[23:02] mjr_: That's over a MILLION bytes
[23:02] jimt has joined the channel
[23:03] OhMeadhbh has joined the channel
[23:03] richcollins has joined the channel
[23:04] fr0stbyte has joined the channel
[23:04] dominic__ has joined the channel
[23:07] stephen_mcd has joined the channel
[23:07] kristsk: holly molly!
[23:08] eventi has joined the channel
[23:08] Evet_ has joined the channel
[23:12] fr0stbyte has joined the channel
[23:13] glitterfang has joined the channel
[23:15] teemow has joined the channel
[23:15] bradleymeck: mraleph it looks like you can only set up that accesscheck stuff on new types through objecttemplate really if you want to share between contexts? ie. I cant share complex structures w/o replacing all the leaves w/ a replacement objecttemplate for that express purpose if i want to hide .__proto__?
[23:15] lukegalea_ has joined the channel
[23:17] losing has joined the channel
[23:17] mraleph: bradleymeck: yes
[23:17] mrlase has joined the channel
[23:18] bradleymeck: ugg im starting to think sharing between contexts is just bad
[23:19] wav1 has joined the channel
[23:19] piscisaureus: mraleph: if externalByteArray[] is not fast, does that mean that externalAsciiStringResource[] is also slow?
[23:20] chiel has joined the channel
[23:22] mjijackson has joined the channel
[23:22] bwinton has joined the channel
[23:23] tjholowaychuk has joined the channel
[23:23] sub_pop has joined the channel
[23:23] McMAGIC-- has joined the channel
[23:24] piscisaureus: ^-- if only I knew where to look in the v8 source code :p
[23:24] possibil_ has joined the channel
[23:24] bradleymeck: i try to read it but i can only get like 1 layer past v8.h as well XD
[23:24] mraleph: piscisaureus: that depends on your definition of slow. for example charCodeAt() will go through runtime system, there are no inline cases for external strings
[23:25] aklt has joined the channel
[23:25] mraleph: but only measurements can show real effect
[23:25] piscisaureus: mraleph, so internal string access *is* inlined?
[23:25] mraleph: in many places V8 likes to have internal string types and deals with them in inlined code... external strings are usually not among them
[23:26] piscisaureus: ryah: you checked Tom's patch for performance implications?
[23:26] mraleph: fast path for charCodeAt is inlined
[23:26] mikeal: anyone from Basho around right now?
[23:26] ryah: piscisaureus: no - but im watching the buildbots
[23:26] ryah: piscisaureus: i don't think it iwll slow down - do you?
[23:27] piscisaureus: ryah: I don't know. I was just asking mraleph :-)
[23:27] mraleph: as I say all the time: only the measurements can show the truth. 
[23:29] piscisaureus: mraleph: that is totally true, but usually it helps to know where to look.
[23:29] ryah: piscisaureus: let's watch http://arlolra.no.de/benchmarks/v0.4
[23:30] ryah: it's only the source code that's being Externalized
[23:30] ryah: i don't think it should have an impact
[23:31] mraleph: I just looked at it and wanted to say the same ;-0
[23:31] piscisaureus: yeah it makes lot of sense
[23:31] ryah: the commit isn't up yet on there
[23:31] jpstrikesback has joined the channel
[23:32] piscisaureus: mraleph: maybe we can brute-force the process of a fast program. Just generate all code you can think of and try to build/test/perf-test. Node has about 2MB of code so we only ~ 128^2000000  builds :-)
[23:32] mikeal: buildbot replacement in node.js
[23:32] mikeal: i predict that happening before the end of the year
[23:32] mikeal: cause buildbot is aweful
[23:32] piscisaureus: mikeal: the way to make that happen is by doing it :-O
[23:32] sechrist: we use hudson here
[23:33] sechrist: it's meh but serves the purpose
[23:33] kriszyp has joined the channel
[23:33] sechrist: is buildbot really that bad?
[23:33] mikeal: i'm not writing a buildbot replacement
[23:33] mikeal: not because i think it's hard, or becuase i don't want it
[23:34] ryah: buildbot is pretty bad
[23:34] sechrist: mikeal: it's just a lot of ground work. I don't think it'd be difficult
[23:34] mikeal: but i don't want to be the guy who fixes bugs in that, and reads the tickets from sys admins
[23:34] jesusabdullah: Tell me about buildbot.
[23:34] sechrist: same reason I haven't started a system for server provisioning in node similar to chef
[23:34] ryah: tom's commit is up on the http://arlolra.no.de/benchmarks/v0.4
[23:34] sechrist: node is very well suited for an opscode chef clone/improvement
[23:35] sechrist: actually the same is true of many things :\
[23:35] piscisaureus: v8-bench?
[23:35] jesusabdullah: Is there a good shell wrangling DSL for node yet?
[23:35] jesusabdullah: I know people have talked a lot about it
[23:35] jesusabdullah: !
[23:36] amirpc: I'm really getting nowhere trying to understand how to wrap C++ object heirarchys properly in js can someone please take a look at my pastebin and perhaps provide guidance? http://pastebin.com/MvpgMMr4
[23:36] sechrist: it would probably coffee or something so it's pretty
[23:36] ryah: 4ab5476e8 seemed to poorly effect startup time and memory
[23:36] sechrist: chef recipes i've written are kind of pretty
[23:36] sechrist: due to ruby's nature
[23:36] sechrist: I hate ruby though
[23:36] jesusabdullah: I've not learned ruby
[23:36] sechrist: I picked it up for chef
[23:36] jesusabdullah: I'm kinda put off by the attitudes of ruby webdudes, tbh
[23:36] sechrist: both puppet and chef are ruby things
[23:37] jesusabdullah: even though my impression is that ruby is a nice language
[23:37] sechrist: python doesn't have one of we'd use that
[23:37] sechrist: we're a python shop
[23:37] sechrist: with nodejs infecting our codebase
[23:37] bradleymeck: mraleph as a side note how can I set a specific function's accesstoken or can i execute those once i have a handle on them?
[23:37] piscisaureus: ryah: we should drop cygwin from the startup_memory graph
[23:37] jesusabdullah: Ah, pythons
[23:37] sechrist: I came in like "ew python"
[23:37] jesusabdullah: I really should write dnode-python
[23:37] sechrist: now i'm like python is aiiiight
[23:37] sechrist: YES
[23:38] jesusabdullah: Or, YOU should
[23:38] jesusabdullah: SOMEONE should ;)
[23:38] mraleph: bradleymeck: I think you can execute them if you have them.
[23:38] sechrist: I started but couldn't justify the time
[23:38] jesusabdullah: I wrote like 3/16 of it at one point
[23:38] eventi: ACTION uses puppet
[23:38] jesusabdullah: I need to add that to my list
[23:38] Evet has joined the channel
[23:38] jesusabdullah: I should fuck with twisted. I think that would be the best approach.
[23:38] sechrist: then I wouldn't use it :\
[23:38] jesusabdullah: orly?
[23:39] mraleph: I am going home to sleep. see ya all.
[23:39] jesusabdullah: What would you use for the backend stuff, sechrist?
[23:39] sechrist: idk, the guys here have warned me that twisted is insane
[23:39] jesusabdullah: I see.
[23:39] jesusabdullah: It might be!
[23:39] jesusabdullah: I looked at eventlet---I think that's what it's called anyway---and it also looked insane.
[23:39] pyrony has joined the channel
[23:39] sechrist: twisted is probably the best way to go
[23:39] sechrist: it's going to get into our project eventually
[23:40] fr0stbyte has joined the channel
[23:40] jesusabdullah: I think it's entirely possible to only use "the good parts," so to speak
[23:40] sechrist: but everything in python is blocking
[23:40] sechrist: so I fail to see the point of evented i/o
[23:40] jesusabdullah: Yeah, that's the problem
[23:40] jesusabdullah: Well
[23:40] lukegalea_ has joined the channel
[23:40] jesusabdullah: python's approach to that stuff makes reasoning about dnode-python hard, for me anyway
[23:40] sechrist: even if you make your entire read loop evented it's not much better than a specific thread spawned for a read loop
[23:40] jesusabdullah: I think twisted does basically the same thing node does, in terms of an event loop
[23:41] eventi: sechrist: working on something like puppet
[23:41] jesusabdullah: idk dude
[23:41] sechrist: eventi: in node?
[23:41] eventi: yeah
[23:41] sechrist: eventi++
[23:41] v8bot:  sechrist has given a beer to eventi. eventi now has 1 beers.
[23:41] jesusabdullah: sechrist: You got some repos for your python port of dnode?
[23:41] eventi: in my copious spare time
[23:41] jesusabdullah: eventi: Link?
[23:41] eventi: not even close to that yet
[23:41] sechrist: jesusabdullah: lmao, port?
[23:41] sechrist: I hacked on it for about 10m and stopped
[23:41] jesusabdullah: oh, not much to show then
[23:42] jesusabdullah: I see
[23:42] eventi: no - I'm going to get to my stop soon (i hack on the train)
[23:42] eventi: shoot me an email - sam name @gmail.com
[23:42] eventi: *same 
[23:42] jesusabdullah: I think it'll be easier for me to reason about now that dnode is broken into smaller parts
[23:42] jesusabdullah: eventi: No github?
[23:42] jesusabdullah: eventi: It's alright, I'll wait :P
[23:42] jesusabdullah: I defend in a month. I'm not ready. o___o;;
[23:42] eventi: lol
[23:43] eventi: big puppet meetup in NYC tomorrow
[23:43] eventi: I've been using it for abt 4 yrs, but it needs to be dethrowned
[23:43] eventi: *dethroned
[23:45] Schmallon has joined the channel
[23:47] losing has joined the channel
[23:47] jesusabdullah: maan, not in a writin' mood
[23:48] sechrist: jesusabdullah: dnode isn't that complex the thing is my python fu isn't strong enough to write the lambdas and crap effectively
[23:48] sechrist: well I actually didn't dive that far into it, it's probably not that difficult
[23:48] bradleymeck: ryah about? can we add a SetSecurityToken argument to vm.runinnewcontext, will let me patch some crud but dont want to get up to 4 args... that seems... overkill
[23:48] jesusabdullah: sechrist: Exactly. dnode in javascript is relatively simple, but python's way of reasoning about things doesn't jibe perfectly
[23:48] Schmallon: Does node.js have an option that corresponds to v8's --shell?
[23:48] couchquid has joined the channel
[23:49] sechrist: jesusabdullah: but it's been done in perl
[23:49] vnguyen has joined the channel
[23:49] sechrist: wouldn't perl have similar issues?
[23:49] jesusabdullah: That it has
[23:49] jesusabdullah: Some of them, maybe
[23:49] jesusabdullah: but not all the same ones
[23:50] jesusabdullah: For example: Before you can json-ify python objects, you have to do some tweaking because the standard library json action expects to turn *dicts* into JSON objects, not python objects.
[23:50] ryah: Schmallon: what's v8's --shell?
[23:50] jesusabdullah: It's doable, of course, but you gotta do some object hackery
[23:51] piscisaureus: No. No perf refressions.
[23:51] piscisaureus: *regressions
[23:51] jesusabdullah: Then, python's class-oriented, so you can't just dnode({defining my object here}). You have to write a class, and then later on be like DNode(Class)
[23:51] jesusabdullah: so it's more awkward
[23:51] Schmallon: ryah: It dumps you in an repl/shell once the Javascript program that is passed as an argument terminates
[23:51] jesusabdullah: and I keep thinking there has to be a way to do some syntactic sugars
[23:51] jesusabdullah: Maybe use decorators?
[23:52] mlncn has joined the channel
[23:52] jesusabdullah: somehow, though, I don't think so. I think you have to define your object, then your listen function, and then dnode with them
[23:52] jesusabdullah: oh well
[23:52] paulrobinson has joined the channel
[23:52] killfill has joined the channel
[23:52] jesusabdullah: and then there's adding asynchronous networking. >_< You get that in node "for free" so to speak
[23:52] jesusabdullah: ANYWAYS
[23:53] sechrist: yep
[23:53] ryah: Schmallon: no, we don't have that
[23:54] jesusabdullah: But yeah, I wanna play with twisted a little bit just to get my bearings
[23:54] jesusabdullah: and figure out how to reason about this stuff in a *cough* "pythonic" way
[23:55] bradleymeck: dont you say that P word in here
[23:55] jesusabdullah: perl?
[23:55] [[zz]] has joined the channel
[23:56] fisted_ has joined the channel
[23:57] sechrist: perl python php
[23:57] sechrist: the three Ps
[23:57] jesusabdullah: oh shit, I froze up my computer all trying to print this outrageous pdf
[23:57] mscdex: what about pizza? i thought that was one of the P's?
[23:57] jesusabdullah: That's the fourth p
[23:58] mscdex: http://en.wikipedia.org/wiki/Pizza_(programming_language)
[23:58] mscdex: :D
[23:59] mscdex: they used to incorporate pizza metaphors but no longer :(
[23:59] jesusabdullah: Shameful!
[23:59] jesusabdullah: Hmm
[23:59] jesusabdullah: I should implement lolcode in node.js someday
[23:59] jesusabdullah: because then I would know wth is going on
[23:59] jesusabdullah: because I can read javascript!
