[09:49] nodelog has joined the channel
[09:49] stagas has joined the channel
[09:50] morgabra has joined the channel
[09:50] izz has joined the channel
[09:50] dantalizing has joined the channel
[09:50] dantalizing has joined the channel
[09:50] gredman has joined the channel
[09:51] mikl has joined the channel
[09:51] mikl has joined the channel
[09:51] beejeebus has joined the channel
[09:52] beawesomeinstead has joined the channel
[09:52] beawesomeinstead has joined the channel
[09:52] jbergstroem has joined the channel
[09:55] dominictarr has joined the channel
[09:56] piscisaureus has joined the channel
[09:59] kuebk has joined the channel
[10:02] wereHams1er: abraxas: require('love').do()
[10:03] ajnasz has left the channel
[10:03] tokumine has joined the channel
[10:07] sam0t has joined the channel
[10:07] ajsie: wow .. coda editor looks really nice
[10:08] asabil has joined the channel
[10:11] ntelford has joined the channel
[10:12] alek_br has joined the channel
[10:15] Ori_P has joined the channel
[10:17] AntelopeSalad_ has joined the channel
[10:17] ElDios has joined the channel
[10:18] stagas_ has joined the channel
[10:18] sadiq_ has joined the channel
[10:18] Arash has joined the channel
[10:18] FMJaggy has joined the channel
[10:18] aklt_ has joined the channel
[10:18] tsyd has joined the channel
[10:19] clark_ has joined the channel
[10:19] SamuraiJack_ has joined the channel
[10:19] baudehlo1 has joined the channel
[10:19] piscisaureus: ryah_: why a window manager?
[10:19] Nexxy_ has joined the channel
[10:19] [[zzz]] has joined the channel
[10:20] piscisaureus: I could be my ignorance, but I am thinking metacity, kwm
[10:20] Gregor` has joined the channel
[10:20] jdub_ has joined the channel
[10:20] okuryu has joined the channel
[10:20] samcday_away has joined the channel
[10:20] Sami_ZzZ__ has joined the channel
[10:20] ljackson has joined the channel
[10:21] Draggor has joined the channel
[10:21] jperras has joined the channel
[10:22] jshsu has joined the channel
[10:22] zombiemetzger has joined the channel
[10:23] skm has joined the channel
[10:23] stagas: http://dl.dropbox.com/u/60716/amiga.jpg
[10:23] teemow has joined the channel
[10:25] Garo_ has joined the channel
[10:29] oscarkil1ed has joined the channel
[10:30] Sami_ZzZ__ has joined the channel
[10:30] matyr_ has joined the channel
[10:30] ben_alman has joined the channel
[10:32] Guest50153____ has joined the channel
[10:34] markwubb_ has joined the channel
[10:34] chapel has joined the channel
[10:34] voodootikigod_ has joined the channel
[10:34] doki_pen has joined the channel
[10:35] Nacho_ has joined the channel
[10:35] tbassetto has joined the channel
[10:35] TimerCroumlich has joined the channel
[10:35] inimino has joined the channel
[10:36] dask has joined the channel
[10:37] slickplaid has joined the channel
[10:37] cjm has joined the channel
[10:39] other has joined the channel
[10:40] ajsie: how do i lazyload modules
[10:40] ajsie: eg
[10:40] other: I had a question about websockets when pushing to joyent no.de
[10:40] ajsie: i have a npm package that has 10 files
[10:40] ajsie: i want to be able to lazy load the files when i need them
[10:40] matyr has joined the channel
[10:41] ajsie: not load them all when requiring that packages
[10:41] ajsie: that package
[10:42] other: should I be listening on 8080? then on the client, ws = new WebSocket("ws://localhost:8080/");?
[10:44] khasathan has joined the channel
[10:45] abraxas: ajsie: what do you mean? it already is lazy
[10:45] ajsie: i mean i have a npm package with 10 files in lib/
[10:46] ajsie: one fs.js, one ssh.js
[10:46] abraxas: so it's up to how the package has been coded, how lazy it is.
[10:46] ajsie: so if i want to require fs.js only .. how do i do?
[10:46] abraxas: you change the package
[10:46] ajsie: what do you mean
[10:46] ajsie: its one package
[10:46] abraxas: if it requires every file at the start, then that's how it is
[10:46] ajsie: yeah i dont want that
[10:46] abraxas: refactor
[10:47] ajsie: i want to do something like this .. require('my_pkg').fs
[10:47] ajsie: or require('my_pkg/fs')
[10:47] ajsie: i recall it was possible on npm
[10:47] SeyZ has joined the channel
[10:47] ajsie: the latter solution
[10:49] ajsie: ah
[10:49] ajsie: i require it all!
[10:49] ajsie: more simple=)
[10:50] chapel: you could always have each file export its main function
[10:50] ajsie: how
[10:50] chapel: and then have one file that you expose to npm, and in that you have exports.fs exports.ssh
[10:50] chapel: and it requires all your sub modules or whatever
[10:50] ajsie: yeah i know
[10:50] ajsie: thats what im doing now
[10:50] chapel: ok
[10:50] ajsie: then the user is forced to require them all
[10:50] ajsie: even if they are not using them all
[10:51] tokumine has joined the channel
[10:51] ajsie: not good for memoery
[10:51] chapel: thats not an issue
[10:51] ajsie: yeah it is
[10:51] ajsie: if the package is getting bigger
[10:51] ajsie: want it to be lke yui
[10:51] ajsie: like
[10:51] chapel: if you aren't using the code, its not going to be an issue
[10:51] ajsie: ah
[10:51] ajsie: didnt know
[10:51] chapel: v8 optimizes based on what code is actually used
[10:51] ajsie: ah
[10:51] ajsie: cool!
[10:52] mikl has joined the channel
[10:52] chapel: there might be a slight memory hit because the modules are cached, but as far as I know, its not a big deal and unless you have a huge, like 1gb module I doubt you'd even notice
[10:53] jwa has left the channel
[10:53] ajsie: yeah=)
[10:53] ajsie: ill try to put good codes in there
[10:54] ajsie: so people will want to use everything =)
[10:56] tbranyen: good codes own
[10:56] ajsie: node owns
[10:57] other: can anyone help with ws configuration when pushing to node? I've never used websockets before but it works great locally
[10:57] littke has joined the channel
[10:58] MuzzleFork has joined the channel
[10:58] gaYak_ has joined the channel
[11:00] skm_ has joined the channel
[11:00] shachaf has joined the channel
[11:00] beawesomeinstead has joined the channel
[11:00] beawesomeinstead has joined the channel
[11:01] piscisaureus: mraleph: you know if Isolate::New has a lot of overhead?
[11:02] mraleph: that depends on you definition of overhead.
[11:02] jetienne has joined the channel
[11:02] MuzzleFork has joined the channel
[11:02] mraleph: *your definition
[11:02] dominictarr has joined the channel
[11:03] mraleph: I would say that it has certain overhead.
[11:04] xla has joined the channel
[11:05] mraleph: piscisaureus: why?
[11:05] markwubben has joined the channel
[11:06] piscisaureus: mraleph: because I want to try a really simple api that creates a new isolate, runs a script in a thread and return the results
[11:07] piscisaureus: mraleph: but if creating a new isolate takes a lot of time (or if it consumes a great deal of memory) it is not worth the effort
[11:07] mraleph: I takes as much time a starting up a VM takes (that is creating context + initial setup)
[11:07] mraleph: *it
[11:08] mraleph: it takes as much space as a new VM takes.
[11:08] mraleph: that is all heap and all datastructures will be duplicated.
[11:08] dcelix has joined the channel
[11:09] piscisaureus: mraleph: it duplicates the existing v8 heap?
[11:09] mischief__ has joined the channel
[11:09] matyr_ has joined the channel
[11:10] stagas_ has joined the channel
[11:10] mraleph: no :-)
[11:10] sprout1 has joined the channel
[11:11] Croms has joined the channel
[11:11] piscisaureus: mraleph: hmm seems like your conventional wisdom "only benchmarks will show" applies here :-)
[11:11] kal-EL__ has joined the channel
[11:11] mraleph: yes
[11:11] disqk has joined the channel
[11:11] FMJag has joined the channel
[11:12] terite_ has joined the channel
[11:12] sstreza has joined the channel
[11:12] mraleph: but of course creating and destroying thousands of isolates is not an intended use case.
[11:12] vilhonen_ has joined the channel
[11:12] _sri has joined the channel
[11:12] cyraxx: woah
[11:13] galaxywatcher has joined the channel
[11:13] sjbreen has joined the channel
[11:13] RushPL has joined the channel
[11:13] RusAlex has joined the channel
[11:13] keeto has joined the channel
[11:13] tlrobinson has joined the channel
[11:13] RusAlex: hi guys, help me please, trying to play with helpers
[11:13] RusAlex: check my snippets http://pastebin.com/Pe0bDnUK  
[11:13] RusAlex: trying to output myvar defined in app.helpers, and geting the  error ' #{myvar}' myvar is not defined
[11:13] digitalsatori has joined the channel
[11:13] muhqu has joined the channel
[11:13] F1LT3R has joined the channel
[11:13] devrim has joined the channel
[11:13] ralphholzmann has joined the channel
[11:13] jshsu has joined the channel
[11:13] kei has joined the channel
[11:13] k1ttty has joined the channel
[11:14] fljitovak has joined the channel
[11:14] SvenDowideit has joined the channel
[11:14] pekim has joined the channel
[11:14] Gregor has joined the channel
[11:14] Scala has joined the channel
[11:15] jperras has joined the channel
[11:15] piscisaureus: mraleph: I would like to address the critique that leveraging multiple cores is hard in node, while doing that in a traditional webserver is easy. But it seems that creating a new isolate for serving up a page would not be worse than starting a cgi process, even faster.
[11:17] mraleph: creating isolate to serve a page?
[11:17] piscisaureus: yes
[11:18] Croms has joined the channel
[11:18] piscisaureus: no obligation to use it
[11:18] eee_c has joined the channel
[11:18] felixge has joined the channel
[11:18] mraleph: I don't have any measurements, but thats probably a lot of overhead if you create isolate for each request.
[11:18] felixge: piscisaureus: catch me if you can
[11:19] mike5w3c has joined the channel
[11:19] piscisaureus: mraleph: or, for example, if you want to do image processing in js, you could actually do so without increasing server latency (image processing might take a long time)
[11:19] felixge: mraleph: I want to contribute a little function to v8, and was wondering if the v8-dev list was the right place to start the discussion (https://groups.google.com/forum/#!topic/v8-dev/H7lYWXKdZpk)
[11:19] mraleph: having an isolate basicly means doing _everything_ from scratch. I mean compiling code, adapting ICs to dynamic feedback.
[11:20] mraleph: felixge: yep I saw that message.
[11:20] nonnikcam has joined the channel
[11:20] mraleph: felixge: there is no answer to it though.
[11:20] Charuru has joined the channel
[11:21] V1 has joined the channel
[11:21] mraleph: I don't see any obvious problems with having such function, but it might have some security or other implications. 
[11:21] mraleph: piscisaureus: having isolates for long running tasks makes sense.
[11:23] felixge: mraleph: so should I just start working on a patch? It's probably easier to discuss potential problems based on an actual implementation. From my (still naive) point of view, I think I'll just wire up a shortcut for something that already exists, so I don't think it should make things any less secure than before
[11:24] dominictarr has joined the channel
[11:25] __tosh has joined the channel
[11:27] liquidproof has joined the channel
[11:30] marienz has joined the channel
[11:34] MaxguN has joined the channel
[11:34] simme has joined the channel
[11:35] fugoki has joined the channel
[11:36] sadiq has joined the channel
[11:36] dask_ has joined the channel
[11:36] mikey_p|afk has joined the channel
[11:36] Draggor1 has joined the channel
[11:37] Croms has joined the channel
[11:37] mikey_p has joined the channel
[11:37] eee_c has joined the channel
[11:37] devrim has joined the channel
[11:37] Scala has joined the channel
[11:37] fljitovak has joined the channel
[11:37] luke` has joined the channel
[11:38] keeto has joined the channel
[11:38] tbassetto has joined the channel
[11:38] Gregor has joined the channel
[11:38] jtrally has joined the channel
[11:38] eb4890 has joined the channel
[11:38] alek_br has joined the channel
[11:38] mike5w3c has joined the channel
[11:38] alex_b has joined the channel
[11:39] jperras has joined the channel
[11:39] sor3nsen has joined the channel
[11:39] msucan has joined the channel
[11:40] jshsu has joined the channel
[11:41] fairwinds has joined the channel
[11:41] jasong_at_apache has joined the channel
[11:41] fugoki: :q
[11:41] m00p has joined the channel
[11:42] samcday: Anyone else get Error: socket hang up
[11:42] sadiq has joined the channel
[11:42] samcday:     at CleartextStream.<anonymous> (http.js:1271:45) when they use https.get()? >_<
[11:42] shaunau has joined the channel
[11:42] lukegalea has joined the channel
[11:43] jspiros has joined the channel
[11:44] dominictarr_ has joined the channel
[11:44] V1 has joined the channel
[11:44] royvandermeij has joined the channel
[11:45] royvandermeij: hey guys, im trying to use nodeunit to test a simple javascript class
[11:45] royvandermeij: is that possible?
[11:45] Viper-7 has joined the channel
[11:45] royvandermeij: or does it have to be node modules?
[11:46] royvandermeij: (and i'd like to stay in the console
[11:48] khasathan has left the channel
[11:49] matyr has joined the channel
[11:50] bradleymeck has joined the channel
[11:52] felixge: royvandermeij: if you're interested in trying out something new, http://github.com/felixge/node-microtest
[11:53] felixge: royvandermeij: no docs yet, but a nice example: https://github.com/felixge/node-microtest/blob/master/test/system/example/test-file.js
[11:53] felixge: https://github.com/felixge/node-microtest/blob/master/test/fixture/example/file.js
[11:53] royvandermeij: that's looking good indeed
[11:53] felixge: royvandermeij: all your test code is evaluated in another v8 context
[11:54] felixge: so it doesn't have access to any node.js I/O stuff
[11:54] felixge: so you can write true unit tests
[11:54] felixge: not the shitty integration testing people call unit testing these days
[11:54] royvandermeij: hehe
[11:54] royvandermeij: ok, i'll have another question then
[11:54] royvandermeij: what if I have something like this
[11:55] felixge: royvandermeij: also note how you can recompile a certain function again, this allows to inject a fake 'File' reference here: https://github.com/felixge/node-microtest/blob/master/test/fixture/example/file.js#L8
[11:55] royvandermeij: bla.js: var Bla = { sayHello: "Hello" }
[11:55] felixge: as far as I know, this is the only testing library in JS that allows this
[11:55] royvandermeij: how can i require that file and test if sayHello is indeed "Hello"
[11:55] royvandermeij: ?
[11:57] felixge: hm
[11:57] felixge: right now you'd have to access test._context.Bla
[11:57] felixge: but I haven't officially exposed this yet
[11:57] felixge: but I think I will
[11:57] royvandermeij: that would be awesome
[11:57] felixge: but yes, all variable declared inside the file you are testing are accessible
[11:58] felixge: the plan is to use this library for node.js as well as browser testing
[11:58] felixge: I mean testing browser scripts
[11:58] royvandermeij: i haven't dived into node.js yet
[11:58] royvandermeij: but am writing a lot of js code
[11:58] royvandermeij: so i was looking for a way to unit test my code through the console
[11:58] felixge: the library itself will never run in the browser (which makes sense, if your tests depend on the environment they are run in, they are no unit tests)
[11:58] felixge: royvandermeij: this library is meant exclusively for the console
[11:59] royvandermeij: :)
[11:59] felixge: in fact, great care has been given to good error reporting output
[11:59] felixge: and exit codes
[11:59] MuzzleFork has joined the channel
[11:59] royvandermeij: i'll watch the code :)
[11:59] felixge: and simplicity
[11:59] felixge: :)
[11:59] felixge: ok
[11:59] felixge: I should have an official release / docs pretty soon now
[11:59] royvandermeij: just for now i'm trying to find a solution for nodeunit
[11:59] markc_ has joined the channel
[12:00] hunterloftis has joined the channel
[12:00] felixge: the library is the result of ~1 year experience in writing unit tests in node.js as well as the last 3-4 month of thinking about improving it :)
[12:00] royvandermeij: Niice
[12:00] felixge: royvandermeij: hm, sorry :)
[12:00] felixge: nodeunit I don't do
[12:00] royvandermeij: maybe it's a bare node.js thingie
[12:01] royvandermeij: require a custom javascript library
[12:01] markc_ has joined the channel
[12:01] felixge: royvandermeij: right now you'd have to manually load the file with the fs module
[12:01] royvandermeij: but if I do var Bla = require("../dist/bla") it just retuns a empty hash
[12:01] hunterloftis has joined the channel
[12:01] felixge: royvandermeij: and then use the vm module to evaluate it
[12:01] felixge: require will not work
[12:01] felixge: because it wraps your module in a closure
[12:01] royvandermeij: ah
[12:01] felixge: making variables declared inside of it private
[12:02] royvandermeij: I understand
[12:02] felixge: only stuff that is assigned to exports.<myVar> will become visible
[12:02] royvandermeij: aha
[12:03] royvandermeij: that's too bad
[12:03] royvandermeij: but understandable
[12:03] felixge: yes, the current state of testing in JS is very sad *shakesfist*
[12:03] felixge: but help is on the way
[12:03] felixge: :)
[12:03] royvandermeij: :)
[12:03] royvandermeij: Go do some overtime please ;-)
[12:04] RushPL has joined the channel
[12:08] beawesomeinstead has joined the channel
[12:08] beawesomeinstead has joined the channel
[12:08] felixge: royvandermeij: on it ;)
[12:08] JojoBoss has joined the channel
[12:09] xandrews has joined the channel
[12:11] markc_ has joined the channel
[12:12] Jonasbn_ has joined the channel
[12:12] royvandermeij: sweet. fs and vm are working fine :)
[12:12] royvandermeij: thnx felixge 
[12:13] mape: Anyone used node-canvas and drawImage?
[12:13] royvandermeij: and immediately i get slapped in the face for using Object.extend :)
[12:13] konobi: mocked++
[12:14] sivy has joined the channel
[12:16] felixge: royvandermeij: justice
[12:16] felixge: ;)
[12:17] royvandermeij: hehe
[12:18] tiagoa has joined the channel
[12:19] dnolen has joined the channel
[12:20] SvenDowideit has joined the channel
[12:20] royvandermeij: what's the best way to define a default hash which you can override with a hash trough arguments?
[12:21] royvandermeij: I used to do Object.extend(this.default_options, options || {});
[12:21] postwait has joined the channel
[12:23] jdub has joined the channel
[12:26] hlindset has joined the channel
[12:26] alex_b has joined the channel
[12:27] mc_greeny has joined the channel
[12:27] jscheel has joined the channel
[12:27] liar has joined the channel
[12:29] tanepiper: royvandermeij: might want to check out using underscore.js for doing that, http://documentcloud.github.com/underscore/#defaults
[12:30] eee_c1 has joined the channel
[12:31] dylang has joined the channel
[12:32] jetienne: V1: (node) warning: possible EventEmitter memory leak detected. 11 listeners added. i got those in socket.io , you fixed it no ?
[12:32] V1: Yes
[12:33] royvandermeij: tanepiper: ah nice
[12:33] royvandermeij: have heard of underscore.js before, but haven't used it before
[12:33] kriszyp has joined the channel
[12:34] tanepiper: royvandermeij: would definetly recommend it, has a lot of nice functions for objects and arrays
[12:34] eee_c has joined the channel
[12:35] V1: jetienne: You using latest version?
[12:36] Sbioko has joined the channel
[12:36] Sbioko: hello!
[12:37] jetienne: V1: nah, some 1-2month old one
[12:37] V1: Oh, latest npm version should solve that issue
[12:39] jetienne: V1: i checked. i had 0.6.16 and npm got 0.6.17
[12:39] sveimac has joined the channel
[12:39] fumanchu182 has joined the channel
[12:39] charlenopires has joined the channel
[12:40] jetienne: V1: i no more see it. so it is fixed :) thx
[12:40] perlmonkey2 has joined the channel
[12:41] d0k has joined the channel
[12:41] mpoz2 has joined the channel
[12:42] [[zz]] has joined the channel
[12:43] jetienne: V1: oh no... it is there when i disconnect from a chrome mac.... but not from a chrome linux... fun no ? :)
[12:43] xandrews has joined the channel
[12:43] astropirate has joined the channel
[12:44] bergie has joined the channel
[12:44] ngs has joined the channel
[12:46] arpegius has joined the channel
[12:46] \sega has joined the channel
[12:47] jonaslund has joined the channel
[12:49] jlecker has joined the channel
[12:50] nerdfunk has joined the channel
[12:51] johnmclear1 has joined the channel
[12:52] johnmclear1: For those who didn't see it int he mailing list, I present you http://primarywall.com - a NodeJS based sticky note platform (open source obv)
[12:52] eldar has joined the channel
[12:52] hunterloftis has joined the channel
[12:52] johnmclear1: I was wondering how people are going about redirecting socket/web requests to node instances?  Are people using nginx / varnish in front of node?  How is this working w/ websocket requests?  etc..  Ta :)
[12:54] hunterloftis: johnmclear1: we're using nginx as a reverse proxy
[12:54] hunterloftis: johnmclear1: but yeah, that wont' work with websockets, so we're having socket.io go to a direct port
[12:55] hunterloftis: johnmclear1: so www.blah.com:80 <-- reverse proxied to blah.com:3100, and blah.com:3100 directly connecting to the websocket
[12:55] johnmclear1: We're looking at using HAPRoxy
[12:55] Sbioko: johnmclear1: Varnish is HTTP cache
[12:55] johnmclear1: Any thoughts on that?
[12:55] hunterloftis: johnmclear1: No experience with that. Using cluster.
[12:55] johnmclear1: Ah
[12:56] johnmclear1: hunterloftis: I am worried that by having socket.io on a weird port we may have some users behind we're proxys that wont be able to connect to the socket
[12:56] johnmclear1: We work a lot w/ schools that have rules in place to only allow outbound 80 + 443
[12:56] hunterloftis: johnmclear1: I agree, I share a similar concern
[12:56] matschaffer has joined the channel
[12:56] johnmclear1: So I'm not forever alone.
[12:56] johnmclear1: The easy fix of course is to bring up a new VM
[12:57] hunterloftis: johnmclear1: Well, with node 4 supporting SSL, you can use it directly
[12:57] johnmclear1: Oh rly?  How is that?
[12:57] hunterloftis: johnmclear1: We built our system on 0.2.x so we needed nginx for security
[12:57] hunterloftis: johnmclear1: If you don't need that extra ssl layer, just use cluster for load balancing/multiple cores
[12:57] johnmclear1: ah
[12:58] alex_b has joined the channel
[12:58] aphelion has joined the channel
[12:58] skm has joined the channel
[12:58] johnmclear1: Okay we're going w/ the slack fix..  Bringing up a new VM
[12:59] hunterloftis: johnmclear1: Bringing up a new VM - how will you ensure that sessions etc transfer between the two?
[12:59] malkomalko has joined the channel
[12:59] johnmclear1: It's not for balancing/clustering
[12:59] johnmclear1: its for a different project
[12:59] hunterloftis: johnmclear1: Oh I see
[12:59] johnmclear1: I think I see what you are saying though
[12:59] hunterloftis: johnmclear1: Are you using express?
[12:59] johnmclear1: not sure ;/
[13:00] hunterloftis: johnmclear1: hah ok it's the largest web app framework for node
[13:00] hunterloftis: johnmclear1: I mention it because it also solves the "multiple app" problem: https://github.com/visionmedia/express/blob/master/examples/vhost/app.js
[13:00] johnmclear1: okay cool if we get to that point we will look into it
[13:01] hunterloftis: johnmclear1: Oh I forgot to mention: https://github.com/LearnBoost/cluster/blob/master/examples/vhost.js
[13:01] johnmclear1: currently primarywall is tiny and this game we are pushing out will only get a fewhundered k connections per day
[13:01] hunterloftis: So instead of a new VM, you could cluster multiple http servers
[13:01] digitalsatori has joined the channel
[13:01] hunterloftis: Cool, what game?
[13:02] johnmclear1: A multi mouse tag game, it's completely stupid but we wrote the engine so we're just spending a few days getting it live & documented before pushing it out 
[13:02] hunterloftis: haha okay cool
[13:02] johnmclear1: we wrote the game to learn about NodeJS/Socket.io etc. -- Would be a waste not to publish it
[13:02] hunterloftis: Definitely
[13:02] johnmclear1: https://github.com/LearnBoost/cluster/blob/master/examples/vhost.js <-- still binds node instance to TCP 80
[13:03] hunterloftis: Yep but you can bind multiple apps to TCP 80
[13:03] hunterloftis: Maybe I don't understand the issue you're facing.
[13:03] johnmclear1: ah
[13:03] johnmclear1: Yea I get you
[13:03] graysky has joined the channel
[13:03] johnmclear1: so that one node instance accepts the connection on 80 then serves a certain folder based on the request url
[13:04] hunterloftis: Exactly
[13:04] graysky has left the channel
[13:04] johnmclear1: hrm, then you have persistant session state across multiple apps, I want to avoid that
[13:04] johnmclear1: because one bug in app A coudl bring down app B
[13:04] Poetro has joined the channel
[13:04] hunterloftis: Well, when I say exactly, I should say "almost"
[13:04] johnmclear1: and bugs are something we will encounter  :P
[13:04] hunterloftis: each app will be running in a separate server
[13:04] hunterloftis: With its own session
[13:05] johnmclear1: hrm, not according to what I'm reading..
[13:05] johnmclear1: It's still only spawning a single node thread, so any bug would kill that thread
[13:05] hunterloftis: cluster(server) spawns N threads where N = your # of corse
[13:05] hunterloftis: cores*
[13:06] boaz has joined the channel
[13:06] hunterloftis: If a worker dies it's restarted
[13:06] johnmclear1: oh
[13:06] dominictarr_ has joined the channel
[13:06] hunterloftis: I know what you mean though, because both the http servers are initialized within that single vhost.js file
[13:06] herbySk has joined the channel
[13:06] FireFly has joined the channel
[13:06] hunterloftis: So if an exception bubbled up it could theoretically get there
[13:07] hunterloftis: Normally cluster takes a path to the app you'd like to instantiate (to prevent that very problem) so my guess is, there's an elegant way around that with vhosts as well
[13:08] dyer has joined the channel
[13:08] dyer has joined the channel
[13:08] TomsB has joined the channel
[13:08] pauls has joined the channel
[13:09] hunterloftis: Good Q though - what's the 'stable' way to use connect.vhost with cluster, so exceptions are trapped within a worker thread instead of the main thread?
[13:10] johnmclear1: Yep
[13:11] __sri has joined the channel
[13:12] Kingdutch has joined the channel
[13:12] jimt_ has joined the channel
[13:12] tswicegood_ has joined the channel
[13:13] TomsB: Question about callback.. http://pastebin.com/HMrk2waL
[13:13] adelcambre has joined the channel
[13:13] TomsB: How to return value?
[13:13] unomi has joined the channel
[13:13] stagas_ has joined the channel
[13:13] xla_ has joined the channel
[13:13] TomsB: If I call this function, it returns nothing
[13:14] jetienne: TomsB: you dont return values, you call another callback
[13:14] pietern has joined the channel
[13:14] xastey has joined the channel
[13:14] TomsB: Like how?
[13:14] jetienne: like othercallback()
[13:14] jetienne: TomsB: like in a browser when you handle dom events
[13:15] varioust has joined the channel
[13:15] TomsB: Then I need to refactore my code..
[13:16] arpegius_ has joined the channel
[13:16] c4milo has joined the channel
[13:18] k1ttty has joined the channel
[13:18] TomsB: jetienne: Refacoring will be a big hassle.. I have this one function which is breaking all.. There is no way I could tell this function to wait for result and return it?
[13:18] dask has joined the channel
[13:19] rfay has joined the channel
[13:19] unlink has joined the channel
[13:19] unlink has joined the channel
[13:20] amacleod has joined the channel
[13:20] bergie has joined the channel
[13:22] samcday_away has joined the channel
[13:22] Sami_ZzZ__ has joined the channel
[13:22] lessthanzero has joined the channel
[13:23] xandrews has joined the channel
[13:24] mytrile has joined the channel
[13:24] ljackson has joined the channel
[13:25] liar has joined the channel
[13:25] Draggor has joined the channel
[13:26] johnmclear1 has left the channel
[13:26] Ori_P has joined the channel
[13:26] k1ttty has joined the channel
[13:29] hlindset has joined the channel
[13:29] quijote has joined the channel
[13:30] matyr has joined the channel
[13:34] galaxywatcher has joined the channel
[13:34] tony_ has joined the channel
[13:35] pekim has joined the channel
[13:36] pengwynn has joined the channel
[13:38] dominictarr_ has joined the channel
[13:39] harth has joined the channel
[13:39] fermion has joined the channel
[13:39] devdazed has joined the channel
[13:39] incon has joined the channel
[13:39] dominictarr_ has joined the channel
[13:43] RusAlex has joined the channel
[13:44] trotter has joined the channel
[13:46] TomsB_ has joined the channel
[13:46] arpegius has joined the channel
[13:47] f1lt3r_ has joined the channel
[13:47] Viper-7 has joined the channel
[13:49] danyork has joined the channel
[13:49] Croms has joined the channel
[13:49] hvgotcodes has joined the channel
[13:50] shaunau has joined the channel
[13:53] void_ has joined the channel
[13:54] eee_c has joined the channel
[13:54] iFire` has joined the channel
[13:55] vilsonvieira has joined the channel
[13:57] whoops has joined the channel
[13:58] ehedenst has joined the channel
[13:59] mattrobenolt has joined the channel
[13:59] 36DABGFDD has joined the channel
[13:59] \sega has joined the channel
[14:02] sam0t has joined the channel
[14:02] alek_br has joined the channel
[14:03] sirkitree has joined the channel
[14:04] jano_ has joined the channel
[14:05] earlnj has joined the channel
[14:06] tdmackey_ has joined the channel
[14:06] Roelven has joined the channel
[14:06] jetienne has joined the channel
[14:07] earlnj: hello test
[14:07] Kami_ has joined the channel
[14:07] Guest13216 has joined the channel
[14:07] raphdg has joined the channel
[14:08] hvgotcodes has joined the channel
[14:08] FireFly has joined the channel
[14:08] hunterloftis has joined the channel
[14:08] Sbioko has joined the channel
[14:08] jscheel has joined the channel
[14:08] sstreza has joined the channel
[14:08] TimerCroumlich has joined the channel
[14:08] voodootikigod has joined the channel
[14:08] chapel has joined the channel
[14:08] asabil has joined the channel
[14:08] jbergstroem has joined the channel
[14:08] gredman has joined the channel
[14:08] wang has joined the channel
[14:08] broofa has joined the channel
[14:08] sigue_ has joined the channel
[14:08] maru_cc has joined the channel
[14:08] romainhuet has joined the channel
[14:08] fly-away has joined the channel
[14:08] mmso has joined the channel
[14:08] swaj has joined the channel
[14:08] rphillips_ has joined the channel
[14:08] apoc_ has joined the channel
[14:08] up_the_irons has joined the channel
[14:08] hoodow has joined the channel
[14:08] Virtuo has joined the channel
[14:08] wao has joined the channel
[14:08] earlnj: anyone using jsdom
[14:08] sigue has joined the channel
[14:09] Tobias|| has joined the channel
[14:09] NuckingFuts has joined the channel
[14:09] dominictarr has joined the channel
[14:09] mikl has joined the channel
[14:09] mikl has joined the channel
[14:10] Aria has joined the channel
[14:10] Insanity5902 has joined the channel
[14:11] earlnj: quit
[14:11] mikl: earlnj: doesn't seem to work :)
[14:12] earlnj: you mean jsdom
[14:13] warz has joined the channel
[14:13] warz has joined the channel
[14:15] BillyBreen has joined the channel
[14:16] sirkitree has joined the channel
[14:16] sigue_ has joined the channel
[14:16] indutny has joined the channel
[14:17] arpegius_ has joined the channel
[14:18] beawesomeinstead has joined the channel
[14:18] beawesomeinstead has joined the channel
[14:18] liquidproof has joined the channel
[14:18] systemfault has joined the channel
[14:18] artgoesh1re has joined the channel
[14:18] mape: so, npm has started installing stuff in the current directory?
[14:19] vladikoff has joined the channel
[14:20] earlnj has left the channel
[14:20] hvgotcodes has joined the channel
[14:20] FireFly has joined the channel
[14:20] hunterloftis has joined the channel
[14:20] Sbioko has joined the channel
[14:20] jscheel has joined the channel
[14:20] sstreza has joined the channel
[14:20] TimerCroumlich has joined the channel
[14:20] voodootikigod has joined the channel
[14:20] chapel has joined the channel
[14:20] asabil has joined the channel
[14:20] jbergstroem has joined the channel
[14:20] gredman has joined the channel
[14:20] wang has joined the channel
[14:20] broofa has joined the channel
[14:20] maru_cc has joined the channel
[14:20] romainhuet has joined the channel
[14:20] mmso has joined the channel
[14:20] swaj has joined the channel
[14:20] rphillips_ has joined the channel
[14:20] apoc_ has joined the channel
[14:20] up_the_irons has joined the channel
[14:20] hoodow has joined the channel
[14:20] Virtuo has joined the channel
[14:20] wao has joined the channel
[14:21] ceej has joined the channel
[14:22] wink_ has joined the channel
[14:22] c4milo has joined the channel
[14:23] sigue has joined the channel
[14:24] yhahn has joined the channel
[14:24] wilmoore has joined the channel
[14:25] Clooth has joined the channel
[14:25] timmywil has joined the channel
[14:25] mmso has joined the channel
[14:26] royvandermeij: i have a regex question
[14:26] royvandermeij: i'd like to get all non-word characters except spaces
[14:27] teemow has joined the channel
[14:27] sveimac has joined the channel
[14:27] fadeddata has joined the channel
[14:27] sveisvei has joined the channel
[14:28] konobi: [^\s\w]
[14:28] springmeyer has joined the channel
[14:28] royvandermeij: konobi: you are the hero of the day
[14:28] royvandermeij: i've been trying that for 30 minutes now
[14:29] Sbioko has left the channel
[14:29] konobi: royvandermeij: though that'll include _ too
[14:29] konobi: [^\sA-Za-z0-9]
[14:30] royvandermeij: ah nice
[14:30] royvandermeij: that's another way to look at it
[14:30] sigue has joined the channel
[14:31] ralphholzmann: heyo
[14:31] fabian__ has joined the channel
[14:32] ralphholzmann: in Buffer.write() calls, is the offset _always_ zero?
[14:32] ralphholzmann: e.g.
[14:32] ralphholzmann: if I do - var buf = new Buffer(2); buf.write("a"); buf.write("b");  --- will buf.toString("utf8") == "ab" or "b"
[14:32] pdelgallego has joined the channel
[14:32] ralphholzmann: wondering if I have to keep track of the offset or not
[14:33] okuryu has joined the channel
[14:33] mattrobenolt: ralphholzmann: It will keep overwriting.
[14:34] ralphholzmann: mattrobenolt: thanks!
[14:34] ralphholzmann: but the write call returns the amount written
[14:34] mattrobenolt: http://nodejs.org/docs/v0.4.5/api/buffers.html#buffer.write
[14:34] ralphholzmann: so I can use that to kee track, no?
[14:34] ralphholzmann: *keep
[14:35] mattrobenolt: ralphholzmann: It does not.
[14:35] mattrobenolt: At least, it's not for me properly in console.
[14:35] ralphholzmann: mattrobenolt: it says "Returns number of octets written."
[14:36] ralphholzmann: hmm
[14:36] mattrobenolt: I can't get anything returned except 0, 1, or 2.
[14:37] dominictarr has joined the channel
[14:37] mattrobenolt: Oh, nevermind, haha
[14:37] springmeyer has left the channel
[14:37] mattrobenolt: I declared the width of the Buffer as "2". :)
[14:37] davidsklar has joined the channel
[14:37] astropirate has joined the channel
[14:37] sigue has joined the channel
[14:38] FireFly|n900 has joined the channel
[14:38] Yuffster has joined the channel
[14:40] deedubs has joined the channel
[14:40] markc has joined the channel
[14:42] earlnj2 has joined the channel
[14:43] losing has joined the channel
[14:43] fmarceau has joined the channel
[14:43] Vladimir1 has joined the channel
[14:44] postwait has joined the channel
[14:44] sigue has joined the channel
[14:44] colinclark has joined the channel
[14:44] davidwalsh has joined the channel
[14:44] hij1nx has joined the channel
[14:45] ruxkor has joined the channel
[14:45] earlnj2: is there a public thread going on here? (newbie)
[14:45] Horofox has joined the channel
[14:46] \sega has joined the channel
[14:47] arpegius has joined the channel
[14:48] saschagehlich: V1: ping
[14:48] V1: saschagehlich: pong
[14:48] sugardave has joined the channel
[14:48] dmcquay has joined the channel
[14:48] saschagehlich: V1: did you ever get "Cannot call method 'end' of null" in socket.io/client.js:66:21?
[14:49] Lorentz has joined the channel
[14:49] V1: saschagehlich: I think I did a couple of times, but most of the causes have been resolved by now
[14:49] saschagehlich: V1: so just updating should fix it?
[14:49] Clooth has joined the channel
[14:50] V1: saschagehlich: Which version are you currently running
[14:50] saschagehlich: V1: latest commit on master
[14:50] V1: saschagehlich: That it should have been resolved already
[14:50] V1: Than*
[14:51] sigue has joined the channel
[14:51] V1: saschagehlich: But if checkout line #66 there is no method .end https://github.com/LearnBoost/Socket.IO-node/blob/master/lib/socket.io/client.js#L66
[14:51] saschagehlich: V1: huh... one sec
[14:52] saschagehlich: V1: no - server-side
[14:52] V1: saschagehlich: That is server side
[14:52] Fullmoon has joined the channel
[14:52] saschagehlich: V1: oh. wait, I'm confused
[14:53] Fullmoon has left the channel
[14:53] daniellindsley has joined the channel
[14:53] V1: saschagehlich: The client doesn't have a "client.js" fiel
[14:53] V1: file*
[14:53] saschagehlich: V1: yea I know, but I'm just confused because the socket.io-node submodule is also called socket.io in my project
[14:54] figital has joined the channel
[14:54] saschagehlich: V1: yea I see... i updated the submodule a few days ago but didn't deploy it yet... I'll give it a try
[14:54] V1: saschagehlich: Oki, is easy to reproduce or totally random?
[14:54] edw has joined the channel
[14:54] saschagehlich: V1: totally random
[14:54] saschagehlich: like the connect_failed one
[14:55] V1: saschagehlich: That's why I asked, I have seen allot of random bugs happening before :p
[14:55] alek_br has joined the channel
[14:55] yhahn has left the channel
[14:56] mkrecny has joined the channel
[14:56] mkrecny: has the CDN version of socket.io been updated recents (http://cdn.socket.io/stable/socket.io.js)
[14:56] jano has joined the channel
[14:56] mkrecny: *recently
[14:56] kawaz_air has joined the channel
[14:56] V1: mkrecny: nope
[14:56] saschagehlich: V1: https://github.com/LearnBoost/socket.io/issues#issue/109 << maybe my connect_failed problem is a reconnect_failed problem?
[14:57] V1: saschagehlich: That could be
[14:57] V1: And that would be an easy fix
[14:57] SeyZ has joined the channel
[14:57] markc has joined the channel
[14:57] saschagehlich: V1: could you...? :)
[14:57] bradleymeck has joined the channel
[14:58] jano has joined the channel
[14:58] Kami_ has joined the channel
[14:58] tmpvar has joined the channel
[14:58] sigue has joined the channel
[14:59] tfe_ has joined the channel
[14:59] tfe_ has joined the channel
[14:59] matyr has joined the channel
[15:00] mkrecny: V1: I've been using the CDN hosted client code for awhile. Recently I've been unable to have clients connect. Javascript console looks like this: ET http://33.33.33.10:5555/socket.io/xhr-polling//1301929131092 undefined (undefined)
[15:00] mkrecny: * GET http://33.33.33.10:5555/socket.io/xhr-polling//1301929131092 undefined (undefined)
[15:00] liquidproof has joined the channel
[15:00] mkrecny: where 33... is the location of my VM
[15:00] no-gooder has joined the channel
[15:00] V1: saschagehlich: I'll check it out tonight.. It's 5:00PM atm so I'm going home in a few minutes
[15:01] saschagehlich: sure, thanks V1. did you get an answer by the nodecamp guys btw?
[15:02] V1: saschagehlich: they are considering a barcamp style so everybody should just prepare a talk of some sort
[15:02] V1: mkrecny: It's a really odd message
[15:02] ocrampal has joined the channel
[15:02] saschagehlich: V1: yea i mean regarding your tickets problem
[15:02] crodas has joined the channel
[15:03] V1: mkrecny: Did these errors occur when you restarted your server
[15:03] V1: saschagehlich: Still no word of that :'(
[15:03] mkrecny: V1: they're persistent across many restarts on my VM and in production
[15:04] V1: mkrecny: What I mean is do they only showup after you have restarted server? Because It could be that it's trying to connect to the server with a old session id
[15:04] SubStack: node camp should take place in the forest
[15:04] shiawuen has joined the channel
[15:04] timcosgrove has joined the channel
[15:04] timcosgrove has left the channel
[15:04] SubStack: with scary ghost stories around a camp fire
[15:05] mkrecny: V1: no nothing like that - I've encountered that problem before and it's not the same
[15:05] SubStack: the horror of nested callbacks woooo scary
[15:05] EyePulp has joined the channel
[15:05] sigue has joined the channel
[15:06] Samot: lol 
[15:07] adamroderick has joined the channel
[15:08] stonecobra has joined the channel
[15:08] adamroderick has joined the channel
[15:08] SeyZ has joined the channel
[15:09] Jasmine has joined the channel
[15:09] boaz has joined the channel
[15:09] kawaz_air has joined the channel
[15:09] isaacs has joined the channel
[15:10] markc has joined the channel
[15:10] earlnj2: anyone using jsdom, having problems getting examples to run?
[15:11] 50UAAHVHD has joined the channel
[15:12] sigue has joined the channel
[15:12] bradleymeck: substack they are scary! they dont hide temporal gaps!
[15:12] dominictarr has joined the channel
[15:14] V1: mkrecny: Thats odd, but igtg now
[15:14] mkrecny: V1: k cya
[15:15] deepthawtz has joined the channel
[15:16] lukegalea has joined the channel
[15:16] herbySk has joined the channel
[15:16] earlnj3 has joined the channel
[15:17] arpegius_ has joined the channel
[15:17] markc has joined the channel
[15:18] jakehow has joined the channel
[15:19] sigue_ has joined the channel
[15:20] aheckmann has joined the channel
[15:20] ckknight has joined the channel
[15:20] ckknight: hey beautiful people
[15:21] davidvanleeuwen has joined the channel
[15:21] msilverman2 has joined the channel
[15:21] stonecobra: ckknight: I like the idea of escort, fwiw
[15:21] bradleymeck: yello ckknight
[15:22] ckknight: stonecobra: I'm glad. Most of my projects are borne out of frustration, and I was frustrated by the existing routing libraries
[15:22] gtramont1na has joined the channel
[15:22] ckknight: stonecobra: I'm also always open to feedback.
[15:22] gtramont1na has joined the channel
[15:22] tjholowaychuk has joined the channel
[15:23] earlnj3: earlnj3: not yet
[15:23] stonecobra: are you thinking about allowing binding of other middleware anywhere in the routing hierarchy, so it is more than just routing?  I am speaking specifically in terms of connect/express
[15:24] bradleymeck: multiple protocol support + header field routing = win 
[15:24] stonecobra: I like the url-gen, the converters, but submounting needs to allow everything, not just routing
[15:24] tjholowaychuk: stonecobra: it does
[15:25] mape: tjholowaychuk: was the version, had to sell my left arm to get that version onto debian :/
[15:25] tjholowaychuk: mape: hahaha yeah it's not to fun sometimes
[15:25] tjholowaychuk: sometimes it's really smooth, sometimes not so much
[15:25] tjholowaychuk: I forget what the restriction was for the old one
[15:25] ckknight: stonecobra: I'm not sure by what you mean by submounting needs to allow everything, could you provide an example?
[15:25] tjholowaychuk: 1.8 or w/e
[15:26] ckknight: stonecobra: I'm fine with expanding its purpose as long as routing remains efficient and the idea isn't better suited for separate middleware.
[15:26] bradleymeck: is there a convention on how to prevent multiple parses of a httprequest body
[15:26] jsdommer has joined the channel
[15:27] sigue has joined the channel
[15:27] willwhite has joined the channel
[15:27] stonecobra: so, I could write a caching plugin that static caches GETs of a certain object, and a POST/PUT/DELETE would be able to automatically invalidate the cache for that specific object, all via middleware.  I assume tjholowaychik is going to say yes :)
[15:28] fugoki has joined the channel
[15:28] gtramont1na has joined the channel
[15:28] stonecobra: s/chik/chuk
[15:28] wilmoore has joined the channel
[15:28] tjholowaychuk: stonecobra: yeah
[15:29] stonecobra: ckknight, no need to expand its purpose, just don't prevent connect/express from 'just working'
[15:29] tjholowaychuk: the only restriction connect really has, is that you cannot map async tasks as a dep tree, allowing multiple middleware to work in parallel before hitting the "end point" aka route etc
[15:29] stonecobra: perhaps I will just build an example to add to your docs
[15:29] ckknight: stonecobra: oh yeah, I wasn't planning on that, I coded it to keep the middleware system in mind.
[15:29] tjholowaychuk: which would be interesting to build, but a lot trickier for people to use
[15:30] ckknight: stonecobra: by default, the 404 handler just calls next()
[15:30] stonecobra: tjholowaychuk, I can't think of a personal need for parallel anything for express/connect, just more examples of finer grained controll
[15:31] tjholowaychuk: stonecobra: there are lots of cases, but also lots of cases that need to be serial as well
[15:31] tjholowaychuk: so it would be tough to manage
[15:31] bzinger has joined the channel
[15:31] galaxywatcher has joined the channel
[15:31] tjholowaychuk: I might prototype that some day though and profile it a bit
[15:31] tjholowaychuk: curious
[15:34] sigue has joined the channel
[15:34] ckknight: stonecobra: feel free to code up your example, though, I think it's one that makes sense. Though personally I'm more a fan of fragment caching rather than full-page output caching.
[15:35] gtramont1na_ has joined the channel
[15:35] stonecobra: ckknight: if you are doing a data api, not a UI api, full page caching is the bomb.  I would just like it to be middleware, instead of hard coded in the impl for CRUD.
[15:35] k1ttty has joined the channel
[15:35] sveimac has joined the channel
[15:35] gwoo has joined the channel
[15:36] ckknight: ah, yes, I can definitely see that.
[15:36] stonecobra: think of a REST/memcache middleware wrapper, that 'just works' if the app.param is set correctly
[15:36] pita has joined the channel
[15:36] ckknight: stonecobra: there are two hard things in computer science: naming things and cache invalidation.
[15:36] jscheel: tjholowaychuk: is there any reason for using a dynamicHelper for setting page titles over using route middleware that calls res.local()?
[15:36] pita: Hi, anyone knows how to kick a client with socket.io ?
[15:37] tjholowaychuk: jscheel: either is fine, dynamicHelpers would be for more generic things that you want at all times
[15:37] fugoki has joined the channel
[15:37] tjholowaychuk: unless you have a middleware to set those up
[15:37] jscheel: tjholowaychuk: cool
[15:37] SeyZ has left the channel
[15:38] f1lt3r_ has joined the channel
[15:38] stonecobra: woohoo! today is the first day in about 6 weeks that node master tests clean on OS X for me.  Thanks ryah
[15:38] sprout has joined the channel
[15:39] fugoki has joined the channel
[15:39] alek_br has joined the channel
[15:41] rburhum has joined the channel
[15:41] sigue has joined the channel
[15:41] max_dev has joined the channel
[15:43] baudehlo has joined the channel
[15:43] ash_: is there way to debug where you get cannot find module?
[15:44] ash_: is there way to see which absolute path node.js tries to use
[15:45] dominictarr has joined the channel
[15:45] tbranyen: ash_: require.paths?
[15:45] ash_: thanks
[15:46] omni5cience has joined the channel
[15:46] no-gooder has joined the channel
[15:46] no-gooder has left the channel
[15:46] stevereed has joined the channel
[15:47] arpegius has joined the channel
[15:48] sigue has joined the channel
[15:48] pita: is there any good key value store written in node.js ?
[15:49] tjholowaychuk: pita: there are at least 3 or 4 on the modules page
[15:49] Yuffster_work has joined the channel
[15:49] mape: Anyone had issues with Caught exception: Error: Non-socket exists at  /tmp/node-webworker-5236 and solved it?
[15:50] tokumine has joined the channel
[15:50] deedubs: pita: https://github.com/mranney/node_redis
[15:50] ckknight: pita: for something like that, wouldn't you want to use something like redis?
[15:51] stonecobra: pita: https://github.com/visionmedia/keys
[15:51] stonecobra: pita: https://github.com/creationix/nstore
[15:51] pita: ckknight we want a database that we can ship with our programm and that works out of the box
[15:52] pita: stonecobra: thx :)
[15:52] ckknight: pita: can it be an in-memory store? ;-)
[15:52] pita: ckknight: no, it should be persistent
[15:53] pita: deedubs: is it persistent?
[15:53] deedubs: its redis sooo YES!
[15:53] deedubs: http://redis.io
[15:53] norviller has joined the channel
[15:54] baudehlo: redis is only kinda persistent :)
[15:54] timmywil has joined the channel
[15:55] sigue has joined the channel
[15:55] astropirate has joined the channel
[15:56] timcosgrove has joined the channel
[15:56] wdperson has joined the channel
[15:57] timcosgrove has left the channel
[15:57] pyrony has joined the channel
[15:57] eresair has joined the channel
[15:58] mattly has joined the channel
[16:00] konobi: baudehlo: matt?
[16:00] baudehlo: hello
[16:00] konobi: howdy!
[16:00] timcosgrove has joined the channel
[16:00] baudehlo: hi
[16:00] konobi: nice to see another perl face =0)
[16:01] Kernity has joined the channel
[16:01] baudehlo: hah
[16:01] timcosgrove has left the channel
[16:01] konobi: baudehlo: how's the big evil corp treating you?
[16:02] Kingdutch has joined the channel
[16:02] baudehlo: meh. It is what it is :)
[16:02] sigue_ has joined the channel
[16:02] konobi: baudehlo: checked out Haraka... seems pretty nice
[16:03] konobi: haven't checked much more deeply though... SMTP generally sends me running off into the corner rocking back and forth these days
[16:03] baudehlo: thanks. Not entirely sure it's ready yet for real use... I'll announce a 1.0 when it is :)
[16:03] konobi: yeah, let james know and i'll dig in at that point
[16:05] baudehlo: it's pretty close to be fair... just want to get URIBL working first.
[16:05] broofa has joined the channel
[16:05] alek_br has joined the channel
[16:05] onar has joined the channel
[16:06] stutter has joined the channel
[16:09] flippyhead has joined the channel
[16:09] sigue has joined the channel
[16:10] deedubs: baudehlo: will attachments be supported in Haraka?
[16:10] baudehlo: I'm already using it for my outbound server (because qmail doesn't do AUTH).
[16:11] baudehlo: deedubs: it is pretty neutral about what's in the mail. What kind of attachment support are you after?
[16:11] slloyd has joined the channel
[16:11] deedubs: Just generally curious
[16:11] deedubs: we currently use sendgrid for incoming email to our app
[16:12] baudehlo: ok.
[16:12] baudehlo: so you basically want to get attachments out of the emails coming in?
[16:12] deedubs: yeah
[16:13] SamuraiJack__ has joined the channel
[16:13] Charuru: oh lol, i wrote a realtime component a few weeks ago
[16:13] robotarmy has joined the channel
[16:13] Charuru: realized just now that it's basically the same thing as nowjs
[16:14] baudehlo: deedubs: so yeah that's going to be possible real soon now.
[16:14] baudehlo: though it's a little complicated due to JS requiring Buffers to support binary data (in case that's what you're after).
[16:15] nibblebot has joined the channel
[16:15] baudehlo: what I suspect will happen is the email parser will just become an EventEmitter and emit events for attachments.
[16:15] deedubs: that'd work
[16:15] deedubs: firing events for plain_body html_body and attachment?
[16:16] baudehlo: I think I'll just store the text parts in the object.
[16:16] colinclark has joined the channel
[16:17] sigue has joined the channel
[16:17] briznad has joined the channel
[16:18] arpegius_ has joined the channel
[16:20] met__ has joined the channel
[16:20] tanepiper: Which one of the Mat* in this channel is Mathias Meyer aka roidrage?
[16:20] tbranyen: roidrage that sounds nasty
[16:20] matschaffer: not I
[16:22] Guest12726: https://gist.github.com/901906
[16:22] Guest12726: can anyone tell me why the sass inside my jade isn't compiling
[16:22] spaceinvader has joined the channel
[16:22] stephank has joined the channel
[16:23] boaz has joined the channel
[16:23] tanepiper: yo dawg, i heard you liked sass inside your jade
[16:24] spaceinvader: it's just outputting an empty <style> tag :(
[16:24] tanepiper: i think you need to indent one
[16:24] tanepiper: i.e.
[16:24] tanepiper: :sass
[16:24] tanepiper:     body
[16:24] spaceinvader: there is a 2sp indent
[16:25] sigue_ has joined the channel
[16:25] tanepiper: hmm, cat output doesn't look like it, but that's all i can see so not sure :(
[16:26] rphillips has joined the channel
[16:26] spaceinvader: tanepiper: we need to go deeper
[16:26] spaceinvader: i'll try jade and sass from git
[16:27] pita: how can I pretty print a catched exception?
[16:27] spaceinvader: instead of npm
[16:27] pita: I always get stuff like this { stack: [Getter/Setter],
[16:27] pita:   arguments: [ 'length', undefined ],
[16:27] pita:   type: 'non_object_property_load',
[16:27] dmcquay_ has joined the channel
[16:31] blueadept has joined the channel
[16:31] ckknight|2 has joined the channel
[16:31] steffkes has joined the channel
[16:31] sigue has joined the channel
[16:32] dominictarr has joined the channel
[16:32] mike5w3c has joined the channel
[16:33] jasong_at_apache has left the channel
[16:34] eee_c has joined the channel
[16:34] Aria has joined the channel
[16:36] spaceinvader: tanepiper: herp, it was just an mistake in the sass syntax
[16:36] stutter: i know this isn't a "node specific issue" but i'm trying to install the zeromq package via npm, and i'm getting errors from it; not really sure how to go about fixing the errors to get it to install.
[16:36] isaacs: stutter: npm owner ls zeromq
[16:36] ckknight has joined the channel
[16:36] isaacs: stutter: or: npm view bugs zeromq
[16:36] malkomalko has joined the channel
[16:36] sprout1 has joined the channel
[16:36] isaacs: er... npm view zeromq bugs
[16:36] sivy has joined the channel
[16:37] EyePulp: ACTION wonders when we'll start getting decent response times on npm help requests.
[16:37] sprout1 has left the channel
[16:37] isaacs: EyePulp: :P
[16:37] EyePulp: =P
[16:37] EyePulp: tick tock dude. =)
[16:37] isaacs: stutter: also, this: https://github.com/JustinTulloss/zeromq.node/issues
[16:38] sigue has joined the channel
[16:39] stutter: ah
[16:39] stutter: found it
[16:40] stutter: isaacs: mm, word. luckily i found out what was causing the problem (the npm package doesn't like it when you prefix your zeromq installation somewhere other than where it expects it)
[16:40] isaacs: stutter: no.  not at all.  that's definitely a bug
[16:40] isaacs: packages should stay in theri box.
[16:40] isaacs: "make install" has no place in a package.json file
[16:40] alek_br has joined the channel
[16:41] isaacs: just stop at "make" and let npm handle the rest.
[16:41] TheCowboy has joined the channel
[16:41] stutter: yeah i checked out the issues, didn't see anything jump out immediately; but i probably could have looked at it a little better
[16:41] halfhalo has joined the channel
[16:42] halfhalo has joined the channel
[16:42] nefD has joined the channel
[16:43] hvgotcodes has joined the channel
[16:44] hvgotcodes: if i create a global.window property via the node jquery module, is it a bad idea to do global = window?
[16:46] sigue has joined the channel
[16:47] ineation has joined the channel
[16:47] robotarmy has joined the channel
[16:48] nefD has joined the channel
[16:48] arpegius has joined the channel
[16:48] kmiyashiro has joined the channel
[16:49] tiagoa has joined the channel
[16:50] Kingdutch has joined the channel
[16:50] no-gooder has joined the channel
[16:50] no-gooder: hey guys
[16:51] ckknight: hey, no-gooder
[16:51] no-gooder: is there any good tutorial how to install npm and node.js to cenos ?
[16:51] no-gooder: on vps.
[16:51] dominictarr_ has joined the channel
[16:52] no-gooder: CentOS*
[16:52] marcosvm has joined the channel
[16:52] jano has joined the channel
[16:53] nefD has joined the channel
[16:53] jeromegn has joined the channel
[16:53] sigue has joined the channel
[16:53] no-gooder: or anybody has experienced it? i'm perpearing to move my project on my local to vps on "hostagor".
[16:54] gtramont1na has joined the channel
[16:54] qFox has joined the channel
[16:55] hvgotcodes: hmm in javascript is the order of definition important?
[16:55] s0urce has joined the channel
[16:55] mikeal has joined the channel
[16:55] btipling_: hvgotcodes: definition?
[16:56] btipling_: variable assignment yes, function declarations no
[16:56] s0urce: hi
[16:56] alek_br_ has joined the channel
[16:56] figital has joined the channel
[16:56] s0urce: is there any module for mysql access?
[16:56] qFxo has joined the channel
[16:56] btipling_: yes
[16:56] marcosvm_ has joined the channel
[16:56] no-gooder: s0urce,  lots of
[16:56] btipling_: sonnym: https://github.com/joyent/node/wiki/modules
[16:56] btipling_: er
[16:57] btipling_: s0urce: https://github.com/joyent/node/wiki/modules
[16:57] btipling_: sorry
[16:57] s0urce: ty
[16:57] raidfive has joined the channel
[16:57] btipling_: https://github.com/joyent/node/wiki/modules#database
[16:57] s0urce: any1 best? ;)
[16:57] prettyrobots has joined the channel
[16:58] noahcampbell has joined the channel
[16:58] no-gooder: s0urce,  i use https://github.com/Sannis/node-mysql-libmysqlclient
[16:58] hvgotcodes: btipling_: i have NS.TWO, which uses NS.ONE, and NS.ONE is defined at the bottom of the file, and its blowing up
[16:58] no-gooder: it's pretty awsome.
[16:58] s0urce: ty again ;)
[16:59] deepthawtz has joined the channel
[16:59] no-gooder: sooo
[16:59] btipling_: hvgotcodes: that's variable assignment
[16:59] no-gooder: no answer to my questionn??
[16:59] btipling_: so yes it matters
[16:59] hvgotcodes: btipling_: yep just realized that
[16:59] hvgotcodes: dang
[17:00] davidcoallier has joined the channel
[17:00] sigue has joined the channel
[17:01] perezd has joined the channel
[17:01] sveimac: hvgotcodes: make it a named function :)
[17:01] btipling_: no-gooder: installing npm on centos?
[17:01] btipling_: just use the bash script?
[17:01] wilmoore has joined the channel
[17:02] hvgotcodes: sveimac: what do you mean?
[17:02] no-gooder: btipling_, where is it ?
[17:02] btipling_: no-gooder: check the readme 
[17:02] btipling_: it's like wget blablblah | sh or something
[17:02] zylo has joined the channel
[17:03] btipling_: curl http://npmjs.org/install.sh | npm_install=rc sh
[17:03] btipling_: no-gooder: ^^
[17:03] no-gooder: btipling_, i found it. ok. have you had any experience with node.js on vps ??
[17:04] btipling_: I have it running on an ec2 instance
[17:04] btipling_: does that count?
[17:04] btipling_: on ubuntu, I just used the npm installer
[17:04] btipling_: for modules
[17:04] btipling_: I use sudo
[17:04] btipling_: to install it
[17:04] btipling_: curl http://npmjs.org/install.sh | sudo npm_install=rc sh
[17:04] no-gooder: btipling_,  they say using sudo command on server is dangerous.
[17:05] no-gooder: http://groups.google.com/group/npm-/browse_thread/thread/37b710e5891f1ab6
[17:05] btipling_: so is getting out of bed in the morning
[17:05] hunterloftis_ has joined the channel
[17:05] isaacs: no-gooder: that's out of date.
[17:05] btipling_: don't install modules you don't trust
[17:05] Sean_away has left the channel
[17:05] isaacs: it's *safer* to use root now
[17:05] no-gooder: isaacs,  oh :) what's changed ?
[17:05] isaacs: (still don't install things you don't trust)
[17:06] btipling_: they got rid of the warning
[17:06] btipling_: I think that's about it? :P
[17:06] isaacs: no-gooder: before running arbitrary scripts in the build process, it downgrades the uid to "nobody"
[17:06] isaacs: btipling_: no, that's not it by a long shot.  it manages uids and ownership now.
[17:06] tbranyen: hmmm still can't install npm without going full root
[17:06] tbranyen: you never go full root!
[17:06] btipling_: ah cool
[17:06] isaacs: ACTION is "they"
[17:07] btipling_: that's good to know
[17:07] btipling_: it's not like it was safe running as the user
[17:07] btipling_: so the whole sudo warning was a nonstarter imo
[17:07] sigue has joined the channel
[17:08] V1 has joined the channel
[17:08] datapimp has joined the channel
[17:08] stonecobra: no-gooder, this is how apache and a lot of other programs operate.  They actually lose permissions by being able to downgrade to those perms via root access
[17:08] V1: saschagehlich: ping
[17:08] malkomalko has joined the channel
[17:09] EyePulp: tbranyen: I went full root once.  my career never recovered.
[17:09] christophsturm has joined the channel
[17:09] no-gooder: EyePulp, :D
[17:09] EyePulp: =)
[17:09] tbranyen: :D
[17:09] gtramont1na has joined the channel
[17:09] ryah_: tbranyen: i use npm without going full root
[17:09] unlink has joined the channel
[17:10] isaacs: btipling_: it is safer running arbitrary scripts as a non-root admin than as root
[17:10] blueadept: might anyone have an idea of why this authentication will not go through? http://pastie.org/private/j6mwhxoozyphivtdvcdkq
[17:10] isaacs: btipling_: but it's safer still to downgrade the permissions
[17:10] isaacs: which requires root :\
[17:10] tbranyen: ryah_: i meant installing it for the first time
[17:10] tbranyen: sudo isn't sufficient
[17:10] ryah_: tbranyen: i install it all the time without root
[17:10] tbranyen: do you have nonstandard default permissions set on system wide folders?
[17:10] ryah_: no
[17:10] isaacs: tbranyen: just compile node with --prefix=~/local
[17:11] isaacs: tbranyen: and npm will live in ~/local/bin and ~/local/node_modules
[17:11] tbranyen: i'm just saying on a clean arch linux install with a clean default node install npm will not install cleanly without going full root
[17:11] tbranyen: isaacs: yeah i'll do that in the future def
[17:11] isaacs: there are too many ways to install software.
[17:11] tbranyen: and i was just making a tropic thunder joke anwyays
[17:11] ryah_: node and npm should not be installed in system directories
[17:11] tbranyen: that at least one person got
[17:11] murz has joined the channel
[17:11] tbranyen: you guys need to watch that masterpiece :-/
[17:11] aho has joined the channel
[17:11] christophsturm: If i get an error message Error: EINVAL, Invalid argument at IOWatcher.callback (net.js:905:24) , what's the best way to find out whats really happening?
[17:12] ryah_: in fact - anything you compile yourself should not go into system directories
[17:12] saschagehlich: V1: pon
[17:12] saschagehlich: g
[17:12] davemo has joined the channel
[17:12] tbranyen: ryah_: thats a linu...lifestyle choice
[17:12] meandi has joined the channel
[17:12] V1: saschagehlich: Do you have more info about your client.end issue?
[17:12] tbranyen: i enjoy my freedoms linux grants me
[17:12] sh1mmer has joined the channel
[17:12] seanbeausoleil has joined the channel
[17:12] saschagehlich: V1: updated to the latest commit - works fine now!
[17:13] V1: saschagehlich: Keep grepping that log ;) you never know when these random bugs popup
[17:13] evanmeagher has joined the channel
[17:13] ryah_: tbranyen: if you want to do it wrong that's okay - but don't make it seem like npm has bugs
[17:13] ryah_: npm is a development tool
[17:13] ryah_: not a system package manger
[17:13] V1: saschagehlich: Glad it "solves" your issues ;)
[17:13] tbranyen: ryah_: again it was a joke, watch tropic thunder :)
[17:14] ryah_: you want dpkg
[17:14] saschagehlich: V1: yup, node-exception-mailer helps me finding all the uncaught exceptions *g
[17:14] isaacs: ryah_: i don't actually consider "/usr/local" a "system" dir
[17:14] saschagehlich: V1: did you have a look at the connect_failed thingy already?
[17:14] tbranyen: never go full retard
[17:14] tbranyen: ... etc etc
[17:14] isaacs: i mean, it is, but it's not owned by the os
[17:14] sigue has joined the channel
[17:14] ryah_: tbranyen: :)
[17:14] isaacs: yes, awesome movie
[17:14] V1: saschagehlich: I just finished dinner, So I'm looking at it after this connect sessions > socket.io connection issue
[17:14] tbranyen: woot on the same page :D
[17:15] saschagehlich: V1: great, ty!
[17:15] arexus has joined the channel
[17:15] ryah_: isaacs: i never install things into /usr/local
[17:15] isaacs: i kno
[17:15] V1: saschagehlich: But it will not be fixed "officially" before 0.7 is out
[17:16] saschagehlich: V1: alright
[17:16] mape: isaacs: any way to configure npm so that it works like it did and installs things in /usr/local/lib/node ?
[17:17] patzak has joined the channel
[17:17] patzak has joined the channel
[17:17] V1: Yeh it's actually quite anoying that it spams my folder structure with node_modules.. 
[17:18] isaacs: mape: no.  it's just a prefix now.  modules go in node_modules.  bins go in bin.
[17:18] V1: My dropbox size went from 2 gig left to 500mb left by localizing it.. 
[17:18] isaacs: mape: that change dramatically simplifies a lot of stuff.
[17:18] arpegius_ has joined the channel
[17:18] joshthecoder has joined the channel
[17:18] rfay has joined the channel
[17:18] isaacs: mape: add it to your NODE_PATH if you want to require() global packages, but it's better to just install them locally
[17:19] mape: owell
[17:19] Kingdutch has joined the channel
[17:19] isaacs: mape: there's also this weird user-expectation thing that happens when you do `npm install foo require("foo")` and someone else does it, and it doesn't work, because they used homebrew or put the node bin in some weird place.
[17:20] SubStack: I wonder if using fork() in a node c++ module could work to circumvent thread safety issues in a lib
[17:20] isaacs: mape: if you *must* add the global path to your NODE_PATH, then it's more expected.
[17:20] isaacs: mape: also, it makes it clear that this is not the Golden Path.
[17:20] SubStack: just using pipes and sockets to tie the results back together
[17:20] ryah_: listen people. install everything into $HOME/local/(package). Like this: ./configure --prefix=$HOME/local/node-v0.4.5 && make install
[17:20] ryah_: then put this in your bashrc or zshrc:
[17:20] ryah_: PATH="$HOME/local/bin:/opt/local/bin:/usr/bin:/sbin:/bin"
[17:20] ryah_: LD_LIBRARY_PATH="/opt/local/lib:/usr/local/lib:/usr/lib"
[17:20] ryah_: for i in $HOME/local/*; do [ -d $i/bin ] && PATH="${i}/bin:${PATH}" [ -d $i/sbin ] && PATH="${i}/sbin:${PATH}" [ -d $i/include ] && CPATH="${i}/include:${CPATH}" [ -d $i/lib ] && LD_LIBRARY_PATH="${i}/lib:${LD_LIBRARY_PATH}" [ -d $i/lib/pkgconfig ] && PKG_CONFIG_PATH="${i}/lib/pkgconfig:${PKG_CONFIG_PATH}" [ -d $i/share/man ] && MANPATH="${i}/share/man:${MANPATH}"
[17:20] ryah_: done
[17:20] ryah_: export PATH
[17:21] tjholowaychuk has joined the channel
[17:21] SubStack: or set up `modules`
[17:21] isaacs: ryah_: gist?
[17:21] SubStack: ACTION needs to do that
[17:21] ryah_: https://gist.github.com/902015
[17:21] SubStack: actually I need to set up a better version of `modules`, fuck tcl
[17:21] ryah_: sorry
[17:21] sigue has joined the channel
[17:21] msilverman2 has joined the channel
[17:21] isaacs: that's pretty slick :)
[17:22] SubStack: perhaps I should revisit my hackmanager idea
[17:22] SamuraiJack has joined the channel
[17:22] mape: isaacs: so what does npm link do?
[17:23] alek_br has joined the channel
[17:23] isaacs: crap, i was supposed to write a blog post on that.  got distracted with other things
[17:23] SubStack: isolated self-contained library ecosystem to make staging and deployment super easy
[17:23] spaceinvader: is there any way to include another jade file into jade?
[17:24] spaceinvader: i want to split up my huge file
[17:25] hornairs has joined the channel
[17:25] isaacs: mape: `npm help link` is pretty helpful
[17:25] SubStack: spaceinvader: you can define a local or helper and !{contents} it
[17:25] SubStack: with jade.render or whichever
[17:26] stagas: spaceinvader: with express you can do partial('view.jade')
[17:26] SubStack: oh that's much better
[17:26] spaceinvader: this is just for a static site
[17:26] spaceinvader: (i'm writing my tumblr theme in jade/sass and then compiling it)
[17:27] tjholowaychuk: spaceinvader: you could maybe a local function that does a sync read/render of your other file(s)
[17:27] mintao has joined the channel
[17:27] postwait: ryah_: I did a pull request for some SSL fixes.  Currently you can't use node.js as a SSL server for chrome clients without the patch.
[17:27] postwait: You need to be able to turn off SSLv2 on the server side -- the patch allows for that.
[17:28] postwait: ryah_: https://github.com/joyent/node/pull/873
[17:28] malkomalko has joined the channel
[17:29] rpitre has joined the channel
[17:29] Twitter has joined the channel
[17:29] hunterloftis has joined the channel
[17:31] saschagehlich: tjholowaychuk: ping
[17:31] tjholowaychuk: saschagehlich: hey
[17:31] saschagehlich: tjholowaychuk: I'm trying to implement the prettyprint stuff. Should I put it into the compiler to add indents and NL to the buffer?
[17:32] saschagehlich: or is there a better place for that?
[17:33] dominictarr has joined the channel
[17:33] tjholowaychuk: saschagehlich: yeah, just do something like this.pp = options.pretty; in the visitor methods do if (this.pp) buf.push() whatever
[17:33] flippyhead has joined the channel
[17:33] llkazu has joined the channel
[17:34] tilgovi has joined the channel
[17:34] saschagehlich: tjholowaychuk: alright, thx
[17:34] ralphholzmann: heyo, so im stress testing my oauth heavy app. It works great for a small amount of async oauth requests, but when I get up to a few hundred, it busts with no output except
[17:34] ralphholzmann: [1]    18184 killed     node test.js
[17:35] V1: omg, connect is so painfull
[17:35] ralphholzmann: is there a limit to concurrent requests ?
[17:35] tjholowaychuk: nope that would be fine
[17:35] ralphholzmann: hmm
[17:35] patzak has joined the channel
[17:35] kmiyashiro has joined the channel
[17:36] darshanshankar has joined the channel
[17:37] tjholowaychuk: V1: why lol
[17:37] stepheneb has joined the channel
[17:38] V1: tjholowaychuk: Because it doesn't work as it supposed to work. Even starting a simple session generates errors :!
[17:38] tjholowaychuk: V1: well either there is a bug or you are doing it wrong :p it would be more painful to write from scratch
[17:39] V1: tjholowaychuk: I copy and pasted it from the Session testcase ;) 
[17:39] Lorentz has joined the channel
[17:39] nonnikcam has joined the channel
[17:39] tjholowaychuk: V1: just sayin, either debug, write your own, or dont complain :p
[17:39] V1: ACTION crawls back in to his cave
[17:39] hlindset has joined the channel
[17:39] hlindset has joined the channel
[17:39] V1: tjholowaychuk: Iknow ;)
[17:40] tjholowaychuk: :D
[17:42] Spion_ has joined the channel
[17:42] tokumine has joined the channel
[17:43] tiemonster has joined the channel
[17:43] zakabird has joined the channel
[17:44] christophsturm: where does node put all the javascript files from lib in a typical node installation? are they put into the node binary?
[17:45] pquerna: ryah_: 725kb per connection to 93kb per connection w/ compression off (twisted python)
[17:45] ryah_: nice
[17:46] pquerna: you writing up a blog post thing?
[17:46] fcheslack has joined the channel
[17:46] ryah_: well - got half-way :)
[17:47] pquerna: i'm happy to help
[17:47] Aikar: christophsturm: yes its built into the binary
[17:48] Aikar: ryah_: does the node .h files get copied on install or are they read from the original source folder its compiled from?
[17:48] christophsturm: Aikar: is there a way to make it load the javascript files from lib? or do i need to build a new binary everytime i want to test a change?
[17:48] Aikar: ie node.h, node_buffer.h
[17:48] Aikar: christophsturm: gotta rebuild, but its a VERY quick compile
[17:48] Aikar: so run the command in shell make && sudo make install
[17:48] arpegius has joined the channel
[17:48] Aikar: it only reruns the very last steps, doesnt actually recompile the C++ code
[17:48] Roelven has joined the channel
[17:49] ryah_: pquerna: sure - you can just post it in your blog
[17:49] hasenj has joined the channel
[17:49] ryah_: pquerna: you should include screenshots from mjr
[17:49] ryah_: Aikar: yes
[17:49] pquerna: kk
[17:49] patzak has joined the channel
[17:50] KellyM has joined the channel
[17:50] dmcquay has joined the channel
[17:50] tosh has joined the channel
[17:51] saikat has joined the channel
[17:51] bergie has joined the channel
[17:52] 5EXACFYB0 has joined the channel
[17:52] qFxo has joined the channel
[17:54] dylang: Any good articles I can share with my friendly IT staff that might convince them to use Ngnix instead of Apache for proxying Node?
[17:55] qFox has joined the channel
[17:57] postwait: ryah_: you see my pull request again v0.4?
[17:57] SubStack: is there anything that ngnix does that node can't do?
[17:57] zakabird: hi. web world newby question, hope it isn't asked too often - whats the problem with node serving directly - whats the advantage of having ngnix proxy? faster static content? stability?
[17:58] Epeli: dylang:  maybe one of ryah's Node.js videos where he compares memory usage under high loead?
[17:58] nibblebot: Hi, with riak-js I can ping my riak node successfully but running .save(), .get(), .buckets() all throw errors, any idea why this might be?
[17:58] dylang: SubStack: I'm a shared server with lots Ruby and Java projects also running on port 80.  Sure I'd love to re-write them in Node, but there are only so many hours in the day...
[17:59] Tidwell has joined the channel
[17:59] tylerstalder has joined the channel
[18:00] Tprice has joined the channel
[18:01] saschagehlich: tjholowaychuk: I don't understand how script-tags are handled... visitTag() -> visit(block) -> visitBlock()? something like that?
[18:01] mAritz: hm, was there any change in express/connect recently that would cause my app to throw a lot of "Can't set headers after they are sent." errors?
[18:01] MikhX has joined the channel
[18:01] tjholowaychuk: saschagehlich: yeah visit() just grabs the constructor's name, and invokes the associated method
[18:01] meandi2 has joined the channel
[18:02] saschagehlich: tjholowaychuk: so at which point does the compiler push the code inside <script> to the buffer?
[18:02] tjholowaychuk: mAritz: if you call next() twice (or more) then yeah
[18:02] tjholowaychuk: saschagehlich: should be in visitTag()
[18:02] mAritz: tjholowaychuk: what am i supposed to do instead? :/
[18:02] tjholowaychuk: mAritz: next once
[18:02] tjholowaychuk: lol
[18:02] mAritz: and in the next handler?
[18:02] tjholowaychuk: twice will end up responding two times
[18:03] gtramont1na has joined the channel
[18:03] ckknight has joined the channel
[18:03] mAritz: shouldn't next just go to the next layer?!
[18:03] jeremyselier has joined the channel
[18:04] mAritz: tjholowaychuk: at least that's how i've always understood next and used it. :/
[18:04] mAritz: how can i achieve that without next()?
[18:04] blueadept: http://pastie.org/private/j6mwhxoozyphivtdvcdkq would someone know why my flash message isn't using any styling? it says login failed, but doesn't have any CSS applied, it just gives me back a plain text.
[18:05] spaceinvader: what epic abuse
[18:05] spaceinvader: jade -o '{locals: {partial: function(f){return jade.render(fs.readFileSync(f))}}}' foo.jade
[18:06] adambeynon has joined the channel
[18:08] mhooker has joined the channel
[18:09] ZeroCoder has joined the channel
[18:09] mAritz: :(
[18:10] mytrile has joined the channel
[18:11] \sega has joined the channel
[18:11] jscheel: hey guys, are there any good form frameworks available? Writing forms, populating form data, and showing form errors is easy when the form is small, but get into any substantial form and it gets tedious :P
[18:11] dve has joined the channel
[18:12] jpick has joined the channel
[18:12] christophsturm: jscheel: did you look at node-formidable? 
[18:13] jscheel: christophsturm: just found that in the modules wiki, looking now :)
[18:13] Gruni has joined the channel
[18:14] bradleymeck: there is another /digs
[18:14] hij1nx has joined the channel
[18:14] jscheel: christophsturm: hmm, that looks like it handles the processing, but I'm looking for a frontend side. The ability to define form widgets and populate form based on an object with the params
[18:14] mAritz: so, what was changed in next() why can't i use it to send the request to the next middleware anymore? :(
[18:15] christophsturm: jscheel: i guess that most people will handle that in javascript on the client now
[18:15] bradleymeck: https://github.com/dandean/express-form <- jscheel
[18:15] fcheslack has left the channel
[18:15] bradleymeck: should always do it on server even if you do it on client
[18:16] jscheel: here's one https://github.com/caolan/forms
[18:16] jscheel: has anybody used this one? Is it worth it's weight?
[18:16] bradleymeck: havent used caolan's seen some people use express-form, i found it a while back through dailyjs
[18:16] langworthy has joined the channel
[18:17] V1: saschagehlich: ping
[18:17] saschagehlich: V1: pong
[18:17] V1: That's fast
[18:17] V1: saschagehlich: I doubt that issue #109 would fix your connection_failed issues
[18:17] saschagehlich: V1: it wouldn't, but it would tell me whether it's a connect_fail or a reconnect_fail
[18:18] estrathmeyer has joined the channel
[18:18] estrathmeyer has left the channel
[18:19] arpegius_ has joined the channel
[18:19] Tidwell: Hey all, another quick best-practices question if anyone can spare a moment:  http://snipt.org/wpUl/plaintext
[18:19] jscheel: christophsturm: I guess it could go both ways
[18:19] jscheel: bradleymeck: thanks, I'll look at that!
[18:19] V1: saschagehlich: A connect_fail will always be emitted before a reconnect_fail, because the reconnect uses a exponential back off algorithm to reduce server stress
[18:19] jscheel: bradleymeck: ah, this is still just validation and filtering thought, right? I want to actually define and hydrate forms from objects
[18:20] saschagehlich: V1: hm okay
[18:20] fcarriedo has joined the channel
[18:20] V1: saschagehlich: So by default, it will take 512000 miliseconds before a reconnect_failed event is fired
[18:20] MaZderMind has joined the channel
[18:21] bradleymeck: jscheel im not sure i understand, you want to define a schema and generate a form from that?
[18:21] jscheel: bradleymeck: yes, and anlso hydrate that form with values if I need to re-display (because of errors)
[18:21] MaZderMind: looking for a way to prepare a query using brianc/node-postgres without supplying values
[18:21] bradleymeck: idk if there is a module in node for that specifically
[18:21] bradleymeck: i mean i could write a wrapper probably, but would take a while
[18:21] jdalton has joined the channel
[18:22] V1: saschagehlich: You send you self a message when the connect_failed event is fired right, you can check if the "reconnecting" options is set
[18:22] jscheel: bradleymeck: https://github.com/caolan/forms/
[18:22] jdalton has left the channel
[18:22] saschagehlich: V1: yeah, I could do that
[18:22] V1: saschagehlich: Than atleast you know if the connect_failed occures during a reconnection attempt
[18:22] stonecobra: V1: I was able to get express/connect session stuff working even while it was switching from 1.x to 2.x, pastie your issue
[18:22] saschagehlich: V1: yea sounds good... I'll try that
[18:23] jscheel: bradleymeck: looks like it has issues though
[18:23] V1: stonecobra: it's not a critical issue, as I was just using it to create a "patch" for socket.io
[18:24] bradleymeck: its a hard problem once you start getting to edge cases :/
[18:24] dgathright has joined the channel
[18:24] jscheel: bradleymeck: definitely
[18:26] herbySk has joined the channel
[18:27] V1: saschagehlich: one of the biggest issues that you are facing is the use of firewalls at this point i think because you are not connecting over port 80 with your Socket.IO connections
[18:27] patzak has joined the channel
[18:27] patzak has joined the channel
[18:28] saschagehlich: V1: damn! never thought about that
[18:28] V1: saschagehlich: So that could explain why some of your ursers are receiving a connect_failed message
[18:28] V1: saschagehlich: I just thought of that :$
[18:28] saschagehlich: V1: good point, very good point
[18:28] __tosh has joined the channel
[18:29] V1: saschagehlich: You in the position to switch ports?
[18:29] V1: saschagehlich: Or do we need to think of a different solution
[18:30] ash_: which async helper library do you guys recommend??
[18:30] saschagehlich: V1: well I could... the problem is that nginx is running on port 80 and I let the users connect to the original port (3030)
[18:30] wdperson has joined the channel
[18:30] indutny has joined the channel
[18:30] saschagehlich: the question is what happens if I let the users connect to port 80 - will nginx have a problem with the long polling stuff?
[18:31] V1: saschagehlich: well nginx doesn't handle HTTP 1.1 so you can't have nginx proxy your websockets either
[18:31] bergie has joined the channel
[18:32] saschagehlich: V1: well I just use nginx for serving the converted video files through X-Sendfile
[18:32] hornairs has joined the channel
[18:32] tjholowaychuk has joined the channel
[18:33] baudehlo: wow javascript is annoying.
[18:33] ckknight: baudehlo: oh?
[18:33] baudehlo: why the fuck can you do: for( var whatever; ...) but not if (var blah = ...) nor while (var blah = ...)
[18:34] jonaslund: nobody forces you do do javascript
[18:34] ckknight: baudehlo: because in for loops, the first part of a for loop is the setup. No other constructs have such a thing.
[18:34] insin: v8> var test = "honk;"
[18:34] baudehlo: it just seems inconsistent.
[18:35] ckknight: it is, but that's just the way it is
[18:35] ckknight: all the way back to C.
[18:35] baudehlo: as that while loop can be written: for (var blah; blah = ...;;) {
[18:35] baudehlo: nobody said JS had to copy C :)
[18:36] jonaslund: it doesn't
[18:36] fly-away has joined the channel
[18:36] ckknight: actually yes, baudehlo, the initial designer was told to copy existing Java semantics and syntax.
[18:37] jonaslund: one of the biggest shortcommings of JS imho is the lack of block scopes (that turns into function scopes)
[18:37] jscheel: it's probably  in the ecmascript standard somewhere
[18:37] V1: saschagehlich: Well, that bascially means you can run nginx on a different port either or your videos would be blocked..
[18:37] systemfault: jonaslund: May the god of programming bless "let" :/
[18:37] jonaslund: ckknight: err.. wasn't the javascript naming just tagged on as a branding thingy ?
[18:37] konobi: jonaslund: there is `let`... but yeah...
[18:38] ckknight: yeah, it was a marketing move, since Java had a big popularity push, LiveScript was renamed to JavaScript in order to piggyback
[18:38] drudge: has anyone used a schema for an embedded document in mongoose?
[18:38] jonaslund: does V8 support let ?
[18:38] ckknight: yes
[18:38] systemfault: jonaslund: I think it supports pretty much all of ecmascript 5 beside strict mode
[18:38] systemfault: (I might be wrong)
[18:39] jonaslund: oh cool
[18:39] V1: saschagehlich: You can probably put HAproxy infront of your stack and have HAproxy forward the requests to the correct process / node or nginx. Because I remember that there is a patch in Socket.IO Websockets work behind HAproxy
[18:39] ralphholzmann: Does anyone have any recommendations on how to debug my script that quits without an error message? Just says [1] process 12354 killed
[18:40] ckknight: systemfault: well, V8 as in Chrome 11 supports strict mode
[18:40] saschagehlich: V1: hmm... could you do that for me on 45 servers? :S
[18:40] konobi: jonaslund: yar... ES5 now, iirc
[18:41] defeated has joined the channel
[18:41] V1: saschagehlich: Don't you have something like puppet or chef running on your servers?
[18:42] saschagehlich: V1: unfortunately not. just a vserver/rsync system
[18:42] V1: Ouch
[18:42] ajsie: jonaslund: are you from sweden?
[18:42] saschagehlich: V1: yup ;) but as soon as I get the new servers in the netherlands I'll do it with chef
[18:42] jonaslund: yes
[18:42] ajsie: =)
[18:42] ajsie: me 2
[18:43] V1: saschagehlich: EC2 not localized enough? Or out of servers already :P
[18:43] Tidwell: ralphholzmann: have you tried putting in debugger; statements and running it with node debug foo.js and stepping through?
[18:43] Me1000 has joined the channel
[18:44] ajsie: do you prefer to run your own node machines or just deploy them with hosting like nodejitsu or duostack?
[18:45] saschagehlich: V1: far too expensive
[18:45] cognominal has joined the channel
[18:46] tschundeee has joined the channel
[18:46] systemfault: ckknight: Wow, super! :D
[18:46] V1: saschagehlich: Yup, they do cost a bit.. but it has some advantages :p
[18:46] systemfault: ckknight: Does it helps a lot? (Never tried it)
[18:46] saschagehlich: V1: definitely. I recently met jonathan from scalarium.com - he demonstrated how it works. awesome stuff but still too expensive :(
[18:47] ckknight: it forces you to not screw up in some cases
[18:47] ckknight: which can be handy
[18:47] bcelenza has joined the channel
[18:47] ckknight: systemfault: yeah, so once that hits live Chrome, I'm hoping that node.js will up to it pretty quick after :)
[18:47] ckknight: I already stick "use strict"; into my code as-is
[18:48] mAritz: anyone here who can help me with an express/connect issue? (tj seems to be gone for now :( )
[18:48] tjholowaychuk: mAritz: im here
[18:48] mAritz: oh, forgot that i don't see joins/hides :D
[18:48] mAritz: sorry
[18:49] ajsie: tjholowaychuk: its not working: https://github.com/visionmedia/express/issues/closed#issue/610
[18:49] mAritz: tjholowaychuk: in express 1.x using next() was no problem, right? what can i use in 2.x to achieve the same?
[18:49] arpegius has joined the channel
[18:49] TomsB has joined the channel
[18:49] tjholowaychuk: ajsie: your "data" is not application/json or x-www-form-urlencoded
[18:50] tjholowaychuk: ajsie .. curl -X PUT -d 'foo=bar'
[18:50] tjholowaychuk: mAritz: you still use next(). just dont call it more than once
[18:50] tjholowaychuk: mAritz: node will barf on you because you effectively try to respond twice
[18:51] ajsie: tjholowaychuk: okay .. ill try it
[18:51] mAritz: well, if i have 3 middlewares and want to do something in the first (like checking something in req), then pass the request to the next one, do something again and then pass it to the next again, i effectively need to use it 3 times?!
[18:52] liar has joined the channel
[18:52] mAritz: why does next() respond anything? :(
[18:52] defeated: anyone familiar with the http/net/socket internals about? I'm seeing a weird issue where my app crashes when node tries to destroy a socket
[18:53] defeated: getting an exception, "ENOTCONN, Socket is not connected"
[18:53] deepthawtz has joined the channel
[18:53] qFxo has joined the channel
[18:54] bradleymeck: means it is being closed twice for some reason
[18:54] defeated: and then in socket's error handler in http.js, the req is undefined and thus the crash when it tries to emit the error event
[18:56] defeated: it only seems to happen on one particular server
[18:56] mAritz: tjholowaychuk: ?
[18:56] saschagehlich: tjholowaychuk: https://github.com/saschagehlich/jade/commit/54a05e58b0a550595b7fb2e6290fd8e7c3ca7d6d
[18:57] pdrummond has joined the channel
[18:58] jetheredge has joined the channel
[18:59] pedrobelo has joined the channel
[18:59] tjholowaychuk: saschagehlich: cool man, will check that out sometime today
[19:03] colinclark has joined the channel
[19:03] skm has joined the channel
[19:04] maushu has joined the channel
[19:05] davidvanleeuwen_ has joined the channel
[19:06] dominictarr has joined the channel
[19:06] skm has joined the channel
[19:07] felixge has joined the channel
[19:07] romanmt has joined the channel
[19:08] felixge: ryah_: is there any reason node is not on v8 3.2.x yet?
[19:10] sjbreen has joined the channel
[19:10] patcito has joined the channel
[19:11] ryah_: felixge: v0.4 is sticking with the 3.1 branch
[19:11] xastey has joined the channel
[19:11] felixge: is that just to be cautious ?
[19:12] steph021 has joined the channel
[19:12] ryah_: felixge: just want to stay stable
[19:12] ryah_: we're going to start pegging node to v8 releases
[19:12] felixge: ryah_: ok. To put my own v8 into node.js, do I just copy it in there? Or do I need some patch?
[19:12] ryah_: and consequently chrome releases
[19:12] ryah_: v8 3.1 = chrome 11 = node 0.4
[19:13] ryah_: v8 3.2 = chrome 12 = node 0.6
[19:13] felixge: I'm wondering how that will work out if release cycles don't match up :)
[19:13] ryah_: you can just copy it in
[19:13] felixge: (between node / chrome / v8 that is)
[19:13] felixge: I guess we would skip versions?
[19:13] ryah_: yeah
[19:13] davidvanleeuwen has joined the channel
[19:14] ryah_: probably will too - i can't do a 6 week cycle
[19:14] Insanity5902 has joined the channel
[19:14] V1: saschagehlich: I was looking at your node-exception notifier, and I noticed you have a module that does base64.. You do know that is also build in to Node right ;)
[19:14] xla has joined the channel
[19:14] tilgovi has joined the channel
[19:14] felixge: ryah_: do I need make distclean? after upgrading my local v8?
[19:14] phil has joined the channel
[19:14] saschagehlich: V1: yeah, marak told me aftewards. just wanted to do it real quick and didn't manage to convert a string to base64 on the first few tries
[19:15] dominictarr has joined the channel
[19:15] saschagehlich: so I stole his base64 plugin he used in node-mailer
[19:15] V1: =p
[19:15] ryah_: felixge: yeah
[19:16] felixge: ryah_: I always wondered why that is, does v8 not build incrementally ?
[19:17] ryah_: felixge: why you need to make distclean?
[19:17] felixge: ryah_: yeah
[19:17] felixge: I
[19:17] defeated: is there anywhere a socket can get closed outside of Socket._shutdown?
[19:17] ryah_: you probably dont have to, actually - but it's good to be safe :)
[19:17] felixge: I'm not that familiar with build magic
[19:17] felixge: oh, ok :)
[19:18] defeated: i set a breakpoint there, and it only gets hit once, but the call to _shutdownImpl is throwing an exception
[19:18] Lorentz has joined the channel
[19:19] jtsnow has joined the channel
[19:19] ryah_: felixge: black whole ? :)
[19:19] arpegius_ has joined the channel
[19:19] felixge: ryah_: I'm trying to make testing some really tricky stuff possible
[19:20] felixge: ryah_: so I'm assigning getters / setters to the global object to inject my own global objects
[19:20] ryah_: inadvertent or pun?
[19:20] fadeddata has joined the channel
[19:20] mattmcmanus has joined the channel
[19:20] felixge: oh, inadvertant
[19:21] felixge: ryah_: ok upgrading v8 went nicely
[19:21] felixge: thanks
[19:22] blueadept: anyone use coffee script? if so what are some downsides?
[19:22] defeated: blueadept: "you got your ruby in my javascript"
[19:22] malkomalko has joined the channel
[19:23] ckknight: blueadept: debugging is the biggest downside. Also some things are a bit esoteric that would be easy in javascript. Overall, it makes things a lot nicer, though.
[19:23] saikat has joined the channel
[19:23] blueadept: yeah thats what im thinking is the debugging issues
[19:23] Ori_P has joined the channel
[19:23] defeated: i'm not sure if there are downsides per se, mostly I don't see any upsides other than hiding the javascript nature of javascript :)
[19:23] ckknight: what I'm doing now is just writing clean, proper javascript
[19:23] ckknight: :P
[19:23] tokumine: blueadept: when things go wrong, exceptions reference line numbers in the generated JS, not in your Coffeescript. This can be irritating.
[19:24] msilverman2 has joined the channel
[19:24] jeremyselier: Hi everyone
[19:24] felixge: I think crankshaft is finally working for me on osx
[19:24] felixge: :)
[19:24] jeremyselier: I'm wondering if I am the only one able to reproduce an error with this gist: https://gist.github.com/901709
[19:25] jeremyselier: it's reproducible with a specific url which is pretty weird
[19:25] defeated: jeremyselie: I'm getting the exact same error as we speak!
[19:25] dominictarr has joined the channel
[19:25] defeated: been trying to track it down, but I'm not that familiar with the node internals
[19:25] tschundeee has joined the channel
[19:26] defeated: the stacktrace is caused by the fact that req is not defined by the time Socket's error handler gets invoked
[19:26] defeated: the underlying error is caused by the fact that the connection is apparently being closed twice
[19:27] felixge: mraleph: when using --trace_bailout is there any way to get files / line numbers?
[19:27] defeated: works fine for some urls, crashes every time on others
[19:28] jeremyselier: I saw this bug entry similar to what I have : https://github.com/joyent/node/issues/784
[19:28] jeremyselier: but it's supposed to be fixed
[19:28] defeated: you've at least saved me the trouble of swapping out my request based impl with raw httpClient :)
[19:29] felixge: v8 has a lot of options ...
[19:29] defeated: hmm, wonder if a similar issue exists in https.Agent?
[19:30] ryah_: felixge: are you upgrading to V8 3.2 for x64 crankshaft?
[19:30] felixge: ryah_: right now I'm upgrading to see if what I think is a bug with getters/setters has been fixed
[19:30] felixge: but I also want to play with crankshaft
[19:30] felixge: and I'd like to contribute a function that let's people get structured stack trace completely
[19:30] pifantastic_ has joined the channel
[19:31] ryah_: felixge: you can get crankshaft on x64 with node v0.4.5 with --crankshaft
[19:31] dmcquay_ has joined the channel
[19:31] felixge: This is kind of exposed using Error.captureStackTrace and Error.prepareStackTrace already
[19:31] felixge: ryah_: ok
[19:31] felixge: thanks
[19:32] felixge: ryah_: you don't happen to know how to debug bailouts with crankshaft, do you?
[19:32] dmcquay_ has joined the channel
[19:32] felixge: I get a bailout on Buffer.toString()
[19:32] ryah_: felixge: --trace_opt is what i was always looking at
[19:32] felixge: @"Buffer.toString": SwitchStatement: non-literal switch label
[19:32] felixge: ryah_: I want to see what doesn't get optimized
[19:32] felixge: I thought trace_bailout does that
[19:33] ryah_: felixge: trace_opt will show you functions that come up in the profiler, that it tries to optimize, but fails
[19:33] felixge: ryah_: well, it provides no explanation
[19:33] felixge: [disabled optimization for: Buffer.toString / 100e2eb39]
[19:33] tjholowaychuk: felixge: with captureStackTrace you can get at the "internals" of the stack trace, function refs etc
[19:34] tjholowaychuk: if that's what you mean
[19:34] tjholowaychuk: oh
[19:34] tjholowaychuk: nvm
[19:34] tjholowaychuk: haha
[19:34] akahn has joined the channel
[19:35] felixge: tjholowaychuk: you have to overwrite prepareStackTrace() before calling captureStackTrace() afaik
[19:35] felixge: which feels rather dirty
[19:35] ZeroCoder has joined the channel
[19:35] felixge: I mean you get to reset it again
[19:35] felixge: but still
[19:37] eddanger has joined the channel
[19:38] Vertice has joined the channel
[19:39] indexzero has joined the channel
[19:40] tilgovi_ has joined the channel
[19:40] tjholowaychuk: felixge: yeah, it's definitely a hack
[19:41] baudehlo: is there a way to make util.inspect sort the keys used so it is consistent?
[19:41] sveimac has joined the channel
[19:41] jeremyselier: defeated the thing that I don't get is why the bug is not reproducible when not using jsdom, I can't see the relation
[19:42] defeated: seems like a race condition if using jsdom in a timeout works?
[19:42] reid_ has joined the channel
[19:42] defeated: trying to debug where the free calls are made now
[19:42] felixge: hm v8's build system creates an xcode project for me
[19:42] felixge: that's kinda cool
[19:42] felixge: :)
[19:42] wasabista has joined the channel
[19:43] felixge: wondering why it did that instead of giving me a ./configure script and stuff
[19:43] tilgovi has joined the channel
[19:45] gmanika has left the channel
[19:46] jetienne: naive question: how to replace a give char in a string, like "put A at the index 3 of this string" ?
[19:46] jetienne: ACTION got burnt by long day of work
[19:46] jimchao has joined the channel
[19:48] felixge: jetheredge: substr()
[19:48] jetienne: i notice most String functions are about getting... not many setter... is String like immutable ?
[19:48] brianmario has joined the channel
[19:48] bradleymeck: jetienne yes, it is effectively immutable
[19:48] mcmanusm has joined the channel
[19:48] SubStack: -_-
[19:49] SubStack: v8: var s = 'a'; s += 'b'; s
[19:49] dmcquay__ has joined the channel
[19:49] SubStack: js: var s = 'a'; s += 'b'; s
[19:49] SubStack: need more bots
[19:49] nibblebot_ny has joined the channel
[19:49] bradleymeck: lol
[19:49] EyePulp: [beep]
[19:49] bradleymeck: concats make new objects :(
[19:49] s0urce_ has joined the channel
[19:49] SubStack: anyhow you can do in-place updates so that is not an especially immutable thing to do
[19:49] trotter_ has joined the channel
[19:49] vladikoff` has joined the channel
[19:50] jetienne: felixge: are you suggesting like a.substr(0, 2) + 'A' + a.substr(4) ?
[19:50] matyr_ has joined the channel
[19:50] arpegius has joined the channel
[19:50] stagas_ has joined the channel
[19:50] tiagoa_ has joined the channel
[19:50] alek_br has joined the channel
[19:50] tbranyen: yeah any modification to a string will cause new object creation, but luckily you can still test for equality with the primative forms
[19:50] felixge: jetienne: yes
[19:50] tilgovi has joined the channel
[19:50] tbranyen: which is niceee
[19:51] tbranyen: no "".equals("")
[19:51] jetienne: tbranyen: and super inefficient
[19:51] tbranyen: oh noes my milliseconds
[19:51] tbranyen: if string concat is bottlenecking your app you've got bigger problems
[19:51] tbranyen: like why on earth are you using JS
[19:52] jetienne: tbranyen: ok
[19:52] jetienne: flippyhead: ok
[19:53] robotarmy has joined the channel
[19:53] jetienne: felixge: ok
[19:53] hornairs has joined the channel
[19:53] tbranyen: if you want you can use new String which creates an array like object and allows you to change indexes heh
[19:54] deepthawtz has joined the channel
[19:54] dominictarr_ has joined the channel
[19:54] jetienne: tbranyen: well performance is the issue as told before
[19:55] tilgovi_ has joined the channel
[19:55] mraleph1 has joined the channel
[19:55] jetienne: im sure it is a solve problem
[19:56] bcelenza has left the channel
[19:56] eddanger_ has joined the channel
[19:56] rfay has joined the channel
[19:57] robb1e has joined the channel
[19:57] cce_ has joined the channel
[19:57] bcelenza has joined the channel
[19:58] jetienne: i think i just understood the need for buffers :)
[19:58] Country has joined the channel
[19:59] bcelenza: quit
[19:59] tilgovi has joined the channel
[20:00] baudehlo: the need for buffers is because javascript strings don't hold binary data. They hold utf-8.
[20:00] jetienne: baudehlo: can you expand on that ?
[20:01] devrim has joined the channel
[20:01] baudehlo: ok, simple one - there's no way to represent \0 in a string in JS.
[20:01] jetienne: serious ???
[20:01] fumanchu182 has joined the channel
[20:01] ryah_: '\u0000'
[20:02] baudehlo: that's not 8bit \0 though
[20:02] ryah_: v8: '\u0000'.charCodeAt(0)
[20:02] ryah_: v8 '\u0000'.charCodeAt(0)
[20:02] jetienne: ryah_: no more bot.. we need the source of this bot
[20:02] ryah_: -_-
[20:02] ryah_: baudehlo: how do you mean?
[20:02] bradleymeck: go bother #inimino
[20:02] tbranyen: inimino is in china
[20:02] bradleymeck: blah
[20:02] tbranyen: doing god knows what
[20:03] ryah_: > '\u0000'.charCodeAt(0)
[20:03] ryah_: 0
[20:03] baudehlo: ryah_: there's no way with strings to send a single 8 bit \0 to a file or a socket.
[20:03] bradleymeck: no one ever knows what he is doing
[20:03] baudehlo: that's why you need to use buffers for binary data
[20:03] jetienne: bradleymeck: i asked. do you know if v8bot is opensource ?
[20:04] jetienne: bradleymeck: maybe i could do one in node... is that possible... the irc is ok... what about the jail stuff
[20:04] bradleymeck: its somewhere on his site, but f if i know where
[20:04] ryah_: baudehlo: require('fs').writeFileSync('blah', '\u0000', 'binary')
[20:04] bradleymeck: jetienne it is built in node
[20:04] baudehlo: ryah_: your docs say "binary" is deprecated.
[20:04] baudehlo: so it can't be used.
[20:04] jetienne: $ ls -l blah 
[20:04] jetienne: -rw-r--r-- 1 jerome jerome 1 2011-04-04 22:04 blah
[20:04] akahn has left the channel
[20:05] jetienne: baudehlo: hehe ryah_ is a bit authoritative source :)
[20:05] bradleymeck: i dont have shell access to his server, just web
[20:05] baudehlo: jetienne: exactly why I said "your" docs :)
[20:05] bcelenza has joined the channel
[20:06] ryah_: correct - but the reason is not a limitiation of being able to represent binary in strings
[20:06] jetienne: ryah_: is it cpu/ram efficiency ?
[20:06] tschundeee has left the channel
[20:06] ryah_: rather we don't want people pushing data in and out of the VM so much
[20:06] baudehlo: why not?
[20:06] ryah_: slow
[20:06] baudehlo: isn't that up to us to decide?
[20:07] ryah_: nope:)
[20:07] ryah_: no, of course you can change a buffer into a string
[20:07] ryah_: it's just slow
[20:07] bradleymeck: would be nice to have some other file structures like weak maps
[20:07] ryah_: keeping stuff as buffers - is best
[20:07] baudehlo: yeah but if you say "binary" is going away I'm not going to code with that.
[20:07] bradleymeck: c++ implementation of structures is brutal for speed
[20:08] eldar has joined the channel
[20:08] MaZderMind has joined the channel
[20:08] baudehlo: I don't see why you can't leave "binary" in and just document that working with strings is slow.
[20:08] ryah_: if you're dealing with binary data - it's probably best to keep it as a buffer
[20:08] baudehlo: I can't do a line oriented protocol like SMTP very efficiently with buffers.
[20:08] ryah_: why?
[20:08] baudehlo: because I'd have to loop over it char by char looking for \n
[20:09] ryah_: what do you think .indexOf does?
[20:09] baudehlo: which surely has to be slower than applying a regexp on a buffer (because that stays in C)
[20:09] ryah_: magically finds the \n ?
[20:09] ryah_: javascript execution is very fast
[20:09] baudehlo: it does it in C not in JS.
[20:09] bradleymeck: regexp is slower than raw iteration in C
[20:10] ryah_: that's not necessarally faster
[20:10] bradleymeck: but gives more options
[20:10] baudehlo: true. This should be benchmarked.
[20:10] ryah_: baudehlo: the js gets JITed to raw instructions
[20:10] jetienne: Int8Array are planed in v8 ?
[20:10] ryah_: if you use very simple state machine loops - you should get very efficent code
[20:10] baudehlo: is there an equivalent to perl's Benchmark.pm ?
[20:11] ryah_: that said - parsing SMTP is not your bottleneck, probably
[20:11] baudehlo: hmm I guess not since there's no times()
[20:11] bradleymeck: until someone writes me a JIT compiled regexp impl (not to a DFA but raw code) i think ill avoid them when possible
[20:11] baudehlo: see re2 :)
[20:11] bradleymeck: re2 goes to DFA
[20:11] baudehlo: I'll do an interface to re2 some day.
[20:11] jetienne: http://getfirebug.com/wiki/index.php/Console_API#console.time.28name.29 baudehlo is likely what you want
[20:12] mraleph1: bradleymeck: v8 compiles regexps to raw code
[20:12] jetienne: mraleph1: Int8Array are planed in v8 ?
[20:12] bradleymeck: mraleph1, interesting
[20:13] ryah_: ACTION is probably adding typed arrays to node
[20:13] ryah_: i have a patch waiting
[20:13] jeremyselier: defeated: not sure you're still looking at my bug. should I submit it? wasn't sure if it's a node or jsdom issue
[20:13] jonaslund: jetienne: errr.. isn't a Int8Array a buffer? :)
[20:13] defeated: It's a node issue
[20:13] jetienne: jonaslund: well it is a standard API to buffer :)
[20:13] defeated: i'm not using jsdom and I'm seeing the same thing
[20:13] mraleph1: jetienne: V8 supports it already. whats the difference from byte/ubyte arrays?
[20:13] jetienne: jonaslund: and i love standard
[20:13] mraleph1: *external arrays
[20:13] bradleymeck: mraleph1 does it force the caputres in raw code (.test seems to be ~ .match's speed for large amounts of capture groups), anywho back to work
[20:14] jetienne: mraleph1: ok
[20:14] mraleph1: bradleymeck: I don't known internal details.
[20:14] bradleymeck: k
[20:14] sorens3n has joined the channel
[20:14] mikeal: ryah_: i thought v8 would add typed arrays?
[20:14] baudehlo: ryah_: no, I don't really have bottlenecks right now... but anyway if it's purely to discourage people I would ask you not to deprecate "binary" conversion.
[20:15] jonaslund: jetienne: ahh.. those added with webgl?
[20:15] springmeyer has joined the channel
[20:15] mraleph1: v8 had webgl typed arrays since dark ages
[20:15] jetienne: jonaslund: yep webgl is using a lot of those... https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses the float are the ones for webgl
[20:16] sveimac has joined the channel
[20:16] jonaslund: you prolly have some int type for index arrays
[20:16] springmeyer has joined the channel
[20:16] ruggedcoder has joined the channel
[20:16] carlocci has joined the channel
[20:17] baudehlo: deedubs: ok, Haraka now does mail parsing.
[20:18] ryah_: mraleph1: they mean as exposed globals
[20:18] baudehlo: ryah_: also while I'm bugging you, can you add flock to fs for 0.5/6?
[20:18] ryah_: mraleph1: v8 still requires you to write your own interface
[20:18] ckknight: ryah_: typed arrays woo!
[20:18] sheerun has joined the channel
[20:18] blueadept: would anyone know why i cannot call method first? http://pastie.org/private/rqgti5gujazh04ujyrbkta
[20:19] dominictarr_ has joined the channel
[20:20] defeated: blueadept: User.authenticate is returning undefined
[20:20] ryah_: baudehlo: we need to see what the situation on windows is for that
[20:20] baudehlo: ryah_: I thought that might be why... copy code from sqlite?
[20:20] defeated: looking at the definition, it's not returning a user at all
[20:21] defeated: you need to pass it a callback
[20:21] blueadept: ah
[20:21] micheil has joined the channel
[20:22] ckknight: ryah_: how often do you sync up node.js with Chromium's V8 code?
[20:22] Lagnus has joined the channel
[20:24] mattikus has joined the channel
[20:25] EyePulp: related to that, let me mention that bundling v8 and node together is awfully handy and appreciated by this particular coder.
[20:25] piscisaureus has joined the channel
[20:25] ckknight: oh most assuredly, EyePulp
[20:26] EyePulp: I like not having to track both, as they're both so tied together.  Glad someone else is on top of that =)
[20:26] heino_ has joined the channel
[20:27] MikeMakesIt has joined the channel
[20:27] EyePulp: ckknight: that being said, I see commits about once every 2 weeks or so mentioning updating the node version of v8 to something newer
[20:27] ckknight: okay then. I'm mostly wondering for the "use strict"; support that's in Chrome 11 (dev channel)
[20:28] ckknight: I'm in no rush, just wondering when it'll become available, is all
[20:29] hij1nx has joined the channel
[20:30] aklt has joined the channel
[20:31] hij1nx has joined the channel
[20:31] boaz has joined the channel
[20:33] nonnikcam has joined the channel
[20:33] pdelgallego has joined the channel
[20:34] alek_br has joined the channel
[20:39] sheerun1 has joined the channel
[20:39] jeremyselier: defeated: sorry to harass you. I have to leave IRC, should I fill a bug? also how can I catch there error for the time being?
[20:39] aklt: Hi all
[20:39] defeated: jeremyselie: Yead, I'd file a bug, it's not limited to jsdom, I see the same thing and I'm not using it
[20:40] defeated: jeremyselie: not sure if there's a way to catch it, it's happening in the event loop, so probably outside of our control (at least from what I've seen)
[20:40] eee_c has joined the channel
[20:41] defeated: jeremyselie: sorry, had to shift my focus to more pressing matters, so haven't made any real headway in tracking down what's going on
[20:42] jeremyselier: no worries, thanks for taking the time to look into it
[20:42] galaxywatcher has joined the channel
[20:42] sheerun: Hello everyone
[20:42] jeremyselier: could you point me to your a bug ticket
[20:42] jeremyselier: -a
[20:42] tilgovi has joined the channel
[20:42] dominictarr_ has joined the channel
[20:42] pquerna: http://people.apache.org/~pquerna/twisted-memory.jpg
[20:43] jeremyselier: oh I misread, I though you already filled it, sorry
[20:45] mape: tjholowaychuk: around?
[20:45] sheerun: Is there any way to require module and use it without prefix (like new Class instead of new module.Class without declaring it explicitly with var keyword)? I mean in way that global scope is not polluted.
[20:45] ryah_: pquerna: :)
[20:45] ckknight: sheerun: nope, use var.
[20:46] baudehlo: pquerna: what's the change point in the graph?
[20:46] dguttman has joined the channel
[20:46] pquerna: baudehlo: disabled ssl compression;  similiar to the changes node made this weekend. (the graph is of memory usage)
[20:47] baudehlo: gotcha.
[20:47] brett__ has joined the channel
[20:47] baudehlo: I thought maybe it was switching from twisted to node ;)
[20:47] pquerna: i'll put up a blog post up tonight i think with details about the patch for both twisted and node
[20:47] ryah_: pquerna: you should mention SSL_new() should be used instead of SSL_CTX_new()
[20:47] tiagoa_ has joined the channel
[20:48] ryah_: pquerna: that we're unsatisfied with the current hack-patch
[20:48] estrathmeyer has joined the channel
[20:48] estrathmeyer has left the channel
[20:48] ryah_: i guess you're more interested in compression though
[20:48] pquerna: well, i'll cover both
[20:49] pquerna: the compression thing prolly can be patched in aout a dozen open source systems though
[20:49] ryah_: yeah
[20:49] dominictarr_ has joined the channel
[20:49] baudehlo: can't you do compression on the stream anyway before handing it to ssl?
[20:49] mdoan has joined the channel
[20:49] pquerna: yes
[20:49] dahankzter has joined the channel
[20:50] pquerna: if the protocol is http
[20:50] dominictarr_ has joined the channel
[20:50] rburhum has joined the channel
[20:50] pquerna: but then you don't compress the reqest/cookies/etc
[20:50] pquerna: so, it might not be a win for all situations
[20:50] baudehlo: right
[20:50] baudehlo: though if you're sending a huge response header back it might be time to revisit your design :)
[20:50] pquerna: right
[20:51] pquerna: but large-request cookies are far too... common.
[20:52] rburhum has left the channel
[20:52] jetienne: any news of spdy ?
[20:52] patcito_ has joined the channel
[20:52] jetienne: pquerna: spdy would help in this case, no ?
[20:53] pquerna: spdy kinda, but spdy.... is
[20:53] pquerna: not really implementable yet
[20:53] f1lt3r_ has joined the channel
[20:54] hvgotcodes has joined the channel
[20:54] romanmt has joined the channel
[20:54] jetienne: chrome://net-internals/#spdy i noticed this recently. apparently google uses it when available. it is on gmail for sure
[20:54] ajsie: anyone here has Aspergers?
[20:55] tbranyen: ajsie: is that really relevant?
[20:56] ajsie: relevant?
[20:56] EyePulp: it's an odd question for sure.
[20:56] ajsie: to what?
[20:56] ajsie: it was just a question=)
[20:56] ajsie: out of curiosity
[20:56] ajsie: dont have to make a big deal=)
[20:56] tbranyen: a better question is, does anyone in here have non self-diagnosed
[20:57] eddanger_ has joined the channel
[20:57] ajsie: non self-diagnos AS?
[20:57] EyePulp: I think tjholowaychuk has multiple-repo disorder.  just look at all his junk on github.
[20:57] tbranyen: lol
[20:58] EyePulp: =)
[20:58] deedubs has joined the channel
[21:00] matyr has joined the channel
[21:01] postwait: pquerna: you SSL stuff, did you expose the add_compression_method stuff into JS APIs?
[21:01] pc1oad1etter has joined the channel
[21:02] Roelven_ has joined the channel
[21:02] evanmeagher has joined the channel
[21:02] sheerun has joined the channel
[21:02] piscisaureus has joined the channel
[21:02] sveimac has joined the channel
[21:02] sorens3n has joined the channel
[21:02] fumanchu182 has joined the channel
[21:02] rfay has joined the channel
[21:02] deepthawtz has joined the channel
[21:02] brianmario has joined the channel
[21:02] wasabista has joined the channel
[21:02] indexzero has joined the channel
[21:02] jtsnow has joined the channel
[21:02] phil has joined the channel
[21:02] colinclark has joined the channel
[21:02] qFox has joined the channel
[21:02] defeated has joined the channel
[21:02] tjholowaychuk has joined the channel
[21:02] jpick has joined the channel
[21:02] \sega has joined the channel
[21:02] MikhX has joined the channel
[21:02] tylerstalder has joined the channel
[21:02] hasenj has joined the channel
[21:02] tokumine has joined the channel
[21:02] Spion_ has joined the channel
[21:02] sigue_ has joined the channel
[21:02] jeromegn has joined the channel
[21:02] nefD has joined the channel
[21:02] TheCowboy has joined the channel
[21:02] slloyd has joined the channel
[21:02] stutter has joined the channel
[21:02] eresair has joined the channel
[21:02] norviller has joined the channel
[21:02] Yuffster_work has joined the channel
[21:02] pita has joined the channel
[21:02] aheckmann has joined the channel
[21:02] markc has joined the channel
[21:02] stonecobra has joined the channel
[21:02] tfe_ has joined the channel
[21:02] Kami_ has joined the channel
[21:02] daniellindsley has joined the channel
[21:02] fabian__ has joined the channel
[21:02] c4milo has joined the channel
[21:02] wao has joined the channel
[21:02] Virtuo has joined the channel
[21:02] hoodow has joined the channel
[21:02] up_the_irons has joined the channel
[21:02] apoc has joined the channel
[21:02] rphillips has joined the channel
[21:02] swaj has joined the channel
[21:02] mmso has joined the channel
[21:02] maru_cc has joined the channel
[21:02] wang has joined the channel
[21:02] gredman has joined the channel
[21:02] jbergstroem has joined the channel
[21:02] chapel has joined the channel
[21:02] voodootikigod has joined the channel
[21:02] TimerCroumlich has joined the channel
[21:02] sstreza has joined the channel
[21:02] FireFly has joined the channel
[21:02] Tobias| has joined the channel
[21:02] devdazed has joined the channel
[21:02] [[zz]] has joined the channel
[21:02] jdub has joined the channel
[21:02] jspiros has joined the channel
[21:02] vilhonen_ has joined the channel
[21:02] terite_ has joined the channel
[21:02] Nexxy_ has joined the channel
[21:02] benh has joined the channel
[21:02] sonnym has joined the channel
[21:02] termie has joined the channel
[21:02] narf_ has joined the channel
[21:02] petermanser_ has joined the channel
[21:02] jwm has joined the channel
[21:02] eirikur has joined the channel
[21:02] jeff_horton has joined the channel
[21:02] kuhrt has joined the channel
[21:02] TheFuzzball has joined the channel
[21:02] gkatsev has joined the channel
[21:02] philipharrison has joined the channel
[21:02] matt_c has joined the channel
[21:02] bwinton has joined the channel
[21:02] kloeri has joined the channel
[21:02] NickP has joined the channel
[21:02] raz has joined the channel
[21:02] jb55 has joined the channel
[21:02] drudge has joined the channel
[21:02] benatkin_ has joined the channel
[21:02] blkcat has joined the channel
[21:02] Druide_ has joined the channel
[21:02] themiddleman has joined the channel
[21:02] dispalt has joined the channel
[21:02] stride has joined the channel
[21:02] Will| has joined the channel
[21:02] dekz__ has joined the channel
[21:02] charybdi1 has joined the channel
[21:02] acies has joined the channel
[21:02] Nevtus has joined the channel
[21:02] franck34 has joined the channel
[21:02] borgling has joined the channel
[21:02] Schuyler has joined the channel
[21:02] zedas has joined the channel
[21:02] [tm] has joined the channel
[21:02] asdfsafdsa has joined the channel
[21:02] wereHamster has joined the channel
[21:02] jaxdahl has joined the channel
[21:02] optixx has joined the channel
[21:02] tyler-iphone has joined the channel
[21:02] ivaldi has joined the channel
[21:02] jan____ has joined the channel
[21:02] Nomon has joined the channel
[21:02] auscompgeek has joined the channel
[21:02] Pilate has joined the channel
[21:02] guybrush has joined the channel
[21:02] coffeecup has joined the channel
[21:02] sstephenson has joined the channel
[21:02] mrkurt has joined the channel
[21:02] seanbeausoleil has joined the channel
[21:02] brianmario has joined the channel
[21:02] mrkurt has joined the channel
[21:02] devrim has joined the channel
[21:03] sstephenson has joined the channel
[21:03] BHSPitMonkay has joined the channel
[21:04] barce has joined the channel
[21:05] McMAGIC-- has joined the channel
[21:07] ruggedcoder has joined the channel
[21:09] flippyhead has joined the channel
[21:09] postwait: netsplits.. arg. member:pquerna: your SSL stuff, did you expose the add_compression_method stuff into JS APIs?
[21:09] bergie has joined the channel
[21:10] devrim1 has joined the channel
[21:10] mape: tjholowaychuk: I'm porting http://image.mape.me/ to serverside with node-canvas and on the client I'm passing the imageData to get rid of the overhead encoding/decoding base64, but on the serverside that doesn't seem to work at all, might be because I JSON encode it (using workers)
[21:11] markwubben has joined the channel
[21:13] jetienne: mape: you got workers working on current stable node ? 
[21:13] mape: jetienne: latest head is working, npm is not
[21:13] phil: hi, i'm having a problem with this evented thing in a file upload. when the request ended, not all data is written to disk, but i don't know where it would be right to close the file? my code looks like: http://pastebin.com/wz4pQq45
[21:13] jetienne: mape: ok noted
[21:13] mape: spent some time debugging but asking him on twitter got me the answer quicker 
[21:14] jetienne: https://github.com/pgriess/node-webworker <- mape this one right ?
[21:14] mape: yup
[21:14] jetienne: cool
[21:14] tjholowaychuk: mape: yeah currently the image loading support is kinda lame
[21:14] tjholowaychuk: mape: Ideally we would have img.src = Buffer
[21:14] mape: tjholowaychuk: Aww don't tell me that :/
[21:14] phil: on small file uploads, everything works fine, but uploading large files (>1 gig) with 45 mb/s gives me always an error
[21:14] tjholowaychuk: mape: but we didnt need that (yet) so I haven't gotten around to it
[21:14] darshanshankar has joined the channel
[21:14] mape: tjholowaychuk: Hmm but them I still can't send it over JSON
[21:15] tjholowaychuk: mape: the ImageData ?
[21:15] saikat has joined the channel
[21:15] mape: tjholowaychuk: Yeah, so it can use more cores
[21:16] tjholowaychuk: mape: well as far as the server-side goes I dont think that would work anyway since you cant initialize a new ImageData object from json
[21:16] tjholowaychuk: i dont even expose that constructor
[21:17] MaxguN has left the channel
[21:17] mape: Hmm shouldn't I be able to create a canvas the same size, getImageData, and then put the srcImagData.data into the new one?
[21:17] mif86 has joined the channel
[21:17] tjholowaychuk: mape: yeah as long as its a pixel array, do i expose that?
[21:17] MatthewS has joined the channel
[21:18] tjholowaychuk: ah ok yeah i do
[21:18] mape: yup
[21:18] tjholowaychuk: then nvm
[21:18] tjholowaychuk: lol
[21:18] mape: but that will bork when being JSON encoded?
[21:18] tjholowaychuk: been a while since i looked at that lib. it would kick ass to have Buffer support though and shouldnt be hard
[21:18] tim_smart has joined the channel
[21:18] tjholowaychuk: mape: you would have to loop through and re-assign the PixelArray data
[21:19] tjholowaychuk: should work though
[21:19] mape: Hmm
[21:20] matyr has joined the channel
[21:21] mape: Guess I could just base64 encode and img-load, though that seems inefficent
[21:21] tjholowaychuk: src=someBuffer would be ideal
[21:21] tjholowaychuk: but i guess that is a different use-case
[21:22] tjholowaychuk: lots of people want that though
[21:22] jeromegn has joined the channel
[21:22] mape: Yeah
[21:23] sholmes has joined the channel
[21:23] sholmes: what are some solutions to XSS filtering of HTML?
[21:24] asabil has joined the channel
[21:24] dmcquay has joined the channel
[21:24] felixge: JS gurus:
[21:24] felixge: Shouldn't those two be identical?
[21:24] felixge: var a = function a() {};
[21:24] ckknight: nope
[21:24] felixge: function a() {}
[21:24] ckknight: not identical
[21:25] ckknight: due to horribleness
[21:25] felixge: when executed inside the global context
[21:25] jacobolus has joined the channel
[21:25] felixge: (not a node.js module)
[21:25] jetienne: not ===
[21:25] ckknight: specifically in IE
[21:25] felixge: only talking about v8
[21:25] ckknight: okay
[21:25] felixge: but not a node.js module (so no function wrapper)
[21:25] ckknight: well, they're equivalent, yes.
[21:25] jetienne: function() hoisting is higher than var
[21:25] jetienne: i had a test case for this
[21:26] felixge: jetienne: it seems like the var takes over
[21:26] felixge: let me paste my code
[21:26] arpegius has joined the channel
[21:26] ckknight: having a named function expression (in V8) makes it so inside the scope of the function, the name 'a' refers to the function. There isn't any hoisting for NFEs. There is for named function statements though.
[21:27] figital has joined the channel
[21:27] barce has left the channel
[21:27] jetienne: var a = 2; function a(){}; console.dir(a) => 2
[21:27] jetienne: function a(){}; var a = 2; console.dir(a) => 2
[21:27] tjholowaychuk: ckknight: not true
[21:28] jetienne: felixge: seems like you are rright and my memory switched
[21:28] sheerun_ has joined the channel
[21:28] ckknight: oh? I'm willing to be enlightened.
[21:28] tjholowaychuk: ckknight: var foo = function bar(){ return bar };
[21:28] robotarmy has joined the channel
[21:28] jetienne: we need the bot back
[21:28] tjholowaychuk: ckknight: invoke that
[21:28] ckknight: tjholowaychuk: yeah, what's the problem? it returns the function.
[21:29] ckknight: and bar doesn't exist outside the scope of the function.
[21:29] tjholowaychuk: ckknight: nvm, im dumb
[21:29] tjholowaychuk: haha
[21:29] arpegius has joined the channel
[21:29] tjholowaychuk: it must have been something else I ran into the other day
[21:29] jetienne: ckknight: why it doesnt exist outside of the function scope ?
[21:29] ckknight: if this were IE, it's a completely different ballgame.
[21:29] galaxywatcher has joined the channel
[21:30] ckknight: jetienne: because that's how the spec defines it. NFEs don't expose their name in their outer scope, just the inner scope.
[21:30] matyr_ has joined the channel
[21:30] jetienne: ckknight: nfe = ?
[21:30] tjholowaychuk: jetienne: because it's an expression, so you named the function, but that name is not a var
[21:30] ckknight: named function expression
[21:30] jetienne: because i guess function bla(){} is not a nfs
[21:30] tjholowaychuk: jetienne: it's basically just a property at that point
[21:31] jetienne: tjholowaychuk: a property of what ? of the function() ? 
[21:31] ckknight: yeah
[21:31] ZeroCoder has joined the channel
[21:31] felixge: jetienne: https://gist.github.com/902479
[21:31] jetienne: ckknight: you actually read the specs ? anyway to know the details without reading the specs
[21:31] felixge: ckknight: ^--
[21:31] ckknight: jetienne: people have many blog posts about this issue. Check out http://kangax.github.com/nfe/
[21:32] ckknight: felixge: that's a different issue, since that's a function statement, not a function expression.
[21:33] felixge: ckknight: it's the issue I want to discuss :)
[21:34] felixge: ckknight: can you explain what's going on there?
[21:34] ckknight: felixge: oh, sure.
[21:34] euwyn has joined the channel
[21:34] newy has joined the channel
[21:35] ckknight: felixge: in version_a.js, function real() { } gets hoisted to the top of its scope, before any variable declarations. This is then overwritten by var real; which is hoisted right below any function statement hoisting.
[21:35] ckknight: felixge: in version_b.js, you only have one var real (since the second 'var' is ignored since a is already in scope), and the last statement sets it to the function.
[21:36] pcardune has joined the channel
[21:36] newy_ has joined the channel
[21:36] ckknight: regardless, what you're doing in both is horrible, since you should never declare a variable twice.
[21:37] newy_ has joined the channel
[21:37] mraleph1 has joined the channel
[21:37] jetienne: ckknight: and this is so are every level ? like at the global level or at a lower level ?
[21:37] felixge: ckknight: What I'm trying to do as an end result is far more horrible, trust me :)
[21:37] felixge: let me show you
[21:38] ckknight: jetienne: I think some of your verbage is wrong, what are you asking?
[21:38] bradleymeck: redeclaring vars can be nice visually as long as you understand hoisting, but for general case unless you are doing function declaration you wont even see issues, even then i abuse things and i have yet to actually meet a colision
[21:39] jetienne: felixge> (not a node.js module) <felixge> when executed inside the global context   <- yeah it was context... i was trying to figure out this point 
[21:39] felixge: ckknight: https://gist.github.com/902502
[21:39] jetienne: ckknight: felixge seems to identify a relation with the global context.
[21:39] sfoster has joined the channel
[21:40] ckknight: jetienne: there's no global context being polluted in this situation.
[21:40] phil has left the channel
[21:40] felixge: ckknight: I'm working on a test library that executes the files it is testing in their own v8 context
[21:40] felixge: I'm fine with putting a little generated code in front of the source if needed
[21:40] felixge: but I really want to get this use case working
[21:40] felixge: :)
[21:41] jetienne: ckknight: ok 
[21:41] ckknight: felixge: I think you're trying to solve the halting problem.
[21:41] bradleymeck: test anything protocol compatible?
[21:41] deedubs has left the channel
[21:41] felixge: ckknight: ?
[21:42] ckknight: felixge: it's an unsolvable problem. You appear to be doing a variant of it.
[21:42] felixge: ckknight: I don't think it's unsolvable
[21:42] felixge: why would you think so?
[21:43] felixge: One solution would be to create an AST from the JS and mess with that
[21:43] felixge: but I'm not desperate enough for this yet
[21:43] ckknight: because it's mathematically proven to be unsolvable. Not that it's hard, but there is actually _no way_ to solve it
[21:43] felixge: nor does it fit well with my other requirements
[21:43] ckknight: http://en.wikipedia.org/wiki/Halting_problem
[21:43] felixge: ckknight: Sorry, I meant: "Why do you think I'm trying to solve the halting problem"?
[21:43] ckknight: because you're trying to verify that some code is going to be run without running code
[21:44] konobi: ryah_: i'm really starting to like the way node-tap is looking
[21:44] ckknight: the best you can do is have some heuristic guessing at it, but an easier way would be to use a code coverage tool.
[21:44] galaxywatcher has joined the channel
[21:44] felixge: ckknight: A code coverage tool is not what I'm looking for
[21:45] felixge: ckknight: I want to replace _loadSomeInitialConfig with my own function
[21:45] bradleymeck: ckknight in traditional mathematics it is unsolved, MS has an alternative math solution to it given some fancy new math operators, dont have paper off hand, was in Dobbs a while back
[21:45] felixge: so I can assert that it was called *and* fake what it does for my test
[21:45] felixge: but I need to do it in a way that also allows me to get a reference to it's "real" function
[21:46] ckknight: felixge: I think that you're immediately calling it rather than calling it after an event will be the hardest problem.
[21:46] felixge: as well as the real function of MyClass
[21:46] ckknight: you need to hook it before its execution
[21:46] felixge: well, I got pretty far using getters / setters on the global object
[21:46] bergie has joined the channel
[21:46] felixge: but it seems like they are no called for function Foo(){} style globals
[21:48] christophsturm has joined the channel
[21:48] mape: If I'm streaming data using res.write('foo') is there any way to "flush" the data to the client before res.end() is called? like flush() in php
[21:48] baudehlo: wait for the callback
[21:48] baudehlo: res.write('foo', cb)
[21:49] felixge: mape: I don't think res.write() buffers, does it?
[21:49] konobi: baudehlo: you might appreciate this... https://github.com/isaacs/node-tap/blob/master/example/test/test-example.js
[21:49] mape: felixge: no it is sent to the client, but the clien't doesn't show anything until .end() is called
[21:49] MikhX has joined the channel
[21:50] mape: have no knowledge around http so not sure what phps flush() is doing that causes the client to start displaying the content before the request is finished
[21:50] felixge: mape: this might be a problem with Content-Transfer-Type: chunked
[21:50] baudehlo: konobi: yeah I really need to start writing tests for Haraka.
[21:51] felixge: mape: if you know the data you are sending, try to set a content-length header
[21:51] felixge: and see how your client likes that
[21:51] pdelgallego has joined the channel
[21:51] mape: felixge: Hmm yeah that worked better
[21:51] felixge: ckknight: do you have more ideas?
[21:51] mape: So guess I can just set a dumb high content-length
[21:52] tjholowaychuk: mape: you dont wanna do that
[21:52] baudehlo: then the client will wait forever
[21:52] tjholowaychuk: ;p
[21:52] mape: tjholowaychuk: take a walk on the wild side
[21:52] felixge: mape: not sure if that's a good idea, you need to get a http dump from your php
[21:52] felixge: to analyze it
[21:52] konobi: felixge: you're trying to monkey patch an object for testing?
[21:52] felixge: konobi: yes
[21:52] jimt has joined the channel
[21:52] mape: Yeah seems if it is to big it doesn't display it
[21:52] ckknight: felixge: if you hook the set on the global object to hook the function (class constructor) you declare, you can then hook the setter for that expected function, which although crazy, would work.
[21:52] felixge: konobi: unfortunately it is very tricky to inject my mock method before it's too late
[21:52] felixge: :)
[21:52] mape: Well so that is annoying..
[21:53] tjholowaychuk: mape: there is a flush() method i think
[21:53] konobi: felixge: my not just use a generic mock?
[21:53] felixge: ckknight: that unfortunately doesn't seem to work because the function is hoised to the top, so my __defineSetter__ get's executed too late as well
[21:54] felixge: ckknight: and v8 doesn't seem to like me defining getters / setters on the global object beforehand
[21:54] felixge: at least they seem to get completely ignore
[21:54] mape: tjholowaychuk: well it does "flush" ie stream the data to the client, just that the browser waits for it to finish, unless it knows the length, which is useless. Want to be able to send the <head> part of a page with css so that can start loading and then generate the rest with an undefined length since I don't know what size it will be with db stuff pushed as content
[21:54] matyr has joined the channel
[21:54] ckknight: felixge: you're not defining anything on the global object, since function MyClass() { } declares it on the local scope.
[21:55] MikeMakesIt has joined the channel
[21:55] ckknight: unless you do global.MyClass = function() { }, you're not going to hit the global scope.
[21:55] tjholowaychuk: mape: hmm sounds strange.. AFAIK it should be starting that process regardless of content-length
[21:55] mape: Works if I just set content-length to 100, but that can't be a good thing
[21:55] eazyigz has joined the channel
[21:56] tjholowaychuk: haha nope
[21:56] mape: http://image.mape.me/test/ works fine in Chrome and Firefox
[21:56] felixge: ckknight: function MyClass() seems to declare on the global scope
[21:56] ckknight: it doesn't.
[21:56] ckknight: trust me.
[21:56] felixge: ckknight: at least this.MyClass === MyClass
[21:56] konobi: felixge: (basic mock)++
[21:56] eazyigz: I am using node-static to serve my cache manifest file.  I am having a problem whereby my app does not work offline (even though it should).  Has anybody experienced this setup?
[21:56] ckknight: felixge: hmm, that's strange.
[21:56] mape: but if I remove 'Content-length': 100 it just waits for the entire body
[21:56] timmywil_ has joined the channel
[21:57] felixge: konobi: basic mock?
[21:57] tjholowaychuk: mape: because it probably gives up after the first 100 bytes
[21:57] tjholowaychuk: mape: that's the reason content-length exists, so it knows how much data to grab
[21:57] tjholowaychuk: it wont try after that
[21:57] felixge: ckknight: yes, this is all very strange :)
[21:57] ckknight: felixge: I'm getting false in my test, it's not declared on the global scope.
[21:58] felixge: ckknight: how are you performing that test?
[21:58] ckknight: function MyClass() { }; console.log(this.MyClass === MyClass);
[21:58] mape: tjholowaychuk: well that is what it does now? WITH content-length set to 100 (which is wrong) I get it piece by piece, if I REMOVE content length the browser waits
[21:58] ckknight: felixge: it does === undefined, though.
[21:58] ckknight: as it should.
[21:58] konobi: felixge: a small file which has 3 line functions for what you touch and then you load that class instead
[21:58] mape: and It doesn't stop after 100, it keeps getting a lot of data beyond 100
[21:58] felixge: ckknight: again: I'm talking about code that is evaluated in the global execution context
[21:58] felixge: node.js modules aren't
[21:59] felixge: ckknight: I'm pretty sure you were running this from a node module, yes?
[21:59] ckknight: yeah
[21:59] felixge: ckknight: well, node.js wraps a closure around your code without telling you
[21:59] ckknight: okay
[21:59] felixge: ckknight: before compiling it
[21:59] konobi: felixge: example... http://cpansearch.perl.org/src/KONOBI/Net-API-RPX-0.01/t/mock/LWP/UserAgent.pm
[21:59] felixge: ckknight: you can try this in the Firebug console for example: function MyClass() {}; window.MyClass === MyClass;
[21:59] felixge: should be "true"
[21:59] ckknight: ah, okay then
[22:00] ckknight: also: ick
[22:00] konobi: LWP::UserAgent is a big complex class... but I only ever need to interat with about 4-5 methods
[22:00] ckknight: what I'd recommend instead if you wanna do such craziness is to instead define it as global.MyClass = function() { }
[22:00] felixge: konobi: sorry, I'm confused. What does perl have to do with this? :)
[22:00] konobi: it's a method.... you can use it anywhere
[22:01] felixge: ckknight: My tests should not influence my code :)
[22:01] felixge: *shakesfist*
[22:01] konobi: felixge: then this is the test... http://cpansearch.perl.org/src/KONOBI/Net-API-RPX-0.01/t/01-basic.t
[22:01] ckknight: felixge: I don't like your tests. :P
[22:01] ckknight: you're too dependent on specifics.
[22:02] sveimac has joined the channel
[22:02] felixge: ckknight: I want TDD without compromises :)
[22:02] patzak has joined the channel
[22:02] patzak has joined the channel
[22:02] felixge: that's my only "specific" : )
[22:02] highermath_away has joined the channel
[22:03] ckknight: felixge: I think you're tests are too specific, wouldn't you want to test how it runs rather than whether some function is called?
[22:03] ckknight: ACTION shrugs
[22:03] felixge: konobi: The file I was showing is the actual file I want to test, not the class I want to mock
[22:03] ckknight: also, what would happen if you refactor the name of it? it breaks.
[22:03] konobi: so you want to overload the code you're writing to test it?
[22:03] felixge: ckknight: No, I'm a mockist
[22:03] ckknight: (of your private init func, I mean)
[22:04] jetienne has joined the channel
[22:04] felixge: ckknight: http://martinfowler.com/articles/mocksArentStubs.html#ClassicalAndMockistTesting
[22:04] jetienne: http://www.commodoreusa.net/CUSA_C64.aspx i want to code node on this
[22:04] felixge: ckknight: that's an ok thing for my test to depend on
[22:04] ckknight: or what if instead of having your init function be a method, what if you wanted to just have it be an immediate invocation?
[22:05] ckknight: you're compromising based on what your tests expect, not on how it runs
[22:05] unlink has joined the channel
[22:05] unlink has joined the channel
[22:05] felixge: I'm compromising on my tests, but not my code
[22:05] ckknight: not from my point of view
[22:05] felixge: I want my code to stay as is, but any aspect of it testable
[22:06] felixge: in this case my file loads some config form a json file which performs I/O
[22:06] stagas: jetienne: I was looking at those yesterday
[22:06] felixge: which I don't want in my test
[22:06] felixge: konobi: yes
[22:06] konobi: batshit
[22:07] stagas: jetienne: they should at least had a c64 clone in it in parallel with the pc
[22:07] jetienne: stagas: i learn on an actual keyboard like this. apple IIe and believe me... i miss it. current keyboards seems gummy 
[22:08] eazyigz: anybody have good suggestions for serving cache manifest file?  Anybody got it working with a mobile app?
[22:08] JojoBoss has joined the channel
[22:08] jetienne: i got a 500e phone but impossible to get a valid keyboard
[22:09] jetienne: stagas: i love the idea of c64, you know there is an irc guy doing gameboy emulation in browser ? crazy :)
[22:09] stagas: jetienne: I have an a1200 and the keyboard is great, but it needs a component and some modding to make it work as a usb kb
[22:09] DTrejo has joined the channel
[22:10] DTrejo: hello, could anyone tell me why this is not working? https://gist.github.com/902567
[22:10] jetienne: stagas: i did the amiga stuff too. with the huge 40mbyte harddrive on the side :)
[22:12] jetienne: http://amiga.erkan.se/index.php/2007/07/ <- stagas thats the one :)
[22:12] max_dev has joined the channel
[22:12] pifantastic_ has joined the channel
[22:12] jetienne: ok end of nostalgia 
[22:12] bradleymeck: dtrejo so its really streamify you want us to debug not that?
[22:12] DTrejo: bradleymeck: I suppose, the only reason I show that is because the strings look identicaly when I print them to the console
[22:13] devrim has joined the channel
[22:13] bradleymeck: cast em to buffers and see if they are the same bytes (im guessing some hidden stuff is in there)
[22:13] DTrejo: bradleymeck: I'm pretty sure neither of them are buffers, I suppose I should double-check
[22:13] DTrejo: ok
[22:16] rburhum has joined the channel
[22:16] nzfish has joined the channel
[22:18] timmywil has joined the channel
[22:20] DTrejo: bradleymeck: well, something interesting happened https://gist.github.com/902567
[22:20] DTrejo: arg he just left
[22:20] Nohryb has joined the channel
[22:21] Nohryb: hi !
[22:21] stagas: jetienne: if you find any decent kb let me know I'm looking for one too
[22:21] Booths has joined the channel
[22:22] DTrejo: anyone know if casting a string to a buffer and then back to a string would change the string? I suppose if the string wasn't in utf8 to start with?
[22:22] mike5w3c_ has joined the channel
[22:22] pyrony has joined the channel
[22:23] devrim has joined the channel
[22:25] mikegerwitz: DTrejo: Depends how you do it. If a string is not utf-8, you can do (for example) new Buffer( str, 'binary' );
[22:25] DTrejo: anyone have an idea of why this might be happening? where two strings are not equal, and the buffer versions are also not equal, but then when the buffers are changed back into strings they ARE equal? https://gist.github.com/902567
[22:26] felixge has joined the channel
[22:26] felixge has joined the channel
[22:26] davidcoallier has joined the channel
[22:26] DTrejo: mikegerwitz: take a look at that gist, am I doing something really silly?
[22:26] mikegerwitz: DTrejo: Probably beacuse it's comparing toString()
[22:27] mikegerwitz: DTrejo: erm, rather, it may be comparing #<Buffer> or something like taht
[22:27] Booths: I may be missing it, but isn't he comparing objects
[22:27] Booths: objects, then buffers, than strings
[22:28] nmtmason has joined the channel
[22:28] DTrejo: i'm going to make the gist cleaner so it's more obvious what's going on
[22:28] mikegerwitz: DTrejo: Oh oops. I misread the output
[22:28] pyrony has joined the channel
[22:29] jimt_ has joined the channel
[22:29] rburhum has left the channel
[22:29] Booths: The two objects would be different in memory, and return false first, then the buffers are two different things in memory = false and then the strings are the output is a JSON string, which is equal?
[22:30] DTrejo: Booths: right, but why are the strings not equal at the start?
[22:30] Booths: You didn't compare the strings in the start though, it looks like you're comparing JSON.parse() results, so objects
[22:30] technoweenie has joined the channel
[22:31] DTrejo: Booths: oh, hmm... and those two are different objects in memory, oops
[22:31] mikegerwitz: Yeah Booths is correct
[22:32] DTrejo: thanks guys, I learned this like 3 years ago, thanks for making me remember :|
[22:32] Venom_X has joined the channel
[22:32] willwhite has joined the channel
[22:33] alex_b has joined the channel
[22:33] hij1nx has joined the channel
[22:35] dyer has joined the channel
[22:35] Booths: So, I'm trying to implement the NTLM authentication protocol for an intranet project I'm working on but I seem to be stuck on converting the Base64 string to something of use. In the example here (http://davenport.sourceforge.net/ntlm.html#theType1Message) he has a hexadecimal string, but when I convert the Base64 responses I'm getting, it is giving me unicode, and I'm not sure how to convert 
[22:35] Booths: it from unicode to the hexidecimal, or at least pull the flags from it.
[22:36] springmeyer has joined the channel
[22:37] mikegerwitz: Booths: Taking a step back from the protocol - if you wanted to convert from base64 to hex, the easiest way would be: new Buffer( base64_str, 'base64' ).toString( 'hex' ); I'm not sure if that's what you're looking for or not
[22:38] stephen_mcd has joined the channel
[22:38] pHcF has joined the channel
[22:38] matyr_ has joined the channel
[22:38] Booths: Hmm I must be missing something when I compiled because I tried that and it's telling me unknown encoding, let me try to recompile and see what I get.
[22:40] mikegerwitz: Booths: Hold off on recompiling. I'm getting it too. I'm wondering if it's only supported as an input encoding
[22:40] Remoun has joined the channel
[22:41] iFire has joined the channel
[22:41] mikegerwitz: Booths: Many other things accept 'hex' as an encoding for output, so it was a logical assumption. But perhaps I'm mistaken.
[22:41] kmiyashiro has joined the channel
[22:41] Booths: This is what UTF8 returns "'NTLMSSP\u0000\u0001\u0000\u0000\u0000\u00072\u0000\u0000\u0006\u0000\u0006\u0000+\u0000\u0000\u0000\u000b\u0000\u000b\u0000 \u0000\u0000\u0000WORKSTATIONDOMAIN'"
[22:41] estrathmeyer has joined the channel
[22:41] kmiyashiro has joined the channel
[22:41] timcosgrove has joined the channel
[22:42] estrathmeyer has left the channel
[22:42] mikegerwitz: It seems that buffer only supports ascii, utf8, ucs2, base64 and binary
[22:42] c4milo1 has joined the channel
[22:43] Booths: Yeah, not sure how to get what I want out of that unicode then... 
[22:44] mikegerwitz: Booths: Somehow I've output HEX in the past for encryption keys...trying to remember how now..
[22:44] Booths: the crypto provides hex
[22:44] mikegerwitz: Booths: It does, but it was binary in memory
[22:44] mikegerwitz: Booths: (before I output it, that was)
[22:45] mikegerwitz: Booths: d'oh, I wrote my own routine -_-
[22:45] Booths: Yeah I'm drawing blanks. I'd rather be able to implement the protocol than have an iframe running IIS/ASP w/ postbacks to the server
[22:45] Booths: So, just convert binary to hex
[22:46] sfoster has joined the channel
[22:46] markwubben has joined the channel
[22:46] Booths: Potentially stupid observation: Isn't hex just base16, so I could theoretically just convert from one base to another?
[22:47] mikegerwitz: Booths: Depends what method you're considering :) Not with the buffer, no.
[22:47] gf3 has left the channel
[22:48] Booths: Well not even put it into the buffer, just convert from 64 straight to 16
[22:48] dominictarr_ has joined the channel
[22:48] jacobolus has joined the channel
[22:49] gmci has left the channel
[22:50] mikegerwitz: Booths: Technically that's what converting to hex is, yes
[22:50] timcosgrove has joined the channel
[22:50] timcosgrove has left the channel
[22:50] matyr has joined the channel
[22:51] Poetro has joined the channel
[22:52] Booths: Guess I'll try that. It's weird though, in buffer.js there's a toString hex...
[22:52] mikegerwitz: Booths: Heh, it probably needs it for console.log()...ironic.
[22:54] Booths: Oh well, at least it gives me something to do real quick
[22:54] mikegerwitz: Booths: SlowBuffer includes one in toString()...but that's different than Buffer
[22:57] Booths: Yeah I saw it in buffer as well further down the page
[22:57] mikegerwitz: Booths: Looks like master has support for hex output, but nothing else does
[22:57] blueadept: what does a static method do?
[22:57] Booths: hex, utf8 utf-8, ascii, binary, base64, usc2 usc-2
[22:57] Booths: alright, oh well
[22:58] mikegerwitz: Booths: Hopefully soon then!
[22:58] mikegerwitz: blueadept: Static methods can be invoked without instantiating a class (or in the case of JS, a constructor)
[22:59] newy_: any thoughts on the best way to do pubsub on node?
[23:00] gazumps has joined the channel
[23:03] tim_smart: newy_: Redis :)
[23:04] bcelenza has joined the channel
[23:04] jimt has joined the channel
[23:05] heavysixer has joined the channel
[23:06] dominictarr_ has joined the channel
[23:12] boaz has joined the channel
[23:13] saikat has joined the channel
[23:14] tfe_ has joined the channel
[23:15] sivy has joined the channel
[23:16] jimt_ has joined the channel
[23:19] stepheneb has joined the channel
[23:19] sivy_ has joined the channel
[23:21] jimt has joined the channel
[23:21] ji0n has joined the channel
[23:22] matschaffer has joined the channel
[23:23] xandrews has joined the channel
[23:23] devrim has joined the channel
[23:23] evanmeagher has joined the channel
[23:24] joel_clark has joined the channel
[23:24] bcelenza has joined the channel
[23:24] newy_: @tim_smart can i bother you to elaborate a bit?
[23:25] tim_smart: newy_: Redis already has a pubsub system built in. You can just proxy to it.
[23:25] tim_smart: redis_client.publish('channel', 'message');
[23:26] tim_smart: redis_client.subscribe('channel'); redis_client.on('message:channel', ...);
[23:26] joel_clark has left the channel
[23:28] dominictarr_ has joined the channel
[23:28] newy_: tim_smart: thanks.  im working on a simple node chat client that has rooms.  ideally broadcasts are only sent to people subscribed to the rooms
[23:29] llkazu has joined the channel
[23:31] tim_smart: You could setup a 'broadcast' channel, along with a channel for every room.
[23:32] tim_smart: And possibly a channel for each user, if you want PM support
[23:32] beejeebus has joined the channel
[23:33] noocx has joined the channel
[23:33] noocx: hi
[23:35] springmeyer has joined the channel
[23:38] eventi has joined the channel
[23:41] atmos has joined the channel
[23:41] jaket has joined the channel
[23:43] tyler-iphone: whats the best oauth lib?
[23:43] [[zz]] has joined the channel
[23:43] pauls has joined the channel
[23:43] atmos: tyler github.com/ciaranj/
[23:44] atmos: there's a good oauth lib there and modules/example on using it
[23:44] tyler-iphone: atmos: thanks
[23:45] tyler-iphone: is that in npm?
[23:46] b3f0r3 has joined the channel
[23:47] b3f0r3: i need a weather script anyone can suggest it?
[23:48] [[zz]] has joined the channel
[23:48] tyler-iphone: 'Spam is off topic on freenode.'
[23:49] tyler-iphone: lol like that is the reason why spam is bad
[23:49] atmos: yes
[23:50] dominictarr has joined the channel
[23:50] c4milo1 has joined the channel
[23:51] nonnikcam has joined the channel
[23:54] tschundeee has joined the channel
[23:58] MikhX has joined the channel
[23:58] perezd: hey socketio question, why would I be seeing these? 4 Apr 16:58:20 - Invalid WebSocket key: "I(- a)  12 T72 :)0JlN (64690". Dropping connection
[23:58] perezd: socket IO wants the two secure keys version of the handshake
[23:58] perezd: but it doesn't like the spaces??
