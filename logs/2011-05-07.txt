[00:01] techwraith: Qbix2: Neither of those have been an issue for us
[00:02] techwraith: Qbix2: but I don't have a technical answer for either of those, that's something you'll have to ask one of the committers :)
[00:04] Qbix2: what do you guys do
[00:04] Qbix2: that it hasn't been an issue for you
[00:04] Bwen has joined the channel
[00:04] techwraith: Streaming file uploads
[00:04] sivy_ has joined the channel
[00:04] quackquack has joined the channel
[00:05] techwraith: With some other stuff built in too
[00:05] ddsf: techwraith,  np :)
[00:06] DTrejo has joined the channel
[00:07] jmoyers: Qbix2: that article was a 6 months old, and was written regarding imbedding v8 in an existing c++ application with existing architecture
[00:07] jmoyers: embedding too
[00:07] techwraith: jmoyers++
[00:07] v8bot:  techwraith has given a beer to jmoyers. jmoyers now has 1 beers.
[00:07] Qbix2: jmoyers I knw
[00:07] Qbix2: but those 2 things are applicable to node.js today
[00:07] Qbix2: stop-the-world gc, and memory errors
[00:07] copongcopong1 has joined the channel
[00:07] jmoyers: garbage collection: it has its drawbacks
[00:08] jmoyers: its like...
[00:08] jmoyers: what about php for example?
[00:08] sechrist: php has GC now
[00:08] sechrist: it's a simple reference sweep though
[00:08] jmoyers: yes
[00:08] jmoyers: 5.3
[00:08] jmoyers: but all im saying is
[00:09] jmoyers: theres a bunch of silly horse shit in the php world -- the application spins up and dies with each request, it has no manual memory management worth a damn, libraries have leaks etc etc
[00:09] Wizek: Hi! Is there a way to get the host I'm o with node.js? Like localhost, or http://23.55.231.110:80 ?
[00:09] jmoyers: does that stop a bajillion websites from using php effectively?
[00:09] monokrome: halfhalo: halfhalo: Hey. Are you around?
[00:09] sechrist: the problems with php come in at scale
[00:09] jmoyers: business needs drive requirements, and occasional stop the world gc'ing only causes huge trouble in fully real time apps or massive scale
[00:09] sechrist: the most inefficient code ever with zero hits doesn't have performance problems
[00:10] munkymachine has joined the channel
[00:10] jmoyers: and its way faster to develop in php than it is in c
[00:10] jmoyers: and hence, business value > perf any day
[00:10] techwraith: sechrist: I believe that's his point :P
[00:10] wirehead: You know, I've written tons of software in C++ where the issues of GC were unacceptible.
[00:10] ddsf has left the channel
[00:10] bingomanatee: Doesn't look like HTTP likes PUT - something between the form and express reinterprets the data as GET. 
[00:10] sechrist: in which case, rails, python, lisp, pretty much everybody has the same problem
[00:10] sechrist: just with node you can squeeze more on a single box
[00:10] dgathright has joined the channel
[00:10] no-gooder has joined the channel
[00:11] jmoyers: yes, c++ is great for when garbage collection doesn't do the trick
[00:11] techwraith: sechrist: And it adds business value :)
[00:11] jmoyers: but writing c++ all day long for every task is a huge waste of time imo
[00:11] CrabDude_ has joined the channel
[00:11] sechrist: jmoyers: even OkCupid suggests against that
[00:11] quackquack: Can someone tell me what is wrong with this Jade: http://pastebin.com/FgLizpwW
[00:11] sechrist: and they wrote their web application server and logic in C++
[00:11] dgathright_ has joined the channel
[00:11] brownies: bingomanatee: you have to do some dance with a hidden form field if you want to PUT on express, iirc
[00:11] quackquack: I get 500 SyntaxError: Unexpected identifier
[00:11] langworthy has joined the channel
[00:12] bingomanatee: That is the paradox - you can make an app efficient in C++ OR meet your deadlines with non performant high level.code
[00:12] sechrist: Why use C++?
[00:12] bingomanatee: is just hidden: method good enough?
[00:12] sechrist: That's too high level
[00:12] sechrist: give me assembler plz
[00:12] aslakhellesoy has joined the channel
[00:12] jmoyers: thats not to say c++ isn't useful
[00:12] jmoyers: it totally fucking is
[00:12] bingomanatee: Its a matter of client priority 
[00:12] sechrist: also you should optimize where you're hurting
[00:12] Nietecht: quackquack: put commas in between your tag properties
[00:13] sechrist: I've taken parts out of javascript in my node applications and put them into C++ addons for example
[00:13] sechrist: based on profiling
[00:13] aslakhellesoy: does anyone know if npm now excludes files not in git when creating/publishing a package?
[00:13] sechrist: (because I was hitting real-world problems and didn't want to spin up more instances, thus raising our monthly costs)
[00:13] jmoyers: sechrist++
[00:13] v8bot:  jmoyers has given a beer to sechrist. sechrist now has 0 beers.
[00:13] jmoyers: and with regards to memory allocation
[00:14] jmoyers: i've never run into that myself
[00:14] jmoyers: but i'll remind whoever that was that php will shit itself when its exhausted its memory allocation, too
[00:14] quackquack: Nietecht: thanks!! now im getting 500 Error: EBADF, Bad file descriptor :P
[00:16] Nietecht: Eh, not sure, I guess he can't find a file, but it's not an issue with the code you posted
[00:17] admc has joined the channel
[00:17] rauchg has joined the channel
[00:18] Spion_ has joined the channel
[00:19] bene has joined the channel
[00:19] sleeplessinc has joined the channel
[00:22] qilf has joined the channel
[00:23] braddunbar has joined the channel
[00:24] vikstrous has joined the channel
[00:24] acodemonkey has joined the channel
[00:25] halfhalo: monokrome: hmm?
[00:27] fallsemo has joined the channel
[00:28] quackquack: Nietecht: it has to have seen the file, else it wouldnt have gotten the syntax error before
[00:29] Nietecht: Well, ye, I'd assume it's another file he can't find :)
[00:29] Nietecht: Maybe one of the script or css files
[00:29] hassox has joined the channel
[00:29] quackquack: Hmm... does it compile those on the fly into the html?
[00:30] aslakhellesoy: confirmed - npm refuses to package files that are in .gitignore. Bummer. https://github.com/isaacs/npm/issues/880
[00:30] Nietecht: Actually, no, you're right, what I said doesn't apply
[00:30] quackquack: W8, got it. Had to restart the server
[00:31] eee_c has joined the channel
[00:31] jmoyers has left the channel
[00:32] admc1 has joined the channel
[00:33] brownies has joined the channel
[00:34] zemanel has joined the channel
[00:34] deepthawtz has joined the channel
[00:35] zackattack has joined the channel
[00:36] wirehead has left the channel
[00:39] admc has joined the channel
[00:40] rauchg has joined the channel
[00:40] peerless has joined the channel
[00:43] peerless: When creating a model for mongoose, can I have a property that is type: Object and really save an arbitrary object to it? 
[00:46] n2liquid: ryah: how's the native Windows port going?
[00:46] rauchg: peerless
[00:46] rauchg: you might want to use Mixed
[00:46] rauchg: for that
[00:46] rauchg: note: mongoose won't autodetect changes for that
[00:47] rauchg: (not always at least)
[00:47] rauchg: so when you modify them, do .commit('key.name')
[00:47] n2liquid: anyone knows about the Windows port:
[00:47] n2liquid: ?*
[00:47] peerless: Ok Im just so used to relation db, and i want to save an array of survey answers with each user..normally id have a answer table with key into user table..but Im thinking with mongoDB i can just literally save the array as part of the user object, or is this still a bad idea?
[00:48] mscdex: n2liquid: piscisaureus is probably the one to ask
[00:49] keeth has joined the channel
[00:50] langworthy has joined the channel
[00:53] rchavik has joined the channel
[00:53] bingomanatee has joined the channel
[00:56] m0hit: hey
[00:56] m0hit: another question. 
[00:57] dguttman_ has joined the channel
[00:57] m0hit: I am using socket.io on a https website. and somehow when falling back on XHR it always tryies to fetch over http://
[00:57] m0hit: what am i missing here?
[00:58] Bwen: the "s"
[00:58] Bwen: :D
[00:58] pcardune has joined the channel
[00:59] confoocious has joined the channel
[00:59] confoocious has joined the channel
[00:59] admc has joined the channel
[01:00] piscisaureus: n2liquid: it is a major goal for node 0.5/0.6
[01:00] piscisaureus: we're working on it
[01:00] bwinton has joined the channel
[01:00] monokrome: halfhalo: Sorry, I thought I was using your library but it is one by martynsmith that npm installed
[01:00] halfhalo: ACTION has a library?
[01:01] monokrome: halfhalo: NodeJS-IRC?
[01:02] m0hit: rauchg: i saw your post about https being available (http://groups.google.com/group/socket_io/browse_thread/thread/ca0c3da07f9ed540). However, the client library always seems to fetch over HTTP. patch?
[01:02] halfhalo: oh... yeah... that thing
[01:02] willwhite has joined the channel
[01:03] BrianRice-mb has joined the channel
[01:03] monokrome: heh
[01:03] halfhalo: I keep meaning to go back and refactor that.... oh well
[01:04] monokrome: It has an empty README
[01:04] monokrome: I felt tricked :'(
[01:04] jamesarosen has joined the channel
[01:04] halfhalo: really? there should be one around here somewhere
[01:04] cbiscardi has joined the channel
[01:04] monokrome: :)
[01:05] monokrome: https://github.com/halfhalo/Node.js-IRC/blob/master/README
[01:05] jamesarosen has joined the channel
[01:06] halfhalo: heh
[01:07] keeth has joined the channel
[01:07] admc has joined the channel
[01:08] rauchg_ has joined the channel
[01:08] boogyman_ has joined the channel
[01:12] binarypie has joined the channel
[01:12] Dreamer3 has joined the channel
[01:16] wormphlegm has joined the channel
[01:17] avalanche123 has joined the channel
[01:18] admc1 has joined the channel
[01:18] davidascher has joined the channel
[01:21] rauchg_: pquerna how about running tests in parallel ?
[01:21] pyrony has joined the channel
[01:22] pquerna: rauchg_: hmm? it does that by default
[01:22] pquerna: rauchg_: unless you pass --concurrency 1
[01:23] mattstevens has joined the channel
[01:25] langworthy has joined the channel
[01:29] postwait has joined the channel
[01:34] ParadoxQuine has joined the channel
[01:34] ParadoxQuine: 8865
[01:34] ParadoxQuine: oops
[01:34] Marak has joined the channel
[01:34] nexxy: ACTION cheers for Marak 
[01:34] Marak: :-D
[01:34] Marak: what did i do now
[01:34] nexxy: something I'm sure
[01:35] ParadoxQuine: woohoo
[01:35] nexxy: I was just giving you a continuation of my praise for getting me in to the conf
[01:35] nexxy: but tell me, what *did* you do now
[01:36] yozgrahame has joined the channel
[01:36] mongouser has joined the channel
[01:36] Marak: ahhh yeahhh
[01:36] Marak: nexxy!
[01:36] Marak: portland represent
[01:37] nexxy: mhmm
[01:37] Marak: did you like nodeconf?
[01:37] mongouser: I am having some problems with mongoose, can anyone take a look to find the error? http://pastebin.com/XjDtrQey
[01:37] nexxy: very much
[01:37] mongouser: Thanks
[01:37] nexxy: I learned a lot and gathered tons of great resources
[01:37] Marak: im glad you made it and we got to give some portland hackers some love
[01:37] Marak: :-D
[01:37] nexxy: yaa
[01:37] Marak: do you know duncan beever?
[01:37] nexxy: not personally
[01:38] Marak: im having dejavu
[01:38] nexxy: yep ;P
[01:38] sonnym has joined the channel
[01:38] admc has joined the channel
[01:39] mongouser: Anyone?
[01:39] mongouser: I think it has something to do with changes in the API
[01:40] ibrahimal-rajhi has joined the channel
[01:44] m0hit: mongouser: what is the problem?
[01:45] robotarmy has joined the channel
[01:45] k1ttty has joined the channel
[01:46] irccd_user has joined the channel
[01:46] mongouser: It says: TypeError: undefined is not a function
[01:46] nexxy: what is "It"?
[01:46] mongouser: thanks for helping by the way!
[01:46] fallsemo has joined the channel
[01:46] mongouser: error output
[01:47] m0hit: mongouser: line 2
[01:47] m0hit: its mongoose.Schema (NOT mongoose.schema)
[01:48] irccd_user has joined the channel
[01:48] m0hit: mongouser: tested it, change that and it works
[01:48] mongouser: :)
[01:48] mongouser: thanks a lot
[01:48] m0hit: mongouser: np. 
[01:48] mongouser: it late where I live, that was teh problem
[01:48] mongouser: :)
[01:49] mongouser: I'm starting to miss the difference between upper and lower case...time to go to bed I think
[01:50] mongouser: Start-ups are rough :)
[01:50] jtsnow has joined the channel
[01:53] harth has joined the channel
[01:55] nexxy: being a wage slave is rougher imo
[01:56] gdusbabek has joined the channel
[01:56] keeth has joined the channel
[01:56] ryanfitz has joined the channel
[01:57] DTrejo: i should finish readline docs...
[01:58] DTrejo: good thing school finishes soon
[01:58] davidpadbury has joined the channel
[01:59] zackattack has joined the channel
[01:59] mongouser: @nexxy: Touché
[02:01] dcampano has joined the channel
[02:02] carllerche has joined the channel
[02:03] stevenj has joined the channel
[02:03] peerless: anyone know if this is still a fine way to create a model: https://github.com/madhums/nodejs-express-mongoose-demo/blob/master/model.js   I can't get this to run though
[02:08] mdoan has joined the channel
[02:08] Jamool_ has joined the channel
[02:09] timmywil has joined the channel
[02:10] CStumph has joined the channel
[02:10] joshontheweb has joined the channel
[02:12] ibrahimal-rajhi has joined the channel
[02:16] admc has joined the channel
[02:18] fairwinds: hey, anyone using stitch to get their commonJS into the browser?
[02:19] samsonjs has joined the channel
[02:20] hoodoos has joined the channel
[02:22] cbiscardi has joined the channel
[02:22] brianloveswords has joined the channel
[02:24] cachemoney has joined the channel
[02:24] cbiscardi has left the channel
[02:25] brianloveswords_ has joined the channel
[02:26] sivy has joined the channel
[02:27] drteeth has joined the channel
[02:28] fairwinds: just wondering whether folks are bundling anything more complex than a module or two at a time
[02:29] fairwinds: the issue for me is getting sources in right order atm for a larger bundle
[02:29] drteeth has left the channel
[02:29] carter_ has joined the channel
[02:29] davidcoallier has joined the channel
[02:30] creationix has joined the channel
[02:34] carter_ has left the channel
[02:35] dnolen has joined the channel
[02:38] elephants has joined the channel
[02:43] carllerche has left the channel
[02:45] sion2k has joined the channel
[02:46] stevenj has joined the channel
[02:47] Corren has joined the channel
[02:49] dandean has joined the channel
[02:52] swaj: anyone know how to make npm install modules "globally" ?  when I do npm install express, it just makes a node_modules folder in my working directory and plops everything in there.
[02:52] dyer has joined the channel
[02:52] monokrome: Does Node provide anything like jQuery.extend?
[02:53] monokrome: I'm pretty sure that it does not - but there
[02:53] monokrome: is a part of me that wants to verify everything :/
[02:53] chjj: no
[02:53] chjj: it used to
[02:53] chjj: but it was taken out because it wasnt used internally
[02:53] monokrome: Oh... Why would they take it out?
[02:53] sion2k: monokrome: you could use underscore.
[02:53] chjj: to keep core small
[02:53] monokrome: sion2k: Yeah, I could. I was considering it.
[02:54] vikstrous: does anyone else here use express-csrf?
[02:55] jdp has joined the channel
[02:56] monokrome: underscore saves the day, again! :)
[02:56] chjj: i dont think underscore has a deep copy function though
[02:57] chjj: it should
[02:57] monokrome: It definitely should... I assumed extend did it :/\
[02:57] chjj: its shallow
[02:57] chjj: unfortunately
[02:57] ibrahimal-rajhi has joined the channel
[02:58] rauchg has joined the channel
[02:59] creationix: pquerna: you around?
[03:00] creationix: My internet may die at any moment, I'm riding through the mountains at the CA, OR border at the moment.
[03:00] munkymachine has joined the channel
[03:00] fallsemo has joined the channel
[03:00] creationix: or anyone around that has experience with node extensions?
[03:01] vikstrous has joined the channel
[03:01] Corren: i need some assistance with a path problem with node & npm. I'm not installing to local system (compiling into private folder)
[03:02] Corren: after i install node, i install npm and express
[03:02] Corren: but when I run my app I get an express not found error
[03:02] p_nitsch has joined the channel
[03:02] monokrome: creationix: Don't you have a library for client-side node?
[03:02] chjj: corren: npm installs stuff locally by default now
[03:03] Corren: locally meaning relative to node?
[03:03] chjj: if you want global installs you need to do npm install express -g
[03:03] monokrome: Corren: It installs things in ./node_modules
[03:03] creationix: monokrome: I don't think so
[03:03] monokrome: creationix: Oh. I thought that a friend was talking about a library of yours for bundling nodejs and webkit for client-side use, but maybe I'm wrong :)
[03:03] creationix: monokrome: what are you trying to do?
[03:04] Gregor has joined the channel
[03:04] seivan has joined the channel
[03:05] Corren: my node -e require_paths shows this: /Users/ken/.node_modules; /Users/ken/.node_libraries, and $MYNODEDIR/lib/node
[03:05] Corren: but that's not where npm installed my modules
[03:05] monokrome: update npm?
[03:05] Corren: I just installed latest
[03:05] creationix: monokrome: ahh, http://github.com/creationix/topcube
[03:05] Corren: fresh repo
[03:05] creationix: monokrome: it's not client-side node, it's webkit for node for desktop apps
[03:06] monokrome: creationix: That's what I meant... :)
[03:06] monokrome: Funny that I remembered your name and not the project name
[03:06] creationix: monokrome: it's nowhere done though.  Right now it's just webapps for linux desktops
[03:06] halfhalo: your crazy webapp thing?
[03:06] creationix: and node doesn't actually run in the client side
[03:06] creationix: halfhalo: yep, I had to rename it
[03:06] monokrome: creationix: Well, I know someone that's supposedly gotten it to do quite a bit :)
[03:07] creationix: monokrome: cool
[03:07] halfhalo: heh
[03:07] monokrome: Oh, they are running node bundled with it on the client as process on the desktop
[03:07] Corren: I just don't know how to resolve it
[03:08] creationix: anyway, I'm working on node-gir and I'm having a hard time with C++ stuff
[03:09] zackattack has joined the channel
[03:09] brownies: can you guys recommend a good library for parsing/scraping web sites? jsdom is buggy... need something that won't crash my server
[03:10] chjj: http.request and regexes for the win
[03:10] chjj: ;)
[03:11] creationix: brownies: there is polotec's libxml2 bindings for node
[03:11] chjj: would libxml2 be able to parse html with graceful error handling though?
[03:11] Aria has joined the channel
[03:12] sion2k has joined the channel
[03:12] creationix: I think it has a html5 mode
[03:12] creationix: not sure though
[03:12] chjj: ah
[03:13] brownies: yea, chjj, that's what i was thinking. i'm also looking at https://github.com/chriso/node.io though -- anyone tried that?
[03:13] Corren: so where *should* npm be installing modules to?
[03:14] brownies: generally, i think treating in-the-wild HTML as proper XML is a recipe for disaster
[03:14] monokrome: ./node_modules
[03:14] chjj: agreed
[03:15] sion2k has joined the channel
[03:15] chjj: reminds me though, i just wrote this hacky little function "isWellFormed()", its like 30 or 40 lines of pure awesome, tests whether an html/xml fragment is well-formed
[03:16] chjj: 28 lines actually!
[03:16] chjj: times like that when i love JS
[03:16] fallsemo has joined the channel
[03:17] Viriix has joined the channel
[03:19] monokrome: ACTION is trying to figure out how to do grouping in IRC more easily
[03:19] matyr has joined the channel
[03:20] munkymachine has left the channel
[03:20] Corren: monokrome: it doesn't seem like npm is doing the right thing :S
[03:21] Corren: obviously I can work around it by including a cp -R <where npm modules are> ~/.node_modules
[03:21] Corren: but I'd like to know what's going on
[03:21] jmoyers has joined the channel
[03:22] rpflo has joined the channel
[03:23] temas has joined the channel
[03:23] admc has joined the channel
[03:23] n2liquid has joined the channel
[03:24] admc1 has joined the channel
[03:24] mjr_ has joined the channel
[03:24] rworth has joined the channel
[03:25] skyler_brungardt has joined the channel
[03:27] LowValueTarget has joined the channel
[03:28] e2i has joined the channel
[03:28] LowValueTarget has joined the channel
[03:30] funtimes has joined the channel
[03:30] funtimes: hey guys
[03:30] funtimes: having problems with the mongodb extension for now
[03:30] funtimes: for node*
[03:30] xeodox has left the channel
[03:30] funtimes: TypeError: Cannot read property 'bson_serializer' of null
[03:31] funtimes: got strange errors when i compiled
[03:31] funtimes: ../objectid.h:51:23: warning: no newline at end of file In file included from ../bson.cc:19:
[03:31] vikstrous has joined the channel
[03:32] chjj: what module is that?
[03:32] funtimes: mongodb
[03:32] peerless has joined the channel
[03:32] chjj: its just called mongodb?
[03:32] caike has joined the channel
[03:32] rauchg has joined the channel
[03:32] funtimes: it's just called mongodb in npm
[03:32] funtimes: might be mongodb-native
[03:33] chjj: mongodb-native is pure JS
[03:33] chjj: it doesnt use any c++
[03:33] chjj: oh thats orlandov's mongodb module
[03:33] chjj: youre using
[03:34] chjj: im not sure, ive never used it
[03:36] wormphlegm has joined the channel
[03:37] Wa: funtimes; put a newline at the end of that file ;]
[03:37] Wa: that's just a warning, anyway
[03:37] funtimes: should it cause a problem Wa?
[03:37] Wa: nope
[03:37] Corren: ok, so npm seems to completely disregard the prefix directory when installing packages
[03:38] chjj: funtimes: you could give mongodb-native a try
[03:38] funtimes: Corren: correct
[03:39] Corren: shouldn't it install packages in the prefix directory instead of relative to where I run npm from
[03:39] chjj: corren, do what i do, "git clone ..." and install everything by hand :)
[03:39] chjj: not as bad as it sounds
[03:39] Corren: hm.
[03:40] funtimes: gonna give mongoose a try
[03:40] chjj: mongoose is based on mongodb-native
[03:40] dandean has joined the channel
[03:40] chjj: its a wrapper for mdb-native
[03:40] chjj: just kind of abstracts it more
[03:40] funtimes: ok
[03:40] chjj: and adds schemas and whatnot
[03:40] funtimes: what's the best way to use mongo with node
[03:40] fallsemo has joined the channel
[03:41] chjj: im not sure, lots of people like mongoose
[03:41] cuppster has joined the channel
[03:41] chjj: personally i would probably use mongodb-native and write my own models
[03:41] chjj: but thats me
[03:41] funtimes: just to establish
[03:41] funtimes: is the mongodb in npm
[03:41] funtimes: mongodb-native?
[03:41] chjj: node-mongodb is orlandov's mongodb module
[03:42] funtimes: what is mongodb-native called in npm?
[03:42] chjj: node-mongodb-native is a pure JS mongodb impl
[03:42] chjj: dunno
[03:42] chjj: npm view node-mongodb-native not working?
[03:42] funtimes: no it's definitely mongodb-native
[03:42] funtimes: looking at npmjs.org
[03:43] xeodox has joined the channel
[03:43] tk has joined the channel
[03:43] cuppster: love the node!
[03:43] funtimes: what are the mysql drives like in node?
[03:43] funtimes: modules*
[03:43] xeodox: Hey guys...should I run production node.js in 64 bit or 32 bit? Anyone know the difference?
[03:43] chjj: https://github.com/christkv/node-mongodb-native
[03:43] chjj: theres node-mysql which is the most stable mysql module
[03:43] chjj: written by felixge
[03:44] chjj: https://github.com/felixge/node-mysql
[03:44] towski has joined the channel
[03:45] chjj: xeodox: there was a post on the mailing list about that a little while ago
[03:45] rmustacc: xeodox: As far as node goes you won't see too much change. The v8 heap is limited to ~1.7GB. Not sure if 32-bit is smaller or not.
[03:45] funtimes: http://search.npmjs.org/#/mongodb
[03:45] funtimes: @chjj
[03:45] chjj: xeodox: http://groups.google.com/group/nodejs/browse_thread/thread/df8a4cd8c947fcff#
[03:47] xeodox: V8 HEAP ~ 1.7 GB ....thats RAM, right?
[03:48] funtimes: ye
[03:48] chjj: yes
[03:48] rworth has joined the channel
[03:49] aguynamedben has joined the channel
[03:49] xeodox: I'm building a chat room , and I expect it to go very viral very very fast.... So i'm considering EC2 Small (32 bit, 1.7GB memory, moderate IO performance) or EC2 Large (64 bit, 7.5GB memory, high IO performance). .....what do you guys think? 
[03:49] xeodox: I read that google groups article, but couldn't conclude anything
[03:50] rmustacc: xeodox: You want crankshaft, stick with 32-bit for now.
[03:50] rmustacc: If heap size becomes a problem, you can switch to 64-bit.
[03:50] xeodox: I see.
[03:50] xeodox: Why would I want crankshaft?
[03:50] chjj: because its faster
[03:50] rmustacc: It's a newer JIT.
[03:50] xeodox: i see.
[03:51] rmustacc: If you have long-running programs the critical sections of it are optimized more than the ones that aren't touched.
[03:51] jacobolus has joined the channel
[03:51] xeodox: Basically you guys are saying that the EC2 Small 32-bit will handle "more" than the EC2 large 64-bit ....(for my chatroom app that has lots of concurrent connections)
[03:51] xeodox: (using socket.io/now.js)
[03:52] rmustacc: I have no idea about EC2 performance, just general advice for whether to use 32 vs 64 bit node.
[03:53] rmustacc: The question of EC2 is a function of everything that's necessary and you need to run, not just your node processes.
[03:54] monokrome: xeodox: If you cluster than large will probably be faster
[03:54] monokrome: since it's 4 EC2 compute units instead of 1
[03:55] CIA-72: node: 03Marcel Laverdet 07v0.4 * rc2b5ea2 10/ (lib/_debugger.js src/node.cc): 
[03:55] CIA-72: node: Attempt to connect to debug process more than once
[03:55] CIA-72: node: The debugger would give up after only 100ms but on my system this
[03:55] CIA-72: node: timeout isn't enough. The startup process is now modified to try 6
[03:55] CIA-72: node: times every 50ms instead.
[03:55] CIA-72: node: Fixes #1010. - http://bit.ly/jykJ4x
[03:55] mjr_ has joined the channel
[03:55] jmoyers: folks here worked much with contentEditable?
[03:56] jmoyers: trying to figure out if its stable enough to look into -- i think i've seen facebook using it
[03:56] jmoyers: but not a whole lot on the net about it
[03:56] chjj: jmoyers, i think its implemented in every modern browser now
[03:56] chjj: it just depends on which browsers you want to support
[03:57] chjj: personally i would say screw IE
[03:57] chjj: ;)
[03:57] jmoyers: well yeah
[03:57] jmoyers: this is a side project
[03:57] xeodox: monokrome: You mean, select "cluster compute instance" ? that's super expensive haha
[03:57] jmoyers: so it goes without saying that its webkit only :P
[03:57] chakrit has joined the channel
[03:57] jmoyers: im just wondering how to work with it effectively
[03:57] Emmanuel__ has joined the channel
[03:57] ryanmcgrath: Stay the hell away from contentEditable.
[03:57] jmoyers: seems like, for instance
[03:57] chjj: i havent noticed it being buggy or anything in my experiments
[03:57] ryanmcgrath: Dear fucking lord is it a bunch of shit.
[03:57] monokrome: xeodox: No. An EC2 m1.small instance is 1 virtual core rated at the speed of 1 EC2 compute unit
[03:57] jmoyers: ha
[03:58] jmoyers: it sucks the big one you say?
[03:58] ryanmcgrath: I used to be the lead developer for http://webs.com/
[03:58] muk_mb has joined the channel
[03:58] chjj: its nice because textarea's dont act like a regular box in terms of css, a div which is contenteditable will though
[03:58] ryanmcgrath: The entire core builder relies on it.
[03:58] monokrome: Large is 2 virtual cores that are each rated at 2 EC2 compute units
[03:58] monokrome: So, it's got 4 times much speed in 2 cores
[03:58] ryanmcgrath: If you do choose to work with it, go read the TinyMCE source.
[03:58] ryanmcgrath: They've worked around every damn bug in the arena.
[03:58] jmoyers: chjj: right thats why i was looking at it, i'd rather not eff around with textarea styling or some such
[03:58] jmoyers: sigh
[03:58] joaojeronimo has joined the channel
[03:58] chjj: yeah, textarea is terribleness :(
[03:58] jmoyers: working around bugs doesn't sound like side project material to me ;-)
[03:59] jmoyers: but then again.. neither does text area
[03:59] ryanmcgrath: Bespin embedded?
[03:59] ryanmcgrath: I dunno what you're going for
[03:59] chjj: the problem is, any form submission with contenteditable will not work without js
[03:59] ryanmcgrath: My ears just perked up when I saw "contentEditable"
[03:59] jmoyers: simplest use case ever
[03:59] chjj: dont know if that matters to you
[03:59] jmoyers: i just wanted a basic multi line text input that doesn't suck ass
[03:59] jmoyers: its a bitch to style inputs in my experience
[03:59] jmoyers: maybe not for just webkit though...
[04:00] monokrome: xeodox: Do you understand what I mean?
[04:00] tlrobinson has joined the channel
[04:00] chjj: well, you could hack the hell out of a textarea to make it actually usable, and then youd have some decent fallback when js is disabled
[04:00] jmoyers: and i dont give a rats ass if it doesn't work without js
[04:00] chjj: or you could have the contenteditable box fallback to a textarea
[04:00] jmoyers: its a real time app -- so im assuming a lot of things ;-)
[04:00] chjj: im all about non-js fallback ;)
[04:00] xeodox: monokrome: Not really. I'm used to launching EC2 instances. "small", "micro".  But i've never done "cluster" or anything like that in EC2.  A
[04:00] jmoyers: sure, in my professional stuff, me too
[04:00] xeodox: monokrome: Are you saying that after I launch my small instance, I can turn that into a cluster?
[04:00] monokrome: xeodox: I'm talking about clustering node, not clustering instances
[04:01] monokrome: Cluster - as in - running multiple node processes so it runs on more than once core...
[04:01] monokrome: http://learnboost.github.com/cluster/
[04:01] xeodox: ...but on one instance?
[04:01] monokrome: No, I'm saying that it will be useless to get a large instance if you don't use one of it's cores anyway
[04:01] incon: Getting "Error 0" outputed on the console 
[04:01] xeodox: ohhh i see
[04:02] monokrome: You will be only getting twice as much speed in node instead of four times as much...
[04:02] tlrobinson: halp. i'm trying to write a script that loads one page from the alexa top 1 million domains. it gets through 1000-2000 requests before it gives me errors and hangs
[04:02] samsonjs has joined the channel
[04:02] monokrome: The nice thing with the large custer is that you get 7.5GB of RAM. If you will need that much, then you don't have an option.
[04:02] tlrobinson: errors include: Error: ENODATA, DNS server returned answer with no data
[04:02] tlrobinson: Error: ETIMEDOUT, Operation timed out
[04:02] tlrobinson: Error: ECONNREFUSED, Could not contact DNS servers
[04:02] tlrobinson: Error: socket hang up
[04:02] tlrobinson: Error: ETIMEDOUT, Operation timed out
[04:03] tlrobinson: Error: socket hang up
[04:03] tlrobinson: it seems like my DNS server might be throttling me or something
[04:03] incon: App counties to run... Getting "Error 0" (7 times a day) outputted on the console. How do a get a more descriptive errors?
[04:03] tlrobinson: but if i kill the process and restart it immediatley it goes bakc to working
[04:03] monokrome: tlrobinson: You are aware that gist exists, right?
[04:03] tlrobinson: monokrome: no?
[04:03] tlrobinson: oh
[04:03] xeodox: monokrome: How do I know if I need 7.5GB of Ram?
[04:04] tlrobinson: monokrome: oh gist, yeah
[04:04] tlrobinson: sorry
[04:04] monokrome: tlrobinson: It's this cool thing where you can paste on the web instead of flooding a user's entire window.
[04:04] chjj: xeodox: is your app using 7.5gigs of ram? :)
[04:04] tlrobinson: monokrome: sorry, it was like 5 lines
[04:04] sleeplessinc has joined the channel
[04:04] Aria: tlrobinson: Running out of file descriptors?
[04:04] monokrome: 7 lines, plus your question, and your suffix - which equates to 9 lines which could have been 1.
[04:05] tlrobinson: monokrome: ok and now we've wasted just as many discussing this
[04:05] tlrobinson: Aria: i don't think so but possibly. i'm limiting it to 10 conccurent requests
[04:05] xeodox: chjj: how do I know if it uses 7.5 gigs of ram lol? Will it use more if more people connect to the server? I dont know, I'm just a basic node.js developer that understands high level stuff
[04:06] Aria: What did you write?
[04:06] monokrome: tlrobinson: Well paste next time :)
[04:06] monokrome: s/paste/gist/
[04:06] pifantastic has joined the channel
[04:06] chjj: xeodox: 7.5 gigs of ram for a node app would be very hefty, youd be running multiple processes at that point
[04:06] chjj: v8 cant handle that much data in memory
[04:07] brianloveswords has joined the channel
[04:07] monokrome: Why not?
[04:07] Aria: V8 limits the heap size
[04:07] monokrome: weird
[04:07] chjj: because v8 was designed for the browser
[04:07] chjj: not the server
[04:08] monokrome: Doesn't that result in problems when people are doing things like streaming video to thousands of people? :/
[04:08] chjj: thats the point of streaming
[04:08] chjj: you dont load some huge video file into memory all at once
[04:08] monokrome: Yes, but I said "to thousands of people"
[04:09] chjj: i dont know, give it a try ;)
[04:09] monokrome: or does cluster and such know how to handle the memory limits?
[04:10] chjj: xeodox: run your app with the --trace_gc flag, see how much memory its using when you connect to it, then maybe extrapolate from that?
[04:11] chjj: monokrome: dunno, havent used cluster
[04:11] monokrome: hmm
[04:12] xeodox: chjj: i ran it with that flagg, but my console didn't change. same old console
[04:12] chjj: should have, you should see the garbage collector activity
[04:12] uclinux has joined the channel
[04:13] chjj: $ node --trace_gc myapp.js
[04:13] timmywil has joined the channel
[04:13] xeodox: k got it see stuff now
[04:13] xeodox: how do I read this? 
[04:14] chjj: how much memory is it using?
[04:14] chjj: its shows you the gc cycles, so memory usage might grow and then space will be freed up once objects become unreachable
[04:15] xeodox: chjj: after clicking around my site, it shows:     Scavenge 10.3 > 9.5 MB, 0ms
[04:15] xeodox: chjj: and hovers around 8-10? (for scavenge, mark-sweep, mark-compact)
[04:15] chjj: try to stress test it somehow, is your app using web sockets or something?
[04:16] xeodox: it does, yes. It's multii-chat rooms.
[04:16] chjj: hmm
[04:17] chjj: yeah, dunno how i would do that
[04:17] xeodox: is hovering around 8-10 good?
[04:17] creationix has joined the channel
[04:17] Marak has joined the channel
[04:17] xeodox: that means it's using 8-10 MB of RAM, righ?
[04:17] chjj: thats fine, as long as it doesnt keep growing for some unknown reason ;)
[04:18] xeodox: really? if it grows, what does that mea?
[04:18] roar has joined the channel
[04:18] creationix has left the channel
[04:18] Marak: leak
[04:18] drudge: hey guys
[04:18] chjj: if it keeps growing that usually means theres a leak, that something you wanted to be cleaned up isnt becoming unreachable for whatever reason
[04:18] chjj: and the GC doesnt care to clean it up
[04:18] xeodox: chjj: I have to worry about memory leaks in node.js? shit...
[04:18] xeodox: didn't think this was iOS lol
[04:18] roar: woo, node!
[04:19] chjj: definitely, in any system with automatic memory management/gc
[04:19] chjj: lots of stuff happening behind the scenes
[04:19] chjj: to free up memory
[04:19] xeodox: chjj: so what do I have to do in my code to ensure I dont leak in node.js
[04:19] edude03 has joined the channel
[04:20] chjj: make sure that you dont throw references to objects all over the place
[04:20] uclinux: is there a simple way to have a second node process run for something like foo.com/bar without distributing through nginx
[04:20] chjj: for example if you do var a=[]; http.createServer(function(req) { a.push(req); }); something weird like that, that will leak like crazy
[04:21] chjj: because the request objects will never get cleaned up
[04:21] ibrahimal-rajhi has joined the channel
[04:21] sion2k: maybe trace the GC?
[04:21] sion2k: that might help with finding issues.
[04:21] xeodox: OK, I did a stress test on the home page, and now the number ranges from 13.3 => MB Mark-sweep
[04:22] xeodox: 13.3 > 9.0 MB, 19ms
[04:22] chjj: did you run ab on it or something?
[04:22] ditesh|cassini has joined the channel
[04:22] xeodox: I ran loadimpact.com 
[04:22] chjj: ah
[04:22] xeodox: and it's 3/4 of the way done. 
[04:22] xeodox: ok now it's hovering around 10 again. weird
[04:23] Me1000 has joined the channel
[04:24] elephants has left the channel
[04:26] zackattack has joined the channel
[04:26] mike5w3c has joined the channel
[04:33] zivester has joined the channel
[04:37] bene has joined the channel
[04:37] niftylettuce has joined the channel
[04:37] niftylettuce: \o
[04:38] peerless has joined the channel
[04:40] mjr_ has joined the channel
[04:40] Thorn has joined the channel
[04:42] robotarmy has joined the channel
[04:45] DTrejo: adding meat to readline! https://twitter.com/#!/ddtrejo/status/66725150653038592
[04:46] DTrejo: if you have any criticisms or spot a typo, please throw down!
[04:47] bartt has joined the channel
[04:50] towski_ has joined the channel
[04:53] Marak: towski_!!!!!!!
[04:53] Marak: TOWSKI_ !!!!!!!
[04:53] Marak: ahhhhh
[04:53] towski_: sup dawwwg
[04:53] Marak: :-D
[04:53] towski_: having fun programming on this friday eve?
[04:54] ibrahimal-rajhi has joined the channel
[04:54] Marak: im spending my friday night moving the 12 large boxes that are in my building lobby upstairs and unpacking, then its musichackday all weekend
[04:54] Marak: so no coding right now :-(
[04:56] matyr has joined the channel
[04:57] Corren has joined the channel
[04:57] zakabird has joined the channel
[04:57] Thorn has joined the channel
[04:58] zakabird: hi all. got a question about no.de..
[04:59] mjr_: you mean how you pronounce it?
[04:59] zakabird: nooo D'e
[04:59] zakabird: of course
[05:00] zakabird: well that was funny to me at least
[05:01] zakabird: after 'git push joyent master' it rolls back to working version
[05:01] zakabird: and then after adding some missing npm's want to try again..
[05:02] LowValueTarget has joined the channel
[05:02] zakabird: now push says 'everything up to date' - need to commit something before pushing..
[05:02] zakabird: whats the right way to push without needing to do another commit?
[05:02] rauchg has joined the channel
[05:02] chjj: what do you mean?
[05:03] chjj: you need to commit before you push, otherwise what would you be pushing?
[05:03] febits has joined the channel
[05:03] zakabird: well it's rolled back to the working version
[05:04] zakabird: how do I get it to restart using what I just pushed.. (that didn't work because it needed some npm fixing)
[05:04] zakabird: tried node-service-restart
[05:05] zakabird: i can make it try again by pushing something different.. 
[05:05] chjj: so you want to push what you commited before but git wont let you?
[05:05] zakabird: yeah
[05:06] zakabird: well perhaps i dont need to push
[05:06] chjj: i think you can do like a soft reset to your commit before last, it wont change your working directory, it will just forget the last commit
[05:06] chjj: i dunno maybe some git hackers can answer this better
[05:07] chjj: but usually if you do $ git status it tells you how to reset back to the commit before last
[05:07] broofa has joined the channel
[05:07] chjj: lemme see
[05:08] chjj: yeah i think you can do "git reset --soft"
[05:08] chjj: and then do git commit again
[05:09] zakabird: hmmm.. I not sure thats what I want. 
[05:09] chjj: or git reset --soft HEAD^
[05:09] superjudge has joined the channel
[05:10] zakabird: I have what I want on my local machine, and git seems to think the same thinng is up on no.de
[05:10] no-gooder has joined the channel
[05:10] zakabird: no.de is doing somehting different and using the rollback version
[05:10] chjj: should work if you just do another commit i imagine
[05:10] n2liquid has joined the channel
[05:10] zakabird: oh that works fine
[05:10] zakabird: seems ugly
[05:11] zakabird: im looking for a way to do that unnecessary commit
[05:11] zakabird: some kind of 'dont use rollback version - use the one in git' command 
[05:12] Marak: snapshots are a better model then using git revision history for deployment
[05:12] no-gooder: any of you guys use hypertable ??
[05:12] Marak: i care about semver in my deployed apps, not git history 
[05:13] no-gooder: any plan to build javascript  driver for hypertable??
[05:13] pyrotechnick has joined the channel
[05:13] Marak: no-gooder: hrmmm
[05:13] peerless has joined the channel
[05:13] no-gooder: Marak, what :) ?
[05:14] zakabird: hey thanks anyways chjj :)
[05:14] Marak: figured i should say something. i had a feeling you were going to quit after not getting a response for 5 minutes
[05:14] Marak: maybe you should ask the mailing list
[05:14] Marak: no-gooder ^^^
[05:15] chjj: zakabird: no problem, sorry i couldnt be of more help
[05:15] no-gooder: Marak, ehehe
[05:15] onar has joined the channel
[05:16] rauchg has joined the channel
[05:17] nexxy has joined the channel
[05:17] vikstrous has joined the channel
[05:17] no-gooder: Marak, i found something http://sensemodus.blogspot.com/2011/03/nodejs-and-hypertable.html
[05:19] DTrejo: where is a good spot to put graphs of node release size?
[05:19] DTrejo: ala http://c0848462.cdn.cloudfiles.rackspacecloud.com/c97716dd8e4f943501bfcaadcecfdd75d06407afde.jpg
[05:20] n2liquid has joined the channel
[05:23] jmoyers: i .. want multi-line strings
[05:23] jmoyers: :-(
[05:25] chjj: jmoyers: yeah, would be nice
[05:25] chjj: i want multiline regexes more
[05:25] chjj: or extended regexes
[05:26] DTrejo: " ohai i am a 
[05:26] DTrejo: \
[05:26] DTrejo: "ohai I am a \
[05:26] DTrejo: multiline string!"
[05:26] jmoyers: that... is true
[05:26] jmoyers: however
[05:26] DTrejo: spacing gets messed up
[05:26] chjj: yeah...but not REALLY
[05:26] jmoyers: its fucking awful looking 1, and 2, not in any standard
[05:26] chjj: regexes are worse though
[05:26] DTrejo: other option is
[05:26] DTrejo: [ "hello there"
[05:26] DTrejo: , "I rock"
[05:26] chjj: absolutely no way to make them multiline unless you use the constructor
[05:26] jmoyers: also, i agree on multi-line regex -- with comments
[05:27] DTrejo: , "a lot" ].join('\n')
[05:27] chjj: DTrejo: yes, but thats not multiline lol
[05:27] DTrejo: :)
[05:27] jmoyers: string concatenation is faster these days
[05:27] jmoyers: or so i read
[05:27] chjj: jmoyers: string concatenation is faster if theres 7 or less concatenations, array.join() is faster if theres more
[05:27] chjj: at least thats what ive found in my benchmarks
[05:27] DTrejo: wow, never knew that
[05:27] DTrejo: interesting, thanks
[05:27] jmoyers: i see
[05:28] chjj: i can gist the benchmark, let me find it
[05:28] DTrejo: jsperf it?
[05:28] jmoyers: in v8 that is, yes
[05:29] robotarmy has joined the channel
[05:29] chjj: https://gist.github.com/960224
[05:30] chjj: although, it is calling push
[05:30] chjj: it might be faster to stick everything in an array literal
[05:30] seivan has joined the channel
[05:30] jmoyers: well
[05:30] jmoyers: thats real world imo
[05:31] DTrejo: jsperfing
[05:31] jmoyers: ^^ i'll be interested
[05:31] DTrejo: actually not, cause im lazy
[05:31] DTrejo: let me see if I can figure out jsperf
[05:32] DTrejo: haven't used it before
[05:32] p_nitsch has joined the channel
[05:32] _iori_ has joined the channel
[05:32] chjj: yeah, an array literal is almost as fast as concatenation below 7 concatenations, but still not quite as fast
[05:32] gazumps has joined the channel
[05:33] test1 has joined the channel
[05:33] DTrejo: code?
[05:34] tlrobinson has joined the channel
[05:34] chjj: updated the gist
[05:35] seivan has joined the channel
[05:36] DTrejo: chjj: found this: http://jsperf.com/string-concat-vs-array-join#run
[05:38] amerine has joined the channel
[05:38] jmoyers: nod
[05:40] FGRibreau has joined the channel
[05:45] DTrejo: jmoyers: chjj: http://jsperf.com/string-concat-vs-array-join/3#run
[05:45] DTrejo: not intuitive
[05:45] nexxy has joined the channel
[05:46] DTrejo: oh wait
[05:46] DTrejo: forgot to join at the end
[05:46] DTrejo: nvm
[05:47] newy_ has joined the channel
[05:48] XXY has joined the channel
[05:48] robotarmy has joined the channel
[05:48] acodemonkey has joined the channel
[05:48] XXY: hello, guys
[05:49] jmoyers: ACTION is getting to the point where his app needs some god damn Backbone. Callback/jquery soup.
[05:49] DTrejo: or just RPC
[05:49] XXY: has anyone ever got experienced over websocket with node ? 
[05:49] no-gooder: :)
[05:49] DTrejo: me, kinda
[05:49] acodemonkey_ has joined the channel
[05:49] DTrejo: XXY: you have a question?
[05:50] mscdex: XXY: yeah
[05:50] acodemonkey_ has left the channel
[05:51] XXY:  DTrejo: yes, I wanna design a wss server, and I have no idea how to start off
[05:51] DTrejo: you mean you want to use websockets for your app?
[05:51] mscdex: DTrejo: that jsperf test says concat is faster on chrome 13
[05:52] XXY: DTrejo: I mean I need a websouck secure server in node.js~^^
[05:52] mscdex: like by orders of magnitude
[05:52] mscdex: :S
[05:52] XXY: sorry socket
[05:52] DTrejo: XXY: socket.io is a good library, also nowjs.com if you want to make life easy for yourself
[05:52] XXY: mscdex: have u used ws.js module ?
[05:53] mscdex: XXY: https://github.com/miksago/node-websocket-server
[05:53] jmoyers: did you guys notice btw, douglas crockford's benchmark results changed...
[05:53] jmoyers: he added chrome 13, since im sure the chrome team crapped their pants when it wasn't there the first time
[05:53] jmoyers: http://javascript.crockford.com/performance.html
[05:54] jmoyers: 2.8 v 0.5s
[05:54] madari has joined the channel
[05:54] mscdex: crockford!
[05:55] mscdex: http://i55.tinypic.com/30s9cgh.png
[05:56] jmoyers: haha
[05:57] chjj: crockford, god of all that is javascript
[05:57] chjj: i disagree with crockford on a lot of things
[05:57] XXY: mscdex, DTrejo: thnks a lot
[05:57] jmoyers: he's been around the block
[05:57] jmoyers: all the way around
[05:58] DTrejo: np :
[05:58] DTrejo: )
[05:58] XXY: chjj: seriously ?
[05:58] chjj: yes, seriously
[05:58] chjj: (function() {})(); --- makes more sense to me than (function() {}());
[05:58] mscdex: XXY: actually, micheil's websocket server there may have to be upgraded for node 0.4.x for wss
[05:58] mscdex: but plain ws should be fine
[05:58] peerless: can I only store strings in the sessionStore or can I put full obj's that get properly serialized/hydrated?
[05:58] chjj: and i think regexes are good and useful when you know how to use them
[05:59] chjj: and i dont think "var" has to be declared at the top of the scope as long as youre aware
[05:59] TomY has joined the channel
[05:59] no-gooder: XXY, i would suggest long polling besides web sockets.
[06:00] EvilPacket has joined the channel
[06:00] mscdex: XXY: if you're not required to use only websockets, you may want to look into socket.io
[06:00] XXY: no-gooder: no-polling , how come ?
[06:01] jmoyers: is it a terrible idea to apply a express type middleware concept to socket.io messages?
[06:01] XXY: mscdex: yup. I think so, but the main probelm is I have to use websocket XD
[06:01] jmoyers: was thinking of running all events coming out of client.on('data') through waterfall type middleware
[06:02] mscdex: XXY: ok, then micheil's module should be fine as long as you don't have to use secure websockets
[06:02] mscdex: i'm surprised he hasn't updated that yet
[06:03] no-gooder: XXY, it is easier than socket.io or now.js which is built on socket.io also i think long polling more suits to  noe.js.
[06:03] XXY: mscdex: thx, how about the client side ?
[06:03] no-gooder: node.js*
[06:03] zeade has joined the channel
[06:03] XXY: no-gooder: but ...
[06:03] mscdex: XXY: well, if the browser doesn't support websockets natively, there's a flash implementation
[06:04] mscdex: long polling is not that efficient
[06:04] XXY: no-gooder:  dosen't long-polling consume more resource
[06:04] mscdex: modern browsers support better transport methods
[06:04] jmoyers: long polling is a fallback
[06:04] jmoyers: and socket.io is not hard
[06:04] stagas: is there a way to get constructor.name when it's Foo = function() {} instead of function Foo() {}
[06:04] stagas: guess not
[06:04] coreb has joined the channel
[06:04] XXY: I mean, u have to keep polling
[06:04] mscdex: stagas: no
[06:05] mscdex: the problem with long polling is that you're always tearing down the connection
[06:05] chjj: stahas: name only gets set if theres something before the parantheses, you could do var f = function hello_world() {};
[06:06] mscdex: native + flash websockets covers a pretty large amount of users out there
[06:06] chjj: flash :(
[06:06] chjj: :(
[06:06] mscdex: for anyone else there's other things like multipart streaming and server-sent events
[06:06] chjj: EventSource!
[06:06] stagas: I need a way to tell what the origin of a constructor is, is it safe to tell users to use named functions or use a type: 'something' option is better?
[06:07] matyr_ has joined the channel
[06:07] mscdex: those are all better than long polling
[06:07] no-gooder: in socket.io it makes a new request in almost every 10 seconds.
[06:07] mscdex: although websockets is the only full duplex transport right now
[06:07] chjj: stagas: what do you mean, "the origin of a constructor"?
[06:07] jmoyers: thats.. a heartbeat
[06:07] jmoyers: you can set it
[06:08] no-gooder: jmoyers, ?
[06:08] jmoyers: if im not mistaken
[06:08] jmoyers: you can set the heartbeat interval
[06:08] jmoyers: i recall seeing somewhere
[06:08] stagas: chjj: I pass a constructor to a function, and in that function I need to get some kind of identifier, a string
[06:08] no-gooder: jmoyers, also what do you mean fallback?
[06:08] no-gooder: by*
[06:08] jmoyers: i mean there is a rough order of transport election
[06:09] chjj: stagas: why? i still dont understand the context, what are you doing with this constructor
[06:09] jmoyers: websockets > flash > long polling > etc
[06:09] no-gooder: jmoyers, no it's not
[06:09] jmoyers: something along those lines
[06:09] jmoyers: no its not what?
[06:09] mscdex: alright, back to office file format reading ;)
[06:10] stagas: chjj: create objects, but the function itself right now doesn't know which constructor I pass to it, I need a way to tell
[06:10] chjj: i see
[06:10] stagas: chjj: Foo = function() {}; makeObjects(Foo);
[06:10] mscdex: whoever came up with compound files in Windows had some pretty good job security :p
[06:11] chjj: stagas: there might be a better way to do what youre doing
[06:14] chjj: stagas: you shouldnt have to be testing constructors
[06:15] seivan has joined the channel
[06:16] stagas: chjj: I'm making something crazy. what's better, this.type = 'foo' or named functions
[06:16] vikstrous: guys, i'm using mongoose and it seems stupid to write var User = mongoose.model('User'); on top of every page that needs it so i'm wondering it there's any reason not to put all the DB models in the global object?
[06:16] monokrome: path.resolve and path.normalize both don't escape 
[06:16] monokrome: ~
[06:16] monokrome: how do you do this?
[06:17] openpercept has joined the channel
[06:18] jmoyers: vikstrous: uh, i define my models like var Session = module.exports = mongoose.model('Session');
[06:18] chjj: stagas: im pretty sure you *can* set the name of a function: func.name = 'foo';
[06:18] jmoyers: that way, when i require('session').Session, its just like anything else
[06:20] chjj: yeah, vikstrous, i usually have one file called "models.js" or "data.js" that holds all the data logic
[06:20] chjj: makes things a lot simpler
[06:20] jmoyers: as long as its not 5k LOC
[06:21] rednul has joined the channel
[06:21] vikstrous: thanks
[06:21] OSInet has joined the channel
[06:25] zackattack: hm
[06:25] shreekavi has joined the channel
[06:26] monokrome: It looks like Node doesn't even support paths that start with ~
[06:28] jmoyers: .realpath doesn't expand ~?
[06:28] robotarmy has joined the channel
[06:28] monokrome: oh... It's in fs
[06:29] monokrome: I was looking in path
[06:29] robotarmy has joined the channel
[06:30] monokrome: realpath doesn't do it either
[06:31] robotarmy has joined the channel
[06:31] monokrome: http://paste.pocoo.org/show/384400/
[06:31] Daekano has joined the channel
[06:31] blueadept has left the channel
[06:32] mattmisc has joined the channel
[06:32] mattmisc has left the channel
[06:32] sub_pop has joined the channel
[06:32] criswell has joined the channel
[06:33] monokrome: I guess I need to use the HOME environment variable :/
[06:33] beawesomeinstead has joined the channel
[06:33] beawesomeinstead has joined the channel
[06:36] robotarm_ has joined the channel
[06:38] robotarmy has joined the channel
[06:41] niftylettuce has joined the channel
[06:44] temp02 has joined the channel
[06:48] matyr has joined the channel
[06:48] koala2 has joined the channel
[06:53] no-gooder has joined the channel
[06:54] MikhX has joined the channel
[06:56] willwhite has joined the channel
[06:56] copongcopong has joined the channel
[06:56] chjj: sometimes i hate stackoverflow
[07:00] hdon has joined the channel
[07:02] m64253 has joined the channel
[07:04] Daekano has joined the channel
[07:04] Daekano has joined the channel
[07:04] micheil has joined the channel
[07:05] teemow has joined the channel
[07:06] gf3 has joined the channel
[07:07] jmoyers: chjj: agree
[07:07] jmoyers: dirty feelings
[07:07] jmoyers: sometimes super useful though of course
[07:08] OSInet has left the channel
[07:08] un_golan has joined the channel
[07:12] coreb: what's wrong with stackoverflow
[07:12] SamuraiJack has joined the channel
[07:13] jmoyers: is __lookupGetter__ a mozilla only thing?
[07:17] chjj: yeah
[07:17] chjj: all the quad-underscore stuff is mozilla actually, but v8 implements a lot of it
[07:17] chjj: like __defineGetter__, __proto__, etc
[07:17] chjj: not sure about __lookupGetter__
[07:18] chjj: looks like v8 includes it actually
[07:18] chjj: just tested
[07:19] chjj: personally i think the quad underscore stuff mozilla added was good, shouldve been specced as is
[07:19] chjj: __proto__ especially
[07:20] dgathright has joined the channel
[07:20] chjj: v8: ({}).__lookupGetter__
[07:20] v8bot: chjj: function __lookupGetter__() { [n…
[07:20] chapel: is v8bot fixed/
[07:21] tmzt: mscdex: what are you doing with office files?
[07:21] tmzt: just xml version or binary as well?
[07:22] mscdex: tmzt: both
[07:22] mscdex: office 95 and newer
[07:23] mscdex: chjj: https://github.com/joyent/node/wiki/ECMA-5-Mozilla-Features-Implemented-in-V8
[07:23] mscdex: jmoyers: ^
[07:23] chjj: yeah
[07:23] chjj: i know :)
[07:23] mscdex: :)
[07:23] chjj: im just saying
[07:24] chjj: stuff should have been specced
[07:24] jmoyers: ah
[07:24] jmoyers: thats not what i thought it was
[07:24] chjj: because its porbably going to be implemented forever anyway
[07:24] chjj: probably even
[07:24] jmoyers: though you might be able to do a full magic property lookup
[07:24] jmoyers: like in php
[07:24] jmoyers: maybe a good thing that you cant...
[07:25] kseistrup has joined the channel
[07:25] chjj: ecma should also probably spec object property insertion order =/
[07:25] jmoyers: would have been convenient to do something like backbone.js models do -- but on arbitrary properties that you don't have to define ahead of time
[07:25] jmoyers: fire change events and whatnot
[07:27] iwinulose has joined the channel
[07:28] Rodatron has joined the channel
[07:29] adambeynon has joined the channel
[07:30] charlesjolley- has joined the channel
[07:30] matyr_ has joined the channel
[07:30] V1 has joined the channel
[07:31] harth has joined the channel
[07:36] bartt1 has joined the channel
[07:36] no-gooder has joined the channel
[07:39] msucan has joined the channel
[07:41] briznad has joined the channel
[07:43] typn has joined the channel
[07:44] yozgrahame has joined the channel
[07:44] V1 has joined the channel
[07:46] pyrotechnick has left the channel
[07:46] path[l] has joined the channel
[07:48] xandy has joined the channel
[07:48] kseistrup has left the channel
[07:51] astc has joined the channel
[07:51] Marak has joined the channel
[07:53] tlrobinson has joined the channel
[07:53] astc has left the channel
[07:54] atsc has joined the channel
[07:57] seivan has joined the channel
[07:59] ewdafa has joined the channel
[07:59] s0urce has joined the channel
[07:59] s0urce: hi
[08:00] Marak: hello s0urce 
[08:01] Wizek has joined the channel
[08:02] saschagehlich has joined the channel
[08:04] pyrony has joined the channel
[08:04] chjj: v8: 'hi'.big();
[08:05] v8bot: chjj: "<big>hi</big>"
[08:05] chjj: terrible
[08:05] chjj: thats what i get for browsing the v8 source
[08:05] jmoyers: tha... that is on String prototype?
[08:05] jmoyers: thats hilarious
[08:06] chjj: v8: 'yeah'.small()
[08:06] v8bot: chjj: "<small>yeah</small>"
[08:06] Marak: v8: var a = arguments.callee; a
[08:06] v8bot: Marak: function (code){ var res try{res…
[08:06] Marak: v8: var a = arguments.callee; a.toString()
[08:06] v8bot: Marak: "function (code){\nvar res\ntry{res=eval(code)}\ncatch(e){return e.name+': '+e.message}\nif(console.out.length)return console.out.join('\n')\nreturn pp(res)\n}"
[08:06] Marak: is that in v8?
[08:06] Marak: ;-)
[08:06] chjj: i dont get it
[08:07] chjj: is what in v8?
[08:07] chjj has joined the channel
[08:07] chjj: bah
[08:07] chjj: disconnected
[08:08] Marak: v8: var a = arguments.callee; var src = vm.createScript(a.toString()); src.runInThisContext()
[08:08] v8bot: Marak: ReferenceError: vm is not defined
[08:08] chjj: marak is pulling a cachemoney
[08:08] Marak: v8: var a = arguments.callee; var src = require('vm').vm.createScript(a.toString()); src.runInThisContext()
[08:08] v8bot: Marak: ReferenceError: require is not defined
[08:08] s0urce: is there any clean way to include files like php, the require thing, doenst share the same namespace as the parent document - is there any other way instead of set all vars global?
[08:09] jmoyers: heh
[08:09] jmoyers: i'd argue the node way is the clean way
[08:09] Marak: s0urce: lets go with NO
[08:09] Marak: s0urce: respect the import / export module system, its good
[08:09] s0urce: i dont like large documents, i like to split them
[08:09] chjj: s0urce: what do you want to do? it sounded like you were for one big shared namespace for a second, and then against it the next
[08:09] s0urce: but then i can use my defines
[08:10] jmoyers: some folks
[08:10] jmoyers: do a config require
[08:10] jmoyers: require('config').SOME_DEFINE
[08:10] Marak: s0urce: node isnt php. having a proper module system is a very good thing
[08:10] Marak: s0urce: you should structure your application around it, not against it
[08:10] s0urce: if i do something like : var path = "/www/foo"; require("main.js"); and in main.js: console.log(path);
[08:10] Melkor_ has joined the channel
[08:10] s0urce: this wont work
[08:10] jmoyers: that sir, is a good thing
[08:10] Marak: s0urce: as it shouldnt
[08:11] chjj: php has problems, you cant define functions outside of classes/namespaces now, because every function name is already taken, it almost had to become oop instead of purely procedural because of that
[08:11] jmoyers: maybe we should define namespaces! with *slashes*
[08:11] s0urce: i dont say, that this is the best, but how can i do it in node?
[08:11] jmoyers: :-)
[08:11] Marak: s0urce: if you want to pass something into a module, you expose a method as an export and pass it as an argument
[08:11] chjj: i think it wouldve been a better language if it remained simple and procedural
[08:11] s0urce: something like require("main.js)(path); ?
[08:11] chjj: but now its just bloat :(
[08:11] Marak: s0urce: you can also export a constucturor if you want 
[08:11] Marak: s0urce: no
[08:12] Marak: s0urce: let me show you some sample code
[08:12] ryanmcgrath: PHP will never be a good language.
[08:12] jmoyers: i hesitate to mention the global object
[08:12] bergie has joined the channel
[08:12] ryanmcgrath: ACTION goes back to whatever he was doing before.
[08:12] chjj: ryanmcgrath: agreed
[08:12] baudehlo has joined the channel
[08:13] ryanmcgrath: I just spent a week debugging some CodeIgniter/ExpressionEngine shit and I want to slit my wrists from what I've seen.
[08:13] jacobolus has joined the channel
[08:13] s0urce: i try to setup a simple page with node since 3 weeks now, but i got real problems with the logic, i am quite good in clientside js, but this node thing is a but confusing me
[08:13] jmoyers: heh
[08:13] chfo has joined the channel
[08:13] Marak: s0urce: here is a very simple example, https://github.com/Marak/say.js/blob/master/lib/say.js . notice i export a method that has argument?
[08:13] jmoyers: 5.3 is betterish
[08:13] s0urce: faye and express rly fu.. me up
[08:13] jmoyers: its still got shitloads of terrible
[08:13] chjj: ryanmcgrath: if you went back in time 12 or so years though, and stopped it from becoming so bloated and managed to keep it procedural, it couldve been a nice minimalist thing to have
[08:13] Marak: s0urce: now that i have exported a method, i can call it https://github.com/marak/say.js
[08:13] jmoyers: but, at least we have anonymous functions
[08:13] Marak: read the docs there
[08:14] ryanmcgrath: chjj: I suppose, but these days I just say fuck it and use Python.
[08:14] jmoyers: and if you ignore completely the awful slash based namespaces
[08:14] ryanmcgrath: PHP just looks bloated by default, there's so much oddness to how it flows.
[08:14] jmoyers: Hi/I'm/Symfony/Two/And/All/My/Files/Require/This/Sweet/Convention
[08:14] ryanmcgrath: $this->load->view has, by my count, at least 3 more characters than it needs to
[08:14] Marak: if you need global variables, you should made them global on a module level, such as mymodule.config, then require('mymodule') in all your pages
[08:15] ryanmcgrath: this.load.view() > $this->load->view()
[08:15] Marak: node will resolve circular deps for you s0urce 
[08:15] s0urce: hm... so export is a global object and u add ur stuff to it, doenst look much bettter for me?!
[08:15] chjj: ryanmcgrath: i agree, its not an oop language, the oop aspect was added almost as an afterthought, very poorly implemented, clunky, etc
[08:15] [algo] has joined the channel
[08:15] jmoyers: its not a global object per se
[08:15] Marak: s0urce: global...to...the...scope....of...that....module
[08:15] Marak: not the node process
[08:15] ryanmcgrath: chjj: Yeah, don't get me wrong, I get you. I'm just ranting after a week of dealing with the shit. XD
[08:15] [algo]: hello! I updated npm, and now "npm install express" installs to current folder. How do I switch to "global install" mode ?
[08:15] ryanmcgrath: Feel free to ignore me.
[08:16] Marak: [algo]: npm install express -g
[08:16] Marak: -g being for global
[08:16] [algo]: thanks!
[08:16] s0urce: modul is in this kind = file i working in?
[08:16] chjj: ryanmcgrath: oh man, i totally understand, i cracked open the wordpress source once to take a peek, and it was just a maze of convoluted messy shit
[08:16] ryanmcgrath: Don't get me started on that shit.
[08:16] chjj: lol
[08:17] confoocious has joined the channel
[08:17] confoocious has joined the channel
[08:18] jmoyers: s0urce: yes, module is an object you have access to in a file. when you want to group together like code (as in a class or a group of related functions), you can put them in one file, and then define the public interfaces by saying module.exports = {some function or variable goes here}
[08:18] Marak: node.js require is almost nothing like php's
[08:18] chjj: s0urce: all it does is expose one object of your choice
[08:18] s0urce: really strange behaivor
[08:19] chjj: and it executes the code of course*
[08:19] jmoyers: for instance, inside of config.js, you might say: module.exports.path = '/some/path/here' -- and then in other parts of your program access it via: var config =  require('config'); config.path;
[08:19] [algo]: I have /usr/local/lib/node_modules/fibers now, but > require('fibers')
[08:19] [algo]: Error: Cannot find module 'fibers'
[08:19] [algo]: what's up?
[08:19] [algo]: why node doesn't go and find the module there ?
[08:19] [algo]: (all that after updating node & npm)
[08:20] s0urce: so its the same as: this.foo=function(){....} in a file and require this to var bar=require("foo.js"), but i dont have to call foo?
[08:20] Marak: s0urce: http://nodejs.org/docs/v0.4.2/api/modules.html#modules 
[08:20] Marak: s0urce: read that ^^^^
[08:20] jmoyers: yaaay, docs
[08:20] jmoyers: and also, no
[08:20] jmoyers: its not like that
[08:20] viz has joined the channel
[08:20] jmoyers: :-)
[08:20] chfo has joined the channel
[08:21] s0urce: ah, this is a nice doc, thx :)
[08:21] s0urce: most examples i found were much to large to see the point
[08:21] Marak: [algo]: you can fix that by uninstalling fibers and never installing it again
[08:22] jmoyers: haha
[08:22] [algo]: Morak: why so cruel 
[08:22] Marak: I AM MORAK KING OF THE UNDERGROUND MUTANTS 
[08:22] chjj: lol
[08:22] [algo]: > require('express')
[08:22] [algo]: Error: Cannot find module 'express'
[08:22] [algo]: same here
[08:22] s0urce: can i access "PI" in foo.js in this example?
[08:22] [algo]: something wrong with search path?
[08:22] SubStack: fibers will make you poop
[08:22] [algo]: SubStack: why ?
[08:22] Marak: [algo]: did you install globally?
[08:22] chjj: this ^
[08:22] [algo]: Morak: yes
[08:23] [algo]: ls /usr/local/lib/node_modules/express/
[08:23] [algo]: it's here
[08:23] Marak: hrmmm
[08:23] fly-away has joined the channel
[08:23] mauritslamers has left the channel
[08:23] chjj: that should work technically, isnt one of the default node paths /usr/local/lib/node
[08:24] Marak: [algo]: using npm v1.0.0 or greater?
[08:24] [algo]: yes
[08:24] [algo]: updated to node 0.4.7
[08:24] [algo]: npm git
[08:24] [algo]: :/
[08:24] Marak: [algo]: well i dont believe you installed express globally
[08:24] Marak: i just tried and it worked
[08:24] [algo]: I go install npm 1.0.6
[08:24] Marak: try again and read all the output
[08:24] Marak: sudo npm install express -g
[08:24] chjj: this is why i install everything by hand ;)
[08:25] [algo]: probably something went wrong
[08:25] [algo]: root@debian6:~# npm install express -g
[08:25] [algo]: express@2.2.2 /usr/local/lib/node_modules/express
[08:25] Marak: [algo]: its also possible npm is in a bad state on your machine, it can happen from some legacy versions and upgrading
[08:26] chapel: should be /usr/local/lig/node/node_modules
[08:26] [algo]: I think so
[08:26] jmoyers: isn't there a script that cleans that now?
[08:26] chapel: lib
[08:26] jmoyers: its part of the install script
[08:26] [algo]: upgrade went wrong
[08:26] [algo]: I said yes 
[08:26] [algo]: poor me
[08:26] [algo]: ;)
[08:26] [algo]: how do I reset all the stuff ?
[08:26] Marak: jmoyers: its possible to still get it borked, ive prob upgraded 20+ machines at this point , all various versions of node and npm
[08:27] Marak: all desktops
[08:27] jmoyers: i believe it
[08:27] jmoyers: its been a bit hairy going to 1.0
[08:27] Marak: [algo]: hrmmm, you can just start rm -rf
[08:27] [algo]: root@debian6:~# rm -rf /usr/local/lib/node*
[08:27] [algo]: did it
[08:27] Marak: errr
[08:28] jmoyers: hehehehe
[08:28] Marak: so maybe now you have to reinstall node if you did that
[08:28] Marak: im not sure
[08:28] samsonjs has joined the channel
[08:28] Marak: falling asleep
[08:28] [algo]: yes I will
[08:28] jmoyers: lowlz
[08:28] [algo]: should I clean maybe local vars?
[08:28] [algo]: from my profile?
[08:29] [algo]: npm@1.0.6 /usr/local/lib/node_modules/npm
[08:29] [algo]: it installs to node_modules!
[08:29] [algo]: not to /node/node_modules
[08:29] [algo]: maybe prefix...
[08:30] ReshadN has joined the channel
[08:30] ryanmcgrath: I do all my development in VMs for this reason
[08:30] [algo]: I'm in VM
[08:30] ryanmcgrath: Something breaks, fuck it, nuke the shit
[08:30] chjj: haha
[08:30] [algo]: yes
[08:30] [algo]: nuke NPM
[08:30] ReshadN: What would you recommend for starters with VMs?
[08:30] [algo]: shit
[08:31] chapel: well I had to purge a system, my regular system
[08:31] chapel: [algo]: check your bashrc
[08:31] ryanmcgrath: Just VMWare + any Ubuntu installation is fine (or Arch if you prefer to go a bit leaner)
[08:31] chapel: or whatever for your path
[08:31] chapel: your node path is probably borked
[08:31] [algo]: it's empty
[08:31] [algo]: yes
[08:31] [algo]: any vars I could check ?
[08:31] chapel: well
[08:31] chapel: I would reinstall node
[08:31] [algo]: I did
[08:32] chapel: well the recommended install is in a user dir now
[08:32] chapel: ~/lib/node
[08:32] chapel: or
[08:32] chapel: local/node
[08:32] chapel: bleh
[08:32] [algo]: local dir ?
[08:32] chapel: https://github.com/joyent/node/wiki/Installation
[08:32] [algo]: that's strange
[08:32] [algo]: all OS packages use global dir
[08:33] ReshadN: What about cloud9ide? Possible to run nodejs apps on web app c9.io?
[08:33] [algo]: global dir should be fine
[08:33] Marak: ReshadN: i believe you can. no.de and nodejitsu are being added to cloud9 soon for deployment
[08:33] chapel: [algo]: sure, but obviously something is messing up
[08:33] [algo]: where does NPM takes the path from
[08:34] chapel: for future reference, installing in a project dir (not globally) is probably best
[08:34] chapel: unless you are using a command line or utility
[08:34] narf_ has joined the channel
[08:34] [algo]: well I'll use a symlink
[08:34] ReshadN: Thanks @Marak
[08:34] [algo]: node/node_modules -> node_modules
[08:35] ReshadN: Thanks @ryanmcgrath
[08:35] ryanmcgrath: I didn't do shit, don't thank me.
[08:35] ryanmcgrath: :)
[08:35] ryanmcgrath: I've no clue if a smiley face made that less offensive, but whatever. Not meant to be a dick comment. >_>
[08:35] [algo]: root@debian6:/var/site/chat# ls /usr/local/lib/node/node_modules/express
[08:35] [algo]: it's here, but still can't find
[08:36] chjj: ryanmcgrath: calm down
[08:36] chjj: :)
[08:36] [algo]: a-ha!
[08:36] [algo]: strace is my friend
[08:36] ryanmcgrath: Are you coming on to me, chjj? o_O
[08:36] ryanmcgrath: No means no dude.
[08:36] [algo]: "/usr/local/lib/node/express/index.js"
[08:36] chjj: i hope not
[08:36] chjj: i was just trying to make my comment less offensive with that smiley
[08:37] chjj: sorry if it gave the wrong impression
[08:37] ryanmcgrath: Oh I see, so now I have a god complex.
[08:37] ryanmcgrath: I get it.
[08:37] ryanmcgrath: Thanks.
[08:37] ryanmcgrath: Really.
[08:37] chjj: huh?
[08:37] [algo]: by the way what's wrong with fibers ?
[08:37] [algo]: SubStack?
[08:37] ryanmcgrath: Yeah I dunno, just ignore me.
[08:37] chapel: what?
[08:38] ph^ has joined the channel
[08:38] chjj: v8: 'fibers are like this'.anchor('lol');
[08:38] v8bot: chjj: "<a name=\"lol\">fibers are like this</a>"
[08:38] chjj: ;p
[08:38] jmoyers: [algo]: there's a thread in the google group
[08:38] chjj: i have no problem with fibers, i just wouldnt use them myself
[08:39] [algo]: jmoyers: yes, quite a few
[08:39] jmoyers: well.. a particularly long one, on fibers
[08:39] [algo]: yes..
[08:39] jmoyers: most of the core group doesn't think it fits
[08:39] [algo]: into core?
[08:39] [algo]: yes
[08:40] [algo]: I saw that..
[08:40] jmoyers: it changes core assumptions about the behavior of callbacks.
[08:41] chjj: i think ryan added a kind of fibery/coroutine to node thing at one point, but it was removed shortly afterward, before my time
[08:41] chjj: thing to node*
[08:41] chapel: I just think its bad to try and make node/js work in a sync fashion because you don't like callbacks or whatever
[08:41] chapel: chjj: promises
[08:41] [algo]: sync is generally easier
[08:41] [algo]: easier than promises
[08:41] chjj: callbacks take getting used to, i love coding with them though, theres a good deal of elegance in it
[08:41] chapel: [algo]: but thats not the point
[08:42] [algo]: a sequence of non-blocking sync stuff is sweet
[08:42] ExsysTech has joined the channel
[08:42] chapel: it isn't about ease, even though once you get used to callbacks, they are simple
[08:42] jmoyers: yeah, this is a big circle.
[08:42] jmoyers: round and round and round and round
[08:42] chapel: that and knowing that everything works with callbacks, you can be secure in how your code will run, and other peoples code
[08:43] chjj: they are, but theyre definitely not what most are used to
[08:43] jmoyers: flow control libraries are nice: https://github.com/caolan/async
[08:43] robhawkes has joined the channel
[08:43] [algo]: callbacks are simple
[08:43] chapel: but that doesn't mean they are wrong
[08:43] [algo]: but sync is more convenient
[08:43] [algo]: it's quite obvious to anyone I suppose
[08:43] [algo]: =)
[08:43] chjj: chapel: i never said that
[08:43] chapel: go use php if you want convenient...
[08:43] jmoyers: heh
[08:43] [algo]: ah so you think php is more convenient
[08:43] chjj: chapel: in fact, i said i love coding with them, and that theyre very elegant
[08:43] [algo]: =)
[08:44] jmoyers: i dont think its about convenience -- its about being able to reason about how your code is going to work
[08:44] chapel: chjj: I wasn't questioning you, I agree with you
[08:44] chjj: the thing is, *everyone* learns how to code in a linear prodecural style when they first learn how to program
[08:44] chapel: jmoyers [algo] it is very easy to see how your code works with call backs, you just have to learn them, like any new technique
[08:44] pyrotechnick has joined the channel
[08:44] jmoyers: i. .  like callbacks
[08:44] chapel: I spent 2 months learning them, it took me a lot longer than I expected
[08:45] [algo]: callbacks are ok
[08:45] jmoyers: im suggesting flow control libraries make for some nifty patterns. async in particular
[08:45] [algo]: yeah they are good too
[08:45] [algo]: just the point is that sync is more convenient
[08:45] [algo]: shorter
[08:46] jmoyers: yes, and that has nothing to do with node
[08:46] chapel: jmoyers: yeah
[08:46] [algo]: and fibers want to fix that
[08:46] [algo]: problem of node
[08:46] chapel: also, you can have damn near sync style code using callbacks
[08:46] chapel: its not a problem [algo]
[08:47] [algo]: should I say "possibility" ?
[08:47] jmoyers: its.. not
[08:47] jmoyers: it will be a far and away fork
[08:47] [algo]: actually Fibers are good in Ruby
[08:47] jmoyers: the core folks have said time and again
[08:47] [algo]: but node doesn't let to extend itself
[08:47] [algo]: so the fork was made
[08:47] chapel: its one thing to have it be a module
[08:47] chjj: if you write your code and it absolutely depends on fibers, it makes your code a lot less reusable in the node community
[08:48] chapel: chjj: yep
[08:48] [algo]: chjj: sure
[08:48] [algo]: ;)
[08:48] chapel: I wouldn't use anyones code that used fibers
[08:48] chjj: and it also has one dependency for which there are no alternatives
[08:48] chjj: so if fibers stops being maintained, say goodbye to your code
[08:48] chapel: idk, I just think that people are trying to bring in their own comforts to node
[08:49] chapel: but node is the way it is, because ryah and those that contribute want it to be as small and lean as possible
[08:49] Lorentz has joined the channel
[08:51] s1985 has joined the channel
[08:51] chapel: anyways, any word on videos of nodeconf talks?
[08:51] chjj: im really not a dependencies guy though, i try to write everything i need, and only what i need
[08:51] mscdex: NIH
[08:52] matjas has joined the channel
[08:52] s1985: same ch
[08:52] s1985: we're a rare breed, haha!
[08:52] chjj: ah, a fellow no-deps guy!
[08:53] mscdex: chapel: http://groups.google.com/group/nodejs/msg/3b782491ed73a78b
[08:53] s1985: i take it ur not a huge fan of java? lol
[08:53] chjj: i learned java once
[08:53] chjj: and then i forgot it
[08:53] chjj: the end
[08:53] s1985: yup same lol
[08:54] s1985: java developers en mass are pretty clueless
[08:54] chapel: thanks mscdex
[08:54] jmoyers: thats pretty naive
[08:54] s1985: all they know is how to patch frameworks together, no clue how to create something from scratch (usually)
[08:54] chjj: sometimes i feel like im too much of a minimalist though, im coding a blog right now and im using flat files for everything because i just cant justify using a database
[08:54] jmoyers: also no-deps is fun for small projects or things where time doesn't matter
[08:54] jmoyers: but not when you have to write code for the monies
[08:54] s1985: ifve worked with lots of java developers, i don't think so.
[08:55] jmoyers: i dont know man
[08:55] [algo]: node.js becomes like java
[08:55] [algo]: so many deps
[08:55] jmoyers: toolset is toolset
[08:55] s1985: even for the moneys dependencies ulimately make ur life harder
[08:55] jmoyers: people are people
[08:55] [algo]: my large java project has same deps as small node project
[08:55] [algo]: same number of deps
[08:55] s1985: algo, i didnt say all java developers :)
[08:55] matjas has joined the channel
[08:56] [algo]: I mean node project has lots of deps
[08:56] [algo]: :/
[08:56] s1985: i know algo
[08:56] chapel: the nice thing about node, is how easy it is to do the lowest level stuff
[08:56] [algo]: I'd think it's good
[08:56] [algo]: =)
[08:56] [algo]: btw that https://github.com/caolan/async
[08:56] coreb: yeah, a lot of java people have the framework fever, but so do node.js people
[08:56] [algo]: is nice
[08:56] s1985: thats why its super important to keep dependencies to a minimum in node, otherwise ur welcoming a lot of pain for the future!
[08:56] jmoyers: yes indeed it is
[08:56] [algo]: and Fibers seg fault
[08:56] [algo]: after update
[08:56] [algo]: =(
[08:56] chjj: coreb: i kind of keep my own little private framework
[08:57] s1985: time will tell what the general mindset of node developers will be
[08:57] chjj: i like having total control over it
[08:57] s1985: i hope its nothing like java
[08:57] coreb: nothing wrong with using a few solid frameworks
[08:57] s1985: if u know mvc, ur basically writing ur own framework anyways
[08:57] chapel: I have no problem using other peoples code, but I will read it, and try to understand it before I fully adopt it
[08:57] s1985: i dont see many java projects with mvc
[08:57] jmoyers: coreb++ - reinventing the wheel is a waste of time
[08:57] [algo]: btw anyone uses Forever ?
[08:57] s1985: indeed chapel
[08:58] s1985: if their stuff is good, sure
[08:58] s1985: but more often then not its never up to my standards
[08:58] chapel: most node stuff is open sourced too, so it is really easy to expand or fix if there is a problem, even if abandoned
[08:58] coreb: inexperienced developers tend to reinvent the wheel a lot, for learning that's great, for work that's idiotic
[08:59] chjj: chapel: thats true, but at that point i would just start writing my own stuff anyway
[08:59] s1985: im avoiding libraries without a huge following
[08:59] chjj: chapel: no point in hacking together some dead code back to life
[08:59] jmoyers: there are plenty of mvc frameworks in java
[08:59] jmoyers: grails, for one
[08:59] coreb: java has far too many frameworks that do the same
[08:59] s1985: i know
[09:00] s1985: but they are all fairly underused
[09:00] s1985: compared to all the java projects out there
[09:00] s1985: which revolve around the use of struts, ugghhh!
[09:00] jmoyers: crufty
[09:00] chapel: chjj: Im talking about something that you use already that happened to be abandoned
[09:00] chapel: but whatever
[09:01] levi501d has joined the channel
[09:01] s1985: still no point chapel
[09:01] chjj: chapel: im saying, if i used that, and it were abandoned, i would stop using it and write my own code
[09:01] s1985: gotta keep up to date otherwise ot becomes harder and harder to migrate later
[09:01] stagas: multiplayer gaming in 50 loc https://github.com/stagas/maga/blob/master/examples/circles.html node f*king rules!
[09:01] chjj: i wouldnt want to maintain old code that isnt my own
[09:02] chapel: s1985 chjj you know what I mean, but whatever, I was saying you could, and some people might
[09:02] s1985: i know :)
[09:03] chapel: not that you should, or have to
[09:03] s1985: indeed
[09:04] s1985: i understand the reasoning behind it
[09:04] m0hit has joined the channel
[09:04] s1985: sadly, lots of dev companies only think short term
[09:04] s1985: so more often then not, they would do that as opposed to the smarter safer method
[09:04] jmoyers: writing everything yourself
[09:04] s1985: no
[09:04] jmoyers: is straight up prohibitively expensive though
[09:04] mraleph has joined the channel
[09:05] s1985: depends what your writing
[09:05] s1985: i don't believe you should go out and write your own database drivers
[09:05] s1985: or anything crazy like that
[09:05] jmoyers: or web frameworks
[09:05] chjj: you could though ;)
[09:05] jmoyers: or templating
[09:05] s1985: web frameworks and templating, sure
[09:05] chjj: whoa
[09:05] chjj: slow down there
[09:05] s1985: if u only want one or 2 things out of them
[09:05] s1985: why would you use the whole framework
[09:05] chjj: frameworks and templating i would definitely code myself, and i do
[09:05] s1985: it only makes sense if it makes sense
[09:05] jmoyers: heh
[09:05] jmoyers: i'll point you to slide from nodeconf
[09:06] jmoyers: from cast talk
[09:06] s1985: i use express.. because it makes sense to
[09:06] s1985: but say i only used the routing out of express
[09:06] s1985: why would i use express unless im being lazy?
[09:06] jmoyers: "Express. We didn’t use it. HTTP Servers are easy.... We rewrote half its features, badly. We are porting to it now"
[09:06] jmoyers: ^^
[09:06] chjj: db drivers, no, i wouldnt want to write my own version of mongodb-native, or node-mysql, etc that would be tedious
[09:06] s1985: i agree, so whats your point?
[09:07] jmoyers: "why would i use express unless im being lazy?" is the exact opposite of my point
[09:07] chjj: jmoyers: im failing to see your point either
[09:07] jmoyers: if there's a functional piece of software that does what you need, released under MIT, use it, fork it, contribute
[09:07] s1985: you just got rid of half of what i said and summarized it as though thats what i said...
[09:07] jmoyers: thats because you both are smoking the NDH weed
[09:07] s1985: i use plenty of features out of express, it makes complete sense to use it
[09:07] s1985: would i use it if i was just maintaining a static file server?
[09:07] s1985: nope.
[09:08] jmoyers: i.. fail to see why
[09:08] jmoyers: its something like 8 lines of code
[09:08] jmoyers: and if it ever moves away from a static file server, you aren't screwed
[09:08] jmoyers: but thats a contrived example
[09:08] chjj: screwed?
[09:08] s1985: ever heard of kiss?
[09:08] chjj: how?
[09:08] jmoyers: i've seen plenty of people do some whacky shit in the name of 'oh that doesn't fit my needs exactly'
[09:09] s1985: why would i depend on a huge web app framework if what i am building is not even a web app?
[09:09] jmoyers: you wouldn't
[09:09] s1985: sure, so have i jmoyers
[09:09] s1985: it doesn't mean its always the wrong decision to make
[09:09] jmoyers: thats a contrived example
[09:09] Melkor__ has joined the channel
[09:09] s1985: your argument is contrived
[09:09] s1985: completely shortsighted
[09:09] jmoyers: man, i dont know
[09:10] s1985: your thinking big
[09:10] s1985: some projects just arent that big.
[09:10] jmoyers: i've seen framework after terrible framework spawn out of that attitude
[09:10] s1985: sure, so have i jmoyers
[09:10] s1985: it doesn't mean it is always the wrong decision
[09:10] jmoyers: well no kidding
[09:10] s1985: just because developers in mass don't truly know what they are doing
[09:10] jmoyers: you need to write code
[09:10] jmoyers: but i heard 'no dependencies' and it just sounds like hogwash
[09:11] jmoyers: if you aren't taking a hard line
[09:11] jmoyers: we are violently agreeing ;-)
[09:11] s1985: i never said no dependencies
[09:11] s1985: my approach is smart selection of dependencies
[09:11] s1985: and keeping everything to a minimum
[09:11] jmoyers: well that sounds just dandy
[09:11] s1985: no violence from me :P
[09:11] s1985: i am just trying to determine if you are thinking on the same level as me or not ;)
[09:11] chjj: jmoyers: no dependencies was slightly hyperbole
[09:12] dennis_ has joined the channel
[09:12] chjj: i would say im a minimal dependencies guy
[09:12] chjj: and an all-around minimalist
[09:12] s1985: seems like your just debating for the sake of it, i'm cool with that,
[09:12] chjj: if i feel like something is going to add bloat to a project, i keep miles away from it
[09:12] jmoyers: not for the sake of it i guess
[09:12] jmoyers: gut reaction
[09:12] jmoyers: i agree about bloat
[09:12] jmoyers: bloat is poop
[09:12] s1985: yup.
[09:13] s1985: if you didn't care about bloat, its not hard to use a 10+ dependencies to build a web app
[09:13] s1985: but with a bit of smarts, you can keep it under half that
[09:13] m0hit has joined the channel
[09:14] jmoyers: 10 is reasonable for a typical app imo, but we're talking constants here ;-)
[09:14] jmoyers: the libraries are pretty small in node land
[09:14] jmoyers: which i like
[09:14] chjj: it might not be so much that im a minimal dependencies guy either, its also that i feel guilty for having someone else's code provide abstraction for me
[09:14] jmoyers: like, library to build me a uuid ;-) i'd hardly call that a library, its one function
[09:15] jmoyers: but thats actually perfect -- fit to purpose
[09:15] chjj: i kind of take it to the extreme, ive written my own framework, my own in-process db, my own templating engine, etc
[09:15] herbySk has joined the channel
[09:15] jmoyers: chjj: i think everyone has
[09:15] jmoyers: shit i know i have
[09:15] jmoyers: i think my frameworks are shit though, 5 years later
[09:15] chjj: interesting
[09:15] s1985: i don't jmoyer :P
[09:15] chjj: i like having a framework i have control over
[09:16] tlrobinson has joined the channel
[09:16] s1985: but i feel that with node I will be able to better myself by multiple levels
[09:16] s1985: i don't blame you for that ch
[09:16] s1985: but writing your own db?
[09:16] s1985: thats a bit crazy if you gotta worry about scaling
[09:16] chjj: yeah, im nuts
[09:16] mdoan has joined the channel
[09:16] chjj: well its not for projects i expect to scale
[09:16] chjj: for smaller things
[09:17] s1985: thats fine then
[09:17] s1985: a web framework should scale though
[09:17] s1985: unless ur confident your website will never be popular :P
[09:17] mhausenblas has joined the channel
[09:17] thalll has joined the channel
[09:18] chjj: my little db is just a db, its not coupled with my personal framework
[09:18] kbni has left the channel
[09:18] chjj: i havent even used it actually, i just wrote it in case lol
[09:19] mhausenblas_ has joined the channel
[09:19] chjj: i originally wrote it for this weblog, but since ive been using the filesystem
[09:19] ph^ has joined the channel
[09:19] chjj: wrote all the low level stuff for managing files and then built the models on top of that
[09:20] chjj: but like you said, not all projects are the same, not all projects will need millions of records in a database
[09:21] chfo has joined the channel
[09:21] s1985: file systems don't scale all that well though :)
[09:21] s1985: hehe
[09:21] s1985: indeed
[09:21] s1985: i haven't done any small projects for some time
[09:21] chjj: file systems are underrated
[09:21] s1985: so i'm abit oblivious to building small stuff these days
[09:21] s1985: but thats where i started
[09:23] chjj: if i wanted to use a db for something small, i would use sqlite
[09:23] hellp has joined the channel
[09:24] chjj: the node sqlite bindings seem to be stabalizing now too
[09:24] chjj: sqlite is also underrated ;)
[09:24] chjj: but i guess its just my unfortunate minimalist nature talking
[09:24] chapel: ACTION isn't a big fan of sql
[09:25] chapel: I mean it can be useful
[09:25] jesusabdullah: sqlite is an awesome project though
[09:25] jesusabdullah: Lightweight, rock-solid
[09:25] chapel: idk, I am more of a fan of couchdb's embedded work
[09:25] chjj: yeah, something like sqlite definitely needed to be created
[09:25] s1985: im using mongodb at the moment
[09:26] s1985: i'd use redis
[09:26] chapel: I think couchdb could be put in place of sqlite in applications at least
[09:26] s1985: but node-redis is not up to scratch yet
[09:26] chapel: like desktop apps
[09:26] jesusabdullah: Yeah, potentially
[09:26] s1985: couchdb and sqlite aren't that great
[09:26] s1985: they are alright
[09:26] s1985: but theres better stuff out there
[09:26] chapel: s1985: like what?
[09:26] jesusabdullah: sqlite is nice because it's small and robust
[09:26] jmoyers: ^^
[09:26] jesusabdullah: not because it has ALL the bells and whistles, or because it's WEB SCALE
[09:26] chjj: yeah, sqlite is built like a small brick house
[09:26] jesusabdullah: (I somehow doubt sqlite is web scale)
[09:27] chjj: web scale, need more web scale, need my fix
[09:27] jesusabdullah: lol, yeah
[09:27] chjj: yeah, it doesnt have all the buzz words, but it works
[09:28] jmoyers: its nice for prototypes that fits into the relational model
[09:28] jmoyers: mongo is nice too
[09:28] jmoyers: the problem is, if it crashes
[09:28] jesusabdullah: couch has kind of a cool model
[09:28] jmoyers: shit goes wild
[09:28] jesusabdullah: I think
[09:28] chjj: i would never use sqlite for prototyping
[09:28] jmoyers: table repairs, lost data, etc
[09:28] chjj: what an odd thing to do
[09:28] jmoyers: why on earth not?
[09:28] chjj: sqlite isnt very malleable
[09:28] jesusabdullah: *sigh* peace homies :)
[09:29] chapel: thats why you use couchdb
[09:29] chapel: because it is stable
[09:29] chjj: jesusabdullah: seeya
[09:30] chjj: i do find couchdb to be rather elegant, mongodb actually turns me off with its nasty query language
[09:31] jmoyers: its just json with some keywords.
[09:31] jmoyers: its not so bad
[09:31] pmolleda has joined the channel
[09:31] s1985: redis, couchdb, tokyo
[09:31] s1985: all better then couchdb and sqlite :P
[09:31] chjj: it seems very akward and not well thought out
[09:31] chapel: s1985: couchdb is better than couchdb?
[09:31] chapel: I agree
[09:31] s1985: ch, there are some areas where i agree with you ch
[09:32] chjj: theres only so much logic you can put into an object lieral
[09:32] s1985: oops chapel haha
[09:32] chjj: literal*
[09:32] s1985: if they changed their $ne
[09:32] s1985: for !=
[09:32] chjj: before it gets weird
[09:32] s1985: when passing through ajax objects
[09:32] s1985: i'd be happier
[09:32] s1985: lol
[09:32] dennis_ has left the channel
[09:32] s1985: ive written my own database wrapper
[09:32] chjj: i like the concept of couchdb "views"
[09:32] s1985: which i will probably release to the community at some point
[09:32] s1985: i like to abstract away that sort of stuff
[09:33] chjj: yeah, s1985, i end up abstracting away all the nasty looking db stuff anyway i guess
[09:33] Emil has joined the channel
[09:33] chjj: and build the models on top of it
[09:33] chjj: so i dont have to look at it in my real code, i just leave it in a dark corner
[09:34] s1985: yep
[09:34] chjj: giant ass mongo query will always hurt my eyes
[09:34] s1985: mongodb has gridfs
[09:34] s1985: that was the main reason i chose mongodb
[09:34] s1985: but as ive gotten deeper and deeper into it, i can see that it represents a clean break in the typical nosql mentality
[09:34] s1985: a breath of much needed fresh air
[09:35] s1985: i look forward to the future of mongodb
[09:35] chjj: how so?
[09:35] s1985: not so much for couchdb, its stagnated a bit
[09:35] s1985: gridfs is a good example
[09:35] s1985: and their plans for scaling
[09:35] s1985: are enticing
[09:35] s1985: but not built yet sadly
[09:35] chjj: MORE WEB SCALE
[09:35] s1985: so well have to see
[09:35] chjj: ACTION needs more web scale
[09:35] s1985: but they are thinking on a much pure level
[09:35] chjj: :)
[09:35] s1985: then others are
[09:36] s1985: fuck web buzz words :) haha
[09:36] markwubben has joined the channel
[09:36] chapel: idk, mongodb isn't terrible
[09:36] ardcore has joined the channel
[09:37] chjj: never said it was
[09:37] chapel: but it doesn't feel new, it feels like mysql
[09:37] s1985: couchdb is a proven technology
[09:37] ardcore has left the channel
[09:37] chjj: i just said the queries were offensive to my eyes
[09:37] s1985: but its been proven in a way with lots of stuff i don't like about it
[09:37] teemow has joined the channel
[09:37] chapel: couchdb is stable, secure, and being improved on
[09:37] s1985: mongodb = not so proven
[09:37] s1985: node js needs a mysql like the php/mysql love hate relationship
[09:37] chapel: also I love map/reduce, and like how couchdb handles it
[09:37] s1985: i don't think couchdb is the correct candidate
[09:37] chjj: lol
[09:37] s1985: redis or mongodb are, lol
[09:38] chapel: no
[09:38] chjj: well if mongodb became the mysql of node, that means i probably wouldnt use it
[09:38] s1985: i realy like redis
[09:38] chapel: node doesn't need that
[09:38] s1985: but the node redis driver really sucks donkey shit
[09:38] s1985: for the popularity game it does chapel
[09:38] s1985: node needs the popularity game for it to have any real future
[09:38] febits has joined the channel
[09:38] s1985: as a framework
[09:38] chapel: lol
[09:39] chapel: any real future?
[09:39] chapel: framework?
[09:39] chapel: what are you smoking?
[09:39] chapel: node isn't a framework
[09:39] s1985: sure, its not a language now is it?
[09:39] chjj: yeah, what you talkin bout s1985
[09:39] chapel: it is closer to a vm
[09:39] chjj: its a platform i would say
[09:39] chapel: or platform
[09:39] s1985: sure
[09:39] s1985: i have no problem with labelling it as that
[09:39] chapel: its an abstraction of v8
[09:39] s1985: but it is a web server framework
[09:39] chapel: but it isn't a framework
[09:39] s1985: just like cherrypy for python
[09:39] chapel: no it isn't
[09:40] chapel: rails is a framework
[09:40] s1985: different communities, different terminologies
[09:40] chjj: its just IO capabilities injected into v8
[09:40] chapel: django is a framework
[09:40] s1985: cherrypy is a framework too.
[09:41] s1985: and cherrypy only does about as much as node does
[09:41] s1985: in a non async matter of course
[09:41] chjj: stop with the framework and the web scale, my heads going to explode
[09:41] chapel: node is a platform that allows js to work with io and on the server
[09:41] s1985: lol framework can mean a lot of things
[09:41] s1985: so can platform
[09:41] s1985: neither answer is wrong
[09:41] chjj: ACTION needs more web scale
[09:41] chapel: when it comes to web stuff, frameworks means rails/django
[09:41] chapel: and node isn't a framework
[09:41] s1985: no it doesnt chapel
[09:41] s1985: it means lots of things
[09:41] s1985: is struts not a framework? cherrypy? what about jquery?
[09:41] chjj: ok, lets talk about what we were talking about before we got into a meaningless semantics argument
[09:41] s1985: your comparing apples to oranges
[09:41] chapel: too many people come in here asking about frameworks, they compare node to rails or whatever
[09:41] s1985: they are all frameworks, just all different sorts of frameworks
[09:42] chapel: node is like ruby like python
[09:42] s1985: not really
[09:42] s1985: all totally different lol.
[09:42] chjj: i hope not
[09:42] chapel: well
[09:42] chapel: I mean in concept
[09:42] s1985: what does node have in common with ruby
[09:42] s1985: what does ruby have in common with python?
[09:42] s1985: very little
[09:42] s1985: :)
[09:42] chjj: ruby is a language, node is not a language
[09:43] chapel: I am talking about how they are used on a server/system
[09:43] chapel: ruby by itself is not usable on a system
[09:43] chapel: it has to be installed
[09:43] chapel: node is what makes javascript usable on the server
[09:43] McMAGIC--Copy has joined the channel
[09:43] chjj: right, like i said its IO capabilities injected into v8
[09:44] chjj: i dont think it needs to be defined anymore than that
[09:44] s1985: comeone guys, this is silly
[09:44] s1985: arguing over terminology
[09:44] chapel: that is my point though, node is javascript io
[09:44] Rob- has joined the channel
[09:44] chjj: yeah lets go back to what we were talking about before we got into this semantics debate
[09:44] chjj: if we can even remember
[09:44] chjj: ...
[09:44] s1985: so would it be a framework for allowing async javascript io operations?
[09:44] chapel: s1985: you say node needs a database to make it popular, or something like php/mysql, I say no
[09:45] s1985: chapel, define popular
[09:45] chjj: ok, there good, back on track
[09:45] s1985: by popular i mean, standing next to python/java and php for the web
[09:45] s1985: and heck, even ruby
[09:45] chapel: you brought up popularity
[09:45] chjj: next to them? more like above them
[09:45] s1985: ideally ch :P
[09:45] chapel: javascript is more popular than any of them
[09:45] mnbvasd: ACTION giggles
[09:45] s1985: but that will take quite some time me thinks
[09:45] chapel: just because almost every website has javascript
[09:45] mnbvasd: who cares about popularity? surely we care about quality?
[09:46] s1985: sure chapel, how many people have mastered javascript compared to php/python? lol
[09:46] chapel: mnbvasd: I am with you there
[09:46] chjj: exactly, thats probably the most appealing part to most people who might not even know anything about node
[09:46] chjj: javascript
[09:46] chapel: s1985: how many people have mastered php?
[09:46] chapel: haha
[09:46] s1985: lots
[09:46] s1985: but thats setting the bar pretty low
[09:46] mnbvasd: look at ruby, very popular, but very slow.
[09:46] chjj: i dont think php is a masterable language, that language just hates itself
[09:46] chapel: compared to the amount that use it?
[09:46] s1985: i want node to retain its quality
[09:46] s1985: but be available to the masses
[09:47] s1985: large adoptions in corporations
[09:47] s1985: lots of jobs :)
[09:47] chapel: it is available to the masses :P
[09:47] s1985: i'd love that
[09:47] s1985: not really
[09:47] mnbvasd: chapel: yes, and php, great example.
[09:47] s1985: the masses would never risk a production site on node
[09:47] chapel: but I agree, I want it to be huge, I believe it will be
[09:47] s1985: only crazy people like us
[09:47] s1985: its not v1 yet
[09:47] chjj: yeah, those people need to learn to take a risk
[09:47] s1985: that means alot in the enterprise world
[09:47] chapel: s1985: they said the same thing about ruby
[09:47] s1985: sure chapel
[09:47] s1985: i believe node has what it takes to succeed
[09:47] chapel: and probably java at one time
[09:48] s1985: but i want it to succeed
[09:48] s1985: i don't want it to be just used by us geeks for ever
[09:48] s1985: i want it to blow the world away
[09:48] mnbvasd: node isn't suitable for the vast majority of production stuff as it's too volatile atm... just wait for it to be more feature complete and stable.
[09:48] s1985: change the field for the better
[09:48] chapel: s1985: again I agree
[09:48] seivan has joined the channel
[09:48] s1985: i am mn.
[09:48] Emilsu has joined the channel
[09:48] chapel: but node is different, it does't need a mysql to succeed
[09:48] s1985: well no, i cant wait
[09:48] s1985: im going ahead with it anyway
[09:48] s1985: but yeah. lol
[09:48] s1985: its not like i can make a career out of node.js development yet
[09:48] chapel: you could
[09:49] s1985: chapel, 
[09:49] chapel: if you tried
[09:49] chapel: :)
[09:49] s1985: every web language has a mysql
[09:49] chapel: it would be hard going
[09:49] chapel: every web language has mysql
[09:49] chapel: :P
[09:49] chjj: lol
[09:49] Ian_Corne has joined the channel
[09:49] s1985: i mean framework
[09:49] s1985: i mean platform :P
[09:49] chapel: node isn't a framework
[09:49] chapel: :P
[09:49] chjj: STOP
[09:49] s1985: think about it... .net has mssql
[09:49] chjj: STOP
[09:49] chapel: fuck .net
[09:49] s1985: java has oracle
[09:49] s1985: or mysq
[09:49] chapel: even ms doesn't use .net
[09:49] chjj: do people actually use .net?
[09:50] s1985: php has mysql
[09:50] Emilsu: Guys. Is it possible to install packages without npm? Are there any general instrux for this in a wiki somewhere?
[09:50] chapel: ruby has mysql
[09:50] s1985: sure
[09:50] chapel: Emilsu: git clone url
[09:50] chjj: emilsu, yes, you have to download the repo
[09:50] s1985: it doesnt matter if multiple things use the same databases
[09:50] chjj: git clone whatever
[09:50] s1985: but there needs to be a good standard node.js stack
[09:50] s1985: a good combination of tools
[09:50] s1985: that noobies can install and tinker with
[09:50] Emilsu: Yes thx. But then? Sorry don't want you answer RTFM questions. Just wondering where to read more about it
[09:50] chapel: just install it in node_modules in your project dir, or wherever node is installed
[09:50] s1985: and get a grasp on
[09:51] jmoyers: Emilsu: you can require('') from anywhere --
[09:51] chjj: emilsu: https://github.com/joyent/node/wiki/modules - lots of modules there, you can just git clone them, and dump them in a node_modules directory
[09:51] chapel: s1985: that is different, so you say node needs a framework stack?
[09:51] s1985: it will happen, it will just take time
[09:51] Emilsu: great. Thx :(
[09:51] Emilsu: :)
[09:51] s1985: i didnt say framework stack
[09:51] s1985: but sure, label it what u want
[09:51] xeodox: In Node.js, if I pipe stuff to a log, what happens when the log goes too big?
[09:51] chapel: but thats what you mean
[09:51] chjj: well, eventually node.js is going to fully support windows
[09:51] s1985: not really
[09:51] chapel: xeodox: define too big
[09:52] chjj: so have to keep that in mind
[09:52] s1985: more like a stack of integrated applications
[09:52] s1985: to run a full website
[09:52] chapel: but that exists, express/connect with a db is pretty much all you need out of the box
[09:52] jmoyers: that toolchain already exists
[09:52] chapel: if you want plug and play
[09:52] xeodox: chapel: Well, if I do node app.js &> log.out .....and everything goes into it
[09:52] s1985: i know it exists
[09:52] s1985: but its not stable
[09:52] xeodox: wouldn't it be humongous?
[09:52] s1985: its subject to change
[09:52] xeodox: At least apache cycles the logs by adding 1, 2, 3
[09:53] xeodox: how can I do that?
[09:53] s1985: how many blogs are out there telling you how to set up a LAMP stack? shitloads
[09:53] s1985: node? not many.
[09:53] chapel: xeodox: you would have to handle it somewhere else
[09:53] chjj: lets change that! ;p
[09:53] s1985: in due time ch :)
[09:53] chapel: xeodox: check out winston for logging
[09:53] chapel: `v git winston @ xeodox
[09:53] v8bot: xeodox: indexzero/winston - GitHub - https://github.com/indexzero/winston
[09:53] s1985: i think we will all be having lots of stuff going for us
[09:54] s1985: by being early adopters of the future web stack
[09:54] s1985: just like all the early php developers were
[09:54] chjj: v8: 'oh?'.blink();
[09:54] v8bot: chjj: "<blink>oh?</blink>"
[09:54] chapel: you seem to be having fun chjj with that
[09:54] chjj: im totally using that stuff in my projects now
[09:54] chjj: ill use .small() and .sup()
[09:54] chapel: I didn't know they existed
[09:54] chapel: v8: 'hmm'.sup()
[09:54] v8bot: chapel: "<sup>hmm</sup>"
[09:55] s1985: lol
[09:55] chapel: 'blah'.foo()
[09:55] chjj: its so fun because it so wrong for it to be in the language
[09:55] chapel: v8: 'blah'.foo()
[09:55] v8bot: chapel: TypeError: Object blah has no method 'foo'
[09:55] chjj: so dirty
[09:55] xeodox: chapel: Thanks. But how do I use that logger for Express? I want everything Express logs to go to winston
[09:55] chapel: well I don't know if its built in
[09:56] chapel: but you could easily just take the express logger config, and write a function to send it to winston
[09:56] chjj: more than anything right now though, im worried about the future of JS
[09:56] chapel: worried?
[09:56] chjj: i dont trust ecma
[09:56] chjj: i dont want them adding tons of useless shit
[09:56] s1985: i think the future is bright for javascript
[09:56] s1985: they won't
[09:57] s1985: they work at a snails pace
[09:57] chjj: they better not
[09:57] s1985: it will be 20 years before there is a built in method for getting the length of a json object
[09:57] s1985: don't worry.
[09:57] s1985: lmao
[09:57] chjj: because they take into account the browser more than the server, presumably, but who are their changes going to affect first? us serverside guys
[09:57] s1985: what changes do you speak of? ol
[09:58] chjj: the stuff mozilla is coming up with, always puts it well on its way to being specced, albeit in a different form
[09:58] chfo has joined the channel
[09:58] s1985: i'd be far more worried working with php/java or python at this point
[09:58] s1985: specs change on the fly with them
[09:58] s1985: in javascript its always progressive
[09:58] s1985: i like that
[09:58] jbpros has joined the channel
[09:59] chjj: i dunno, im just curious to see what ES Harmony will look like
[09:59] s1985: yeah, me too
[09:59] chjj: number one fear is that they add stuff that affects v8's performance
[09:59] s1985: but before its adopted in mass
[09:59] s1985: it will be many many years
[10:00] s1985: before it impacts us
[10:00] s1985: the whole python 2 vs 3 debacle could be a potential outcome
[10:00] s1985: but it hasn't happened yet
[10:01] s1985: python is 3 years deep in dog shit because of it
[10:01] Emmanuel__ has joined the channel
[10:04] chjj: v8: 'who needs a templating language when you have this'.fontcolor('red');
[10:04] v8bot: chjj: "<font color=\"red\">who needs a templating language when you have this</font>"
[10:04] chjj: oh man, you can to a/@href too
[10:04] chjj: v8: 'link'.link('#');
[10:04] s1985: i guess my irc client doesnt support any of this...
[10:04] v8bot: chjj: "<a href=\"#\">link</a>"
[10:05] chapel: chjj: well you could make a templating language by extending String.prototype
[10:05] chjj: but why would i need to?!
[10:05] chjj: i already have everything
[10:05] chapel: lol
[10:05] chjj: v8: 'see?'.blink()
[10:05] v8bot: chjj: "<blink>see?</blink>"
[10:06] s1985: ive spent enough time here :)
[10:06] chjj: see this is something useless in the language that im ok with having, because its so novel
[10:06] s1985: time to go code in node :P
[10:06] AAA_awright: That's not a templating language
[10:06] AAA_awright: And please don't
[10:06] chjj: yes it is
[10:06] chjj: !
[10:06] chapel: could have it be 'This is a cool link'.link('#').id('link').style('color:red;')
[10:06] AAA_awright: A templating language uses these things called templates
[10:06] s1985: you guys make me sick, lol
[10:06] s1985: a template language? uggh yuck lol
[10:06] chapel: haha
[10:07] chjj: AAA_awright: how can you deny the power of .blink()?
[10:07] chjj: v8: 'blink'.blink()
[10:07] v8bot: chjj: "<blink>blink</blink>"
[10:07] chjj: see?
[10:07] mnbvasd: ACTION sends chjj back to the last millenium.
[10:07] chjj: lol
[10:07] AAA_awright: chapel: That makes no sense, too. Function chaining is evil, if you say "string".op().next() that's ("string".op()).next()... What is next() operating on, exactly?
[10:08] AAA_awright: The return value of op(), that makes no sense
[10:08] chjj: rofl
[10:09] AAA_awright: Then you have to get perverted and do things like .push() and .pop() to specify which depth the next method will operate on
[10:09] AAA_awright: No, just
[10:09] AAA_awright: no
[10:09] chjj: v8: 'you cant'.big() + ' deny'.small() + ' the power'.sup();
[10:09] v8bot: chjj: "<big>you cant</big><small> deny</small><sup> the power</sup>"
[10:10] chjj: power shoulve blinked
[10:10] chapel: AAA_awright: it was a joke
[10:10] AAA_awright: My rail against method chaining is 100% serious though
[10:11] AAA_awright: EVIL
[10:11] jmoyers: in general?
[10:11] jmoyers: fluent interfaces are sweet man.
[10:11] chjj: v8: 'whos joking? im 1000% serious, this is the templating language of the future'.fontcolor('red');
[10:11] v8bot: chjj: "<font color=\"red\">whos joking? im 1000% serious, this is the templating language of the future</font>"
[10:11] jmoyers: like.. all of jquery?
[10:11] chapel: v8: ('test'.big() + 'food'.small()).sup()
[10:11] v8bot: chapel: "<sup><big>test</big><small>food</small></sup>"
[10:11] Xano has joined the channel
[10:11] chjj: ah man, its one thing to have these functions in the browser, but its even more ridiculous to have them on the server side
[10:11] chjj: i love it
[10:12] cachemoney has joined the channel
[10:12] chapel: 'test'.big().small()
[10:12] chapel: v8: 'test'.big().small()
[10:12] v8bot: chapel: "<small><big>test</big></small>"
[10:12] chapel: :)
[10:12] chapel: haha
[10:13] chjj: v8: 'how can you resist the chaining?'.big().small().sup().anchor('chain').link('#').fontcolor('red').strike();
[10:13] v8bot: chjj: "<strike><font color=\"red\"><a href=\"#\"><a name=\"chain\"><sup><small><big>how can you resist the chaining?</big></small></sup></a></a></font></strike>"
[10:13] AAA_awright: jmoyers: The HTML methods that V8 defines are fine, that's not chaining
[10:13] chapel: v8: 'AAA_awright is just jealous'.small().big().sup().blink()
[10:13] v8bot: chapel: "<blink><sup><big><small>AAA_awright is just jealous</small></big></sup></blink>"
[10:13] AAA_awright: It just returns a new string
[10:13] AAA_awright: That's exactly how you're supposed to do it
[10:13] chjj: lol
[10:13] AAA_awright: But if you want to do stuff like "Contents".createSpan().id("spanID")
[10:13] AAA_awright: That's chaining
[10:13] AAA_awright: That's evin
[10:14] chapel: v8: 'test'.span()
[10:14] v8bot: chapel: TypeError: Object test has no method 'span'
[10:14] chjj: why is it evil?
[10:14] chapel: hmm
[10:14] AAA_awright: Is there some way to strike-through text on IRC because that's an example of what you're NOT supposed to do
[10:14] AAA_awright: ACTION headdesk
[10:14] AAA_awright: chjj: I just explained it all out
[10:15] chjj: v8: 'sorry i couldnt here you over my awesome BLINKING'.blink()
[10:15] v8bot: chjj: "<blink>sorry i couldnt here you over my awesome BLINKING</blink>"
[10:15] AAA_awright: chjj: if you have a .createSpan().id() which creates a span... what does .id operate on? The string? The span?
[10:15] some1else has joined the channel
[10:15] chjj: i dont have a .createSpan, since when do i have a .createSpan?
[10:16] AAA_awright: It's an example
[10:16] AAA_awright: I'm not going to define it because it's WRONG
[10:16] AAA_awright: But look at jquery
[10:16] chjj: no
[10:16] AAA_awright: Or don't, good idea
[10:16] chjj: :)
[10:17] mnbvasd: http://wonder-tonic.com/geocitiesizer/
[10:18] matyr has joined the channel
[10:21] beawesomeinstead has joined the channel
[10:21] beawesomeinstead has joined the channel
[10:27] liquidproof has joined the channel
[10:28] ditesh|cassini has joined the channel
[10:30] dcelix has joined the channel
[10:30] stephank has joined the channel
[10:30] Emilsu: Node.js is awesome. Just got my first app up and running. Using prowl and campfire plugins to send mentions from our company chat room to my iPhone -> https://img.skitch.com/20110507-c5t41cacwm2ynx9hqug9at7xgx.jpg
[10:33] chjj: v8: 'nodejs is indeed awesome'.fixed()
[10:33] v8bot: chjj: "<tt>nodejs is indeed awesome</tt>"
[10:33] Sephi-Chan has joined the channel
[10:33] Sephi-Chan: Hello
[10:34] chjj: v8: 'hello'.blink()
[10:34] v8bot: chjj: "<blink>hello</blink>"
[10:34] chjj: i should stop that
[10:35] Sephi-Chan: For my needs (webgames) i created a production queue server with NodeJS and Redis and i was wondering : is it a good idea to use only NodeJS ?
[10:35] mike5w3c has joined the channel
[10:35] Sephi-Chan: Is it a good practice to use a server wide variable to use it in the requests ?
[10:35] chjj: what do you mean? only nodejs?
[10:36] Sephi-Chan: Use a plain old variable for storage
[10:36] chjj: why wouldnt it be? well i guess it depends on what you mean
[10:36] chjj: by server wide variable
[10:36] chjj: if its using tons of memory, no
[10:36] Sephi-Chan: No tons, but highly "variable" ^^
[10:37] chjj: cant really say without knowing what kind of data is there
[10:37] chjj: or how much
[10:38] Bj_o_rn has joined the channel
[10:38] Sephi-Chan: Little data : each item in the queue is represented with an UUID, a label and a production duration (number of seconds)
[10:38] chjj: but, if its a really interactive game that depends on being responsive to the user, it might be necessary to keep data in memory
[10:38] Sephi-Chan: It's the case since i use redis, but maybe i can skip this step ^^
[10:39] chjj: hmm, queue for what?
[10:39] xeodox: How do I create a user that can access port 80, so that I can run node.js on that port?
[10:39] chjj: what kind of data is going to be stored in this object?
[10:39] chjj: you need to run node as root
[10:39] chjj: sudo node app.js
[10:39] xeodox: chjj: is it safe to run it as root...?
[10:39] Sephi-Chan: I write an example of what could be store in this variable 
[10:39] chjj: sephi-chan: ok
[10:40] guybrush: xeodox: you can change the user after starting the program
[10:40] matyr_ has joined the channel
[10:40] xeodox: guybrush: how?
[10:40] guybrush: second
[10:40] gaYak: Sephi-Chan: If you have any plans to increase stuff that you "store", eventually you'll have to use a datasource of some sort. Why get rid of it in the first place?
[10:41] gaYak: I'd visit the problem from architecture point of view, not implementation
[10:41] guybrush: xeodox: process.setgid http://nodejs.org/docs/v0.4.7/api/process.html
[10:41] chjj: gaYak: it sounds like he just has this data to remember state, if the game isnt something like an mmo or something, it might be reasonable to hold it in memory
[10:41] gaYak: chjj: Sure, but redis holds it in the memory also, so for performance there isn't a difference really
[10:41] guybrush: set[g,u]id
[10:41] chjj: yes there is
[10:41] Sephi-Chan: In fact i don't know why i want to that :p
[10:41] Sephi-Chan: Just "to know"
[10:42] chjj: redis doesnt have to worry about the v8 garbage collector's head exploding
[10:42] gaYak: chjj: Not really, it's just a decision between one system and two systems
[10:42] gaYak: (ok, node.js might have worse performance than redis in this case)
[10:42] Sephi-Chan: My first implementation works great and i can even move Redis to another server so it's cool
[10:42] xeodox: guybrush: That's it? 1 line of code and I can change whoever is running node to that group? And I should do this after app.listen(80) right?
[10:42] gaYak: Sephi-Chan: If it works, don't fix it ;)
[10:42] guybrush: yes
[10:42] Sephi-Chan: :p
[10:43] gaYak: Sephi-Chan: Use your time to make new features rather than immediately worry about refactoring something ;)
[10:43] guybrush: xeodox: read the manpages to get more info
[10:43] guybrush: but ye just do it and you will be fine :)
[10:43] Sephi-Chan: I'm not in quest of productivity, knowledge is good too ^^
[10:43] Sephi-Chan: But you're probably right
[10:43] gaYak: Sephi-Chan: Well, now you can learn two systems? ;)
[10:43] xeodox: thanks guys
[10:44] qFox has joined the channel
[10:44] Sephi-Chan: I would rather improve the current system to simplify it
[10:44] Marak: woot, im trending on github https://github.com/explore
[10:44] Marak: no idea why, i think topsy is fucked
[10:44] Marak: one tweet shouldnt push it on there
[10:45] guybrush: i wonder how that trending-stuff works
[10:45] guybrush: it is like random :p
[10:45] gaYak: Sephi-Chan: Then I'd keep the Redis, arch. is simple when there's distinction between storing the data and processing the data..
[10:45] Sephi-Chan: Yes
[10:45] chjj: trending?
[10:46] gaYak: guybrush: Maybe it's like Digg.. Marak paid money ;)
[10:46] chjj: ah, MOrak, cool
[10:46] Marak: its topsy.com
[10:46] guybrush: gaYak: haha 
[10:46] Marak: http://topsy.com/trackback?allow_lang=en&url=https%3A%2F%2Fgithub.com%2FMarak%2FJSONloops
[10:47] guybrush: and who is paying topsy to put stuff up on top? -.-
[10:47] Marak: i think i might have accidentally figured out how to game topsy
[10:47] guybrush: nice
[10:47] Marak: maybe its time for sleep
[10:49] chjj: nonsense
[10:51] tlrobinson: 2 or 3 quick questions: a) is there a way to change the dns server node uses (besides the system settings), b) can node do recursive dns queries, c) if not, can someone recommend a way to do recursive queries?
[10:51] FireFly has joined the channel
[10:51] tlrobinson: (i think my dns server is throttling me, i figure if i do recursive queries that shouldn't be a problem)
[10:52] Wa: FireFly; shot in the dark, but you wouldn't happen to be this FireFly, would you? http://users.skynet.be/firefly/ :p
[10:53] FireFly: unfortunately not, no :P
[10:53] Wa: aw~
[10:53] FireFly: Is that the FireFly of WMB fame?
[10:53] Wa: wmb?
[10:53] tyler-iphone: markov chains in java http://dl.dropbox.com/u/19255/SynthNote.class
[10:54] FireFly: Wireless Multiboot, but it's waaay off-topic for this channel :P
[10:55] Wa: I dunno, only know him the cybiko/gp32/ereader stuff
[10:55] Wa: and was basically just gonna complain about the broken ereader tool links :p
[10:55] FireFly: Heh
[10:55] Wa: for the*
[10:57] stride: Emilsu: nice
[10:58] Wa: oh yeah, that's the same one
[11:00] Wa: also, anyone happen to know of an implementation of the ecmascript harmony binary data spec that I can run on node? Only thing I can find says it's firefox only
[11:00] chjj: i think its implemented in google chrome, just not v8 by itself =/
[11:00] Wa: :<
[11:01] Wa: doesn't seem like it
[11:02] chjj: maybe not
[11:02] chjj: dunno
[11:02] Wa: but an imitation lib would be fine
[11:02] chjj: why do you want to use it on node?
[11:02] Wa: mostly just so I have less updating to do when it's released in V8 officially
[11:03] Wa: mostly because it's part of a web app and I don't want to use php or learn django
[11:03] Wa: and I <3 node
[11:03] chjj: hmm, might be cool to have like a node module that uses buffers behind the scenes
[11:03] Wa: yeah exactly :3
[11:03] FireFly: It shouldn't be all *that* hard to do
[11:04] chjj: yeah Wa
[11:04] Wa: nah, just wouldn't really care to reinvent the wheel if there already is one
[11:04] chjj: reinventing the wheel is what brought us tires
[11:04] Wa: but I take it there isn't one so I'll look into making one
[11:04] chjj: ;)
[11:04] Wa: hah
[11:04] FireFly: I reinvent the wheel waay too much :\
[11:04] Wa: ikr
[11:04] chjj: i love reinventing the wheel, always a chance the people who invented the wheel got it wrong
[11:05] Wa: I do asm some places and that's what asm is all about!
[11:05] nexxy has joined the channel
[11:05] nexxy has joined the channel
[11:05] chjj: lowercase nexxy is here
[11:05] Wa: gb2 the kitchen
[11:05] Wa: :<
[11:06] nexxy: ...
[11:06] Wa: <3
[11:06] nexxy: <3 ;/
[11:06] Wa: heee
[11:06] chjj: i think the capitalization of nexxy's name changes based on mood
[11:06] nexxy: ^
[11:07] Wa: pretty much
[11:08] chjj: https://developer.mozilla.org/en/JavaScript_typed_arrays
[11:09] Wa: bleh, I need more structure than that
[11:09] Wa: trying to read a custom archive format
[11:10] Wa: (not my format)
[11:10] Emmanuel__ has joined the channel
[11:11] Wa: also I had no idea there was a const keyword in js
[11:11] m64253 has joined the channel
[11:12] Wa: that probably would've made some things easier
[11:12] chjj: const isnt specced
[11:12] chjj: non-standard
[11:12] Wa: ahh no wonder
[11:12] chjj: i think v8 includes it though
[11:12] chjj: v8: const a = 1;
[11:12] v8bot: chjj: undefined
[11:12] Wa: yeah it's working in node
[11:12] chjj: v8: const a = 1; a;
[11:12] v8bot: chjj: 1
[11:13] FireFly: I thought const was in the spec
[11:13] FireFly: Might me a mozilla extension though (hence JS but not ES)
[11:13] Wa: v8: const a = 1; a = 2; a;
[11:13] v8bot: Wa: 1
[11:13] Wa: Implemented in:	JavaScript 1.5, NES 6.0 (Netscape extension, C engine only)
[11:13] chjj: https://developer.mozilla.org/en/JavaScript/Reference/Statements/const
[11:13] FireFly: Ah
[11:13] chjj: "const is a Mozilla-specific extension"
[11:14] FireFly: But apparently implemented in all but IE :P
[11:14] chjj: surprise surprise
[11:14] Wa: seems it was well adopted, anyway
[11:14] Wa: for the best
[11:15] chjj: anyway, these array views look pretty simple to implement
[11:15] Wa: yeah but it's an array of one type isn't it?
[11:15] Wa: I'd like an object of multiple types
[11:15] Wa: essentially C-style structs
[11:15] chjj: actually hmmm
[11:16] chjj: it might be hard
[11:16] FireFly: I think there was a strawman for structs
[11:16] Wa: strawman?
[11:16] FireFly: ES5 proposal
[11:16] Wa: http://wiki.ecmascript.org/doku.php?id=harmony:binary_data
[11:16] Wa: this is what I'm talking about implementing :p
[11:17] chjj: actually i dont know, this might be hard, because you access the data with view[n]
[11:17] superjudge has joined the channel
[11:17] Wa: getters and setters?
[11:17] chjj: if implemented in node, that will essentially have to grab data from the real buffer
[11:17] chjj: youd need
[11:18] chjj: an insane amount of getters and setters
[11:18] chjj: lol
[11:18] Wa: well
[11:18] Wa: it doesn't need to read from the buffer each time
[11:18] Wa: basically have a load and save from/to buffer
[11:18] FireFly: maybe create a ES5 Proxy
[11:18] FireFly: I think there's an implementation of them in npm
[11:18] chjj: it will have to duplicate the data though
[11:18] chjj: it might be very inefficient
[11:19] Wa: but it stores it in regular json
[11:19] Wa: it could toss the bindata
[11:19] chjj: youd probably have to implement this in c++
[11:19] Wa: once you read it you don't need it anymore
[11:19] Wa: ick
[11:19] Wa: can I make node modules in C? :S
[11:19] chjj: dont think so
[11:20] chjj: but it doesnt look like this could be done efficiently in pure js
[11:20] Wa: nexxy's saying you can :X
[11:20] matyr has joined the channel
[11:20] Wa: but yeah I don't really like C++ much
[11:20] chjj: oh?
[11:20] Wa: heh
[11:20] nexxy: http://lanyrd.com/2011/nodeconf/sdwry/
[11:21] nexxy: that was one of the talks @ nodeconf
[11:21] nexxy: http://marcorogers.com/nodeconf-2011/node_addons_presentation.html
[11:21] nexxy: ^ slides
[11:21] boogyman has joined the channel
[11:22] chjj: itd be cool if this could be done in pure JS, using node buffers, but it just doesnt look like it could happen without really hacky stuff
[11:22] chjj: because a "view" wouldnt really be a "view" it would have to have a duplicate underlying buffer
[11:23] Wa: nah the buffer would be discarded
[11:23] chjj: how?
[11:24] chjj: in the examples, you can still keep that original array buffer and use multiple views on it
[11:24] chjj: cant just discard it
[11:24] Wa: read in the buffer from the file or whatever, parse it to json, discard buffer, data acquired
[11:24] chjj: ...?
[11:24] chjj: json? what?
[11:24] chjj: are we talking about the same thing?
[11:24] Wa: I just mean standard javascript
[11:24] Wa: t
[11:25] Wa: it's either that or a lot of getters and setters, or a function I guess
[11:25] chjj: i suppose if you did something like data = ArrayBuffer(32); data = Int32View(data); and kill the reference to the original
[11:25] chjj: it would save you memory
[11:26] Wa: I'm talking about http://wiki.ecmascript.org/doku.php?id=harmony:binary_data not the array thing
[11:26] chjj: but otherwise, each view you created would have to have a separate buffer object beneath the surface
[11:26] chjj: oh
[11:26] chjj: i havent looked at that
[11:27] chjj: that will be pretty cool though, if v8 actually becomes oriented to handle binary data
[11:27] Wa: yeah
[11:29] mfernest has joined the channel
[11:29] chjj: if it could handle it as well as it handles <blink>
[11:29] Wa: lol
[11:29] pyrotechnick has left the channel
[11:30] chjj: i should benchmark .blink() and then post on the v8 issue tracker and complain that its too slow
[11:31] chjj: theyll probably remove it out of spite
[11:31] FireFly: blink() ?
[11:31] Wa: prolly just set it to WontFix
[11:32] Wa: also if I make this a C module can I define the object's behavior? Like how it handles indexing and such?
[11:35] chjj: firefly:
[11:35] chjj: v8: 'blink'.blink()
[11:35] v8bot: chjj: "<blink>blink</blink>"
[11:36] FireFly: Oh
[11:36] chjj: :)
[11:36] FireFly: I think I've never used the "string formatting" functions, ever..
[11:36] chjj: lol
[11:38] nexxy has left the channel
[11:38] sion2k has joined the channel
[11:39] chapel: v8: String.prototype.chjj = function() { return '<blink><strong><big><sup>'+this+'</sup></big></strong></blink>'; }: 'Oh noes!'.chjj()
[11:39] v8bot: chapel: SyntaxError: Unexpected token :
[11:39] chapel: v8: String.prototype.chjj = function() { return '<blink><strong><big><sup>'+this+'</sup></big></strong></blink>'; }; 'Oh noes!'.chjj()
[11:39] v8bot: chapel: "<blink><strong><big><sup>Oh noes!</sup></big></strong></blink>"
[11:39] [AD]Turbo has joined the channel
[11:40] chapel: :)
[11:40] FireFly: No marquee? :o
[11:40] chapel: v8: String.prototype.chjj = function() { return '<blink><strong><big><sup>'+this+'</sup>\r\n</big></strong></blink>'; }; 'Oh noes!'.chjj()
[11:41] chapel: hmm, doesn't like that
[11:41] [AD]Turbo: hi there
[11:41] nexxy has joined the channel
[11:41] nexxy: woops.
[11:41] robhawkes has joined the channel
[11:42] Wa: marquee is like a crime
[11:43] maushu has joined the channel
[11:45] chjj: chapel: amazing function
[11:45] chapel: v8: String.prototype.chjj = function() { return '<blink><strong><big><sup>'+this+'</sup>\r\n</big></strong></blink>'; }; 'Oh noes!'.chjj()
[11:45] chjj: but it doesnt like line feeds i dont think
[11:45] chapel: I think whoever runs it patched it to block that
[11:45] chapel: v8: String.prototype.chjj = function() { return '<blink><strong><big><sup>'+this+'</sup>\n</big></strong></blink>'; }; 'Oh noes!'.chjj()
[11:45] v8bot: chapel: "<blink><strong><big><sup>Oh noes!</sup>\n</big></strong></blink>"
[11:45] chjj: or maybe just carriage returns?
[11:46] chapel: 'test\r\nblah'.blink()
[11:46] chapel: v8: 'test\r\nblah'.blink()
[11:46] teemow has joined the channel
[11:46] chapel: v8: 'test\nblah'.blink()
[11:46] v8bot: chapel: "<blink>test\nblah</blink>"
[11:53] chjj: hey Wa
[11:53] chjj: https://github.com/vjeux/jsDataView/
[11:53] chjj: someone implemented the DataView
[11:53] Wa: neat
[11:53] chjj: no other views though
[11:54] Wa: will look in a minute, sidetracked with something else :p
[11:54] viz has joined the channel
[11:54] nexxy: something called curry rice?
[11:54] Wa: that too
[11:54] ditesh|cassini has joined the channel
[11:55] mdaisuke has joined the channel
[11:56] matyr_ has joined the channel
[11:59] Bwen has joined the channel
[12:04] chjj: you know it would be easy to implement the typed array views, except youd have to use something lame like Int32View.get(1); Int32View.set(1, 100);
[12:05] chjj: everything else is possible though
[12:06] Wa: sometimes I wish JS had __getAttr__/__getIndex__ options.. >_.;
[12:06] Wa: >_>;*
[12:06] boogyman: Wa, research indexOf
[12:09] Wa: can it be overloaded to this end or something? I've never heard of it being used internally
[12:10] Wa: if that was at what I said, those literals are from python, if you define them in a class they're called when a value is requested from an instance of that class
[12:11] Wa: basically a getter catchall
[12:15] throughnothing has joined the channel
[12:18] Spion__ has joined the channel
[12:18] pastak has joined the channel
[12:23] aslakhellesoy has joined the channel
[12:24] tonyv has joined the channel
[12:26] piscisaureus has joined the channel
[12:27] eirikb has joined the channel
[12:29] eirikb: Hello. Is there any good way to see the difference between two object (with nested properties)? So far I have been using console.log and diffutils)
[12:37] kawaz_air has joined the channel
[12:38] liar has joined the channel
[12:39] MattJ has joined the channel
[12:39] beawesomeinstead has joined the channel
[12:45] ExsysTech has joined the channel
[12:46] eldar has joined the channel
[12:46] bas__ has joined the channel
[12:48] bas__ has joined the channel
[12:49] Skola has joined the channel
[12:51] m64253 has joined the channel
[12:59] superjudge has joined the channel
[13:02] stkim1 has joined the channel
[13:04] jarek has joined the channel
[13:04] jarek has joined the channel
[13:07] m64253 has joined the channel
[13:08] matyr has joined the channel
[13:11] aslakhellesoy has joined the channel
[13:12] fairwinds has joined the channel
[13:12] thoolihan has joined the channel
[13:15] m64253 has joined the channel
[13:25] gtramont1na has joined the channel
[13:27] matyr_ has joined the channel
[13:27] nefD has joined the channel
[13:28] pifantastic has joined the channel
[13:29] towns has joined the channel
[13:30] openpercept has joined the channel
[13:33] dcampano has joined the channel
[13:34] matjas has joined the channel
[13:37] jtsnow has joined the channel
[13:41] mdaisuke has joined the channel
[13:43] sourcode has joined the channel
[13:46] ardcore has joined the channel
[13:49] galaxywatcher has joined the channel
[13:52] Bogh has joined the channel
[13:53] Bogh has left the channel
[13:53] postwait has joined the channel
[13:54] jbergstroem has joined the channel
[13:58] awenkhh has joined the channel
[13:59] vxv has joined the channel
[13:59] vxv: hello
[13:59] vxv: i have a question
[13:59] vxv: someone?
[14:00] Bwen: no thx
[14:00] vxv: huh
[14:00] Bwen: well you gave me a choice...
[14:00] vxv: omg..
[14:00] vxv: :D
[14:01] dyer has joined the channel
[14:01] vxv: i've been trying to install
[14:01] vxv: node-canvas
[14:01] Bwen: is that canvas for node?
[14:01] vxv: yeah
[14:01] vxv: but it says
[14:01] vxv: it requires node 0.4.x
[14:01] Bwen: how can you be sure? ¬_¬
[14:01] vxv: and i have 0.5.0-pre
[14:01] vxv: it told me
[14:01] vxv: so how do i install node 0.4.7 for example
[14:02] vxv: for it to work
[14:02] ibrahimal-rajhi has joined the channel
[14:02] Bwen: I dont know, the same way you installed 0.5.0-pre?
[14:02] vxv: i just used git
[14:03] vxv: didnt mention the version
[14:03] hoax__ has joined the channel
[14:03] vxv: it automatically got me 0.5.0-pre
[14:03] Bwen: same here, havent tried to install 0.4.7 yet though... or any other version
[14:03] vxv: ah ok
[14:04] vxv: ill give it some tries
[14:04] vxv: ty
[14:04] drogoh: vxv: Download the tarball?
[14:04] vxv: ?
[14:04] vxv: whats tarball
[14:05] squeeks: .tar.gz 
[14:05] vxv: yeah i downloaded it
[14:05] vxv: but how do i install that?
[14:05] vxv: i'm using it with cygwin
[14:06] vxv: nvm googled it
[14:06] vxv: ty
[14:06] drogoh: Search engines should be a first, not last resort :/
[14:07] vxv: some wise words
[14:07] Bwen: drogoh: no worries, its because he is Asynchronous
[14:07] Bwen: he sent his query, just continued afterwards
[14:08] cbiscardi has joined the channel
[14:12] Dreamer3 has joined the channel
[14:15] RusAlex has joined the channel
[14:18] djcoin has joined the channel
[14:19] Corren has joined the channel
[14:19] Spion has joined the channel
[14:21] moshe has joined the channel
[14:23] ibrahimal-rajhi has joined the channel
[14:23] Nican has joined the channel
[14:28] peerless has joined the channel
[14:30] iwinulose has joined the channel
[14:31] pita has joined the channel
[14:32] pita: Hi, anyone knows how can provide a "login with twitter button". So that I can access the twitter api with this account
[14:33] cbiscardi: pita: are you using connect or express?
[14:33] pita: express
[14:34] ibrahimal-rajhi has joined the channel
[14:35] matjas has joined the channel
[14:35] djcoin has joined the channel
[14:35] path[l] has joined the channel
[14:35] pita: cbiscardi: express
[14:35] cbiscardi: pita: do a search on search.npmjs.org theres a bunch of oauth modules and some are for twitter
[14:36] cbiscardi: pita: there is also  https://github.com/christkv/node-express-oauth-plugin
[14:36] cbiscardi: pita: and https://github.com/ciaranj/connect-auth
[14:37] pita: thx
[14:38] cbiscardi: np
[14:40] chapel: v8: 'H̹̙̦̮͉̩̗̗ͧ̇̏̊̾Eͨ͆͒̆ͮ̃͏̷̮̣̫̤̣ ̵̞̹̻̀̉̓ͬ͑͡ͅCͯ̂͐͏̨̛͔̦̟͈̻O̜͎͍͙͚̬̝̣̽ͮ͐͗̀ͤ̍̀͢M̴̡̲̭͍͇̼̟̯̦̉̒͠Ḛ̛̙̞̪̗ͥͤͩ̾͑̔͐ͅṮ̴̷̷̗̼͍̿̿̓̽͐H̙̙̔̄͜'.blink()
[14:40] v8bot: chapel: "<blink>H̹̙̦̮͉̩̗̗ͧ̇̏̊̾Eͨ͆͒̆ͮ̃͏̷̮̣̫̤̣ ̵̞̹̻̀̉̓ͬ͑͡ͅCͯ̂͐͏̨̛͔̦̟͈̻O̜͎͍͙͚̬̝̣̽ͮ͐͗̀ͤ̍̀͢M̴̡̲̭͍͇̼̟̯̦̉̒͠Ḛ̛̙̞̪̗ͥͤͩ̾͑̔͐ͅṮ̴̷̷̗̼͍̿̿̓̽͐H̙̙̔̄͜</blink>"
[14:40] squeeks has left the channel
[14:42] FireFly: Gah
[14:43] FireFly|n900 has joined the channel
[14:43] FireFly: There's a bug with older versions of xchat crashing when seeing lines like that, chapel :(
[14:43] chapel: oh, I didn't know
[14:44] chapel: my irc client handles it fine, other than the uglyness
[14:44] FireFly: Yeah, newer versions of xchat as well
[14:44] wao: zalgo?
[14:44] wao: FireFly: it's called unicode.
[14:45] FireFly: Yeah, but it doesn't like rendering big chunks of superscript unicode codepoints, or something along those lines
[14:46] avalanche123 has joined the channel
[14:48] Wizek_ has joined the channel
[14:50] dambalah has left the channel
[14:52] snearch has joined the channel
[14:55] cbiscardi has left the channel
[14:56] vxv: node-canvas works :]]
[14:56] vxv: ty again
[14:58] q_no has joined the channel
[14:58] devdazed has joined the channel
[15:00] [algo] has joined the channel
[15:05] nadirvardar has joined the channel
[15:06] newy_ has joined the channel
[15:06] dyer has joined the channel
[15:09] openpercept has joined the channel
[15:09] ibrahimal-rajhi has joined the channel
[15:14] temp01 has joined the channel
[15:14] lluad has joined the channel
[15:15] awenkhh has joined the channel
[15:16] mansoor has joined the channel
[15:16] mansoor has joined the channel
[15:17] quackquack has joined the channel
[15:18] EvilPacket has joined the channel
[15:19] quackquack: I upgraded Express and Connect yesterday, and I cant get my post data using `req.body.attr` any more. Has this changed?
[15:19] dypsilon has joined the channel
[15:19] coreb has joined the channel
[15:21] dypsilon: hi, I'm getting the following error: Can't use mutable header APIs after sent.Can't use mutable header APIs after sent.
[15:21] dypsilon: when trying to use the connect-auth twitter example https://github.com/ciaranj/connect-auth/wiki/Express---Twitter-example
[15:22] squeeks has joined the channel
[15:22] squeeks: Question: are websockets launched by socket.io supposed to always listen on port 8080?
[15:23] squeeks: wait a fucking second....
[15:23] roar has joined the channel
[15:23] hal1on has joined the channel
[15:24] dnolen has joined the channel
[15:24] aguynamedben has joined the channel
[15:25] dguttman has joined the channel
[15:28] sivy_ has joined the channel
[15:29] Bonuspunkt: v8: var x=' ';while(true) {x+=x};
[15:29] v8bot: Bonuspunkt: 
[15:29] viz has joined the channel
[15:32] Bonuspunkt: v8: var x=' ';while(true) {x+=x};console.log('what?')
[15:32] v8bot: Bonuspunkt: 
[15:32] edude03 has joined the channel
[15:32] e2i has joined the channel
[15:33] dcampano has joined the channel
[15:33] aho has joined the channel
[15:37] ibrahimal-rajhi has joined the channel
[15:37] timmywil has joined the channel
[15:37] perlmonkey21 has joined the channel
[15:39] kenbolton has joined the channel
[15:40] jwcooper has joined the channel
[15:41] matyr has joined the channel
[15:44] mike5w3c has joined the channel
[15:45] abraham has joined the channel
[15:46] aconbere has joined the channel
[15:46] neorab has joined the channel
[15:47] d0k has joined the channel
[15:49] siculars has joined the channel
[15:51] roar: :/
[15:51] clip has joined the channel
[15:52] Mrfloyd has joined the channel
[15:54] Corren has joined the channel
[15:55] jbpros has joined the channel
[15:55] context: Anyone at minnebar ?
[15:55] p_nitsch has joined the channel
[15:57] path[l] has joined the channel
[15:57] path[l]: who maintains v8bot ?
[15:59] Bwen: v8bot maintain itself -_-
[16:00] path[l]: err
[16:00] path[l]: I meant who wrote it
[16:00] path[l]: Ive got an ircbot in my channel
[16:00] path[l]: written in node
[16:00] path[l]: but I dont know how to make it reconnect
[16:00] path[l]: when it disconnects
[16:01] Ankit has joined the channel
[16:01] Bonuspunkt: i think i saw the v8bot source at github
[16:02] Ankit: Is there any good article for people in the very beginning stage of learning node
[16:02] carlocci has joined the channel
[16:02] Ankit has left the channel
[16:05] clip: i'm trying to establish a connection between my nodeserver and a flash application. i tried flashsocket.io and some other librarys but all projects are using flex, and i can't get it working. anyone got an article on this?
[16:05] FireFly|n900 has joined the channel
[16:06] matyr has joined the channel
[16:06] FireFly|n900 has joined the channel
[16:07] cognominal has joined the channel
[16:07] cognominal: what is the best package in the npm registry to parse dates?
[16:07] Thorn: clip: what's your problem? SecurityError by any chance?
[16:08] FireFly|n900 has joined the channel
[16:11] awenkhh has joined the channel
[16:15] christkv has joined the channel
[16:16] Corren: I'm not really in love with npm :S
[16:17] Lorentz has joined the channel
[16:18] Bwen: but npm is in love with you! :D
[16:19] Corren: ls
[16:19] Corren: indeed
[16:19] Sephi-Chan has joined the channel
[16:20] zeade has joined the channel
[16:21] Viriix has joined the channel
[16:22] dnolen has joined the channel
[16:25] ibrahimal-rajhi has joined the channel
[16:26] Jamool has joined the channel
[16:26] Sephi-Chan has left the channel
[16:26] mike5w3c_ has joined the channel
[16:26] ardcore has joined the channel
[16:26] Jamool_ has joined the channel
[16:27] ardcore has left the channel
[16:28] path[l] has joined the channel
[16:33] JulioBarros has joined the channel
[16:33] mscdex: node.js rules!
[16:34] galaxywatcher has joined the channel
[16:35] eguest309 has joined the channel
[16:35] eguest309: hello
[16:37] eguest309: guys .wanted some information.is there some way in which u can get the mac address or some unique information from the client side using node. or a plug for node
[16:37] vikstrous has joined the channel
[16:38] squeeks: eguest309: which mac address?
[16:38] squeeks: and which OS?
[16:38] eguest309: ubuntu  and client side mac address 
[16:39] eguest309: so kind of like a plugin which i can use on the client side to enable me get the mac address or maybe perform system commands on the client side .if it even possible
[16:39] eguest309: or any unique information i can store on the client side using javascipt
[16:40] squeeks: ifconfig | grep ether
[16:40] squeeks: will work for node running on the client side.
[16:42] devdazed has joined the channel
[16:42] cfq has joined the channel
[16:43] briznad has joined the channel
[16:43] eguest309: what if node isnt running on the client sdie
[16:43] squeeks: then you're sol trying to get the MAC.
[16:43] eguest309: yeah
[16:44] eguest309: can i get a plugin like socket.io which i can use to get the mac address  or something like that ?
[16:44] Charuru has joined the channel
[16:44] tim_smart has joined the channel
[16:44] eguest309: i know the client side stuff is built on js which doesnt make this possble
[16:46] newy_ has joined the channel
[16:47] squeeks: No, the moment packets pass through any sort of tunnel, a pure layer 3 network, NAT, a VPN, etc you won't be able to get the originating hosts MAC address.
[16:47] lluad: Probably not. You can get the MAC address from within IE, I believe, but not in any cross-browser way.
[16:47] _mql has joined the channel
[16:48] lluad: Unique information is easier. Just stash it in a cookie, and create the cookie randomly if it's not there.
[16:49] iori has joined the channel
[16:49] eguest309: okay.cookis could be good
[16:50] lluad: At that point you're pretty much creating a persistent session, so any of the disk-backed session modules would do what you need, maybe with some slight tweaks to cookie lifetime.
[16:51] uclinux has joined the channel
[16:55] zakabird has joined the channel
[16:55] uclinux: is there a simple way to direct foo.com/bar to a separate node process? 
[16:56] uclinux: i could do it with nginx but i would rather try to do it with node
[16:57] squeeks: do it with nginx.
[16:57] m0rganic1 has joined the channel
[16:57] m0rganic1 has left the channel
[16:59] matjas has joined the channel
[17:00] jmoyers: i think node http proxy, also
[17:01] tahu has joined the channel
[17:01] postwait has joined the channel
[17:01] dgathright has joined the channel
[17:01] jmoyers: uclinux: ^https://github.com/nodejitsu/node-http-proxy
[17:02] uclinux:  jmoyers: this is excellent ...nodejitsu is neat also 
[17:02] tahu has joined the channel
[17:03] catshirt has joined the channel
[17:03] uclinux: nginx was giving me issues with sockets so keeping it within node wold be really cool thanks
[17:03] matyr_ has joined the channel
[17:04] Corren has joined the channel
[17:05] tim_smart: uclinux: Also there is haproxy
[17:05] Spacerat3004 has joined the channel
[17:06] Corren: what's the major differences between ha and nginz
[17:06] Corren: x
[17:06] squeeks: one's a proxy, the other is a web server on drugs?
[17:08] coreb: ha is a proxy only, nothing extra
[17:09] coreb: it does load balancing smarter than nginx
[17:09] coreb: nginx has file serving, https, and much more in addition to proxying
[17:13] uclinux: tim_smart++ jmoyers++ 
[17:13] sechrist: look at me meow
[17:13] sechrist: i'm getting pay-purr
[17:13] uclinux: thanks guys
[17:14] seivan has joined the channel
[17:17] eguest309: thanks  \
[17:18] ibrahimal-rajhi has joined the channel
[17:20] Emmanuel__ has joined the channel
[17:20] kmiyashiro has joined the channel
[17:21] KellyM has joined the channel
[17:27] stevenj has joined the channel
[17:28] yozgrahame has joined the channel
[17:28] xer0x has joined the channel
[17:29] boaz has joined the channel
[17:29] hansek has joined the channel
[17:30] mansoor has joined the channel
[17:30] astropirate has joined the channel
[17:31] sirkitree has joined the channel
[17:34] catshirt has joined the channel
[17:38] johnhamelink has joined the channel
[17:39] johnhamelink: Hey guys, is it OK to talk about nodejs modules here (using them, not creating them)?
[17:40] squeeks: NO GO AWAY WE DON'T WANT YOUR KIND HERE (yeah sure, go ahead)
[17:40] johnhamelink: Awesome Xd
[17:40] johnhamelink: Basically, I'm planning on using node.js in a production environment for some SAAS
[17:41] johnhamelink: We're in the planning stage, and I convinced my boss node.js + mongoDB is a good way to speed up some of the data retrieval we're doing.
[17:42] johnhamelink: My experience with node has been awesome, but one thing I don't quite get yet is how to split up my files in order to keep the code manageable
[17:42] dcampano has joined the channel
[17:42] johnhamelink: For example, I'm using mongoose, and I want to split up the schema so it's more readable into different files.
[17:43] johnhamelink: I found this bootstrapper script, which looks good, but I'm not sure how I'd use it: https://gist.github.com/895480/d5c6a0bfadabef87148ad406a47caebdfe5a5fdf
[17:43] johnhamelink: (I fixed the spelling mistake in it, by the way)
[17:43] jmoyers: johnhamelink: split the models into different files, var Session = module.exports.Session = mongoose.model('Session'); then require('session.js).Session to use
[17:44] levi501d has joined the channel
[17:44] jmoyers: you can also do something like that -- its just going to auto include the schema based on schema name
[17:44] hybsch has joined the channel
[17:45] johnhamelink: jmoyers, Ok, that's cool, but in the script I found, where would I do the moduel.exports?
[17:45] eirikb has left the channel
[17:45] jmoyers: i don't bootstrap like that
[17:45] jmoyers: im not sure what intent is
[17:45] jmoyers: but if its that you're going to require() that file wherever you need your models
[17:46] cloudhea3 has joined the channel
[17:46] johnhamelink: Ok
[17:46] johnhamelink: I think I understand :)
[17:46] jmoyers: you'd do like -> module.exports[schemaName] = m.model(schemaName, Schema);
[17:46] charlesjolley- has joined the channel
[17:47] jmoyers: then var models = require('bootstrap') and be able to retrieve models via models.<< schema name >>
[17:47] disq has left the channel
[17:48] johnhamelink: jmoyers, I thought I'd have to do something like that, but the problem i come up with in this example is that my model cannot see the bootstrap's "m" variable (which is the require('mongoose'))
[17:49] johnhamelink: I thought I was going about it wrongly
[17:49] jmoyers: and by the way, the thing that this bootstrap assumes is that you've exposed your Schema definition objects.
[17:49] jmoyers: like so https://gist.github.com/960683
[17:50] jmoyers: yes -- this is not a global namespace like php or some such
[17:50] jmoyers: each file/module has its own local variables
[17:50] johnhamelink: jmoyers, yeah I'm a php guy - trying to branch out :)
[17:50] jmoyers: just because you require('mongoose') in a file before, you wont have access to that in other modules
[17:50] johnhamelink: I see :)
[17:51] mendel_ has joined the channel
[17:53] a|i has joined the channel
[17:54] a|i: why is that doing (de)cipher with crypto is such a pain..
[17:54] a|i: it works in ruby
[17:54] a|i: it works in python
[17:54] a|i: not work in node
[17:54] a|i: crypto.createCipheriv() is not even documented.
[17:55] mendel__ has joined the channel
[17:55] a|i: and when I use it, I get this error: node-crypto : Invalid IV length 32
[17:55] awenkhh has joined the channel
[17:55] mendel__ has joined the channel
[17:56] dustylane: I'm looking for an incredibly simple tutorial on getting Mongoose working with Express?
[17:56] jmoyers: as far as i know, the crypto module 'has grown messy' per http://groups.google.com/group/nodejs-dev/browse_thread/thread/3e59547f114db17f
[17:57] __tosh has joined the channel
[17:57] EvilPacket has joined the channel
[17:57] a|i: great, now they want to remove cipher?
[17:57] jmoyers: sounds like there are some userland modules that might be easier to digest
[17:57] a|i: is there an alternative for cipher? why do they want to remove it?
[17:58] BoWozZ has joined the channel
[17:58] jmoyers: https://github.com/dekz/dcrypt - they mention this module
[17:58] jmoyers: i have no experience with it however
[17:58] johnhamelink: jmoyers, Sorry, I'm not quite getting how to pass the "m" object through to the model js file. My Model looks like this: https://gist.github.com/960690 and bootstrap.js looks like this: https://gist.github.com/960693
[17:59] Me1000 has joined the channel
[17:59] jmoyers: you need to require('mongoose') directly in your model
[17:59] jmoyers: so you can get at Schema
[17:59] jmoyers: i updated my ex from earlier
[17:59] johnhamelink: ok
[17:59] jmoyers: not using the bootstrap
[17:59] a|i: jmoyers: thanks, I have a look.
[17:59] jmoyers: but some concept
[17:59] johnhamelink: Thanks :)
[17:59] jmoyers: https://gist.github.com/960683
[18:00] johnhamelink: Got it, looks good. Thumbs up! :)
[18:01] softdrink has joined the channel
[18:03] jmoyers: i need someone to deliver brunch into my mouth, le sigh
[18:06] johnhamelink: jmoyers, that works :) A question about how it'd work for multiple schemas: if I had 500 collections I wanted to use, would I be able to use 500 different files and require them without any extra significant overhead?
[18:06] johnhamelink: ie: is that going to create 500 seperate connections to mongo?
[18:07] jmoyers: johnhamelink: you don't want to mongoose.connect in each of those files
[18:07] jmoyers: you're just defining the models
[18:07] johnhamelink: Yeah, I just wanted to check :)
[18:07] jmoyers: then in your main application file -- you'll mongoose.connect(host, etc etc), and it will use that connection
[18:07] jmoyers: modules have a caching system -- im not super familiar with it
[18:08] johnhamelink: jmoyers, that's comforting - thanks for all your help, I'll leave you alone now ^_^
[18:09] ibrahimal-rajhi has joined the channel
[18:12] enos_feedler has joined the channel
[18:13] Spacerat3004: I'm having a problem with nodejs, expressjs and XMLHttpRequest v2
[18:13] mscdex: Spacerat3004: shoot
[18:13] Rob- has joined the channel
[18:13] muk_mb has joined the channel
[18:13] Spacerat3004: basically, I have a client sending a file using XMLHttpRequest to my express server
[18:13] Spacerat3004: but I can't seem to get that data on the server
[18:14] Spacerat3004: I can see the headers sent to the server, but basically I can't find the file
[18:14] mscdex: you don't get the post request?
[18:14] mscdex: oh
[18:14] mscdex: are you using node-formidable?
[18:14] mscdex: or no?
[18:14] Spacerat3004: I think I tried that but couldn't get it to work
[18:15] kersny has joined the channel
[18:15] Spacerat3004: I also tried connect-form
[18:15] Prism has joined the channel
[18:16] lemon-tree: The data sent in the request will be come in through the 'data' event on the request
[18:16] charlesjolley- has joined the channel
[18:17] Spacerat3004: oh right, I'll give that a try
[18:17] __tosh has joined the channel
[18:17] hoax__ has joined the channel
[18:18] Spacerat3004: after I boot in to linux, that is
[18:20] Xano has joined the channel
[18:21] sreeix has joined the channel
[18:22] Spacerat3004 has joined the channel
[18:22] ji0n has joined the channel
[18:24] mrjeeves has left the channel
[18:26] jmoyers: anyone point me at a somewhat reliable snippet for determining whether I'm in node?
[18:26] jmoyers: i can do if(typeof(require) etc, but that seems a little janky
[18:30] Opaque has joined the channel
[18:31] mike5w3c has joined the channel
[18:31] Rodatron: jmoyers: if (process) { ... } ?
[18:31] pootieta1g has joined the channel
[18:31] jmoyers: i suppose if somebody hasn't defined window.process
[18:31] jmoyers: same with require
[18:32] jmoyers: process is less common than require though, since commonjs loaders and whatnot
[18:32] EvilPacket has joined the channel
[18:33] Rodatron: process && process.title == 'node'
[18:33] openpercept has joined the channel
[18:33] jmoyers: indeed -- thank you
[18:34] Rodatron: :) np
[18:35] alexgordon has joined the channel
[18:38] drudge has joined the channel
[18:38] beawesomeinstead has joined the channel
[18:38] mscdex: but process.title can be changed
[18:38] mscdex: :)
[18:40] samsonjs has joined the channel
[18:40] tmzt has joined the channel
[18:41] Spacerat_ has joined the channel
[18:41] nadirvardar has joined the channel
[18:44] matyr has joined the channel
[18:44] jmoyers: heh
[18:44] gtramont1na has joined the channel
[18:45] jmoyers: and its not short either
[18:45] jmoyers: since to avoid ref error
[18:45] jmoyers: you have to do typeof
[18:45] jmoyers: i think im going to try the opposite for a while...
[18:45] jmoyers: if(!window) ;-)
[18:45] tmzt has joined the channel
[18:46] dcampano_ has joined the channel
[18:48] breakpointer has joined the channel
[18:48] harth has joined the channel
[18:52] Spacerat3004: lemon-tree, you said I should be able to find the data in req.data?
[18:52] langworthy has joined the channel
[18:52] lemon-tree: No, in the data event
[18:52] lemon-tree: Well, in the events emitted by it
[18:53] lemon-tree: It will arrive in chunks though, so you'll need to wait for them all to arrive
[18:53] lemon-tree: At which point the 'end' event will fire, at which point you start whatever you need to do with the input
[18:53] Spacerat3004: how do I hook the data event?
[18:54] hoax__ has joined the channel
[18:54] lemon-tree: You also need to set the correct encoding
[18:54] teemow has joined the channel
[18:54] lemon-tree: Same way you do with any other
[18:54] sechrist has joined the channel
[18:54] magickid111 has joined the channel
[18:54] robotarmy has joined the channel
[18:55] lemon-tree: request.on('data', function (dataChunk) { //your code here  })
[18:55] seivan has joined the channel
[18:55] e2i has joined the channel
[18:55] Spacerat3004: ah right
[18:56] Spacerat3004: I think expressjs changes the way that works, because I've not actually used request.on before
[18:57] blueadept has joined the channel
[18:58] lemon-tree: You may find express has a different method to do this then
[18:59] andrewfff has joined the channel
[18:59] lemon-tree: Ah, it as app.post()
[18:59] lemon-tree: http://expressjs.com/guide.html#http-methods
[18:59] lemon-tree: has*
[18:59] vikstrous: guys, is there a way for me to type things right into to node and run them while my webserver is on?
[19:00] Spacerat3004: apparently expressjs actually has app.on which does the same thing as request.on
[19:00] vikstrous: i just want to debug something and as far as i know ruby has this feature...
[19:01] Spacerat3004: but lemon-tree, I was using app.post before and it wasn't working (req.body was empty)
[19:01] baudehlo: vikstrous: node-inspector
[19:01] vikstrous: thanks
[19:02] chfo has joined the channel
[19:02] kryptom has joined the channel
[19:03] no-gooder has joined the channel
[19:04] breakpointer: Hi, Do any node package authors out there have a recommendation on js Doc generation tools? Besides JSDoc-toolkit? Not to say that one is bad... I'm just wondering what people are using. 
[19:04] ngs has joined the channel
[19:05] ngs has joined the channel
[19:05] dve_ has joined the channel
[19:07] astropirate: Anyone recommend a XML to jsObject parser?
[19:10] matyr_ has joined the channel
[19:10] softdrink has joined the channel
[19:11] mAritz has joined the channel
[19:12] Spacerat3004: ah, I got it lemon-tree, you use app.pos('/', function(req) {..});
[19:12] Spacerat3004: then req.on('data', function(chunk){...});
[19:12] Spacerat3004: *post
[19:13] breakpointer: astropirate: would this work? http://api.jquery.com/jQuery.parseXML
[19:14] Emilsu has joined the channel
[19:15] tilgovi has joined the channel
[19:15] jetienne has joined the channel
[19:17] stephank: breakpointer: Not in the position to recommend anything, but there's docco.
[19:19] breakpointer: stephank: thanks! hadn't heard of that one... looks like it uses pygments as the engine though, which is python based and can't be run the browser.
[19:20] xeodox has joined the channel
[19:20] chfo has left the channel
[19:20] hij1nx has joined the channel
[19:21] breakpointer: but heck... maybe I should give this a try cause it looks like it will get the job don
[19:21] breakpointer: done
[19:22] a|i: is there a base64 en/decoder in node?
[19:24] SubStack: a|i: it's built-in
[19:24] SubStack: v8: typeof Buffer
[19:24] v8bot: SubStack: "undefined"
[19:24] SubStack: lamebot
[19:24] squeeks: it's a v8bot not a nodebot
[19:24] coreb: do people here primarily use mongoose or the native driver?
[19:25] SubStack: a|i: encode: new Buffer('abcd').toString('base64')
[19:25] SubStack: a|i: decode: new Buffer('YWJjZA==', 'base64').toString()
[19:25] a|i: SubStack: thanks!
[19:26] bartt has joined the channel
[19:26] nexxy: ACTION mind blown
[19:26] orbiting has joined the channel
[19:28] m00p has joined the channel
[19:29] aaronblohowiak has joined the channel
[19:31] robhawkes has joined the channel
[19:33] stagas: coreb: dead beef
[19:33] aaronblohowiak: monokrome: your prefer homepage is broken
[19:33] awenkhh has joined the channel
[19:33] stagas: coreb: https://github.com/marcello3d/node-mongolian
[19:34] nexxy: ACTION makes a mongo lib called mongoloid
[19:34] m00p has joined the channel
[19:35] Xano has joined the channel
[19:36] coreb: there's so many different libs ...
[19:36] chrislorenz has joined the channel
[19:37] coreb: I like that mongolian deadbeef attempts to be similar to the shell
[19:37] dyer has joined the channel
[19:38] piscisaureus has joined the channel
[19:38] matyr has joined the channel
[19:39] boaz has joined the channel
[19:42] boogyman has joined the channel
[19:42] iaincarsberg has joined the channel
[19:42] zeade has joined the channel
[19:42] CIA-72: node: 03Ryan Dahl 07v0.4 * r110f065 10/ lib/http.js : 
[19:42] CIA-72: node: Agent socket errors bubble up to req only if req exists
[19:42] CIA-72: node: Fixes #836. - http://bit.ly/ikck52
[19:44] braddunbar has joined the channel
[19:45] jeremyselier has joined the channel
[19:50] matyr has joined the channel
[19:52] briznad has joined the channel
[19:52] peerless has joined the channel
[19:53] yozgrahame has joined the channel
[19:54] cloudhea1 has joined the channel
[19:54] ixti has joined the channel
[19:54] aaronblohowiak: is CIA-72's source available?
[19:54] phyrephox has joined the channel
[19:54] aaronblohowiak: CIA-72: hello
[19:54] aaronblohowiak: CIA-72: info!
[19:54] phyrephox: hi, i'm having a weird problem with node
[19:55] phyrephox: i installed express with npm
[19:55] phyrephox: and when i run node from my home folder, i can require express fine
[19:55] phyrephox: but when i run node from "/project", require('express') doesn't work
[19:55] phyrephox: does anyone know why that might be?
[19:56] edude03 has joined the channel
[19:58] pifantastic has joined the channel
[19:59] jelveh has joined the channel
[19:59] astropirate_ has joined the channel
[19:59] daekano has joined the channel
[20:01] wafflesburger has joined the channel
[20:01] wafflesburger: question: does nodejs load and parse a template on every request by default?  when i start rendering templates i go from 2k reqs to 200 / s
[20:02] wafflesburger: i'm using express btw
[20:03] braddunbar: wafflesburger: i'm fairly sure they're cached...
[20:03] bene1 has joined the channel
[20:03] stride: only in production iirc
[20:03] chfo has joined the channel
[20:04] wafflesburger: can you manually toggle caching
[20:05] chfo: hey, i get this parse error https://gist.github.com/4184f05748e9a107e4c7 but i dont know where it is thrown. i am doing a lot of http calls, but a res.on('error' …) was not called. does anybody is familar with this error?
[20:05] braddunbar: wafflesburger: yes, you can change app.settings.env to 'production' i believe - sec I check
[20:05] no-gooder has joined the channel
[20:06] squeeks: chfo: what's on line 134?
[20:06] squeeks: better yet, please pastebin/gist whatever your entire code.
[20:07] briznad has joined the channel
[20:07] chfo: squeeks: it seems to me that this is a node.js javascript, isn't it? (none of my files is beyond 100 lines)
[20:08] braddunbar: wafflesburger: yep, you can use the 'view cache' setting
[20:08] charlesjolley- has joined the channel
[20:08] wafflesburger: braddunbar: can i ask where you found that detail at
[20:08] _iori_ has joined the channel
[20:08] wafflesburger: i just started with this about an hour ago
[20:09] phyrephox_ has joined the channel
[20:09] braddunbar: wafflesburger: in the express source, sec I link it
[20:09] braddunbar: https://github.com/visionmedia/express/blob/master/lib/view.js#L258
[20:10] jj_ has joined the channel
[20:10] wafflesburger: ah, brilliant thanks
[20:10] pifantastic has joined the channel
[20:10] wafflesburger: it's up to 900 req/sec, still 1/2 as fast x( lol
[20:10] chunhao has joined the channel
[20:11] braddunbar: wafflesburger: getting better, next bottleneck!
[20:11] pita has joined the channel
[20:11] HAITI has joined the channel
[20:11] wafflesburger: any tips for narrowing it down
[20:12] braddunbar: wafflesburger: hmm...are you doing io in your view rendering requests?
[20:12] _mql has joined the channel
[20:13] wafflesburger: braddunbar: http://pastebin.com/wQJ26snH
[20:13] wafflesburger: it's just this simple test 
[20:14] p_nitsch has joined the channel
[20:14] chfo: is there a limit to the amount of concurrent callbacks i can run?
[20:14] dcampano_ has joined the channel
[20:14] squeeks: only kernel limitations iirc
[20:14] wafflesburger: oh it is apparently using http/1.1 (apache bench) do you think that is proper
[20:16] xeodox has joined the channel
[20:18] ph^ has joined the channel
[20:18] xeodox: Does anyone know if Mongoose supports Mongo's replica sets?
[20:18] braddunbar: wafflesburger: looks pretty minimal, only possible bottleneck there in jade right?
[20:19] wafflesburger: http://pastebin.com/zGeS53Ag
[20:19] wafflesburger: that is the full source
[20:20] Wizek_: Hello! What does the tag Works mean on node's git repo? does it reffer to the tag v0.4.7 ? Or the working tree?
[20:20] braddunbar: wafflesburger: not sure, don't know if jade precompiles its views or not
[20:21] wafflesburger: braddunbar: if i change the render line to just res.end(
[20:21] wafflesburger: its 2k+
[20:22] yozgrahame has joined the channel
[20:23] braddunbar: wafflesburger: jade has a cache option, seems to be off by default
[20:23] Adman65 has joined the channel
[20:23] braddunbar: wafflesburger: i think you can pass options to the view engine with express
[20:24] wafflesburger: :O
[20:24] braddunbar: wafflesburger: yep, try app.set('view options', { cache: true })
[20:24] wafflesburger: i think you are right
[20:25] wafflesburger: that did not have a positive effect though
[20:25] jbpros has joined the channel
[20:27] braddunbar: wafflesburger: ok, you also have to pass a 'filename' param for jade's cache to work
[20:27] HAITI has left the channel
[20:28] wafflesburger: i see filename Used in exceptions, and required by cache
[20:28] braddunbar: wafflesburger: seems like express does that automatically though =/
[20:28] xeodox: How come after I did "sudo npm install forever", I can't access "forever" when I type it? 
[20:29] stagas: xeodox: I think you need the -g flag
[20:29] xeodox: -g flag when npm?
[20:29] stagas: npm install forever -g
[20:29] wafflesburger: what is the filename supposed to be braddunbar, a default template file?
[20:31] braddunbar: wafflesburger: its supposed to be the path to the view, which I believe express passes in by default
[20:31] xeodox: whats "g" do?
[20:31] wafflesburger: so you have to enable caching for each view you want cached braddunbar? o_O
[20:33] mendel_: some backbone ninja here?
[20:33] nexxy: xeodox, global
[20:33] mendel_: backone controller is using the window.location.hash, is there a way to use #!, or should I just use that as part of my url
[20:34] thalll has joined the channel
[20:34] braddunbar: wafflesburger: it seems that way, yes
[20:35] mendel_: xeodox: http://blog.nodejs.org/2011/05/01/npm-1-0-released/
[20:35] xeodox: tha
[20:40] ewdafa: does mr. issacs still come to irc?
[20:40] braddunbar: wafflesburger: it seems the jade cache won't have any effect, express bypasses it anyway and just uses its own
[20:41] wafflesburger: so it should be caching automatically
[20:41] wafflesburger: ?
[20:41] stevenj has left the channel
[20:41] braddunbar: that was the jump you saw when including app.set('view cache')
[20:42] fr0stbyte has joined the channel
[20:42] wafflesburger: i see
[20:42] awenkhh_ has joined the channel
[20:42] chapel: ewdafa: often
[20:43] peerless has joined the channel
[20:43] wafflesburger: it saddens me because lighttpd and php are being twice as fast braddunbar:(
[20:44] chapel: mendel_: join #documentcloud for backbone.js talk
[20:44] mendel_: ah thnx
[20:44] LowValueTarget has joined the channel
[20:44] vikstrous has joined the channel
[20:45] braddunbar: it does seem odd...have you tried a different view engine?
[20:45] wafflesburger: i have not 
[20:45] ewdafa: chapel: aha, thank you
[20:45] wafflesburger: because it seemed that everyone abandoned haml for jade
[20:46] braddunbar: what are you using to measure reqs/sec?
[20:46] braddunbar: (just curious)
[20:47] wafflesburger: apache bench
[20:48] hink has joined the channel
[20:49] wafflesburger: ab -n 10000 -c 100 http://localhost:3000/
[20:49] wafflesburger: and ab -n 10000 -c 100 http://localhost:80/
[20:51] a|i: what's he difference between socket.send, socket.broadcast and socket.emit?
[20:52] mendel_: a|i: socket.send is to the client, socket.broadcast to all, socket.emit as a event emitter
[20:52] fr0stbyte_ has joined the channel
[20:52] patcito has joined the channel
[20:53] a|i: mendel_: I think broadcast is to all but the client?
[20:53] chapel: wafflesburger: there are all the available javascript template languages http://jsperf.com/dom-vs-innerhtml-based-templating/146
[20:53] p_nitsch has joined the channel
[20:53] a|i: mendel_: also, what's the difference with emit and broadcast, in practice? emit sends too all too?
[20:54] a|i: where is the documentation for sockio-node anyway
[20:54] mendel_: but you're talking about .7 pre now right
[20:54] mendel_: that's not fully functional yet, as I udnerstand it
[20:55] mendel_: there is no client for the .7 yet
[20:55] a|i: mendel_: which function is not functionl?
[20:55] a|i: mendel_: I just read this: https://github.com/LearnBoost/Socket.IO-node
[20:55] mendel_: "Socket.IO 0.7-pre" https://github.com/LearnBoost/Socket.IO-node/commit/1514af064f7b9a319df2e87a7da6f3cc0f07ce16
[20:57] wafflesburger: so braddunbarit appears that this should not be a bottleneck
[20:57] wafflesburger: as they get between 10k-1mill renders / second?
[20:59] davidcoallier has joined the channel
[20:59] lluad has joined the channel
[20:59] dve_: got a bit of a pointless question but... im intrigued to know why process.argv is call as such? what does argv stand for?
[20:59] braddunbar: wafflesburger: i got an error for jade on that page...
[20:59] mscdex: dve_: command line arguments
[21:00] wafflesburger: me too
[21:00] dve_: mscdex: yes but why argv?
[21:00] dve_: whats the v?!
[21:00] Erik_O has joined the channel
[21:00] Navy has joined the channel
[21:00] mscdex: dve_: argument values... it's the same variable name as most c/c++ programs
[21:00] Navy: Hey there
[21:00] wafflesburger: but i assume it's between them somewhere xD
[21:00] dve_: mscdex: oooh.. makes sense now :)
[21:01] Navy: I have some trouble with a general understanding of arrays in JS/nodejs. My code is working, but I dunno why
[21:01] Navy: http://paste.org/pastebin/view/32908
[21:01] braddunbar: wafflesburger: i guess so, bout to try it with ejs
[21:01] Navy: In line 6 I create a new array on devices[num]
[21:01] markstory has joined the channel
[21:01] Navy: and in line 14 I set the callback-function on the same point
[21:02] Navy: why can I access the array AND the function?
[21:02] Navy: second line is 13, not 14
[21:02] squeeks: Navy: because it's not an array, it's an object
[21:02] vicapow has joined the channel
[21:03] Navy: But even then, the identifier of devices[num] should identify an other object OR an string
[21:03] Navy: but it does both
[21:03] braddunbar: wafflesburger: i get the same thing with ejs, about 1k req/sec
[21:04] wafflesburger: weird
[21:04] wafflesburger: something very stupid /must/ be happening right?
[21:04] __tosh has joined the channel
[21:05] braddunbar: wafflesburger: i don't think so actually, i'm on a netbook and with just res.end() i only get 1.3k req/sec
[21:05] braddunbar: wafflesburger: so not much different
[21:05] mohit has joined the channel
[21:05] wafflesburger: you get better on a netbook than i get on a 4ghz pentium d xD
[21:06] braddunbar: wafflesburger: used ejs though, try that and see what happens
[21:09] wafflesburger: alrighty i shall
[21:10] braddunbar: wafflesburger: yea, much slower with jade for me - 700 req/sec
[21:10] dnolen has joined the channel
[21:11] wafflesburger: weird ok
[21:11] wafflesburger: as soon as i figure out why node is running in bh
[21:11] wafflesburger: bg*
[21:11] wafflesburger: i shall try ejs
[21:12] braddunbar: wafflesburger: i gotta dip, have fun =)
[21:13] copongcopong has joined the channel
[21:14] wafflesburger: still about 1100 with ejs
[21:14] amerine has joined the channel
[21:17] norviller has joined the channel
[21:18] jmar777 has joined the channel
[21:19] EvilPacket has joined the channel
[21:22] Spion has joined the channel
[21:28] charlesjolley- has joined the channel
[21:30] vikstrous: guys, is it a good idea to build an api for my js to use which works entirely over websockets?
[21:31] Draggor: vikstrous: maybe make it work with socket.io instead?
[21:31] chapel: vikstrous: what are you trying to do?
[21:31] ako has joined the channel
[21:31] ericnakagawa has joined the channel
[21:32] vikstrous: i want to build an app that uses a lot of client side js and just talks to the server for data.... so just like REST apis...
[21:32] vikstrous: except i want it to be faster and cooler :P
[21:33] vikstrous: i'll also have 2 way communication eventually
[21:33] chapel: `v git dnode @ vikstrous
[21:33] v8bot: vikstrous: substack/dnode - GitHub - https://github.com/substack/dnode
[21:33] chapel: there, thats what you want
[21:33] chapel: :)
[21:33] vikstrous: haha alright i'll check it out
[21:33] SubStack: chapel <3
[21:34] chapel: SubStack: well its the right tool for the job :)
[21:34] Draggor: I might switch to dnode
[21:34] chapel: I will build a dnode army!!!
[21:34] Draggor: I'm currently using a veeeeeeery primitive json thing to talk back and forth right now
[21:35] SubStack: that works but it can get annoying if you need to switch stuff up
[21:36] HerrBlume has joined the channel
[21:36] chapel: yeah
[21:36] vikstrous: woah... i use the server to run a function (the callback) which executes on the client side with whatever parameters i pass?
[21:36] chapel: using json api is good for letting other people hook up to it, but for doing your own stuff, dnode is awesome
[21:36] SubStack: vikstrous: functions execute on the side they were originally defined
[21:36] SubStack: but the other side gets shim functions that rpc back to the other side
[21:37] vikstrous: well yeah, with parameters from the other side
[21:37] HerrBlume: Hello, is there an api documentation?
[21:37] Draggor: HerrBlume: http://nodejs.org/docs/v0.4.7/api/
[21:38] Draggor: linked from the main page yo
[21:38] vikstrous: hmm so with dnode i can't really have a pure json API?
[21:38] HerrBlume: thanks
[21:38] vikstrous: what would i use for that?
[21:39] chapel: vikstrous: you could still have a pure json api, but that would have to be separate
[21:39] Draggor: vikstrous: http://socket.io/
[21:39] chapel: but from your description, dnode is exactly what you want
[21:39] tjholowaychuk has joined the channel
[21:40] vikstrous: Chapel: actually yeah nvm if it's a json api over websockets that's not really easy to use by non-browser clients anyways
[21:40] Marak has joined the channel
[21:40] yozgrahame has joined the channel
[21:40] matyr_ has joined the channel
[21:42] SubStack: vikstrous: dnode is not just socket.io
[21:42] vikstrous: alright i'll read more about it
[21:42] SubStack: it's actually amazingly easy to string together backend node processes and browser connections
[21:43] chapel: yep :)
[21:43] SubStack: you can just .listen(5000).listen(webserver)
[21:43] chapel: <3 SubStack
[21:43] nexxy: ACTION detects hardcore bromance in the vicinity
[21:44] iaincarsberg: from what I've seen dnode looks amazingly awesome
[21:44] darshanshankar has joined the channel
[21:44] SubStack: dnode is great for freestyle rhyming markov rap battles
[21:44] charlesjolley- has joined the channel
[21:45] nexxy: lol
[21:45] iaincarsberg: hehe
[21:45] chapel: lol
[21:45] chapel: SubStack: I can't wait to see the video
[21:47] Swimming_bird has joined the channel
[21:48] abraham has joined the channel
[21:48] amerine has joined the channel
[21:49] criswell has joined the channel
[21:49] Me1000 has joined the channel
[21:50] xeodox has joined the channel
[21:50] mnemonic: hi
[21:52] a|i has joined the channel
[21:52] a|i has joined the channel
[21:53] kryptom has joined the channel
[21:54] xer0x: yeah substack, thanks for dnode, I think it might be just the RPC setup that I need
[21:54] p_nitsch has joined the channel
[21:55] jbpros has joined the channel
[21:55] moshe has joined the channel
[21:56] aaronblohowiak: is there a way to have an "edge" package in npm ?
[21:56] aaronblohowiak: or do you just postpend -edge to the package name?
[21:57] matyr has joined the channel
[21:58] peerless has joined the channel
[22:00] trumpett has joined the channel
[22:02] flippyhead has joined the channel
[22:04] davidcoallier has joined the channel
[22:04] kersny: l1nuxg33k
[22:04] kersny: whoops
[22:04] kersny: wrong window
[22:05] lluad: This is not the password prompt you're looking for. Move along.
[22:05] Marak: AHAHAHA
[22:05] kersny: yeah, my sooper leet password
[22:05] Marak: kersny: time to cycle that one
[22:06] Marak: its funny, if you have windows or macos and type your password into the irc window it will actually come up as stars, thats what you get for running linux
[22:06] Marak: watch
[22:06] Marak: ***********
[22:06] Marak: see
[22:07] trumpett: hunter2
[22:07] xer0x: Marak :)
[22:07] trumpett: doesn't look like stars to me
[22:07] xer0x: ACTION is now logging into trumpett's box
[22:07] Marak: bash.org in the house
[22:08] a|i: sunofthebeach
[22:08] a|i: no starts
[22:08] Marak: i got on bash once http://bash.org/?search=JimBastard&sort=0&show=25
[22:11] squeeks: It's like some IRC cred. "Yeah, something I said is on bash"
[22:11] Marak: yeah it is lol
[22:11] squeeks: http://bash.org/?147493 <- I said this, maybe 8 years ago?
[22:11] trumpett: so they're all real quotes then?
[22:11] squeeks: trumpett: maybe not *all* of them, but a lot are.
[22:12] m00p has joined the channel
[22:12] squeeks: I can at least vouch for the few I've been involved with
[22:13] jesusabdullah: Marak: True story? That's awesome.
[22:13] aaronblohowiak: anyone here use Haml.js ?
[22:13] tjholowaychuk: aaronblohowiak: use jade
[22:13] tjholowaychuk: haml.js should still work
[22:13] tjholowaychuk: but
[22:13] tjholowaychuk: jade is the successor
[22:13] nexxy: omfg Marak 
[22:13] nexxy: troll moar
[22:15] Marak: jesusabdullah: yeah, i have a full story written up about it, its offline now
[22:15] aaronblohowiak: tjholowaychuk: i hate pipes
[22:15] Marak: i took that site down
[22:15] Marak: maybe ill do a book at some point later
[22:15] tjholowaychuk: aaronblohowiak: mmk lol
[22:15] jhurliman has joined the channel
[22:16] aaronblohowiak: tjholowaychuk: what do you mean by "code is escaped by default for security" ?
[22:16] tjholowaychuk: = foo
[22:16] aaronblohowiak: oh
[22:16] aaronblohowiak: k
[22:16] aaronblohowiak: you doing attribes as well?
[22:16] tjholowaychuk: yup
[22:17] aaronblohowiak: strin interpolation?
[22:17] aaronblohowiak: *string
[22:18] tjholowaychuk: #{} escapes !{} does not
[22:18] squeeks: smells like ruby.
[22:19] boghog: i typed my password in an irc window once
[22:19] squeeks: hunter2?
[22:19] aaronblohowiak: i am planning on adding escaping to haml.js today
[22:19] boghog: made me question wether focus on mouseover was such a good idea
[22:19] davidcoallier has joined the channel
[22:19] squeeks: http://bash.org/?244321
[22:19] aaronblohowiak: boghog: i just use the domain name of the site in upcase as my password, so i can usually pass it off as the beginning of an angry rant
[22:20] JustCute has joined the channel
[22:20] tjholowaychuk: aaronblohowiak: Ideall we would just add haml syntax support to jade
[22:20] boghog: :o
[22:20] tjholowaychuk: ideally*
[22:20] tjholowaychuk: or similar
[22:20] tjholowaychuk: because haml.js is quite old now
[22:21] tjholowaychuk: unless you mean haml-js or w/e
[22:21] tjholowaychuk: which is barely haml
[22:21] aaronblohowiak: tjholowaychuk: nah, i meant haml.js
[22:22] moz87 has joined the channel
[22:26] gtramont1na has joined the channel
[22:26] Draggor: Anyone here do oauth in node.js?  Which is the preferred oauth package to use?
[22:27] jhurliman: Draggor, node-oauth seems reasonable so far
[22:27] mike5w3c_ has joined the channel
[22:29] bnoguchi has joined the channel
[22:29] Navy: Argh
[22:29] Navy: At a http-server
[22:30] aaronblohowiak: bnoguchi: Draggor was asking about ouath
[22:30] aaronblohowiak: Draggor: bnoguchi is an author of an oauth package
[22:30] Navy: I want to write the response in the request.on("end"-function
[22:30] Navy: But the scope dont let me access the response
[22:30] edude03 has joined the channel
[22:30] bnoguchi: Draggor: https://github.com/bnoguchi/everyauth - Supports a lot of the OAuth providers, with a bunch of documentation
[22:31] Draggor: bnoguchi: sweet, thanks!
[22:32] Draggor: I'm looking at ouath2 with google for now
[22:32] aaronblohowiak: bnoguchi: do you have an example app?
[22:32] bnoguchi: aaronblohowiak: Yeah, under ./example
[22:33] Marak: I'm trying to woo Joe Hewitt to node.js over twitter
[22:33] Marak: i think hes good to go
[22:35] bnoguchi: Draggor: I see, working on getting google oauth2 out the door this wknd, along with a few others.
[22:35] Draggor: ahh
[22:35] Draggor: I see in npm there's some oauth2 stuff, in theory that should work for me?
[22:36] Marak: just remember - https://twitter.com/#!/maraksquires/status/66676325217349632
[22:36] Marak: i was the first to say it! :-D >.<
[22:36] Marak: https://twitter.com/#!/maraksquires/status/66993552932077568
[22:36] jhurliman: bnoguchi, does everyauth support facebook login through the javascript api (FB.login)?
[22:36] Marak: operation recruit joe hewitt 
[22:36] Navy: Can anyone tell me, why I cant access the "response"-Variable in line 23
[22:36] Navy: http://paste.org/pastebin/view/32916
[22:37] Navy: the scope seems is hard to understand for me
[22:37] Navy: seems to be
[22:37] bnoguchi: jhurliman: Currently, only server-side version; the facebook JS SDK would be trivial to implement, though
[22:37] jhurliman: thanks
[22:38] zoowee has joined the channel
[22:38] Marak: Navy: it looks like you close the response on line 26. you should be able to access the response variable on line 23, but its gonna be already closed
[22:38] Marak: Navy: i think, its kinda hard to read your code with that indentation
[22:38] Navy: I know, eclipse put other tabs then paste.org
[22:38] Marak: Navy: also, you should use gist instead
[22:39] Marak: not paste.org
[22:39] chapel: aaronblohowiak: did you update npm with the restartr changes?
[22:40] phyrephox has joined the channel
[22:40] Navy: Ok, now it is sending the string, but not the value of the variables
[22:40] aaronblohowiak: chapel: yep!
[22:40] chapel: cool
[22:41] Marak: Navy: updated code? preferable on a gist?
[22:41] Marak: https://gist.github.com/
[22:42] mikl has joined the channel
[22:42] mikl has joined the channel
[22:42] criswell has joined the channel
[22:43] mscdex: rap.js
[22:43] Marak: lol
[22:43] Navy: https://gist.github.com/960921
[22:43] zoowee: how can i fix my sudo node ...somehow it is pointed to version 4.5 while as my normal user node is updated correctly
[22:43] squeeks: If Node.js was rap, it wouldn't be called a "callback" it would be a "hollerback"
[22:44] mscdex: correction: hollaback
[22:44] aaronblohowiak: squeeks: check out SubStack's markov node rap
[22:44] squeeks: Thank you.
[22:44] mscdex: DJ Marak on the scene
[22:44] aaronblohowiak: chapel: if you want to continue to refine, i will add you to the committer list and npm repo
[22:44] Marak: mscdex: i cant wait for the nodeconf videos
[22:45] chapel: okay, atm somewhat busy, but I have some ideas
[22:45] hellp has joined the channel
[22:46] Marak: Navy: whats up with the name anonymous function on line 1?
[22:46] Marak: im not sure if that is kosher, it might be...but i never do that
[22:46] Navy: Oh, I tried to access the variables by using that name
[22:46] Marak: the named anonymous function*
[22:47] Marak: Navy: that example just looks wonky, where did you get that from?
[22:47] Navy: I deleted the name, but – as expected – nothing cahnged
[22:48] Navy: I createdt it nearly onb my own
[22:48] Navy: just used the docu
[22:48] Marak: Navy: i got 4 minutes to kill, i will fork, give me one moment
[22:48] Marak: see if i can get to echo
[22:48] Navy: :) Thank you
[22:49] Navy: I still have problems to think asynchroneous
[22:49] aaronblohowiak: Marak: you still using haml.js ?
[22:50] Marak: aaronblohowiak: probably somewhere, i cant keep track of all my deps lol
[22:50] Marak: i think in wheat, for nodejitsu blog
[22:50] criswell has joined the channel
[22:50] Marak: its a dep for wheat aaronblohowiak 
[22:50] Marak: also, nice to finally meet you aaronblohowiak 
[22:50] aaronblohowiak: Marak: i added Haml comments, HTML comments and multi-line JS executable blocks.
[22:50] Marak: :-)
[22:50] aaronblohowiak: Marak: and you as well!
[22:51] Marak: aaronblohowiak: pull request to wheat to upgrade deps? so tim can pull?
[22:51] A_MTB has joined the channel
[22:51] Marak: prob should test too...
[22:51] Marak: brb
[22:51] A_MTB: Yay got my joyent server
[22:51] A_Nub: time to load up node
[22:51] A_Nub: and code my app
[22:51] aaronblohowiak: Marak: i have push access to the haml.js repo, but not to npm publish, i think.. will ping tim when all 0.3 bugs are sorted
[22:52] TomY has joined the channel
[22:52] Marak: Navy: where is the rest of that code? is that it?
[22:53] mscdex: anyone happen to know what algorithm(s) V8 uses for Array.indexOf ?
[22:53] Marak: Navy: this works for me: https://gist.github.com/960930
[22:54] sivy has joined the channel
[22:54] Navy: I will try
[22:54] Marak: http_back is not defined
[22:54] Marak: btw
[22:54] Marak: so its gonna dump nothing 
[22:54] Navy: This is a function outside of this block
[22:54] Marak: HTTP-request ReferenceError: http_back is not defined 
[22:55] Marak: its not defined anywhere in the code you showed me
[22:55] mscdex: er nevermind, found the answer -- in-place quicksort or insertion sort for small arrays
[22:55] mscdex: :)
[22:55] Marak: so i assume your issue is your other code
[22:55] Marak: also, you REALLY need to be aware of closing response objects
[22:55] mscdex: er wait haha
[22:55] Marak: your IF statement at the top of the code is brutal
[22:55] Marak: i added an else, response.end() for now
[22:55] Marak: you REALLY need to close those on every request
[22:56] mscdex: shoot, it doesn't attempt a binary search
[22:56] Navy: Ok, I will do
[22:57] Navy: But the data from http_back(data) are comming back corretly
[22:58] tjholowaychuk has joined the channel
[22:59] Marak: Navy: your example is working here, it closes the response and outputs and expected. what unexpected behavior are you seeing?
[22:59] MrTopf has joined the channel
[22:59] Marak: Navy: what is your node -v
[22:59] Navy: v0.5.0-pre
[22:59] Navy: I could use v0.4.1
[23:00] Navy: last one is in the repositories
[23:02] moz87 has joined the channel
[23:02] hybsch has joined the channel
[23:02] moz87: does anyone know if this error could be anything to do with my node.js server, I'm trying to connect to it using web-socket-js
[23:02] moz87: [WebSocket] sent key3: äaþx5×(
[23:02] moz87: [WebSocket] closed
[23:02] Aria has joined the channel
[23:03] Navy: https://gist.github.com/960921
[23:03] Navy: I added the function above
[23:03] zeade has joined the channel
[23:03] Navy: This wont work
[23:06] MikhX has joined the channel
[23:07] Marak: Navy: HTTP-request ReferenceError: num is not defined 
[23:07] jmckind has joined the channel
[23:07] Navy: Arg, yes, define num as 1 or anything
[23:08] wafflesburger: is there any process monitor equivalent fer linux?
[23:09] wafflesburger: process epxlorer
[23:09] wafflesburger: to watch file access in real time
[23:09] Marak: Navy: works: https://gist.github.com/960947
[23:09] Marak: Navy: i dont think you are having a function scope problem at all
[23:10] Marak: and im not gonna help you anymore, ive lost patience for now
[23:10] Marak: next time send working gists with all the code
[23:10] Navy: Ok, thanx anyway…
[23:10] Marak: Navy: read what i sent you
[23:10] Marak: Navy: its working
[23:10] Navy: I do
[23:10] Navy: Thank you
[23:10] Navy: Really
[23:10] Navy: I will test it
[23:11] Marak: Navy: anytime. if you need help, send the entire block of code. making someone guess / have to add additional lines such as require('http') etc, isnt good
[23:11] Marak: ttyl
[23:11] Navy: Have to change the function back to its original. It was way to long to post it here
[23:11] Marak: thats the other problem
[23:11] Navy: Allright
[23:11] davidcoallier has joined the channel
[23:11] Marak: narrow down your issue to a small reproducible case
[23:11] Marak: not a pseduo-code stub
[23:11] sion2k has joined the channel
[23:12] newy_ has joined the channel
[23:16] Aria has joined the channel
[23:17] markwubben has joined the channel
[23:18] tilgovi has joined the channel
[23:19] moz87: does anyone have any idea on my problem? or where I should to solve it, if its not here
[23:19] moz87: client is automatically closing the connection
[23:20] squeeks: moz87: what client? sorry, I missed it, too busy chatting up some fit bird, post your q again and I'll look at it since she's cold shouldering me
[23:20] CiRlE has joined the channel
[23:20] moz87: :)
[23:20] moz87: I am getting this in firebug, when I attempt to open a connection to my server
[23:20] __tosh has joined the channel
[23:20] moz87: [WebSocket] sent key3: äaþx5×(
[23:20] moz87: [WebSocket] closed
[23:20] squeeks: using socket.io?
[23:21] moz87: web-socket-js
[23:21] moz87: ws = new WebSocket("ws://www.mysite.com:1337");
[23:21] moz87: if i go to http://www.mysite.com:1337 then I get a Hello World output, which is all I am expecting right now
[23:24] squeeks: I really have no idea about web-socket-js, sadly.
[23:24] squeeks: I do, however, warmly recommend socket.io, simply because it handles that stuff very, very well.
[23:25] moz87: interesting
[23:25] moz87: :)
[23:25] squeeks: it does websockets, but it'll gracefully fall back and do XHR long poll, flash etc, and you don't have to care about any of it.
[23:25] johnhamelink: Hey there, when I try to use "hilighter" from npm on a string, I get a "TypeError: undefined is not a function"
[23:26] johnhamelink: Any ideas?
[23:26] squeeks: johnhamelink: pastebin some code.
[23:26] johnhamelink: squeeks, will do
[23:27] johnhamelink: squeeks, http://codepad.org/uZj4dOMG
[23:27] johnhamelink: using highlight@0.1.0 ./node_modules/highlight
[23:28] moz87: squeeks: yeah yeah thats what I'm interested in thanks
[23:29] mattp_: is expressjs the defacto web framework for node?
[23:30] jmckind has joined the channel
[23:30] phyrephox: is there an actively maintained couchdb library for node?
[23:30] Hamms has joined the channel
[23:30] phyrephox: or what are node people using as their document stores?
[23:30] squeeks: johnhamelink: var hl = require('highlight');
[23:30] squeeks: no need to call .Hilight at the end
[23:30] [[zz]] has joined the channel
[23:31] johnhamelink: Ok, thanks - I was following the docs on their github ^_^
[23:31] squeeks: if their docs are out of date, fork the repo and patch them.
[23:31] squeeks: I'm sure you'll help a lot of other people out that way.
[23:31] johnhamelink: :)
[23:33] johnhamelink: squeeks, Looks like I'm still getting this "CALL_NON_FUNCTION (native)" error
[23:33] sridatta has joined the channel
[23:33] squeeks: call hl.Highlight
[23:33] johnhamelink: Object #<Object> has no method 'highlight'
[23:33] squeeks: capital H.
[23:34] johnhamelink: Object #<Object> has no method 'Highlight'
[23:34] squeeks: get into the node repl and work it out.
[23:35] johnhamelink: ok, it's weird because console.log(hl) shows { Highlight: [Function] }
[23:35] squeeks: so hl.Highlight(''); should work.
[23:35] squeeks: (it did for me)
[23:35] brettgoulder has joined the channel
[23:36] MikhX has joined the channel
[23:37] johnhamelink: squeeks, very odd - console.log(hl.highlight('')); gives an error, but if you assign it to a variable first it works. Why is this?
[23:37] muk_mb has joined the channel
[23:37] squeeks: again, function names are case sensitive.
[23:37] squeeks: hl.Highlight
[23:38] johnhamelink: Sorry, I'm typing manually not copy-pasting
[23:38] johnhamelink: I am using caps
[23:38] squeeks: Okay.
[23:38] johnhamelink: weird, now it is working...
[23:38] johnhamelink: I must've done something stupid >_<
[23:39] chrislorenz has joined the channel
[23:41] ryanj has joined the channel
[23:42] Silly_Wabbit has joined the channel
[23:42] wafflesburger: what's the best way of profiling nodejs?
[23:44] Prism has joined the channel
[23:45] sridatta: I have a question about UDP multicasting. I see how to add membership to a multicast group
[23:45] nexxy has joined the channel
[23:45] nexxy has joined the channel
[23:45] sridatta: but how do I broadcast or send a message to that group?
[23:46] m0rganic1 has joined the channel
[23:46] m0rganic1 has left the channel
[23:46] sarkis has joined the channel
[23:46] sarkis: hey guys what are some good intro resources to node.js for programmers?
[23:47] tbranyen: for programmers? http://nodejs.org/docs/v0.4.7/api/
[23:50] johnhamelink: howtonode is great, give it a google ;)
[23:50] wafflesburger: anyone have tips for profiling node
[23:50] galaxywatcher_ has joined the channel
[23:50] a|i has joined the channel
[23:50] a|i has joined the channel
[23:50] bnoguchi: Draggor: Google OAuth2 is now implemented in everyauth
[23:51] brownies has joined the channel
[23:52] jhurliman: imo the api docs don't do a very good job of summarizing node.js for programmers. how the scoping differs from browser-based JS programming, best practices for including libraries with npm, how to write clean code in a language that is mostly based on continuation passing style, etc. not that it should, being a simple api reference
[23:52] sarkis: ok awesome, so i installed npm and ran npm install express... it looks like npm was meant to get packages on a project basis? as it installed it at the directory i was at + node_modules
[23:52] squeeks: johnhamelink: the API docs are for "I know JS, I don't know how Node deals with JS".
[23:53] wafflesburger: you can install globally or in project directory sarkis
[23:53] wafflesburger: http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/
[23:53] johnhamelink: squeeks, I knew JS reasonably well before I started using node, I just found it hard to get my head round how I /should have been writing/ js
[23:53] wafflesburger: tldr; install in project directory
[23:54] squeeks: johnhamelink: the other assumption it makes, particularly with 'net' and 'dgram', is that you know how sockets, TCP etc work.
[23:54] squeeks: and basic networking
[23:54] johnhamelink: that is true :)
[23:54] FireFly|n900 has joined the channel
[23:54] jdp has joined the channel
[23:55] squeeks: johnhamelink: some questions in here that lack complete basic UNIX 101 or Networking 101 made me realise this.
[23:56] towski has joined the channel
[23:56] johnhamelink: Yeah, I think node is actually a pretty good tool for learning these sort of things
[23:56] johnhamelink: it lets you play in a very logical manner
[23:57] squeeks: I think of it the other way. I think that sysadmins, devops and guys like me who do know networking basics have now got a tool that's not as difficult as erlang to write daemons and talk on raw sockets without tying a noose around ourselves with netcat or whatever
[23:57] wafflesburger: btw install supervisor through npm xD
[23:57] wafflesburger: it will automatically reload your js files
[23:58] johnhamelink: forever is another pretty good one :)
[23:58] a|i: when sending an object by socket down the wire, what's a good way of filtering attribs of the object, or filtering the whole object, based on the authorization of the client?
[23:58] darshanshankar has joined the channel
[23:59] a|i: is there a lib already for that?
[23:59] jmoyers: i had been contemplating writing something
[23:59] jmoyers: with that concept -- use connect/express like middleware concept
[23:59] jmoyers: i think though, that socket.io is going in that direction
[23:59] jmoyers: last slide of socket.io nodeconf talk was 'express.io'
[23:59] jmoyers: no other details though ;-) <-- is waiting on videos
[23:59] wafflesburger: anyone know why as soon as i start using jade, even rendering an empty template, my requests/sec get cut in 1/2
