[00:00] grom358: does jsdom support URL parameters?
[00:01] reid has joined the channel
[00:01] charrly: thanks guys, that's helps.
[00:01] rtgibbons has joined the channel
[00:04] grom358: the thing is, this works, http://pastebin.com/zqbep1q9
[00:04] dmitrig01 has joined the channel
[00:04] Destos has joined the channel
[00:05] MrBig has joined the channel
[00:06] Gekz has joined the channel
[00:06] Gekz has joined the channel
[00:06] piscisaureus_ has joined the channel
[00:07] te-brian: Ok.. I'd like to update/extend the functionality of an exsiting npm project.. but it is out of date, has no github or url.  http://search.npmjs.org/#/node-wkhtml     What do I do ?
[00:07] te-brian: I could make node-wkhtmltopdf (a new project).. but that seems redundant
[00:08] hz has joined the channel
[00:08] aslant has joined the channel
[00:08] grom358: omg.. fix it.. use %22 instead of "
[00:09] warz: te-brian, download the code from npm and start editing it?
[00:09] te-brian: warz: But I will be unable to 'push' the updated code back to npm correct?
[00:10] rudyl313 has joined the channel
[00:10] warz: you wont be able to replace that npm entry for it, unless you can maybe convince somebody that its dead and youre trying to take it over. i dont know the policy on that.
[00:10] te-brian: warz: I guess I could spin off my own project and then contact the appropraite people to consider merging them later
[00:10] rudyl313: if I create a server with express.. how can I get the ip address of the server (it needs to be the remotely accessible ip and not 127.0.0.1)?
[00:11] cmr: rudyl313: Doesn't matter, just bind to 0.0.0.0
[00:11] cmr: rudyl313: Elsewise, whatismyip.org
[00:11] te-brian: rudyl313: Check the docs on process
[00:11] te-brian: rudyl313: err.. nvm.. that prob will only have the port
[00:12] rudyl313: cmr: I need to do it programmatically
[00:12] cmr: rudyl313: then use http.request :)
[00:12] cmr: There's no way to know your own IP address.
[00:12] cmr: Another service has to tell you
[00:12] ryanfitz has joined the channel
[00:13] rudyl313: cmr: ok thanks
[00:13] cmr: rudyl313: But you shouldn't need to know your own IP address, because you can just bind to all IPs with 0.0.0.0
[00:14] alystair: anyone here work with mongoose? I need help with external keys/ownership/etc :S
[00:15] MatthewS has joined the channel
[00:15] rudyl313: cmr: in this use case I do... I'm sending my ip address to a central server that registers it's existence .. my boss won't let me rely on the request object on the server side
[00:15] cmr: rudyl313: ...why not?
[00:15] rudyl313: cmr: not reliable.. the request might be going through proxy
[00:16] idiotinthewoods has joined the channel
[00:16] nickdc has joined the channel
[00:17] cmr: rudyl313: Well if you're going through a proxy, you'll definitely not be able to get your remote IP because whatismyip.org and friends just use the request
[00:18] idiotinthewoods: Hi there, I'm trying to access a xml hosted on the internet using the httpclient.request method. However as far as I can tell I can only react upon receiving chunks and not the whole message?
[00:18] rudyl313: cmr: resorting to parsing ifconfig
[00:18] enmand has joined the channel
[00:18] cmr: rudyl313: That doesn't tel you your remote IP
[00:18] rudyl313: cmr: I need local ip
[00:19] alystair: no people here knowledgable with mongoose at all? I could use an example of a complex schema to learn how to write my own 
[00:19] idiotinthewoods: what exactly does httpclient.request return?
[00:19] cmr: Well why didn't you say so. Is iproute2, ifconfig is deprecated
[00:19] cmr: "ip addr show"
[00:19] cmr: Easier to parse
[00:20] rudyl313: cmr: thanks
[00:20] isaacs_ has joined the channel
[00:21] Wizek has joined the channel
[00:23] nickdc has joined the channel
[00:23] tilgovi has joined the channel
[00:25] neurodrone has joined the channel
[00:25] alystair: am I just asking stupid questions ~-~
[00:26] philipd has joined the channel
[00:26] warz: alystair, what is a complex schema? mongodb schemas arent that complex at all.
[00:27] warz: once youre in embedded documents, its the same as any other document.
[00:27] TheFuzzb_ has joined the channel
[00:27] alystair: just trying to figure out how to reffer to external objectID or keys, documentation is pretty sparse 
[00:27] warz: quit worrying about what a complex schema looks like and just focus on what your schema needs to look like.
[00:28] alystair: just 'ObjectID' ?
[00:28] warz: some libs support the DBRef stuff or you can just manually query for object ids yourself.
[00:29] CarterL has joined the channel
[00:29] warz: why dont you name it something useful, like "user_id", or something?
[00:29] alystair: ACTION is using mongoose
[00:29] warz: i guess im confused. if mongoose makes it difficult to use mongodb, then i wouldnt use mongoose.
[00:29] Wizek-other has joined the channel
[00:30] alystair: it doesn't, I'm just new to all this mess
[00:30] warz: personally, i wouldnt even recommend mongoose. ive been using mongodb for awhile, and i dislike any kind of ORM for it.
[00:30] warz: have you seen mongolian?
[00:30] context: warz: i dont think its mongoose makes it difficult, its; the user is making it difficult ;)
[00:31] warz: ive been liking mongolian. i switch from the native lib to mongolian a few weeks ago.
[00:35] alystair: Now I'm entirely confused
[00:35] warz: about which part?
[00:35] alystair: reading about mongolia and how it differs from mongoose and how I'd rewrite my schema and do everything over :P
[00:36] warz: are you at least familiar with mongodb? i wouldnt use mongoose, or an orm, if youre not, yet.
[00:36] alystair: nope not at all :D
[00:36] warz: same goes for any database.
[00:36] rio{ has joined the channel
[00:36] gseguin has left the channel
[00:37] charrly has left the channel
[00:37] warz: i can tell, because youre getting hung up on questions about how to use the orm. :p
[00:37] warz: mongolian is closer to the native mongodb shell
[00:37] warz: just setup mongodb and fire up the client it comes with
[00:37] pradeebv has joined the channel
[00:38] warz: and play around
[00:38] warz: build your schema there, first. :)
[00:40] [[zz]] has joined the channel
[00:40] alystair: so much reading and not enough typing ~-~
[00:41] Juan77 has joined the channel
[00:41] TheFuzzball has joined the channel
[00:41] context: alystair: when it came to riak and mongo, i found reading a book helped a bit more than just diving in head first :x (unlike most things)
[00:42] alystair: would you recommend reading the docs on the official mongodb site or 3rd party? currently on official site
[00:44] dre has joined the channel
[00:45] lwille has joined the channel
[00:48] Aria has joined the channel
[00:48] KindOne has joined the channel
[00:50] grom358: one thing I don't get with node.js design.. http://pastebin.com/zRK736mF . How can I run a function after all the jsdom callbacks are completed?
[00:50] KindTwo has joined the channel
[00:51] grom358: only thing I can think of is flag which URLs have been completed and busy wait at end of the script
[00:51] KindTwo has joined the channel
[00:51] strevat_ has joined the channel
[00:53] KindOne has joined the channel
[00:53] alystair: warz - utterly lost in shell
[00:54] chjj: grom358: do `var pending = sets.length;` and at the end of the `done` callback: `if (!--pending) cb();`
[00:54] chjj: grom358: and then you can execute whatever function there
[00:55] chjj: grom358: you could use an async control flow library to make things easier
[00:55] chjj: grom358: like async.js, etc
[00:55] grom358: chjj: ah thanks.
[00:56] CIA-101: node: 03Igor Zinkovsky 07master * rab18d72 10/ deps/v8/build/common.gypi : fix windows build - http://git.io/h_bCFQ
[00:57] tonymilne has joined the channel
[00:57] carlyle has joined the channel
[00:57] gsmcwhirter has joined the channel
[01:00] blueadept has joined the channel
[01:00] captain_morgan has joined the channel
[01:01] warz: alystair, then i just suggest you prioritize what it is that youre trying to learn. if its nodejs, then focus on things that dont use mongodb.
[01:01] warz: if its mongodb, then read the tutorial on their site, or read some blog posts, etc.
[01:02] MrTopf has joined the channel
[01:03] davehamp1onusa has joined the channel
[01:04] reid has joined the channel
[01:05] SebastianFlyte has joined the channel
[01:05] devongovett has joined the channel
[01:09] TN has joined the channel
[01:11] mateodelnorte has joined the channel
[01:13] Destos has joined the channel
[01:14] ryanfitz has joined the channel
[01:14] tomlion has joined the channel
[01:15] superlou has joined the channel
[01:15] mattgifford has joined the channel
[01:15] CIA-101: libuv: 03Igor Zinkovsky 07master * r52511b9 10/ (7 files in 4 dirs): windows: implement uv_loop_new+uv_loop_delete - http://git.io/MN62iw
[01:16] superlou: I was wondering if anyone else is getting an error on node.js from github when trying to run ./configure.  It handgs up on line 172: o['variables']['node_prefix'] = options.prefix if options.prefix else '' 
[01:16] superlou: It's odd since I've compiled successfully before, and it doesn't look like it's changed
[01:17] superlou: Actually, this is on the web server instead of local machine.  Is it possible that the syntax for "if" changed in make recently?  (seems outlandish)
[01:17] michaelhartau has joined the channel
[01:17] merlin83 has joined the channel
[01:17] sorensen__ has joined the channel
[01:17] cmr: superlou: Which commit is this?
[01:17] mcluskydodallas has joined the channel
[01:17] superlou: head, i just did git clone a few minutes ago
[01:17] flipen has joined the channel
[01:18] cmr: superlou: why are you on head? git checkout v0.6.7
[01:18] cmr: (./configure works fine here though)
[01:19] superlou: hmm
[01:21] panosru has joined the channel
[01:22] superlou: is there a way to straight checkout a version?
[01:22] superlou: or do you jsut clone, then reset to the 0.6.7 version?
[01:22] cmr: superlou: clone, then git checkout
[01:22] panosru: hi, could anyone tell me how can I load npm modules in client side? For example I have requirejs module with my express project and I don't know how to use the same requirejs module for the client-side instead of downloading require.js client js :)
[01:23] MatthewS has joined the channel
[01:24] markq: what do you mean straight checkout lol
[01:24] markq: have to clone of course
[01:24] subhaze has joined the channel
[01:25] superlou: yeah, i'm new to git, realized it was stuipd thing to ask sorry
[01:25] superlou: ./configure works on 0.6.7
[01:26] markq: ah np. git is a really wonderful thing once you get used to it ;)
[01:26] warz: you can clone a specific branch. `man git clone` and look for the -b flag.
[01:26] superlou: still getting used to the bit that you have your own full repository to manipulate
[01:26] superlou: instead of svn just referencing the server
[01:26] cmr: warz: The man page says that's for branch, does it also work on any ref?
[01:27] warz: not sure. only ever tried valid branches, heh
[01:27] CIA-101: node: 03Igor Zinkovsky 07master * r2c10257 10/ (7 files in 4 dirs): upgrade libuv to 52511b9ddc - http://git.io/eRoVKg
[01:28] superlou: drat.  ./configure is showing all green lights, but compilation is failing
[01:28] superlou: error: �SOCK_NONBLOCK� undeclared (first use in this function)
[01:29] superlou: are there any libraries needed that configure doesn't check for?
[01:29] Aria: Shouldn't be. What OS?
[01:29] markq: all of them are green?
[01:29] cmr: No, SOCK_NONBLOCK is declared in socket.h
[01:29] panosru: no one tried to use require.js with node? :D
[01:29] cmr: Or actually maybe types.h *shrug*
[01:29] markq: what is require.js
[01:30] superlou: using ubuntu x64
[01:30] superlou: oh, wait
[01:30] superlou: not quite sure what it is
[01:30] superlou: the server's some flavor of linux
[01:30] cmr: superlou: do you have build-essential installed?
[01:30] raincole__ has joined the channel
[01:30] t0mmyvyo has joined the channel
[01:31] superlou: cmr how would i know?
[01:31] markq: apt-get install build-essential
[01:31] k1ttty has joined the channel
[01:31] markq: i think
[01:31] superlou: that's what i'd think
[01:31] superlou: but i don't have apt-get
[01:31] jakehow has joined the channel
[01:31] superlou: which is unfortunate
[01:31] markq: what?!?
[01:31] superlou: it's a shared server
[01:31] markq: ahhhhhhhh
[01:31] markq: that's the problem
[01:31] superlou: I've been trying to follow http://rcrisman.net/article/10/installing-nodejs-on-hostmonster-bluehost-accounts
[01:31] cmr: superlou: dpkg?
[01:31] panosru: markq: http://requirejs.org/docs/node.html
[01:31] superlou: cmr, no dice
[01:32] markq: get a rackspace server
[01:32] cody-- has joined the channel
[01:32] markq: $10 a month
[01:32] markq: for the lowest one
[01:32] superlou: argh
[01:32] superlou: i've been afraid of that
[01:32] markq: honestly
[01:32] cmr: superlou: So... what does "gcc" say?
[01:32] kerang: is new Buffer([octet1]) the same as a string with the decimal value of the octet?
[01:32] superlou: gcc is fine
[01:32] markq: there will be a point where you really want a vps or dedicated server
[01:32] superlou: otherwise ./configure throws up i'd think
[01:33] markq: even though i have successfully installed node on a centos shared server before
[01:33] superlou: markq, yeah, but just hoping to test the most basic of socket.io stuff right now to convince myself if it's working
[01:33] domino14 has joined the channel
[01:33] cmr: superlou: and what's in /usr/include/bits/socket.h ?
[01:34] domino14: i am parsing a JSON string with JSON.parse(string) — is there a way to detect if it has duplicate keys?
[01:34] domino14: i'd like this to fail: JSON.parse('{"x": 3, "x": 6}')
[01:35] scott_gonzalez has joined the channel
[01:35] superlou: cmr, looks find to me, am i looking for a particular string? SOCK_NONBLOCK is not found
[01:35] cmr: superlou: well, that's a problem
[01:35] Aria: domino14: Not with the default parser.
[01:35] cmr: SOCK_NONBLOCK is undefined!
[01:35] Aria: domino14: You could take another parser and add the check.
[01:36] superlou: cmr, is there anything that can be done about it?
[01:36] cmr: superlou: you could hack a #define in one of node's headers, on my system SOCK_NONBLOCK = 04000
[01:36] superlou: yeah, but that's assuming this is the one bit of odd data, and that there's not something more nefarious going on
[01:36] Aria: superlou: The other alternative is to build node on another, similar system (Ubuntu in a VM maybe?) and then copy the binaries over.
[01:36] nickdc: domino14: does that turn x into an array?
[01:37] Aria: superlou: I doubt it's nefarious, it's just a system not set up for building things.
[01:37] neoesque has joined the channel
[01:38] domino14: nickdc: no, it's just x having two different keys
[01:38] domino14: i want that to fail
[01:38] abraxas has joined the channel
[01:38] domino14: but it passes and just assigns the last value to x
[01:38] superlou: is there a recommended lowcost host for people dabbling with node.js?
[01:38] superlou: rails support would be slick too
[01:38] domino14: superlou: AWS has a free tier for a year (don't know if that ran out yet)
[01:38] domino14: for micro
[01:38] domino14: perfect for little projects
[01:39] cmr: superlou: If you really just need something going, I can give you root to a microinstance. I'm not using the free one right now
[01:39] deoxxa: superlou: heroku is free for a single application instance, but a virtual machine is even free-er
[01:40] superlou: well, in theory, if the app seems to be updating between tabs, is there a reason it wouldn't work on a proper server?
[01:40] superlou: between different clients?
[01:40] deoxxa: domino14: that's now how JSON works - the specification leaves duplicate keys unmentioned, but pretty much every parser out there treats it like javascript in that the last definition of a field wins.
[01:40] superlou: my understanding is each tab's a unique client anyway
[01:40] superlou: cmr, that's ok i think.  If it's possible to break something, I'd probably accomplish that
[01:41] superlou: thatnks for the offer though
[01:41] domino14: ok
[01:41] cmr: np
[01:41] deoxxa: domino14: you could, however, grab a JSON sax-style parser and do these checks on your own - keeping in mind that keys more than one level deep will be a bit annoying
[01:41] deoxxa: cmr: did you see my new readme content?
[01:41] deoxxa: also, are you -still- awake?
[01:42] cmr: No
[01:42] pquerna has joined the channel
[01:42] cmr: Just got up ;)
[01:42] deoxxa: ha
[01:42] bicranial has joined the channel
[01:42] threedot has joined the channel
[01:43] cmr: deoxxa: Nice, a lot better than before
[01:44] peregrine81 has joined the channel
[01:44] kerang: is there a way to represent two data bytes in a string?
[01:44] langworthy has joined the channel
[01:44] superlou: kerang, what kind of data bytes?
[01:44] cmr: kerang: String.fromCharCode(0xAF, 0xFA)
[01:44] dodo has joined the channel
[01:46] MatthewS has joined the channel
[01:46] kerang: superlou: two octets
[01:46] superlou: ah, then cmr's looks good to me
[01:46] kerang: cmr: thanks.. didn't notice there's fromCharCode :)
[01:46] cmr: kerang: just discovered it yesterday myself
[01:47] jergason has joined the channel
[01:48] kerang: cmr: does that mean new Buffer([0xAF, 0xFA]) should have the same value as new Buffer(String.fromCharCode(0xAF, 0xFA))?
[01:48] boltR has joined the channel
[01:49] BillyBreen has joined the channel
[01:49] cmr: kerang: ehh, they both contain the same data.
[01:49] Aria: That's different.
[01:50] kerang: cmr: tried in on repl, display different string value
[01:50] cmr: Oh, new Buffer(string..)
[01:50] cmr: That's different
[01:50] Aria: Those two characters are two bytes each.
[01:50] Aria: (Codepoint > decimal 127)
[01:50] kerang: ah, so the String.fromCharCode -> 2 bytes? the one with an array of 2 octets -> 4 bytes ?
[01:50] Aria: Vice versa.
[01:51] kerang: Aria: sorry, yep that's what i meant.. lol
[01:53] domino14: does anyone here use node + mysql ?
[01:53] domino14: node-mysql
[01:53] ger^kallisti_ has joined the channel
[01:53] holybit has joined the channel
[01:53] domino14: i jsut want to know if this is completely uninjectable
[01:53] domino14: mysqlClient.query('SELECT * from base_myuser where accessKey = ?', [posted.accessKey], function() {...})
[01:54] sharkbird has joined the channel
[01:54] kerang: in that case, is it possible to represent [0xAF, 0xFA] as a 2-byte string?
[01:54] flipen has joined the channel
[01:55] cmr: new Buffer([0xAF, 0xFA]).toString('ascii') ?
[01:55] nicholasf has joined the channel
[01:56] icewhite has joined the channel
[01:56] cmr: No, that's wrong
[01:56] cmr: kerang: No, just use buffers :P
[01:56] threedot has left the channel
[01:57] Lingerance: > new Buffer('\xaf\xfa', 'binary')
[01:57] Lingerance: <Buffer af fa>
[01:57] aGHz has joined the channel
[01:58] isaacs has joined the channel
[01:58] westc has joined the channel
[01:58] dodo has joined the channel
[02:00] eastc has joined the channel
[02:01] kozii has joined the channel
[02:02] iFire has joined the channel
[02:03] mcluskydodallas has joined the channel
[02:04] dscape: isaacs: thejh found another hack that speeds up the parser
[02:04] dscape: parsing npm went from 1.9 seconds to 0.8
[02:04] dscape: json parse does 0.3
[02:04] kerang: hmm, in that case, if a string is 2 bytes and i try to represent it as 2 octets, why is repl showing diff results between new Buffer('100') and new Buffer([0x0, 0x64]) ?
[02:04] dscape: you should check it out maybe its applicable to saxjs
[02:04] XXXPigeonXXX has joined the channel
[02:05] kerang: new Buffer('100') displays <Buffer 31 30 30>, while new Buffer([0x0, 0x64]) displays <Buffer 00 64>
[02:05] cmr: kerang: that's a string, not a number
[02:05] XXXPigeonXXX: Does nodejs support 64 bit integers?
[02:05] Lingerance: kerang: Probably because you're expecting a three-character string to equal a two byte sequence.
[02:05] adrianF has joined the channel
[02:06] dscape: isaacs: https://github.com/dscape/clarinet/commit/7cc9e35cb52eeae7f311283a753cd52ad33bbec7
[02:06] dwhittle has joined the channel
[02:06] cmr: XXXPigeonXXX: Buffers don't have an Int64
[02:06] kerang: cmr, Lingerance : d'oh.. since new Buffer(number) is used to represent size instead of value, so the only way to pass a number to a Buffer is via array of octets then?
[02:07] cmr: kerang: that's how that works, yes.
[02:07] Lingerance: Yes
[02:07] kerang: cmr, Lingerance : thanks a lot for the clarification.. 
[02:07] jocafa has joined the channel
[02:07] XXXPigeonXXX: cmr: What is the max size of an integer, unsigned more specifically
[02:08] TheNumb has joined the channel
[02:08] cmr: XXXPigeonXXX: the largest from a buffer is UInt32
[02:08] Lingerance: > b = new Buffer(2); b.writeUInt16BE(100,0);b
[02:08] Lingerance: <Buffer 00 64>
[02:08] Lingerance: Alternative ^
[02:08] cmr: Which is as you expect it
[02:10] voodootikigod has joined the channel
[02:11] wolfeidau has joined the channel
[02:12] XXXPigeonXXX: is there a way to show a whole buffer when doing console.log?
[02:13] grom has joined the channel
[02:13] maxogden: console.error
[02:13] blueadept has joined the channel
[02:13] idiotinthewoods: Hi there, I'm rather new to node.js (and javascript) programming in general and I'm not quite sure how my node.js programs are meant to be structured...as in where are is the main function located? And can I just declare functions as I go along?
[02:13] johnmdonahue has left the channel
[02:13] cmr: idiotinthewoods: There is no main function, and yes
[02:14] idiotinthewoods: cmr: so what is the preferred way to structure your programs in that case?
[02:14] maxogden: idiotinthewoods: lots of small, modular functions
[02:14] idiotinthewoods: as currently it feels like I'm just jumping deeper and deeper into callbacks - and it's not very comfortable
[02:15] idiotinthewoods: hmm okay. And not tell me here if I'm completely on the wrong track, but how would I assign a variable created, say, deep in a series of callbacks to the global scope?
[02:16] idiotinthewoods: err s/not//
[02:16] apwalk has joined the channel
[02:16] cmr: idiotinthewoods: name = value, like normal
[02:17] XXXPigeonXXX: idiotinthewoods: you should look up closures, and a little bit of functional programming as javascript is meant to be like scheme but look more like c
[02:18] idiotinthewoods: XXXPigeonXXX: well it certainly looks like C, but the functions within the functions within the functions with no apparent way to send the data anywhere else is just making everything messy
[02:18] maxogden: idiotinthewoods: this book would probably be pretty good for your skill level http://shop.oreilly.com/product/9780596806767.do
[02:19] idiotinthewoods: maxogden: thank you
[02:19] a_suenami has joined the channel
[02:19] XXXPigeonXXX: idiotinthewoods: thats why you should learn what a closure is and learn some javascript first before taking on big projects in it
[02:19] piscisaureus_ has joined the channel
[02:20] jamescarr has joined the channel
[02:20] ryanw has joined the channel
[02:20] cmr: XXXPigeonXXX: > f
[02:20] cmr: <Buffer ff ff ff ff ff ff ff ff>
[02:20] cmr: > f.readUInt32LE(0) + f.readUInt32LE(4)
[02:21] cmr: 8589934590
[02:21] rwaldron has joined the channel
[02:21] XXXPigeonXXX: cmr: what are you demonstrating ?
[02:21] cmr: XXXPigeonXXX: That Number is more than 32 bits.
[02:22] ryanw: My code is too in sane for uglify-js. Specifilly the parse-js component. :(
[02:22] cmr: I think it's a double, not sure
[02:23] XXXPigeonXXX: ryanw: does your code follow standards?
[02:23] ryanw: It follows my standard :)
[02:23] ryanw: It's all valid code.
[02:23] dre has joined the channel
[02:24] XXXPigeonXXX: uglify-js, more specificaly parse is just an implementation of a bnf grammar of js
[02:24] mcluskydodallas has joined the channel
[02:24] ryanw: I'll try and make a smaller test case, my current file is massive.
[02:24] tonymilne has left the channel
[02:24] XXXPigeonXXX: ryanw: runable code and code that follows standards aren't always the same set
[02:24] ryanw: True
[02:25] cgfuh has joined the channel
[02:25] XXXPigeonXXX: ryanw: have you ran it through lint?
[02:25] ryanw: jslint hates everything I do
[02:26] torm3nt has joined the channel
[02:26] XXXPigeonXXX: ryanw: seems like we found the root of your problem
[02:26] c4milo has joined the channel
[02:26] ryanw: Blegh, I'd rather do without than having to follow jslints ugly standard
[02:27] pradeebv has joined the channel
[02:27] XXXPigeonXXX: cmr: found what I understand about javascipt is that every 'number' in java is 64 bit float with a 53 bit mantissa 
[02:27] draft13 has joined the channel
[02:27] nerdfiles1 has joined the channel
[02:27] XXXPigeonXXX: ryanw: then you will not make it far as a programmer 
[02:27] nerdfiles1 has left the channel
[02:27] piscisaureus_ has joined the channel
[02:27] ryanw: whatever
[02:27] ryanw: Looks like a bug in uglify
[02:27] ryanw: I broke it with a single object with 1 property
[02:28] iFire has joined the channel
[02:28] meso has joined the channel
[02:29] ryanw: This is all it takes to break it: http://pastie.org/3198853
[02:29] patcito has joined the channel
[02:29] XXXPigeonXXX: your pastie isn't valid code
[02:30] ryanw: Of course it's valid
[02:30] jgornick has joined the channel
[02:30] XXXPigeonXXX: get isnt defined
[02:30] XXXPigeonXXX: foo isnt defined
[02:30] ryanw: get is a keyword
[02:30] ryanw: Clearly you don't know javascript.
[02:30] ryanw: try pasting it into node.
[02:31] XXXPigeonXXX: and i believe there should be a semi-colon after the closing } on the object being assigned to x
[02:31] ryanw: Nah, ASI
[02:32] ryanw: You don't know javascript very well, so you're not help.
[02:32] XXXPigeonXXX: ASI?
[02:32] holybit: attempt at simple bare bone udp server/client setup with node, but failing on mac lion … not sure what I am doing wrong - http://pastebin.com/uCM9qRLR
[02:32] cmr: automatic semicolon insertion
[02:32] ryanw: Maybe I need to use the uglify from git rather than npm
[02:33] XXXPigeonXXX: asi is likely to lead to ambigious parse trees, maybe you should rely on sketchy language mechanics
[02:34] ryanw: it's 5 lines of code. I think it can manage
[02:34] XXXPigeonXXX: you've obvious never studied programming language interpritation before
[02:34] fwg: XXXPigeonXXX㇀ ASI is very well defined, exactly so it does not result in an ambigious AST
[02:35] agnat_ has joined the channel
[02:35] AvianFlu: `get` is not a javascript keyword
[02:35] AvianFlu: not in ES5 anyway
[02:35] ryanw: sure it is
[02:35] AvianFlu: start a node repl
[02:35] mike5w3c has joined the channel
[02:35] AvianFlu: get is not defined
[02:35] ryanw: paste my code in
[02:35] ryanw: I've used it a bajillion times
[02:35] cmr: .. var x = { get foo() { return 'foo'; } }; x.foo
[02:35] catb0t:  "foo"
[02:36] AvianFlu: yeah, I see reference error
[02:36] AvianFlu has left the channel
[02:36] fwg: http://es5.github.com/#x11.1.5
[02:36] ryanw: works for me
[02:37] fwg: propertyassignment and following lines
[02:37] ryanw: I guess uglify-js is ES3 only :(
[02:37] cmr: .. var x = { var x = 0; get foo() { return x++; } }; x.foo; x.foo;
[02:37] catb0t:  Exception: SyntaxError: Unexpected identifier
[02:38] cmr: Hm
[02:38] ryanw: yeah, that won't work
[02:38] cmr: Oh, duh
[02:38] cmr: .. var x = { var y = 0; get foo() { return y++; } }; x.foo; x.foo;
[02:38] catb0t:  Exception: SyntaxError: Unexpected identifier
[02:38] cmr: Nope
[02:38] ryanw: .. var y = 0; var x = { get foo() { return y++; } }; x.foo; x.foo;
[02:38] catb0t:  1
[02:39] ryanw: .. var y = 0; var x = { get foo() { return y++; } }; x.foo; x.foo; x.foo; x.foo;
[02:39] catb0t:  3
[02:39] cmr: .. var x = { y: 0, get foo() { return this.y++; } }; x.foo; x.foo;
[02:39] catb0t:  1
[02:39] cmr: Win!
[02:40] al3xnull has joined the channel
[02:40] rtgibbons has joined the channel
[02:40] CIA-101: node: 03Ryan Dahl 07master * r317ba9f 10/ Makefile : Fix 'make dist' - http://git.io/QsJlNQ
[02:41] zivester has joined the channel
[02:42] broofa has joined the channel
[02:42] willwhite has joined the channel
[02:42] cmr: .. var x = { y: 0, get foo() { return this.y++; }, set foo(f) { print('set to ' + f); }; x.foo; x.foo; print(x.foo); x.foo = "bar";
[02:42] catb0t:  Exception: SyntaxError: Unexpected token ;
[02:43] cmr: .. var x = { y: 0, get foo() { return this.y++; }, set foo(f) { print('set to ' + f); }}; x.foo; x.foo; print(x.foo); x.foo = "bar";
[02:43] catb0t:  2; "set to bar"; "bar"
[02:43] cmr: Sweet.
[02:43] amigojapan has joined the channel
[02:43] gregpascale has joined the channel
[02:44] holybit: well, hot diggidy dog, it took me all of a minute to get a working perl udp client, so my nodes code is the problem
[02:45] counterbeing has joined the channel
[02:47] norviller has joined the channel
[02:48] redir_ has joined the channel
[02:49] jakehow has joined the channel
[02:50] captain_morgan has joined the channel
[02:51] githogori has joined the channel
[02:52] subhaze has joined the channel
[02:52] c4milo has joined the channel
[02:53] bofm has joined the channel
[02:54] pradeebv has joined the channel
[02:54] bLUEEE has joined the channel
[02:55] peregrine81 has joined the channel
[02:59] ovnicraft has joined the channel
[03:00] CIA-101: node: 03Ryan Dahl 07master * r716f5bc 10/ Makefile : Add make dist-upload - http://git.io/JcmV8w
[03:02] Julio has joined the channel
[03:02] sdozono has joined the channel
[03:02] MrTopf has joined the channel
[03:02] tomlion has joined the channel
[03:03] ap3mantus has joined the channel
[03:04] Julio has left the channel
[03:06] postwait has joined the channel
[03:06] ryah_: please test http://nodejs.org/dist/v0.7.0/node-v0.7.0-RC1.tar.gz
[03:06] Aria: Ooh.
[03:08] jamescarr has joined the channel
[03:08] nicholas_ has joined the channel
[03:09] mehlah has joined the channel
[03:12] FesterCluck has joined the channel
[03:12] dwhittle has joined the channel
[03:13] jobject has joined the channel
[03:14] mehlah has joined the channel
[03:14] JaKWaC has joined the channel
[03:16] avalanche123 has joined the channel
[03:18] tkaemming has joined the channel
[03:19] maletor has joined the channel
[03:19] sarlalian has joined the channel
[03:20] chuyzz has joined the channel
[03:20] mateodelnorte has joined the channel
[03:20] jergason has joined the channel
[03:21] mehlah has joined the channel
[03:21] thinkjson has joined the channel
[03:21] chuyzz: hello everyone, I need some help trying using stream to upload a file using node
[03:22] thinkjson: What's the difference between a socket hangup and a connection reset?
[03:22] mehlah_ has joined the channel
[03:23] nerdfiles1 has joined the channel
[03:23] cameronz has joined the channel
[03:25] Aria: ryah_: npm didn't install when I did make install; the old npm didn't work either.
[03:26] tilgovi has joined the channel
[03:27] mitc0185 has joined the channel
[03:28] tilgovi: wycats: I can't figure out from the home page what handlebars adds to mustache. Is there a quick summary?
[03:28] mitc0185: is the EJS template engine the same as the one used in underscore.js?
[03:28] jacobolus has joined the channel
[03:29] jrbaldwin has joined the channel
[03:29] tilgovi: it seems like handlebars is just mustache with typed blocks
[03:29] maxogden: tilgovi: more complexity
[03:29] tilgovi: which features? I don't see it.
[03:30] maxogden: {{object.subkey}} for one
[03:30] tilgovi: oh, nested paths
[03:30] tilgovi: okay. I see it.
[03:31] tilgovi: gonna stick with handlebars for now.
[03:31] tilgovi: err, mustache
[03:31] Neil_ has joined the channel
[03:31] tilgovi: neat, though.
[03:32] ryah_: Aria: thanks, looking into it
[03:32] lz1 has joined the channel
[03:32] cmr: ryah_: builds npm for me, also it works.
[03:33] nerdfiles1 has joined the channel
[03:34] Aria: Also, I'm not sure if it's installing headers &c properly -- Extensions I'm building are coming out x86_64, but node came out i686.
[03:34] Aria: (macOS)
[03:34] k1ttty has joined the channel
[03:34] dharmesh_ has joined the channel
[03:34] Aria: or node-waf or whatever's new.
[03:36] cognominal has joined the channel
[03:36] jamescarr has joined the channel
[03:37] Aria: (I suspect it's using an old node-waf to build things. That's what does it.)
[03:38] Aria: (Any docs on how to build modules with gyp?)
[03:38] svnlto has joined the channel
[03:38] Fabryz has joined the channel
[03:39] wycats has joined the channel
[03:39] Fabryz has joined the channel
[03:39] redwinter has joined the channel
[03:40] redwinter: Is there a way to read NODE_ENV from a view without explicitly passing it? (I want to disable Google Analytics in development mode.)
[03:40] nym has joined the channel
[03:40] redwinter: I'm using express.js
[03:40] cmwelsh has joined the channel
[03:40] pizthewiz has joined the channel
[03:41] dnyy has joined the channel
[03:42] ryah_: Aria: im going to make the release anyway- we'll fix it this week
[03:42] k1ttty has joined the channel
[03:43] ec has joined the channel
[03:43] clutchski has joined the channel
[03:43] diogogmt has joined the channel
[03:43] eliasp has joined the channel
[03:44] bicranial_ has joined the channel
[03:44] svnlto has joined the channel
[03:44] nicholasf has joined the channel
[03:45] rburhum has joined the channel
[03:45] domino14 has joined the channel
[03:45] devongovett has joined the channel
[03:45] ralph has joined the channel
[03:46] tomh has joined the channel
[03:46] daleharvey has joined the channel
[03:46] terite has joined the channel
[03:46] Aria: Sounds good! 
[03:46] majek has joined the channel
[03:46] Aria: I'll be interested to know how this progresses. I really hope gyp is awesome.
[03:46] Aria: 'cause damn, I hate build systems
[03:46] Fabryz has joined the channel
[03:47] bradwright has joined the channel
[03:47] ryah_: Aria: we've been loving GYP
[03:47] ryah_: the makefiles it produces are very good
[03:48] ryah_: you can change something in a subproject and run 'make' and it will only do a few relinking states
[03:48] ryah_: s/states/steps
[03:48] ryah_: with waf it would rebuild whole subtrees
[03:48] Aria: AWESOME!
[03:49] Aria: Oh, wow. And the gyp files aren't strictly tied to python
[03:50] Aria: I like what I see. A lot.
[03:50] JasonSmith has joined the channel
[03:50] niftylettuce has joined the channel
[03:50] jeremyselier has joined the channel
[03:51] joshfinnie has joined the channel
[03:52] jayniz has joined the channel
[03:52] jayniz has joined the channel
[03:52] jayniz has joined the channel
[03:52] mrb_bk has joined the channel
[03:53] ryanseddon has joined the channel
[03:53] dscape has joined the channel
[03:53] yutaka-m_ has joined the channel
[03:53] Raynos has joined the channel
[03:53] Vennril has joined the channel
[03:53] lmatteis has joined the channel
[03:53] nym has joined the channel
[03:54] justicefries has joined the channel
[03:54] vicapow has joined the channel
[03:55] astropirate has joined the channel
[03:56] k1ttty_ has joined the channel
[03:57] tanepiper has joined the channel
[03:57] wingie has joined the channel
[03:58] counterbeing has joined the channel
[03:58] pksunkara has joined the channel
[03:58] eliasp has joined the channel
[03:59] Hosh has joined the channel
[03:59] kenperkins has joined the channel
[04:00] olegp has joined the channel
[04:00] caludio has joined the channel
[04:00] context has joined the channel
[04:01] whoops has joined the channel
[04:01] relix has joined the channel
[04:03] michaelhartau has joined the channel
[04:04] nerdfiles1 has left the channel
[04:05] shanez_ has joined the channel
[04:05] kriszyp has joined the channel
[04:05] shanez_ has left the channel
[04:07] monteslu has joined the channel
[04:07] CIA-101: node: 03Ryan Dahl 07master * r9cc55dc 10/ (ChangeLog doc/template.html src/node_version.h): Bump version to v0.7.0 - http://git.io/2_sbTQ
[04:07] CIA-101: node: 03Ryan Dahl 07master * r72cbb74 10/ src/node_version.h : Now working on v0.7.1-pre - http://git.io/MH2qew
[04:08] fcoury has joined the channel
[04:09] wolfeidau has joined the channel
[04:10] strmpnk has joined the channel
[04:10] blueadept has joined the channel
[04:10] blueadept has joined the channel
[04:11] dharmesh has joined the channel
[04:11] isaacs has joined the channel
[04:12] apwalk has joined the channel
[04:13] domino14 has joined the channel
[04:14] MeanOne has joined the channel
[04:14] t0mmyvyo has joined the channel
[04:15] mrchess has joined the channel
[04:17] zzo has joined the channel
[04:17] MUILTR has joined the channel
[04:17] RobWC has joined the channel
[04:20] remysharp has joined the channel
[04:22] gavin_huang has joined the channel
[04:24] zzo: very curious about this: https://gist.github.com/1624635 - same script in different locations doesn't load?
[04:24] jrbaldwin has joined the channel
[04:24] zzo: some weird stuff
[04:25] Skaag has joined the channel
[04:26] zzo: is all i'm sayin
[04:26] kenperkins: so im a little confused, i thought with process.on('unhandledException',...) that you got the full exception with stack trace, etc
[04:26] kenperkins: not just the string
[04:27] deedubs: zzo: you forgot the output of node -v
[04:27] zitchdog has joined the channel
[04:27] zzo: [ps48174]$ node -v
[04:27] zzo: v0.4.5
[04:27] redwinter has joined the channel
[04:27] nerdfiles1 has joined the channel
[04:27] nerdfiles1 has left the channel
[04:28] redwinter: Is it possible to do something like: var db = require('../models/modelOne.js', '../models/modelTwo.js') -- so they are all under one var?
[04:28] deedubs: zzo: that version is about 90 years old
[04:29] owenb has joined the channel
[04:29] dreamdust has joined the channel
[04:29] zzo: so yer saying .6 works?
[04:29] deedubs: yes...
[04:29] RexM has joined the channel
[04:29] devongovett has joined the channel
[04:29] sveisvei has joined the channel
[04:30] jxie has joined the channel
[04:32] Init--WithStyle- has joined the channel
[04:32] Init--WithStyle-: hi all
[04:33] zzo: mmm upgrading painful - will try thx
[04:34] zzo: or, more likely, some cheesy workaround
[04:34] Init--WithStyle-: var server = require('http').createServer( ...); is from node.js correct?
[04:35] munichlinux has joined the channel
[04:35] zzo: Init--WithStyle-:  yes it is
[04:36] samrat has joined the channel
[04:37] lwille has joined the channel
[04:37] Init--WithStyle-: instead of creating a new server, I would like to somehow latch onto the local MAMP server I am running... how is that done in node.js?
[04:37] zzo: Init--WithStyle-: what the monkey is a MAMP server?  is is nodejs code too?
[04:37] samrat: I don't need to use something like Apache or Nginx to use nodejs right?
[04:38] joestein has joined the channel
[04:38] zzo: samrat: you do not
[04:38] Init--WithStyle-: Mamp is just a package of apache and mysql
[04:38] samrat: zzo: thanks
[04:38] Init--WithStyle-: anyways, i obviously don't understand what is going on under the hood with node.js
[04:38] tjfontaine: Mac Apache Mysql Php akshully
[04:38] Init--WithStyle-: :D
[04:38] Init--WithStyle-: right
[04:39] zzo: Init--WithStyle-: so you want nodejs and apache to share the same port?
[04:39] Init--WithStyle-: initially i thought i needed to have apache and whatnot running already...
[04:39] samrat: also are there any Python developers here.... can I use Nodejs to replace Celery?
[04:39] tjfontaine: Init--WithStyle-: nodejs needs to run its own web server, but you could mod_proxy if you're masochistic enough
[04:39] Init--WithStyle-: oh
[04:40] Init--WithStyle-: so node.js server, and apache server would be running seperately then?
[04:40] tjfontaine: well I guess even more masochistic you could make a node.js behave like cgi
[04:40] zzo: Init--WithStyle-: blow out apache, you don't need it
[04:40] kenperkins: man I'm so fed up with trying to decide the best way to handle exceptions in node
[04:40] Init--WithStyle-: if I were to connect to local on the same port though.. what server would handle the request?
[04:40] Init--WithStyle-: if i had apache and a node.js server both running
[04:40] Lingerance: You configure one to proxy for the other
[04:40] Init--WithStyle-: they seem to both use port 8080..
[04:40] garann has joined the channel
[04:41] tjfontaine: samrat: you're not exactly doing an apples to apples comparison
[04:41] Init--WithStyle-: zzo: thanks for the advice 
[04:41] zzo: Init--WithStyle-: why do they have to be on the same port?
[04:41] Init--WithStyle-: they don't.. i'm just wondering what might happen in that case
[04:41] samrat: tjfontaine: so... is there any way I can queue background tasks using Nodejs? 
[04:42] zzo: Init--WithStyle-: it can be done but it's dumb imho
[04:42] Init--WithStyle-: ok
[04:42] nerdfiles has joined the channel
[04:43] Init--WithStyle-: zzo, i have a bunch of stupid questions such as "what does require('http') do in node.js?".. could you direct me to a getting started guide/manual that would answer these sorts of stupid questions?
[04:43] tjfontaine: samrat: that's a more difficult question than you make it out to be
[04:43] voodootikigod has joined the channel
[04:44] bacon000 has joined the channel
[04:44] samrat: tjfontaine: could you explain?
[04:44] zzo: http://nodejs.org/ and then http://nodejs.org/docs/latest/api/index.html
[04:44] tjfontaine: samrat: there are plenty of ways to achieve that goal in nodejs but suggesting a solution would require information about your implementation
[04:44] Init--WithStyle-: thanks
[04:45] Init--WithStyle-: is there some info in there about integrating mongoDB or mySql with the node server?
[04:45] zzo: dude tons i'm sure you need http://search.npmjs.org/
[04:45] confoocious has joined the channel
[04:46] zzo: like the cpan or pear or rpm ...
[04:46] ryanfitz has joined the channel
[04:46] samrat: tjfontaine: the webapp I'm trying to build should download a video(onto the server, from Youtube) when a user requests it 
[04:47] nerdfiles has left the channel
[04:47] samrat: tjfontaine: I;ve already built it in Python but is a bit memory-consuming..so I'm explorinig Node to see if I can find a more efficient soltution
[04:47] samrat: solution*
[04:47] tjfontaine: samrat: then there's nothing in particular extra you'll need to do, yes nodejs can download that url "in the background" this is the premise of an async framework
[04:48] tjfontaine: samrat: for reference see http://nodejs.org/docs/latest/api/http.html
[04:48] deedubs: samrat: there is also https://github.com/learnboost/kue
[04:49] EndangeredMassa has joined the channel
[04:49] Init--WithStyle-: zzo: what do you mean?
[04:49] samrat: tjfontaine: how much efficient do you figure this will be than Celery?
[04:49] scott_gonzalez has joined the channel
[04:49] tjfontaine: there are lots of "queue" mechanisms that can be found, the question is if one is needed or if simply relying on the underlying mechanisms will suffice
[04:50] jsurfer has joined the channel
[04:50] zivester has joined the channel
[04:50] zzo: Init--WithStyle-: 3rd party modules u can use and http://howtonode.org/node-and-mongo
[04:50] tjfontaine: samrat: I have no frame of reference for celery, but from a brief glance I would say with proper care this could be done with minimal impact (* caveat I don't know the reality of your plan)
[04:51] tomlion has joined the channel
[04:51] tjfontaine: samrat: as far as compared to the overhead/dependencies celery brings to the table nodejs is down right simple
[04:52] tjfontaine: samrat: there are lots of 3rd party modules that can help, and I'm a fan of where possible avoiding NotInventedHere syndrom, but that being said I don't think you should start by finding dependencies to solve a queue problem until you know you really have a problem (this is mostly true for everything else you'll face)
[04:53] joshfinnie has left the channel
[04:53] OmidRaha has joined the channel
[04:53] samrat: tjfontaine: okay thanks. I'll go through some Node tutorials then (hopefully) rewrite my app in Node
[04:54] Init--WithStyle-: zzo: thanks
[04:57] torm3nt1 has joined the channel
[04:58] lazyshot has joined the channel
[05:02] dnjaramba has joined the channel
[05:03] chrisvwebdev has joined the channel
[05:03] MrTopf has joined the channel
[05:03] chrisvwebdev has left the channel
[05:04] lazyshot_ has joined the channel
[05:04] RobWC has joined the channel
[05:04] lazyshot_ has joined the channel
[05:05] OmidRaha has joined the channel
[05:08] jxie has joined the channel
[05:08] vicapow has joined the channel
[05:10] redwinter has joined the channel
[05:12] yumike has joined the channel
[05:13] redwinter has left the channel
[05:13] redwinter has joined the channel
[05:13] jrbaldwin_ has joined the channel
[05:14] dexter_e has joined the channel
[05:14] jrbaldwin has joined the channel
[05:15] mateodelnorte has joined the channel
[05:15] panosru: hello, is it possible to use node.js modules in client side? for instance I used npm to install backbone, requirejs, and underscore.js but I don't have a clue on how to use them client-side :(
[05:15] norviller has joined the channel
[05:15] briandh has joined the channel
[05:16] jsurfer has joined the channel
[05:16] ap3mantus has joined the channel
[05:16] Lingerance: Depends on the module really.
[05:17] Lingerance: ... also depends what you want to do with them.
[05:18] kenperkins has joined the channel
[05:18] voodootikigod has joined the channel
[05:18] clutchski has joined the channel
[05:19] dreamdust has joined the channel
[05:21] amasad has joined the channel
[05:24] dharmesh has joined the channel
[05:24] RobWC has joined the channel
[05:26] k1ttty has joined the channel
[05:27] Heisenmink has joined the channel
[05:29] redtree has joined the channel
[05:30] jrbaldwin has joined the channel
[05:31] Init--WithStyle-: has anyone used underscore.js before?
[05:32] Me1000 has joined the channel
[05:33] kishoreyekkanti has joined the channel
[05:33] Init--WithStyle-: noone? that's surprising :)
[05:35] Init--WithStyle-: I just drop the library in via "<script type="text/javascript" src="underscore/underscore-min.js"></script>" and immediately get an error about an unexpected token
[05:35] Aria: This is node.js, you're speaking HTML there.
[05:35] panosru: Lingerance: sorry I missed your reply
[05:36] panosru: Lingerance: for instance how I would load Backbone.js in client-side from server-side?
[05:37] context: init--withstyle-: thats awesome
[05:39] apwalk has joined the channel
[05:39] davidbanham has joined the channel
[05:40] mraleph has joined the channel
[05:42] t0mmyvyo has joined the channel
[05:42] ovnicraft has joined the channel
[05:43] mark_azevedo has joined the channel
[05:44] xbayrockx has joined the channel
[05:49] gordonmattey has joined the channel
[05:49] Init--WithStyle-: context: i know right :D
[05:50] simb has joined the channel
[05:51] vicapow: panosru: check out ender (http://ender.no.de/)
[05:51] vicapow: it might be more of what you're looking for. npm -> nodjs , ender -> client side js
[05:53] panosru: vicapow: thanks mate! seems to be interesting project! I will try it right away!
[05:53] vicapow: panosru: yep. np
[05:53] panosru: vicapow: shame I'm Greek and I don't remember the name of the guy on ender's picture :P anyways offtopic! :P
[05:54] Init--WithStyle-: wait a sec.. wtf..?? double clicking on the "unexpected token '<'" error, it brings me to my underscore-min.js file... but it's not actually the underscore-min.js file.. instead its a copy of the HTML index file??
[05:55] dnjaramba has joined the channel
[05:56] CIA-101: node: 03Fedor Indutny 07master * r6e76a7c 10/ (configure tools/installer.js): 
[05:56] CIA-101: node: installer: install node-waf
[05:56] CIA-101: node: * added --without-waf flag for configure script - http://git.io/PIoYoA
[05:57] endow has joined the channel
[05:58] michaelhartau has joined the channel
[06:00] Init--WithStyle-: i'm completely floored... how could node.js be loading my underscore.js file as the HTML file it is linked inside of??
[06:01] Init--WithStyle-: ex.  <script src="/nowjs/now.js"></script>  <-- works           <script src="/underscore/underscore-min.js"></script> <-- returns the HTML of the file it is embedded in...
[06:05] tylerstalder has joined the channel
[06:06] Aria: How is HTML involved in this?
[06:06] Aria: The browser loads js that way, not node.
[06:10] SubStack: Init--WithStyle-: nowjs adds custom routes for your app
[06:10] dreamdust has joined the channel
[06:10] SubStack: dnode and socket.io do the same thing
[06:11] Init--WithStyle-: ok.. i'm extremely confused then
[06:11] Init--WithStyle-: i want to use underscore in my server and client javascript
[06:11] Init--WithStyle-: but simply including it up top in the HTML is.. doing as I described above..
[06:11] cosmincx has joined the channel
[06:12] SubStack: Init--WithStyle-: you can symlink it from your static directory
[06:12] Init--WithStyle-: how? i'm not even sure i know what a symlink is: )
[06:12] SubStack: Init--WithStyle-: are you on windows?
[06:12] jrbaldwin has joined the channel
[06:13] captain_morgan has joined the channel
[06:14] SubStack: ln -s node_modules/underscore/underscore.js static/
[06:14] Init--WithStyle-: no, mac
[06:14] SubStack: or public/ or whatever
[06:14] SubStack: ok good then you've got symlinks
[06:14] Init--WithStyle-: why is that neccessary though?
[06:14] Init--WithStyle-: usually to bring in a library i would just have to include via a script tag...
[06:14] SubStack: I'm not sure what you're confused about
[06:15] k1ttty_ has joined the channel
[06:15] SubStack: because you're only serving up static content from a directory
[06:15] jrbaldwin has joined the channel
[06:15] SubStack: say static/
[06:15] SubStack: and your node_modules directory is at the same level as your static in all liklihood
[06:15] SubStack: s/lik/like/
[06:16] Init--WithStyle-: node_modules is at the same level as my other libraries yes
[06:16] Init--WithStyle-: but for example "<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>" pulls in jquery just fine
[06:16] Init--WithStyle-: when I try to pull in underscore from my local though, it just breaks
[06:16] Init--WithStyle-: oh...
[06:16] Init--WithStyle-: underscore needs to be created as a node module?
[06:17] SubStack: script tags can't just read from anywhere on your filesystem
[06:17] maxogden: they are read anywhere on the intarwebs though
[06:17] Aria: To use underscore on the client, you have to put it in a place that the client can read it, like inside of static/ if that's what your app serves.
[06:17] jrbaldwin has joined the channel
[06:17] Aria: That's entirely separate from using it within node.
[06:18] bambanx has joined the channel
[06:18] bambanx: guys what good and cheap hosting for test my node apps can recommend me?
[06:20] jrbaldwin has joined the channel
[06:20] Init--WithStyle-: i see
[06:20] Init--WithStyle-: interesting
[06:20] Init--WithStyle-: i have it inside of the project directory under /underscore/underscore-min.js
[06:20] Init--WithStyle-: shouldn't I be able to just directly use a script tag for the client then?
[06:20] zzo: bambanx:  http://joesdatacenter.com/
[06:21] bambanx: http://nodester.com/ ?
[06:21] jrbaldwin has joined the channel
[06:22] Aria: Init--WithStyle-: Only if that directory gets served publically!
[06:22] Aria: Init--WithStyle-: USually, not!
[06:22] Aria: (your app decides this, though. It's not fixed.)
[06:22] Aria: Usually assets that the client reads go somewhere separate -- static/ or public/
[06:23] Init--WithStyle-: instead of that, I just dropped it into it's own folder - underscore...
[06:23] garrensmith has joined the channel
[06:23] Init--WithStyle-: usually one would go static/underscore/underscore.js ?
[06:23] Aria: That's common, yes.
[06:23] cache_za has joined the channel
[06:23] bambanx: can i run node in linode?
[06:23] Aria: Your app has to serve those files, or you have to have some way to get them to the client though.
[06:23] Aria: bambanx: Does it run linux? Then the answer is yes. 
[06:23] bambanx: ok
[06:24] Init--WithStyle-: serve those files... but when including now.js via <script src="/nowjs/now.js"></script> i don't run into any question of where/how to serve it
[06:24] bambanx: Aria i am beginner and i am a little confused , node can be good for do web apps with database like user , auth, or a galery of images .... ?
[06:24] Init--WithStyle-: same with jquery but i suppose that is because I draw it in via async web...
[06:25] Aria: bambanx: Yes. It's pretty general. If it talks to other systems, be they browsers or other servers, node's a pretty good fit.
[06:25] Aria: Init--WithStyle-: Right.
[06:25] Aria: Init--WithStyle-: Now.js has fancy hooks that set up its own serving.
[06:25] bambanx: Aria is hard to learn for a beginner?
[06:25] davidbanham has joined the channel
[06:26] panosru: bambanx: heroku.com ?
[06:26] Init--WithStyle-: ohhh
[06:26] mattgifford has joined the channel
[06:26] bambanx: panosru, thanks
[06:26] Aria: bambanx: I don't know. It's been a very long time since I've been a beginner. Javascript has amusing quirks. Learning how to start up services, all the pieces can be harder than other things. But I find it's the easiest way to do the things I want.
[06:26] Init--WithStyle-: ok so Aria ... instead of writing the main client js script in the .html file.. how could i just link it to a static .js file that contains the same thing?
[06:26] bambanx: Aria you recommend me use expressjs for database?
[06:27] Init--WithStyle-: would i make a client.js file inside of /static/?
[06:27] Aria: bambanx: No, express is a web framework.
[06:27] Aria: Init--WithStyle-: No, why client.js? Why not underscore.js?
[06:28] Aria: Init--WithStyle-: Look at your app's code. Set it up to serve files in there. (There's no magic here: node acts like a webserver, serving up the files and sending them to a client.)
[06:28] Init--WithStyle-: er.. i mean.. i don't want to put the client's code directly in the .html file
[06:28] Init--WithStyle-: i want to make a seperate .js file with the same code, and then link it in
[06:28] josh-k has joined the channel
[06:28] Locke23rus has joined the channel
[06:28] neoesque has joined the channel
[06:29] Aria: Right. So do that!
[06:29] Init--WithStyle-: would I "read in" data similar to .. var html = require('fs').readFileSync(__dirname+'/helloworld.html'); ?
[06:29] Aria: But you need a place for that JS file to live on the web.
[06:29] Init--WithStyle-: or.. i need to instruct node to serve it up..
[06:29] Init--WithStyle-: right?
[06:29] Aria: Init--WithStyle-: No, that gets the HTML into the server, not the client (client being the browser)
[06:29] Aria: Right.
[06:29] Shaunzie has joined the channel
[06:29] Aria: You need to get node to serve it up.
[06:29] Aria: (Well, or any web server!)
[06:29] Init--WithStyle-: so to serve up the underscore.js file i need to do something like var html = require('fs').readFileSync(__dirname+'/helloworld.html'); except a JS file instead..
[06:30] Aria: No, that just reads it into the server.
[06:30] Aria: You want to send it to the browser when the browser asks for it.
[06:30] Aria: (Also, you almost never ever want anything with Sync in its name. Ever.)
[06:31] booo has joined the channel
[06:31] Init--WithStyle-: hmm.. how would i instruct node to send it into the browser when the browser asks?
[06:31] Aria: Are you using plain node, or are you using a framework like express?
[06:31] Aria: There are modules that set up a handler. 
[06:31] Aria: But if you're making it in pure node, you have to build it.
[06:32] Aria: (I'd use express myself. It's pleasant.)
[06:32] panosru: Aria: would you mind to check this please? http://stackoverflow.com/questions/8890132/node-js-re-usable-code-server-client
[06:33] Init--WithStyle-: umm
[06:33] Init--WithStyle-: i'm using now.js only
[06:33] Init--WithStyle-: i suppose this is why express is so popular?
[06:33] Init--WithStyle-: :)
[06:33] Aria: Well, it's what express is good at.
[06:33] Aria: But you could also read now.js and see how they do it.
[06:34] Aria: (It'll be similar.)
[06:34] Hanspolo has joined the channel
[06:34] Aria: panosru: Symlinks are decent. I don't know backbone at all, so I can't really comment.  Or just serve the directory where the models /are/.
[06:34] HT has joined the channel
[06:34] Init--WithStyle-: i actually am confused enough right now that I probably wouldn't know where in the documentation to look (now.js's documentation i mean)
[06:35] Init--WithStyle-: and.. now.js doesn't have anything similar to express I think..
[06:35] panosru: Aris, thanks a lot for the reply :) I'll go with symlinks then :)
[06:35] Init--WithStyle-: it just brings itself in via a "require"
[06:35] Init--WithStyle-: like... var nowjs = require('now')
[06:36] dnjaramba_ has joined the channel
[06:37] Aria: Init--WithStyle-: Yeah, no. now.js isn't express. but it can serve its files to the client. Just that tiny piece.
[06:37] Aria: And now, I need to sleep.
[06:38] isaacs has joined the channel
[06:39] tomlion has joined the channel
[06:40] bambanx: what you choose guys webfaction or heroku ?
[06:40] stagas has joined the channel
[06:41] panosru: bambanx: I will vote on heroku as most popular
[06:41] Shaunzie: neither? Amazon/Rackspace for meh
[06:41] bambanx: amazon is expensive?
[06:41] panosru: Shaunzie: heroku is on top of amazon...
[06:42] maletor has joined the channel
[06:42] Shaunzie: panosru: so?
[06:42] panosru: bambanx: so why to go to amazon? I mean heroku gives you some cool features where by going to amazon you will need to build them by yourself
[06:43] bambanx: yeah
[06:43] panosru: sorry I wanted to mention Shaunzie above
[06:43] bambanx: that's what i am seeing
[06:43] Shaunzie: panosru: costs more money than I'd want to spend?
[06:44] hellp has joined the channel
[06:44] Shaunzie: the add ons are expensive…. which annoys
[06:44] panosru: besides the good part that heroku is based on amazon is that it communicates good with the rest of cloud eco system so if for instance you have your node.js app in heroku and your mongodb database on mongohq they are both on amazon so internal communications in amazon are not chargable and heroku supports lot's of those cloud services out of the box with no pain to setup and etc
[06:44] mjijackson has joined the channel
[06:44] Shaunzie: for example, a 2GB red is instance for 300/month?
[06:45] panosru: Shaunzie: costs what?  It is free.. if you need to go on production level it is really good startup I believe
[06:45] bambanx: sometimes i prefer pay a few dollars more and dont spend a lot of time in config
[06:45] chrisdickinson: double checking here, but last i heard node on heroku didn't support websockets.
[06:45] panosru: once you will have lot's of users and then you need scaling and dynos then you can move to custom setup on amazon but still I believe you will save more money and time
[06:46] Shaunzie: a 5MB red is instances is kinda pittance… sure it's free but I'd use it all up in a bout 30 seconds….
[06:47] real_mjr has joined the channel
[06:47] bambanx: What u recommend Shaunzie ?
[06:47] panosru: I believe you could spend some time checking out this presentation (although I don't like the accent it is a nice presentation) http://pusher.mediacore.tv/media/future-is-here-rails-and-cloud-ecosystem
[06:47] panosru: it demonstrate's rails but you could use node.js instead
[06:48] panosru: chrisdickinson: are you sure about that ? because to be honest I didn't knew it
[06:48] chrisdickinson: pretty sure the cedar stack didn't support it.
[06:48] chrisdickinson: ACTION checks.
[06:49] panosru: I guess you are correct
[06:49] panosru: http://stackoverflow.com/questions/3879705/joyent-vs-heroku-for-node-js
[06:49] Shaunzie: panosru: I don't have a problem with the cloud, I have a problem with overpriced infrastructure…
[06:49] panosru: hmm well this affects the decision then :P
[06:49] panosru: Shaunzie: so do I :)
[06:49] panosru: for RND I wouldn't pay
[06:50] chrisdickinson: from my experience, getting started on rackspace cloud is incredibly easy.
[06:50] panosru: but in enterprise level when you convert the business time you will save with heroku (or any other similar cloud system) into money then I guess the cloud comes cheaper
[06:51] panosru: as just chrisdickinson said, "getting started" not only is easy but in the end you gain more business value :)
[06:51] chrisdickinson: or, of course, you could run into fun virtualization problems like getting a box on a busy cluster / ebs dropping out / etc etc.
[06:51] panosru: I mean from business perspective of course other than that yeah I agree with you, I have problem with overpriced things :D
[06:52] chrisdickinson: generally though i'd say picking one of ec2 or rs is a big win. heroku, i'm entirely sure of yet.
[06:52] panosru: well everything counts so it depends on the app and the purpose
[06:52] chrisdickinson: they do make getting up and running *really* easy.
[06:54] panosru: chrisdickinson: my personal opinion is that it depends on the project, on the deadline etc... if I had a project where I have a strict deadline and I need it to be scalable I would prefer heroku-like services where I could focus on the product more rather than the environment
[06:54] garrensm_ has joined the channel
[06:54] panosru: once the product is done and tested I could switch the environment
[06:54] neilk_ has joined the channel
[06:54] SamuraiJack has joined the channel
[06:55] panosru: specially in cases where performance matters heroku comes in very handy with dynos (dynos are processes, you start with one dyno - 1 process - and then you can scale up)
[06:56] Init--WithStyle-: I am creating a node.js server that does a res.end(html) to push html onto the page upon someone entering my site... after that I begin listening... however... I would like to execute some javascript inside of that html via seperate javascript files, and do not know how to "include" them in the html... normally i would go <script='javascriptCode.js'></script> but this doesn't work
[06:56] ambroff has joined the channel
[06:56] panosru: personally most of the times 1 dyno is sufficient
[06:56] fangel has joined the channel
[06:56] Init--WithStyle-: how can i have javascript code execute inside of the HTML file if it isn't directly written in there?
[06:58] Init--WithStyle-: eg.. instead of (inside the html file) <script> some java script </script> i would just put <script = 'myJsFileWithCode.js'></script> 
[06:58] Init--WithStyle-: Does this make any sense?
[06:58] Wizek has joined the channel
[06:59] cmr: Init--WithStyle-: Do you do /any/ clientside work at all?
[06:59] cmr: It's <script src="filename"></script>
[06:59] Init--WithStyle-: yes... the client is responsible for maintaining a physics engine that follows syncs from the server
[06:59] Init--WithStyle-: perhaps i need to use the "VM" module in node.js?
[07:00] cmr: It's <script src="filename"></script>
[07:01] Init--WithStyle-: right
[07:01] cmr: You don't have vm on the client.. you can only serve scripts
[07:01] Init--WithStyle-: how would i serve the script?
[07:01] Init--WithStyle-: doesn't VM take care of that?
[07:01] cmr: With HTTP?
[07:01] cmr: No
[07:02] Init--WithStyle-: normally i would use what you said.. <script src="filename"></script>
[07:02] cmr: Right, and you can still use that.
[07:02] Init--WithStyle-: but how do i get the "filename" to the client?
[07:02] cmr: With HTTP
[07:03] Init--WithStyle-: I don't follow you..
[07:03] cmr: You're already running an http server, right?
[07:03] MrTopf has joined the channel
[07:03] Init--WithStyle-: not recently.. i've been just running the node server
[07:03] cmr: When a client does a "GET /filename", serve the file.
[07:03] Init--WithStyle-: then an apache server is also required?
[07:04] cmr: No... node has an http server.
[07:04] cmr: require('http')
[07:04] Init--WithStyle-: so instead of <script src="filename"></script> how would we proceed?
[07:04] cmr: You do exactly that.
[07:04] Init--WithStyle-: yes, when i create the server that is how I have done so..
[07:04] cmr: And add in logic serverside to serve files.
[07:04] Init--WithStyle-: var server = require('http').createServer(...)
[07:04] Init--WithStyle-: oh...
[07:05] Init--WithStyle-: where in the docs might i find the code relevant to serving files?
[07:05] martin_sunset_ has joined the channel
[07:05] simb has left the channel
[07:05] Init--WithStyle-: via apache.. i never really worried about these sorts of problems
[07:05] cmr: http://nodejs.org/docs/latest/api/http.html http://nodejs.org/docs/latest/api/fs.html
[07:05] cmr: Init--WithStyle-: You could use nginx or lighttpd or something to serve your static content.
[07:06] samrat has left the channel
[07:06] cmr: But you can also do it with node
[07:06] stisti has joined the channel
[07:06] Init--WithStyle-: yea, i would rather do it with node
[07:06] Margle has joined the channel
[07:06] Init--WithStyle-: so when i go "res.end(html);" i am serving an html file correct?
[07:07] yolin has joined the channel
[07:07] niloy__ has joined the channel
[07:07] Init--WithStyle-: where html was created using FS
[07:07] Init--WithStyle-: pulled from my server's directory
[07:07] cmr: Yes
[07:07] Init--WithStyle-: I could use a similar function to serve the JS file beforehand, right?
[07:08] abraxas: since node 0.6, what has sys.puts() been replaced by?
[07:08] cmr: Yes
[07:08] Init--WithStyle-: and then when the HTML fired, it would be able to pull in the javascript file?
[07:08] cmr: Yes
[07:08] Init--WithStyle-: and in that case... <script src="filename"></script> would be correct, since the served file, if not told otherwise, will be just dropped directly on the same level as the html file that is running?
[07:09] cmr: Init--WithStyle-: Yes
[07:09] cmr: abraxas: process.stdout.write
[07:09] abraxas: cmr: alright, the fact that util.puts() exists is simply for BC?
[07:09] cjm has joined the channel
[07:09] Init--WithStyle-: usually, statics that will be used by the client for the session are served during the createServer function?
[07:10] cmr: abraxas: I would assume so, because it's undocumented
[07:10] abraxas: cmr: alright, thanks
[07:10] apwalk has joined the channel
[07:10] cmr: Init--WithStyle-: or with a dedicated web server, yes
[07:11] yawNO has joined the channel
[07:11] Init--WithStyle-: how are integrations between a dedicated web server (apache) and node.js usually performed?
[07:11] Init--WithStyle-: and.. is it even a good idea/
[07:11] Init--WithStyle-: ?
[07:12] cmr: With mod_proxy or similar. If you're already running a web server it's a fine idea.
[07:12] simplyharsh has joined the channel
[07:12] firebalrog has joined the channel
[07:13] litropy has joined the channel
[07:13] amasad_ has joined the channel
[07:13] Init--WithStyle-: cool.. things make a lot more sense. cheers cmr 
[07:13] buttface has joined the channel
[07:13] neilk_ has joined the channel
[07:14] igl: node > apache not so fine
[07:14] simplyharsh has joined the channel
[07:14] simplyharsh has left the channel
[07:14] jsurfer has joined the channel
[07:16] `10: hierarchical events! http://ksdlck.com/post/15961717805/hierarchical-events-and-emitterarchy
[07:17] mattgifford has joined the channel
[07:17] davidbanham has joined the channel
[07:17] apwalk has joined the channel
[07:18] icewhite_ has joined the channel
[07:18] apwalk has joined the channel
[07:19] icewhit__ has joined the channel
[07:20] pauls1 has joined the channel
[07:25] __doc__ has joined the channel
[07:25] wssr has joined the channel
[07:28] Init--WithStyle-: how could i split my server code into two seperate parts? Will I need to somehow use 'fs' to pull in the 2nd part?
[07:28] real_mjr has joined the channel
[07:28] CIA-101: node: 03Ryan Dahl 07master * r21dd53f 10/ Makefile : Makefile: Don't force user to run ./configure first - http://git.io/tdl6fQ
[07:29] cmr: Init--WithStyle-: No, use modules?
[07:29] cmr: ryah_: ohhh, that's fancy!
[07:29] cmr: ryah_: is that landing for 0.7.0 ?
[07:29] ryah_: it'll be in 0.7.1
[07:30] real_mjr has joined the channel
[07:33] Init--WithStyle-: cmr: so lots of server code = one massive server file?
[07:34] aliem has joined the channel
[07:35] cmr: Init--WithStyle-: No, you can split it up and require()
[07:36] Init--WithStyle-: so.. split it up and for example.. create a little module for "thePhysicsCode.js" and "someUtilityCode.js" correct?
[07:36] Init--WithStyle-: then just REQ them in?
[07:36] igl: RTFM
[07:36] igl: http://nodejs.org/docs/v0.6.7/api/modules.html
[07:36] Init--WithStyle-: i'm RTFMing right now :)
[07:36] igl: :)
[07:37] RobWC has joined the channel
[07:37] Init--WithStyle-: ohh interesting stuff
[07:38] Init--WithStyle-: I thought modules were magical
[07:38] skm has joined the channel
[07:38] Init--WithStyle-: turns out they weren't :(
[07:38] cmr: About as magical as http://2.bp.blogspot.com/_QRkWmLt3pbQ/TAF8Y99jnWI/AAAAAAAAAz8/kYg2b6axjVU/s1600/manicorn.jpg
[07:38] Shaunzie: cmr: kinky O.o
[07:39] cmr: Shaunzie: ... not the response I was expecting
[07:39] Shaunzie: cmr: my new Facebook profile photo...
[07:39] cmr: :P
[07:39] robotmay has joined the channel
[07:40] Init--WithStyle-: is there any way to hook up code autocomplete/resolution automagically for node.js and modules placed there?
[07:41] cmr: Probably
[07:41] cmr: Do some AST magic
[07:41] Shaunzie: Init--WithStyle-: mmm you can iterate per files in a directory and require them?
[07:41] wedtm has joined the channel
[07:41] igl: google should fire the entire youtube staff
[07:41] Init--WithStyle-: igl: agree 200%
[07:41] Init--WithStyle-: Shaunzie: er.. wish i understood what you meant :)
[07:41] igl: cant use the "back" key anymore
[07:42] Init--WithStyle-: i have some files required, but autocomplete doesn't work :D
[07:42] igl: tube does 3 redirects
[07:42] igl: fff
[07:42] cmr: Init--WithStyle-: Editor?
[07:42] Init--WithStyle-: spket
[07:42] Init--WithStyle-: under aptana studio 3
[07:43] Morkel has joined the channel
[07:43] cmr: They cheat with their autocompletion, you won't get autocompletion.
[07:43] Shaunzie: Init--WithStyle-: yah… sorry autocomplete blows cow testicles… anyway…. you can use the fs module to get all the files in a directory and then require them to load them.
[07:43] Shaunzie: not so much magic but it should work.
[07:43] Init--WithStyle-: hmmm
[07:44] Init--WithStyle-: but i am already doing so.. for example.. var box2d = require('box2dnode'); .. yet i get no autocomplete on box2d 
[07:44] Init--WithStyle-: perhaps you are talking about a different kind of loading?
[07:44] bacon000 has joined the channel
[07:44] cmr: If you used something decent like vim or emacs you could write a plugin using burrito or something to scan the AST for symbols (in fact, that's one of my upcoming projects, for vim)
[07:45] Shaunzie: Init--WithStyle-: Are you assuming that require a file includes the logic in that file within the global scope? Cause node doesn't do that. If you want to access a function/object within a required file, you need to export it.
[07:51] groom has joined the channel
[07:53] stonebranch has joined the channel
[07:53] torvalamo: cmr, are you saying that nobody's done that already? i thought vim had a ton of dedicated plugin writers
[07:53] ryanrolds has joined the channel
[07:54] ph^ has joined the channel
[07:54] cmr: torvalamo: For node?
[07:54] torvalamo: no in general
[07:54] torvalamo: making autocomplete and all
[07:54] torvalamo: so it's not the case then?
[07:55] cmr: It exists for bunches of languages and there is on for javascript
[07:55] cmr: But it's browser-oriented.
[07:55] torvalamo: right
[07:55] cmr: And can't use an AST in any case for that.
[07:55] neshaug has joined the channel
[07:55] torvalamo: what's an ast
[07:55] cmr: abstract syntax tree.
[07:56] `3rdEden has joined the channel
[07:57] ablomen has joined the channel
[07:58] wssr has left the channel
[07:58] dcelix has joined the channel
[07:58] ccare has joined the channel
[07:59] stonebra_ has joined the channel
[08:00] stonebr__ has joined the channel
[08:00] thirdknife has joined the channel
[08:00] fangel has joined the channel
[08:00] nickdc has left the channel
[08:06] cha0s has joined the channel
[08:07] k1ttty has joined the channel
[08:07] zomg has joined the channel
[08:07] te-brian has joined the channel
[08:08] shinuza has joined the channel
[08:09] thalll has joined the channel
[08:09] tilgovi has joined the channel
[08:10] `3rdEden: abraxas thanks for the pull req <3
[08:11] tomasztomczyk has joined the channel
[08:11] Hanspolo has joined the channel
[08:11] misza222 has joined the channel
[08:12] boltR has joined the channel
[08:13] Init--WithStyle-: during runtime, node runs into the error "unable to load shared library .....node-proxy.node" . I checked to see if it exists.. and it does. This same code works fine on my mac box, but when I try to use it on my linux box this is the error I get.
[08:15] madhums has joined the channel
[08:15] tdegrunt has joined the channel
[08:16] Init--WithStyle-: what are some debugging tactics to debug a "unable to load shared library" error?
[08:17] davetayls has joined the channel
[08:18] yawNO has joined the channel
[08:18] cmr: Init--WithStyle-: How did you install node?
[08:18] yawNO: morning
[08:18] yawNO: :D
[08:18] mc_greeny has joined the channel
[08:19] FireFly has joined the channel
[08:19] [AD]Turbo has joined the channel
[08:19] real_mjr has left the channel
[08:20] jstonne has joined the channel
[08:20] [AD]Turbo: hi there
[08:20] neilk_ has joined the channel
[08:21] raphdg has joined the channel
[08:22] slaskis has joined the channel
[08:22] aliem has joined the channel
[08:24] HardBit has joined the channel
[08:25] bofm has joined the channel
[08:25] mattgifford has joined the channel
[08:25] djcoin has joined the channel
[08:25] Init--WithStyle-: cmr: not sure... I asked our web dev to take care of it haha
[08:26] daleharvey has joined the channel
[08:26] Init--WithStyle-: that would be a problem? :)
[08:26] Glenjamin: hi, does anyone know what version of V8 will have the new GC?
[08:26] hipsters_ has joined the channel
[08:26] devaholic has joined the channel
[08:27] pradeebv has joined the channel
[08:27] garann has joined the channel
[08:28] tomlion has joined the channel
[08:28] disappearedng has joined the channel
[08:28] mikedeboer has joined the channel
[08:28] JKarsrud has joined the channel
[08:29] nicholasf has joined the channel
[08:30] disappea_ has joined the channel
[08:30] Init--WithStyle-: cmr: how might I diagnose if the way node was installed is indeed the reason why I am getting this error?
[08:30] pksunkara has joined the channel
[08:30] cmwelsh has joined the channel
[08:30] jayniz has joined the channel
[08:30] jayniz has joined the channel
[08:30] jayniz has joined the channel
[08:30] avalanche123 has joined the channel
[08:31] cmr: Init--WithStyle-: Oh I don't know. I'd strace it to see what files it's trying to open. strace -e trace=open node
[08:31] cmr: (Assuming linux)
[08:31] Init--WithStyle-: hmm..
[08:31] Init--WithStyle-: perhaps..
[08:31] strmpnk has joined the channel
[08:31] beevits has joined the channel
[08:31] Init--WithStyle-: cmr: do I need to use npm to install the modules seperately on the server, or can i just copy over the "node modules" directory?
[08:31] sgimeno has joined the channel
[08:32] owenb has joined the channel
[08:32] Init--WithStyle-: i mean.. my local server has it's node_modules folder all set up
[08:32] niftylettuce has joined the channel
[08:32] cmr: Init--WithStyle-: Copy over the package.json and "npm install"
[08:32] Init--WithStyle-: can i just copy that in, or do i need to npm?
[08:32] isaacs: Init--WithStyle-: if you're deploying, it's best to check in the node_modules folder, then deploy what you have checked in.
[08:32] markq has joined the channel
[08:32] isaacs: Init--WithStyle-: then just run `npm rebuild` if you have binary deps to re-compile on the target arch.
[08:32] Init--WithStyle-: isaacs: i don't understand.. perhaps you could elaborate a bit?
[08:32] Init--WithStyle-: ah
[08:33] Init--WithStyle-: what if some of my modules don't have a package to rebuild? like some modules I have created myself?
[08:34] isaacs: Init--WithStyle-: find node_modules -name .gitignore | xargs rm; git add node_modules; git archive --tar --prefix=foo/ HEAD | gzip > deploy.tar.gz; scp deploy.tar.gz my-server; ssh my-server "tar xzf deploy.tar.gz -C /path/to/web/root; ..."
[08:34] Init--WithStyle-: isaacs.. if i get this right.. some modules require a rebuild on the deploy target?
[08:34] isaacs: Init--WithStyle-: anything that gets compiled yes.
[08:34] isaacs: if it's just strictly js stuff, then you can skip that step
[08:34] isaacs: but you should really never run `npm install` to set up a production dependency.
[08:35] Init--WithStyle-: Ok so, if i identify a package file or something like that, i will need a rebuild, otherwise, I should be able to copy/paste?
[08:35] Init--WithStyle-: for example, one of my node modules is now.js
[08:35] Init--WithStyle-: and there is a package in there
[08:35] isaacs: Init--WithStyle-: if by copy/paste, you mean, "tar up what's in git, and then scp or rsync it" then yes
[08:35] Init--WithStyle-: I just did a rebuild on my parent directory and it seems to have touched "node proxy" which is where my error is right now
[08:35] icewhite has joined the channel
[08:35] Init--WithStyle-: i mean copy my project's directory and FTP it over to my server
[08:35] isaacs: i don't know what node-proxy is
[08:35] mikl has joined the channel
[08:35] isaacs: ftp!?
[08:35] isaacs: yikes.
[08:35] Init--WithStyle-: it's buried in the node source
[08:35] cmr: yikes indeed...
[08:36] johnhamelink has joined the channel
[08:36] Init--WithStyle-: i'm just playing around and testing right now :D
[08:36] isaacs: you should use something that goes over an ssh tunnel, even for playing around.
[08:36] terite has joined the channel
[08:36] svnlto has joined the channel
[08:36] isaacs: ftp is from the good old days when you knew everyone with a computer by their first name.
[08:36] isaacs: :)
[08:36] Init--WithStyle-: sftp
[08:36] Init--WithStyle-: is what i meant to say
[08:36] Hosh has joined the channel
[08:37] AndreasMadsen has joined the channel
[08:37] Init--WithStyle-: if i was working with other devs I would understand using git
[08:37] Init--WithStyle-: am I still being a fool using sftp drag and drop to quickly test on my external server?
[08:37] secoif has joined the channel
[08:37] justicefries has joined the channel
[08:38] cmr: It's perfectly OK for one person to use git.
[08:38] cmr: I do it all the time.
[08:38] AndreasMadsen has joined the channel
[08:38] jaequery has joined the channel
[08:38] Topcat has joined the channel
[08:38] JasonSmith has joined the channel
[08:38] ryanseddon has joined the channel
[08:39] RexM has joined the channel
[08:39] Init--WithStyle-: cmr: is my process of just updating files via sftp a bad idea though?
[08:39] jetienne has joined the channel
[08:39] Init--WithStyle-: whats the usual way to push files to a external server for rapid testing?
[08:40] p1d has joined the channel
[08:41] salva has joined the channel
[08:41] burningdog has joined the channel
[08:41] AndreasMadsen has joined the channel
[08:42] jayniz has joined the channel
[08:42] jayniz has joined the channel
[08:42] jayniz has joined the channel
[08:42] pksunkara has joined the channel
[08:42] versicolor has joined the channel
[08:42] whitman has joined the channel
[08:43] rijjo has joined the channel
[08:43] svnlto has joined the channel
[08:43] sveisvei has joined the channel
[08:44] context: who is ready for class? http://i.imgur.com/IOSsV.jpg
[08:44] JKarsrud has joined the channel
[08:45] cha0s has joined the channel
[08:45] cha0s has joined the channel
[08:45] fcoury has joined the channel
[08:45] secoif: anyone got a preference on redis client for node?
[08:46] luke` has joined the channel
[08:46] olegp has joined the channel
[08:46] GlynnR has joined the channel
[08:46] wolfeidau has joined the channel
[08:46] bradwright has joined the channel
[08:46] jeremyselier has joined the channel
[08:47] whoops has joined the channel
[08:47] cmr: heh, 20 minutes long
[08:47] stisti has joined the channel
[08:47] owenb has joined the channel
[08:47] GlynnR has left the channel
[08:47] context: cmr: good thing im not teaching it
[08:48] cmr: You plug it in and a window pops up!
[08:48] context: cmr: it'd be two minutes and the class would start with "ok you jack fucks"
[08:48] cmr: Magic!
[08:48] cmr: lol
[08:48] michaelhartau has joined the channel
[08:48] Druide_ has joined the channel
[08:48] strmpnk has joined the channel
[08:49] context: cmr: and would probably consist of "plug in. window pops up. move files around. <insert dramatic pause waiting for hands to pop up>, now get the fuck out of here"
[08:49] garann has joined the channel
[08:49] Init--WithStyle-: where can i find some information about best practices regarding pushing to a production environment/server?
[08:49] Init--WithStyle-: for example.. "remember to npm rebuild"
[08:49] Init--WithStyle-: :D
[08:50] cmr: Write that on an index card ;)
[08:50] Init--WithStyle-: haha
[08:50] torvalamo: send an email with subject "ok you jack fucks"
[08:50] context: torvalamo: i have done similar to that at work before
[08:50] torvalamo: or is it just you?
[08:50] cmr: at Arke, whenever there is a push to the TFS repo there is an automatic build and if it succeeds it moves to a staging area
[08:50] context: torvalamo: people expect it from me
[08:50] moteutsch has joined the channel
[08:52] icewhite has joined the channel
[08:52] litropy has joined the channel
[08:52] moteutsch: I'm creating an MVC web app using node and Express. How would you suggest structuring my application so that only a sub-directory is a public (i.e, "pub/"), but so that certain classes can be used by both the server- and client-side?
[08:53] moteutsch: Anyone does this before?
[08:53] moteutsch: do*
[08:53] k1ttty has joined the channel
[08:53] torvalamo: you mean sharing modules?
[08:53] isaacs: Init--WithStyle-: nudge received: http://static.izs.me/sane-dependencies.pdf
[08:54] wycats has joined the channel
[08:54] tomh has joined the channel
[08:54] LeMike has joined the channel
[08:54] Init--WithStyle-: isaacs: thank you isaacs
[08:54] isaacs: Init--WithStyle-: the words are kind of awkward, since it's meant to be spoken, not read.
[08:54] lperrin has joined the channel
[08:54] Init--WithStyle-: i'm just a newbie here trying to figure out how to make sure I don't spend 5+ hours fixing a problem that is just me incorrectly moving stuff around/building it wrong
[08:55] claudio has joined the channel
[08:55] Init--WithStyle-: for example.. the whole proxy thing.. which was because I didn't rebuild on my target server
[08:55] mrb_bk has joined the channel
[08:55] zomg: moteutsch: you can probably use express' static middleware to allow access to pub, and use some requirejs module on client-side to load node style modules from pub
[08:55] relix has joined the channel
[08:56] dnyy has joined the channel
[08:57] Init--WithStyle-: isaacs: really cool so far.. thanks
[08:57] Init--WithStyle-: isaacs: so when I did an npm rebuild, i was basically just telling my server to "make sure that you have all the dependancies and files you need" correct?
[08:57] isaacs: Init--WithStyle-: no
[08:57] chrisbuchholz has joined the channel
[08:58] moteutsch: @zomg: But then I would have a huge mess with half my classes in pub and the other half in other parts of the app.
[08:58] isaacs: Init--WithStyle-: you were saying, "see these things in the node_modules folder?  run any preinstall/install/postinstall scripts they've defined.)
[08:58] Init--WithStyle-: ohhh
[08:58] isaacs: Init--WithStyle-: rebuild doesn't fetch from anywhere.
[08:58] isaacs: you don't want to ever fetch from another remote server at deploy time.
[08:58] isaacs: that's a huge hazard.
[08:58] Init--WithStyle-: so it can only grab from local
[08:58] Init--WithStyle-: ah
[08:58] Init--WithStyle-: i see
[08:58] Init--WithStyle-: makes sense!
[08:58] isaacs: that way, if you have your deps in git, you can alwyas re-play the deploy, with 100% confidence.
[08:59] isaacs: when you have more than one server, this is super important.
[08:59] isaacs: what if the registry or git repo goes down midway through a deploy?
[09:00] isaacs: guybrush: hey
[09:00] aesptux has joined the channel
[09:00] isaacs: guybrush: ls -laF /usr/local/share/man/man1/npm-link.1 <-- what does that show?
[09:00] guybrush: lrwxrwxrwx 1 root root 45 Jan 17 09:55 /usr/local/share/man/man1/npm-link.1 -> ../../../lib/node_modules/npm/man/man1/link.1
[09:00] isaacs: guybrush: yeah, that's not /home/patrick/bhub/lib/nexus/node_modules/npm
[09:01] isaacs: guybrush: you've changed your global npm install prefix
[09:01] isaacs: guybrush: you can delete the files one by one
[09:01] isaacs: guybrush: or you can install with --force
[09:01] guybrush: oh ok
[09:01] guybrush: thx
[09:01] Nss has joined the channel
[09:01] isaacs: guybrush: that's not the first one you'd hit that with
[09:01] isaacs: you probably deleted a different file, not npm-link.1
[09:02] bradwright has left the channel
[09:02] Hosh has joined the channel
[09:03] zomg: moteutsch: yeah I guess so. I've been thinking of the same issue but so far I've only needed one or two functions in some of my views, so I just print the function in my ejs using func.toString() :P
[09:04] MrTopf has joined the channel
[09:04] lmatteis has joined the channel
[09:04] aaronmcadam has joined the channel
[09:04] hipsters_ has joined the channel
[09:04] zomg: I would guess you could do something like using an initialization script which copies public access scripts into the pub dir when your application is launched or something like that
[09:04] zomg: (or a build script)
[09:04] lauxley has joined the channel
[09:04] mikl has joined the channel
[09:05] Fabryz has joined the channel
[09:05] bambanx: where is node modules?
[09:05] Init--WithStyle-: lol
[09:06] moteutsch: @zomg: I'm thinking of having a structure like /app/, /app/models/, /app/client/models/, /app/server/models/, and then have a symlink or some Express code that allows you to access /app/models/ and /app/client/models/ from /pub/
[09:06] Init--WithStyle-: you need to be more specific then that 
[09:06] mikl has joined the channel
[09:06] moteutsch: @zomg: And /app/models/ would contain the shared code between client and server.
[09:07] guybrush: isaacs: yep it works now
[09:07] adambeynon has joined the channel
[09:09] jimt has joined the channel
[09:10] slaskis has joined the channel
[09:10] ivic has joined the channel
[09:10] zomg: moteutsch: I suppose that would work but deploying it would still involve running a script to create the links
[09:11] stonebranch has joined the channel
[09:11] TomY_ has joined the channel
[09:13] tanepiper has joined the channel
[09:13] icebox has joined the channel
[09:14] raincole has joined the channel
[09:15] luoluoluo has joined the channel
[09:15] nym has joined the channel
[09:16] chrisbuchholz has joined the channel
[09:16] raincole_ has joined the channel
[09:16] maritz has joined the channel
[09:16] remysharp has joined the channel
[09:18] cosmincx has joined the channel
[09:18] ppcano has joined the channel
[09:20] Glenjamin: hi, does anyone know what version of V8 will have the new GC?
[09:24] thirdknife has joined the channel
[09:25] agnat_ has joined the channel
[09:25] uptownben: Anyone help me out with this npm issue? http://pastebin.com/zWxXVNPz
[09:25] uptownben: just update node to 0.6.7, tried npm update -g
[09:26] uptownben: *updated
[09:27] wingie has joined the channel
[09:28] aaa_ has joined the channel
[09:28] isaacs: uptownben: install it again
[09:28] vvo has joined the channel
[09:28] uptownben: I did
[09:28] ralph has joined the channel
[09:28] isaacs: uptownben: install node again
[09:28] isaacs: not npm
[09:28] isaacs: uptownben: how did you install node?
[09:28] uptownben: I downloaded the latest from nodejs.org
[09:28] isaacs: uptownben: downloaded what?  source?
[09:29] isaacs: or binary installer
[09:29] dscape has joined the channel
[09:29] uptownben: downloaded the latest tarball, unpacked, configure, make, make install
[09:29] isaacs: ok
[09:29] isaacs: cd into the source folder, do `make install` again
[09:29] uptownben: on Ubuntu slice on slicehost
[09:29] isaacs: ok
[09:29] dexter_e has joined the channel
[09:29] Skola has joined the channel
[09:30] slaskis: isaacs: is there a change log for npm somewhere?
[09:30] jbpros has joined the channel
[09:31] yawNO has joined the channel
[09:32] isaacs: slaskis: just https://github.com/isaacs/npm/commits
[09:32] iksik_ has joined the channel
[09:32] uptownben: isaacs: did make install, output here: http://pastebin.com/ZkK9jRVG
[09:32] uptownben: 'install' finished successfully (1.748s)
[09:33] slaskis: isaacs: ok
[09:34] isaacs: uptownben: k, it says it installed it
[09:34] isaacs: * installing deps/npm/node_modules/tar/tar.js as /usr/local/lib/node_modules/npm/node_modules/tar/tar.js 
[09:34] MrTopf_ has joined the channel
[09:34] uptownben: OK, I am going to do a npm update -g
[09:34] isaacs: uptownben: n
[09:34] isaacs: no
[09:34] isaacs: don't
[09:34] uptownben: ?
[09:34] sx2020 has joined the channel
[09:35] isaacs: uptownben: you already have the npm version that is tested and approved for that build of node.
[09:35] isaacs: if you want to get a newer one, you can do `npm install npm -g`
[09:35] uptownben: ok, so how do I update my modules?
[09:35] secoif has joined the channel
[09:36] yawNO: morning guys
[09:36] sx2020 has left the channel
[09:36] RLa has joined the channel
[09:36] isaacs: uptownben: what do you want to update?
[09:37] uptownben: I am working on a node app, and I have a few modules in use that haven't been updated, mongoose, express, etc...
[09:37] chrisbuchholz has joined the channel
[09:37] isaacs: uptownben: but aren't those installed locally in your app?
[09:37] chrisbuc1holz has joined the channel
[09:38] uptownben: yes, also globally
[09:38] isaacs: uptownben: `npm update -g` breaks npm.  list the things you want updated.
[09:38] isaacs: uptownben: also, you don't need those things to be installed globally, probably.
[09:38] uptownben: I can try an npm update in that app directory, but that also failed last time
[09:38] iaincarsberg has joined the channel
[09:38] mara has joined the channel
[09:38] isaacs: bedtime.  good night.
[09:39] Init--WithStyle-: just want to say, NPM is fricking awesome
[09:39] Init--WithStyle-: i mean holy christ :D
[09:39] d0k has joined the channel
[09:40] yolin has joined the channel
[09:40] niloy__ has joined the channel
[09:40] amasad has joined the channel
[09:41] robhawkes has joined the channel
[09:41] majek has joined the channel
[09:44] chrisbuchholz has joined the channel
[09:45] uptownben: I think I missed something, can I still install packages globally with npm install <packagename> -g ?
[09:46] uptownben: if so, how do I update those packages if npm update -g is broken?
[09:46] WebRabb1t has joined the channel
[09:46] vguerra has joined the channel
[09:46] niloy__ has joined the channel
[09:46] yolin has joined the channel
[09:47] bLUEEE: in node express, is there an event within the routing or just before routing that you can subscribe to ?
[09:47] chrisbuchholz has joined the channel
[09:47] letsgojuno has joined the channel
[09:47] hellp has joined the channel
[09:48] eldios has joined the channel
[09:48] chrisbuchholz has joined the channel
[09:48] infynyxx has joined the channel
[09:50] yawNO has joined the channel
[09:50] Glenjamin: bLUEEE: what is it you're trying to do?
[09:50] WebRabb1t: Hello to community ^^
[09:50] clarkfischer_ has joined the channel
[09:50] bLUEEE: i am writing a simple cms in node/express and i have two solutions of provding the content to the view
[09:51] WebRabb1t: @ bLUEEE : use something like jqtpl or jade
[09:51] bLUEEE: i.e if i can make the view be bound to the viewmodel
[09:51] WebRabb1t: it's template engine
[09:51] bLUEEE: or i can add a local to the data being sent to the view, but i need to get to it before its rendered out.. 
[09:52] Glenjamin: you could wrap the render function
[09:53] WebRabb1t: https://github.com/kof/node-jqtpl for more informations
[09:53] bLUEEE: Glenjamin yeh i could do that, but its a bit obtrusive, but i was thinking of a cleaner way without "touching" existing code.. 
[09:54] bLUEEE: WebRabb1t i think i am missing something, how is a templating engine going to help ?
[09:55] WebRabb1t: @bluEEE : when you use something like jqtpl, you've render functions
[09:55] WebRabb1t: you can do everything before render
[09:56] kishoreyekkanti has joined the channel
[09:56] bLUEEE: but the engine needs to get the data from somewhere right.. but thats the problem i cant find a clean solution of providing the view with data
[09:56] WebRabb1t: here's my binds : 
[09:56] WebRabb1t: 	// -- Serve admin 	app.all('/:module?/:action?/:operation?', function(req, res, next){ 		 		// -- Default module is home 		req.params.module = req.params.module || 'home' ;  		// -- If module is allowed 		if ( allowedModules[req.params.module] && req.params.action != 'assets' ) { 		    var loadView = new ViewHelper({ 		    	req: req, 		    	res: res, 		    	meta: conf.meta 		    }); 	    }  	     	    // -- Else go to next route 
[09:56] Glenjamin: bLUEEE: the only other option is to attach to req/res - but then the caller will have to pass that to the view
[09:57] Glenjamin: bLUEEE: if this is a cms, isn't there just one route handler which renders a page?
[09:57] WebRabb1t: here is how to render a view and send datas to this one
[09:58] yawNO has joined the channel
[09:58] WebRabb1t: http://pastebin.com/zQT1nSVt
[09:58] bLUEEE: Glenjamin yeh thats the traditional sense, i was trying to write something that can be bolted on to existing sites and provide editable content slots to existing views etc.. 
[09:59] Glenjamin: then either wrap the existing render function, or provide your own render_cms which calls render internally
[09:59] sindresorhus has left the channel
[10:00] jsurfer has joined the channel
[10:00] bLUEEE: yeh, its looking that way... 
[10:00] hugdubois has joined the channel
[10:01] aslant has joined the channel
[10:01] TheFuzzb_ has joined the channel
[10:02] Dreamer3 has joined the channel
[10:02] bLUEEE: oh yeh, one other question.. 
[10:03] ger^kallisti has joined the channel
[10:03] bLUEEE: when you are sending data to a view, its done by locals[], which is loosely bound
[10:03] bLUEEE: is it possible for me to send my own object for which locals is part of it like: localsCms[ data,... locals].. etc
[10:05] bLUEEE: or my object inherits locals
[10:07] Glenjamin: var localsCms = Object.create(locals);
[10:08] bLUEEE: great thanks... 
[10:08] bLUEEE: maybe that can be a way to pass the data.. 
[10:08] klaustsen has joined the channel
[10:08] klaustsen has left the channel
[10:09] chot: hi
[10:09] cryptix has joined the channel
[10:10] chot: I realize this is a very wide question; but can map/reduce be used for "all" kinds of data-transformation. I mean, is there ever a situation where you have some data and you want to derive some new data from it that map/reduce won't be able to handle?
[10:13] RLa: chot, it should work for almost anything
[10:14] RLa: tho data structure between "reduce" steps might be quite complex
[10:14] markwubben has joined the channel
[10:14] xbayrockx has joined the channel
[10:14] dannyamey has joined the channel
[10:15] chot: hm ok, nice
[10:15] cgfuh has joined the channel
[10:16] kishoreyekkanti has joined the channel
[10:16] tomlion has joined the channel
[10:17] tonymilne has joined the channel
[10:18] amasad has joined the channel
[10:18] rurufufuss has joined the channel
[10:19] TheFuzzball has joined the channel
[10:19] kulor-uk has joined the channel
[10:19] TheFuzzb_ has joined the channel
[10:20] TheFuzzball has joined the channel
[10:20] TheFuzzb_ has left the channel
[10:21] TheFuzzb_ has joined the channel
[10:22] BrianE has joined the channel
[10:24] luoluoluo has joined the channel
[10:25] Carmivore has joined the channel
[10:25] Carmivore has joined the channel
[10:26] MrTopf_ has joined the channel
[10:26] dob_ has joined the channel
[10:26] Skaag has joined the channel
[10:28] dnjaramba has joined the channel
[10:30] hz has joined the channel
[10:31] Swizec has joined the channel
[10:32] eee_c has joined the channel
[10:34] Glenjamin: chot: RLa, anything the requires sequential processing probably won't be translatable to map-reduce
[10:36] dobber has joined the channel
[10:38] chot: Glenjamin: what do you mean with sequential processing?
[10:39] mikl has joined the channel
[10:39] simenbrekken_ has joined the channel
[10:39] tvw has joined the channel
[10:40] secoif: SubStack i can pass an express server to dnode.connect(), but I cannot pass a dnode server?
[10:40] RLa: Glenjamin, something that depends on multiple values?
[10:41] secoif: SubStack eg   var a = dnode(); var b = dnode.connect(a, function() { console.log(arguments) })
[10:41] SubStack: pass a dnode server I don't even
[10:41] simenbrekken_: Does the FD from fs.readFile linger somewhat? I'm properly queueing up my reads in a 25 length concurrency queue but I'm still getting too many open files errors
[10:41] secoif: SubStack am I talking garbage?
[10:41] SubStack: secoif: just pass the connection info
[10:43] secoif: SubStack Alright. I was to get the fellas to talk in a test, and figured was going to be able to stub some of the methods on the dnode endpoint that was listening on a particular port
[10:44] secoif: as in, I didn't want to actually have to boot up a real dnode instance
[10:44] secoif: perhaps this is a better question:
[10:44] secoif: SubStack how can I mock dnode?
[10:45] LeMike has joined the channel
[10:47] msteinert has joined the channel
[10:48] SubStack: sec	don't do that
[10:48] jetienne_ has joined the channel
[10:48] SubStack: secoif: don't do that
[10:48] tytsim has joined the channel
[10:48] SubStack: just listen on a random port
[10:48] SubStack: I do that all the time
[10:49] tylerstalder has joined the channel
[10:49] SubStack: mocks are last-resort
[10:49] fermion has joined the channel
[10:49] dshaw_ has joined the channel
[10:50] Dreamer3 has joined the channel
[10:52] Glenjamin: SubStack: why do you say that?
[10:52] Glenjamin: do you mean when testing dnode, or in general
[10:52] secoif: SubStack I guess i could simply boot up dummy dnode instance instead of the expected dnode instance.
[10:52] SubStack: Glenjamin: because it's way more code and you have to take care of all the hairiness of emulating a real interface when you mock things out
[10:53] Glenjamin: but it generally means you can have faster test runs, and you don't have to deal with resetting external state
[10:53] SubStack: it's usually far easier and more realistic to just run a real service on the network or hit the real disk
[10:53] fangel has joined the channel
[10:53] secoif: SubStack and basically just do integration tests?
[10:53] neilk_ has joined the channel
[10:54] SubStack: people mean a lot of things when they say "integration tests"
[10:54] Glenjamin: the problem with tests which span more than one component, is that its more difficult to isolate the cause of failure
[10:56] tonymilne has joined the channel
[10:58] robotmay has joined the channel
[10:59] SubStack: it seems like mocks introduce an unnecessary extra variable into your experimental testing design 
[10:59] SubStack: that is the mapping between your mock and the real external interface
[11:00] ivic has joined the channel
[11:00] raincole_ has joined the channel
[11:00] SubStack: and mocks tend to be a lot of effort
[11:01] torvalamo: yeah what if the mock is bugged
[11:01] torvalamo: do you mock the mock to test? :P
[11:01] SubStack: yes
[11:02] Margle has joined the channel
[11:02] SubStack: mocks are occasionally necessary but I don't use them for the general case
[11:02] iksik_: i'm looking for something like this: https://gist.github.com/715255 - but for *bsd systems... are there any ready-to-use solutions?
[11:03] Glenjamin: after dealing with a load of mocking complexity lately when testing my test framework, i'm inclined to agree
[11:04] salva has joined the channel
[11:05] chrisvwebdev has joined the channel
[11:05] tonymilne: Are using event emitters considered good/bad practice in web apps? (I've written up some notes if anyone cares to read and throw me an opinion - http://hastebin.com/kukitivewo.vhdl)  
[11:06] tdegrunt_ has joined the channel
[11:07] igl: no wikipedia tomorrow ^^
[11:07] chjj: tonymilne: whats wrong with event emitters?
[11:07] igl: theyll turn off as protest against the america law bs again
[11:08] tonymilne: chjj I dunno. ;) Just asking if anyone knows if there is any anti practice around doing what i'm doing?
[11:08] carnau has joined the channel
[11:08] tonymilne: chjj i really like the approach I'm taking. I think it isolates the tasks of each model better.
[11:09] carnau: Is there any way to change the process.cwd when I start a js with forever?
[11:09] robi42 has joined the channel
[11:10] robi42 has joined the channel
[11:10] christkv has joined the channel
[11:10] chrisvwebdev has left the channel
[11:11] thalll has joined the channel
[11:11] chjj: tonymilne: im confused, youre worried about using EE on the client side?
[11:12] tonymilne: chjj haha, no server side. Just wondering if it causes excess memory or any weird side effects to using them more heavily.
[11:12] chjj: tonymilne: i think tj usually shims in EE whenever he writes something for the browser, if that makes you feel better
[11:12] Glenjamin: carnau: try   --sourceDir      The source directory for which SCRIPT is relative to
[11:12] carnau: Glenjamin, many thanks!
[11:12] sotosof has joined the channel
[11:12] chjj: tonymilne: EE is a core part of node, if it were bad practice, i think people would be uneasy about node using it internally
[11:13] chjj: tonymilne: there are use-cases where callbacks would be a better solution than EE, and theres situations where EE is better than callback-style
[11:13] TimTim has joined the channel
[11:14] tonymilne: chjj I'm trying to separate concerns so that multiple models (e.g. user, badge for example) can all act once a certain event occurs - so i figure it's pretty legit use case for EE.
[11:14] cryptix: can v8 be compiled without backtrace support?
[11:14] tonymilne: chjj thx for the chat though. I really appreciate it.
[11:14] davetayls has joined the channel
[11:15] chjj: tonymilne: thats the thing with node i think. there arent any rules, if it works it works
[11:15] chjj: or if it works well, it works well
[11:15] Alpha|home has joined the channel
[11:15] jldbasa has joined the channel
[11:17] hackband has joined the channel
[11:17] carnau: Glenjamin, no, still being '/', instead what i want.
[11:18] yolin has joined the channel
[11:18] Glenjamin: pushd && forever && popd ? :p
[11:19] tonymilne has joined the channel
[11:19] niloy__ has joined the channel
[11:20] yawNO has joined the channel
[11:23] martin_sunset_ has joined the channel
[11:24] tonymilne has left the channel
[11:25] tytsim has joined the channel
[11:26] yawNO has joined the channel
[11:26] carnau: Glenjamin, could be an option, but I think the --sourceDir option should work well.
[11:26] N0va` has joined the channel
[11:26] maushu has joined the channel
[11:27] mateodelnorte has joined the channel
[11:28] gordonmattey has joined the channel
[11:30] robde has joined the channel
[11:30] bicranial_ has joined the channel
[11:31] tytsim has joined the channel
[11:31] ivic_ has joined the channel
[11:32] bullicon has joined the channel
[11:33] bullicon: hey I am using the node.js interpreter
[11:33] riven` has joined the channel
[11:33] fastest963 has joined the channel
[11:33] bullicon: how do I break out of an error
[11:33] bullicon: break out of an incomplete statement
[11:33] bullicon: where I keep having ..   
[11:33] bullicon: ...   
[11:33] bullicon: ...   
[11:33] Druide_ has joined the channel
[11:34] bullicon: its ctr_c in python
[11:34] lukegb has joined the channel
[11:34] davetayls has joined the channel
[11:35] MrTopf has joined the channel
[11:35] niloy__ has joined the channel
[11:35] mashed has joined the channel
[11:36] yolin has joined the channel
[11:36] Glenjamin: ctrl+c should work
[11:36] tuhoojabotti has joined the channel
[11:36] gwoo has joined the channel
[11:36] gwoo has joined the channel
[11:36] bingomanatee_ has joined the channel
[11:37] bullicon: ctrl+c breaks out of the prompot
[11:38] sharkbird has joined the channel
[11:38] tauren_ has joined the channel
[11:38] cha0s has joined the channel
[11:38] cha0s has joined the channel
[11:39] T-Co has joined the channel
[11:39] zpao has joined the channel
[11:39] tdegrunt has joined the channel
[11:39] devaholic has joined the channel
[11:39] Corey_ has joined the channel
[11:39] Blorb has joined the channel
[11:40] delnaught has joined the channel
[11:40] duckspeaker has joined the channel
[11:40] pokoli has joined the channel
[11:40] russell_h has joined the channel
[11:40] mpereira has joined the channel
[11:40] cognominal has joined the channel
[11:40] jgaui has joined the channel
[11:40] velts has joined the channel
[11:40] maushu: Hmm, can't find anything about isolates in the docs.
[11:41] maushu: Are we going to use process.fork()?
[11:41] Kami_ has joined the channel
[11:41] SirFunk has joined the channel
[11:42] pct has joined the channel
[11:42] jvolkman has joined the channel
[11:42] Juan77 has joined the channel
[11:42] TomY_ has joined the channel
[11:42] fredjs has joined the channel
[11:42] QaDeS has joined the channel
[11:43] simenbrekken_: When limiting my concurrent fs.readFile calls to 25 I'm still hitting the "Too many files open" brick wall, does fs.readFile close the handle immediately after the callback fires?
[11:44] Wizek has joined the channel
[11:44] yawNO has joined the channel
[11:44] maushu: simenbrekken_: Are you calling the other readFiles only on the callback?
[11:45] simenbrekken_: maushu: yes, i'm using async.queue with a concurrency of 25
[11:47] MrBig has joined the channel
[11:48] fredjs: Hello guys, how can use a buffer to convert from ascii to utf8? the new Buffer('à', 'ascii').toString('utf8') is not supposed to do the work?
[11:49] simenbrekken_: Here's a quick pastebin of the readFile/writeFile caching part of my script. http://hastebin.com/benuciqeba.js
[11:50] fly-away has joined the channel
[11:51] maushu: simenbrekken_: Yeah, I checked the sauce, doesn't seem to destroy the file descriptor...
[11:51] tomlion has joined the channel
[11:51] simenbrekken_: I'm on 0.6.6
[11:52] level09 has joined the channel
[11:52] jbpros has joined the channel
[11:52] ivic_ has joined the channel
[11:52] maushu: I wonder why.
[11:52] simenbrekken_: yes, i'm pretty sure I'm doing this completely by the book
[11:52] simenbrekken_: maushu: what exactly do you mean by sauce? :P
[11:53] deoxxa: source
[11:53] deoxxa: but tastier
[11:53] maushu: https://github.com/joyent/node/blob/master/lib/fs.js#L74
[11:53] simenbrekken_: maushu: wtf, the readStream is only destroyed on err?
[11:54] jomoho has joined the channel
[11:54] uchuff has joined the channel
[11:54] merlin83 has joined the channel
[11:54] maushu: Maybe its reused? I have no idea.
[11:55] deoxxa: pretty sure it's closed inside stream
[11:55] deoxxa: i.e. https://github.com/joyent/node/blob/master/lib/stream.js somewhere
[11:55] maushu: simenbrekken_: Try this: Copy that code to your codebase, add destroy stream after getting the data, use that function instead to see if there are any problems.
[11:57] jetienne has joined the channel
[11:58] vguerra_ has joined the channel
[11:58] niloy__ has joined the channel
[11:58] vguerra has joined the channel
[11:59] yolin has joined the channel
[12:00] unomi has joined the channel
[12:03] simenbrekken_: Ouch... now that's embarrasing... I just *might* have called my callback inside a for loop
[12:03] HardFu: Man, gotta love MongoDB. 50k documents, 8 MB :)
[12:03] ph^ has joined the channel
[12:05] simenbrekken_: maushu, deoxxa: thanks for your help anyway, I accidentally called my read complete callback about 20 times per file :S
[12:05] deoxxa: oops!
[12:05] simenbrekken_: Classic indentation fuckup
[12:05] deoxxa: happens to the best of us
[12:05] deoxxa: and by best of us
[12:05] deoxxa: i of course mean me.
[12:05] stagas has joined the channel
[12:05] Glenjamin: long block?
[12:05] deoxxa: ACTION leans back
[12:05] simenbrekken_: I'll have to write a SublimeText plugin that magically catches those
[12:06] cmr: Yes, magic is what is needed.
[12:06] cmr: Summon the wizards!
[12:06] maushu: SUMMON THE PITCHFORKS!
[12:06] simenbrekken_: cmr: Snape killed them all, god damn Snape.
[12:07] bullicon has left the channel
[12:07] dharmesh has joined the channel
[12:08] deoxxa: HardFu: i had a mongodb box run out of disk space the other day - ~20GB database :(
[12:08] deoxxa: turns out our throughput went up by uh, a lot
[12:08] deoxxa: and none of our monitoring caught it because we were still <1% cpu usage
[12:08] deoxxa: haha
[12:09] deoxxa: ACTION <3 node.js
[12:09] purr: Let it be known that deoxxa hearts node.js.
[12:09] deoxxa: ^^ this
[12:09] HardFu: 20GB, that's quite a lot :)
[12:09] deoxxa: yeah, we're dumping radius data into mongodb
[12:09] HardFu: well If I get to that point i'll buy a SSD
[12:09] simenbrekken_: deoxxa: curious, what are you using for monitoring? I'm running all my stuff with forever now but I'd really like something similar to upstart/monit, preferably written in node
[12:10] deoxxa: i'm not sure what it's running, i didn't set it up
[12:10] deoxxa: it's some general system monitoring thing
[12:10] deoxxa: munin? maybe?
[12:10] deoxxa: it emails us if we go over x cpu usage for y time, go into swap memory, etc
[12:10] HardFu: simenbrekken_: I would recommend serverdensity
[12:10] deoxxa: but the guy who set it up didn't set up the disk space alerts
[12:10] deoxxa: so yeah, derp
[12:11] HardFu: great service, excelent response times
[12:11] michaelhartau has joined the channel
[12:11] simenbrekken_: HardFu: interesting, i'll definitely look at it
[12:13] HardFu: you can set up alerts for all kinds of things, and the best it's totally off your server (apart from their agent script) so you don't have to worry about anything
[12:14] deoxxa: we were using something like that at one point
[12:14] deoxxa: turns out their daemon died when we filled up a disk
[12:14] deoxxa: juuuust great
[12:14] deoxxa: that one's probably better though
[12:15] mehlah has joined the channel
[12:16] AndreasMadsen has joined the channel
[12:16] Kunda has joined the channel
[12:16] AndreasMadsen: Hey, I need the utf8 coffee cup symbol
[12:17] simenbrekken_: AndreasMadsen: http://en.wikipedia.org/wiki/Miscellaneous_Symbols U+2615	&#9749;
[12:18] AndreasMadsen: simenbrekken_: thanks
[12:19] AndreasMadsen: simenbrekken_: The coffee cup symbol is not ther e:(
[12:19] simenbrekken_: AndreasMadsen: ☕
[12:19] AndreasMadsen: simenbrekken_: thanks
[12:20] zitchdog has joined the channel
[12:20] HardFu: deoxxa: I use external mongodb provider because of that, and let them worry about diskspace :)
[12:20] HardFu: Heroku + MongoLab
[12:20] deoxxa: HardFu: how much does that set you back?
[12:20] shellox has left the channel
[12:20] HardFu: Well I'm currently using the development package that comes with 240MB diskspace for free
[12:21] HardFu: heroku is $35
[12:21] simenbrekken_: HardFu: Heroku didn't support node.js when I started this project so I'm still on EC2 but it looks nicer than a puppy
[12:21] captain__ has joined the channel
[12:21] zomg: 240mb? I couldn't even fit my DB into that :(
[12:21] zomg: Stats collectiong and logging takes too much space
[12:21] zomg: :P
[12:21] HardFu: well it depends, I currently only fill about 2-3MB/day
[12:21] HardFu: so it suits me
[12:22] deoxxa: yeah, we use a good couple of hundred megabytes each day
[12:22] HardFu: once I'll get over that, I'll switch over to payed acc
[12:22] zomg: My mongo storage dir seems to bloat kind of randomly
[12:22] zomg: it was at 500'ish for a few days then it suddenly became 630mb
[12:22] hz has joined the channel
[12:22] HardFu: zomg, because it's allocating space
[12:22] simenbrekken_: That kind of cost is minimal compared to how much time you have to spend setting up monitoring/restarts/environments/ami's/compiling node etc. etc. in my experience. I'd easily pay 20-30% more than plain EC2 if I had those things taken care of, as Heroku is doing
[12:22] zomg: HardFu: yeah thought so =)
[12:23] HardFu: simenbrekken_:  yeah, I agree I prefer to get server stuff out of my way
[12:24] HardFu: deoxxa: do you map reduce into permanent collections?
[12:24] deoxxa: technically, yes, but we delete them right afterwards
[12:27] piscisaureus_ has joined the channel
[12:28] HardFu: why is that isn't it easier to operate on them than the original logs?
[12:28] HardFu: I'm just developing an application and I'm gathering input on best practices
[12:29] deoxxa: yeah but we don't need to do the same queries over and over
[12:29] deoxxa: it's very ad-hoc
[12:29] deoxxa: that's why it's in mongo - we pretty much have no idea what's coming from one minute to the next
[12:31] HardFu: do you do fulltext searc?
[12:31] deoxxa: nope
[12:32] deoxxa: nearly none of our data is human readable
[12:32] cmr: deoxxa: sure it is, if the human is real careful ;)
[12:32] jamescarr has joined the channel
[12:32] deoxxa: and if they have a nice font available :P
[12:32] zomg: I'm probably going to do daily snapshots for my data in mongo
[12:32] yawNO has joined the channel
[12:33] deoxxa: it's http://en.wikipedia.org/wiki/RADIUS data, HardFu
[12:33] cmr: Ah
[12:33] deoxxa: most of which is numeric
[12:33] zomg: I think I'll just create a straight copy of the stuff into another collection or something
[12:33] kulor-uk has joined the channel
[12:33] deoxxa: signal levels, uptime, etc etc
[12:33] HardFu: interestign
[12:33] lzskiss has joined the channel
[12:33] deoxxa: boring stats on their own, but together they let us get a real insight into where problems are on the cell network
[12:34] buttface has joined the channel
[12:36] koo3 has joined the channel
[12:38] tytsim has joined the channel
[12:41] ivic has joined the channel
[12:41] LeMike has joined the channel
[12:42] Registered has joined the channel
[12:42] eee_c has joined the channel
[12:43] madhums has joined the channel
[12:43] koo3 has joined the channel
[12:45] niloy__ has joined the channel
[12:45] yolin has joined the channel
[12:46] ivic has joined the channel
[12:47] cha0s has joined the channel
[12:47] ivic_ has joined the channel
[12:47] icrazyhack has joined the channel
[12:48] deoxxa: oh and HardFu, for full text stuff with mongo i use elasticsearch
[12:48] deoxxa: forgot to mention that
[12:48] deoxxa: we just don't use it at work :P
[12:48] garrensm_ has joined the channel
[12:49] agnat has joined the channel
[12:49] HardFu: I'll google that :)
[12:50] TomY has joined the channel
[12:50] piscisaureus_ has joined the channel
[12:52] Drakonite has joined the channel
[12:55] piscisaureus_ has joined the channel
[12:56] crab has joined the channel
[12:57] crab: iirc npm used to install modules in ~/.node_modules at one time. now it uses ~/node_modules. is there a simple way to revert to the old behaviour?
[12:57] noodletraveler has joined the channel
[12:57] scott_gonzalez has joined the channel
[12:58] cmr: mv {.,}node_modules ?
[12:59] crab: no, wrong direction. i want it to install modules into .node_modules.
[12:59] pdodde has joined the channel
[12:59] cmr: Ah, missed the "to" after "revert"
[13:00] amasad has joined the channel
[13:00] crab: (actually, it may have been .node/modules. i don't remember which, it was a long time ago. but a dot-directory for sure.)
[13:01] cmr: I doubt it. Why do you want to?
[13:02] crab: because (unfortunately) i have a directory named node_modules that contains something completely unrelated, which it would be rather troublesome to rename.
[13:02] deoxxa: why on earth
[13:02] deoxxa: what?
[13:02] cmr: That is very unfortunate.
[13:03] cmr: Terrible luck!
[13:03] robinduckett: node just appears to be broken in general today
[13:03] deoxxa: either that or an exceptional number of people are doing silly things today
[13:04] deoxxa: i'm banking on that one
[13:04] robinduckett: for example, an express app that's been working fine for weeks suddenly decides today that connect-form isn't going to call form.complete anymore
[13:04] robinduckett: and I haven't modified it, restarted it, nothing
[13:04] crab: so there's no easy way to make npm use a different directory? (i'm installing node/npm only to use less and uglifyjs, so moderate hackishness would be ok, i guess)
[13:05] robinduckett: crab: can you not just install them through git and manually link the binaries?
[13:07] crab: i don't know. if you think that'd work, i'll try it.
[13:07] shinuza has joined the channel
[13:07] robinduckett: fyi anyone who may read a log of this in a years time, i fixed my issue by forcing it to not use the varnish/nginx proxy when accepting the form data
[13:07] robinduckett: crab: it may do
[13:08] robinduckett: I always find it best to use nvm/npm and just let them have their node_modules folder
[13:08] robinduckett: as node_modules isn't a npm thing, it's a node thing
[13:08] robinduckett: so it's not npm that's using that folder
[13:08] robinduckett: it's node
[13:08] robde has joined the channel
[13:08] robinduckett: there's some psuedocode on the api docs describing how node searches for modules
[13:09] N0va` has joined the channel
[13:10] EvRide has joined the channel
[13:11] cha0s has joined the channel
[13:11] cha0s has joined the channel
[13:11] noodletraveler_ has joined the channel
[13:11] brianseeders has joined the channel
[13:12] noodletr1veler_ has joined the channel
[13:12] crab: robinduckett: just linking ~/bin/lessc to ~/extern/less.js/bin/lessc does seem to work. thanks for the tip.
[13:13] robinduckett: np
[13:13] crab: it doesn't work for uglifyjs, but oh well.
[13:14] robinduckett: what errors does uglify give?
[13:14] noodletraveler has joined the channel
[13:15] marcello3d has joined the channel
[13:15] marcello3d has joined the channel
[13:15] enmand has joined the channel
[13:16] fangel has joined the channel
[13:16] crab: http://pastebin.com/ezU8kTYw
[13:17] jetienne has joined the channel
[13:18] icebox has joined the channel
[13:19] yawNO has joined the channel
[13:19] joshfinnie has joined the channel
[13:21] robinduckett: crab: I am not sure I'm afraid
[13:21] ovaillancourt has joined the channel
[13:23] tomasztomczyk has joined the channel
[13:25] richard has joined the channel
[13:25] briancray has joined the channel
[13:26] yawNO: sup guys
[13:28] jtrudeau has joined the channel
[13:28] crab: i think uglifyjs doesn't even work with node 0.6.7. even npm install fails with "no compatible version".
[13:29] cha0s has joined the channel
[13:29] cha0s has joined the channel
[13:30] vkareh has joined the channel
[13:32] davidbanham has joined the channel
[13:33] morteza has joined the channel
[13:33] morteza: who can help me to run ffmpeg using nodejitu's forever
[13:33] morteza: ?
[13:33] morteza: how should I run a linux command using forever
[13:35] robinduckett: morteza: why do you want ffmpeg to run all the time? that seems silly.
[13:36] robinduckett: forever only works with node apps
[13:36] shinuza has joined the channel
[13:36] morteza: that's because I use it as a stream convertor
[13:36] morteza: converter
[13:36] quijote has joined the channel
[13:37] robinduckett: morteza: and that requires it to run all the time?
[13:37] robinduckett: I don't think so
[13:37] robinduckett: run once per stream maybe
[13:38] morteza: yes its a streaming server
[13:38] noodletraveler has joined the channel
[13:38] morteza: but sometimes ffmpeg's process is killed with no reasonable cause 
[13:39] robinduckett: so you're trying to run ffserver rather than ffmpeg
[13:39] morteza: anyway I should use -c option with forever to run an external command instead of node
[13:39] cmr: morteza: That doesn't sound good at all... you should find out why it dies
[13:39] aheckmann has joined the channel
[13:39] pradeebv has joined the channel
[13:39] morteza: yeah I should but I'm running out of time for this project. Im going to find the cause later;)
[13:40] uptownben: anyone know how I should update globally installed packages via npm? isaacs mentioned that npm update -g breaks npm...
[13:40] subhaze has joined the channel
[13:40] morteza: robinduckett : no Im using ffmpeg to convert it, I use wowza server to restream it using different protocols
[13:41] robinduckett: morteza: then if you're not trying to run it as a daemon, why would you need it to be running all the time?
[13:41] robinduckett: morteza: are you aware what forever does?
[13:41] robinduckett: this conversation is academic due to the fact that forever will only keep a node instance alive.
[13:42] morteza: robinduckett let me describe it: I have a live stream in wmv format
[13:42] Margle has joined the channel
[13:42] morteza: I convert it using ffmpeg and then restream it using h264 over rtsp rtp http etc with wowza server
[13:42] morteza: I want to keep it up for ever because it should always convert the stream
[13:43] koo3 has joined the channel
[13:43] morteza: and yes Im aware what forever does and I know that it executes more than node processes
[13:43] deedubs has joined the channel
[13:43] morteza: you can use -c ffmpeg and it will execute input stream using ffmpeg instead of node
[13:43] crab has left the channel
[13:43] morteza: I just found it out;)
[13:44] robinduckett: morteza: but if you're not writing any of this in node, why are you here?
[13:44] LeMike has joined the channel
[13:44] robinduckett: go read the documentation and gtfo
[13:44] fumanchu182 has joined the channel
[13:44] morteza: because I wanted forever expert here for some other problems and it seems no one here.
[13:44] morteza: ok!
[13:44] robinduckett: you become the expert
[13:45] robinduckett: by reading documentation
[13:45] kyonsalt has joined the channel
[13:45] jbrokc has joined the channel
[13:45] robinduckett: or go bother @indexzero on twitter
[13:45] robinduckett: because he'd love to help you out
[13:45] cmr: morteza: -c is the executable to run on SCRIPT, afaict
[13:45] robinduckett: OR join #nodejitsu and talk to the creators directly
[13:46] robinduckett: cmr: I think the issue here is that I do not think it does what he thinks it does and even if it does, he is not asking the right people.
[13:46] robinduckett: Not that I'm trying to sound unhelpful, but use the right tool for the job
[13:46] erichynds has joined the channel
[13:47] morteza: robinduckett I already read the documentation. you are not the only one who knows it!
[13:47] cha0s has joined the channel
[13:47] morteza: I just wanted some help for something else in forever 
[13:47] cha0s has joined the channel
[13:47] robinduckett: a) he should be using ffserver rather than just hoping ffmpeg stays alive whilst the stream is coming in (i.e. when the stream ends or pauses ffmpeg will quit, ffserver will not)
[13:47] morteza: I asked anyone here familiar with forever. ok>
[13:48] robinduckett: b) he shouldn't be using forever to try and angle any of that unless he's built an underlying node server that controls the fundamentals
[13:48] robinduckett: You have found someone familiar with ffmpeg, streaming, conversion, transcoding, node and forever
[13:48] robinduckett: and he is telling you, that you are doing it wrong.
[13:49] Nss_ has joined the channel
[13:49] robinduckett: infact you can use ffserver by itself to take the live wmv feed in and output to http/rtsp/rtp
[13:49] morteza: ok thank you and I just told what Im doing:)
[13:50] robinduckett: gives you the ability to do all sorts of timeshifting etc whatever
[13:50] morteza: yes but I need to convert wmv to h264 so I can play it on android. 
[13:50] morteza: aha,
[13:50] morteza: so I'm going to try ffserver
[13:50] robinduckett: http://ffmpeg.org/ffserver.html
[13:51] koo3 has joined the channel
[13:51] morteza: can you help me on that? to convert my ffmpeg command to ffserver ?
[13:51] robinduckett: morteza: http://ffmpeg.org/ffserver.html#toc-How-do-I-make-it-work_003f
[13:51] fairwinds has joined the channel
[13:52] Nss__ has joined the channel
[13:52] robinduckett: morteza: infact that whole page should enable you to do whatever you like
[13:52] morteza: robinduckett I read it before but couldn't realize ffserver config file and I'm running out of time for my project . thank you for your help:)
[13:52] cmr: He, that's quite the appropriate anchor. I could never get ffserver to work, I felt like I was bashing my head against a wall. Lots of people reported success, though, so maybe I was just missing something majorly important
[13:52] neurodrone has joined the channel
[13:53] Nss has joined the channel
[13:53] robinduckett: cmr: I tend to find ffmpeg is like a fussy exgirlfriend that you are still trying to score with, you know what you need to do to get her to do what you want but you just can't quite bring yourself to lap up the blood.
[13:54] robinduckett: cmr: Like the ex girlfriend, I am also somewhat dissappointed with the quality of results I get out of ffmpeg.
[13:54] koo3 has joined the channel
[13:55] cmr: Heh
[13:55] qsobad has joined the channel
[13:56] pradeebv_ has joined the channel
[13:56] richard_ has joined the channel
[13:57] carlyle has joined the channel
[14:00] Wizek has joined the channel
[14:02] booo has joined the channel
[14:03] Locke23rus_ has joined the channel
[14:04] xetorthio has joined the channel
[14:04] peterrs has joined the channel
[14:04] morteza: robinduckett: http://ffmpeg.org/sample.html 
[14:05] morteza: robinduckett: here it defines feed as a file.
[14:05] morteza: I want to feed it with a live stream that is broadcast under mmsh
[14:06] morteza: do you know what is the command?
[14:06] lduros has joined the channel
[14:06] peterrs: using the express framework, is there any way of calling a route using app.lookup('/my/route/param1')() without having to perform a http request?
[14:06] bkaney has joined the channel
[14:07] dubenstein has joined the channel
[14:07] lazyshot has joined the channel
[14:08] peterrs: like some kind of a mock request that returns the result from a given route..
[14:09] davetayls has joined the channel
[14:11] kriszyp has joined the channel
[14:12] k1ttty has joined the channel
[14:12] herbySk has joined the channel
[14:13] chunhao_ has joined the channel
[14:13] vdemedes has joined the channel
[14:13] vdemedes: Hello!
[14:14] janne has joined the channel
[14:14] vdemedes: My app/server eventually crashes with ECONNRESET, EPIPE error events
[14:14] VesQ has joined the channel
[14:14] k1ttty_ has joined the channel
[14:14] vdemedes: with ECONNRESET there is more than nothing known
[14:14] vdemedes: but what the heck is write: EPIPE?
[14:15] AaronMT has joined the channel
[14:17] vdemedes: please, help!
[14:18] sgimeno has joined the channel
[14:18] cmr: vdemedes: It means broken pipe, I think it happens when a socket or other such fd closes suddenly
[14:18] cmr: Not positive.
[14:18] vdemedes: cmr: when client closes connection?
[14:18] ivic has joined the channel
[14:19] vdemedes: cmr: how can I catch these errors in Express?
[14:19] cmr: vdemedes: No, EPIPE is abnormal. I don't know.
[14:19] martndemus has joined the channel
[14:19] vdemedes: cmr: wrap server init method with try {} catch?
[14:19] vdemedes: cmr: I need at least something
[14:19] cmr: vdemedes: Maybe, I honestly have no idea. Is it throwing an exception?
[14:19] Nss has joined the channel
[14:20] vdemedes: cmr: yeah
[14:20] cmr: Then you can use try/catch
[14:20] aslant has joined the channel
[14:21] c4milo has joined the channel
[14:21] deoxxa: probably a good idea to find why that's happening, vdemedes
[14:21] Vennril has joined the channel
[14:21] qsobad has joined the channel
[14:21] deoxxa: i know that's an annoying answer, but you'll be happy later if you do find it
[14:21] vdemedes: deoxxa: yeah, this is good idea. But I don't know why is this error happening! It does not happen every time
[14:22] vdemedes: it happens eventually and kills app
[14:22] deoxxa: is there a proxy in front of it? nginx or something?
[14:22] cmr: deoxxa: EPIPE is for when you try to write/read to a fd that is no longer open, or something along those lines, I think
[14:22] deoxxa: yeah, broken pipe
[14:22] deoxxa: can be if stdout goes away as well
[14:22] vdemedes: deoxxa: nope, "clean" node instance
[14:23] Venom_X has joined the channel
[14:23] deoxxa: cmr: try piping while(true){console.log("");} through head, you'll get the same error
[14:23] deoxxa: vdemedes: weird, there's no other errors?
[14:24] vdemedes: deoxxa: EPIPE and ECONNRESET
[14:24] vdemedes: but they don't happen in the same request
[14:24] vdemedes: eventually
[14:24] vdemedes: separate from each other
[14:24] deoxxa: sounds like the browser is closing the connection while node is trying to send data
[14:25] deoxxa: with network connections, at least, i'm pretty sure node will emit an error instead of raising an exception
[14:25] deoxxa: do you have an error handler? i.e. req.on("error", function(err) { ... })
[14:25] f1gm3nt has joined the channel
[14:25] deoxxa: if you don't have an error handler, some stuff will raise an exception
[14:25] Cromulent has joined the channel
[14:26] Guest___ has joined the channel
[14:27] Druide_ has joined the channel
[14:28] bnoordhuis has joined the channel
[14:28] mhauri has joined the channel
[14:29] briancra_ has joined the channel
[14:29] booo has joined the channel
[14:31] lwille has joined the channel
[14:32] cha0s has joined the channel
[14:34] zitchdog has joined the channel
[14:36] jmar777 has joined the channel
[14:36] JJMalina has joined the channel
[14:36] peregrine81 has joined the channel
[14:37] hugdubois has joined the channel
[14:37] Glenjamin: can anyone recommend a good JS editor for OS X? latest version of komodo is really really slow :(
[14:38] cmr: vim and emacs are pretty good.
[14:38] XXXPigeonXXX: Is it possible to add a new function to Buffer? It is as easy as Buffer.protoype.fn_name = [name]
[14:38] XXXPigeonXXX: +1 vim
[14:38] cmr: XXXPigeonXXX: Yuppers.
[14:39] madhums has joined the channel
[14:39] Glenjamin: i'm very impressed with the emacs JS editing plugin
[14:39] Glenjamin: but can't really be bothered to learn emacs
[14:40] cmr: Glenjamin: Emacs has a vim mode
[14:40] Glenjamin: i prefer emacs' keys to vim :p
[14:41] Glenjamin: every time i use vim i try to type when i'm not in editing mode
[14:41] cmr: heh
[14:41] cmr: It's a habit you have to get used to, yeah.
[14:41] XXXPigeonXXX: Glenjamin: you can use the dumb vim mode, but you lose power doing that
[14:42] cmr: I find that unless I'm writing new code, I'm usually using an expression to edit anyway (like cw)
[14:42] urlisse has joined the channel
[14:42] XXXPigeonXXX: I try to spend as little time as possible in Insert mode, because theres normally a faster way to do things
[14:43] cmr: Hah, that's punny.. normally.
[14:43] XXXPigeonXXX: cmr: I dont follow your pun
[14:43] cmr: XXXPigeonXXX: Normal mode is where you would do all those faster things.
[14:43] kitt has joined the channel
[14:43] kitt has joined the channel
[14:43] qsobad has joined the channel
[14:44] XXXPigeonXXX: cmr: I thought it was called Command mode
[14:44] cmr: XXXPigeonXXX: No, that's something else entirely.
[14:44] XXXPigeonXXX: cmr: wait i thought there was insert mode, visual mode, command mode
[14:44] gordonmattey has joined the channel
[14:45] cmr: XXXPigeonXXX: And normal mode.
[14:45] cmr: XXXPigeonXXX: "command mode" gives you a command line to type the sorts of things you'd use in normal mode, but in a command line.
[14:45] XXXPigeonXXX: cmr: huh, never used normal mode then
[14:45] cmr: XXXPigeonXXX: Normal mode is the mode vim opens in
[14:45] XXXPigeonXXX: cmr: ohhh, so when you typ :
[14:45] cmr: XXXPigeonXXX: Yeah, that among other things.
[14:45] XXXPigeonXXX: cmr: didn't know they had a name for that
[14:46] cmr: For example, your ~/.vimrc is executed by command mode
[14:46] booyaa: jesus christ that's an annoying nick
[14:46] booyaa: sorry had to say it
[14:46] cmr: booyaa: then don't apologize :P
[14:46] booyaa: word
[14:48] jimt has joined the channel
[14:48] dob_ has joined the channel
[14:48] davidwalsh has joined the channel
[14:49] nicholasf has joined the channel
[14:49] Druide_ has joined the channel
[14:50] ap3mantus has joined the channel
[14:50] pdodde has joined the channel
[14:50] benvie: ha
[14:52] nicerobot has joined the channel
[14:53] XXXPigeonXXX: node uses ES5 correct?
[14:53] nicholas_ has joined the channel
[14:53] cmr: Node uses whatever v8 implements.
[14:53] VesQ: XXXPigeonXXX: node uses v8 which conforms to ES5, yes
[14:54] nicerobot has left the channel
[14:55] XXXPigeonXXX: ES5 states that the number type is 64 bit IEEE 754 value, but When I do things such as Math.pow( 2, 69) I still get integer values, which is above that range, why is that?
[14:55] VesQ: XXXPigeonXXX: http://code.google.com/p/v8/
[14:55] Poetro has joined the channel
[14:55] stagas has joined the channel
[14:55] raincole_ has joined the channel
[14:56] XXXPigeonXXX: Vesq: I've watched both of those lectures ( just a different version of the second with better video quality )
[14:56] VesQ: XXXPigeonXXX: I did not point you to the video, just to the v8 google code page
[14:57] joshfinnie has joined the channel
[14:57] justicefries: What's the current way people are organizing their routes when they have a lot of them if using say, Express?
[14:57] springmeyer has joined the channel
[14:57] rwaldron has joined the channel
[14:57] booyaa: pigon: re: Math.pow - could only get scientific notiate when i did powe(2,70)
[14:57] justicefries: express-resource?
[14:58] booyaa: wonding if you need a 64bit version of node
[14:58] Wizek has joined the channel
[14:58] nicerobot_ has joined the channel
[14:59] nicerobot_ has left the channel
[14:59] XXXPigeonXXX: boyaa: 69 is the cut off, Math.pow(2,69) still returns an integer representation
[14:59] postwait has joined the channel
[14:59] Glenjamin: XXXPigeonXXX: after 64 bits you'll lose precision
[15:00] Sir_Rai has joined the channel
[15:00] dantalizing has joined the channel
[15:00] dantalizing has joined the channel
[15:00] cognominal has joined the channel
[15:00] level09 has joined the channel
[15:00] willwhite has joined the channel
[15:01] richard has joined the channel
[15:02] nicerobot_ has joined the channel
[15:03] Druide_ has joined the channel
[15:03] ryanfitz has joined the channel
[15:03] hz has joined the channel
[15:04] Nss has joined the channel
[15:05] jocafa has joined the channel
[15:05] maletor has joined the channel
[15:06] robde has joined the channel
[15:06] davidbanham has joined the channel
[15:07] qsobad has joined the channel
[15:07] plutoniix has joined the channel
[15:07] nuba has joined the channel
[15:08] thomblake has joined the channel
[15:08] thomblake has left the channel
[15:09] caludio has joined the channel
[15:10] mhauri has joined the channel
[15:10] mandric has joined the channel
[15:11] Wizek has joined the channel
[15:11] fracek has joined the channel
[15:13] Druide_ has joined the channel
[15:13] riven has joined the channel
[15:13] vicapow has joined the channel
[15:13] bnoordhuis: XXXPigeonXXX, Glenjamin: the limit is 53 bits
[15:13] bnoordhuis: .. Math.pow(2,53) === Math.pow(2,53) + 1
[15:13] catb0t:  true
[15:14] apwalk has joined the channel
[15:14] bnoordhuis: booyaa: ^
[15:15] napperjabber_ has joined the channel
[15:15] Glenjamin: there you go ^
[15:15] eee_c has joined the channel
[15:16] letsgojuno has joined the channel
[15:16] Glenjamin: now i think about it, couldn't possibly be 64 or where would the floating point get stored :)
[15:17] eb4890 has joined the channel
[15:17] booyaa: cheers bnoordhuis 
[15:17] letsgojuno has joined the channel
[15:17] ovnicraft has joined the channel
[15:18] claudio has joined the channel
[15:19] cryptix has joined the channel
[15:19] monk12 has joined the channel
[15:19] monk12: hello all, Going through the NodeBeginner.org tutorial and i had a question. Whats the best way to post a few node files for help? just post 1 file on a pastbin (or rather post 4 files zipped up somewhere?)?
[15:19] iksik has joined the channel
[15:19] iksik has joined the channel
[15:19] kmiyashiro has joined the channel
[15:20] cmr: monk12: gist.github.com
[15:20] monk12: cool thanks cmr
[15:20] cmr: Full power of git as well as multiple files per gist.
[15:21] xtianw has joined the channel
[15:21] trotter has joined the channel
[15:21] jrbaldwin has joined the channel
[15:22] Alpha|_| has joined the channel
[15:23] CIA-101: node: 03Ben Noordhuis 07v0.6 * r549443a 10/ (2 files in 2 dirs): 
[15:23] CIA-101: node: typed arrays: set class name
[15:23] CIA-101: node: Make obj.toString and Object.prototype.toString work correctly for typed arrays. - http://git.io/IGka2A
[15:25] jbpros has joined the channel
[15:26] CarterL has joined the channel
[15:26] ap3mantus has joined the channel
[15:26] brianloveswords has joined the channel
[15:26] Druide_ has joined the channel
[15:26] claudio has joined the channel
[15:27] monk12: hello all, basically I am going through that nodebeginner.org tutorial, and I get to the part where they implement beginning parts of file upload using Formidable. they put it right in the server.js, but i wanted to make sure of the routing structure they had before, so i pass the request down to the requestHandler so Formidable can use... but when i post data from /start2, it seems to just freeze/block forever. Not sure what is needed to make it act
[15:27] monk12:  like orig code ( first block of code at http://www.nodebeginner.org#handling-file-uploads ), My code is at: https://gist.github.com/1627042
[15:28] monk12: to make use* of the routing structure*
[15:28] Wizek-other has joined the channel
[15:29] Morkel has joined the channel
[15:29] monk12: My console does say 'Request handler 'upload2' was called.' so it does get into that handler. but not sure why the form can't parse and return the response.
[15:29] bLUEEE: is it possible to add events to res.render (on express) ? ie before or after rendering?
[15:30] monk12: i did leave the older code they had so when the POST is done, the request handler is called. (Think leaving that in shouldnt be an issue.)
[15:30] bacon000 has joined the channel
[15:30] booo has joined the channel
[15:30] TheJH has joined the channel
[15:30] uptownben: Has there been a major npm change? Can't npm update -g anymore?
[15:31] meister_ has joined the channel
[15:32] jgaui has joined the channel
[15:32] meister_: can someone tell me why one would choose websockets over periodic polling and using redis to cache updates?
[15:32] meister_: except for real-time games obviously
[15:32] Glenjamin: reduced overhead
[15:32] meister_: Glenjamin: overhead in code or server load?
[15:32] swaj: each request has a lot of HTTP overhead
[15:33] tmcw has joined the channel
[15:33] meister_: what if it was low priority, like every 15/30 seconds?
[15:33] swaj: long polling can alleviate that a little bit instead of straight polling
[15:33] meister_: have there been any benchmarks done?
[15:33] RLa: yes, a lot
[15:34] meister_: comparing duration of HTTP vs. websockets
[15:34] meister_: *interval between HTTP
[15:34] RLa: you need to compare server load
[15:34] Glenjamin: aside from the anything else, websockets done need the HTTP request/response headers on each bit of data
[15:34] Glenjamin: which makes a huge difference for small payloads
[15:35] swaj: I wouldn't do traditional interval polling, myself.  If you're turned off by websockets (I can't blame you since every chrome build breaks shit), then I'd try long polling instead.
[15:35] meister_: my application is a 'real-time' messaging system, I'm wondeing whether to use sockets or just poll every 30 seconds
[15:35] meister_: I sholud say *has a, it's not the primary feature
[15:36] cmr: swaj: Or socket.io, which has fallbacks.
[15:36] meso has joined the channel
[15:36] meister_: I've been a bit misleading, it's actually a Scala project, I'm using socket.io in another project and find it great
[15:36] dollargeneral has joined the channel
[15:36] meister_: but this is the main project right now
[15:37] meso has joined the channel
[15:37] swaj: cmr: the problem I have with socket.io is that when Chrome changes crap, it takes time to catch up, and during that time, it could be broken
[15:37] meister_: swaj: is that beginning to even out yet?
[15:37] brngardner has joined the channel
[15:38] infynyxx has joined the channel
[15:38] swaj: I don't really think so, imo.  WebSockets isn't ready for prime-time yet if you ask me.  It's a nice idea, but things change too rapidly for my tastes, and break applications.
[15:38] KindOne has joined the channel
[15:38] Glenjamin: the standard it supposed to be finalised now
[15:38] Glenjamin: so shouldn't change any further
[15:38] alvaro_o has joined the channel
[15:39] meister_: swaj: my main question is then, from a user point of view does it usually make a difference to use websockets vs long polling most of the time?
[15:39] Druide_ has joined the channel
[15:39] swaj: from a user's perspective, they shouldn't notice any difference.  You should have a long-polling, type fallback anyway for browsers that don't support WebSockets.
[15:39] swaj: -,
[15:39] ovnicraft has joined the channel
[15:39] kenperkins has joined the channel
[15:40] swaj: unless you control the client environment
[15:40] swaj: that's why stuff like socket.io is really good
[15:40] swaj: because it can handle that for you
[15:40] meister_: does facebook use comet for doing messages, are they even real-time? I'm talking about notifications, not chat
[15:40] cmr: It's pretty close to real time.
[15:40] swaj: facebook uses long-polling I think
[15:40] swaj: (comet)
[15:41] swaj: and yeah, it's realtime
[15:41] meister_: cmr: like 10 seconds or something?
[15:41] RLa: as realtime as internet is
[15:41] swaj: the whole backend is written in erlang -- they did a prsentation on it.
[15:41] cmr: meister_: No, a lot faster.
[15:41] meister_: so I take it they use websocketst?
[15:41] swaj: meister_: you see when people are typing -- it's almost instant.  It's just as good as a desktop messenger, imo.
[15:41] cmr: pretty close to real time as in my mother can comment in the other room and I'll see the notification within a second or two
[15:42] meister_: no, I'm talking about the notifications along the top, not chat
[15:42] meister_: that's equivalent to what I'm doing
[15:42] swaj: oh I don't think that thing is live at all, is it?
[15:42] meister_: that's my question
[15:43] swaj: I promise you that if facebook is using websockets anywhere for something consumer facing like that, they have a few fallbacks.
[15:43] pradeebv_ has joined the channel
[15:43] nerdfiles1 has joined the channel
[15:44] nerdfiles1 has left the channel
[15:44] swaj: browser support on websockets is really limited: 
[15:44] swaj: http://en.wikipedia.org/wiki/WebSocket#Browser_support
[15:45] swaj: I guess as of last month, they now have an RFC
[15:45] swaj: http://tools.ietf.org/html/rfc6455
[15:45] davidbanham has joined the channel
[15:46] jgaui has joined the channel
[15:46] meister_: does anyone use socket.io at scale?
[15:46] meister_: I take it it's flash sockets that are the most commonly used practically speaking?
[15:47] cmr: I'd imagine, though I doubt there are any statistics about it.
[15:47] swaj: probably where mobile isn't a conern.
[15:47] swaj: concern*
[15:47] swaj: I've heard good things about pusher, too: http://pusher.com/
[15:48] meister_: how does it work?
[15:48] cmr: how does what work?
[15:49] swaj: also, have a look at faye
[15:49] swaj: it's pretty nice
[15:50] codehero has joined the channel
[15:50] swaj: http://faye.jcoglan.com/
[15:50] swaj: they're doing a SOPA protest, so click "remove this" up top :P
[15:50] meister_: pusher looks ok
[15:51] codehero: question: How do I use the "path" module to join an array of strings; the join function only seems to support varargs
[15:51] raydeo has joined the channel
[15:51] meister_: is pusher being used for anything client facing or is it for internal stuff, anything I would know about?
[15:51] kevwil has joined the channel
[15:52] Wizek has joined the channel
[15:52] swaj: pusher has some pretty big names on their homepage
[15:52] swaj: so I imagine it's being used for client facing stuff
[15:53] swaj: keep in mind it's not free: http://pusher.com/pricing
[15:53] Kunda has joined the channel
[15:53] meister_: not cheap
[15:53] meister_: I think I'm going to go for long polling for now
[15:53] swaj: which is why I also suggested Faye -- a little work on your part, but it works well
[15:54] joshsmith has joined the channel
[15:54] charlenopires has joined the channel
[15:54] rauchg has joined the channel
[15:54] meister_: does socket.io have libs for java?
[15:55] jrbaldwin has joined the channel
[15:55] jbpros has joined the channel
[15:55] willwhite has joined the channel
[15:55] swaj: https://github.com/learnboost/socket.io/wiki/ yes it does
[15:55] kishoreyekkanti has joined the channel
[15:55] ivic_ has joined the channel
[15:56] sorensen__ has joined the channel
[15:56] amigojapan has joined the channel
[15:56] cjm has joined the channel
[15:56] yhahn has joined the channel
[15:57] monk12: nvm about my question. further down in the tutorial they do the step of moving that code into their  request-handler system :)
[15:57] Nss_ has joined the channel
[15:57] Glenjamin: codehero: join.apply(null, array)
[15:59] bazookatooth has joined the channel
[15:59] jtsnow has joined the channel
[16:00] jimt has joined the channel
[16:00] jakehow has joined the channel
[16:00] neilk_ has joined the channel
[16:01] codehero: glenjamin: I only get '.' as the return vaue
[16:01] codehero: *value*
[16:01] EyePulp has joined the channel
[16:01] codehero: I am using path.join
[16:02] codehero: not join.apply
[16:02] Glenjamin: use path.join.apply
[16:02] robde has joined the channel
[16:02] codehero: ah
[16:02] larsschenk has joined the channel
[16:02] larsschenk has left the channel
[16:02] davidsklar has joined the channel
[16:02] codehero: what type is path.join?
[16:03] RLa: > require('path').join.apply(null, ['this','is','a','path']);
[16:03] davehamptonusa has joined the channel
[16:03] codehero: and where is it documented?
[16:03] RLa: that gives wanted result, i guess
[16:03] RLa: look at the source
[16:05] Glenjamin: all functions have .apply
[16:05] joshfinnie has joined the channel
[16:06] codehero: oh ok, didn't realize that
[16:07] monteslu has joined the channel
[16:09] brianloveswords has joined the channel
[16:09] BillyBreen has joined the channel
[16:10] joshfinnie has joined the channel
[16:11] joshkehn has joined the channel
[16:11] joshkehn has left the channel
[16:11] elcuervo has joined the channel
[16:11] elcuervo: Hello guys, anyone knows a working Websocket client?
[16:12] markschaake has joined the channel
[16:13] aslant has joined the channel
[16:13] markschaake has left the channel
[16:13] cmr: elcuervo: define 'client'
[16:14] elcuervo: cmr: basically i want somthing that implements browser Websocket but in node, the same API would be great
[16:14] cmr: elcuervo: socket.io
[16:14] cmr: elcuervo: Even has fallback transports!
[16:14] jimt_ has joined the channel
[16:15] Nss has joined the channel
[16:15] simb has joined the channel
[16:16] chasefarmer has joined the channel
[16:16] Nss has joined the channel
[16:17] tjholowaychuk has joined the channel
[16:18] caolanm has joined the channel
[16:18] pradeebv has joined the channel
[16:19] aliem_ has joined the channel
[16:19] CIA-101: node: 03koichik 07v0.6 * r534df2f 10/ (lib/tls.js test/simple/test-tls-client-abort2.js): 
[16:19] CIA-101: node: tls: fix double 'error' events on HTTPS Requests
[16:19] CIA-101: node: Fixes #2549. - http://git.io/yMJcjw
[16:19] litropy_ has joined the channel
[16:19] elcuervo: cmr: the api does not seems to be the same but perhaps i can adapt it
[16:20] joestein has joined the channel
[16:20] mmalecki: tjholowaychuk: ping?
[16:20] cmr: elcuervo: Well, socket.io runs in the browser too
[16:20] tjholowaychuk: mmalecki hey what's up
[16:21] mmalecki: tjholowaychuk: yo!
[16:21] elcuervo: cmr: yeah, but i need a client just for nodejs
[16:21] jrbaldwin has joined the channel
[16:21] mmalecki: tjholowaychuk: so, hey. we're building a little crowd funding site for travis. you use travis a lot
[16:21] tjholowaychuk: cool good plan
[16:21] mmalecki: tjholowaychuk: it'd be cool if you could write up a little testimonial :)
[16:21] cmr: elcuervo: Ah, I see. iirc, socket.io has a layer that doesn't enforce the event-driven part
[16:21] mmalecki: like, tweet-long 
[16:22] tjholowaychuk: sounds good! will do
[16:22] bicranial has joined the channel
[16:22] mmalecki: tjholowaychuk: thanks! ping us at #travis or ping me here :)
[16:22] jzaefferer has joined the channel
[16:22] tdegrunt has joined the channel
[16:22] mmalecki: tjholowaychuk: http://who-is-awesome.com/who-is-awesome.jpg
[16:23] tjholowaychuk: ahahhaha
[16:23] tjholowaychuk: puppayyy
[16:23] CIA-101: node: 03Fedor Indutny 07v0.6 * r1695332 10/ (36 files in 6 dirs): (log message trimmed)
[16:23] CIA-101: node: Land number collision fix for v8 3.6 by Erik Corry
[16:23] CIA-101: node: - If V8 snapshots are enabled then the hash is only randomized at build time.
[16:23] CIA-101: node: ---
[16:23] CIA-101: node: backport @10366, @10367 and @10402 to 3.6
[16:23] CIA-101: node: Add seed to hash of numeric keyed properties.
[16:23] CIA-101: node: Minor cleanups of numeric seeded hashing patch.
[16:23] jzaefferer: So npm is supposed to be bundled with node now, right? I installed v0.6.7.msi on a Windows machine, and within a msysgit bash window, `node` runs fine, but `npm` can't be found. What am I missing?
[16:24] micheil has joined the channel
[16:24] EyePulp: any have a request router that deals with the "OPTIONS" request method?  I use a simple router (choreographer) that doesn't deal with that method and is whining about it.  Wondering if I can just edit the request to "GET" and call it a day...
[16:24] yhahn: jzaefferer: i found the same, i can run npm from a windows cmd.exe window tho
[16:25] jzaefferer: yhahn: ah, good to know. Gonna try that, then see if there's an open npm issue for msysgit...
[16:25] urlisse: !po
[16:25] urlisse: sorry
[16:25] Hanspolo has joined the channel
[16:26] blueadept has joined the channel
[16:26] blueadept has joined the channel
[16:27] jzaefferer: but hey, nodejs with socket.io running on windows in a cmd.exe window, no problems :-)
[16:27] Cromulent has joined the channel
[16:27] jzaefferer: this used to be frickin' hard
[16:27] yhahn: : )
[16:28] jj0hns0n has joined the channel
[16:29] jrbaldwin has joined the channel
[16:32] tbranyen has joined the channel
[16:32] tbranyen: tjholowaychuk: is there a way to map a single file in express?
[16:32] codehero has left the channel
[16:32] tbranyen: instead of using static for a folder
[16:32] tjholowaychuk: res.sendfile()
[16:33] neurodrone has joined the channel
[16:33] tjholowaychuk: you can give it an absolute path or res.sendfile(userinput, { root: path }) to act pretty much like static()
[16:33] jzaefferer: yhahn: https://github.com/isaacs/npm/issues/2051
[16:33] tbranyen: crap, i was maintaing an array of overrides which are folders and hit one that needs to be a path
[16:33] tbranyen: to a single file
[16:33] tjholowaychuk: if you dont trust the user input you should use { root
[16:33] jaequery has joined the channel
[16:33] tbranyen: tjholowaychuk: its for a dev server, so i trust whatever
[16:33] tjholowaychuk: ah ok cool
[16:34] tjholowaychuk: there's also https://github.com/visionmedia/serve
[16:34] tjholowaychuk: which serves a directory + stylus/jade
[16:34] tbranyen: i just made a separate collection called files, this'll work
[16:35] tbranyen: http://pastie.org/3202174 << thx brah
[16:35] yhahn: jzaefferer: THX
[16:35] yhahn: whoops, capslock
[16:36] Hanspolo has joined the channel
[16:36] napperjabber_ has joined the channel
[16:37] qsobad has joined the channel
[16:37] davidbanham has joined the channel
[16:38] fatjonny has joined the channel
[16:39] spleeze has joined the channel
[16:40] pradeebv_ has joined the channel
[16:40] pradeebv_ has joined the channel
[16:41] bLiNdRaGe has joined the channel
[16:41] jakehow has joined the channel
[16:41] justicefries: is there a vim-javascript that isn't absolutely terrible?
[16:42] zzak has left the channel
[16:42] cmr: justicefries: If you find one, do tell.
[16:42] tjfontaine: what do you hate about the default?
[16:42] cmr: justicefries: indentation or syntax?
[16:42] justicefries: let me look at the default - I was using what seems to be hte most popular vim-javascript on GH, and the higlighting is all off.
[16:42] justicefries: syntax.
[16:42] justicefries: indentation I can change around
[16:43] cmr: http://paste.pocoo.org/show/536279/
[16:43] cmr: Give that a shot.
[16:44] bnoordhuis: vim? real men use ed
[16:44] bnoordhuis: ex is acceptable too
[16:44] cmr: In my future I have planned a syntax highlighter that parses the AST for a js file and highlights based off that
[16:44] CoverSlide: i use cat >
[16:44] cmr: Oh yeah? I use echo
[16:45] warz has joined the channel
[16:45] warz has joined the channel
[16:45] jzaefferer has left the channel
[16:45] bLiNdRaGe: i'm probably just sleep deprived, but what's wrong with trying to access my data from this: http://pastebin.com/cENdf8fg
[16:47] simb: bLiNdRaGe: isnt user_results an array?
[16:47] pdodde has joined the channel
[16:47] simb: bLiNdRaGe: you want [0] not .user
[16:47] davetayls has joined the channel
[16:47] bLiNdRaGe: crap. yea
[16:48] iammerrick has joined the channel
[16:48] iammerrick: Any good vim plugins for node development?
[16:48] nvoyager has joined the channel
[16:48] CIA-101: libuv: 03Ben Noordhuis 07v0.6 * rbf8ccfc 10/ (src/unix/tty.c test/test-tty.c): 
[16:48] CIA-101: libuv: unix: fix segfault in uv_guess_handle()
[16:48] CIA-101: libuv: Fixes #293. - http://git.io/2Xwleg
[16:48] bLiNdRaGe: user_results[0].user worked
[16:48] bLiNdRaGe: you're right, it was an array
[16:48] Topcat has joined the channel
[16:48] CoverSlide: I'm guessing that's what toArray does
[16:49] bLiNdRaGe: no, it does, i'm just half attentive
[16:49] LeMike has joined the channel
[16:50] dubenstein has joined the channel
[16:51] neilk_ has joined the channel
[16:53] Margle has joined the channel
[16:53] jergason has joined the channel
[16:53] GrizzLyCRO has joined the channel
[16:54] dephex has joined the channel
[16:54] nicholasf has joined the channel
[16:54] boltR has joined the channel
[16:54] jbrokc has joined the channel
[16:54] khrome has joined the channel
[16:56] apoc has joined the channel
[16:57] kenperkins has joined the channel
[16:57] cli654 has joined the channel
[16:58] vkandy has joined the channel
[16:58] kenperkins: SNOWMAGEDDON
[16:58] mc_greeny has joined the channel
[16:59] CoverSlide: I'm in southern california
[16:59] CoverSlide: I'm in a t-shirt and shorts
[16:59] kenperkins: I'm just remarking at the seattle media
[16:59] Guest54986 has joined the channel
[16:59] kenperkins: basically, they're predicting 12-18 inches of snow
[16:59] kenperkins: so the city is shut down
[16:59] kenperkins: meanwhile, it's 35 and raining
[16:59] kenperkins: I just drove in to work and it's a ghost town
[16:59] CoverSlide: sweert
[16:59] monk12: I am using the windows version of node. If i do a rename via 'fs.renameSync(files.upload.path, "./tmp/test1.png");' , I get an error  "Error: ENOENT, no such file or directory 'C:\Users\jake_malone\AppData\Local\Temp\a373d32be79396c6c734f6ad0b665999'". any idea what Im doing wrong? The file I uploaded does exist there, not sure why its complaining.
[17:00] pizthewiz has joined the channel
[17:01] dshaw_ has joined the channel
[17:01] RLa: maybe you have those / wrong way?
[17:01] churp has joined the channel
[17:01] CoverSlide: are you sure it existed there when the function was hit?
[17:01] bradleymeck has joined the channel
[17:01] RLa: oh, and btw, i think windows has no concept of .
[17:01] brngardner has joined the channel
[17:02] RLa: try "tmp\\test1.png" as 2nd arg
[17:02] CoverSlide: it doesn't? I'm sure I used to write batch scripts using .\whatever
[17:02] kenperkins: . works in windows
[17:03] XXXPigeonXXX: anyone decent with websockets in here?
[17:03] cognominal_ has joined the channel
[17:03] CoverSlide: just ask the channel
[17:03] XXXPigeonXXX: what channel? ( new to irc )
[17:03] Destos has joined the channel
[17:04] justicefries: hmm
[17:04] cmr: XXXPigeonXXX: This one!
[17:04] cmr: Just ask your question about websockets.
[17:04] justicefries: hey cmr what do you have in your vimrc to load that/
[17:04] justicefries: ?
[17:04] XXXPigeonXXX: ohh.
[17:04] justicefries: what I have is still goign with the default
[17:04] cmr: justicefries: Do you have "syntax on" somewhere in your vimrc?
[17:04] justicefries: yeah.
[17:05] cmr: I'm not doing anything special afaik
[17:05] justicefries: maybe it's solarized that looks terrible with the highlighting.
[17:05] Druide_ has joined the channel
[17:05] justicefries: and what I was using was actually highlighting it. ;)
[17:05] monk12: RLa, k i'll give it a shot now.
[17:05] cmr: xoria256 ftw
[17:05] XXXPigeonXXX: when sending large messages over webscokets, in chrome my buffers are limmted to 32767 ( 2 ^ 15 -1 ), and in firefox to 65536 ( 2 ^ 16 ).  is there a way to make them both act the same way?
[17:05] justicefries: nah, it's using the default highlighting still.
[17:06] justicefries: odd.
[17:06] MarkMenard has joined the channel
[17:06] cmr: Let me check my scripts, I might have a loader somewhere..
[17:07] monk12: RLa, darn, same error... it doesn't complain about where its going to (tmp/test1.png), but rather the orig file doesn't exist still.
[17:07] wink__ has joined the channel
[17:07] JakeSays: so what do y'all think of silk.js?
[17:07] monk12: I think I read a ticket on Dec30,2011 about rename being funky on Windows. thought it was commited in latest release
[17:07] RLa: monk12, maybe you can paste more code
[17:07] CoverSlide: just do a copy
[17:08] cmr: justicefries: Hm, it might be syntastic doing it.
[17:08] JakeSays: RLa: windows understands .
[17:08] justicefries: ahh.
[17:08] thax has joined the channel
[17:08] cmr: justicefries: however, try autocmd BufNewFile,BufRead *.js set ft=javascript
[17:08] cmr: As a stand-in
[17:08] RLa: hm
[17:08] justicefries: I tried it with au, I'll try that.
[17:10] shadowshell has joined the channel
[17:10] cmr: au == autocmd. Did you save the file as ~/.vim/syntax/javascript.vim ?
[17:10] justicefries: yeah.
[17:10] cmr: ACTION shrugs
[17:10] justicefries: oh you know what, I may just be thinking too hard...
[17:10] justicefries: it's a pretty minimal highlight, isn't it?
[17:10] mikeal has joined the channel
[17:10] cmr: No
[17:10] cmr: It does most browser thigns.
[17:10] cmr: jsdoc
[17:11] cmr: DOM, CSS, and some html
[17:11] burnhard has joined the channel
[17:11] justicefries: I'm looking at a node app at the moment, and for example, some keywords (var, function, if, else, new) are higlighted, object keys are higlighted, strings are highlighted.
[17:12] justicefries: but variables themselves, and calling methods, aren't highlighted.
[17:12] justicefries: I removed my vimrc and turned syntax on by default.
[17:12] jgaui has joined the channel
[17:12] justicefries: the same things are highlighted.
[17:12] justicefries: so I'm not sure if it's me or not.
[17:12] cmr: No, same here.
[17:12] cmr: Just how I like it ;)
[17:12] monk12: RLa  think i figured the problem... the node error complains about the uploaded file not existing, when it actually means the destination. the destination is "tmp/test1.png" if i change it to "test1.png" it works and moves into my node app directory... i thought rename would create the folder as well.
[17:13] justicefries: okay, cool.
[17:13] justicefries: that's all I wanted to be sure of then.
[17:13] RLa: quite simple issue
[17:13] RLa: but so much hassle
[17:13] monk12: yep, just confirmed it.
[17:13] monk12: created a tmp directory in my app and now it works
[17:13] luke` has joined the channel
[17:13] cmr: monk12: of course rename doesn't create any directories. It renames things!
[17:14] monk12: :)
[17:14] felixge has joined the channel
[17:15] djcoin has joined the channel
[17:15] justicefries: xoria256 looks a LOT better with the JS highlighting than solarized does
[17:15] kenperkins: how do you guys deal with unhandled exceptions
[17:15] justicefries: but ir_black and monokai looked pretty bad.
[17:15] cmr: I love xoria256. looks even better in gvim
[17:15] monk12: the tutorial on nodebeginner.org didn't say to manually create the directory so i assumed it would stupidly :)
[17:15] cmr: monk12: should email them or something about that
[17:17] pors has joined the channel
[17:17] Druide_ has joined the channel
[17:18] C0deMaver1ck has joined the channel
[17:19] eee_c has joined the channel
[17:19] EvRide has joined the channel
[17:20] xtianw has joined the channel
[17:22] slloyd has joined the channel
[17:22] gregpascale has joined the channel
[17:22] jrbaldwin has joined the channel
[17:23] cognominal___ has joined the channel
[17:24] RobWC has joined the channel
[17:25] franciscallo has joined the channel
[17:25] jtsnow has joined the channel
[17:26] mark_azevedo has joined the channel
[17:26] Me1000 has joined the channel
[17:26] stephank has joined the channel
[17:27] maritz: kenperkins: either process.on('uncaughtException', function () { console.log('HOLY FUCKING SHIT THERE ARE MOTHERFUCKING SNAKES ON THIS MOTHERFUCKING PLANE!'); or restart the process.
[17:27] loucal has joined the channel
[17:28] mikeal has joined the channel
[17:28] justicefries: how are you all organizing your stuff with a larger number of routes? something like express-resource ?
[17:29] mikl has joined the channel
[17:29] igl1 has joined the channel
[17:29] robde has joined the channel
[17:29] kmiyashiro has joined the channel
[17:32] claudio\out has joined the channel
[17:32] TimTim has joined the channel
[17:32] kenperkins: maritz: that's pretty much what I do, but where I get confused is that if you catch the exception with unhandledException in process.on, you lose the stack track and stuff
[17:32] kenperkins: or am I doing it wrong?
[17:33] eignerchris has joined the channel
[17:35] rauchg has joined the channel
[17:35] ePirat has joined the channel
[17:35] patcito has joined the channel
[17:36] boltR has joined the channel
[17:36] __tosh has joined the channel
[17:36] MatthewS1 has joined the channel
[17:36] Glenjamin: err.stack
[17:36] Glenjamin: it's there
[17:37] tjholowaychuk has joined the channel
[17:37] cjroebuck has joined the channel
[17:37] pksunkara has left the channel
[17:37] maritz: kenperkins: what Glenjamin said
[17:37] Internet13 has joined the channel
[17:37] MrTopf has joined the channel
[17:37] maritz: it's just a getter/setter (btw part of why exceptions are a bit slow in v8)
[17:38] kenperkins: hm. let me test something then, brb.
[17:38] maritz: justicefries: mounted apps
[17:38] justicefries: ah ha.
[17:38] justicefries: something like railway, dspite having a ton of watchers, seems insane.
[17:39] davidbanham has joined the channel
[17:39] jhbot has joined the channel
[17:39] trotter has joined the channel
[17:39] CIA-101: node: 03Andreas Madsen 07v0.6 * rca6eded 10/ lib/child_process.js : 
[17:39] CIA-101: node: child_process: add errno property to exceptions
[17:39] CIA-101: node: In case of a write failure when using fork() an error would be thrown. The
[17:39] CIA-101: node: thrown exception was missing the `errno` property. - http://git.io/JqmMEQ
[17:40] trell has joined the channel
[17:41] yawNO has joined the channel
[17:41] t0mmyvyo has joined the channel
[17:41] sirwan has joined the channel
[17:41] trell: ok, quick question I hope, and maybe I'm just being thick, but how do I bind node.js to startup on a specific ip address?
[17:42] Mare13h has joined the channel
[17:42] cmr: trell: Depends, what are you running?
[17:42] gsmcwhirter has joined the channel
[17:42] saesh has joined the channel
[17:43] carlyle has joined the channel
[17:43] maritz: trell you can't really bind node to a specific ip. you can only bind things like a tcp/http server to an ip in a node.js script.
[17:43] Druide_ has joined the channel
[17:43] robde_ has joined the channel
[17:43] trell: well, I'm setting up a test server for the developers, we currently run apache, php, tomcat &or jboss, depends on the application, and I want to bind node.js to listen on a new ip:80
[17:44] tjfontaine: maritz: well, you can it's just not a feature of the software but of the OS firewall mechanism
[17:44] maritz: trell: so, i guess you have a node.js app that has an http server?!
[17:45] maritz: tjfontaine: okay, but if that's what he means, it's not a node.js question :D
[17:45] tjfontaine: indeed
[17:45] trell: so in say an app.js, the developer would put the server.listen(<ipaddress><80>)
[17:45] trell: martiz they are wanting to run node.js without apache
[17:45] maritz: trell: no, server.listen(port, [host], [callback])
[17:45] trell: but apache is already installed and running on that server
[17:46] maritz: where host is your ip
[17:46] maritz: i guess
[17:46] cmr: Yep
[17:46] dgathright has joined the channel
[17:46] trell: ok
[17:46] domino14 has joined the channel
[17:46] maritz: because if it's actually firewall stuff you wanna do, then i have no clue.
[17:46] trell: no, no firewall stuff
[17:46] tjfontaine: make sure apache isn't bound to 0.0.0.0 as well
[17:47] Glenjamin: or just bind to a port other than 80
[17:47] boucher-macbook has joined the channel
[17:48] cmr: Or just use mod_proxy.
[17:48] dgathright_ has joined the channel
[17:48] boucher-macbook: so, i just upgraded from 0.4.12 to 0.6.7 and one of my development scripts stopped working
[17:48] boucher-macbook: but only sometimes
[17:48] AndreasMadsen has joined the channel
[17:48] boucher-macbook: it seems to randomly decide between a segmentation fault, Error: spawn EMFILE, and just working
[17:49] boucher-macbook: anyone have any pointers?
[17:49] maritz: *badumtschhh
[17:49] tylerstalder has joined the channel
[17:49] maritz: (i couldn't resist)
[17:50] jetienne has joined the channel
[17:50] cmr: boucher-macbook: What is the nature of this script?
[17:50] boucher-macbook: it's a dev script, it runs a bunch of (mostly node based) tools on a bunch of files
[17:51] boucher-macbook: the problem seems to be with one of the parts that spawns another process though
[17:51] cmr: How do you spwan it?
[17:51] boucher-macbook: (spawns pngcrush to crush some images)
[17:52] alqershi has joined the channel
[17:52] alqershi: hi all
[17:52] boucher-macbook: child = spawn('pngcrush', ['-rem', 'alla', '-reduce', file, tmpPath]);
[17:52] boucher-macbook: (on the individual files)
[17:52] boucher-macbook: but it waits for one to finish before opening the next
[17:53] boucher-macbook: so it shouldn't be trying to just process 1000 files at the same time
[17:53] tomgallacher has joined the channel
[17:54] te-brian has joined the channel
[17:55] broofa has joined the channel
[17:56] klaustsen has joined the channel
[17:56] captain_morgan has joined the channel
[17:57] boucher-macbook: cmr: is there a newer/better way to spawn another process?
[17:57] jamescarr has joined the channel
[17:57] boucher-macbook: (haven't kept up with api changes)
[17:58] trell: btw, thanks guys, just passed that to the developer who is working on that project.
[17:58] cmr: boucher-macbook: that's require('child_process').spawn, right?
[17:58] boucher-macbook: yeah
[17:58] sriley has joined the channel
[17:58] cmr: Do you have any native extensions?
[17:58] lzskiss has joined the channel
[17:58] cmr: Do you know exactly where it breaks?
[17:58] wadey_ has joined the channel
[17:59] boucher-macbook: when it throws a spawn EMFILE error
[17:59] cmr: Well, that's too many open files.
[17:59] ZeepZop has joined the channel
[17:59] broofa_ has joined the channel
[17:59] cmr: Do you know if it's on a child process or not?
[17:59] boucher-macbook: yeah 
[17:59] boucher-macbook: Error: spawn EMFILE
[17:59] boucher-macbook:     at errnoException (child_process.js:478:11)
[17:59] boucher-macbook:     at ChildProcess.spawn (child_process.js:445:11)
[17:59] boucher-macbook:     at child_process.js:343:9
[17:59] boucher-macbook:     at /Users/boucher/Stripe/pay-server/manage/compiler:94:15
[17:59] cmr: Hmm
[18:00] cmr: Well, spawning a process uses up 3 FD's.
[18:00] cmr: What OS is this?
[18:00] robde has joined the channel
[18:00] boucher-macbook: os x 10.7
[18:00] cmr: I don't know what kind of things you need to do on OSX to get those limits, sorry
[18:01] boucher-macbook: but yeah, my call to spawn is wrapped in a       child.on('exit', function...
[18:01] boucher-macbook: is it possible the descriptors aren't being closed
[18:01] boucher-macbook: and is there anything i can do about that
[18:02] cmr: I would think they close themselves when they are done.
[18:02] boucher-macbook: i would too
[18:03] cmr: No other way to do it, if the process dies..
[18:03] cmr: Does OSX have an equivalint of /proc/$PID/fd/ ?
[18:03] vicapow has joined the channel
[18:03] boucher-macbook: not sure
[18:03] cmr: Then you'd be able to see if it has any open FDs.
[18:03] mmalecki: cmr: no
[18:03] cmr: And how it grows
[18:04] cmr: That's a shame.
[18:04] KindTwo has joined the channel
[18:04] LeMike has joined the channel
[18:04] boucher-macbook: adding some logging to my code seems like there is at least a bug in my processing these one at a time, so i'll fix that and hope this goes away
[18:05] boucher-macbook: (but it dies after opening only like 30 files)
[18:05] kenperkins: ok guys, can you help me understand why this code doesn't have the full exception
[18:06] prettyrobots has joined the channel
[18:06] kenperkins: https://gist.github.com/1627874
[18:06] kenperkins: my understanding was that it should
[18:06] Provito has joined the channel
[18:06] kenperkins: but I only see a string output, not the full stack, etc
[18:06] KindTwo has joined the channel
[18:07] mcluskydodallas has joined the channel
[18:08] pizthewiz has joined the channel
[18:08] cgfuh has joined the channel
[18:08] sotosof has left the channel
[18:08] CIA-101: node: 03Andreas Madsen 07master * r7088487 10/ (doc/api/child_processes.markdown lib/child_process.js): 
[18:08] CIA-101: node: Allow calling fork() without args or options
[18:08] CIA-101: node: Closes GH-2424 - http://git.io/aGuNVw
[18:08] jward_ has joined the channel
[18:08] gr-eg has joined the channel
[18:09] cronopio has joined the channel
[18:09] tkaemming has joined the channel
[18:09] mateodelnorte has joined the channel
[18:09] level09 has joined the channel
[18:09] khrome has joined the channel
[18:09] zemanel has joined the channel
[18:09] devongovett has joined the channel
[18:09] jward_: hi there, quick questions about installing node on windows. Ran the .msi from the site, but in the command prompt, 'npm' is unrecognized?
[18:10] boucher-macbook: alright, seem to have fixed it for now
[18:10] boucher-macbook: thanks for the help :)
[18:10] yenz: kenperkins: if you go error.stack you don't get the trace?
[18:11] jward_: Anyone have a quick fix (or explantion) why windows doesn't seem to understand 'npm' after the install?
[18:11] kenperkins: nope, I just get: [ReferenceError: c is not defined]
[18:11] kenperkins: it's not even an object
[18:11] yenz: 0_0
[18:11] msch: so have i got this right, node 0.7 has harmony support when run via --harmony ?
[18:11] yenz: what version of node?
[18:11] kenperkins: 0.6.5
[18:11] yenz: hmm
[18:11] yenz: 0.4.12 seems to work 
[18:11] yenz:   arguments: [ 'c' ],
[18:11] yenz:   type: 'not_defined',
[18:11] yenz:   message: [Getter/Setter] }
[18:11] yenz: erp
[18:12] kenperkins: root@dev:~# node foo.js 
[18:12] kenperkins: [ReferenceError: c is not defined]
[18:12] kenperkins: that's it, hence my confusion
[18:12] lperrin has joined the channel
[18:12] yenz: have you tried 0.4 ?
[18:12] yenz: i assume you're using nvm...
[18:12] yenz: ?
[18:13] kenperkins: nvm?
[18:13] yenz: node version manager
[18:13] kenperkins: no
[18:13] ph^ has joined the channel
[18:14] jward_: is not getting 'npm' to work on windows a known issue? anyone? help? i'll give you a cookie
[18:14] KindOne has left the channel
[18:14] fangel has joined the channel
[18:14] cmr: jward_: define "work"
[18:15] cmr: Als what version
[18:15] cmr: *also
[18:15] cmr: And did you use the msi?
[18:15] jward_: i'm trying to use Autosave for Chrome Dev tools, and it requires a node js install. which I did, then its a simple npm command. here's the link
[18:15] jward_: https://github.com/NV/chrome-devtools-autosave-server/blob/master/README.mdown
[18:16] tomgallacher_ has joined the channel
[18:16] jward_: yes i used the msi
[18:16] luxigo has joined the channel
[18:16] hipsters_ has joined the channel
[18:16] nibblebot has joined the channel
[18:17] cmr: Hm, I wonder if you need to edit your PATH
[18:17] zomg: jward_: if you didn't reboot, do that and try again
[18:17] kenperkins: anyone else able to help explain why I'm not getting the full error object from a simple uncaughtException test? (node 0.6.5)
[18:17] jward_: thats what i was thinking, system variables? http://icewalker2g.wordpress.com/2011/07/23/node-js-on-windows-who-needs-npm/
[18:18] jward_: ok i'll try that and let ya know. brb, and thanks!
[18:19] robotmay has joined the channel
[18:19] TooTallNate has joined the channel
[18:20] ger^kallisti has joined the channel
[18:21] jward_ has joined the channel
[18:22] jward_: haha thanks cmr it worked
[18:22] jward_: gah so stupid...
[18:22] jhbot: 'Getting data from MongoDB with Mongoose' by Industrial http://stackoverflow.com/q/8899647 (tags: each, mongoose, underscore.js)
[18:22] cognominal has joined the channel
[18:23] whitman has joined the channel
[18:23] jward_: you'd think i'd learn by now. here's your cookie. http://www.chromeexperiments.com/detail/webgl-cars/
[18:24] tosh_ has joined the channel
[18:24] sh1mmer has joined the channel
[18:26] sh1mmer has joined the channel
[18:26] cha0s has joined the channel
[18:27] herbySk has joined the channel
[18:27] trose has joined the channel
[18:28] mattgifford has joined the channel
[18:28] ph^ has joined the channel
[18:28] counterbeing has joined the channel
[18:29] Edy has joined the channel
[18:29] Edy has joined the channel
[18:29] jhbot: 'Node js - Less css cannot find file to import' by alecRN http://stackoverflow.com/q/8899741 (tags: less, lesscss)
[18:29] Druide_ has joined the channel
[18:31] pradeebv has joined the channel
[18:31] robde_ has joined the channel
[18:32] hipsters_ has joined the channel
[18:32] indutny: tjholowaychuk: heya!
[18:32] booo has joined the channel
[18:32] tjholowaychuk: hey hey
[18:32] indutny: tjholowaychuk: mocha is so cool, man. and works fine for 0.7.0 ! ;) can you add it to engines :)
[18:32] mjr_ has joined the channel
[18:32] indutny: tjholowaychuk: going to use it to test node-spdy on CI
[18:33] indutny: I'm using mocha on 0.7.0 for about month
[18:33] tjholowaychuk: haha yeah sure I haven't tried 0.7.0 but I'll update it
[18:33] indutny: tjholowaychuk: thanks a lot! you saved my day :)
[18:33] reid has joined the channel
[18:33] tjholowaychuk: ACTION installs 0.7.0
[18:33] alystair has joined the channel
[18:33] indutny: tjholowaychuk: supa splendid node
[18:34] StanlySoManly has joined the channel
[18:34] indutny: tjholowaychuk: has SNI, NPN and latest v8
[18:34] eee_c has joined the channel
[18:35] dthompso99 has joined the channel
[18:35] jhbot: 'How do I do a bulk insert in mySQL using node.js' by crickeys http://stackoverflow.com/q/8899802 (tags: mysql)
[18:36] yhahn has left the channel
[18:36] arcanis has joined the channel
[18:36] mAritz has joined the channel
[18:36] mateodelnorte_ has joined the channel
[18:36] tbranyen: chrisdickinson: whatever happened to git.js did danlucraft just stop maintaining?
[18:37] c4milo has joined the channel
[18:37] mxbtty has joined the channel
[18:37] `3rdEden has joined the channel
[18:37] markdaws has joined the channel
[18:37] r1ngzer0 has joined the channel
[18:38] mmalecki: TooTallNate: it'll support it soon
[18:38] mmalecki: re https://github.com/rbranson/node-ffi/commit/2726cda8d3d9fc2ea803882b2e287c28745ad218
[18:38] koo3 has joined the channel
[18:39] TooTallNate: mmalecki: yup yup, i'll revert the revert :p
[18:39] mmalecki: TooTallNate: that's ugly^ugly :)
[18:39] teadict: ExtJS people think Backbone is crap
[18:39] mmalecki: every framework is crap
[18:39] teadict: we are crap
[18:39] tbranyen: teadict: lol coming from them...
[18:39] teadict: tbranyen: don't you think they should be worried?
[18:39] tbranyen: who?
[18:39] teadict: ExtJS people
[18:40] tbranyen: nah corporate peeps love em
[18:40] tjholowaychuk: ext is verrrrry different
[18:40] tbranyen: charts charts charts
[18:40] teadict: tjholowaychuk: remove the widgets, what you have?
[18:40] charlenopires_ has joined the channel
[18:40] teadict: tbranyen: yeah, that's true...
[18:40] tjholowaychuk: teadict a framework for the widgets
[18:40] tjholowaychuk: haha
[18:40] tbranyen: ^_^
[18:41] dwhittle has joined the channel
[18:41] tbranyen: http://dev.sencha.com/deploy/ext-4.0.0/examples/desktop/desktop.html
[18:41] tbranyen: is all i want to say
[18:41] tbranyen: it speaks for itself
[18:41] teadict: I know, I've used ext
[18:41] teadict: but srly.. 
[18:41] tbranyen: no, i mean thats what the ext community thinks a web app should look like
[18:41] tbranyen: rather out of touch
[18:41] teadict: ExtJS - all widgets ~= what Bakcbone does
[18:41] disappearedng has joined the channel
[18:41] teadict: tbranyen: oh, yeah
[18:42] satyr has joined the channel
[18:42] tbranyen: walmart recently released their own framework on top of backbone, you wouldn't  really do that with ext
[18:42] tjholowaychuk has joined the channel
[18:43] dnjaramba has joined the channel
[18:43] brngardner has joined the channel
[18:44] QaDeS has joined the channel
[18:44] eb4890 has joined the channel
[18:44] liar has joined the channel
[18:46] CIA-101: node: 03Andreas Madsen 07v0.6 * r4865063 10/ (38 files in 4 dirs): Tests: fix jslint issues - http://git.io/5KVUTA
[18:48] indutny: tjholowaychuk: woot! thanks!
[18:48] tjholowaychuk: np!
[18:48] mmalecki: TooTallNate: ^
[18:49] jlank has joined the channel
[18:50] jerrysv has joined the channel
[18:50] indutny: mmalecki: http://travis-ci.org/#!/indutny/node-spdy/builds/537072
[18:51] mmalecki: hrm, npm fail?
[18:51] mmalecki: tjholowaychuk: also, add 0.7 to https://github.com/visionmedia/mocha/blob/master/.travis.yml
[18:51] TooTallNate: mmalecki: ya me too http://travis-ci.org/#!/rbranson/node-ffi/jobs/537070
[18:51] indutny: mmalecki: probably
[18:51] jerrysv: maxogden: ping
[18:51] tjholowaychuk: mmalecki right right thanks
[18:51] AviMarcus has joined the channel
[18:52] pluc has joined the channel
[18:53] jbrokc has left the channel
[18:54] olliey has joined the channel
[18:54] r04r has joined the channel
[18:54] mmalecki: tjholowaychuk: bump up commander
[18:55] tjholowaychuk: damnit
[18:55] tjholowaychuk: haha
[18:55] langworthy has joined the channel
[18:55] tjholowaychuk: strings of modules
[18:55] Wizek has joined the channel
[18:55] mmalecki: yeah
[18:56] indutny: mmalecki: will node-spdy build? :)
[18:56] indutny: mmalecki: I'm going to remove badge otherwise
[18:56] mmalecki: indutny: Test Hook in admin panel after tjholowaychuk bumps up version
[18:57] mmalecki: indutny: and yeah, it'll
[18:57] trose: is it possible to run multiple servers in the same node.js program? I want an express server + a server to host a web service...
[18:57] indutny: tjholowaychuk: yes
[18:57] indutny: tjholowaychuk: you can run thousands of them
[18:57] indutny: ooops
[18:57] TooTallNate: trose: yes, it's possible
[18:57] indutny: trose: ^
[18:57] tjholowaychuk: haha
[18:57] tjholowaychuk: NO U CANT
[18:58] zomg: If you were using PHP you could
[18:58] indutny: tjholowaychuk: I CANT UZ AUTOCMPLETE
[18:58] zomg: but not with node, no
[18:58] tjholowaychuk: k commander is a-ok on 0.7.x
[18:58] zomg: ;>
[18:58] trose: :/ I was just curious if that was proper form or if you should run them out of separate programs
[18:58] davehamptonusa has left the channel
[18:58] insin: is there any package .json jiggery-pokery which will make require('/modulename/submodule') give you the exports of your project's /lib/submodule.js ?
[18:58] ccare has joined the channel
[18:58] zitchdog has joined the channel
[18:59] context: require doesn't give you the exports ?
[18:59] dshaw_ has joined the channel
[18:59] insin: require('modulename/submodule') even
[18:59] N0va` has joined the channel
[18:59] insin: I recently restructured so everything is in a /lib dir, now I have to do 'modulename/lib/submodule' ... which I suppose is tolerable enough
[19:00] TooTallNate: insin: i usually prefer all a module's exports to be in the main require
[19:00] yogig has joined the channel
[19:00] context: insin: you could add the paths to require.paths
[19:00] context: or whatever it is
[19:00] tjholowaychuk: k i re-published mocha
[19:00] tjholowaychuk: should be ok now
[19:01] TooTallNate: tjholowaychuk mmalecki: ya works for me now :)
[19:01] tjholowaychuk: oh damnit probably growl too
[19:01] insin: they are in this case, it's so I don't have to include the whole thing when I'm exporting a browser version
[19:01] insin: the lib thing works for now anyway :)
[19:01] insin: what is going on with the AMD madness today?
[19:01] indutny: oh, I wasn't hanging on node.js for sooo long
[19:02] zeade has joined the channel
[19:02] indutny: so many people around here!!
[19:02] indutny: 811 nicks!
[19:02] r04r has joined the channel
[19:02] r04r has joined the channel
[19:03] aGHz has joined the channel
[19:03] tomgallacher_ has joined the channel
[19:03] indutny: tjholowaychuk: btw, do you know what mocha means on russian?
[19:03] AndreasMadsen has joined the channel
[19:03] tjholowaychuk: indutny no clue
[19:03] tjholowaychuk: haha
[19:03] tjholowaychuk: do i want to know?
[19:03] indutny: tjholowaychuk: prob, not :)
[19:03] markdaws has joined the channel
[19:03] tjholowaychuk: ahahha
[19:04] indutny: nothing pleasant
[19:04] indutny: :D
[19:04] mmalecki: indutny: tell!
[19:04] `3rdEden: it must be so good, that it's a russian secret
[19:04] insin: ACTION places 15 blue chips on "prolapse"
[19:04] boltR has joined the channel
[19:04] gregmoreno has joined the channel
[19:04] ryanrolds_w_: haha
[19:05] ryanrolds_w_: indutny: Don't leave us hanging.
[19:05] indutny: one second
[19:05] indutny: trying to find how to create google translate url
[19:05] ryanrolds_w_: I just ran it through GT and it was mocha.....
[19:05] `3rdEden: tjholowaychuk now that you are here, what is the best way to completely remove a job from kue?
[19:06] qsobad has joined the channel
[19:06] tjholowaychuk: `3rdEden probably Job#remove()
[19:06] `3rdEden: is task.remove() suffecient enough?
[19:06] tjholowaychuk: that one open issue seems like some of the redis search stuff
[19:06] tjholowaychuk: is sticking around
[19:06] indutny: tjholowaychuk: ok, it's just `urine`
[19:06] tjholowaychuk: ah
[19:06] tjholowaychuk: haha
[19:07] mmalecki: lol
[19:07] salva has left the channel
[19:07] nvoyager has joined the channel
[19:07] tjholowaychuk: odd name for a drink
[19:07] tjholowaychuk: haha
[19:07] mmalecki: well, they are russians man
[19:07] mmalecki: they obviously don't give a fuck as long as it has alcohol
[19:07] `3rdEden: in russia, everything tasts good with vodka
[19:08] isaacs has joined the channel
[19:08] tjholowaychuk: in canada everything tastes good with vodka
[19:08] r04r has joined the channel
[19:08] r04r has joined the channel
[19:08] jxson has joined the channel
[19:08] mmalecki: indutny_away: don't go away :(. we love you!
[19:09] indutny_away: haha :)
[19:09] indutny_away: sorry
[19:09] ryanrolds_w_: white russion
[19:09] _dc has joined the channel
[19:09] ryanrolds_w_: *russian
[19:09] ryanrolds_w_: http://translate.google.com/?hl=en#en%7Cru%7Curine
[19:11] mikedeboer has joined the channel
[19:11] sotosof has joined the channel
[19:13] steveoh has joined the channel
[19:14] cgfuh has joined the channel
[19:14] steveoh: trying to install https://github.com/mashery/iodocs but i get this error http://gyazo.com/9bccc2b46c1702363581460b02072916
[19:14] jsurfer has joined the channel
[19:14] neilk_ has joined the channel
[19:14] steveoh: should i downgrade?
[19:14] boltR has joined the channel
[19:15] jsurfer has joined the channel
[19:15] jarek has joined the channel
[19:15] jarek has joined the channel
[19:15] yawNO has joined the channel
[19:15] kmiyashiro has joined the channel
[19:16] r04r has joined the channel
[19:16] goloroden has joined the channel
[19:16] goloroden: I am looking for a Node.js driver for MongoDB which behaves ideally exactly as the MongoDB shell. Can you suggest one? (I've tried node-mongolian yet, but it has several critical bugs, so I am looking for alternatives)
[19:16] davidsklar has joined the channel
[19:17] CIA-101: node: 03Bert Belder 07v0.6 * r892056b 10/ (8 files in 2 dirs): tests: fix more lint issues - http://git.io/CHffhQ
[19:17] brianloveswords has joined the channel
[19:18] __tosh has joined the channel
[19:18] jldbasa has joined the channel
[19:18] Planet_EN has joined the channel
[19:19] adrianF has joined the channel
[19:19] Planet_EN: how do you make a simple post or get in nodejs, seems like its something even darth vader wouldn't wanna do..
[19:19] boucher-macbook has left the channel
[19:20] letsgojuno has joined the channel
[19:20] secoif: SubStack how can I programmatically close an upnode connection so it will release the port dnode is listening on?
[19:20] nathanpalmer has joined the channel
[19:21] secoif: I've tried up.proto.destroy(), up.close(), up.end()
[19:21] thax has joined the channel
[19:21] Mare13h has joined the channel
[19:21] secoif: and none seem to disconnect the connected nodes
[19:22] robde has joined the channel
[19:23] XXXPigeonXXX: anyone use ngrep before?
[19:23] mark_azevedo has joined the channel
[19:23] zitchdog has joined the channel
[19:23] r04r has joined the channel
[19:24] mmalecki: I did
[19:24] mmalecki: XXXPigeonXXX: I'm the author
[19:25] XXXPigeonXXX: im trying to view the packets on a websocket server im developing, im on os x. them command i found is 'sudo ngrep -d en1 -q -W byline port 8080' but not working for me
[19:25] Internet13 has joined the channel
[19:25] mmalecki: XXXPigeonXXX: oh well, I'm confused, you mean this npm module?
[19:26] mmalecki: as in http://search.npmjs.org/#/ngrep?
[19:26] XXXPigeonXXX: nope i was refering ot a utility network-grep
[19:26] mmalecki: then I have no idea, sorry
[19:27] AviMarcus: not sure what -d en1 is
[19:28] tjfontaine: device en1
[19:28] tjfontaine: compared to linux eth1
[19:28] nphase has joined the channel
[19:28] sctb has joined the channel
[19:29] tjfontaine: XXXPigeonXXX: are you trying to hit this from localhost or from remote?
[19:29] Sami_ZzZ_ has joined the channel
[19:29] XXXPigeonXXX: tjfontaine: localhost
[19:29] tjfontaine: then en1 probably isn't what you want
[19:29] mark_azevedo has joined the channel
[19:29] tjfontaine: but lo0
[19:29] jerrysv: lo0 is what you'd want
[19:29] XXXPigeonXXX: currently, I'm using the ip address apache is throwing at me 10.1.10.17
[19:29] tjfontaine: but I would guess -d is optional
[19:29] XXXPigeonXXX: en1 is giving 10.1.10.0
[19:29] sctb: Hi folks, is there a way that I can handle 'socket hang up' errors on a Node.js instance serving long-polling clients?
[19:30] tjfontaine: XXXPigeonXXX: for testing us "-d any"
[19:30] tjfontaine: then you can narrow down
[19:30] redir_ has joined the channel
[19:31] tjfontaine: and even also drop the "-q" as I'm guessing that's quiet and you'll want to be verbose until you know wtf is going on
[19:32] BrianE has joined the channel
[19:32] maushu_ has joined the channel
[19:32] XXXPigeonXXX: tjfountaine: THANKS! -d lo0 worked
[19:32] eldios has joined the channel
[19:32] maletor has joined the channel
[19:32] Wa has joined the channel
[19:32] tjfontaine: there is no u in my name
[19:32] XXXPigeonXXX: im getting some output now
[19:32] tjfontaine: fwiw
[19:33] XXXPigeonXXX: sorry
[19:33] hswolff has joined the channel
[19:34] mape: What might cause "FATAL ERROR: v8::HandleScope::Close() Local scope has already been closed" to happen?
[19:34] CIA-101: node: 03Ryan Dahl 07v0.6 * r54ad2f6 10/ doc/community/index.html : Link to Marak's module rap in community page - http://git.io/9PN2sw
[19:34] uchuff has joined the channel
[19:35] tjfontaine: mape: are you making your own native module?
[19:35] mape: nope, trying to start up an old project with new node
[19:37] webben has joined the channel
[19:37] josh-k has joined the channel
[19:38] SubStack: secoif: upnode really only applies to the connection side of it and you can just up.close()
[19:38] justicefries: Hey SubStack, I have a question for you.
[19:38] SubStack: for the server just server.close() like usual
[19:38] MrTopf has joined the channel
[19:38] secoif: SubStack ok, I managed to free the port, calling .close on the master worked fine, didn't know about the 'close' event (assumed it would trigger the 'down' on the connected node).
[19:38] sotosof has left the channel
[19:38] justicefries: On browserify, I'm wanting to use filter() to send the concatted stuff through uglifyJS. how were you imagining that being used?
[19:38] secoif: SubStack thanks
[19:39] SubStack: justicefries: you can just .filter(require('uglify-js'))
[19:39] justicefries: awesome.
[19:39] justicefries: can I do a pull request with a wiki page describing that?
[19:39] SubStack: yeah ok
[19:39] justicefries: thanks.
[19:40] SubStack: justicefries: also if you use the cli tool you can just browserify entry.js | uglify-js > bundle.js
[19:40] justicefries: oh, that's sweet.
[19:40] SubStack: presuming you've npm install -g'd uglify
[19:40] justicefries: makes sense in that regard.
[19:41] SubStack: since it has a nifty cli tool that ships with it
[19:41] justicefries: that may make more sense in production rather than doing it as a middleware.
[19:43] joaquin_win has joined the channel
[19:43] tjholowaychuk has joined the channel
[19:43] CIA-101: node: 03Andreas Madsen 07master * r4a38795 10/ test/simple/test-isolates-parent-exit.js : 
[19:43] CIA-101: node: Add failing test case: parent on('exit')
[19:43] CIA-101: node: Fixes #2564 - http://git.io/MtY6Rg
[19:43] tjholowaychuk has joined the channel
[19:44] yawNO has joined the channel
[19:44] TheFuzzball has joined the channel
[19:45] steveoh: should I downgrade because of this error? http://gyazo.com/9bccc2b46c1702363581460b02072916
[19:46] Druide_ has joined the channel
[19:49] mraleph has joined the channel
[19:49] eb4890 has joined the channel
[19:50] p1d has joined the channel
[19:52] tomyan has joined the channel
[19:52] erichynds has joined the channel
[19:52] Hanspolo has joined the channel
[19:53] jklabo has joined the channel
[19:53] CrawfordComeaux has joined the channel
[19:53] zitchdog has joined the channel
[19:54] cha0s has joined the channel
[19:54] cha0s has joined the channel
[19:54] justicefries: also, SubStack, is there any reason to use something like backbone-browserify anymore?
[19:54] justicefries: I guess it's the latest version, so maybe
[19:54] loucal has joined the channel
[19:55] ryan0x2 has joined the channel
[19:55] bazookatooth has joined the channel
[19:55] shadowshell has joined the channel
[19:55] ByteCrunch has joined the channel
[19:57] mendel_ has joined the channel
[19:58] davetayls has joined the channel
[19:58] steveoh:  what is node-waf?
[19:58] cmr: It's a build program
[19:59] steveoh: "node-waf was unexpected at this time"
[19:59] CoverSlide: it's shitty too
[19:59] steveoh: i've had the hardest time getting other node apps to run
[19:59] sotosof has joined the channel
[20:00] steveoh: guess that comes with the territory though]
[20:00] CarterL has joined the channel
[20:00] cmr: Works perfectly fine for me :)
[20:00] prettyrobots has joined the channel
[20:00] steveoh: i can't install hashlib
[20:01] ryanfitz has joined the channel
[20:01] larsschenk1 has joined the channel
[20:02] emilsedgh: ah, node is too cool to be true! kudos to you guys!
[20:02] sx2020 has joined the channel
[20:03] _dc has joined the channel
[20:03] steveoh: does this look odd?
[20:03] steveoh: http://pastebin.com/8MN0ShuZ
[20:04] cmr: steveoh: yep, hashlib is a native extension
[20:04] cmr: steveoh: windows?
[20:04] steveoh: yessir
[20:05] cmr: Did you build node from source?
[20:05] steveoh: nope
[20:05] cmr: Do you have MSVC installed?
[20:05] steveoh: most likely
[20:06] counterbeing has joined the channel
[20:06] steveoh: i have visual studio on here and i think it installs vc
[20:06] brngardner has joined the channel
[20:07] jklabo has joined the channel
[20:07] steveoh: or is msvc something else
[20:07] steveoh: !define msvc
[20:07] joaquin_win has joined the channel
[20:07] steveoh: is it a mingw thing cmr?
[20:07] cmr: msvc is microsoft visual C, aka visual studio
[20:07] steveoh: yah ok 
[20:07] githogori has joined the channel
[20:08] cmr: Build node from source.
[20:08] cmr: Then you get node-waf, iirc
[20:08] steveoh: ok i'll go follow some instructions
[20:09] steveoh: any rec on what to checkout from git cmr? certain branch etc?
[20:10] cmr: steveoh: v0.6.7
[20:10] cmr: That's the tag you want
[20:10] cmr: For stable
[20:10] cmr: Although I think v0.7.0 was recently released? Not certain
[20:10] sx2020 has joined the channel
[20:11] Bonuspunkt: yes 0.7 was released
[20:11] sharkbird has joined the channel
[20:11] steveoh: should i grab 0.7 then?
[20:11] justicefries: unstable
[20:11] justicefries: still
[20:11] steveoh: ok
[20:11] justicefries: they even say it's unstable
[20:11] steveoh: oh yah they sure do
[20:11] mjr_ has left the channel
[20:13] Bonuspunkt: btw anyone got some infos about isolates in 0.7?
[20:13] secoif: SubStack sorry, I can't seem to get any 'close' events for dnode… https://gist.github.com/1628627 neither 'close' event handler fires
[20:13] robi42 has joined the channel
[20:15] CoverSlide: isolates are like threads but not threads
[20:15] bicranial has joined the channel
[20:15] Hanspolo has joined the channel
[20:15] colinclark has joined the channel
[20:15] jbpros has joined the channel
[20:16] ryanw has left the channel
[20:16] Bonuspunkt: yeah, i got that. i meant usage - because i have not found anything in the docs yet
[20:16] secoif: SubStack I'm guessing I need to apply the listener to the individual connections instead.
[20:17] XXXPigeonXXX: are streams in node kinda like unix pipes?
[20:18] jrbaldwin has joined the channel
[20:19] mark_azevedo has joined the channel
[20:19] napperjabber_ has joined the channel
[20:19] tmcw has joined the channel
[20:20] r04r has joined the channel
[20:20] shinuza has joined the channel
[20:21] smithclay has joined the channel
[20:21] kevinohara80 has joined the channel
[20:22] jxson has joined the channel
[20:23] tprice has joined the channel
[20:24] tprice: is there anything else i need to do to get crypto working on windows. im using node 0.6.6
[20:25] tprice: its like openssl is not installed
[20:25] Hanspolo has joined the channel
[20:25] smithclay: As far as front-end javascript dependency mangement goes, what else is out there other than Ender or RequireJS?
[20:26] r04r has joined the channel
[20:26] r04r has joined the channel
[20:26] khrome has joined the channel
[20:26] tbranyen: smithclay: lots of commonjs shims
[20:26] tprice: smithclay YUI has somthing you might like
[20:26] SubStack: smithclay: browserify of course!
[20:27] zitchdog has joined the channel
[20:27] igl1: dojo aswell
[20:27] tprice: smithclay i think jquery does it to now. well they use the commonjs  module system
[20:27] SubStack: secoif: you can do conn.on('end', fn)
[20:27] Venom_X_ has joined the channel
[20:27] SubStack: secoif: you can get conn as the second arg to the constructor or connection callback
[20:28] steveoh: cmr: building node now
[20:28] SubStack: smithclay: http://github.com/substack/node-browserify <-- you can totally just write code the node way and it works in the browser
[20:29] SubStack: including using some npm modules and stuff like process.nextTick
[20:29] steveoh: since it was already installed do i have to change any paths or anything?
[20:29] DarkGrey has joined the channel
[20:29] GrizzLyCRO has joined the channel
[20:29] ByteCrunch has joined the channel
[20:29] justicefries: +1 on browserify
[20:29] SubStack: oh and browserify just got --debug mode too last night
[20:30] te-brian2 has joined the channel
[20:30] SubStack: so exceptions get mapped back to the original source files in recent builds of firefox+firebug and chrome
[20:30] jscheel has joined the channel
[20:30] smithclay: browserify looks really cool, but is it still a good bet if I'd have to migrate a ton of legacy front-end code to modules?
[20:30] harthur has joined the channel
[20:31] SubStack: smithclay: depends on how organized the legacy stuff is
[20:32] criswell has joined the channel
[20:32] Me1000 has joined the channel
[20:32] r04r has joined the channel
[20:33] slaskis has joined the channel
[20:34] mikeal has joined the channel
[20:34] cmr: steveoh: tbh you're probably better off just running a debian vm, windows is rife with problems
[20:34] DarkGrey has joined the channel
[20:34] josephmoniz has joined the channel
[20:34] erichynds has joined the channel
[20:34] smithclay: It's some pretty ugly legacy javascript code, but I'm liking browserify.
[20:35] smithclay: The other awkward complication would be integrating browserify into a maven build process (belch)
[20:35] TheJH: woah, just read, english wikipedia is really going to do a 24h blackout
[20:35] cmr: TheJH: I've heard rumors of a 3h facebook blackout
[20:35] franciscallo has joined the channel
[20:35] ivic has joined the channel
[20:36] TheJH: wondering whether google will do stuff... pretty sure they won't turn off search... maybe a big, fat banner?
[20:36] warz: heh, three hours of facebook being blacked out will be more effective than 24 hours of wikipedia.
[20:36] TheJH: warz, :D
[20:36] mmalecki: BUT HOMEWORK
[20:36] TheJH: mmalecki, download the dumps :D
[20:37] mmalecki: lol
[20:37] warz: im going to have to refrain from posting on any of those forums where i try to sound smart on that day
[20:37] TheJH: mmalecki, also, they had little time to prepare, so they maybe won't even be able to shut down the mobile page
[20:37] insin: all facts will be perfectly cromulent tomorrow
[20:37] secoif: SubStack I tried 'end', and it didn't seem to work https://gist.github.com/1628627
[20:38] blup has joined the channel
[20:38] SubStack: secoif: close() doesn't kill pending connections
[20:38] SubStack: call connnection.end() too
[20:38] franciscallo1 has joined the channel
[20:38] SubStack: or server.end() kills all the pending connections
[20:39] SubStack: special dnode magic trick
[20:39] Morkel has joined the channel
[20:40] ap3mantus has joined the channel
[20:40] eastc has joined the channel
[20:40] spleeze has joined the channel
[20:40] te-brian2 has joined the channel
[20:41] simb: where does npm install things globally on the mac?
[20:41] brngardner has joined the channel
[20:42] secoif: simb ~/.npm
[20:42] r04r has joined the channel
[20:42] r04r has joined the channel
[20:43] secoif: simb `npm help folders`
[20:43] simb: thanks
[20:44] mandric has joined the channel
[20:46] ritch has joined the channel
[20:46] ritch has left the channel
[20:46] Druide_ has joined the channel
[20:47] kevinohara80: Has anyone set up an inbound email parsing solution in a node app?
[20:47] simb: so what is the best way to hack on a node app that was isntalled via npm?
[20:48] simb: Specificaly I am talking about brunch.io
[20:48] SubStack: kevinohara80: there's haraka or I wrote https://github.com/substack/node-smtp-protocol
[20:48] simb: I can fork the repo, and clone it. but I am not sure how I go about actually running it then if its not installed via npm
[20:49] kevinohara80: SubStack: Thanks man. I'll check it out.
[20:49] cyborg has joined the channel
[20:49] insin: simb: you could npm link your clone
[20:50] cyborg has left the channel
[20:51] r04r has joined the channel
[20:51] r04r has joined the channel
[20:51] garrensmith has joined the channel
[20:51] tkaemming has joined the channel
[20:51] boltR has joined the channel
[20:52] simb: insin: thanks. is that the "typical" way people work on libraries?
[20:53] MatthewS has joined the channel
[20:53] insin: it's the way I hack on my own when they're dependent on eachother - changes are instantly reflected in projects which use the link
[20:53] michaelhartau has joined the channel
[20:53] secoif: SubStack ok, so that works with dnode. to get similar with upnode, looks like I simply need to do server.close() and server.end() https://gist.github.com/1628627 thanks for your help
[20:54] secoif: simb yes
[20:54] jrbaldwin has joined the channel
[20:54] secoif: simb npm help link
[20:55] iammerrick: using felix's mysql module, I get a integer that correlates with the type; is there a method that lets me lookup that type?
[20:55] tbranyen: chrisdickinson: i see you active on github... YOU ARE THERE
[20:56] chrisdickinson: tbranyen: whaaaa?
[20:56] Skaag has joined the channel
[20:56] tbranyen: lol
[20:56] tbranyen: 13:42 < tbranyen> chrisdickinson: whatever happened to git.js did danlucraft just stop maintaining?
[20:56] tbranyen: looks completely abandonded
[20:56] chrisdickinson: oh, sorry, totally missed that. i was getting a haircut :|
[20:56] tbranyen: abandededed
[20:56] tbranyen: ha hope it looks good
[20:57] chrisdickinson: haha
[20:57] insin: man, I thought the things named after skeletal components trend died a year ago
[20:57] lperrin has joined the channel
[20:57] chrisdickinson: uh, as for git.js... yeah, i haven't heard from dan at all.
[20:57] tbranyen: insin: lol just saw the walmart project?
[20:57] insin: yeah :)
[20:57] tbranyen: chrisdickinson: bummer, might be worth a fork
[20:57] chrisdickinson: there was a brief stint where he was super involved, but then disappeared like so many ghosts.
[20:58] chrisdickinson: totally.
[20:58] tbranyen: i'm kinda done with native extensions
[20:58] chrisdickinson: i might just merge my changes into the master on my fork and continue working there.
[20:58] r04r has joined the channel
[20:58] tbranyen: chrisdickinson: awesome, i'll contribute
[20:58] chrisdickinson: radical.
[20:58] tbranyen: nodegit was a fun project
[20:58] MrBig has joined the channel
[20:58] dilvie has joined the channel
[20:58] tbranyen: i keep going back and forth
[20:58] chrisdickinson: this totally beats the CSS selector implementation I was writing in JS
[20:59] tbranyen: lol
[20:59] MatthewS has joined the channel
[20:59] chrisdickinson: also, most of my recent date/time related stuff :(
[20:59] chrisdickinson: ACTION is attempting the substack approach of creating discrete, single-concern modules.
[20:59] Neil has joined the channel
[21:00] insin: give the JavaScript community a way to create modules and they go *nuts* (then start arguing about who's defining them more prettily/efficiently)
[21:01] chrisdickinson: i really wish they wouldn't add a keyword for module.
[21:01] chrisdickinson: also, i really dislike the `<|` operator.
[21:01] chrisdickinson: in other words, opinions! i have them.
[21:01] tjholowaychuk: ACTION wondering when we can get ||=
[21:01] dgathright has joined the channel
[21:02] stride has joined the channel
[21:02] insin: you can moan to your kids about them when they finally have browser support
[21:02] stagas: woo https://github.com/stagas/blackout
[21:02] xtianw has joined the channel
[21:02] chrisdickinson: tjholowaychuk: so, i have a question about the relative safety of a hack i used to get my template language working with express.
[21:02] maletor has joined the channel
[21:03] tjholowaychuk: haha k
[21:03] chrisdickinson: https://github.com/chrisdickinson/plate/blob/master/lib/express-shim.js
[21:03] dgathright_ has joined the channel
[21:03] vkandy: guys whats the graceful way to kill a worker process?
[21:03] chrisdickinson: so what i'm doing is overriding your `res._render` bit and wrapping the given `fn` with something that checks if the return value of the template render is an EventEmitter.
[21:03] tjholowaychuk: chrisdickinson hmm yeah that might be a bit sketchy haha
[21:04] chrisdickinson: tjholowaychuk: is there a better way?
[21:04] Guest68802 has joined the channel
[21:04] Guest68802 has left the channel
[21:04] chrisdickinson: keeping in mind the template language is async.
[21:04] tjholowaychuk: unfortunately not really with 2x but for 3x it'll be very simple
[21:04] tjholowaychuk: one sec
[21:04] willwhite has joined the channel
[21:05] tjholowaychuk: chrisdickinson with 3x it can be as little as https://github.com/visionmedia/consolidate.js/blob/master/lib/consolidate.js#L79
[21:05] tjholowaychuk: depending on the engine of course
[21:05] voodootikigod has joined the channel
[21:05] AndreasMadsen: vkandy: https://github.com/joyent/node/issues/2088
[21:05] tjholowaychuk: but that's where im collecting them to make it easier for people
[21:05] clutchski has joined the channel
[21:05] chrisdickinson: tjholowaychuk: yeah, i was looking at that. does that take async renders into account automatically?
[21:05] tjholowaychuk: yup they'll work fine
[21:06] chrisdickinson: cool, that's perfect.
[21:06] olivier2 has joined the channel
[21:06] tjholowaychuk: that's the major change in 3x, to get rid of the old legacy internals
[21:06] chrisdickinson: so, i kind of like having the shim in for express 2x. i wonder if there's an easy way to detect that the shim is necessary.
[21:07] tjholowaychuk: between the two versions you mean?
[21:07] tjholowaychuk: there's express.version
[21:07] chrisdickinson: oh, cool.
[21:07] chrisdickinson: perfect, perfect. i'll see about adding that tonight.
[21:08] insin: ooh, Django templates plus async *watches*
[21:09] tjholowaychuk: insin there are a few more too swig and something else
[21:09] insin: I'm losing count!
[21:09] insin: ginger is another one
[21:09] boltR has joined the channel
[21:10] vkandy: AndreasMadsen: thanks for the link .. so 0.6.7 doesn't have destroy method correct?
[21:10] dob_ has joined the channel
[21:10] AndreasMadsen: vkandy: no
[21:10] Wizek has joined the channel
[21:10] vkandy: ok thank you
[21:10] AndreasMadsen: vkandy: v0.6 can't get new API
[21:10] bartt has joined the channel
[21:10] AndreasMadsen: vkandy_ but I will properly fix it in node v0.8
[21:11] vkandy: alright thanks so much!
[21:11] simb: whats the command to make run one of the scripts defined in package.json?
[21:12] josephmoniz has joined the channel
[21:14] mark_azevedo has joined the channel
[21:15] devongovett has joined the channel
[21:16] Cromulent has joined the channel
[21:16] jonbaer has joined the channel
[21:16] brngardner has joined the channel
[21:18] mbrevda has joined the channel
[21:18] Stephen has joined the channel
[21:19] mbrevda: how can I get a list of included/required files?
[21:20] kickingvegas has joined the channel
[21:20] Planet_EN has left the channel
[21:20] Hanspolo has joined the channel
[21:20] GrizzLyCRO has joined the channel
[21:21] kenperkins has joined the channel
[21:22] cmr: mbrevda: from what?
[21:23] maxogden: mbrevda: npm list or require.resolve('packagename')
[21:23] mbrevda: cmr: I'm looking for the node equivalent of http://php.net/manual/en/function.get-included-files.php
[21:23] napperjabber_ has joined the channel
[21:24] bradleymeck: mbrevda, require.cache ?
[21:24] joaquin_win_ has joined the channel
[21:24] norviller has joined the channel
[21:24] isaacs: mbrevda: Object.keys(require.cache)
[21:25] isaacs: mbrevda: that'll give you a list of all the files that have been loaded.
[21:25] isaacs: (or are currently in the process of being loaded)
[21:25] stefpb has joined the channel
[21:25] isaacs: so, __filename will always be in that list.
[21:25] captain_morgan has joined the channel
[21:25] chrisdickinson: tjholowaychuk: question no. 2: npm install --dev to get mocha also picks up expresso. is expresso necessary for running tests with mocha?
[21:25] TooTallNate: mbrevda: there's also process.moduleLoadList
[21:25] cognominal_ has joined the channel
[21:25] tjholowaychuk: chrisdickinson nope
[21:26] tjholowaychuk: that seems
[21:26] tjholowaychuk: odd
[21:26] micheil has joined the channel
[21:26] isaacs: TooTallNate: that's not the same thing.
[21:26] isaacs: TooTallNate: that's a list of bindings and native modules only
[21:26] TooTallNate: isaacs: ok, didn't realize user modules weren't included
[21:27] TooTallNate: isaacs: is that a public property anyway?
[21:27] chrisdickinson: tjholowaychuk: so, in gist form: https://gist.github.com/d4d7123fa7ba7ce3a61a
[21:27] isaacs: TooTallNate: but, bindings/natives aren't included in require.cache
[21:27] letsgojuno has joined the channel
[21:27] isaacs: and aren't loaded from the filesystem, so they're essentially "free" to load anywya
[21:27] isaacs: that is, no IO, just JS parsing costs.
[21:27] isaacs: and memory overhead.
[21:27] TheJH: GRAAAAH! node-inspector, STOP RESUMING MY CODE, EVEN IGNORING BREAKPOINTS!
[21:27] chrisdickinson: npm install --dev grabs dev dependencies for `tz`, which is tested with mocha (which is awesome, btw), but that also grabs expresso, and then jscoverage (causing a compile step)
[21:27] tjholowaychuk: chrisdickinson you sure it's from mocha?
[21:28] TheJH: mwaaaaaaaah
[21:28] tjholowaychuk: hm
[21:28] kenperkins: so did something change in node 0.6 from 0.4 with regards to what the error object is in the uncaughtExceptions handler
[21:28] stonebranch has joined the channel
[21:28] aesptux has joined the channel
[21:28] isaacs: man... --dev should only be one level.
[21:28] isaacs: chrisdickinson, tjholowaychuk ^
[21:28] isaacs: +1?
[21:28] tjholowaychuk: +1
[21:28] chrisdickinson: +1.
[21:28] TooTallNate: isaacs: +1
[21:28] isaacs: ok.
[21:28] bradleymeck: kenperkins, error objects are not enumerated in v8's newer versions
[21:28] kenperkins: currently I'm only getting a string as opposed to a object with stack, etc
[21:28] isaacs: you know, btw, `npm install` installs dev deps one level in anyway
[21:28] tjholowaychuk: i dont think i've used --dev actually
[21:28] bradleymeck: so you should implement Error.prototype.toJSON etc
[21:28] kenperkins: bradleymeck: oh, that sounds like it could be the problem
[21:29] bradleymeck: its ghetto but works
[21:29] tjholowaychuk: chrisdickinson maybe it's dependencies: { dst: '0.X.X' },
[21:29] tjholowaychuk: that dep from tz
[21:29] chrisdickinson: tjholowaychuk: yes, those both only include mocha :)
[21:29] tjholowaychuk: oh
[21:29] tjholowaychuk: nope
[21:29] tjholowaychuk: haha wtfff
[21:29] kenperkins: are there any blog posts about this?
[21:29] chrisdickinson: yeah, it's the --dev. isaacs is right, i shouldn't be using `--dev` in this case, i think.
[21:29] PatF has joined the channel
[21:30] chrisdickinson: i thought `npm install` skipped all devDependencies.
[21:30] isaacs: chrisdickinson: you can do this:  npm install mocha; npm explore mocha -- npm install
[21:30] isaacs: if you really want mocha's devDeps
[21:30] jesusabdullah: npm explore?
[21:30] isaacs: but not the dev grandchildren
[21:30] isaacs: jesusabdullah: yes!
[21:30] isaacs: extremely useful.
[21:30] chrisdickinson: TIL.
[21:30] jesusabdullah: Yeah that's cool
[21:31] kenperkins: bradleymeck: for example this is what happens now: https://gist.github.com/1627874
[21:31] isaacs: tjholowaychuk: 
[21:31] isaacs: ├─┬ mocha@0.10.1  extraneous
[21:31] isaacs: │ ├── commander@0.5.2 
[21:31] isaacs: │ ├── debug@0.1.0 
[21:31] isaacs: │ ├── growl@1.4.1 
[21:31] isaacs: │ └─┬ should@0.3.2 
[21:31] isaacs: │   └── expresso@0.9.2 
[21:31] isaacs: should pulls in expresso
[21:31] markschaake has joined the channel
[21:31] tjholowaychuk: hmm it should be using mocha
[21:31] isaacs: yes, it SHOULD.
[21:31] isaacs: lol.
[21:32] dionysius has joined the channel
[21:32] tjholowaychuk: oh i have 0.3.x for mocha's should
[21:32] tjholowaychuk: that makes sense
[21:32] bradleymeck: kenperkins, i know, haibu has a patch to avoid the issue
[21:33] aaronmcadam has joined the channel
[21:33] liquidproof has joined the channel
[21:33] kenperkins: bradleymeck: so that's good at least that I'm not going crazy here. Can you share a link?
[21:33] dionysius: hello there. i'm unable to compile node.js. http://pastebin.com/9Yg4Lg8b
[21:33] disappearedng has joined the channel
[21:33] tjholowaychuk: isaacs wouldn't --dev be cyclic? should -> mocha -> should -> mocha
[21:33] tjholowaychuk: haha
[21:33] dionysius: i have a synology (ARM) depencies installed via ipkg
[21:33] dionysius: gcc (GCC) 4.2.3
[21:34] Druide_ has joined the channel
[21:34] tjholowaychuk: chrisdickinson k try again I re-published
[21:34] tjholowaychuk: with should 0.4.x
[21:34] sarlalian has joined the channel
[21:34] bradleymeck: kenperkins, https://github.com/nodejitsu/haibu/blob/master/lib/haibu/common/index.js#L23-34
[21:34] markdaws has joined the channel
[21:35] bradleymeck: unfortunately you will need to do stuff like that according to how you want errors reported
[21:35] chrisdickinson: tjholowaychuk: just retried `npm install --dev`, it's still pulling in jscoverage. will retry with plain `npm install`.
[21:35] tjholowaychuk: wthhh i've never had it pull expresso
[21:35] isaacs: chrisdickinson: see my comment above ^
[21:35] chrisdickinson: (i should be able to get away without having to use `--dev`.)
[21:35] isaacs: tjholowaychuk: cycles are fine.
[21:36] richardr has joined the channel
[21:36] ryanrolds_w has joined the channel
[21:36] isaacs: tjholowaychuk: should will load the mocha that is above it
[21:36] richardr has joined the channel
[21:36] kenperkins: bradleymeck: fantastic, ty
[21:37] slaskis has joined the channel
[21:38] ByteCrunch has joined the channel
[21:38] MrTopf has joined the channel
[21:38] joshwines has joined the channel
[21:39] fg3 has joined the channel
[21:39] piscisaureus_ has joined the channel
[21:40] dshaw_ has joined the channel
[21:41] bacon000 has joined the channel
[21:41] jonbaer has joined the channel
[21:42] pyrotechnick has joined the channel
[21:43] mbrevda has joined the channel
[21:44] brngardner has joined the channel
[21:44] joshfinn_ has joined the channel
[21:44] ByteCrunch has joined the channel
[21:45] ritch has joined the channel
[21:45] tilgovi has joined the channel
[21:45] joshfinnie has joined the channel
[21:45] ritch has left the channel
[21:46] joshgillies has joined the channel
[21:47] hipsters_ has joined the channel
[21:48] socketio\test\84 has joined the channel
[21:52] gordonmattey_ has joined the channel
[21:56] panosru has joined the channel
[21:56] panosru: hello, I have a question on how should I structure my node.js project with coffee could anyone share any info? :)
[21:57] Heisenmink has joined the channel
[21:57] panosru: I don't know if there is any best practice around it
[21:58] isaacs: panosru: put coffee-script files in src.  generate your js in lib/ before deploying or publishing.
[21:58] jj0hns0n has joined the channel
[21:58] isaacs: 98or, just write it in js)
[21:59] larsschenk1 has left the channel
[22:00] Me1000 has joined the channel
[22:00] panosru: isaacs: thanks for the reply, are you aware of any code example on github or something? :)
[22:00] pors has joined the channel
[22:00] felixge has joined the channel
[22:00] felixge has joined the channel
[22:00] dinarcon has joined the channel
[22:01] TheLifelessOne has left the channel
[22:02] brianloveswords has joined the channel
[22:02] michaelhartau has joined the channel
[22:02] isaacs: panosru: https://github.com/frank06/riak-js
[22:04] panosru: isaacs: you are the man! :) Thanks a lot
[22:04] Carmivore has joined the channel
[22:04] Carmivore has joined the channel
[22:04] dionysius: does anyone know what i am missing? http://pastebin.com/9Yg4Lg8b
[22:04] panosru: isaacs: may I bother you a bit more by checking out this topic http://stackoverflow.com/questions/8890132 ? :)
[22:04] mehlah has joined the channel
[22:05] isaacs: dionysius: try this:  ./configure --without-snapshot
[22:05] isaacs: dionysius: then make
[22:05] dionysius: thanks, do i have to make clean first?
[22:06] dionysius: whole bunch of compile did well (and it takes long :D)
[22:06] thax has joined the channel
[22:06] bLUEEE has joined the channel
[22:07] CIA-101: node: 03Ben Noordhuis 07master * re493b29 10/ (.gitignore Makefile configure): build: respect --debug configure switch - http://git.io/YKC1rQ
[22:07] konobi: dionysius: armv5te?
[22:07] dionysius: dont know exactly
[22:07] dionysius: its a synology nas
[22:08] dionysius: aah
[22:08] dionysius: Linux srv-dionysius 2.6.32.12 #1955 Sat Nov 26 14:50:54 CST 2011 armv5tel GNU/Linux
[22:08] konobi: yeah, it's a kirkwood
[22:08] springmeyer_ has joined the channel
[22:09] konobi: dionysius: edit your wscript file and add " armeabi=soft" to the scons call for v8
[22:09] tylerstalder has joined the channel
[22:10] mikedeboer has joined the channel
[22:10] dionysius: this line? def v8_cmd(bld, variant):
[22:10] dionysius:   scons = join(cwd, 'tools/scons/scons.py')
[22:12] konobi: dionysius: nah, where it's actually calling out to the deps to build v8
[22:12] bazookatooth has joined the channel
[22:13] vguerra has joined the channel
[22:14] redir_ has joined the channel
[22:14] dionysius: konobi: i don't know where you mean
[22:14] dionysius: respectively i cannot find
[22:14] redir_ has joined the channel
[22:15] redir_ has joined the channel
[22:15] redir__ has joined the channel
[22:16] sx2020 has joined the channel
[22:16] dionysius: konobi: my wscript file looks like: http://pastebin.com/RgJMPC6W
[22:16] bLiNdRaGe has left the channel
[22:16] raja has joined the channel
[22:17] dionysius: maybe you can tell me the line
[22:17] apoc: is this nodejs eval bot still here?
[22:17] apoc: >>> 42
[22:17] purr: apoc: (number) 42
[22:17] apoc: >>> new Date().getDate)(
[22:17] purr: apoc: SyntaxError: Unexpected token )
[22:18] apoc: if I do this in node it doesn't throws an error
[22:18] fwg: lol nice catch
[22:18] bnoordhuis: apoc: it's a feature
[22:19] iRoj has joined the channel
[22:19] apoc: i guess so
[22:19] konobi: dionysius: line 574
[22:19] dionysius: konobi: thanks
[22:20] jhbot: 'coordinating filesystem activity in nodejs' by Obtuse http://stackoverflow.com/q/8902525 (tags: javascript)
[22:20] willwhite has joined the channel
[22:21] stride: bnoordhuis: seriously?
[22:21] johnhamelink has joined the channel
[22:22] bnoordhuis: stride: no, just a side effect of how the repl evaluates input
[22:22] isaacs: apoc: that's because node's repl wraps things in ()
[22:22] isaacs: foo)( wrapped in () ==> (foo)()
[22:22] stride: ah, I see. okay :)
[22:22] apoc: ahh great thanks
[22:22] isaacs: apoc: try this:  console.log)("hello, world"
[22:22] apoc: that makes sense then ok
[22:23] dionysius: konobi: unlucky, still the same http://pastebin.com/M0zhDMKq (but it took armeabi=soft to the call)
[22:25] konobi: dionysius: try one of (soft,softfp,hard)
[22:25] konobi: =0)
[22:25] johnhame_ has joined the channel
[22:25] dionysius: ok
[22:26] jj0hns0n has joined the channel
[22:26] charlenopires has joined the channel
[22:27] adrianF has joined the channel
[22:28] dionysius: damn, none of these
[22:28] jetienne has joined the channel
[22:29] dionysius: konobi: but never mind. I'll open a ticket
[22:29] dionysius: konobi: thanks for your help
[22:29] k1ttty has joined the channel
[22:29] uberbrady has joined the channel
[22:29] bingomanatee: >>> var i = 0; while(true) ++i
[22:30] purr: bingomanatee: Timeout Error: Execution time exceeded 2 seconds
[22:30] bingomanatee: lazy bitch
[22:30] tomyan has joined the channel
[22:31] CIA-101: node: 03Dan Williams 07v0.6 * r091ab85 10/ doc/api/appendix_1.markdown : docs: replace expresso with mocha in appendix 1 - http://git.io/159kfw
[22:31] CIA-101: node: 03Dan Williams 07master * r29ce743 10/ doc/api/cluster.markdown : docs: fix syntax error on cluster api docs - http://git.io/k6juOg
[22:31] bingomanatee: >>> var f = function(){ f();}; f()
[22:31] purr: bingomanatee: RangeError: Maximum call stack size exceeded
[22:31] bingomanatee: man, this is broken.
[22:32] stride: that bot is weird
[22:32] stride: >>> braille('ohai!');
[22:32] purr: stride: (string) '⠕⠓⠁⠊⠖'
[22:33] scott_gonzalez has joined the channel
[22:33] uberbrady: Does anyone know a way to make Node disconnect some kind of connection it's holding at the termination of a script? The script finishes, but never exits because the DB connection is still open (or so I am figuring)
[22:33] sh1mmer:  /msg isaacs 
[22:33] sh1mmer: fail.
[22:33] isaacs:  /msg sh1mmer yo
[22:34] isaacs:  /msg sh1mmer nice hat.
[22:34] snipe has joined the channel
[22:34] isaacs: ;P
[22:34] sh1mmer: I'm not wearing a hat. For once.
[22:34] jhbot: 'JQuery ajax fails on POST to express.js server' by alecRN http://stackoverflow.com/q/8902659 (tags: jquery, ajax, express)
[22:34] maxogden:  /msg ryah what are you wearing
[22:34] sh1mmer: Unless you mean this dunce cap.
[22:34] mjijackson has joined the channel
[22:35] tjholowaychuk: lol jquery
[22:35] __tosh has joined the channel
[22:35] sh1mmer:  /msg maxogden I put on my robe and wizard's cap
[22:35] maxogden: award sh1mmer 1 point
[22:35] secoif: uberbrady are you using mongoose?
[22:35] uberbrady: no, node-mysql - well, my own fork of it
[22:35] aslant has joined the channel
[22:36] secoif: yeah not sure with that. I usually manually call process.exit
[22:36] uberbrady: my little sample test script hangs when it should 'finish' - and I'm assuming becaiuse the event-loop is still listening to the mysql socket.
[22:36] uberbrady: I'd *ideally* like to drain the query queue, then exit
[22:36] jerrysv: maxogden: https://github.com/JerrySievert/cromagjs
[22:37] jerrysv: maxogden: more than just an empty repository now
[22:37] context: is that a hint toward Sliders ?
[22:37] maxogden: no moar monkeys! wewt
[22:37] context: http://en.wikipedia.org/wiki/Kromagg
[22:37] jerrysv: maxogden: no monkeys at all in that one
[22:37] zackattack has joined the channel
[22:37] joshsmith has joined the channel
[22:37] uberbrady: any way to look at what the event loop is listening for, and if it's only my stuff - close it (and thus exit?)
[22:38] maxogden: Cromag.js:Date::_:Array.prototype
[22:38] rauchg has joined the channel
[22:38] brianseeders has joined the channel
[22:38] jerrysv: it's a shallow wrapper with the additional functionality added on
[22:38] Swimming_Bird has joined the channel
[22:39] rburhum has joined the channel
[22:39] sh1mmer: uberbrady: there is a destroySoon() stream method
[22:39] sh1mmer: er… event
[22:39] sh1mmer: wait. I did mean method.
[22:39] uberbrady: hrm…lemme check that out, thanks!
[22:40] context: uberbrady: let me know if you find out of a way to view the global event queue. im curious, and ive been seeing a lot of people ask about it lately
[22:40] ambroff has joined the channel
[22:41] uberbrady: yeah - that looks like something I might want for the socket. Now I just need a hook to know when execution has 'fallen off the edge' of the main script.
[22:41] Neil has joined the channel
[22:41] jimt has joined the channel
[22:41] sh1mmer: uberbrady: I mean it's basically a graceful destroy
[22:42] jhbot: 'WebSockets: useful for reducing overhead?' by Ivo http://stackoverflow.com/q/8902731 (tags: javascript, http, websocket, overhead)
[22:42] insin: did I dream it, or was there an episode of Sliders where the male sliders were detained for forced breeding?
[22:42] uberbrady: sh1mmer: Yup - lets me finish the write first, then close. But still, I need a 'trigger' for when to invoke that…still perusing docs, will report back if anything looks interesting.
[22:43] context: insin: there was.
[22:43] skm has joined the channel
[22:43] context: insin: and the planet never invented artificial insemination
[22:44] insin: phew, it wasn't just some fever dream which was intended to contain Kari Wuhrer
[22:44] sh1mmer: uberbrady: I'm missing some context
[22:44] context: insin: i own seasons 1-3 :x. i kinda miss that show
[22:44] bicranial has joined the channel
[22:44] sh1mmer: can you describe your use case?
[22:44] context: though it turned to shit during/after S03
[22:44] uberbrady: sure - 
[22:44] uberbrady: so I have a script, I do some things, print some things out, then the script exits.
[22:45] uberbrady: but when it falls off the end of the script - it doesn't exit - just sits there.
[22:45] Druide_ has joined the channel
[22:45] uberbrady: I'm assuming because Node doesn't know that I'm not expecting anything back from the DB connection (an opened socket)
[22:46] uberbrady: I can't close the connection until I know I'm actually exiting
[22:46] uberbrady: and I don't want to keep closing the connection every time it's idle - too slow for when the db is used normally.
[22:46] JJMalina has joined the channel
[22:46] uberbrady: in a normal server context - this isn't as useful. For quick little test scripts, it is.
[22:47] beejeebus has joined the channel
[22:47] subhaze has joined the channel
[22:47] sh1mmer: so what logically indicates the condition to stop the script?
[22:48] sh1mmer: Anyone have a minute to talk about the v8tickprocessor?
[22:48] isaacs: uberbrady: you have to explicitly call .close() or whatever on it at some point.
[22:48] uberbrady: if you write a script that's super-simple - contents are just 'console.log("Hi!")' - it will run and exit.
[22:49] jldbasa has joined the channel
[22:49] isaacs: uberbrady: right
[22:49] sh1mmer: uberbrady: right, so if you have a listener that's active Node will wait for it
[22:49] isaacs: so put connection.close() (or whatever is appropriate for your specific db binding) at the bottom of your script
[22:49] sh1mmer: uberbrady: so you need to find whatever thing indicates you are done, and then close the connection to the db
[22:49] isaacs: sh1mmer: only if it's a timer or awaiting IO
[22:49] sh1mmer: isaacs: right
[22:50] tilgovi_ has joined the channel
[22:50] isaacs: (i know you know, just being precise for tech support value)
[22:50] simb has left the channel
[22:50] redir_ has joined the channel
[22:50] MrTrick has joined the channel
[22:50] eee_c has joined the channel
[22:51] uberbrady: I'd *prefer* to not have to manually indicate the close at the end - rather I'd like to see that the execution of the script has fallen off the end, and *then* say "Well, better close this DB then, nothing more interesting is going to happen here!"
[22:51] sh1mmer: isaacs: (are we being nice in brackets so people know there isn't any drama, old friend?)
[22:51] uberbrady: But that would work - and I may do that to maintain my sanity
[22:51] uberbrady: (lol)
[22:51] sh1mmer: uberbrady: you can also use .once instead of .on
[22:51] sh1mmer: for events that only happen once
[22:51] isaacs: sh1mmer: (if it's in parentheses, then other people can't see it, because it's quieter)
[22:51] harthur has joined the channel
[22:52] isaacs: sh1mmer: (unless they're rudely eavesdropping)
[22:52] nicholasf has joined the channel
[22:52] rtgibbons has joined the channel
[22:52] sh1mmer: isaacs: (I like your hat)
[22:52] isaacs: lol
[22:52] context: anyone know that mailing list for north american isp/dc/asn/network administrators
[22:52] uberbrady: Well, some kind of event being emitted at the 'you have no more input, you've fallen off the end of your script' would be awful nice
[22:52] MrTrick: I'm having issues installing node.js on a RHEL6 machine. ./configure is giving me "library dl: not found ... openssl: not found ...etc". `sudo yum install openssl` gives "already installed". Suggestions?
[22:52] mjijackson: uberbrady: no such luxury in the world of evented code. the event loop keeps running until it runs out of callbacks to fire.
[22:53] sh1mmer: uberbrady: well I'm assuming whatever database driver has an end of query event, or something similar
[22:53] isaacs: sh1mmer: using .once() won't actually do it, probably.
[22:53] sh1mmer: uberbrady: if you use streams and pipes then this is managed for you
[22:53] mjijackson: uberbrady: you could put the db.close() call in your callback to db.query()
[22:53] isaacs: sh1mmer: the issue is that the socket is open
[22:53] isaacs: it has to be explicitly closed.
[22:53] sh1mmer: isaacs: in the case of a db driver, that is probably true
[22:53] beejeebus has joined the channel
[22:53] uberbrady: And there's no 'hook' for "execution has fallen off the end of your script" - so I'm going to have to do it manually.
[22:54] uberbrady: I'm sure DB drivers and anyone else who maintains connections would like to know that the script has no more input to read, so they can close their db connections (or S3 or SDB or whatever) and gracefully exit.
[22:54] uberbrady: But - will specify it manually for now.
[22:55] MarkMenard has joined the channel
[22:55] MrTrick: (and what's this 'library dl' component meant to be?
[22:55] jhbot: 'Upstart env stanza not setting environment variables (like NODE_ENV) for Node.js application' by Chris F http://stackoverflow.com/q/8902856 (tags: ubuntu, environment-variables, upstart)
[22:56] sh1mmer: When the tick processor refers to the node binary in shared libraries, does that refer to everything in Node core including libuv, zlib, etc? Does it also include core modules like lib/http.js etc?
[22:56] MrTrick: (question withdrawn on account of "I'm-an-idiot")
[22:58] mjijackson: uberbrady: it might help to think about it from the point of view of the event loop. if the user tells you that they want to fire a callback when some event happens, e.g. when you receive some result data back from the database, then the event loop has no choice but to wait around until the database connection is explicitly closed. because until then, it still has reason to expect that a "data" event may come back from the database.
[22:58] snipey has joined the channel
[22:58] mjijackson: only after the connection is closed can the event loop be sure that event isn't going to be fired any more...
[22:58] uberbrady: true - and there's no way for Node.js to be able to know that the only way my socket will get used is if I send a request on it, then receive a response.
[22:58] uberbrady: It could be a different kind of socket that pipes in data at any time.
[22:59] sx2020 has joined the channel
[22:59] dionysius: >>> print('hi')
[22:59] purr: dionysius: undefined; Console: 'hi'
[22:59] mjijackson: uberbrady: right. that's why you need to close all socket connections before node will exit gracefully.
[23:00] mjijackson: it's kind of amazing actually that v8 is able to keep track of everything that's going on in order to know when to exit in the first place.
[23:00] jacobolus has joined the channel
[23:00] dionysius has joined the channel
[23:00] uberbrady: Yup. The solution I need - that doesn't exist - is something for when node.js finishes exiting a script, it emits something.
[23:00] mjijackson: sh1mmer: what do you mean by "refers to the node binary"?
[23:01] uberbrady: *then* - I could listen for that in my driver, and gracefully shutdown all my connections.
[23:01] fg3 has joined the channel
[23:01] tjholowaychuk has joined the channel
[23:01] uberbrady: and then node would exit.
[23:01] tjholowaychuk has joined the channel
[23:01] context: i was actually just asked... "what do i put for the volume field for an item in a 1cf bag?"
[23:01] k1ttty has joined the channel
[23:02] sh1mmer: mjijackson: https://gist.github.com/1629632
[23:02] jacobolu_ has joined the channel
[23:02] uberbrady: well - not 'finishes' exiting a script - but that execution has fallen off the end of a scirpt - though I guess that wouldn't work either - if I was running an HTTP server, the server would still be running when 'execution falls off of the end of the script' - 
[23:02] uberbrady: so my callback would be useless.
[23:03] uberbrady: harrumph.
[23:03] nicholas_ has joined the channel
[23:03] uberbrady: I just want everything to work and be pretty! Waaah!
[23:03] mjijackson: uberbrady: yeah. it's a tricky thing. what you essentially need is a way to tell when only one socket is still open (your db socket) and no more callbacks are registered to fire.
[23:04] uberbrady: yup. I'd be willing to walk through some giant awful event-loop array of things being listened to if necessary
[23:04] mjijackson: so you could say something like: process.on("oneSocketLeftOpen", function (socket) { if it's my socket, close it! });
[23:04] Salve has joined the channel
[23:04] uberbrady: yup - though it gets worse - I may have 'n' sockets left open (it pools DB connections)
[23:05] uberbrady: maybe an attribute on the socket would do it - socket.somethingSomething=true;
[23:05] mjijackson: sh1mmer: never seen that before. are you using the v8 profiler?
[23:05] markq has joined the channel
[23:05] uberbrady: if the only things open in the event loop are sockets with somethingSomething - then do a callback, then exit.
[23:05] mjijackson: uberbrady: yeah, that might work. socket.autoClose = true;
[23:05] retornam has joined the channel
[23:05] sh1mmer: mjijackson: yes
[23:05] sh1mmer: it's the mac wrapper
[23:06] sh1mmer: but just the tick processor
[23:06] tosh has joined the channel
[23:07] jacobolus has joined the channel
[23:07] vkandy: anyone know of a rolling appender for winston?
[23:07] mjijackson: sh1mmer: never used it personally, so not sure. sorry!
[23:07] sh1mmer: np
[23:07] nathanpalmer_ has joined the channel
[23:07] uberbrady: mjijackson: Could probably be extended to all readable streams, really.
[23:07] vkandy: looks like winston keeps writing to log file forever never rolls it by day or size ..
[23:07] dwhittle has joined the channel
[23:08] tosh has joined the channel
[23:08] josephmoniz: if i were to use winston i'd probably try to find a graylog2 appender for it
[23:08] __tosh has joined the channel
[23:08] josephmoniz: which, actually, graylog2 can use syslog so i'd think i'd be good to go
[23:09] uberbrady: mjijackson: since I would want my own callback to fire - maybe instead make it some kind of special listener, and if the Node Event loop sees taht all of the stuff it's listening for has that listener on it, it invokes the callbacks…then exits - or maybe jsut invokes the callbacks (I'll close everything myself, and exiting would happen automagically)
[23:09] MrTrick has left the channel
[23:09] perezd_ has joined the channel
[23:09] uberbrady: mjijackson: socket.on('autoclose',function() {blah blah .close();})
[23:10] jacobolus has joined the channel
[23:10] uberbrady: dunno if there would be performance implications with inspecting every readable stream's listeners to look for 'autoclose' listeners though
[23:11] strifedll has joined the channel
[23:11] mjijackson: seems like there needs to be a clean way to handle this though.
[23:12] uberbrady: and I don't think I account for timeouts being set either
[23:12] bazookatooth has left the channel
[23:12] uberbrady: if someone has a setTimeout() set for an hour in the future - that should prevent close as well. Though I think it does already?
[23:12] fg3 has left the channel
[23:14] mjijackson: uberbrady: yes, it does.
[23:14] mjijackson: that's a callback, so it's a bit different.
[23:14] disappearedng has joined the channel
[23:14] jacobolus has joined the channel
[23:14] llrcombs has left the channel
[23:15] uberbrady: Well, somehow the event loop knows - even though it's not listening to any I/O for anything in particular, it's still got that scheduled setTimeout, so better not exit yet.
[23:15] moonlite has joined the channel
[23:15] mjijackson: open, readable sockets that have no more data to emit is your problem
[23:15] context: why dont you keep track of all open sockets in a collective manner ?
[23:16] context: class HiIKeepTrackOfClientSockets { var someClientSocketsGoInHere = []; }
[23:16] mjijackson: right. the event loop will never exit as long as there is a callback still left around to fire. the problem with these open sockets is that they technically still *do* have callbacks to fire, even though they won't ever fire them (because they're done emitting data)
[23:17] context: well the socket is open. it has permanent event listeners
[23:17] context: until closed.
[23:17] uberbrady: context: I do - but what I really need to know is "node.js is only listening in its event loop for my particular socket(s), no other readable streams" and then do Magical Things.
[23:17] context: uberbrady: how many streams does your app have that you dont know about?
[23:18] mjijackson: context: right. that's the problem: the need to explicitly close the socket instead of node simply knowing that it's not going to get any more data on that socket so it can close it automatically.
[23:18] context: it seems kind of scary that you dont know what your app is doing
[23:18] uberbrady: context: well, it's a module - so potentially infinite.
[23:18] uberbrady: context: anyone can use it as an npm doodad, then I got no clue what crazy things they have open/closed/whatever.
[23:18] josephmoniz: don't sockets emit "done" when they're done?
[23:18] uberbrady: they emit end()
[23:18] josephmoniz: close enough
[23:18] uberbrady: but that's only if closed.
[23:18] context: uberbrady: you should have some sort of 'closeSockets()' method for the USER of your library to call
[23:19] context: uberbrady: let the USER control what your library does.
[23:19] uberbrady: context: that's what I'm going with for now.
[23:19] sdwrage has joined the channel
[23:19] context: uberbrady: stop trying to be magical so users can be lazy or something
[23:19] context: there is no reason for it
[23:19] erichynds has joined the channel
[23:20] context: uberbrady: in fact i would NOT use, or fork/modify a library doing something like that, hiding things from me.. for ... is there a reason?
[23:20] crescendo has joined the channel
[23:21] uberbrady: context: testing
[23:21] mjijackson: context: that's not true, you use node.
[23:21] context: mjijackson: and node does what i tell it to
[23:21] uberbrady: context: always safely cleaning things when things are exiting, etc.
[23:21] context: i set a callback for an hour from now.... node calls it.
[23:21] mjijackson: context: node abstracts away the event loop for you.
[23:21] sotosof has left the channel
[23:21] mjijackson: you don't manually set that up.
[23:22] context: sure i do... i say setCallback()
[23:22] mjijackson: you don't tell node when to exit, most of the time.
[23:22] mjijackson: it simply exits when your program is done running.
[23:22] context: node just takes care of the mundain select/poll/epoll/kqueue loop for me. its part of the architecture, i bought into it.
[23:22] mjijackson: you don't have a process.exit() call at the end of all of your scripts.
[23:23] context: i could
[23:23] uberbrady: Best example - vows testing.
[23:23] mjijackson: context: you're misunderstanding uberbrady's problem
[23:23] mjijackson: he's not trying to be magical or take control away from the user
[23:24] mjijackson: he's just trying to figure out when he can safely call db.close()
[23:24] Vertice has joined the channel
[23:24] mjijackson: just like node figures out when to exit automatically, without you telling it to
[23:24] uberbrady: without horrible performance implications (I can keep closing the connections when the query queue is dry, but that would be awful)
[23:25] cjroebuck has joined the channel
[23:25] josephmoniz: uberbrady: can't you have a new connection on standby
[23:25] josephmoniz: and when the query queue is dry just swap it out?
[23:25] uberbrady: josephmoniz: but then a connection is open - and still, node won't exit :(
[23:26] amasad has joined the channel
[23:26] iaincarsberg has joined the channel
[23:26] context: mjijackson: and this is a library. he should close it when the user asks. its not his libraries responsibility to be 'safe' is it?
[23:27] ap3mantus has joined the channel
[23:27] context: if i tell your lib to close and try using it later his lib should tell me to go to hell
[23:27] garann has joined the channel
[23:27] mjijackson: uberbrady: are you working on a npm package?
[23:27] BillyBreen has joined the channel
[23:27] context: its not the bus drivers responsibility to make sure i get to my destination, if i fall asleep on there its my own damn faul
[23:27] context: t
[23:28] uberbrady: mjijackson: yes.
[23:28] context: uberbrady: what is this lib
[23:28] uberbrady: context: mysql pooling/queing driver.
[23:28] mjijackson: ah, yes. then i agree with context. just let the user tell you when to close your connection.
[23:28] context: uberbrady: so you have some sort of status/queueSize methods right ?
[23:28] uberbrady: context: yup
[23:28] context: uberbrady: id make soft and hard close options
[23:28] mjijackson: that's the user's problem, not yours.
[23:28] CrabDude has joined the channel
[23:29] context: soft close being 'finish up the queue and then close all connections'
[23:29] mjijackson: unfortunately, this problem still exists for user-land code...
[23:29] uberbrady: mjijackson: well, I'm doing that for now. But it screws with things like vows tests - 
[23:29] context: uberbrady: then after the queue is empty, you close! no waiting for crap
[23:29] uberbrady: which run in parallel - I can set a timeout to eventually close the database.
[23:29] context: uberbrady: cant you tell your vows to connect once for all tests?
[23:30] uberbrady: context: the queue is expected to run dry during normal execution sometimes - wouldn't want to mess with performance. But, yes, that would do it too.
[23:30] mjijackson: uberbrady: does vows have a "finished" callback?
[23:30] context: you dont need to disco as soon as the queue is empty
[23:30] tim_smart: isaacs: Hey. Does nopt support something like: program -pnfilename.txt (Where -p is a boolean options and -n is a string)
[23:30] mjijackson: something like vows.on("finished", …)
[23:30] RexM has joined the channel
[23:30] CrabDude: soo… I'm curious, does anyone know of a better way to (have any experience with) serialize streams (note, not "Streams") - https://gist.github.com/1629758
[23:30] context: i wouldn't use a library thats opening/closing db connections every few seconds either
[23:30] uberbrady: context: yes, I can, and I can set a timeout to call db.end() at the end of it all - and if my tests finish in that time, then it ought tob e fine.
[23:31] nym has joined the channel
[23:31] Raynos has joined the channel
[23:31] boltR has joined the channel
[23:31] context: what
[23:31] justicefries has joined the channel
[23:31] cmwelsh has joined the channel
[23:32] megalomix has joined the channel
[23:32] megalomix: hello
[23:32] megalomix: i need to parse a XML results with node
[23:32] megalomix: is there a module to do that?
[23:32] jamescarr has joined the channel
[23:33] isaacs: tim_smart: you need a space there
[23:33] tim_smart: isaacs: Aww ;)
[23:33] isaacs: tim_smart: between n and filename
[23:33] isaacs: yeah, it's not full-on gnu-style
[23:33] isaacs: since that has some edge cases and exposes a lot of manual work to the user, which i didn't want to do.
[23:34] isaacs: megalomix: try sax
[23:34] socketio\test\04 has joined the channel
[23:34] isaacs: megalomix: `npm docs sax`
[23:34] socketio\test\51 has joined the channel
[23:34] Gekz has joined the channel
[23:34] Gekz has joined the channel
[23:34] tim_smart: isaacs: Alrighty. Works well otherwise, been using it for a while.
[23:34] Kunda has left the channel
[23:35] uberbrady: context: my call to db.end() would have to happen after all of the tests will have at least *queued* their db queries. I could also permit new queries to show up on a 'doomed' connection, and execute them too. I have plenty of workarounds for now, just wondered if there was a more elegant way to do it.
[23:35] thax_ has joined the channel
[23:35] nvoyager has joined the channel
[23:35] megalomix: isaacs, thank you
[23:35] jhbot: 'Run Node.js on Linode subdomain' by Archio http://stackoverflow.com/q/8903209 (tags: server, nginx, linode)
[23:35] rtgibbons has joined the channel
[23:36] mjijackson: uberbrady: looking through the vows source, it looks like test suites emit an "end" event
[23:37] tim_smart: isaacs: Planning a mind reading option soon? Would be cool if nopt could read my mind hah
[23:37] christkv has joined the channel
[23:37] isaacs: tim_smart: it tries!
[23:37] mjijackson: uberbrady: see https://github.com/cloudhead/vows/blob/master/lib/vows/suite.js#L377
[23:37] tim_smart: Well at least that counts for something...
[23:37] isaacs: tim_smart: the issue is that i've alwasy been annoyed with options like -foo being ambiguously either -f oo or --foo
[23:38] mjijackson: maybe you could hook into that event and do your cleanup there
[23:38] ralph has joined the channel
[23:38] uberbrady: mjijackson: I'll try that.
[23:38] tomh has joined the channel
[23:38] ryanseddon has joined the channel
[23:39] dnyy has joined the channel
[23:39] MrTopf has joined the channel
[23:39] tim_smart: isaacs: I see. Anyway, I'm not going to die or anything, so life goes on.
[23:39] cognominal___ has joined the channel
[23:40] cody__ has joined the channel
[23:41] nathanpalmer has joined the channel
[23:43] uberbrady: There are probably other use-cases for the 'autoclose' idea though - if there were a way to implement that without being horrible, it might be useful.
[23:43] average_drifter has joined the channel
[23:44] megalomix: isaacs, https://github.com/isaacs/sax-js right?
[23:44] tjholowaychuk: uberbrady mocha does that
[23:44] tjholowaychuk: it gets really annoying
[23:44] wedtm has joined the channel
[23:44] isaacs: megalomix: yeah
[23:45] mateodelnorte has joined the channel
[23:45] jacobolus has joined the channel
[23:46] Wizek has joined the channel
[23:46] CIA-101: node: 03Ben Noordhuis 07v0.6 * rd44ce97 10/ (2 files in 2 dirs): 
[23:46] CIA-101: node: cluster: don't always kill the master on uncaughtException
[23:46] CIA-101: node: uncaughtException handlers installed by the user override the default one that
[23:46] CIA-101: node: the cluster module installs, the one that kills off the master process.
[23:46] CIA-101: node: Fixes #2556. - http://git.io/VRYfsQ
[23:47] uberbrady: tjholowaychuk: it automatically closes stuff for you? I guess to handle the 'dangling open database connection' problem?
[23:47] tjholowaychuk: well you jsut dont need to close things because it knows when to exit
[23:47] tjholowaychuk: it's nearly impossible to close off everything you're using
[23:47] tjholowaychuk: in some cases, really depends what
[23:47] Druide_ has joined the channel
[23:47] tjholowaychuk: but either way it's a pointless thing to fight
[23:48] uberbrady: oh well.
[23:49] sdebaun_idle has joined the channel
[23:49] sdebaun_idle: hello, node newbie, having a prob with mongoose, but i suspect the prob may be simply in how im using node's require()
[23:49] sdebaun_idle: i made a gist
[23:49] sdebaun_idle: https://gist.github.com/1629776
[23:50] sdebaun: can anyone help a noob?
[23:50] vnguyen has joined the channel
[23:51] vnguyen has left the channel
[23:53] sx2020 has joined the channel
[23:54] EhevuTov has joined the channel
[23:54] uberbrady: sdebaun: if instead of stomping all over the exports object, you just set sometihing in it, does it work better?
[23:54] uberbrady: e.g. - exports.Widget=mongoose.model...
[23:55] uberbrady: and then Wdiget=require(…job…).Wdiget
[23:55] Fabryz has joined the channel
[23:55] HardBit has joined the channel
[23:55] etgregor has joined the channel
[23:55] daleharvey has joined the channel
[23:55] tbranyen: YEEE HAW
[23:56] tjfontaine: man they are just doing Erlang all kinds of wrong
[23:56] Lingerance has joined the channel
[23:56] tbranyen: tjfontaine: only a matter of time till freenode just bans
[23:56] tjfontaine: tbranyen: indeed
[23:57] JKarsrud has joined the channel
[23:58] iaincarsberg has joined the channel
[23:58] apwalk has joined the channel
[23:58] chunhao_ has joined the channel
[23:58] tilgovi has joined the channel
[23:58] cmwelsh has joined the channel
[23:59] garann has joined the channel
[23:59] vicapow has joined the channel
[23:59] HardBit_ has joined the channel
[23:59] sx2020 has joined the channel
