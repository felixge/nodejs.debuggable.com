[00:00] NuckingFuts: Oh fuck
[00:00] NuckingFuts: Netsplit?
[00:00] NuckingFuts: yup netsplit
[00:00] AvianFlu: ParadoxQuine: maybe redis?
[00:01] NuckingFuts: But yeah, salts.  How do?
[00:01] NuckingFuts: I mean, I understand the concept, a random value which randomizes the hashes.
[00:02] jmoyers: yes
[00:02] jmoyers: so rainbow tables yes
[00:02] jmoyers: you know that concept?
[00:02] NuckingFuts: But there's still the question of checking against the hash
[00:02] NuckingFuts: jmoyers: Very yes
[00:02] NuckingFuts: My current setup concatenates the username.toLowerCase() with their password, and does SHA-256 on that
[00:02] jmoyers: so a static salt is one that is simply applied to the password prior to hashing to invalidate most dictionary rainbow tables
[00:02] cafesofie_ has joined the channel
[00:03] jmoyers: sha1( password + salt );
[00:03] jmoyers: yes, thats even better
[00:03] NuckingFuts: So my setup is better than a static salt?
[00:03] NuckingFuts: 8D
[00:03] whoops__ has joined the channel
[00:03] MooGoo: you put it in a shaker and sprinkle it on your food
[00:03] MooGoo: not too much
[00:03] whoops has joined the channel
[00:03] whoops has joined the channel
[00:03] jmoyers: yes
[00:03] MooGoo: omfg
[00:03] MooGoo: glad I have join/parts turned off
[00:03] jmoyers: though i've heard many folks poo poo sha + salt these days in favor of bcrypt plus a slow hash
[00:04] xerox has joined the channel
[00:04] mscdex: NuckingFuts: http://en.wikipedia.org/wiki/Salt_(cryptography)
[00:04] tonymilne has joined the channel
[00:04] mscdex: whoa, didn't scroll down
[00:04] mscdex: :-D
[00:04] NuckingFuts: mscdex: I've read that so many times XD
[00:04] Determinist: O.o
[00:04] Determinist: somebody's having fun
[00:04] mikey_p has joined the channel
[00:04] xerox: http://en.wikipedia.org/wiki/Pepper_(cryptography)
[00:04] mscdex: NuckingFuts: ok, well it tells you in there
[00:04] NuckingFuts: jmoyers: SHA-256 is still secure, AFAIK
[00:04] jmoyers: that doesn't mean much
[00:04] hoodow has joined the channel
[00:04] hoodow has joined the channel
[00:04] Astro has joined the channel
[00:05] meso has joined the channel
[00:05] NuckingFuts: jmoyers: yeah, it's still susceptible to rainbow tables
[00:05] cafesofie has joined the channel
[00:05] jmoyers: sha256 is fine, but the problem with a non-work intensive hash is that you can still bust it with brute force
[00:05] NuckingFuts: But I'm wondering if I still ought to add a random salt to my shit :/
[00:05] hdon- has joined the channel
[00:05] ParadoxQuine: mscdex: yea i guess i should just go with the simplest solution
[00:05] jmoyers: so you pick an INTENTIONALLY slow hashing algo
[00:05] jmoyers: and make the brute force lots harder to do
[00:05] igl1 has joined the channel
[00:06] mscdex: NuckingFuts: i'd use a random salt and hash your passwords
[00:06] jmoyers: http://codahale.com/how-to-safely-store-a-password/
[00:06] NuckingFuts: mscdex: I said that I concatenate the username.toLowerCase() with the password, and SHA-256 that
[00:06] mscdex: NuckingFuts: at the very least
[00:06] jmoyers: this is a somewhat outspoken article -- i think it got rewritten a few times
[00:06] NuckingFuts: And I'm wondering if it's adequate.
[00:06] mscdex: NuckingFuts: that's not very safe imho
[00:07] NuckingFuts: And by adequate, I mean "as good as would be feasible"
[00:07] dguttman_ has joined the channel
[00:07] jmoyers: "It's important to note that salts are useless for preventing dictionary attacks or brute force attacks."
[00:07] jmoyers: its rainbow table only
[00:07] jmoyers: use a slow hashing algo for brute force
[00:07] carpeliam has joined the channel
[00:08] halfhalo has joined the channel
[00:08] jmoyers: otherwise, someone dumps your user table and craps on you with a few graphics cards linked together, CUDA style
[00:08] mscdex: i think that's a little silly to say
[00:08] mscdex: "useless"
[00:08] robotblake has joined the channel
[00:08] jmoyers: i agree, its inflammatory
[00:08] jmoyers: but the point stands
[00:09] mscdex: i mean, if you have the resources and the time, you could probably crack anything
[00:09] ap3mantus has joined the channel
[00:09] confoocious has joined the channel
[00:09] NuckingFuts: jmoyers: Hmmmm... You've got a valid point... How slow is bcrypt?  I'm want to be able to take a heavy load without my servers crapping out :/
[00:09] mscdex: it's more about making it take longer for someone to want to crack them
[00:09] jmoyers: mscdex all im saying is that it doesn't hurt anything to use the bcrypt module
[00:09] confoocious has joined the channel
[00:09] Sorella has joined the channel
[00:10] jmoyers: you can give it a work factor, i believe
[00:10] jmoyers: im not entirely sure just how slow ;-P
[00:10] philtor has joined the channel
[00:10] NuckingFuts: I just don't want something that's TOO slow :/
[00:10] mscdex: well, there is a bcrypt binding if you really want to go that route
[00:10] jmoyers: "Blowfish encryption algorithm's keying schedule, and introduces a work factor, which allows you to determine how expensive the hash function will be"
[00:10] NuckingFuts: Yeah
[00:11] halfhalo has joined the channel
[00:11] jmoyers: but anyway, yes i agree, you can go fucking completely overboard with this shit
[00:11] jmoyers: get out my tin foil hat
[00:11] zivester has joined the channel
[00:11] ckknight has joined the channel
[00:11] mscdex: lol "It's important to note that salts are useless for preventing dictionary attacks or brute force attacks." then later: "So I'm not saying salts are without purpose [...]"
[00:11] jmoyers: mscdex its coda hale a la the metrics jvm package
[00:12] jmoyers: he's not a dummy
[00:12] jmoyers: he's just trying to be inflammatory
[00:12] dgathright has joined the channel
[00:14] NuckingFuts: How about I ask it this way: "What algorithm/method would be best for a site with lots of users, built on NodeJS?"
[00:14] coreb: bcrypt can be scaled, and typically is very slow
[00:14] coreb: I wouldn't use it unless feeling very paranoid
[00:14] Emmanuel__ has joined the channel
[00:14] NuckingFuts: coreb: That's what I'm figuring.
[00:15] jmoyers: you think your login will be your bottleneck O.o?
[00:15] NuckingFuts: This is an art site, not a site for Area 51.
[00:15] jmoyers: i dont know man
[00:15] coreb: jmoyers: no
[00:15] NuckingFuts: jmoyers: No, but I'd rather keep things efficient and smooth.
[00:15] jmoyers: you know how many people use the passwords for more than one site
[00:15] Melkor__: Area 51 needs art too
[00:16] jmoyers: efficient and smooth...
[00:16] jmoyers: anyway no big
[00:16] jmoyers: just throwing it out there
[00:16] jmoyers: best practices shift over time
[00:16] jmoyers: due to moore's law and such ;-)
[00:16] NuckingFuts: jmoyers: I'm gonna use the howsecureismypassword code to give people a number representing how shitty their password is :P
[00:16] NuckingFuts: jmoyers: And as things get insecure, I'll replace my hashing :D
[00:16] jmoyers: hey
[00:16] jmoyers: at least you aren't sony
[00:17] NuckingFuts: Just like every site out there :P
[00:17] jmoyers: ZING
[00:17] dayvan has joined the channel
[00:17] jmoyers: cleartext passwords for the win
[00:17] tonymilne: Marak around?
[00:17] Melkor__: hash the username with one method and the password with another... and then transfer everything in clear text
[00:18] NuckingFuts: jmoyers: I'll probably move to bcrypt if we grow.  I just want something that's effective enough to stop most attacks.  I've got a damn good server administrator who has offered to provide us hosting (at least at first), and he knows how to secure a server well.
[00:18] NuckingFuts: So I'm not worried about holes in the OS
[00:18] NuckingFuts: Biggest problem is gonna be my code
[00:18] jmoyers: well yeah
[00:18] jmoyers: securing a server is fine
[00:18] jmoyers: but sql injection dumping the shit out of your user table, or some unforseen cascade of bugs that exposes your source
[00:19] NuckingFuts: jmoyers: lol I'm not using SQL
[00:19] jmoyers: that has nothing to do with a hardened server
[00:19] NuckingFuts: I'm building it on MongoDB
[00:19] jmoyers: well, you are communicating with your database :P
[00:19] NuckingFuts: Yeah
[00:19] jmoyers: not that hardened servers are bad
[00:19] jmoyers: :-)
[00:19] NuckingFuts: I'm good enough at JS to know the usual security holes
[00:20] NuckingFuts: Like eval()
[00:20] fizx has joined the channel
[00:20] pengwynn has joined the channel
[00:20] NuckingFuts: I'm gonna need to clean our API's arguments, of course
[00:20] jmoyers: its all good
[00:20] NuckingFuts: To prevent people from passing a JS function to be run on the DB
[00:20] jmoyers: executing on your app
[00:21] jmoyers: is more imporant than all this
[00:21] jmoyers: execution > all
[00:21] NuckingFuts: lol true
[00:21] cjm has joined the channel
[00:21] vulgrin has joined the channel
[00:23] dayvan has left the channel
[00:23] NuckingFuts: I'm building on RESTify for the backend and ExpressJS for the frontend
[00:23] dayvan has joined the channel
[00:23] dayvan has left the channel
[00:24] srid has joined the channel
[00:24] dayvan has joined the channel
[00:24] dayvan has left the channel
[00:24] NuckingFuts: So RESTify handles the Model, jQuery does Controller, and ExpressJS does my View
[00:25] tjholowaychuk: lol
[00:25] dayvan has joined the channel
[00:25] Kami_ has joined the channel
[00:26] NuckingFuts: There's one problem, though.
[00:26] ianward has joined the channel
[00:26] NuckingFuts: I need to hook authentication between view and model
[00:26] coreb: use bcrypt, and even the simplest attack will spike your cpu
[00:26] frewsxcv: so with node.js, is there a guarantee the script will execute from top to bottom?
[00:26] jmoyers: thats.. a really weird setup
[00:26] tjholowaychuk: NuckingFuts that's what happens when you split your frameworks
[00:26] tjholowaychuk: for no reason
[00:26] NuckingFuts: coreb: That's what I was thinking.  That's a great way to crash the server :P
[00:27] kmiyashiro has joined the channel
[00:27] NuckingFuts: tjholowaychuk: I need to keep my API server separate from my site's server
[00:27] jmoyers: oh boy
[00:27] NuckingFuts: Because the site is gonna have fewer instances in the long run
[00:27] NuckingFuts: The API will take the majority of the load
[00:28] NuckingFuts: how could I pass auth between two independent servers?  If I use ExpressJS for both, even?
[00:28] igl has joined the channel
[00:29] tjholowaychuk: easy if you have a cluster of express apps
[00:29] tjholowaychuk: we do it all the time
[00:29] NuckingFuts: tjholowaychuk: But they're not the same app
[00:29] NuckingFuts: It's two separate apps, part of the same system
[00:29] tjholowaychuk: you're not gaining much by separating them
[00:29] tjholowaychuk: IMO
[00:29] NuckingFuts: Oh you have no idea how much I'm gaining
[00:29] tjholowaychuk: so what if the web app part is used less
[00:29] tjholowaychuk: it just wont get requests
[00:30] jmoyers: auth
[00:31] NuckingFuts: I'm keeping the separation, that's one of the very few things I'm SURE on.
[00:31] jmoyers: is a single table somewhere?
[00:31] jmoyers: or are you using in memory sessions?
[00:31] jmoyers: i'd write the session out to a table
[00:31] jmoyers: identify requests via cookie
[00:31] CodyGray has joined the channel
[00:31] jmoyers: cookie maps to session
[00:31] jmoyers: cross server, just fine
[00:31] jmoyers: presume same domain
[00:31] tjholowaychuk: NuckingFuts mmk
[00:31] NuckingFuts: I just want to be able to have the user login on the ExpressJS site, then have that logged-in stuff also work with my API
[00:32] jmoyers: ACTION points back to my answer
[00:32] tjholowaychuk: lol
[00:32] NuckingFuts: jmoyers: Yeah, I think that's the best solution
[00:32] AvianFlu has joined the channel
[00:32] NuckingFuts: I'm just not sure if Express has some already-built stuff for that?
[00:32] kriszyp has joined the channel
[00:32] CodyGray has left the channel
[00:33] highermath_away has joined the channel
[00:33] highermath_away has joined the channel
[00:33] coreb: NuckingFuts: what is it that you're gaining with your 3 way framework split?
[00:34] tjholowaychuk: complexity
[00:34] tjholowaychuk: yayyy
[00:34] Determinist has joined the channel
[00:34] coreb: someone is hurt express isn't enough? ;)
[00:34] NuckingFuts: coreb: Well, I *can* use Express for my API too, but no matter the framework for that, I'm gonna want my MVC in three pieces.
[00:34] hij1nx has joined the channel
[00:34] tjholowaychuk: look at that thing yourself it's a clone of express
[00:35] NuckingFuts: coreb: Oh you should've seen him when RESTify was suggested to me... Wasn't it by isaacs?
[00:35] NuckingFuts: ACTION shrugs
[00:35] tjholowaychuk: ACTION also uses 3 identical frameworks
[00:35] tjholowaychuk: for no reason
[00:35] isaacs: we doing this again?
[00:35] jmoyers: no
[00:35] Determinist has joined the channel
[00:35] jmoyers: i answered the question
[00:35] coreb: I took a brief look at restify - didn't really see the need for it
[00:36] isaacs: k, good.
[00:36] jmoyers: move along here
[00:36] isaacs: :)
[00:36] Determinist: freenode is acting up today, it seems
[00:36] NuckingFuts: isaacs: Does it have some nice place I can lodge authentication, or do I hafta handle that manually?
[00:37] [[zz]] has joined the channel
[00:37] gtramont1na has joined the channel
[00:37] isaacs: NuckingFuts: you should probably use express.  i think that's what i was trying to tell you last time.
[00:37] isaacs: NuckingFuts: since you also have to serve web pages with this thing.
[00:37] NuckingFuts: isaacs: It's two separate pieces
[00:37] jmoyers: handling authentication is trivial with a cookie, like i mentioned
[00:37] jmoyers: parse the cookie, grab the id
[00:37] coreb: don't separate, merge
[00:37] jmoyers: look the session up in the database
[00:37] jmoyers: all done
[00:38] NuckingFuts: I'm expressly designing it to separate my API and web servers
[00:38] NuckingFuts: So I can fire up pieces of my site separately
[00:38] isaacs: here's the thing, restify, especially with the restify client, is basically the idea of dnode (remote procedure calling) in such a way that it actually goes over http, and supports all the caching and load-balancing goodness that those things can do.
[00:38] NuckingFuts: And have them all independent
[00:38] isaacs: if you don't have a significant investment in http, why use it?
[00:38] isaacs: if you're going to also have to build a web site, why not just have two express sites?
[00:39] jmoyers: ^this
[00:39] isaacs: last time this came up, iirc, i was trying to convince you to use express as well, when you described your use-case.
[00:39] NuckingFuts: isaacs: I'm debating still.  Restify looks like it'd be easier to maintain when the codebase grows :/
[00:39] jmoyers: dude
[00:39] jmoyers: fragmentation
[00:39] jmoyers: is already getting to you
[00:39] isaacs: hahah
[00:39] isaacs: a
[00:39] jmoyers: how do i share sessions?
[00:39] jmoyers: well with the same middleware of course
[00:39] tjholowaychuk: NuckingFuts I dont know about that, one is extensible, one is not
[00:39] jmoyers: BUILT IN EXPRESS :-)
[00:40] NuckingFuts: jmoyers: lol I'm debating about that XD
[00:40] isaacs: yeah, restify isn't extensible, because it's only for one kind of thing, and a client for talking to that kind of thing.
[00:40] isaacs: it's a library for building very strict RESTful servers and clients.
[00:40] tjholowaychuk: yeah, hacking the cookie stuff he's talking about into that
[00:40] jmoyers: nothing wrong with that, probably not worth using BOTH though
[00:40] tjholowaychuk: might be weird
[00:40] tjholowaychuk: awkward
[00:40] JoshC1 has joined the channel
[00:40] NuckingFuts: Yeah, that's what I'm looking at as a problem.
[00:41] NuckingFuts: tjholowaychuk: now, is there some way I can not bother with stringification of JSON objects in returning them?
[00:41] kmiyashiro has joined the channel
[00:41] isaacs: ACTION considering adding templating to restify, just to make this conversation even more interesting.
[00:41] tjholowaychuk: NuckingFuts what do you mean
[00:41] jmoyers: im not sure how setting a session id in a cookie is hacky
[00:41] jmoyers: thats how everything handles it
[00:41] NuckingFuts: And I'm gonna assume that Express supports all the HTTP verbs?
[00:41] jmoyers: thats how express handles it, even
[00:41] NuckingFuts: jmoyers: Yeah, that's how I'm gonna do it XD
[00:42] tjholowaychuk: jmoyers no i mean extending restify
[00:42] coreb: templating in restify would be something
[00:42] NuckingFuts: But I'm just trying to figure out how to lodge everything together lel
[00:42] jmoyers: ah
[00:42] jmoyers: gotcha
[00:42] tjholowaychuk: NuckingFuts yes
[00:42] tjholowaychuk: res.send(obj)
[00:42] Calvin has joined the channel
[00:42] NuckingFuts: tjholowaychuk: And it has all the verbs?
[00:42] NuckingFuts: Like PUT and DEL
[00:42] tjholowaychuk: yes
[00:42] tjholowaychuk: always has
[00:43] isaacs: the routing api is almost exactly the same between restify and express.
[00:43] coreb: NuckingFuts: how far are you into your development?
[00:43] NuckingFuts: tjholowaychuk: and will it automatically shove my paramaters into one object, from all the different scattered places?
[00:43] NuckingFuts: coreb: Mostly starting out
[00:43] coreb: NuckingFuts: what's your timeline?
[00:43] tjholowaychuk: NuckingFuts: that question makes no sense to me :s
[00:43] tjholowaychuk: shove my params, from different places?
[00:44] neoesque has joined the channel
[00:44] tjholowaychuk: NuckingFuts: req.params, if that's what you mean
[00:45] NuckingFuts: coreb: Ideally, I want to launch in August, but I can't see that happening, unless we (myself and two others) get a streamlined assemly-line setup
[00:45] AAA_awright_ has joined the channel
[00:45] tjholowaychuk: NuckingFuts: req.params == route params, req.query == query string, req.body == ...body
[00:45] tjholowaychuk: req.param(name)
[00:45] NuckingFuts: tjholowaychuk: I want body data from POST, query strings, :arg things, etc., all to be lobbed into one object
[00:45] tjholowaychuk: checks all of them
[00:45] tjholowaychuk: it's bad practice to do that
[00:45] tjholowaychuk: generally
[00:45] NuckingFuts: so req.param handles all that?
[00:45] kawaz_h has joined the channel
[00:45] tjholowaychuk: but if you really want that
[00:45] tjholowaychuk: you can have a  3 line helper
[00:45] tjholowaychuk: no problem
[00:46] perezd: Seeing a TLS-esque bug with SocketIO + SSL (node 0.4.8/socketio 0.6.18): https://gist.github.com/09fee167c61428b53ab1
[00:46] tjholowaychuk: but express doesn't make assumptions, so it would be up to you to decide precedence
[00:46] DoNaLd` has joined the channel
[00:46] tjholowaychuk: i still wouldn't merge them at all to be honest, but i guess it depends on your use-case
[00:46] tjholowaychuk: either way that is no more than 4 or 5 lines
[00:46] NuckingFuts: tjholowaychuk: there would be basically no uri params, mostly just :-params
[00:46] NuckingFuts: Since I'm doing it REST-style
[00:46] tjholowaychuk: well then req.params
[00:46] tjholowaychuk: and check req.query as needed
[00:47] NuckingFuts: It's mostly that and POST.
[00:47] coreb: rest do uri params
[00:47] MooGoo has joined the channel
[00:47] coreb: whatever/user/1
[00:48] gtramont1na has joined the channel
[00:48] arkx has joined the channel
[00:48] jmoyers: not.. always
[00:48] fmeyer has joined the channel
[00:48] jmoyers: not if you're updating
[00:48] jmoyers: etc
[00:48] jmoyers: depends on the verb
[00:48] NuckingFuts: jmoyers: Huh?
[00:48] NuckingFuts: What verbs don't do that?
[00:48] Gather has joined the channel
[00:48] jmoyers: that was to coreb
[00:48] jmoyers: post
[00:48] NuckingFuts: ah right
[00:48] jmoyers: you send stuff in query string, or whatever format
[00:48] tjholowaychuk: NuckingFuts it really sounds like you dont even know express :s lol
[00:48] jmoyers: it ALSO includes uri based params
[00:48] tjholowaychuk: that probably would have been the first thing i would have looked into
[00:48] coreb: no, updating would be put to whatever/user/1
[00:49] fmeyer has joined the channel
[00:49] NuckingFuts: tjholowaychuk: It's a big thing, I'm still learning it XD
[00:49] jmoyers: PUT is often not allowed across enterprise http proxies and such
[00:49] jmoyers: so post is often substituted
[00:49] tjholowaychuk: NuckingFuts it's very small
[00:49] coreb: jmoyers: true
[00:49] NuckingFuts: jmoyers: How can I POST a file? :O
[00:49] kruckenb has joined the channel
[00:49] jmoyers: ... multipart
[00:49] jmoyers: attachments
[00:49] NuckingFuts: tjholowaychuk: It's a pretty big beast, IMO.
[00:49] jmoyers: ACTION directs you to le stackoverflow
[00:49] tjholowaychuk: NuckingFuts no
[00:49] tjholowaychuk: you obviously didnt read the code
[00:49] coreb: my point was rest does use uri params as well as query string params
[00:50] tjholowaychuk: it's tiny
[00:50] tjholowaychuk: NuckingFuts it's very similar to restify in size
[00:50] tjholowaychuk: if not smaller
[00:50] tjholowaychuk: with the exception of connect's middleware which are all lazy-loaded
[00:50] NuckingFuts: tjholowaychuk: I don't read the code, I will build upon it and pay no attention to the man behind the curtain.
[00:50] coreb: hehe, what is this flame war
[00:50] NuckingFuts: :P
[00:50] tjholowaychuk: aahaha
[00:50] jmoyers: if you don't read the code
[00:50] tjholowaychuk: omg
[00:50] jmoyers: look at the API
[00:50] tjholowaychuk: you are
[00:50] NuckingFuts: I read teh docs
[00:50] jmoyers: its literally nearly identical
[00:50] NuckingFuts: And the API
[00:50] tjholowaychuk: interesting
[00:50] jmoyers: to restify
[00:51] jmoyers: with templating features, and extensibility
[00:51] jtsnow has joined the channel
[00:51] coreb: NuckingFuts: express is a nice piece of work
[00:51] jmoyers: restify is fit to purpose, of course
[00:51] jmoyers: nothing wrong with that
[00:51] avalanche123 has joined the channel
[00:51] NuckingFuts: coreb: That it is, I agree.
[00:51] jmoyers: using both is fragmented though, imo
[00:51] Guest18198: NuckingFuts: you should know that tj reads the code of EVERY lib he uses
[00:51] NuckingFuts: Guest18198: So I can see lol
[00:52] TooTallNate: it's not a bad idea, you know
[00:52] tonymilne: Guest18198: you should know that tj writes the code of EVERY lib he uses
[00:52] coreb: NuckingFuts: I guess your development should just get started
[00:52] NuckingFuts: tonymilne: lol so true XD
[00:52] boaz has joined the channel
[00:53] AvianFlu has joined the channel
[00:53] TooTallNate: tonymilne: almost :)
[00:53] NuckingFuts: So first things first, I'm gonna build the authentication system
[00:53] coreb: should be done in one night
[00:54] tonymilne: Check this website out: http://wheelsofsteel.net/?track1=sc-13399448
[00:54] NuckingFuts: Would my SHA-256 username.toLowerCase() + password suffice for somebody who is only paranoid to average levels?
[00:54] tonymilne: (loaded in Marak's nodejs rap for good times)
[00:55] dguttman has joined the channel
[00:55] luke` has joined the channel
[00:55] coreb: I would generate a random salt for every user
[00:55] jmoyers: dude imma kick your ass
[00:55] jmoyers: if you dont just go write it
[00:55] jmoyers: RIGHT NOW
[00:55] jmoyers: go!
[00:55] jmoyers: ACTION kicks you in the ass
[00:56] NuckingFuts: jmoyers: I'm gonna start coding as soon as I figure out if I'm gonna get my ass hacked lol
[00:56] coreb: NuckingFuts: you can refactor that stuff with ease later
[00:57] NuckingFuts: jmoyers: plus I've got that already coded
[00:57] NuckingFuts: And before I can get it put into Express, I need to know how I'd handle it as middleware?
[00:58] tjholowaychuk: not really, it doesn't have to be middleware
[00:58] tjholowaychuk: just use regular routes
[00:58] tjholowaychuk: middleware are more for people trying to abstract all that stuff
[00:58] NuckingFuts: tjholowaychuk: For authentication?
[00:58] tjholowaychuk: into some little package
[00:58] tjholowaychuk: yeah
[00:58] Sor3nsen has joined the channel
[00:58] NuckingFuts: I need my APIs to be able to access the database-authenticated stuff though :/
[00:59] tjholowaychuk: you do now yeah
[00:59] tjholowaychuk: :p
[00:59] jmoyers: haha
[00:59] jmoyers: you're still going to need to pull the cookie session id
[00:59] coreb: sounds like too many APIs
[00:59] NuckingFuts: tjholowaychuk: I'd like to shove it into a MiddleWare that'll check the authentication for me :/
[01:00] jmoyers: and map it onto an auth
[01:00] jmoyers: some package might do it for you
[01:00] jmoyers: but thats what you have to do
[01:00] Odd1Out has joined the channel
[01:00] tjholowaychuk: if that other thing doesn't support any kind of middleware
[01:00] tjholowaychuk: you'll have to duplicate it for express/that thing
[01:00] tjholowaychuk: and change it up
[01:00] NuckingFuts: tjholowaychuk: Well, I might as well switch to Express L.
[01:00] NuckingFuts: :/
[01:01] tjholowaychuk: but express handles pretty much all of that for you with cookieParser() / session()
[01:01] Odd1Out: hello ... two things: #1, just got node.js (in place of vanilla v8) -- it ROCKS!!! #2, any way i can stop node (interactively) from echoing things? e.g., if i do a fs.readFileSync(), it echos the whole Buffer....
[01:01] TooTallNate: the session middleware is nice NuckingFuts, you won't look back
[01:01] tjholowaychuk: NuckingFuts you should research things better before using them
[01:01] tjholowaychuk: that's all i've been meaning to say the whole time
[01:02] ryan0x2 has joined the channel
[01:02] NuckingFuts: tjholowaychuk: Maybe you should explain the features of Express better on the site for it :P
[01:02] dguttman_ has joined the channel
[01:02] tjholowaychuk: NuckingFuts or read them :p
[01:02] tjholowaychuk: or look at one of the many examples
[01:02] tjholowaychuk: or the code
[01:02] NuckingFuts: tjholowaychuk: I have quite a few times read through the entirety of the ExpressJS API page on the site.
[01:02] NuckingFuts: And it just glosses over so many features
[01:04] coreb: it does, but it's open source though
[01:04] mikeal has joined the channel
[01:04] jmoyers: uh
[01:04] jmoyers: its one of the better oss guides out there
[01:05] tjholowaychuk: the examples are usually better
[01:05] tjholowaychuk: tons of those
[01:05] NuckingFuts: jmoyers: The parts that it covers are absolutely WONDERFUL
[01:05] NuckingFuts: But the parts that aren't there are a bitch
[01:05] tjholowaychuk: NuckingFuts req.{params,query,body} etc are all there
[01:05] jmoyers: always look in examples/ and tests/
[01:05] tjholowaychuk: and you asked about those
[01:05] coreb: jmoyers: by that I meant that what the guide doesn't cover, the source is there to be read
[01:05] tjholowaychuk: NuckingFuts and a great feature of my code
[01:05] NuckingFuts: Plus, the sidebar is the wrong height
[01:05] tjholowaychuk: is you can read it
[01:05] tjholowaychuk: and it has comments
[01:05] tjholowaychuk: dont be afraid to look at code
[01:06] NuckingFuts: So I can't even get to the bottom item in the sidebar on the express site
[01:06] tjholowaychuk: you're the wrong height
[01:06] NuckingFuts: It's about 15 pixels too tall
[01:06] tjholowaychuk: you're 15 pixels too tall
[01:06] TooTallNate: TooTallNate 8)
[01:06] tjholowaychuk: too tall nate
[01:06] tjholowaychuk: haha
[01:06] Cleer has joined the channel
[01:07] NuckingFuts: tjholowaychuk: How is the static file server stuff on Express?
[01:07] tjholowaychuk: good
[01:07] NuckingFuts: Would I be better off using a dedicated fileserver for my static resources?
[01:07] NuckingFuts: I heard NodeJS isn't great with binaries
[01:07] tjholowaychuk: node wont beat nginx
[01:07] tjholowaychuk: if that's what you mean
[01:08] tjholowaychuk: but again it depends on how much complication you want
[01:08] tjholowaychuk: and if you really need that right now
[01:08] NuckingFuts: tjholowaychuk: IT's an art site, it's gonna have ASSTONS of files to host
[01:08] tjholowaychuk: though it's one line with express, so super easy to change if you want to remove it and add nginx later
[01:08] tjholowaychuk: or use nginx for production
[01:08] NuckingFuts: And they're not small files either
[01:08] TooTallNate: NuckingFuts: but unless you're serving videos at the rate of YouTube you'll be ok
[01:08] tjholowaychuk: profile etc first
[01:08] tjholowaychuk: dont assume
[01:08] NuckingFuts: True
[01:09] NuckingFuts: tjholowaychuk: Do you know if there's some middleware that'll help rate-limit requests to prevent spamming and shit?
[01:09] tjholowaychuk: yeah aaron (learnbooster) wrote one
[01:09] tjholowaychuk: not sure if it's OS
[01:10] NuckingFuts: That's my biggest fear with the site is abuse
[01:10] TooTallNate: i don't think it is...
[01:10] tjholowaychuk: but i mean it's super easy to write middleware
[01:11] NuckingFuts: I'm looking at connect-mongodb, and I'm wondering what's the difference between the SessionStorage and authentication?
[01:12] NuckingFuts: hmmm bbl dinner and LOST
[01:12] gcr has joined the channel
[01:13] quackquack: what is the recommended way to install mongodb on ubuntu?
[01:13] gcr: Hey guys! I have a nodejs app running behind Apache doing lots of long-polling connections. Now some resources on the home page aren't loading; the connection just hangs, but it's always on the same file. Is there a way to raise how many concurrent connections Apache will make?
[01:15] srid has joined the channel
[01:15] srid has joined the channel
[01:17] fizx has joined the channel
[01:19] sioked has joined the channel
[01:21] tonymilne: quackquack: This is loosely how we do it - http://www.pastie.org/2075289
[01:21] quackquack: ty, tonymilne
[01:21] samsonjs has joined the channel
[01:21] tonymilne: no worries. 
[01:22] Odd1Out: q: any way to get REPL to be less verbose when it echos the results of a function? e.g. not to dump the entire contents of Buffer when doing things like readFileSync() ?
[01:22] havenn has joined the channel
[01:23] tonymilne: quackquack: in terms of the config... we just set the dbpath, logpath and most importantly... "auth = true"
[01:23] BillyBreen has joined the channel
[01:23] quackquack: tonymilne: "auth = true", okay i should probably remember that =D... is there nothing like mysql's binding to localhost?
[01:23] tonymilne: (you could probs also use a ubuntu package manager...)
[01:24] TooTallNate: Odd1Out: try resetting Buffer.prototype.inspect
[01:24] quackquack: hmm, thats true. for dev i might just do the package manager
[01:24] TooTallNate: it's a function
[01:24] tonymilne: quackquack: not that i've come across. If your firewall open and the port unblocked, i think you're good to go. 
[01:24] Odd1Out: TooTallNate: thanks, will try that.
[01:24] quackquack: k, thanks
[01:25] TooTallNate: Odd1Out: that's only a temporary fix though and you'd have to do it every time you started the REPL...
[01:25] tonymilne: We also use some upstart scripts etc to keep it running on boot.
[01:25] lupomontero has joined the channel
[01:25] AvianFlu has joined the channel
[01:26] Odd1Out: TooTallNate: yeah, figures. the issue isn't really with Buffer per se, its mostly for anything, REPL spits out the result of the call, i imagine it might be deeper in REPL
[01:26] lupomontero has joined the channel
[01:26] TooTallNate: Odd1Out: I mean, it's never been a problem for me
[01:27] Odd1Out: TooTallNate: its not really a problem, just makes interactive debugging annoying when you read in a 2k file :)
[01:27] abraxas has joined the channel
[01:27] TooTallNate: readFileSync(), eh?
[01:28] TooTallNate: besides, when I select a Function reference in the REPL, it shows up like: [Function]
[01:28] sirkitree has joined the channel
[01:29] sourcode has joined the channel
[01:33] Aphelion has joined the channel
[01:33] boehm has joined the channel
[01:37] ezl- has joined the channel
[01:37] ryanmcgrath has joined the channel
[01:38] SubtleGradient has joined the channel
[01:39] piscisaureus has joined the channel
[01:39] stagas_ has joined the channel
[01:40] nightshift has joined the channel
[01:41] TooTallNate: Odd1Out: also, if you don't want the return value of a function being printed out on the REPL...
[01:41] TooTallNate: then assign to result to a var!
[01:42] Odd1Out: TooTallNate: doesn't work ... try this: fs = require('fs'); f = fs.readFileSync('/tmp/somefile');
[01:42] brianseeders has joined the channel
[01:42] jasong_at_apache has joined the channel
[01:42] TooTallNate: try "var f = ..."
[01:42] TooTallNate: Odd1Out: ^
[01:43] Odd1Out: TooTallNate: yessir, worked.
[01:43] TooTallNate: :)
[01:43] fr0stbyte has joined the channel
[01:44] thalll has joined the channel
[01:44] jasong_at_apache: dang this chan is huge
[01:45] TooTallNate: jasong_at_apache: indeed ;)
[01:45] jasong_at_apache: i mean it's a good 33% fatter than django lol
[01:46] S1kx has joined the channel
[01:46] andrewfff has joined the channel
[01:46] Odd1Out: TooTallNate: odd, i'd imagine they'd both default to global scope at that point ... 
[01:46] TooTallNate: they are
[01:47] TooTallNate: the difference is...
[01:47] TooTallNate: that f = 1, is also returning f
[01:47] Odd1Out: yeah, i just realized that after i wrote the above :)
[01:47] TooTallNate: var f = 1 simply declares it and stores a value
[01:48] Odd1Out: yeah, its an eval loop ...
[01:48] Odd1Out: ACTION is having cognitive skill issues due to experimental overload
[01:50] isaacs: Odd1Out: you can also do ;undefined at the end if your commands
[01:50] isaacs: i do that sometimes
[01:50] isaacs: or ;0 (shorter)
[01:50] TooTallNate: haha, nice one isaacs
[01:50] Odd1Out: isaacs: yeah, that works too :) -- second what TooTallNate says -- nice
[01:50] Odd1Out: except, now all i see is zeeeeeros
[01:51] Odd1Out: i'll var it out
[01:52] Emmanuel__ has joined the channel
[01:53] jasong_at_apache: any expressjs users in the house?
[01:55] c4milo1 has joined the channel
[01:56] c4milo1 has joined the channel
[01:56] gavin_huang has joined the channel
[01:58] davidbanham: jasong_at_apache: Plenty, and also the author of it unless he's had enough of IRC for the day. Got questions?
[01:58] kriszyp has joined the channel
[01:59] broofa has joined the channel
[02:00] jasong_at_apache: i'm thinking about touching some connect/express coming from a django/flask/rails background. wondering if anyone else has done this too with the same background as I
[02:00] jasong_at_apache: and how they feel about it
[02:00] ngs has joined the channel
[02:01] davidbanham: jasong_at_apache: I'm afraid I haven't got any background in django/flask/rails, but I can say positive things about Express in general.
[02:01] Gruni has joined the channel
[02:01] erictj has joined the channel
[02:02] tbranyen: i will probably never use django again
[02:02] davidbanham: My advice would be to check out the screencasts on the expressjs site. I normally loathe videos and go for the text documentation, but in this case the screencasts are very useful in fleshing out the docs, which can be a bit sparse.
[02:02] tbranyen: node does all i want and more
[02:02] avalanche123 has joined the channel
[02:04] zemanel has joined the channel
[02:04] Emmanuel_ has joined the channel
[02:04] pyrony has joined the channel
[02:05] jasong_at_apache: i have pretty much done a 'web' based project in many frameworks in a lot of languages save c++ and js. i still haven't found 'the one' that i really jive with. Wondering if i should pay more attn to node and it's web libs
[02:05] Mrfloyd has joined the channel
[02:05] piscisaureus has joined the channel
[02:06] jasong_at_apache: in terms of keypress typing, is it more or less laborious compared to say django (speaking of express, to those with knowledge) 
[02:07] jasong_at_apache: (or node in general i guess)
[02:08] mapleman has joined the channel
[02:09] zemanel has joined the channel
[02:10] nannto has joined the channel
[02:10] Sidnicious has joined the channel
[02:10] Sidnicious has joined the channel
[02:11] fakewaffle has joined the channel
[02:11] fakewaffle: good evening
[02:11] mapleman1 has joined the channel
[02:19] clifton has joined the channel
[02:21] CodyGray has joined the channel
[02:21] CodyGray has left the channel
[02:22] zeade has joined the channel
[02:26] astropirate has joined the channel
[02:27] KingJamool_ has joined the channel
[02:29] k1ttty has joined the channel
[02:31] seangaffney has joined the channel
[02:31] NuckingFuts|Away: Anyone know a good reference guide for dox?
[02:32] NuckingFuts: Is it basically just jsdoc with added markdown abiliities?
[02:36] AvianFlu has joined the channel
[02:38] abraham has joined the channel
[02:39] BillyBreen has joined the channel
[02:40] Aria has joined the channel
[02:44] tonymilne: Just wrote a new nodejs sort algorithm... Check it out: http://pastie.org/2075476
[02:44] foxkid has joined the channel
[02:44] NuckingFuts: tonymilne: I just .sort :V
[02:44] jasong_at_apache has left the channel
[02:44] tonymilne: (based on the fine work done by this OP: http://dis.4chan.org/read/prog/1295544154)
[02:45] tonymilne: NuckingFuts: did you read / run it? ;)
[02:45] tonymilne: read the code man... thought this was covered earlier!!!
[02:45] _jgr has joined the channel
[02:47] charlesyin has joined the channel
[02:49] rchavik has joined the channel
[02:49] rchavik has joined the channel
[02:50] NuckingFuts: tonymilne: Looks horribly inefficient to me :V quicksort looks a lot faster IMO and isn't dependent on the values for time
[02:51] tonymilne: HAHA! it's just for the lulz, not for realz!
[02:51] davidbanham: Whoosh.
[02:51] davidwalsh has joined the channel
[02:51] mscdex: i was going to say.... i don't think you are guaranteed order there..
[02:52] mscdex: heh
[02:52] tonymilne: mscdex: it works surprisingly well... ;)
[02:52] baoist has joined the channel
[02:52] tonymilne: might need an abs() function to handle negatives.
[02:52] tonymilne: not sure if decimals would break it. ;)
[02:52] context: are params in js passed by reference or value ?
[02:52] mscdex: get back to work!
[02:52] tonymilne: its lunch time here.
[02:52] mscdex: context: non-primitives are passed by value, otherwise by ref
[02:52] mscdex: er primitives are passed by value
[02:53] chilts: is the main reason for it so that node.js can service other events whilst you sort a rather large array?
[02:53] vipaca has joined the channel
[02:53] erictj: (non-primitives == Array || Object)
[02:53] context: mscdex: gotcha thought so
[02:53] NuckingFuts: chilts: might as well just shove the usual sorting algo in a thread then :/
[02:53] mscdex: and an array is an object :-D
[02:53] tbranyen: erictj: uh what
[02:53] Marak has joined the channel
[02:54] chilts: NuckingFuts: yeah, guess so
[02:54] context: isnt that just gonna stop the process as long as it would inline
[02:54] context: oh nm
[02:54] erictj: mscdex: fair 'nuff, haha
[02:54] tbranyen: erictj: i think you forgot function
[02:54] context: you are doing a stetimeout for each item
[02:54] erictj: pedants  ;)
[02:54] sirdancealot has joined the channel
[02:54] tbranyen: i would like a pendant
[02:54] mscdex: re: sorting, why don't you just take a regular algorithm and just use nextTick occasionally instead?
[02:55] Corren has joined the channel
[02:55] erictj: ACTION should've listed the primitives instead
[02:55] mscdex: every configurable number of comparisons
[02:55] mscdex: or something
[02:55] tbranyen: http://anordinarything.com/2009/12/increasing-javascript-array-sorting-performance/
[02:55] tbranyen: wonder if implementing a sorting algorithm like that in node would be of any use
[02:56] mscdex: only if you have a ridiculously huge array
[02:57] tbranyen: yeah which is rare enough
[02:57] mscdex: even then, if you keep the array sorted, then you can skip a lot of steps and just use a binary search to find the insertion point
[02:57] AvianFlu has joined the channel
[02:57] joshthecoder has joined the channel
[02:57] tonymilne: LOL, you could do a sleep based insertion too! :)
[02:58] mscdex: nein
[02:58] mscdex: !!
[02:58] fakewaffle: stupid question: two diff node apps dont share name spaces/globals right?
[02:59] tonymilne: nope.
[02:59] NuckingFuts: Anyways, can anybody tell me if dox is just jsdoc + markdown formatting?
[02:59] fakewaffle: ok thanks - thought not
[02:59] harth has joined the channel
[02:59] mscdex: fakewaffle: apps would be separate processes?
[02:59] tonymilne: you can sock between them.
[02:59] harth has left the channel
[02:59] fakewaffle: NuckingFuts: let me know what you find out - im looking for a JSDoc but dont like the formating of dox
[03:00] NuckingFuts: fakewaffle: Well, I'm prolly gonna use Dox
[03:00] NuckingFuts: I'm just asking how I use it lol
[03:00] fakewaffle: its so hard to read tho actual docs it produces lol
[03:00] fakewaffle: the*
[03:00] NuckingFuts: fakewaffle: meh, I disagree
[03:00] tbranyen: fakewaffle: i really like nodes documentation but i dunno how i'd actually render out something like that
[03:01] NuckingFuts: They're a bit odd at first, but the dual-column setup is kinda cool
[03:01] dipser has joined the channel
[03:01] fakewaffle: tbranyen: i love how node docs are done
[03:01] NuckingFuts: tbranyen: Damnit, if you can make me that, I will love you forever.
[03:01] fakewaffle: super simple
[03:01] _1marc has joined the channel
[03:01] tbranyen: NuckingFuts: Yeah i'm starting to want to generate something like that myself too
[03:01] fakewaffle: git init that shit
[03:01] fakewaffle: id help out  for sure
[03:01] tbranyen: NuckingFuts: I'll let you know if anything happens :D
[03:01] jakehow has joined the channel
[03:01] tbranyen: woot
[03:02] NuckingFuts: tbranyen: Node's docs + jsdoc-style inline docs, and we'd have a winner :D
[03:02] fakewaffle: i need one for my project
[03:02] NuckingFuts: Same here
[03:02] tbranyen: Yeah we were talking about it at work today as well
[03:02] NuckingFuts: And NodeJS has some seriously amazing docs.
[03:02] tbranyen: inline documentation is a bit of a bitch to get at
[03:03] tbranyen: but def more convenient
[03:03] NuckingFuts: tbranyen: I think if they didn't depend on the code it's near, it might be nice.
[03:03] chrisdickinson: tbranyen: i really love python-style docstrings
[03:03] NuckingFuts: Like have every bit of info explicity
[03:03] NuckingFuts: -y
[03:03] chrisdickinson: i wish there was a (non-hacky) way to add them to js.
[03:04] tbranyen: chrisdickinson: """?
[03:04] chrisdickinson: ACTION digs up an example...
[03:04] tbranyen: yeah i'd like to see it
[03:04] tbranyen: i did a bit of python so i might know what you're talking about once i see it
[03:05] NuckingFuts: NodeJS's docs are all in markdown format >_>
[03:05] tbranyen: NuckingFuts: you'd really need a js parser for it
[03:05] NuckingFuts: tbranyen: Meh, just build off of dox?
[03:05] NuckingFuts: Fork it and change it?
[03:05] JJMalina has joined the channel
[03:05] tbranyen: oh shit dox is tj
[03:06] chrisdickinson: tbranyen: https://gist.github.com/1028597
[03:06] chrisdickinson: it makes poking at libraries via a REPL a lot nicer.
[03:06] tbranyen: oh cool
[03:06] tbranyen: that would be totally doable but you wouldn't be able to just use an assigned string value
[03:07] chrisdickinson: https://github.com/chrisdickinson/platoon/blob/master/lib/platoon.js#L201
[03:07] tbranyen: some_function.__doc__ = "blah blah blah"
[03:07] chrisdickinson: (in reference to the "hacky" way to do it."
[03:07] chrisdickinson: *)
[03:07] tbranyen: ew
[03:07] NuckingFuts: I'm tempted not to use inline docs and just go with markdown files like node did
[03:07] tbranyen: that's not really reliable as many interpreters alter the source
[03:07] tbranyen: from toString() toSource()
[03:07] hij1nx has joined the channel
[03:07] tbranyen: i think even v8 does
[03:07] chrisdickinson: tbranyen: noted. actually, the only one that fails is firefox.
[03:08] tbranyen: oh really? that's the only one I noticed it in as well
[03:08] tbranyen: not so quick to say its the only one tho
[03:08] chrisdickinson: it works in IE6+ at least.
[03:08] NuckingFuts: ACTION gags at the Python-style syntax
[03:08] chrisdickinson: firefox eliminates noop statements from the function string.
[03:09] chrisdickinson: NuckingFuts: ?
[03:09] NuckingFuts: Time to learn Markdown! :D
[03:09] tbranyen: markdown owns
[03:09] srid_ has joined the channel
[03:09] srid_ has joined the channel
[03:09] tbranyen: i write all my documents in it now
[03:09] slpsys has joined the channel
[03:09] chrisdickinson: i like markdown better than ReST, myself.
[03:09] NuckingFuts: chrisdickinson: The Python-esque syntax of the docs is hideous.  Then again, I gag when I see Python.
[03:09] tbranyen: NuckingFuts: i contributed to robotskirt too, which is an async binding to githubs markdown engine
[03:10] tbranyen: so my bias is towards that, only because well.. its async and github uses it
[03:10] chrisdickinson: NuckingFuts: not a fan of the double underscores, then?
[03:10] NuckingFuts: I'm thinking I'll do inline docs w/ Dox for now, then once I'm basically done, I'll move over to a separate markdown system.
[03:11] NuckingFuts: chrisdickinson: No, just the syntax in general.  Mostly the : and lack of braces
[03:11] chrisdickinson: significant whitespace can be a bit of a big pill to swallow
[03:11] NuckingFuts: I generally depend on braces to tell me where I am in my code, in addition to my indentation
[03:12] NuckingFuts: Plus it provides me with visible gaps in the denser code, which I can use to judge at a glance when I've hit the end of a section
[03:12] chrisdickinson: ah, makes sense :) i live in a particularly python-saturated area, so it's always nice to get a different viewpoint on the language.
[03:13] chrisdickinson: weirdly enough, the significant whitespace in coffeescript kept me away from it until very recently.
[03:14] NuckingFuts: I have a grudge against CoffeeScript for giving NodeJS herpes.
[03:14] NuckingFuts: :P
[03:14] fakewaffle has joined the channel
[03:14] NuckingFuts: And by herpes, I mean it brought Ruby to us.  And I never was a fan of Ruby's syntax either
[03:14] chrisdickinson: haha
[03:14] fakewaffle: oh man, i didnt realize i disconnected. so did anyone create a jsdoc solution yet?
[03:15] NuckingFuts: fakewaffle: lolno
[03:15] NuckingFuts: I've just decided to use Dox for now
[03:15] NuckingFuts: Then I'll gather up my inline markdown and compile it when I'm done
[03:15] NuckingFuts: into a more NodeJS-style doc format
[03:15] chrisdickinson: NuckingFuts: it bears mentioning, though you probably would dislike it, readthedocs.org + sphinx is pretty cool.
[03:16] NuckingFuts: Hmmm
[03:16] chrisdickinson: again, very python-centered. but, has nice git hooks and lets you host a decent doc site without much thought.
[03:17] chrisdickinson: NuckingFuts: what'd be really cool is to implement something similar for Node, with an eye towards supporting plain markdown files as well as docco
[03:17] Determinist: ACTION yawns
[03:17] Determinist: documentation is boring
[03:17] Determinist: necessary, but boring
[03:17] chrisdickinson: ):
[03:17] Determinist: no, i know...
[03:18] NuckingFuts: Anyways, right now, I need a git repo for a closed-source project with multiple people working on it.  How hard is a git server to set up?
[03:18] Determinist: writing a doc engine like rdoc could be nice tho.
[03:18] skm has joined the channel
[03:18] chrisdickinson: NuckingFuts: not hard. http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way
[03:18] Determinist: NuckingFuts: you mean a bare repo with some ssh?
[03:18] chrisdickinson: gitolite is also an option, though i don't have much experience with that.
[03:19] AvianFlu has joined the channel
[03:19] arpegius has joined the channel
[03:20] Ed__ has joined the channel
[03:20] chrisdickinson: it all boils down to creating a user and adding autocommands to keys in ``.ssh/authorized_keys``
[03:20] context: gitosis is old and unmaintained
[03:21] context: use gitolite
[03:21] context: or stop reading 4 year old blog posts
[03:21] context: or use github
[03:22] chrisdickinson: context: haha. or my NIH version: https://github.com/chrisdickinson/nappingcat
[03:22] chrisdickinson: (which is really way too heavyhanded to actually recommend.)
[03:23] CodyGray has joined the channel
[03:24] CodyGray has left the channel
[03:24] jesusabdullah: Your MOM is old and unmaintained!
[03:24] Ed__: I'm new to command line... and having a tough time installing node on rackspace. I installed node and hellonode (https://github.com/Marak/hellonode/blob/master/server.js). When I enter "node server.js", the cursor moves to the next line and nothing ever happens. It's supposed to say "hello, i know nodejitsu.". Any idea what I'm doing wrong? 
[03:24] jesusabdullah: That said, gitolite works pretty well
[03:24] Marak: hey Ed__ 
[03:25] Marak: Ed__: whats the ip address of your server?
[03:25] chrisdickinson: context: (in defense, i didn't mention or link gitolite because i haven't installed that one; though i have used it and can vouch that it is pretty cool)
[03:26] davidbanham has joined the channel
[03:26] Ed__: Marak 50.57.88.130
[03:26] Determinist: Marak: how's the ip address of his server related? O.o
[03:26] Marak: Ed__: startup your node server.js again
[03:27] Ed__: Marak: done
[03:27] Ed__: same result
[03:27] Marak: http://50.57.88.130:8000/ should load your site
[03:27] Marak: thats where the server is
[03:27] Marak: Ed__: hellonode starts up an httpServer on your machine for port 8000
[03:28] Marak: Ed__: once this service is running you connect to it via your web browser at http://50.57.88.130:8000/
[03:28] matty_ has joined the channel
[03:28] Marak: Ed__: you have to let the terminal sit there too, you cant CTRL-C out of it
[03:28] Ed__: Marak: no luck
[03:29] Marak: Ed__: I guess no node for you then ever. Sorry.
[03:29] Ed__: doh! I'll go back to PHP then. Thanks
[03:29] Marak: the trolls always use webchat gateway
[03:29] siong1987 has joined the channel
[03:30] Marak: :-p
[03:30] Marak: Ed__: you really have issues?
[03:30] pyrony has joined the channel
[03:30] killfill has joined the channel
[03:30] Marak: Ed__: you are asking very very basic questions, we can help if you need help
[03:30] Ed__: Marak: Yes, I can't get it to work... trying for days
[03:31] Ed__: New to node and command line
[03:31] Marak: Ed__: why not have node locally?
[03:31] Marak: Ed__: what happens when you type "node -v" on your command line
[03:31] Ed__: Marak: I have node working locally
[03:32] Ed__: Marak: v0.4.9-pre
[03:34] context: 0.5.0-pre
[03:34] NuckingFuts: lol I like the gitolite readme thing - "Here's a guide for impatient people: [link]"
[03:35] fakewaffle: is there a way to get the current folder name in the tab name for os x in terminal?
[03:35] Marak: Ed__: if the helloworld works locally and doesnt work on your rackspace, you prob fucked up your node install 
[03:35] fakewaffle: i should say pull path
[03:35] Marak: Ed__: not sure what i can do to help
[03:35] perezd has joined the channel
[03:35] Marak has left the channel
[03:36] context: ed__: its a web server.
[03:36] davidbanham: Fairly new to Vim, but if I've installed vim-javascript (http://www.vim.org/scripts/script.php?script_id=2765) correctly should it be indenting automatically for me when I'm in a .js file?
[03:36] context: localhost:8000
[03:36] context: done.
[03:36] Ed__: context: I'm trying to run hellonode on 50.57.88.130
[03:37] context: is it running. you are new to node why are you running a -pre release
[03:37] Ed__: http://50.57.88.130:8000/ isn't loading
[03:37] NuckingFuts|Away: ACTION goes to set up Gitolite
[03:37] AvianFlu: fakewaffle: the pwd command will tell you the current path
[03:37] AvianFlu: as to changing your prompt, I forget
[03:37] context: then its not running
[03:37] brianseeders has joined the channel
[03:37] AvianFlu: Ed__: code?
[03:37] Ed__: context: I followed the instructions here https://github.com/joyent/node/wiki/Installation to install node
[03:38] Ed__: AvianFlu: This is the code I'm running https://github.com/Marak/hellonode/blob/master/server.js
[03:38] Ed__: AvianFlu: I'm entering this into the command line: node server.js
[03:38] NuckingFuts|Away: I wonder if Ubuntu has made my life easier and included a version of gitolite into the repo >_>
[03:39] fakewaffle: thanks
[03:39] Ed__: It's supposed to say "hello I know nodejitsu"... Instead, the cursor jumps to the next line and nothing happens
[03:39] fakewaffle: haha, ive been running v0.5.0-pre and i didnt notice
[03:40] context: according to the source code history there never was a 0.4.9-pre that i can find
[03:40] isaacs: Ed__: open it up in your web browser.
[03:40] AvianFlu: Ed__: where's it being hosted?
[03:40] jslatts has joined the channel
[03:40] isaacs: Ed__: it's not printing that stuff to stdout, it's displaying it in a web page.
[03:40] isaacs: Ed__: open up http://localhost:8000/
[03:40] isaacs: Ed__: res.write !== console.log
[03:40] context: nm
[03:41] context: ed__: if it works locally and not on rackspace then its not running or rackspace is blocking that port.
[03:41] context: lsof -n -i|grep LISTEN
[03:41] context: ps aux|grep node
[03:41] Ed__: AvianFlu: it's hosted on rackspace
[03:41] context: ed__: ps aux|grep node
[03:41] fakewaffle: wow, iTerm is a lot quicker than Terminal
[03:41] isaacs: Ed__: when you enter "node server.js" it's not going to print out anything on your console.
[03:42] AvianFlu: Ed__: install npm
[03:42] isaacs: Ed__: it's going to sit there waiting for connections.
[03:42] zeade has joined the channel
[03:42] context: now that everyone has said the 'its a web server' about a dozen times has he figured it out yet?
[03:42] DelvarWorld has joined the channel
[03:43] Ed__: context: entered ps aux|grep node and respoonse is "bash: lsof: command not found" 
[03:43] context: ...
[03:43] DelvarWorld has left the channel
[03:43] AvianFlu: LOLOLOLOL
[03:43] context: my give up
[03:43] context: ed__: ps aux|grep node
[03:43] Ed__: AvianFlu: I have installed npm and expres
[03:43] context: not lsof ps aux|grep nde
[03:44] Ed__: context: response is 1000     18772  0.0  0.2   6220   588 pts/1    R+   03:44   0:00 grep --color=auto node
[03:45] context: there.
[03:45] NuckingFuts|Away: So, root, non-root, or package?  Which method is best to set up gitolite?
[03:45] context: node .... is NOT ... running
[03:45] context: so its not going to work. plain and simple.
[03:45] context: nuckingfuts|away: as the git user
[03:45] context: never root. 
[03:45] context: never ever ever.
[03:45] paul_k has joined the channel
[03:46] NuckingFuts|Away: context: Would the sudo apt-get install gitolite be best then? :/
[03:46] Ed__: context: ok
[03:47] context: nuckingfuts|away: sure
[03:47] NuckingFuts|Away: ACTION wishes gitolite were in the Ubuntu Server Guide >_>
[03:48] ryan0x2_ has joined the channel
[03:48] davidbanham: context: In this context (haw) the root-method doesn't actually mean install it as the root user. It's just some terminology used in the gitolite install docs.
[03:48] mbrevoort has joined the channel
[03:48] davidbanham: NuckingFuts|Away: Use the root method.
[03:48] _jgr has joined the channel
[03:50] ParadoxQuine: anyone know of a tool like node-dev that will watch my coffeescript files for changes instead?
[03:51] Ed__: context: ok, I will try to recruit somebody here that knows Ubuntu to teach me the basics. Was hoping to learn as I go, but there's just too much I don't know. Node install fail
[03:51] c4milo1 has joined the channel
[03:52] Ed__: context: by here, I mean here at work...
[03:52] context: davidbanham: you need root access to create the git user
[03:53] context: paradoxquine: im sure you can tell node-dev to look at more files that just .js
[03:53] context: ed__: well i imagine the version is fine. but node needs to be runnningto accept web requests
[03:54] davidbanham: context: Sorry, I was unclear. I meant "doesn't actually mean RUN it as the root user". I can't see any problem with running as root in order to create your git/gitolite user.
[03:54] Ed__: context: yes, makes sense. If only I knew what I was doing...
[03:55] mike5w3c has joined the channel
[03:56] davidbanham: Ed__: Let's try it one more time. Open two ssh sessions to your rackspace server. In one, issue the "node server.js" command as usual. In the other, after doing that, issue "ps aux | grep node" and see what you get.
[03:57] NuckingFuts|Away: Oh yay my gitolite user is set up and such
[03:57] NuckingFuts|Away: Time to see if it works XD
[03:57] Ed__: davidbanham: Ok, one min
[03:57] NuckingFuts|Away: Well, I gotta admin initially by pulling in git so :/
[04:01] Ed__: davidbanham: here is the result: 1000     18774  0.0  3.8 629344  9728 pts/1    S+   03:59   0:00 node server.js 1000     18802  0.0  0.2   6220   588 pts/2    S+   04:01   0:00 grep --color=auto node 
[04:02] context: now try visiting it
[04:02] davidbanham: Ed__: Okay, so we know your node server is running!
[04:02] dnjaramba has joined the channel
[04:02] masylum has joined the channel
[04:02] davidbanham: Ed__: Now point your web browser at it and see what happens.
[04:03] Ed__: davidbanham: When I open the page in my web browser, nothing happens - http://50.57.88.130:8000/
[04:04] davidbanham: It looks like that port is not accessible to the internet. I'm not familiar with Rackspace's environment, but you may need to open that port on a firewall.
[04:05] davidbanham: Ed__: In the ssh session you used to issue your ps aux command, try "lynx localhost:8000"
[04:05] huhlig-dc has joined the channel
[04:05] Ed__: davidbanham: Ok, awesome. I will work on that. I have an Ubuntu server on Rackspace
[04:05] context: ed__: ifconfig|grep inet|grep 130
[04:05] huhlig-dc: question. Can someone enlighten me on this statement on the node.js page? "Thread-based networking is relatively inefficient and very difficult to use." Does node.js use no threads? 
[04:05] ParadoxQuine: context: hmm it doesn't start through coffeescript though so the server just crashes immediately since i need to start it using the coffee binary
[04:06] benjoffe has joined the channel
[04:06] AvianFlu: Ed__: have you tried port 80?
[04:06] huhlig-dc: or does node.js use worker threads?
[04:06] ParadoxQuine: huhlig-dc: javascript is single-threaded
[04:06] huhlig-dc: k
[04:06] davidbanham: AvianFlu: He'll have to run node as root in order to bind to 80.
[04:06] Ed__: davidbanham: lynx localhost:8000 - result: lynx command not found
[04:06] huhlig-dc: most javascript engines are anything but
[04:06] ParadoxQuine: huhlig-dc: node.js uses one thread for a single instance of a server process
[04:06] davidbanham: Ed__: sudo apt-get install lynx
[04:07] ParadoxQuine: it works with webworkers though if you need more threads
[04:07] ParadoxQuine: but it scales very well on one
[04:07] davidbanham: Ed__: lynx is a text-based web browser.
[04:07] huhlig-dc: ok... so the entire thing is a single monolythic thread?
[04:07] ParadoxQuine: its designed to not be monolithic but yes, i believe so
[04:07] context: webworkers is a browser thing
[04:07] context: not node
[04:07] Ed__: context: result of ifconfig|grep inet|grep 130 is -  inet addr:50.57.88.130  Bcast:50.57.88.255  Mask:255.255.255.0
[04:08] context: ed__: kk. lets assume rackspace is blocking stuff other than ssh and http
[04:08] huhlig-dc: so then node.js is single cpu bound... multicore is basically unused by it
[04:08] AvianFlu: true, but don't you get that with a rackspace cloud account?
[04:08] AvianFlu: or is this a different situation
[04:08] AvianFlu: oh you said NODE as root
[04:08] AvianFlu: nevermind
[04:08] context: ed__: wget http://localhost:8000/
[04:08] Lorentz: huhlig-dc: You can have multiple instances of nodejs.
[04:09] huhlig-dc: Lorentz, on the same port??
[04:09] ewdafa has joined the channel
[04:09] davidbanham: AvianFlu: Yeah, he should have root access, but we'd rather not run node as root if we can avoid it.
[04:09] huhlig-dc: that seems unlikely
[04:09] Lorentz: Can't bind same ports, no. You'll need something sitting in the front to handle the "balancing".
[04:09] Lorentz: Similar/same to how nginx does.
[04:09] huhlig-dc: so you need to load balence a single machine
[04:09] huhlig-dc: ok
[04:10] Corren has joined the channel
[04:10] Ed__: davidbanham: I installed lynx. Here is the result of lynx localhost:8000 - hello, i know nodejitsu
[04:10] AvianFlu: Ed__: YES
[04:10] Lorentz: huhlig-dc: I wouldn't call it load balancing, not unless you really do balancing.
[04:10] davidbanham: Ed__: BAM!
[04:10] context: kk. rackspae is blocking port 80. case solved
[04:10] Lorentz: You just need a reverse proxy of sort to handle multiple instances of node, so that you only expose one port.
[04:11] huhlig-dc: Lorentz, I am just wondering if I give node.js a 48 core box... is it sitting on a single CPU
[04:11] Lorentz: It will if you code it to run on only one process.
[04:11] davidbanham: Ed__: This proves that node is running like a champ, and you've just successfully executed your first hello world. All that's missing is opening up that port. I would check out RackSpace's help docs.
[04:11] huhlig-dc: yes but doesnt that make your proxy a bottleneck?
[04:11] huhlig-dc: any design reason not to use threads to take advantage of multicores?
[04:12] Ed__: context: the result is --2011-06-16 04:10:47--  http://localhost:8000/ Resolving localhost... 127.0.0.1 Connecting to localhost|127.0.0.1|:8000... connected. HTTP request sent, awaiting response... 200 OK Length: unspecified [text/plain] Saving to: `index.html'      [ <=>                                   ] 24          --.-K/s   in 0s  2011-06-16 04:10:47 (2.20 MB/s) - `index.html' saved [24]
[04:12] context: huhlig-dc: no.
[04:12] vipaca has joined the channel
[04:12] Lorentz: huhlig-dc: Threads suck, real proper way to do "multi-core" is message passing.
[04:12] huhlig-dc: context, ok
[04:12] context: ed__: yeah we already solved that
[04:12] Ed__: davidbanham: awesome!
[04:12] huhlig-dc: so multi process and fork
[04:12] Lorentz: And it wouldn't be a bottleneck unless you really did write it to be a bottleneck.
[04:12] context: huhlig-dc: all large companies use some sort of load balancer as such.
[04:13] huhlig-dc: not usually across single machines though
[04:13] Lorentz: They do, actually. It's just that most programs people use already have it set up as such.
[04:13] Lorentz: nginx and php-fpm, for instance, is on similar principle.
[04:14] davidbanham: Ed__: So just to fully explain what you've done, you're running node interactively in one ssh session. When you close that session, your server will close with it. You opened another session in order to verify that the process was running properly, which it was. You then attempted to access the node server over the internet, which failed. When that happened, you installed a web browser on the rackspace machine and 
[04:14] davidbanham: used it to access the node server locally, which worked.
[04:14] ryanfitz has joined the channel
[04:15] benjoffe: how do I find out which version of node.js is installed on my machine?
[04:15] ParadoxQuine: node -v
[04:15] davidbanham: benjoffe: node -v
[04:15] benjoffe: thanks
[04:16] benjoffe: so I have an outdated version of node, what's the correct way to update? I tried just installing a new version and got errors
[04:16] ParadoxQuine: install the new vers and it should overwrite the old one and work fine
[04:17] benjoffe: I get this when doing that:
[04:17] benjoffe: * installing deps/libeio/eio.h as /usr/local/include/node/eio.h
[04:17] benjoffe: Waf: Leaving directory `/node-v0.4.8/build'
[04:17] benjoffe: Could not install the file '/usr/local/include/node/eio.h'
[04:17] benjoffe: make: *** [install] Error 1
[04:17] sirdancealot has joined the channel
[04:18] boehm has joined the channel
[04:19] davidbanham: benjoffe: Looks like you don't have permission to write to /usr Are you doing this as root?
[04:19] benjoffe: ah good point, sudo make install worked
[04:20] benjoffe: thanks ParadoxQuine +davidbanham 
[04:21] davidbanham: ACTION had a giant can of red bull and is now solving basic problems LEFT RIGHT AND CENTRE.
[04:21] davidbanham: I am getting absolutely none of my own work done, though.
[04:21] Ed__: davidbanhan: thanks for the explanation. That helps
[04:24] AvianFlu has joined the channel
[04:25] caolanm has joined the channel
[04:27] jacobolus has joined the channel
[04:27] skm has joined the channel
[04:28] vipaca has joined the channel
[04:28] vipaca has joined the channel
[04:31] benjoffe has joined the channel
[04:37] Corren has joined the channel
[04:37] sirdancealot has joined the channel
[04:37] benjoffe: bah, sorry for very noobish questions but can't seem to install npm
[04:37] benjoffe: bjoffe$ sudo make install
[04:38] benjoffe: node.js:134
[04:38] benjoffe:         throw e; // process.nextTick error, or 'error' event on first tick
[04:38] benjoffe:         ^
[04:38] benjoffe: Error: Cannot find module 'semver'
[04:38] benjoffe: any ideas?
[04:38] davidbanham: benjoffe: Throw this kind of stuff on pastebin then give us the link rather than pasting it directly into IRC.
[04:38] benjoffe: ah right sorry davidbanham 
[04:39] davidbanham: No probs. In answer to your actual question, does this help? https://github.com/isaacs/npm/issues/588
[04:40] fairwinds has joined the channel
[04:43] davidbanham: benjoffe: Any luck?
[04:43] benjoffe: I just found out my workplace has a custom package installation system so my efforts here were pointless
[04:44] benjoffe: thanks though, I'll need to redo this on my personal machine anyway
[04:44] hide has joined the channel
[04:44] s0enke has joined the channel
[04:46] idefine has left the channel
[04:47] matwill has joined the channel
[04:48] brianseeders has joined the channel
[04:49] AvianFlu has joined the channel
[04:49] brownies has joined the channel
[04:51] tk has joined the channel
[04:52] benjoffe: hmm spoke too soon, the custom page system is only for production servers
[04:52] tilgovi has joined the channel
[04:52] tilgovi has joined the channel
[04:54] JJMalina has joined the channel
[04:56] darshanshankar has joined the channel
[05:01] fakewaffle: i cant believe my little prog is only ~1000 lines of code lol - feels like so much more!
[05:02] havenn has joined the channel
[05:02] mykul has joined the channel
[05:02] tuhoojabotti: Mine's 200 lines!
[05:03] tuhoojabotti: small is beautiful
[05:03] k1ttty has joined the channel
[05:03] fakewaffle: lol i have 240 blank lines and 690 lines of documentation
[05:03] fakewaffle: fun to look at that for some reason
[05:03] fakewaffle: not that its a measure of much :/
[05:03] tuhoojabotti: lol
[05:03] tim_smart has joined the channel
[05:04] fakewaffle: at least i keep up on my documentation!!
[05:04] benjoffe: davidbanham: thanks that link did the trick
[05:04] Skola has joined the channel
[05:04] tuhoojabotti: //plop
[05:06] unlink has joined the channel
[05:08] fakewaffle: NuckingFuts|Away: yo, what param you use for callbacks? a lot of functions dont have @return obviously?
[05:09] framlin: fakewaffle: this 50 lines seems to hold a very very complex algo ;)
[05:11] paznicul has joined the channel
[05:12] perezd has joined the channel
[05:12] matwill has left the channel
[05:14] jetienne: hi
[05:14] sreeix has joined the channel
[05:14] langworthy has joined the channel
[05:19] fakewaffle: gn everyone
[05:21] CodyGray has joined the channel
[05:21] CodyGray has left the channel
[05:25] newy has joined the channel
[05:30] newy has joined the channel
[05:33] k1ttty_ has joined the channel
[05:36] ParadoxQuine: im using npm 1.x and i have locally installed jade, stylus, and other modules for my project but i would prefer to use the globally installed version of express i have, but npm list says it's an unmet dependency (though require works fine for it) is there a way to tell npm that the project should use the globally installed version?
[05:37] ditesh|cassini has joined the channel
[05:38] drudge has joined the channel
[05:41] vipaca has joined the channel
[05:41] vipaca has joined the channel
[05:43] NuckingFuts|Away: Damn
[05:43] NuckingFuts|Away: Why is gitolite such a bitch D:
[05:43] ph^ has joined the channel
[05:44] NuckingFuts|Away: I must be fucking up somewhere here, but I can't tell :/ damn you, Linux, I shall never comprehend you.
[05:45] NuckingFuts|Away: Fuckit, I'm trying again with another route
[05:45] Lorentz: linux is easy mode
[05:47] S1kx has joined the channel
[05:49] harth has joined the channel
[05:51] matt_c has joined the channel
[05:51] chilts has joined the channel
[05:53] coreb has joined the channel
[05:54] stephank has joined the channel
[05:55] dulanov has joined the channel
[05:56] dulanov has left the channel
[05:57] liar has joined the channel
[05:57] antti_s has joined the channel
[05:58] Emmanuel has joined the channel
[05:59] _Sorensen has joined the channel
[06:00] MonsieurLu has joined the channel
[06:01] robinhoode has joined the channel
[06:01] dguttman has joined the channel
[06:01] eventualbuddha has joined the channel
[06:02] freeformz has joined the channel
[06:02] shajith has joined the channel
[06:02] binaryjohn has joined the channel
[06:05] jacter1 has joined the channel
[06:06] Bradleymeck_ has joined the channel
[06:06] Bradleymeck has joined the channel
[06:07] ryanfitz has joined the channel
[06:07] krazyivan has joined the channel
[06:08] ShreeKavi has joined the channel
[06:09] Skola: I want to properly understand how to set up good error handling in my Express app, is there any guide or source you would especially recommend for me to read?
[06:09] perezd has joined the channel
[06:09] Emmanuel has joined the channel
[06:09] SamuraiJack has joined the channel
[06:09] SamuraiJack has joined the channel
[06:12] CrabDude_ has joined the channel
[06:14] erictj has joined the channel
[06:15] arpegius has joined the channel
[06:15] __tosh has joined the channel
[06:16] matjas has joined the channel
[06:17] fr0stbyte has joined the channel
[06:17] Melkor__ has joined the channel
[06:18] tuhoojabotti: Skola: try { app }
[06:19] jacter has joined the channel
[06:22] topaxi has joined the channel
[06:22] tim_smart has joined the channel
[06:22] MonsieurLu has left the channel
[06:22] mhausenblas has joined the channel
[06:23] Skola: tuhoojabotti what do you mean?
[06:23] ph^ has joined the channel
[06:24] marvin_ has joined the channel
[06:25] jacter has joined the channel
[06:25] Wizek_ has joined the channel
[06:25] sfoster has joined the channel
[06:26] Wizek has joined the channel
[06:27] bernd has left the channel
[06:28] __doc__ has joined the channel
[06:29] simenbrekken has joined the channel
[06:30] jacter1 has joined the channel
[06:32] Emmanuel has joined the channel
[06:33] `3rdEden has joined the channel
[06:33] Skola_ has joined the channel
[06:34] Emmanuel__ has joined the channel
[06:35] mscdex: .talk
[06:35] Calvin: talk for tomorrow 
[06:35] mscdex: .talk kohai
[06:35] Calvin: kohai a bot response or ng if talk
[06:35] Skola_: Calvin Calvin
[06:35] ikaros_daedalos has joined the channel
[06:35] Skola_: so lame
[06:35] mscdex: .talk skola
[06:35] Calvin: skola , thanks oh, ok I didnt really give instructions
[06:35] ikaros_daedalos has left the channel
[06:35] tuhoojabotti: Skola_: proper error handling. :3
[06:36] mscdex: .talk tuhoojabotti
[06:36] Calvin: tuhoojabotti , do t's the talk
[06:36] Skola_: !insult tuhoojabotti
[06:36] Calvin: tuhoojabotti watches SyFy a lot more now there's none of that "science fiction" crap on.
[06:36] mscdex: .talk Marak
[06:36] Calvin: Marak I did a _lot_ e what what they are, just ed in, In the future when some dumb admin decides to remove the file containing the script
[06:36] tuhoojabotti: What's SyFy?
[06:36] mscdex: .talk SyFy
[06:36] Calvin: talk on code and making things
[06:36] mscdex: heh
[06:36] framlin: TV-chanel
[06:36] Renegade001 has joined the channel
[06:37] Skola_: tuhoojabotti whatwhatwhat did you mean with { app }
[06:37] framlin: SyFy
[06:37] tuhoojabotti: neverheard
[06:37] unlink has joined the channel
[06:37] unlink has joined the channel
[06:37] tuhoojabotti: Well my bot knew it
[06:38] emattias has joined the channel
[06:39] tuhoojabotti: Syfy ( /ˈsɪfiː/; "sci-fi"), formerly known as the Sci-Fi Channel and SCI FI, is an American cable television channel… – http://href.fi/2zr
[06:39] tuhoojabotti: :P
[06:40] marvin_ has joined the channel
[06:41] tuhoojabotti: Skola_: try { you app } catch { console.log("ERROR"); } <- proper error handling
[06:41] tshpaper has joined the channel
[06:41] tuhoojabotti: ":D"
[06:41] Skola_: " :DDDD "
[06:41] JoESanche_z has joined the channel
[06:41] Skola_: :D
[06:42] jetienne: hi
[06:42] Skola_: I think I'll pass on your magics
[06:42] blup has joined the channel
[06:42] jetienne has joined the channel
[06:43] fr0stbyte has joined the channel
[06:44] jacter has joined the channel
[06:45] herbySk has joined the channel
[06:46] dgathright has joined the channel
[06:49] groom has joined the channel
[06:51] m00p has joined the channel
[06:52] atiti_ has joined the channel
[06:54] pigmej has joined the channel
[06:56] SnowSt0rm has joined the channel
[06:56] SnowSt0rm:  Hello
[06:56] SnowSt0rm: ]?
[06:56] SnowSt0rm: ?
[06:57] SnowSt0rm has left the channel
[06:57] bkozal has joined the channel
[06:59] djcoin has joined the channel
[07:00] masylum has joined the channel
[07:00] gozala has joined the channel
[07:01] mike5w3c has joined the channel
[07:01] Xano has joined the channel
[07:04] patzak has joined the channel
[07:04] SubStack: check this: https://github.com/substack/node-stackedy
[07:05] k1ttty has joined the channel
[07:05] SubStack: stackedy stack
[07:06] ParadoxQuine: is there a way for me to get app.configure errors from express? i'm trying to get it to compile my coffeescript in a dir to js in another dir and it's silently failing
[07:06] simenbrekken has joined the channel
[07:07] mscdex: stackedy substack
[07:07] dgathright has joined the channel
[07:07] fangel has joined the channel
[07:08] yozgrahame has joined the channel
[07:09] ablomen has joined the channel
[07:09] lackac has joined the channel
[07:13] romanb has joined the channel
[07:13] sleek has joined the channel
[07:14] temp01 has joined the channel
[07:20] jbpros has joined the channel
[07:20] framlin: hm, why would I need my own stack-traces?
[07:21] framlin: SubStack: btw.: what do you use to create/handle the AST?
[07:23] framlin: I use AST as a intermediate - layer between a src-text- and xmi-representation of JS-Sources and use parse-js.js for that, but there may be a better tool?
[07:24] msucan has joined the channel
[07:25] shinuza has joined the channel
[07:25] bergie has joined the channel
[07:25] fangel has joined the channel
[07:28] adambeynon has joined the channel
[07:29] sgimeno has joined the channel
[07:29] overra has joined the channel
[07:30] swistak has joined the channel
[07:31] moop has joined the channel
[07:31] steffkes has joined the channel
[07:35] mendel_ has joined the channel
[07:37] ph^ has joined the channel
[07:38] [AD]Turbo has joined the channel
[07:39] [AD]Turbo: hi there
[07:40] cryptix has joined the channel
[07:40] NuckingFuts: yay.
[07:40] NuckingFuts: I just set up gitolite
[07:41] NuckingFuts: Eventually I want to configure it to do like no.de, using post-push hooks
[07:41] NuckingFuts: Just code a whole daemon in nodeJS, and then use post-push hooks to fire it up :D
[07:41] ph^_ has joined the channel
[07:42] __jgr has joined the channel
[07:42] _jgr has joined the channel
[07:43] mc_greeny has joined the channel
[07:44] newy has joined the channel
[07:44] stonebranch has joined the channel
[07:45] SubStack: framlin: I'm using burrito which uses uglify
[07:45] SubStack: framlin: https://github.com/substack/node-burrito
[07:46] NuckingFuts: SubStack: Damnit, you're making me hungry.
[07:47] jensn has joined the channel
[07:48] andree has joined the channel
[07:48] NuckingFuts: ACTION eats SubStack whole
[07:48] __jgr has joined the channel
[07:48] mendel_ has joined the channel
[07:49] _jgr has joined the channel
[07:49] __tosh has joined the channel
[07:49] sechrist has joined the channel
[07:50] uchuff has joined the channel
[07:50] Epeli: Is there a glob matching tool that does only matching? No fs stuff etc.
[07:50] ParadoxQuine: anyone know how to make socket.io not silently fail if i, for ex, give it an invalid server address and then call connect?
[07:50] mendel_ has joined the channel
[07:51] `3rdEden: doesn't it already silently fail
[07:52] Bj_o_rn has joined the channel
[07:53] hellp has joined the channel
[07:54] Bj_o_rn has left the channel
[07:55] fly-away has joined the channel
[07:56] moop__ has joined the channel
[07:56] tim_smart has joined the channel
[07:57] fly-away: hi!
[07:57] charlesyin has joined the channel
[07:57] fly-away: jsdom eats memory!
[08:00] __tosh has joined the channel
[08:00] confoocious has joined the channel
[08:01] robotblake has joined the channel
[08:01] jomoho has joined the channel
[08:02] hojberg has joined the channel
[08:03] __jgr has joined the channel
[08:03] _jgr has joined the channel
[08:05] framlin: SubStack: I use uglify too and there parse-js.js. Do you know, if burrit is keeping the comments (uglify throws them away, so I had to change its code ..)
[08:06] littlebiged has joined the channel
[08:06] aliem has joined the channel
[08:07] overra has joined the channel
[08:09] mendel__ has joined the channel
[08:13] adambeynon has joined the channel
[08:18] NuckingFuts: YAY!
[08:19] NuckingFuts: I'm writing up a bunch of example stuff and planning my API using Markdown, and I haven't failed yet :P
[08:19] tuhoojabotti: Cool
[08:19] naneau has joined the channel
[08:19] tuhoojabotti: usually failing starts when implementing starts ;-)
[08:20] NuckingFuts: lol
[08:20] NuckingFuts: I'm using this as a chance to learn markdown in addition to creating my API
[08:20] jeremyselier has joined the channel
[08:20] NuckingFuts: Well, designing it
[08:20] rudebwoy has joined the channel
[08:20] overra has joined the channel
[08:20] blup has joined the channel
[08:21] SubStack: framlin: it discards comments yeah
[08:21] SubStack: might be an issue for some things
[08:21] tuhoojabotti: NuckingFuts: Cool guys design in json!
[08:22] foobarfighter: anybody know of any JS projects that can generate a static site for me?
[08:22] JakeyChan has joined the channel
[08:22] NuckingFuts: tuhoojabotti: I'm designing the JSON that my API will be returning for calls?
[08:22] tuhoojabotti: html5 boilerplate?
[08:22] NuckingFuts: What's the best method for parsing markdown?
[08:22] NuckingFuts: Like, what should I use to make the HTML?
[08:23] tuhoojabotti: foobarfighter: https://github.com/robrighter/node-boilerplate this perhaps
[08:23] tuhoojabotti: NuckingFuts: write docs in html. :P
[08:23] foobarfighter: tuhoojabotti: I basically have some content and a template that i want to place the content into.  i want to run a script and have it generate the documents
[08:23] marvin_ has joined the channel
[08:24] NuckingFuts: tuhoojabotti: I'm writing my docs in markdown, because I don't wanna spend time to code HTML and CSS it up, when I can just markdown it.
[08:25] tuhoojabotti: http://github.github.com/github-flavored-markdown/ use this :D
[08:25] NuckingFuts: fuck that, I want me some NodeJS shit
[08:25] foobarfighter: NuckingFuts: ya thats cool... but i actually took the time to design something.
[08:25] NuckingFuts: ACTION should get a giant picture of Ryan Dahl tattooed on his left manboob for lulz.
[08:25] butu5 has joined the channel
[08:27] NuckingFuts|Away: Sleep tiemz
[08:27] tuhoojabotti: Why change nick?
[08:27] foobarfighter: something like this http://webgen.rubyforge.org/ but written in js would be nice
[08:27] tuhoojabotti: spam and annoyance :/
[08:28] Croms: foobarfighter: Came across this one recently. Haven't tested it though: https://github.com/balupton/docpad
[08:28] NuckingFuts|Away: I dunno, mIRC does it automatically, and I've forgotten how to get rid of it lol
[08:28] tbassetto has joined the channel
[08:28] tuhoojabotti: foobarfighter: https://github.com/joyent/node/wiki/modules <- search for static. :P
[08:28] shinuza: NuckingFuts|Away: there are two modules I know to do markdown
[08:29] shinuza: node-markdown
[08:29] tuhoojabotti: NuckingFuts|Away: eww, mIRC
[08:29] NuckingFuts|Away: shinuza: That's one.
[08:29] shinuza: the other one has a weird name
[08:29] foobarfighter: Croms: that looks cool... i'll check it out
[08:29] ablomen has joined the channel
[08:29] shinuza: wait a sec xD
[08:29] NuckingFuts|Away: lol
[08:29] shinuza: discount
[08:29] shinuza: node-discount
[08:29] shinuza: how could I remember that
[08:30] tuhoojabotti: foobarfighter: Other cms modules in the link I sent.
[08:30] shinuza: I've tried node-markdown it's ok
[08:30] tuhoojabotti: lol
[08:31] NuckingFuts|Away: Should've known... discount is tj's lol
[08:31] tuhoojabotti: ACTION is listening wtf-k-pop with android winamp shoutcast :D
[08:31] shinuza: half the modules I'm using are tj's
[08:31] shinuza: :
[08:31] shinuza: there's also this https://github.com/evilstreak/markdown-js
[08:31] NuckingFuts|Away: shinuza: Inorite
[08:32] NuckingFuts|Away: I'm using ExpressJS already for this
[08:32] shinuza: or you could hijack showdown
[08:32] NuckingFuts|Away: My code is gonna be Dox-umented
[08:32] jacter has joined the channel
[08:32] Yoric has joined the channel
[08:32] NuckingFuts|Away: And I might be using discount, once I look at all my option.
[08:33] NuckingFuts|Away: At least he didn't make node-mongo-native
[08:33] NuckingFuts|Away: :P
[08:33] framlin: SubStack: yes, if you want e.g. a beautifyer throwing away comments is no good
[08:33] NuckingFuts|Away: I personally love jsbeautifier.org
[08:33] blup: e10:20 [ bwinton        ] [ freeformz       ] [ kei            ] [ niclone       ] [ sivy            ] [ wolfeidau      ] 
[08:34] SubStack: framlin: comments are also handy for documentation generators
[08:34] charlesyin has joined the channel
[08:34] framlin: what is common practice for the node-community if one changes code? make its own fork? Send the autor a patch? ...?
[08:34] shinuza: framlin: on github
[08:34] tuhoojabotti: NuckingFuts|Away: It's nice but doesn't beutify enough. ;D
[08:34] SubStack: framlin: fork and send a pull request on github
[08:34] shinuza: you fork, make a branch, make your changes, push, and send pull request
[08:34] framlin: yepp, I curently produce UML (XMI) as documentation and ther comments ar vital in many ways
[08:34] NuckingFuts|Away: tuhoojabotti: Meh, it's usually enough for me.
[08:35] SubStack: pfft branches whatevs
[08:35] saurabhverma has joined the channel
[08:35] shinuza: usually you'd squash your changes to make it cleaner
[08:35] NuckingFuts|Away: I'd love to see something capable of spitting out JS based on the Google JS Style Guide
[08:35] hybsch has joined the channel
[08:35] aurynn has joined the channel
[08:36] framlin: shinuza: thanx
[08:36] aurynn has left the channel
[08:37] Tobsn has joined the channel
[08:37] Tobsn: anyone still up?
[08:38] tim_smart: NuckingFuts|Away: Comma-first no-semicolons ftw
[08:38] NuckingFuts|Away: tim_smart: ewwwwww
[08:38] shinuza: Tobsn: Oh I woke up 4 hours ago, so yes
[08:38] tuhoojabotti: ugh
[08:38] tuhoojabotti: !insult tim_smart 
[08:38] Calvin: tim_smart chants \"get Sunshine out\" even though she's totally nice and didn't get evicted anyway
[08:38] Tobsn: does anyone use S3? i just uploaded a new image with the same name and it doesnt change
[08:38] Tobsn: its pretty odd
[08:39] tim_smart: tuhoojabotti: So you don't like the npm source code?
[08:39] davidbanham has joined the channel
[08:39] BigWookie has joined the channel
[08:39] tuhoojabotti: tim_smart: I haven't seen npm's source code.
[08:40] tuhoojabotti: afaik
[08:40] tim_smart: tuhoojabotti: https://github.com/isaacs/npm/blob/master/lib/install.js
[08:40] jacobolus has joined the channel
[08:40] BigWookie: Anyone here using ueberDB ? Is there a way to get all keys?
[08:41] tuhoojabotti: tim_smart: Well that's just ugly.
[08:41] shinuza has joined the channel
[08:41] tuhoojabotti: But that's only my opinion.
[08:42] Tobsn: tuhoojabotti. go complain with isaacs, he likes complainers ;)
[08:43] shinuza has joined the channel
[08:43] tuhoojabotti: I'm not complaining.
[08:43] ditesh|cassini has joined the channel
[08:44] markwubben has joined the channel
[08:44] SubStack: I don't like npm's source code
[08:44] Tobsn: who cares
[08:44] SubStack: but then I don't have to maintain it either
[08:44] Tobsn: its working
[08:44] SubStack: exactly
[08:44] Tobsn: yep
[08:45] Tobsn: look at wordpress
[08:45] Tobsn: drupal
[08:45] Tobsn: pylons
[08:45] Tobsn: all crap
[08:45] SubStack: it works, it passes its tests, ship it
[08:45] Tobsn: but works like a charm
[08:45] Tobsn: now someone tell me why S3 keeps sending me old images
[08:46] SubStack: time machine accident
[08:46] Tobsn: looks like it
[08:46] Tobsn: it really sends me an old image, even over the AWS console its new, over http its old
[08:46] Tobsn: wtf.
[08:46] bzinger has joined the channel
[08:47] Tobsn: lol even over https its the old image
[08:47] Tobsn: man fml
[08:48] NuckingFuts|Away: Tobsn: Perhaps caching?
[08:48] tuhoojabotti: https://docs.google.com/document/pub?id=1ZRgLcygQWQ2-REz1UweJ9TVBIntk-nBNrrD4njRt5N4&pli=1 :P
[08:48] Tobsn: obviously
[08:48] Tobsn: but not on my side
[08:48] Tobsn: http://i.cdn.cm/ex/s.png
[08:49] Tobsn: does that have a youtube icon in it?
[08:49] NuckingFuts|Away: Tobsn: No, it's access denied
[08:49] tuhoojabotti: Yeah
[08:49] Tobsn: wut?
[08:49] tuhoojabotti: xml
[08:49] Tobsn: its working here
[08:49] tuhoojabotti: saying Access Denied. :P
[08:49] Tobsn: _wtf_
[08:50] piscisaureus has joined the channel
[08:51] Tobsn: what about now?
[08:52] tuhoojabotti: same
[08:52] NuckingFuts|Away: now it's better
[08:52] Tobsn: hu?
[08:52] binaryjohn has joined the channel
[08:53] tuhoojabotti: cache free refresh helped. :P
[08:53] NuckingFuts|Away: No access denid, but no YouTube icon
[08:53] tuhoojabotti: eXplore!
[08:53] Tobsn: you see it now?
[08:53] NuckingFuts|Away: eXplode
[08:53] tuhoojabotti: Yeah
[08:53] NuckingFuts|Away: Yussir
[08:53] fcambus has joined the channel
[08:53] Tobsn: i see the old image in safari, FF and chrome, no matter what i do
[08:53] NuckingFuts|Away: Tobsn: What's the old image?
[08:54] Tobsn: old image is also a css sprite set without all the tiny icons
[08:54] Tobsn: http://dl.dropbox.com/u/1656816/Screenshots/898w.png
[08:54] overra has joined the channel
[08:54] Tobsn: see
[08:54] Tobsn: thats what im getting here
[08:54] Tobsn: no matter what i do with permissions or if i delete the image etc.
[08:54] tuhoojabotti: chrome ctrl+f5 :D
[08:54] NuckingFuts|Away: Tobsn: Yeah, it's showing up fine for us
[08:54] tuhoojabotti: I guess it's cached pretty well
[08:55] tuhoojabotti: It didn't update when I did f5
[08:55] tuhoojabotti: but ctrl+f5 loads cacheless on chrome at least
[08:55] NuckingFuts|Away: I think it's the same on Firefox.  That or Shift+F5
[08:55] tuhoojabotti: yeah
[08:56] Tobsn: doesnt matter how i reload
[08:56] tuhoojabotti: but opera doesn't play like that
[08:56] tuhoojabotti: :P
[08:56] Tobsn: FF has cache complete disabled
[08:56] NuckingFuts|Away: Tobsn: Transparent caching proxy?
[08:56] tuhoojabotti: perhaps your connection is cached!
[08:56] NuckingFuts|Away: ACTION shrugs
[08:56] tuhoojabotti: :P
[08:56] NuckingFuts|Away: I gotta go to sleep
[08:56] Tobsn: http://dl.dropbox.com/u/1656816/Screenshots/7_2j.png
[08:56] tuhoojabotti: night night!
[08:56] Tobsn: see
[08:56] Tobsn: isnt that crazy?
[08:56] Tobsn: n8
[08:57] suckerpunch has joined the channel
[08:57] Tobsn: im gonna try the S3 host
[08:59] Tobsn: oh very nice too, in the AWS console if i click on cloudfront
[08:59] Tobsn: im getting:
[08:59] Tobsn: {
[08:59] Tobsn:   "errorCode" : "BadRequest"
[08:59] Tobsn: }
[08:59] Tobsn: http://dl.dropbox.com/u/1656816/Screenshots/w7zl.png
[08:59] Tobsn: i think my intertubes are broken
[08:59] charlesyin has joined the channel
[09:00] tuhoojabotti: :D
[09:01] Tobsn: http://i.cdn.cm.s3.amazonaws.com/ex/s.png
[09:01] Tobsn: well that works
[09:02] steffkes has joined the channel
[09:02] tuhoojabotti: Affirmitive
[09:02] Tobsn: man that is some weird shit
[09:02] Tobsn: im gonna try it on my iphone
[09:02] Tobsn: over wifi
[09:02] Tobsn: gonna see if its COX
[09:02] Tobsn: that caches it
[09:03] Tobsn: okay over wifi on iphone its the new one
[09:03] Tobsn: this is bullshit. im restarting and cleaning caches
[09:04] Tobsn: brb
[09:08] shinuza has joined the channel
[09:11] gausby has joined the channel
[09:11] ehedenst has joined the channel
[09:16] pigmej: anyone uses cradle?
[09:17] adrianmg has joined the channel
[09:17] charlesyin has joined the channel
[09:18] framlin: pigmej: yes, but not often
[09:18] framlin: only for reading and storing some JSON
[09:18] pigmej: framlin: the porblem is
[09:18] pigmej: that i can't forEach over results
[09:18] pigmej: because then I loose the key, id informations....
[09:18] thermal has left the channel
[09:18] pigmej: that I need..
[09:19] mscdex: .talk iphone
[09:19] Calvin: iphone while he talk
[09:19] framlin: pigmej: view-results?
[09:19] mscdex: .talk cradle
[09:19] Calvin: cradle is described talk
[09:19] pigmej: framlin: yup
[09:19] pigmej: db.view('view/path', function...)
[09:20] pigmej: and when I forEach over 'res'
[09:20] foobarfighter: Croms: docpad is great... thanks for the suggestion
[09:20] pigmej: I get only datas from 'value'
[09:20] mscdex: .talk Tobsn
[09:20] Calvin: Tobsn , impatient, the gitolite readme thing talk
[09:20] framlin: hm, I know I use that and do not have any problem
[09:20] mscdex: heh
[09:20] pigmej: framlin: hmm
[09:20] pigmej: are you sure?
[09:20] pigmej: because it generally works
[09:20] Tobsn: wtf?
[09:20] Croms: foobarfighter: :—)
[09:20] mscdex: :)
[09:20] mscdex: .talk pigmej
[09:20] Calvin: pigmej ,  talk
[09:21] mscdex: .talk Calvin
[09:21] Calvin: talk about nodejs Just published a simple remote desktop 
[09:21] Tobsn: i hate bots.
[09:21] mscdex: :-D
[09:21] pigmej: framlin: http://wklej.to/5Ukra/text
[09:21] framlin: I have views that serve  about 100 docs and I get them
[09:21] Tobsn: go finish that uno game
[09:21] Tobsn: :P
[09:21] tuhoojabotti: Tobsn: >:|
[09:21] mscdex: i will some day :)
[09:21] framlin: but I do not have this code available at the moment
[09:21] mscdex: maybe sooner if someone pays me :p
[09:21] Tobsn: there are like 10 bots in here...
[09:21] Tobsn: totally useless shit
[09:21] Tobsn: reminds me of IRC like 12 years ago
[09:21] jhurliman: (function (callback){callback(null, jsmin(content));})(grouping()); <-- so legible!!
[09:21] tuhoojabotti: lol
[09:21] pigmej: framlin: the first [] was a result
[09:21] stonebranch has joined the channel
[09:21] pigmej: and the second one I had in forEach..
[09:22] mscdex: Tobsn: Calvin is supposed to analyze chatter in here and spit out something coherent
[09:22] Calvin: something like that style of ExpressJS
[09:22] mscdex: heh
[09:22] Tobsn: which nobody ever needs... ;)
[09:22] pigmej: and when I did by hand (for var = 0.....) single(res[i])...
[09:22] pigmej: it works
[09:22] Tobsn: oh and hes already wrong hehe
[09:23] Tobsn: if you need data
[09:23] Tobsn: i have like 20 million lines of irc chat
[09:23] mscdex: Tobsn: well, it's not AI, i think it's based on some mathematical thing
[09:23] framlin: pigmej: forEach of what?
[09:23] mscdex: Tobsn: i think he's also been fed the existing #nodejs chatlog
[09:23] mscdex: chatlogs
[09:23] pigmej: framlin: res.forEach
[09:23] framlin: seems to be there is only one result-value
[09:23] mscdex: #node.js rather
[09:24] pigmej: framlin: yup
[09:24] pigmej: only one but it doesn't matter
[09:24] pigmej: look at the {} at the end of it
[09:24] pigmej: it contains only 'value'
[09:24] pigmej: and it looses the key,id fields
[09:24] pigmej: that I need 
[09:24] pigmej: everything works like a charm when i did it by hand in for loop
[09:25] framlin: a I see, isn't this a feature of couch?
[09:25] framlin: you may output the key as part of the value, if you need this
[09:26] shinuza has joined the channel
[09:26] djcoin has joined the channel
[09:27] sixtus42 has joined the channel
[09:27] framlin: I didn't got your point before. I didn't use *this* forEach ...
[09:27] pigmej: framlin: nono...
[09:27] pigmej: it's nonsense to output
[09:27] pigmej: a key
[09:27] pigmej: in a values...
[09:27] pigmej: the key is the key ;)
[09:27] framlin: yepp, I think, you are write
[09:28] pigmej: if you want a doc you should use include_docs = true
[09:28] framlin: but you has a key-value-pair as a result of a view
[09:28] pigmej: yup
[09:28] pigmej: until you did forEach
[09:28] pigmej: ;-)
[09:28] pigmej: (recommended by authors)
[09:28] pigmej: then you will not have the key,id informations
[09:28] pigmej: just extracted value things
[09:29] framlin: so you have the choise .... ;)
[09:29] sixtus42: anybody got a file i/o example for libuv?
[09:29] framlin: choiCe between only the value by recommended method or both by your own ;)
[09:30] boogyman has joined the channel
[09:31] tomtomaso has joined the channel
[09:31] pigmej: framlin: yup sure
[09:31] blup: anyone here have experience with now.js?
[09:32] xav_ has joined the channel
[09:32] framlin: I use my views with include-docs so I do not have this problem ... ;)
[09:32] S1kx: http://groups.google.com/group/node-mongodb-native/browse_thread/thread/88831f375d558a06/d389c4042ac8e829 has this been resolved with the C/C++ deserializer in V0.8?
[09:32] andree has joined the channel
[09:32] cloudhead has joined the channel
[09:32] tomtomaso has joined the channel
[09:33] overra has joined the channel
[09:33] Bonuspunkt has joined the channel
[09:35] XXXMan has joined the channel
[09:39] ryah: hello node people!
[09:39] Tobsn: °moin
[09:40] sixtus42: hello ryah :-)
[09:40] ryah: sixtus42: yo
[09:40] adrianmg has joined the channel
[09:40] mscdex: yo
[09:40] ryah: sixtus42: qt should be possible to integrate into the event loop
[09:40] mscdex: node.js rules!
[09:40] fcambus: hey ryah!
[09:40] sixtus42: ryah: I just love to see some c code using libuv for file I/O
[09:41] jamesbroad has joined the channel
[09:41] tim_smart: ryah: Could I get a opinion on something?
[09:41] ryah: tim_smart: why, of course
[09:41] saschagehlich has joined the channel
[09:41] tim_smart: Why, thank you!
[09:41] ryah: btw - have people seen http://www.pubsub.io/
[09:42] ryah: it's so cool
[09:42] Tobsn: mscdex, 12 million rows
[09:42] tim_smart: ryah: https://gist.github.com/687fae8e7169f89cc370
[09:43] tim_smart: ryah: Oh crap, curl failed
[09:43] mscdex: Tobsn: huh?
[09:43] tim_smart: ryah: Yeah that link should work now
[09:43] Tobsn: i logged a bunch of irc channels
[09:43] Tobsn: 2007-02-07 20:05:09
[09:43] Tobsn: thats the first timestamp
[09:44] Tobsn: it also downloads all images mentioned in the channels every 15 minutes
[09:44] Tobsn: whcih wasnt such a great idea...
[09:44] mscdex: heh
[09:44] Tobsn: 11G	.
[09:44] Tobsn: in the cache folder
[09:44] mscdex: tim_smart: why \r\n delimiter?
[09:45] unlink has joined the channel
[09:45] tim_smart: mscdex: So you can telnet it
[09:45] tim_smart: :p
[09:45] mscdex: blah :)
[09:45] shinuza has joined the channel
[09:45] Tobsn: mscdex http://hitlr.de/channel/facebook
[09:45] stagas: tim_smart: this is great
[09:45] mscdex: Tobsn: what is that?
[09:46] Tobsn: channel log from #facebook
[09:46] tuhoojabotti: loading...
[09:46] Tobsn: http://hitlr.de/channel/facebook/gallery
[09:46] tuhoojabotti: :P
[09:46] Tobsn: yeah
[09:46] Tobsn: its not cached
[09:46] Tobsn: all mysql
[09:46] Tobsn: never put much effort into it
[09:46] mscdex: :S
[09:46] mscdex: green on black!
[09:47] Tobsn: its 4 years old
[09:47] Tobsn: http://hitlr.de/channel/reddit/gallery
[09:47] Tobsn: dont forget to hit stop in your browser.
[09:48] tuhoojabotti: lols
[09:48] Tobsn: http://hitlr.de/channel/reddit/
[09:48] Tobsn: yeah... mysql is a bit freaked out by that
[09:48] Tobsn: for some reason
[09:48] tim_smart: ryah: That p2p deploy thing was quite similar in concept I thought.
[09:50] ryah: tim_smart: nice 
[09:50] ryah: looks cool
[09:50] tim_smart: OK good. I'm not too crazy then
[09:51] tuhoojabotti: Tobsn: ERR: No data recevied :D
[09:51] Tobsn: yeah
[09:51] tuhoojabotti: food
[09:51] Tobsn: Threads: 4  Questions: 22531131  Slow queries: 26930  Opens: 10364  Flush tables: 1  Open tables: 668  Queries per second avg: 0.930
[09:51] Tobsn: mysql runs since quiet a time
[09:51] jakehow has joined the channel
[09:51] Tobsn: # uptime
[09:51] Tobsn:  04:51:51 up 1028 days,  9:38,  1 user,  load average: 1.35, 1.21, 0.64
[09:52] matty has joined the channel
[09:52] Tobsn: look at that, i got over 1000 days a month ago
[09:53] Tobsn: MySQL Uptime:			280 days 8 hours 40 min 5 sec
[09:53] ryah: tim_smart: does it work?
[09:53] sendark has joined the channel
[09:53] tim_smart: ryah: It's a README. I'm still think about fault detection and how fancy I want to make it
[09:53] ryah: tim_smart: can you please add a query language like this: http://www.pubsub.io/s/docs.html ?
[09:54] ryah: :)
[09:54] ryah: tim_smart: pattern matching for JS
[09:54] tim_smart: ryah: You would implement it on top of this
[09:55] ryah: tim_smart: ok
[09:55] tim_smart: This will be the low level communication layer, then you can go crazy.
[09:55] fcambus: check this out people, freshly launched :) => http://www.nodecloud.org
[09:56] jTNT has joined the channel
[09:57] tim_smart: fcambus: no.de isn't on there :/
[09:57] unlink has joined the channel
[09:57] unlink has joined the channel
[09:57] tomtomaso has joined the channel
[09:57] fcambus: tim_smart: will be added soon then :)
[09:57] charlesyin has joined the channel
[09:58] sixtus42: tim_smart: does dude have a discover mechanism for other dudes? re
[09:58] sixtus42: tim_smart: released yet?
[09:59] tim_smart: sixtus42: Yeah. So if a dude connects to a single dude, he will be distributed across the network.
[09:59] guybrush: fcambus: nice!
[09:59] _jgr has joined the channel
[09:59] tim_smart: sixtus42: I should have something working soon.
[10:00] sixtus42: but there is no mdns or something like that?
[10:01] tobmastr has joined the channel
[10:01] tim_smart: Nope
[10:02] mendel_ has joined the channel
[10:03] sixtus42: tim_smart: feature request ;-)
[10:03] tim_smart: sixtus42: Will have to look into it :)
[10:04] Tobsn: mscdex, http://hitlr.de/channel/Node.js
[10:07] Wizek has joined the channel
[10:07] NuckingFuts has joined the channel
[10:09] skm has joined the channel
[10:09] Tobsn: oh and nodenode is the login for the searchable index.
[10:11] mendel_: wtf, hitlr.de?
[10:12] Ian_Corne: probably considered "funny" ..
[10:12] Jonasbn_ has joined the channel
[10:13] Tobsn: the domain is 6 years old by now i think
[10:13] sixtus42_ has joined the channel
[10:14] gozala has joined the channel
[10:14] sendark: what an awesome domain name.
[10:15] Tobsn: http://hammerzeit.us/
[10:15] Tobsn: like that one?
[10:15] overra has joined the channel
[10:16] robhawkes has joined the channel
[10:17] sixtus42 has joined the channel
[10:18] sixtus42_ has joined the channel
[10:18] tbassett has joined the channel
[10:18] mikl has joined the channel
[10:18] mikl has joined the channel
[10:19] BigWookie has left the channel
[10:20] eldar has joined the channel
[10:20] ryan0x2 has joined the channel
[10:22] jamesbroad: fcambus: nice, forgot Alexa existed :)
[10:23] hugdubois has joined the channel
[10:23] kollapse has joined the channel
[10:24] sixtus42 has joined the channel
[10:24] kollapse: Hello. I'm currently using PHP with mariadb and nginx. I've heard good things about node.js. Convince me to use it. :)
[10:24] pigmej has joined the channel
[10:27] asabil has joined the channel
[10:27] stagas: kollapse: it is good for the planet
[10:27] kollapse: stagas: Less servers -> less carbon emissions ? 
[10:27] patzak has joined the channel
[10:28] temp01 has joined the channel
[10:30] Wizek has joined the channel
[10:30] ryan0x2 has joined the channel
[10:31] mikl has joined the channel
[10:31] stagas: kollapse: yeah, node.js is responsible for the ice age we're entering now :P
[10:32] thalll has joined the channel
[10:35] fcambus: tim_smart: just added no.de (and pubsub.io as well)
[10:35] tuhoojabotti: nodejs doesn't kill planets, I kill planets!
[10:35] shinuza has joined the channel
[10:35] altamic has joined the channel
[10:35] tim_smart: Cool
[10:39] kollapse: I'm really thinking of switching from PHP + RDBMS to node.js + mongodb (or similar) but I fear the change will too large.
[10:39] kollapse: Not to mention the fact that I would probably miss good ol' SQL.
[10:40] tuhoojabotti: I use node + mysql :D
[10:40] tuhoojabotti: I used to do everything on the client
[10:41] tuhoojabotti: good ol' times
[10:41] isaqual has joined the channel
[10:41] fangel has joined the channel
[10:41] matjas has joined the channel
[10:41] tuhoojabotti: kollapse: I recommend node.js, it's fun. :)
[10:42] tuhoojabotti: js is more fun than php
[10:42] Guest34609 has joined the channel
[10:42] tuhoojabotti: php is almost as old as I am. :D
[10:42] kollapse: I'm not looking for fun, but efficiency.
[10:42] Mrfloyd has joined the channel
[10:43] mscdex: .talk php
[10:43] Calvin: talk skola
[10:44] mscdex: haha
[10:44] mscdex: .talk mysql
[10:44] Calvin: mysql is the preferred way talk
[10:44] mscdex: .talk osx
[10:44] Calvin: talk Calvin
[10:44] mscdex: crazy bots
[10:44] mscdex: !
[10:44] framlin: kollapse: nodejs is JavaScript, that should be reason enough to use it ;)
[10:45] mscdex: kollapse: node.js rules!
[10:45] tuhoojabotti: http://zgadzaj.com/benchmarking-nodejs-basic-performance-tests-against-apache-php :D
[10:45] jamesbroad: kollapse coming from an MVC PHP world, I found expressjs a great framework to play around with
[10:45] framlin: SQL is a 60s-thing, so its a good idea to use nosql in our days over the web
[10:46] Tobsn: "convince me" hehe
[10:46] Tobsn: who convinced you to use php with sql?
[10:46] Tobsn: or nginx
[10:46] kollapse: Benchmarks but I'm *ahem* too lazy to benchmark now
[10:46] Tobsn: benchmarks of php convinced you?
[10:47] kollapse: Tobsn: Sure. The ones from ... some years ago
[10:47] Tobsn: around 12?
[10:47] kollapse: Tobsn: Not really
[10:47] framlin: kollapse: coding in JavaScript is the most efficient thing you can do
[10:47] kollapse: I'd say about 11 and a half
[10:47] Tobsn: 13?
[10:47] altamic has joined the channel
[10:47] kollapse: As I understand node.js comes with its own server. But I still need to use a classic webserver for static content, right ?
[10:47] framlin: trust me, I do that for ar big company since years and at the beginning I thought, they are just crazy
[10:47] Tobsn: node.js is a language
[10:47] overra has joined the channel
[10:48] Tobsn: in which you can write your own NET based stuff
[10:48] Tobsn: like python
[10:48] jamesbroad: kollapse, no you can serve static files through node
[10:48] kollapse: jamesbroad: Can't beat nginx at static content.
[10:48] Tobsn: read the manual, download node, try out some stuff, you'll see
[10:48] framlin: kollapse: anything you need is nodejs ... and maybe couchDB ;)
[10:48] Tobsn: kollapse, oh yes
[10:48] Lorentz: Mmm, varnish on top of nginx.
[10:48] Tobsn: lighttpd beats nginx if you do it right
[10:49] Tobsn: lighttpd v2 beats it without even messing with the config
[10:49] jamesbroad: kollapse maybe not, the node middleware you could use to serve static content could look like http://extjs.github.com/Connect/staticProvider.html
[10:49] framlin: Tobsn: there I must dissent. node.js is a SYSTEM
[10:49] Tobsn: whatever
[10:49] Tobsn: kollapse, just try it out
[10:49] Tobsn: brb
[10:50] Tobsn: oh and when you're at it, ditch sql and use mongodb.
[10:52] copongcopong has joined the channel
[10:52] kollapse: My primary purpose is to ditch as many fat cows as possible and just go along with what is fastest.
[10:52] uchuff has joined the channel
[10:53] framlin: kollapse: then you should try C ;)
[10:53] framlin: C is fast ...
[10:54] kollapse: Apache was the fattest of them all... 
[10:54] kollapse: Didn't even fit through the door.
[10:54] kollapse: C script with GWan ?
[10:54] xandrews has joined the channel
[10:54] Skola has joined the channel
[10:55] framlin: maybe assembler is even faster ;)
[10:55] kollapse: Right... why not just code directly in binary ? 
[10:55] rworth has joined the channel
[10:55] kollapse: Sure it could take a few years to write a function, but hey .. it's the fastest.
[10:56] charlesyin has joined the channel
[10:56] tuhoojabotti: asm<3
[10:56] framlin: kollapse: if youl like JavaScript, you will LOVE node.js if not, you should stay with php ....
[10:56] framlin: kollapse: :-)
[10:56] kollapse: framlin: Let's just say I spend a lot of time with ajax and jquery.
[10:56] tuhoojabotti: Welcome aboard!
[10:57] kollapse: Node.js caches code ? Similar to APC/memcached ?
[10:57] framlin: if you have fun with this and start to see the beauty of clousures and prototype-inheritance, you should go for node.js
[10:58] kollapse: Might take a while to migrate sites
[10:58] kollapse: So basically I need the nodejs server and another classic server (nginx / lighthttpd / etc.) for serving static content ?
[10:58] a0n has joined the channel
[10:59] seivan has joined the channel
[10:59] framlin: kollapse: look at some videos of Douglas Crockford if he could not convnce you about JavaScript, nobody can ...;)
[10:59] a0n: hi - beginner question - i know - but can i start node in a way that it automatically restarts the process when something in the source changes?
[11:00] framlin: to serve static content semms to need 10 lines code or so ...
[11:00] tuhoojabotti: framlin: Or less
[11:00] framlin: maybe 50 ;)
[11:00] kollapse: framlin: Hmm, why not I do this: setup nginx to serve everything and redirect *.js requests to node.js ?
[11:01] tuhoojabotti: It might work
[11:01] framlin: you could do
[11:01] jamesbroad: a0n take a look at http://remysharp.com/2010/10/12/nodejs-rapid-development-nodemon/
[11:01] framlin: there is no problem with that
[11:01] jamesbroad: a0n specifically https://github.com/remy/nodemon/
[11:01] F1LT3R has joined the channel
[11:01] a0n: jamesbroad: thx - thats what i need ^^
[11:02] kollapse: I mean I've yet to try a webserver that serves static better than nginx (lighthttpd included!) and I somehow doubt node.js will fare better.
[11:02] framlin: but I think, you do not need to rout *.js requests to node, but http://-requests that call JS-Code to answer you
[11:02] tuhoojabotti: kollapse: I use apache to server static files! :D
[11:02] tuhoojabotti: Because it was already there. :3
[11:02] a0n: jamesbroad: nice!!!
[11:03] tuhoojabotti: a0n: It's nice when it works
[11:03] mendel_: a0n: or https://github.com/isaacs/node-supervisor
[11:04] a0n: mendel_: *watch*
[11:06] mendel__ has joined the channel
[11:06] bnoordhuis has joined the channel
[11:07] eldios has joined the channel
[11:09] jspr has joined the channel
[11:11] __jgr has joined the channel
[11:16] ryanmcgrath has joined the channel
[11:17] CIA-104: node: 03Ryan Dahl 07master * rdafe32d 10/ (src/tcp_wrap.cc test/simple/test-tcp-wrap-listen.js): tcp_wrap: implement write - http://bit.ly/kwyrpV
[11:19] framlin: kollapse: this may convince you ... http://developer.yahoo.com/yui/theater/video.php?v=crockford-loopage   
[11:21] kollapse: What about http://www.youtube.com/watch?v=hQVTIJBZook ?
[11:23] framlin: yepp, its not the newest one, but great, too 
[11:23] empt has joined the channel
[11:23] overra has joined the channel
[11:23] framlin: but in the video I have URLed here, he is also talking about node.js
[11:23] sudhirjonathan has joined the channel
[11:24] zackattack has joined the channel
[11:24] framlin: ... and nosql ....
[11:26] tiagoa has joined the channel
[11:27] _jgr has joined the channel
[11:27] Emmanuel__ has joined the channel
[11:30] ph^ has joined the channel
[11:30] topaxi has joined the channel
[11:30] PrgmrBill has joined the channel
[11:31] blup has joined the channel
[11:33] Druide_ has joined the channel
[11:34] ReekenX has joined the channel
[11:36] dtan has joined the channel
[11:37] a0n: i'am experimenting with express.js and redis - is there a good practice howto create datamodels in express.js
[11:41] temp01 has joined the channel
[11:48] jspr has left the channel
[11:48] mehlah has joined the channel
[11:50] FireFly has joined the channel
[11:51] Swizec has joined the channel
[11:51] saschagehlich: `3rdEden: are you using express.js or connect.js? (or both)?
[11:52] `3rdEden: yes
[11:52] charlesyin has joined the channel
[11:52] `3rdEden: both saschagehlich
[11:52] `3rdEden: because express uses connect
[11:53] Guest28566_ has joined the channel
[11:53] saschagehlich: `3rdEden: if I have a route like "/:id-:slug" and :slug is "heavy-metal"... will it do what i want?
[11:53] Melkor___ has joined the channel
[11:53] `3rdEden: yes
[11:53] saschagehlich: so will it match "/1-heavy-metal" like this: { id: 1, slug: "heavy-metal" }
[11:53] saschagehlich: nice!
[11:53] `3rdEden: I think so
[11:53] saschagehlich: at least I hope so...
[11:53] saschagehlich: ;)
[11:53] pigmej has left the channel
[11:53] `3rdEden: If I remember correctly yup
[11:54] `3rdEden: or you can just use regexp for the route saschagehlich
[11:54] saschagehlich: so if i do "/([0-9]+)-:slug"
[11:54] swilson06 has joined the channel
[11:54] saschagehlich: what will the params look like?
[11:54] saschagehlich: well let me just try it...
[11:55] `3rdEden: param.id
[11:55] `3rdEden: param.slug
[11:55] saschagehlich: nope i just get the slug
[11:55] `3rdEden: srsly?
[11:55] saschagehlich: params is { slug: "heavy-metal" }
[11:55] saschagehlich: it does not pass through the first match that comes out of ([0-9]+)
[11:55] saschagehlich: or is there a way to name it somehow? :/
[11:56] saschagehlich: ah
[11:56] broofa has joined the channel
[11:56] tyler-iphone has joined the channel
[11:56] saschagehlich: no...
[11:57] mahna has joined the channel
[11:57] saschagehlich: well whatever, :id-:slug works. thx `3rdEden
[11:58] infynyxx has joined the channel
[11:58] `3rdEden: :D
[11:59] sixtus42 has joined the channel
[12:01] overra has joined the channel
[12:02] replore_ has joined the channel
[12:04] cjm has joined the channel
[12:05] prettyrobots has joined the channel
[12:05] sourcode has joined the channel
[12:05] bentruyman has joined the channel
[12:08] JoshC1 has joined the channel
[12:09] sourcode has joined the channel
[12:10] fermion has joined the channel
[12:11] okuryu has joined the channel
[12:11] tmedema has joined the channel
[12:11] steffkes has joined the channel
[12:11] tmedema: Is there a way to check if a given file descriptor (fd) is valid / open ?
[12:13] bnoordhuis: tmedema: read it from it and check if EBADF is raised
[12:13] tmedema: bnoordhuis: does that require a try catch block?
[12:14] bnoordhuis: tmedema: yes
[12:14] tmedema: damn, really don't like those in async code
[12:14] bnoordhuis: tmedema: in the sync case anyway, else you need to check the err param to your callback
[12:14] tmedema: I would prefer fs.isValidFd(fd) fs.close(fd, function(err) {});
[12:14] tmedema: bnoordhuis: ah right, that's much better, thanks
[12:15] adambeynon has joined the channel
[12:15] bnoordhuis: tmedema: if you want to close it, just close it - you can check for err.errno = EBADF in your close callback
[12:15] bnoordhuis: tmedema: but i think you understood that already :)
[12:16] tmedema: bnoordhuis: aye, thanks again
[12:16] Roxy has joined the channel
[12:16] hellp has joined the channel
[12:17] Roxy has joined the channel
[12:18] charlesyin has joined the channel
[12:22] infynyxx has left the channel
[12:22] Roxy has joined the channel
[12:23] matjas has joined the channel
[12:24] ryan0x2 has joined the channel
[12:24] johnnywengluu_ has joined the channel
[12:25] Roxy: moongoose question. the api for find has findById as "Model.findById = function (id, fields, options, callback)". How would I know how many arguments the callback function would take in this case?
[12:26] Bradleymeck has joined the channel
[12:26] Bradleymeck_ has joined the channel
[12:26] zackattack has joined the channel
[12:26] infynyxx has joined the channel
[12:28] jensn has joined the channel
[12:28] Workrella has joined the channel
[12:31] bentruyman has joined the channel
[12:31] dall has joined the channel
[12:31] dall: hello
[12:33] dtan has left the channel
[12:33] edude03 has joined the channel
[12:33] tbassett has joined the channel
[12:33] tim_smart: Roxy: Takes two (error, instance || null)
[12:33] tim_smart: instance is null if no result if found
[12:35] leahculver has joined the channel
[12:35] leahculver has joined the channel
[12:44] overra has joined the channel
[12:45] ap3mantus has joined the channel
[12:50] ianward has joined the channel
[12:51] sixtus42 has joined the channel
[12:51] brianseeders has joined the channel
[12:52] mehlah has joined the channel
[12:52] mike5w3c_ has joined the channel
[12:53] Murugaratham has joined the channel
[12:56] ianward1 has joined the channel
[12:56] jensn has joined the channel
[12:57] CodyGray has joined the channel
[12:57] CodyGray has left the channel
[13:01] coyo has joined the channel
[13:02] kriszyp has joined the channel
[13:02] FireFly|n900 has joined the channel
[13:02] AaronMT has joined the channel
[13:03] jetienne has joined the channel
[13:03] davidsklar has joined the channel
[13:04] nowjs4 has joined the channel
[13:05] nowjs4: I need to upload a file from a Node.js utility to an external URL, the external URL expects a HTML form to be the origin so I need to POST with the body multipart/form-data, unfamilar with the prototyical etc.. what is the best approach, any libraries prebuilt? (note this is NOT the same as node accepting file uploads)
[13:06] jtrudeau has joined the channel
[13:06] seivan has joined the channel
[13:08] Bonuspunkt: nowjs4 watch the submited the data to server with a http debug proxy than build it with node
[13:08] jtrudeau has joined the channel
[13:08] sixtus42 has joined the channel
[13:08] nowjs4: can u suggest a good http debug proxy, not on windows so cant use Fiddler
[13:09] a0n has joined the channel
[13:09] FIQ has joined the channel
[13:09] asobrasil has joined the channel
[13:12] Bonuspunkt: i saw someone suggesting http://www.charlesproxy.com/ but havnt used it
[13:12] jensn has joined the channel
[13:13] hij1nx has joined the channel
[13:14] jlecker has joined the channel
[13:14] coleGillespie has joined the channel
[13:15] dyer has joined the channel
[13:15] dyer has joined the channel
[13:15] c4milo has joined the channel
[13:15] confoocious has joined the channel
[13:15] seangaffney has joined the channel
[13:16] overra has joined the channel
[13:16] dyer_ has joined the channel
[13:16] dyer_ has joined the channel
[13:17] jscheel has joined the channel
[13:17] jscheel has joined the channel
[13:19] boaz has joined the channel
[13:19] arpegius has joined the channel
[13:20] mahna: Anybody know if I can move npm's modules location (and point npm to it)? Somehow node_modules wasn't installed at the location identified by 'node install prefix.'
[13:20] ap3mantus has joined the channel
[13:21] prettyrobots has joined the channel
[13:21] sirkitree has joined the channel
[13:22] maritz has joined the channel
[13:23] marvin_ has joined the channel
[13:23] maritz: jade question: executing code ( like +new Date() ) in attributes does not work anymore. it complains about "unexpected token: )".
[13:23] maritz: any idea when that was changed and why?
[13:23] maritz: is there some other way now?
[13:24] maritz: and why is tj not online yet. (the fact that it's 6:24am in vancouver does not count!)
[13:27] rauchg has joined the channel
[13:27] Murugaratham has joined the channel
[13:29] bentruyman has joined the channel
[13:30] jvduf has joined the channel
[13:30] jvduf has joined the channel
[13:31] marvin_ has joined the channel
[13:32] ansy has joined the channel
[13:32] cbibler_ has joined the channel
[13:34] sreeix has joined the channel
[13:34] CIA-104: node: 03Ryan Dahl 07master * rdae73db 10/ (src/tcp_wrap.cc test/simple/test-tcp-wrap-listen.js): tcp_wrap: onread oncomplete parameter massage - http://bit.ly/kzHZoQ
[13:34] CIA-104: node: 03Ryan Dahl 07master * rddc9893 10/ (3 files in 2 dirs): tcp_wrap: implement socket.connect() - http://bit.ly/iKegTl
[13:34] ryah: \o/
[13:34] tuhoojabotti: /o\
[13:35] sonnym has joined the channel
[13:35] miccolis has joined the channel
[13:36] xandrews has joined the channel
[13:36] JJMalina has joined the channel
[13:37] Yoric has joined the channel
[13:37] maritz: okay, if anyone is interested: apparently in v0.11.1 the attribute starting character was changed from : to =. (previously both worked, now only : ). so, either stick with 11.0 or change = to :. (at least i hope that that'll fix my problem. no way of knowing without booting my other os, which doesn't have an internet connection. thus i give no warranty at all.)
[13:37] miccolis_ has joined the channel
[13:37] temp01 has joined the channel
[13:39] tuhoojabotti: Hmm
[13:39] tuhoojabotti: What's the easiest way to like replace, but convert to uppercase with js?
[13:39] tuhoojabotti: I can't think atm.
[13:40] tuhoojabotti: like if I have a list of words I want in uppercase
[13:40] tuhoojabotti: and loads of data to convert
[13:40] fangel has joined the channel
[13:40] thomblake has joined the channel
[13:40] adambeynon has joined the channel
[13:42] sioked has joined the channel
[13:42] ansy: http://stackoverflow.com/questions/1026069/capitalize-the-first-letter-of-string-in-javascript
[13:42] charlesyin has joined the channel
[13:43] tuhoojabotti: no no
[13:43] tuhoojabotti: not first letter :3
[13:44] MrNibbles has joined the channel
[13:44] ansy: the whole string?
[13:44] tuhoojabotti: no
[13:45] tuhoojabotti: hmm
[13:45] devdazed has joined the channel
[13:45] tuhoojabotti: I have like ["ktm","bmw"] and I want those words uppercase in the string
[13:45] tuhoojabotti: like replace("ktm", "KTM", s)
[13:45] davve: .toUpperCase() ?
[13:46] ansy: yeah, toUpperCase()
[13:46] tuhoojabotti: mm-m
[13:46] pastak has joined the channel
[13:47] ansy: I've got a performance issue I'm trying to dissect. I've got an express server and one of the requests spawns a process that takes ~1200ms to run. I use console.time() from the moment I get the request to response and it seems to take that long, but when I load test this endpoint it seems like the requests are being serviced in serial. but I try another endpoint and it works while the others are still waiting.
[13:47] ryanmcgrath has joined the channel
[13:48] brolin has joined the channel
[13:48] kruckenb has joined the channel
[13:48] ansy: is there something with child_process.spawn I need to do to avoid this?
[13:48] overra has joined the channel
[13:48] idefine has joined the channel
[13:49] tuhoojabotti: for(var i=0; i!=upr.length;i++) {make = make.replace(upr[i],upr[i].toUpperCase());}
[13:49] tuhoojabotti: I guess this'll do :P
[13:49] mapleman has joined the channel
[13:50] CIA-104: node: 03Ryan Dahl 07master * r97296e4 10/ (src/tcp_wrap.cc test/simple/test-tcp-wrap-listen.js): tcp_wrap: add writeQueueSize - http://bit.ly/mUC3qI
[13:50] mahna: Is npm's default install option global or local?
[13:50] ansy: mahna mine seems to install in the local directory without changing anything
[13:50] edsu has joined the channel
[13:51] ansy: wait, do you mean npm itself or the packages it installs?
[13:51] mahna: ansy: (packages) It should be local, right? But when I install in the cwd, I have nothing there. It's putting stuff in ~/node_modules.
[13:52] mahna: RTFM says local installs in cwd, but it isn't putting stuff there.
[13:52] edsu: i'm a node.js newbie, and was wondering if anyone else has seen anything like this https://github.com/joyent/node/issues/1189 events.js:45 Error: EBADF, Bad file descriptor ; it's intermittent and seems to be load related
[13:52] edude03 has joined the channel
[13:52] eirikb has joined the channel
[13:53] tuhoojabotti: My work morale always improves when I'm doing some simple script to make my job easier :D
[13:53] robhawkes has joined the channel
[13:53] ansy: mahna odd. when I run npm in /the/directory/ it installs things in /the/directory/node_modules
[13:53] eirikb: Hey. I suddenly get "Can't render headers after they are sent to the client" from node-static when trying to open my page, after doing npm update. I'm using it combined with dnode. Any thoughts?
[13:54] blahblahblahpity has joined the channel
[13:54] mahna: ansy: Not me (npm 1.0.10). 
[13:54] mahna: Is it configurable? I thought it wasn't anymore--either global or local (cwd).
[13:55] charlesyin has joined the channel
[13:56] beawesomeinstead has joined the channel
[13:56] ansy: mahan I'm on npm 1.0.3 on OS X. I have't changed my configuration and haven't tried
[13:57] bnoordhuis: edsu: that's (probably) an artifact of how epoll works
[13:57] prettyrobots has joined the channel
[13:58] edsu: bnoordhuis: oh yeah?
[13:58] jj0hns0n has joined the channel
[13:59] bnoordhuis: edsu: it's a long and complicated story but sometimes the epoll set can contains fds for connections that no longer exist
[13:59] bnoordhuis: -can
[13:59] edsu: bnoordhuis: maybe some limitation of my system? or is it a bug?
[13:59] jj0hns0n has joined the channel
[14:00] edsu: bnoordhuis: maybe i could put some exception handling around it and things would be ok?
[14:00] bnoordhuis: edsu: probably neither, it's just how epoll works in edge cases
[14:00] bnoordhuis: edsu: yes but not try/catch, you should probably hook uncaughtException
[14:00] edsu: bnoordhuis: node falls over unfortunately
[14:00] kriszyp has joined the channel
[14:01] bnoordhuis: edsu: it does if you let uncaught exceptions fall through, yes
[14:02] avalanche123 has joined the channel
[14:02] criswell has joined the channel
[14:02] bnoordhuis: edsu: http://stackoverflow.com/questions/4895581/ebadf-while-recv-after-epoll-wait for some back story
[14:02] edsu: bnoordhuis: oh maybe express should catch it, or my code?
[14:03] edsu: bnoordhuis++
[14:03] v8bot:  edsu has given a beer to bnoordhuis. bnoordhuis now has 2 beers.
[14:03] davidwalsh has joined the channel
[14:03] JJMalina has joined the channel
[14:03] edsu: v8bot: why thank you :)
[14:03] v8bot: edsu: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[14:03] bnoordhuis: edsu: either express or your code should catch it yes
[14:03] steffkes has joined the channel
[14:04] seivan has joined the channel
[14:04] davidwalsh has left the channel
[14:05] edsu: bnoordhuis: thanks!
[14:07] edsu: bnoordhuis: although I guess it shoudl be caught in socket.io
[14:07] bnoordhuis: edsu: maybe - just as long as someone catches it
[14:07] jbergstroem: cursed be GH-814_test
[14:08] bnoordhuis: edsu: but i doubt express or socket.io will (or should) hook uncaughtException, it's a global event
[14:08] CIA-104: node: 03Ryan Dahl 07master * rea89697 10/ src/tcp_wrap.cc : tcp_wrap: Don't return req object on error. - http://bit.ly/mM8BCo
[14:08] CIA-104: node: 03Ryan Dahl 07master * r9696c27 10/ (src/tcp_wrap.cc test/simple/test-tcp-wrap-connect.js): tcp_wrap: implement shutdown - http://bit.ly/jYeOwF
[14:09] edsu: bnoordhuis: have you used express much, is there a sensible place where i should catch it?
[14:09] edsu: bnoordhuis: in my code?
[14:10] bnoordhuis: edsu: i'm probably the only one in this channel who has never used express :/
[14:10] edsu: bnoordhuis: heheh
[14:10] edsu: bnoordhuis: here's the app if you are curious http://wikistream.inkdroid.org/
[14:11] themiddleman has joined the channel
[14:12] bnoordhuis: edsu: is that you? was there a post about it on HN recently?
[14:17] Poetro has joined the channel
[14:18] baudehlo has joined the channel
[14:18] jslatts has joined the channel
[14:18] sudhirjonathan has joined the channel
[14:18] prettyrobots has joined the channel
[14:19] edsu: bnoordhuis: yeah, it's me :)
[14:20] eee_c has joined the channel
[14:20] edsu: bnoordhuis: i guess it scrolled off HN already :)
[14:21] bnoordhuis: edsu: i think it was a couple of days ago, maybe last week - but a neat project
[14:21] baudehlo: whoah, what's this blahblahblahpity stuff?
[14:21] edsu: bnoordhuis: oh it must've been something else, this only went online yesterday
[14:23] roger_raymond has joined the channel
[14:23] eirikb has left the channel
[14:24] sirkitree has joined the channel
[14:24] sivy has joined the channel
[14:24] sirkitree has left the channel
[14:26] luke` has joined the channel
[14:26] mckk has joined the channel
[14:26] mckk: hello
[14:27] overra has joined the channel
[14:27] ryanfitz has joined the channel
[14:29] ansy: anyone with child_process.spawn experience? 
[14:29] ditesh|cassini has joined the channel
[14:29] Arenstar has joined the channel
[14:30] mckk: I have a problem with express.session.MemoryStore(). I'm trying to create a new instance of User (it's a class I defined myself with lots of prototyped methods). When I access the user through session store later (req.session.user) I can't seem to access any of the methods defined in prototypes. Does MemoryStore serialize data and remove all the methods?
[14:31] fakewaffle has joined the channel
[14:32] fakewaffle: some bot in here is pulling people into a channel i think?
[14:32] pifantastic has joined the channel
[14:32] fakewaffle has left the channel
[14:32] tuhoojabotti: Hmm?
[14:33] Destos has joined the channel
[14:39] Esteb has joined the channel
[14:39] herbySk has joined the channel
[14:41] sioked has joined the channel
[14:41] bbrn has joined the channel
[14:43] p_nitsch has joined the channel
[14:44] bbrn: hey guys, sorry if this is a really lame question - i am new to node. I want to parse a JSON string into a JavaScript array in node, so I decided to use jQuery's .parseJSON. However I cannot figure out how to "include" jquery's functionality in the node file.
[14:44] bbrn: any help will be appreciated :)
[14:45] systemfault: bbrn: Ecmascript 5 implementations have their own
[14:45] systemfault: bbrn: JSON.parse and JSON.stringify
[14:45] bbrn: systemfault, thanks! i will try that!
[14:46] baudehlo: ansy: just ask your question :)
[14:47] charlesyin has joined the channel
[14:47] SamuraiJack has joined the channel
[14:48] Emmanuel__: hm, I have an annoying issue with the POST method (with http)
[14:48] ansy: baudehlo I'm using child_process.spawn to run a process that takes about 1200ms to run. When I trigger this multiple times from express from the request to the response console.log says it takes 1200ms. but the real response rate seems much slower
[14:48] seivan has joined the channel
[14:48] ansy: console.log -> console.time
[14:48] Emmanuel__: I'd like to post some JSON to a php script, I set 'Content-Type': 'application/json' in the header, and the appropriate content-length
[14:48] Emmanuel__: but php return a 411 error (content-length missing)
[14:49] kriszyp has joined the channel
[14:49] Emmanuel__: what is the proper way of posting a blob of data (I don't want to go through url querystring)
[14:49] ansy: baudehlo by slower, I mean it seems like the requests are being processed in serial. but I know that's not the case because I can hit other endpoints that respond immediately while the child processes are churning
[14:51] sandropadin has joined the channel
[14:52] quackquack has joined the channel
[14:52] baudehlo: maybe your child process makes sure only one instance is running at once?
[14:52] mendel_ has joined the channel
[14:52] baudehlo: what's the child process doing?
[14:53] herbySk74 has joined the channel
[14:53] fangel has joined the channel
[14:54] ansy: hmm... it's doing some intense calculations. but I start the console.time() on app.get and do console.timeEnd() after writing the response. 
[14:54] Dreamer3: is installing things globally with npm depreciated now?
[14:55] ansy: if the spawned process itself is holding things up wouldn't console.time() show an increase in runtime?
[14:55] dmcquay has joined the channel
[14:55] shinuza_ has joined the channel
[14:55] softdrink has joined the channel
[14:56] Dreamer3: ok -g :)
[14:56] ansy: baudehlo, also, I write and read the spawned process's stdin and stdout. not sure if that matters
[14:56] nonnikcam has joined the channel
[14:57] catshirt has joined the channel
[14:57] softdrink: who's running blahblahblahpity?
[14:57] Renegade001 has joined the channel
[14:59] baudehlo: ansy: honestly I don't know. One thing to be aware of is that if you're maxing the CPU, you're fucked anyway.
[15:00] baudehlo: unless you have multiple CPUs
[15:00] jetienne has joined the channel
[15:00] thejh has joined the channel
[15:01] EyePulp has joined the channel
[15:01] ansy: well, I've got multiple cores for sure. 
[15:01] jetienne: [17:00] <blahblahblahpity> recent 30 chat logs. powered by node.js v0.4.1 ;-)
[15:01] jetienne: stop this spammer please
[15:01] jetienne: is it here ? no my bad
[15:01] woot130823651167 has joined the channel
[15:02] baudehlo: yeah it's here. If I want a backlog of chat in this channel I'd use bitlbee
[15:02] thejh: does anyone here happen to know about a node module for replacing some string by another one in a stream of string chunks?
[15:02] fangel has joined the channel
[15:02] thejh: nothing fancy, no regex, just strings
[15:02] dguttman has joined the channel
[15:03] edsu: bnoordhuis: turns out my system was basically being starved by tcp connections in TIME_WAIT
[15:03] mbrevoort has joined the channel
[15:03] edsu: bnoordhuis: a few sysctl commands later, things seem to be pretty stable
[15:04] mckk has joined the channel
[15:04] overra has joined the channel
[15:04] bnoordhuis: edsu: you were hitting your ulimit?
[15:05] ansy: baudehlo I'm more thrown that it looks like express is waiting before servicing requests. at least that's what it looks like according to the logging
[15:05] djcoin has joined the channel
[15:05] mckk: hi, I asked this before, but maybe now someone will know the answer: I have a problem with express.session.MemoryStore(). I'm trying to create a new instance of User (it's a class I defined myself with lots of prototyped methods). When I access the user through session store later (req.session.user) I can't seem to access any of the methods defined in prototypes. Does MemoryStore serialize data and remove all the methods?
[15:06] bingomanatee has joined the channel
[15:06] baudehlo: ansy: sorry, can't help you there. I don't do web stuff.
[15:06] lukegalea: mckk: pretty sure it does. I think the intent is that you store an id in the session and grab the actually model in some middleware
[15:06] mynyml has joined the channel
[15:06] lukegalea: so you have access to req.user..
[15:08] edsu: bnoordhuis: no not a ulimit ; just a practical limit i guess
[15:08] justin____ has joined the channel
[15:08] briznad has joined the channel
[15:08] edsu: my ulimit was 'unlimited'
[15:08] saurabhverma has joined the channel
[15:09] lukegalea: edsu: we need to get shirts printed that say "my ulimit is unlimited" on them.
[15:09] mckk: lukegalea: So I need to store the user insances in some associative array that uses sessionids as keys and add a middleware that accesses the sessionid and adds the instance from the array to req.user?
[15:09] edsu: lukegalea: :)
[15:10] ap3mantus has joined the channel
[15:10] lukegalea: mckk: not really. 
[15:10] lukegalea: mckk: store req.session.user_id 
[15:10] isaacs has joined the channel
[15:10] edsu: bnoordhuis: i added the sysctl stuff i did to the issue ticket, which I guess i'll close now since it's not really a bug or anything https://github.com/joyent/node/issues/1189
[15:10] BigWookie has joined the channel
[15:10] BigWookie: Hey I have a problem with Step, i won't get to the second function, is there a common problem or an alternative to Step?
[15:11] lukegalea: and then in your middleware if req.session.user_id exists do a query of your DB (?mysql? mongo? redis?), grab the user  and/or construct your model object..
[15:11] lukegalea: a
[15:11] lukegalea: nd 
[15:11] lukegalea: s
[15:11] lukegalea: tor
[15:11] lukegalea: e 
[15:11] lukegalea: ouch sorry.. and set req.user to that.
[15:11] lukegalea: on each request in the "authentication" middleware.
[15:11] lukegalea: edsu: http://dailyjs.com/2010/12/06/node-tutorial-5/
[15:12] mckk: lukegalea: ok. Why would storing it in some associative array be a big problem. Is it because we can get too many users?
[15:12] sveifinnphone has joined the channel
[15:13] ansy: baudehlo, just did a test where the endpoint would alternate fast and slow responses and it still did each request serially for the same url. makes me think either chrome or node is limiting the number of requests per client to the same url
[15:13] lukegalea: mckk: it's only a problem if either you want to restart your server (ie deploy a new version) and not wack all your users.. or if you want to scale out to additional processors or servers.
[15:13] lukegalea: a single node proc will only work on one processor.
[15:13] lukegalea: so by using the approach described in that tutorial you can scale easily.
[15:14] EyePulp: ansy: don't browsers always limit the number of resources they'll grab from the same destination host?  It used to be two, but now it's like 6?
[15:14] Renegade001 has joined the channel
[15:14] mckk: lukegalea: It's a school project and the deadline is tomorrow, so I'll try the array for now. But I'll remeber to access the db in the future
[15:14] jtsnow has joined the channel
[15:14] mckk: thank you!
[15:14] ansy: eyepulp, yeah, but this looks like it's just one. I'm not sure what chrome uses these days
[15:14] EyePulp: limit - meaning number grabbed at the same time
[15:14] jakehow has joined the channel
[15:14] lukegalea: mckk: no prob. in that case, fuck it. :) Just toss it in memory :)
[15:15] tmpvar has joined the channel
[15:15] dayom has joined the channel
[15:15] KingJamool has joined the channel
[15:15] mckk: lukegalea: the weird thing is I tested it before writing stuff like that and MemoryStore seems to keep the functions for some time, but then when accessed somewehere else the functions dissappear :(
[15:15] RORgasm has joined the channel
[15:15] bronson has joined the channel
[15:16] erictj has joined the channel
[15:16] gqlewis has joined the channel
[15:16] CodyGray has joined the channel
[15:16] bnoordhuis: edsu: peculiar, never had that problem myself - is lowering the time_wait grace period a real solution or a stop-gap measure?
[15:16] CodyGray has left the channel
[15:17] hij1nx has joined the channel
[15:17] rabidewok has joined the channel
[15:17] d0k has joined the channel
[15:17] febits has joined the channel
[15:17] edsu: bnoordhuis: i don't really know what a 'real solution' would be
[15:18] nibblebot has joined the channel
[15:18] edsu: bnoordhuis: other than getting a better machine for the app to run on
[15:18] lukegalea: mckk: Not sure. What you are trying to do is pretty far afield from what was intended, so I wouldn't be surprised of lots of craziness. I've seen what you describe done by using a custom middleware that actually stores the objects in an associative array (it's done by AjaxIM) and it's fine other than the scaling issues.
[15:19] mckk: lukegalea: Cool. I'll see what happens. Thank you again!
[15:19] lukegalea: mckk: no prob
[15:21] febits[0] has joined the channel
[15:23] ansy: yeah, it's a browser thing. dangit. I just tried with two browsers and everything was fine
[15:23] bshumate has joined the channel
[15:23] bshumate has joined the channel
[15:23] philtor has joined the channel
[15:25] tulloss has left the channel
[15:26] BigWookie has left the channel
[15:27] vipaca has joined the channel
[15:27] vipaca has joined the channel
[15:27] cloudhead has joined the channel
[15:28] daneroo has joined the channel
[15:28] sixtus42 has joined the channel
[15:28] daneroo: id there a simple way to change the timestamp format from : require('util').log('Timestmaped message.');
[15:29] daneroo: from '16 Jun 11:26:50' to '2011-06-16 11:26:50'
[15:30] febits has joined the channel
[15:30] ansy: roll your own that wraps console.log()?
[15:30] sixtus42: ryah: since you didn't answer the question clearly, does libuv already have file support? if not, schedule?
[15:30] prettyrobots has joined the channel
[15:30] Renegade001 has joined the channel
[15:31] newy has joined the channel
[15:32] JoshC1 has joined the channel
[15:32] aliem has joined the channel
[15:32] blueadept has joined the channel
[15:34] caolanm has joined the channel
[15:34] KingJamool has joined the channel
[15:38] brettgoulder has joined the channel
[15:38] sharkbone has joined the channel
[15:39] madsleejensen has joined the channel
[15:39] niftylettuce has joined the channel
[15:39] sub_pop has joined the channel
[15:40] mandric has joined the channel
[15:40] pjacobs2 has joined the channel
[15:41] aliem has joined the channel
[15:42] infynyxx has joined the channel
[15:42] mbrevoort has joined the channel
[15:43] overra has joined the channel
[15:45] baudehlo: sixtus42: libeio already works decently on Win32 (as decently as it does on Unix's).
[15:46] daneroo has joined the channel
[15:46] mapleman has joined the channel
[15:47] pen_ has joined the channel
[15:47] bibabot has joined the channel
[15:47] Renegade001 has joined the channel
[15:47] Yuffster_work has joined the channel
[15:48] pen has joined the channel
[15:49] sixtus42: baudehlo: I am just wondering how to use it for files, missing a smile example. in contrast, a full screncast on tcp and http
[15:49] sixtus42: s/smile/small/ curse you iOS autocorrect
[15:49] killfill has joined the channel
[15:51] pyrony has joined the channel
[15:51] CodyGray has joined the channel
[15:51] dall: guys soneone used APE server?
[15:51] ryanfitz has joined the channel
[15:51] CodyGray has left the channel
[15:51] mape: tried it ages ago
[15:51] stephank has joined the channel
[15:52] baudehlo: sixtus42: use libeio instead.
[15:52] fangel has joined the channel
[15:53] bshumate has joined the channel
[15:53] bshumate has joined the channel
[15:53] sixtus42: baudehlo: portability to windows will suffer
[15:54] baudehlo: to some extent.
[15:54] baudehlo: but not really.
[15:54] baudehlo: actually no what do you mean portability to windows will suffer?
[15:55] baudehlo: libeio works on windows.
[15:55] jetienne: app.get('/player/stats/:label:format', function(req, res){ <- is there something wrong in this way to give routes in express.js ?
[15:56] mbrevoort: anyone know how to set agent.maxSockets for HTTPS?
[15:56] sixtus42: baudehlo: if libev is great on windows, then why is there libuv?
[15:56] dall: mape, what do you think about that?
[15:56] brettgoulder has joined the channel
[15:56] dall: it's different to nodejs but it seems good
[15:56] Odd1Out has joined the channel
[15:56] mape: dall: likes it a lot when i first saw it, then it didn't make sense any more when I found node
[15:57] dall: mape., do you use socket.io ?
[15:57] mape: dall: yes
[15:57] dall: it seems their JSF is good too
[15:57] Aria has joined the channel
[15:57] mape: it still depends on mootools?
[15:57] mikl has joined the channel
[15:57] mikl has joined the channel
[15:57] dall: you can decide....if use mootool or not
[15:57] baudehlo: sixtus42: I said nothing about libev.
[15:58] dall: you can use the framework you want
[15:58] madsleejensen has joined the channel
[15:58] thoolihan has joined the channel
[15:59] tmedema has joined the channel
[15:59] sixtus42: baudehlo: sorry, I always confuse the two
[15:59] amerine has joined the channel
[15:59] mbrevoort: ah, nevermind... looks like the https lib getAgent takes an options object rather the (host, port)
[15:59] baudehlo: right. So libuv is there because libev sucks on Windows.
[16:00] tmedema: Has anyone been streaming audio to the browser while converting codecs (eg. using ffmpeg)? I'm wondering how to set a proper content-length header (which seems to be compulsory) when you do not know how many bytes the total file will have due to real-time conversion.
[16:00] patrickarlt has joined the channel
[16:00] baudehlo: tmedema: that's what chunked encoding is for.
[16:01] sixtus42: baudehlo: so libuv and libeio plays nice together? or will libuv eventually supersede using libeio?
[16:02] baudehlo: I *think* they do... and nobody knows what the long term plan is because ryah doesn't communicate it aside from saying "Windows support!".
[16:02] baoist has joined the channel
[16:02] tmedema: baudehlo: I know, but many browsers do not play nicely with chunked encoding
[16:02] fakewaffle has joined the channel
[16:02] baudehlo: really?
[16:02] tmedema: apparently content-length is pretty much compulsory to get things to work cross browser
[16:03] CoverSlide has joined the channel
[16:03] sixtus42: baudehlo: Tnx, so back to bugging ryah 
[16:03] tbranyen: tmedema: yeah i've seen that issue with some chunked pdf rendering
[16:03] dgathright has joined the channel
[16:03] tmedema: baudehlo: well, that's what this author of Sound Manager 2 seems to be saying, he's pretty experienced in the field as well although I do not have the link to the corresponding thread atm
[16:04] tmedema: I am considering just setting an insane length and then just brutely kill the connection.
[16:04] baudehlo: lol
[16:05] tmedema: tbranyen: hmm, not sure if those are related, I thought this problem was caused by bad implementations of the audio tag
[16:05] baudehlo: there was talk on the mailing list about streaming audio to the browser, and a lot of code flung around.
[16:05] dgathright_ has joined the channel
[16:05] baudehlo: but I didn't follow it cos I didn't see the use-case.
[16:05] tbranyen: tmedema: ummm i can't imagine modern browsers struggling with chunked encoding re: audio tag
[16:05] tmedema: baudehlo: hmm I doubt I missed it, but I will do another search
[16:06] tbranyen: maybe in some development builds
[16:06] baudehlo: the one with money offered for a solution.
[16:06] jetienne has joined the channel
[16:06] patrickarlt has joined the channel
[16:06] tmedema: baudehlo: hmm, I'm sure that was about audio on the server side
[16:07] baudehlo: https://groups.google.com/group/nodejs/browse_thread/thread/5b62789562697956?pli=1
[16:07] baudehlo: oh maybe
[16:07] baudehlo: see I told you I didn't follow it :)
[16:07] tmedema: baudehlo: I believe you =)
[16:08] tmedema: tbranyen: baudehlo : please see this, http://getsatisfaction.com/schillmania/topics/cross_browser_issues_with_no_content_length_chunked_transfers
[16:09] tmedema: some pretty detailed browser specific information reflection that chunked encoding does not cope well with the audio tag
[16:09] rpj8 has joined the channel
[16:10] tbranyen: tmedema: i'll read the article, but i'm pretty sure the solution is that header the browser looks for
[16:10] tbranyen: to determine length
[16:10] tbranyen: not content-length
[16:10] endtwist has joined the channel
[16:10] tbranyen: like song length
[16:10] tbranyen: in seconds or some shit
[16:10] huhlig-dc has joined the channel
[16:10] tmedema: oh really? Never heard about that one
[16:10] CoverSlide has joined the channel
[16:11] BillyBreen has joined the channel
[16:11] endtwist: socket.io: using WebSocketMainInsecure.swf for flashsocket and an inline policy file, why would it try to connect, wait about 30 seconds, and then fail? (http://pastebin.com/VvRthCJh)
[16:11] jamey-uk has joined the channel
[16:11] tbranyen: tmedema: i'll see if i can find it
[16:11] rpj8: Why does the following crash and say  Error: Can't use mutable header APIs after sent. ? I don't see how I'm sending any headers anywhere: http://jsfiddle.net/uH3vX/
[16:11] rpj8: this is with express, btw
[16:12] bergie has joined the channel
[16:13] jamey-uk: npm won't let me install any packages whatsoever :( I keep getting "npm ERR! error installing express@2.3.11 Error: ENOENT, No such file or directory '/home/jamey/node_modules/express/package.json'" what is going on?
[16:13] tbranyen: looks like its the duration http header
[16:13] tbranyen: tmedema: http://lists.xiph.org/pipermail/theora/2010-January/003218.html
[16:13] sudhirjonathan has joined the channel
[16:13] tbranyen: maybe something along those lines
[16:14] tbranyen: although i doubt ie respects that
[16:14] tbranyen: even tho i dunno why the guy was testing ie 8 since it doesn't have audio tag anyways
[16:14] mc_greeny has joined the channel
[16:14] joshthecoder has joined the channel
[16:15] tmedema: tbranyen: the same issue is apparent with Flash
[16:15] tmedema: and I'm afraid I also need to support flash
[16:15] jamey-uk has left the channel
[16:15] tbranyen: tmedema: yeah i worked on a basic music streaming service in node like 4 months ago and i think i came across a bunch of issues
[16:15] tmedema: tbranyen: it does seem like the best I can do is provide a content length of eg. 100MB and then just terminate the connection when I am done sending audio
[16:16] dgathright has joined the channel
[16:16] pickels has joined the channel
[16:16] tbranyen: tmedema: i think that some browsers will think the song is ridiculously long if you do that
[16:16] Xano has joined the channel
[16:16] tbranyen: screwing with the slider
[16:16] tbranyen: if thats not a problem
[16:16] tbranyen: i'd say thats a reasonable solution
[16:16] kawaz_air has joined the channel
[16:16] hybsch has joined the channel
[16:16] tmedema: tbranyen: ah well I am not using the audio interface, and I do not allow users to change playback position
[16:17] tmedema: I guess so
[16:17] abraham has joined the channel
[16:19] sioked has joined the channel
[16:20] killfill has joined the channel
[16:20] Cleer has joined the channel
[16:21] topaxi has joined the channel
[16:22] patrickarlt has joined the channel
[16:23] fangel_ has joined the channel
[16:24] epopt37 has joined the channel
[16:24] charleyd has joined the channel
[16:25] overra has joined the channel
[16:26] eresair has joined the channel
[16:28] context: anyone with an iphone wanna play chess ?
[16:28] kriskowal has joined the channel
[16:29] Dinosaurus has joined the channel
[16:29] Corren has joined the channel
[16:29] tuhoojabotti: Android<3
[16:29] daneroo has joined the channel
[16:29] patrickarlt_ has joined the channel
[16:29] Dinosaurus: using createWriteStream, how can i create a directory if it no exist?
[16:29] srid has joined the channel
[16:29] srid has joined the channel
[16:30] Aria: You can't. You have to use fs.mkdir.
[16:30] Dinosaurus: what if dir exist
[16:30] Aria: Then you handle that error or ignore it.
[16:31] piscisaureus has joined the channel
[16:31] Aria: fs.mkdir('dirname', function(err) { if(/EEXIST/.match(err.message)) { console.log("directory already exists") } })
[16:31] langworthy has joined the channel
[16:32] fakewaffle: mairo6230
[16:32] fakewaffle: dude 1234
[16:32] darshanshankar: blup: yt?
[16:32] Dinosaurus: i sees
[16:32] fakewaffle: i keep getting spammed random shit from a bot lol
[16:32] sourcode has joined the channel
[16:33] tuhoojabotti: :/
[16:34] jtsnow has joined the channel
[16:34] fakewaffle: i found the culprate! http://www.youtube.com/user/Mario6230 haha :?
[16:34] confoocious has joined the channel
[16:35] perezd has joined the channel
[16:35] fakewaffle: damn russians?
[16:37] p_nitsch has joined the channel
[16:39] daneroo has joined the channel
[16:40] jamey-uk has joined the channel
[16:40] mckk: bye
[16:41] jamey-uk: npm won't let me install any packages, it keeps giving the error " ENOENT, No such file or directory" for every package I try to install, does anyone know what's going on?
[16:41] puffpio has joined the channel
[16:43] Aria: I don't know, but you might have a dangling symlink somewhere in the .npm folder.
[16:43] Aria: Something like that, so it can't create its cache.
[16:43] jamey-uk: but this is a totally fresh install of node and npm on a freshly installed OS :'(
[16:44] dmcquay_ has joined the channel
[16:45] rabidewok has joined the channel
[16:46] pyrony has joined the channel
[16:49] daneroo has joined the channel
[16:50] DTrejo has joined the channel
[16:50] jensn has joined the channel
[16:51] empt has left the channel
[16:51] pixel13 has joined the channel
[16:53] yozgrahame has joined the channel
[16:55] ShreeKavi has joined the channel
[16:55] mundanity has joined the channel
[16:55] Kryt has joined the channel
[16:56] joshontheweb has joined the channel
[16:58] swistak has joined the channel
[16:59] aheckmann has joined the channel
[17:00] CodyGray1 has joined the channel
[17:00] CodyGray1 has left the channel
[17:00] tilgovi has joined the channel
[17:00] tilgovi has joined the channel
[17:02] daneroo has joined the channel
[17:04] dgathright_ has joined the channel
[17:04] Yoric has joined the channel
[17:04] daneroo has joined the channel
[17:05] sudhirjonathan_ has joined the channel
[17:05] overra has joined the channel
[17:06] jetienne has joined the channel
[17:07] tjholowaychuk has joined the channel
[17:07] jetienne: https://github.com/gasman/jasmid/blob/master/stream.js nice exmaple of data parsing
[17:07] harth has joined the channel
[17:09] wadey has joined the channel
[17:09] CoverSlide: and of creating objects without "new"
[17:11] fizx has joined the channel
[17:12] TooTallNate has joined the channel
[17:12] reid has joined the channel
[17:12] dguttman has joined the channel
[17:13] Yoric has joined the channel
[17:13] daneroo has joined the channel
[17:13] etaty has joined the channel
[17:15] sechrist has joined the channel
[17:15] lenard_alm has joined the channel
[17:17] systemfault: I thought it was a convention in node to use classical inheritance :/
[17:18] bitwise_ has joined the channel
[17:18] jerrysv has joined the channel
[17:20] Swizec has joined the channel
[17:20] charlesyin has joined the channel
[17:22] adambeynon has joined the channel
[17:22] Skola: CoverSlide, is it bad/good? new?
[17:23] samsonjs has joined the channel
[17:23] eb4890 has joined the channel
[17:25] rabidewok has joined the channel
[17:25] mjr_ has joined the channel
[17:26] darshanshankar has joined the channel
[17:26] TooTallNate has joined the channel
[17:26] matty_ has joined the channel
[17:28] langworthy has joined the channel
[17:28] mikeal has joined the channel
[17:28] aperiodic has joined the channel
[17:29] saurabhverma has joined the channel
[17:29] mmatey has joined the channel
[17:30] springmeyer has joined the channel
[17:30] isaacs has joined the channel
[17:30] wilmoore has joined the channel
[17:31] dgathright_ has joined the channel
[17:31] daneroo has joined the channel
[17:32] _rain has joined the channel
[17:32] sethmcl has joined the channel
[17:34] Murvin has joined the channel
[17:34] febits has joined the channel
[17:35] kriskowal has joined the channel
[17:36] `3rdEden has joined the channel
[17:36] jakehow has joined the channel
[17:41] gustavowt has joined the channel
[17:41] zpao has joined the channel
[17:42] Kryt has joined the channel
[17:43] dinedal has joined the channel
[17:43] gustavowt: Hello everybody, I'm developing a plugin node in C + +, got a jump on http://lupomontero.e-noise.com/blog/writing-node-js-modules-in-cpp
[17:44] hojberg has joined the channel
[17:44] jerrysv has joined the channel
[17:44] gustavowt: porem nao consigo compilar o bin�rio, alguem poderia me ajuda, ele acusa que n�o consegue encontrar a biblioteca node.h
[17:44] gustavowt: sorry..
[17:44] gustavowt: but I can not compile the binary, could someone help me, he complains that he can not find the library node.h
[17:45] overra has joined the channel
[17:45] aliem has joined the channel
[17:46] CoverSlide: gustavowt: whereis node.h
[17:46] dinedal: Hi everyone, running node v0.4.8 here, and having an interesting SSL issue. Enabling HTTPS on node drops the max concurrent connections I am getting by a factor of 10
[17:46] gustavowt: /usr/local/include/node
[17:47] CoverSlide: maybe #include <node/node.h>
[17:47] gustavowt: I'm trying to compile with the following command
[17:47] gustavowt: g++ mysql_node.cpp -o mysql_node -L/usr/local/include/node -I/usr/local/include/node -lnode
[17:47] CoverSlide: hmm
[17:47] gustavowt: the error
[17:47] gustavowt: /usr/bin/ld: cannot find -lnode
[17:48] jerrysv: gustavowt: -L/usr/local/lib/node
[17:48] jerrysv: not include
[17:49] gustavowt: sorry, it was a desperate attempt, skip-L
[17:49] baudehlo1 has joined the channel
[17:49] trotter has joined the channel
[17:50] daneroo has joined the channel
[17:50] quackquack: is installing mongodb from apt-get a good idea?
[17:50] gustavowt: if i remove -lnode
[17:51] gustavowt: g++ mysql_node.cpp -o mysql_node  -I/usr/local/include/node
[17:51] gustavowt: the following error ocurred 
[17:51] jerrysv: gustabowt: are you using node-waf ?
[17:51] gustavowt: no
[17:52] jerrysv: may help if you are trying to build a node addon, it handles all of the compile/linker stuff to build the .node file
[17:52] mjr_: dinedal: what do you mean by "drops"?  Are you testing with ab or something like that?
[17:53] dgathright has joined the channel
[17:54] gustavowt: hmmm, im looking for this now, perhaps help-me 
[17:54] thejh has joined the channel
[17:55] eirikb has joined the channel
[17:55] eirikb: Hello. Anyone else having issues with combining dnode and node-static?
[17:55] CrabDude has joined the channel
[17:56] CoverSlide: gustavowt: have you looked at this yet >> http://howtonode.org/how-to-module
[17:57] niftylettuce: chapel++
[17:57] v8bot:  niftylettuce has given a beer to chapel. chapel now has 10 beers.
[17:57] chapel: lol
[17:58] Skola: CoverSlide I am a bit of a retard with my current irc client, but did you respond to my question about whether or not using new Object() is good or bad?
[17:58] gustavowt: CoverSlide, its work....
[17:58] gustavowt: from node-waf
[17:58] dnjaramba has joined the channel
[17:59] CoverSlide: Skola: new was basically put in so users of ther languages, class-based ones, would feel more comfortable
[17:59] CoverSlide: the problem is it creates the illusion that you can use js for creating classes
[17:59] Skola: ok
[18:00] Skola: I should really be learning proper JS
[18:00] puffpio has joined the channel
[18:00] CoverSlide: it's not terrible, mind you, it's widely used anyway
[18:00] gustavowt: thanks CoverSlide , jerrysv  thanks for attention
[18:00] Skola: I want to do things right though
[18:01] Skola: or atleast know about different ways
[18:01] Skola: I've been using new myself a lot
[18:01] zmbmartin: if I have a list of "this, that, then, if this is a string" and I want to split(',') how do I also remove just the first space so I get this ['this', 'that', 'then', 'if this is a string'] instead of ['this', ' that', ' then', ' if this is a string']
[18:01] RC1140 has left the channel
[18:01] Yoric has joined the channel
[18:02] zmbmartin: nevermind
[18:02] xerox: hehe
[18:02] CoverSlide: regexes?
[18:02] lenard_alm has left the channel
[18:02] cryptix has joined the channel
[18:02] xerox: .split(', ')
[18:03] codemanki has joined the channel
[18:03] CoverSlide: v8: "this, that, then, if this is a string".split(/\s*,\s*/)
[18:03] v8bot: CoverSlide: ["this","that","then","if this is a string"]
[18:03] eirikb: v8bot: var r=function(b){this.b=b;this.a=function(){return this.b;}};[r(1),r(2),new r(3), new r(4)];
[18:03] v8bot: eirikb: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[18:03] eirikb: v8: var r=function(b){this.b=b;this.a=function(){return this.b;}};[r(1),r(2),new r(3), new r(4)];
[18:03] v8bot: eirikb: [undefined,undefined,{b:3,a:function (){return this.b;}},{b:4,a:function (){return this.b;}}]
[18:03] mmatey: hello..
[18:03] sudhirjonathan has joined the channel
[18:04] eirikb: v8: var r=function(b){this.b=b;this.a=function(){return this.b;}};[r(1).a(),r(2).a(),new r(3).a(),new r(4).a()];
[18:04] v8bot: eirikb: TypeError: Cannot call method 'a' of undefined
[18:04] Skola: wtf madness
[18:05] coreb has joined the channel
[18:05] eirikb: Strange... would guess b on global object would work. Oh well, should prove a point anyway
[18:06] codemanki: Hello, maybe question is not really related to node.js, but, i cannot install express with npm. it gives me this - http://pastie.org/private/op3ymt5va89wla576wqrzw
[18:06] codemanki: path in log totally exists... and file http://registry.npmjs.org/mime/-/mime-1.2.2.tgz  is also reachable 
[18:06] eirikb: codemanki: sudo?
[18:06] codemanki: sudo is bad for npm? no?
[18:07] mmatey: Im sure this is asked alot.. anyone happen to have a good example of a long process simulation (such as a 5sec setTimeout) for an httpserver? I can't for the life make it respond async... 
[18:07] eirikb: Would prefer without, but the path is accessible for you?
[18:07] DevX101 has joined the channel
[18:07] CoverSlide: npm goes wonky sometimes
[18:08] AvianFlu has joined the channel
[18:08] eirikb: mmatey: ?  setTimeout(function() { console.log('oh, hai');}, 5000);
[18:08] codemanki: sudo npm outputs the same :(
[18:08] mmatey: ya exactly.. except if I toss in a res.end("Hello") its blocking..
[18:09] tuhoojabotti: ACTION is currently taking a shit
[18:09] eirikb: Or async, you mean like  var hack = function(c) {setTimeout(c, 5000)}... or setTimeout(function(){//stuff... c()}, 5000)?
[18:09] mmatey: let me toss up a quick pastie.. this is driving me crazy
[18:10] codemanki: guys, so no idea about npm ? :(http://pastie.org/private/op3ymt5va89wla576wqrzw
[18:12] mmatey: http://pastie.org/private/wq51jcgknckwsvykruzw  something like that
[18:12] mmatey: the issue is if I run it twice in two different windows, it waits for the first to finish before moving to the second
[18:13] mbrevoor_ has joined the channel
[18:14] yunweb has joined the channel
[18:14] yunweb: hello ppl :)
[18:14] FredrIQ has joined the channel
[18:15] sioked has joined the channel
[18:15] tuhoojabotti: hello
[18:15] quijote has joined the channel
[18:15] mmatey: howdy
[18:15] gozala has joined the channel
[18:20] dinedal: mrj_: I mean drops as in the max # of connections that can be handled w/o errors goes down
[18:20] adambeynon has joined the channel
[18:22] romainhuet has joined the channel
[18:25] necromancer has joined the channel
[18:25] overra has joined the channel
[18:25] llrcombs: Hey, anyone wanna tell me if a certain idea + implementation is any good?
[18:25] llrcombs: http://search.npmjs.org/#/nttpd
[18:25] necromancer: how do i update npm itself?
[18:26] llrcombs: necromancer: isn't it npm update npm?
[18:26] necromancer: i guess
[18:26] necromancer: aren't we on version 1.0? i ran npm update and npm update npm and my npm --version is "0.2.11-5"
[18:26] izuzak has joined the channel
[18:27] llrcombs: nttpd works like a regular httpd, except that it parses files with the extension ".njs" in a Node VM
[18:27] llrcombs: I'll add support for scripts that stay running and such later
[18:28] llrcombs: anybody think that's a good idea?
[18:29] insin has joined the channel
[18:29] llrcombs: it means you don't have to screw with the http library and your server callbacks every time you want to add a new file to a server, and it'll serve up .htm and .js files normally as well
[18:29] llrcombs: just go to a dir and type nttpd
[18:30] llrcombs: (or set launchd or similar to load nttpd --base=/path/to/server/root/)
[18:32] supster has joined the channel
[18:32] blup has joined the channel
[18:32] brianseeders has joined the channel
[18:32] mike5w3c has joined the channel
[18:33] jacobolus has joined the channel
[18:34] tiglionabbit has joined the channel
[18:34] saschagehlich: any tutorials for creating a facebook authentication with node.js / express.js?
[18:34] AvianFlu has joined the channel
[18:35] stagas: saschagehlich: https://github.com/bnoguchi/everyauth
[18:35] saschagehlich: hooray that was fast
[18:35] Anon984 has joined the channel
[18:35] saschagehlich: whoa that thing looks awesome
[18:35] Anon984: hi
[18:35] saschagehlich: thx stagas
[18:35] Anon984: hello
[18:35] Anon984: hello
[18:36] saschagehlich: hey
[18:36] stagas: saschagehlich: it takes a little trial and error to configure it but it works ok
[18:37] sirdancealot has joined the channel
[18:38] samsonjs has joined the channel
[18:38] eirikb has left the channel
[18:38] izuzak: hi all. can someone explain the reasoning behind killing the event loop if an unhandled exception bubbles all the way up to it and there are other events waiting to be processed by the event loop? if there are other events waiting to be processed by the event loop - why kill everything just because an exception is thrown in just one? browsers don't behave like this - the event loop survives an exception and continues with the executi
[18:38] puffpio has joined the channel
[18:39] jensn has joined the channel
[18:39] charlesyin has joined the channel
[18:39] emattias has joined the channel
[18:39] CoverSlide: izuzak: that's why you catch errors
[18:39] darshanshankar has joined the channel
[18:39] CoverSlide: node.js isn't a browser
[18:39] jameson has joined the channel
[18:40] xerox: izuzak: on the other hand it is very easy to implement the behavior you describe
[18:42] omni5cience has left the channel
[18:42] riven has joined the channel
[18:42] riven has joined the channel
[18:42] izuzak: CoverSlide -- i'm aware of that :). i'm wondering why you'd want to kill the whole loop. why not let other events go on? if you intentionally want to react to exceptions - you can add a handler for them. right?
[18:42] CoverSlide: if you want to handle errors a certain way, write it in your code
[18:42] CoverSlide: not everyone wants that behavior
[18:42] JimBastard has joined the channel
[18:42] izuzak: xerox -- you mean by adding a listener for the uncaughtException event?
[18:43] CoverSlide: you could do process.on('uncaughtException', .. )
[18:43] xerox: exactly
[18:44] CoverSlide: but node is a platform for making server apps, and in most server apps, if there is an uncaught exception, it kills the process
[18:44] kristsk has joined the channel
[18:44] dnjaramba has joined the channel
[18:45] LowValueTarget has joined the channel
[18:45] \toothrot has joined the channel
[18:45] gkmngrgn has joined the channel
[18:46] izuzak: again, i agree. some people will want one thing, some will want the other. i was asking for the reasoning of choosing the current behavior. killing the server just because one request made a hiccup also doesn't make that much sense, right? 
[18:46] PhilK has joined the channel
[18:46] bradleymeck__ has joined the channel
[18:47] CoverSlide: the server doesn't know what you want until you write it
[18:47] CoverSlide: if an event relies on something that errored out, then what's the point in keeping those events alive?
[18:48] CoverSlide: unless you tell it specifically it can go on
[18:50] CoverSlide: it's pretty standard in any language / platform that uncaught errors will end the process by default. i don't know of any where you have to explicitly tell the process to die on error
[18:50] lukegalea: CoverSlide: I don't understand why express doesn't catch exceptions before they go "all the way up" though. it sucks that every user connected will get kicked if only one obsure code path has an uncaught exception.
[18:50] tjholowaychuk: lukegalea ?
[18:50] tjholowaychuk: dont throw
[18:51] lukegalea: tjholowaychuk: hey. ya, we talked in the group about this.
[18:51] tjholowaychuk: express can't do anything logical with an uncaught exception
[18:51] CoverSlide: write the exception handling in then
[18:51] matjas has joined the channel
[18:51] izuzak has joined the channel
[18:52] izuzak: pardon for that... but, as you said, how does the server know that the event relies on something that errored out? 
[18:52] CoverSlide: izuzak: it doesn't know anything until you tell it to
[18:52] mike5w3c_ has joined the channel
[18:53] CoverSlide: that's why the best behavior is to stop
[18:53] lukegalea: tjholowaychuk: I think I'd like express to only error out that one request, not every request being handled by that process. I understand that in theory my requests could not be "share nothing" which is why express can't make the assumption that all is good and it should proceed.
[18:53] lukegalea: b
[18:53] lukegalea: ut 
[18:53] tjholowaychuk: it can't
[18:54] tjholowaychuk: if you throw in a different stack, express can't do anything logical with that
[18:54] tjholowaychuk: it has no clue which request
[18:54] lukegalea: tjholowaychuk: aaah...
[18:54] tjholowaychuk: you can ignore/log out uncaughtExceptions if you want
[18:54] tjholowaychuk: but that's up to you
[18:54] lukegalea: I see. I figured there was a good reason :)
[18:54] hugdubois_ has joined the channel
[18:54] tjholowaychuk: best to just not throw
[18:54] tjholowaychuk: and do next(err)
[18:55] tjholowaychuk: which express can handle
[18:55] whyme has joined the channel
[18:55] tjholowaychuk: it's a fundamental node issue
[18:55] pquerna: `3rdEden: yeah.. i should of... brain is too fried for too many things though :)
[18:55] lukegalea: tjholowaychuk: I'm totally cool using next(err). Working great for me, I just find that I need to wrap any "foreign" libs like Flot, etc in try { } catch and call next(err).
[18:55] tjholowaychuk: right, yeah
[18:56] lukegalea: I happen to use Flot a lot so it feels like a bigger deal to me than I bet it really is.
[18:56] lukegalea: I could just hack all that into Drawback.. hmm.. note to self.
[18:56] `3rdEden: pquerna :p I'm certainly gonna digg a bit deeper in cast. It like a quite useful project
[18:56] Hinton1 has joined the channel
[18:56] Renegade001 has joined the channel
[18:57] jhurliman has joined the channel
[18:58] broofa has joined the channel
[18:58] lukegalea: tjholowaychuk: Thanks again for your help with that. 
[18:58] tjholowaychuk: np
[18:58] gustavowt: wich the best library to execute mysql querys on nodeJS?
[18:59] k1ttty has joined the channel
[18:59] CoverSlide: lots of them
[18:59] CoverSlide: mysql or db-mysql
[18:59] CoverSlide: iirc mysql is node-native
[18:59] tuhoojabotti: mysql
[18:59] cjm has joined the channel
[19:00] tuhoojabotti: worked the best for me
[19:00] gustavowt: im 
[19:00] lukegalea: tjholowaychuk: While we are chatting, I have an idea re: Drawback. I was thinking of building a higher level visualization library on top of Flot via drawback. Do you find it hard to stay DRY with learnboost code doing graphing?
[19:00] tuhoojabotti: still does
[19:00] gustavowt: was really in doubt between these two
[19:00] tjholowaychuk: lukegalea: not overly, but I dont personally work on that much, just prototyped the SS/CS graphing after node-canvas was built
[19:01] lukegalea: tjholowaychuk: cool. It's Nate these days?
[19:01] bradleymeck__ has joined the channel
[19:01] Clex: https://github.com/MrMEEE/bumblebee/commit/a047be85247755cdbe0acce6#diff-1 hahaha
[19:01] tjholowaychuk: lukegalea damian was doing our reporting stuff
[19:01] tjholowaychuk: AFAIK
[19:01] tjholowaychuk: at least the initial stuff
[19:02] thejh has joined the channel
[19:02] baoist has joined the channel
[19:02] tuhoojabotti: gustavowt: mysql worked out tje box
[19:02] tuhoojabotti: the*
[19:02] ph^ has joined the channel
[19:02] tuhoojabotti: db-mysql didn't install
[19:03] AvianFlu has joined the channel
[19:03] OhMeadhbh has joined the channel
[19:04] gustavowt: im watching db-mysql, and seems more to be easy to use
[19:04] matjas has joined the channel
[19:04] tuhoojabotti: perhaps
[19:05] lukegalea: tjholowaychuk: oh ya. I've spoken to him. All recent commits to drawback are Nate, but he may not be the one actually using it in the app. I'll ping damian to see what he thinks of it. I'm planning on attempting it soon but if you guys don't have something like it, there's probably a reason.
[19:05] Hinton has joined the channel
[19:05] tuhoojabotti: but I don't mind writing my qieries
[19:05] tjholowaychuk: lukegalea cool
[19:05] Tidwell has joined the channel
[19:05] tuhoojabotti: phone typing<3
[19:06] gustavowt: and this library uses the libmysqlclient
[19:06] overra has joined the channel
[19:06] tuhoojabotti: depends on the use really
[19:06] Destos has joined the channel
[19:06] tuhoojabotti: my mysql needs are very simple
[19:07] svenlito has joined the channel
[19:07] Kryt: is there a handy list anywhere of sites using node.js in production as the core piece of their stack (ie, not just as glue or providing 1 or 2 pieces of functionality)
[19:07] zmbmartin: can I create my own ObjectId in mongoose?
[19:07] fizx has joined the channel
[19:07] gustavowt: im use 2 databases, with nagios and ndoutils
[19:08] m00p has joined the channel
[19:08] tuhoojabotti: Kryt: If you find one, tell me so I can add my site ;D
[19:08] llrcombs: http://search.npmjs.org/#/nttpd <-- anyone think this is a good idea?
[19:08] fizx has joined the channel
[19:08] gustavowt: im need to alternate between databases
[19:08] tbranyen: llrcombs: absolutely
[19:08] tbranyen: i think i'll give that a shot
[19:09] tbranyen: llrcombs: you write it?
[19:09] llrcombs: thrayen: yeah
[19:09] llrcombs: it runs like httpd
[19:09] tbranyen: llrcombs: do you run it in a folder?
[19:09] llrcombs: yeah, do to a dir and type nttpd
[19:09] tbranyen: nice, i've been using a lua server similar to that
[19:09] llrcombs: it serves HTML, CSS, JS... normally
[19:09] tbranyen: but its very unstable
[19:09] tbranyen: i wrote it in a day
[19:09] tbranyen: i'll give this a shot
[19:09] llrcombs: but .njs files get run in a Node VM
[19:09] broofa_ has joined the channel
[19:09] tmpvar has joined the channel
[19:09] llrcombs: it's pretty new, but rather stable
[19:09] tbranyen: yeah i just need it for static stuff
[19:09] tbranyen: pythons is slow as shit
[19:10] JimBastard: llrcombs: not the way the source code looks
[19:10] tbranyen: the simplehttpserver thing
[19:10] CoverSlide: i wrote something like that first time i did node
[19:10] JimBastard: tbranyen: we are releasing http-server today
[19:10] tbranyen: does it work in a folder?
[19:10] JimBastard: tbranyen: super simple CLI wrapper for node-static
[19:10] tbranyen: neato
[19:10] JimBastard: tbranyen: yeah, it has auto-index
[19:11] tbranyen: well release it already
[19:11] JimBastard: im on it!
[19:11] JimBastard: < 3 hours
[19:11] tbranyen: i hate hours
[19:11] llrcombs: tbrayen: like it?
[19:11] CIA-104: node: 03Ryan Dahl 07master * r8bf5b8d 10/ lib/net_uv.js : Initial pass at new net.js for libuv - http://bit.ly/mDM87R
[19:11] tuhoojabotti: ♡
[19:11] tbranyen: llrcombs: haven't tried it, i'll give it a shot after i'm done writing these emails i'm supposed to be doing right now
[19:12] charleyd has joined the channel
[19:12] prettyrobots has joined the channel
[19:12] llrcombs: it's new, and a little experimental, but it lets you use Node.js like you'd use PHP on an apache server
[19:12] chrisdickinson: llrcombs: out of curiosity, what's provided to the .njs files? `request` and `response`, globally?
[19:12] llrcombs: PM me if you have any issues
[19:12] erictj has joined the channel
[19:13] prettyrobots has joined the channel
[19:13] JimBastard: llrcombs: your design is fucked
[19:13] JimBastard: llrcombs: you need to have each .njs file export a method that gets executed
[19:13] llrcombs: chrisdickinson: req and res are globals, but you also get echo, setHeader, redirect, setStatus, and a couple others for convenience
[19:13] llrcombs: and require
[19:13] JimBastard: liar: you shouldnt be using eval / runInContext
[19:13] JimBastard: err
[19:13] JimBastard: llrcombs: you shouldnt be using eval / runInContext
[19:14] lackac has joined the channel
[19:14] llrcombs: JimBastard: that's going to be an option, I just put the runInNewContext implementation together
[19:14] JimBastard: llrcombs: i'd make it mandatory
[19:14] JimBastard: llrcombs: and remove runInNewContext completely
[19:14] llrcombs: probably a second type: .njf (Node.js function)
[19:14] JimBastard: llrcombs: use require()
[19:14] JimBastard: im telling you, you are going to regret runInNewContext
[19:14] JimBastard: if you keep this project up
[19:14] JimBastard: force the user to make each page a commonjs module
[19:14] patcito has joined the channel
[19:14] JimBastard: its gonna be one extra line
[19:14] llrcombs: I'm adding that now
[19:15] chrisdickinson: JimBastard: any specific reason runInNewContext is gross?
[19:15] JimBastard: module.exports = function()
[19:15] pifantastic has joined the channel
[19:15] JimBastard: chrisdickinson: its eval
[19:15] chrisdickinson: (outside of .njs files not working as one would expect?)
[19:15] sirdancealot has joined the channel
[19:15] CoverSlide: eval itself isn't bad
[19:16] saschagehlich: stagas: do you know whether _every_ facebook user has a username?
[19:16] CoverSlide: at least with runInNewContext you can create a somewhat secure sandbox
[19:16] MooGoo: runInNewContext is the best kind of eval
[19:16] JimBastard: the second you introduce eval() into your application , you've fucked yourself
[19:16] JimBastard: if its connected to user input
[19:16] MooGoo: node.js itself uses eval to load modules
[19:16] MooGoo: so I guess you should stop using node
[19:16] stagas: saschagehlich: no idea
[19:16] llrcombs: MooGoo: agreed @ best type
[19:16] chrisdickinson: JimBastard: require uses the `vm` module to load modules
[19:16] llrcombs: wait, it does?
[19:17] MooGoo: yes
[19:17] jameson: prettier way to handle undefined callback functions?
[19:17] llrcombs: then why should I force modules when they're just wrappers for vm?
[19:17] MooGoo: it loads the file and wraps it in (function(module, exports, require, etc) {} )()
[19:17] JimBastard: chrisdickinson: sure, but its a central place for loading modules, you dont want to introduce a new entry point
[19:17] gozala has joined the channel
[19:17] llrcombs: I'll add the feature, sure, but I definitely won't force it
[19:17] jameson: if (callback) { function(data,callback) } else { function(data) } or callback = callback || function () {};
[19:17] JimBastard: llrcombs: you will regre it
[19:18] tbranyen: or if(!callback) return;
[19:18] tbranyen: since you often don't want to do anything if there isn't a callback
[19:18] jameson: i do stuff with data
[19:18] chrisdickinson: JimBastard: seems like for what nttpd is doing, the expected behavior is the vm method. i'd only be comfy with it myself if it were plastered with unit tests to make sure failure cases are well documented
[19:18] jameson: just sometimes with a callback sometime without
[19:18] llrcombs: JimBastard: why?
[19:18] srid has joined the channel
[19:18] srid has joined the channel
[19:18] STUPIDWIFI has joined the channel
[19:18] jameson: tbrayen: it's optional
[19:18] tbranyen: jameson: yeah but if its an async operation with no callback the operation itself is probably useless
[19:18] llrcombs: what's so bad about using vm directly, exactly?
[19:19] tbranyen: jameson: ah nice
[19:19] stride: jameson: what about fn(data, callback || function() {});?
[19:19] llrcombs: chrisdickinson: it's new, I just haven't written the testing stuff yet
[19:19] chrisdickinson: llrcombs: the best argument i can think of against using `vm` is that it may not be what people expect
[19:19] MooGoo: it isnt
[19:19] shinuza has joined the channel
[19:19] MooGoo: it isnt safe
[19:19] cbibler_ has joined the channel
[19:19] chrisdickinson: llrcombs: oh, I gotcha. I'm just saying that for future reference. :)
[19:19] MooGoo: an infinite loop in your evald code will stall your program
[19:19] tauren has joined the channel
[19:20] llrcombs: alrighty
[19:20] tauren has left the channel
[19:20] chrisdickinson: MooGoo: just as much as an infinite loop in a `require`'d module, though.
[19:20] MooGoo: yup
[19:20] llrcombs: chrisdickinson: I'm adding module support right now
[19:20] jameson: stride: i'm using stable so default value isn't here yet ;)
[19:20] H2S04 has joined the channel
[19:20] MooGoo: but the whole term VM
[19:20] JimBastard: im not gonna explain myself. you'll see when you start reinventing the require module
[19:20] MooGoo: implies that it runs seperate from the rest of your code
[19:20] JimBastard: good luck
[19:20] stagas: JimBastard: I just added 3 eval methods to my ministore module :P https://github.com/stagas/ministore
[19:20] MooGoo: when it does not at all
[19:20] chrisdickinson: MooGoo: yeah, the naming is a little specious :P
[19:21] stride: jameson: oh, you mean the definition itself? sorry
[19:21] chrisdickinson: but it's better than trying to grab ``process.bindings('eval').Script``
[19:21] jameson: yeah
[19:21] MooGoo: there's good reason to reinvent require
[19:21] MooGoo: if you want to do hot module reloading
[19:21] MooGoo: and have your app not crash when encountering a syntax error
[19:21] ekryski has joined the channel
[19:21] Country has joined the channel
[19:21] jetienne has joined the channel
[19:21] chrisdickinson: yeah.
[19:21] MooGoo: which was important for good ol calvin here
[19:22] stride: yeah, I've done something like that for a plugin thingy back in 0.2.something. wasn't too bad imho
[19:22] JimBastard: hot module loading is a terrible idea too
[19:22] JimBastard has left the channel
[19:22] chrisdickinson: it'd be interesting to search all the directories under nttpd for *.njs, load and compile them into functions with associated context objects that could be cleared before each run.
[19:22] MooGoo: lol
[19:23] MooGoo: I bet he went and joined #jslint
[19:23] fly-away has joined the channel
[19:23] chrisdickinson: at the very least, it's nice for development -- edit a file and reload your server function.
[19:23] chrisdickinson: instead of having to constantly tab over and restart the server process manually.
[19:24] chrisdickinson: (note: this is the tiniest of gripes.)
[19:24] stride: not everybody does webapps that get hit by a shitload of people every second
[19:24] ekryski: Hey guys I have a question.  I am using express and mongoose.  So lets say I have a schema called posts and schema called comments.  I want to reference the comments schema from the posts schema like so:
[19:24] MooGoo: its important to be able to load and reload modules on the irc bot without restarting and having to reconnect to every server
[19:24] tuhoojabotti: yeah
[19:24] MooGoo: and not have the thing crash if I forget a brace somewhere
[19:24] tauren has joined the channel
[19:24] tuhoojabotti: .rehash ftw
[19:25] stride: he'd probably want you to use hook.io for that
[19:25] MooGoo: tho with the way the vm functions work currently, it is very difficult to get useful syntax error information
[19:25] tuhoojabotti: night
[19:25] chrisdickinson: llrcombs: oh, one more tiny request re: main.js: if you could separate your functions with double newlines, that'd be awesome. (this is an even tinier gripe than the aforementioned tiniest gripe above. feel free to ignore it)
[19:25] \toothrot: moogoo, just use a bnc with replay, problem solved
[19:26] MooGoo: wat
[19:26] MooGoo: oh
[19:26] chrisdickinson: (it really helps in editors like vim, where `{` and `}` jump to the next code block separated by `\n\n`)
[19:27] brianseeders has joined the channel
[19:28] junkee[] has joined the channel
[19:28] tauren: what do people use for building their apps? does everyone brew their own build process, or are there tools to get up to speed quicker?
[19:29] ekryski: Sorry guys here is my question.  I am using express and mongoose.  So lets say I have a schema called posts and schema called comments.  I want to reference the comments schema from the posts schema like so: 
[19:29] ekryski: In post.js I have the schema:
[19:29] ekryski: var postSchema = new Schema({
[19:29] ekryski: 	author_id: ObjectId,
[19:29] ekryski: 	author_name: String,
[19:29] ekryski: 	comments: [commentSchema] });
[19:29] ekryski: 	
[19:29] ekryski: and in another file called comment.js I have the schema:
[19:29] ekryski: var commentSchema = new Schema({
[19:29] ekryski: 	author_id: ObjectId,
[19:29] ekryski: 	author_name: String });
[19:29] ekryski: now if I take out the var in comment.js it works fine but if I leave it in I get an error that says that says that commentSchema is undefined in post.js.  Shouldn't leaving the var in comment.js still make commentSchema global.  I'm not sure why I am getting the error.
[19:29] MooGoo:  lol
[19:29] Corren has joined the channel
[19:29] bitwise_: any good/recent articles on debugging with node-inspector?
[19:29] tauren: i mean things like converting coffeescript to js, stylus to css, minifying, concatenating, etc.
[19:30] bitwise_: changed the first line of expresso to use node debug but i can't connect to anything with web inspector
[19:31] quijote has joined the channel
[19:32] eldar has joined the channel
[19:33] fizx has joined the channel
[19:33] ekryski: Anyone know why I might be getting that error?  It seems as if it is a scoping issue  but I don't see why adding var would do anything since commentSchema isn't inside a function.  It's not really halting me in any way I just want to maintain proper variable scope instead of making everything global.
[19:33] MooGoo: this channel keeps weird topics
[19:34] ryanfitz has joined the channel
[19:34] Calvin has joined the channel
[19:36] dnjaramba has joined the channel
[19:36] niftylettuce has joined the channel
[19:37] ekryski: nobody? really?
[19:38] niftylettuce: ekryski: ??
[19:38] niftylettuce: zmbmartin: yo yo
[19:38] niftylettuce: stagas: \o
[19:38] ekryski: it's a long post before you got here nifty.
[19:38] ekryski: I'll post again.
[19:38] CoverSlide: commentSchema will only be visible in comment.js
[19:38] CoverSlide: with var
[19:39] CoverSlide: without it it becomes global
[19:39] tauren: ekryski: please don't
[19:39] MrGoodbyte has joined the channel
[19:39] CoverSlide: paste it if you must
[19:39] ekryski: ha ha ok. i was hoping to avoid it
[19:39] CoverSlide: `paste
[19:39] gbot2: Paste links, not code. Some sites you can use: | http://www.webdevout.net/test | http://erxz.com/pb/ | http://pastebin.parentnode.org/ | Please do not use pastebin.com, the reasons are many. See `pastebin.
[19:39] tauren: ekryski: use pastebin or something
[19:39] kollapse has left the channel
[19:39] CoverSlide: wtf
[19:39] CoverSlide: `pastebin
[19:39] gbot2: Please do not use pastebin.com. There are problems with syntax highlighting and font sizes that make it hard to read, and copy/paste includes line numbers. Consider using http://www.webdevout.net/test which allows you run the code in your browser to help with debugging.
[19:40] ekryski: ok deal I will next time instead of spamming the board. Sorry bout that
[19:40] CoverSlide: oh i thought it was gonna say "Pastebin is evil" or something like that
[19:40] tauren: i meant use a pastebin of some sort, not pastebin.com.  ;)  like gist.
[19:41] ParadoxQuine has joined the channel
[19:41] coreb: calling res.end(), how does it affect the socket lifecycle?
[19:41] CoverSlide: it should close the socket, no?
[19:41] ekryski: ok so is there a way to avoid making the commentSchema variable completely global but still access it from the one file?
[19:41] llrcombs: OK, I added that and npm publish'd
[19:41] CoverSlide: exports.commentSchema
[19:41] llrcombs: (also, git commit -a'd and git push origin master'd)
[19:41] CoverSlide: then you can comment = require('comment')
[19:42] CoverSlide: and have comment.commentSchema
[19:42] ekryski: oh yes. duh! I knew it was something dumb. Thanks CoverSlide :-)
[19:42] llrcombs: chrisdickinson: I intend to add a feature where all files that are require'd get cached as functions, maybe the searching would work as well
[19:43] llrcombs: and they're .njf's if they're modules
[19:43] llrcombs: like the new code?
[19:43] llrcombs: I might add module and/or CGI-script support so it can run .php and .cgi's
[19:44] llrcombs: THEN it could replace apache
[19:44] llrcombs: (t'll be infinitely more configurable later, with vhosts and such)
[19:44] CoverSlide: i've started a project like this
[19:44] CoverSlide: never finished it tho
[19:44] CoverSlide: i had some simple cgi scripts running
[19:45] KingJamool has joined the channel
[19:45] matyr has joined the channel
[19:45] CoverSlide: one problem with using require() is that i think node caches them, or at least it did
[19:45] MooGoo: it does
[19:46] llrcombs: oh, good! then I don't have to do that myself!
[19:46] MooGoo: tho I think you can remove the cached files in code
[19:46] CoverSlide: so if running in the same process, if you require the file, and need to hotfix something
[19:46] CoverSlide: it will require the old one
[19:46] ekryski has left the channel
[19:46] llrcombs: mayhaps it should auto-purge a file from cache when it's modified
[19:46] fizx has joined the channel
[19:47] sinke has joined the channel
[19:47] llrcombs: how would you guys reccomend calling a .php?
[19:47] sinke: recommended as blocking :)
[19:48] MooGoo: I dont think there are really many options
[19:48] framlin: reject it ;)
[19:48] insin: "don't call us..."
[19:48] sudhirjonathan has joined the channel
[19:48] MooGoo: you cannot call an external program in node in a blocking matter
[19:48] MooGoo: far as I know
[19:48] llrcombs: lemme search that
[19:48] onurb has joined the channel
[19:48] sinke: Im trying to use nowJS but i got this err> socket = new io.Socket('**SERVER**', {port: **PORT**});.... anyone?
[19:48] llrcombs: cuz I think you can
[19:48] MooGoo: hm
[19:48] MooGoo: why would you want to anyway
[19:49] xerox: sinke: that is not an error
[19:49] sinke: unexpected token:*
[19:49] STUPIDWIFI has joined the channel
[19:49] xerox: it also gives you the line number and column number of the spurious *
[19:49] framlin: if you want to run php, why not use apache?
[19:50] llrcombs: http://nodejs.org/docs/latest/api/child_processes.html#child_process.exec <-- thoroughly non-blocking
[19:50] CoverSlide: just spawn() and pipe the output
[19:50] MooGoo: yea...*non*-blocking
[19:50] llrcombs: oh, I misread your post
[19:50] avalanche123 has joined the channel
[19:50] llrcombs: thought you said non- earlier
[19:50] llrcombs: not a problem
[19:50] sinke: xerox **PORT** , unexpected token * is on a **PORT
[19:50] MooGoo: you have spawn and exec
[19:50] CoverSlide: spawn would be your best bet
[19:50] MooGoo: pretty much your only options
[19:50] MooGoo: yes
[19:50] llrcombs: not a problem
[19:51] sechrist has joined the channel
[19:51] MooGoo: then the program can be run interactivly in a way
[19:51] xerox: sinke: do you understand that ports are meant to be numbers
[19:51] Druide_ has joined the channel
[19:51] sinke: xerox.. do you understand that nowJS said "npm it and try examples" 
[19:51] llrcombs: nttpd actually has a handler interface for other filetypes (e.g. there could be a njss format that prints formatted source like .phps)
[19:52] xerox: sinke: thanks for being humble whilst asking your questions
[19:52] llrcombs: there's just no way of adding them yet
[19:52] sinke: xerox.. when i try hellowrold_server.js thats what i get
[19:52] sinke: xerox.. do you use nowJS
[19:52] bartt has joined the channel
[19:53] llrcombs: framlin: what if you want to run a node.js-based HTTP server, and you have a bunch of node-based stuff, but you have some legacy PHP scripts that need to keep running until you've rewritten them in Node?
[19:53] xerox: link me to such example I haven't read your whole discussion
[19:53] MooGoo: no one has written a node.js based apache-like http server yet?
[19:53] sinke: nowjs.com
[19:53] llrcombs: that's what I'm doing right now
[19:53] CoverSlide: i'm sure lots of people tried
[19:54] CoverSlide: i started one
[19:54] MooGoo: now is more of a communications layer
[19:54] xerox: sinke: maaaaan
[19:54] overra has joined the channel
[19:54] MooGoo: even for running node apps it would be useful
[19:54] sinke: xerox? :)
[19:54] CoverSlide: but then i kinda wanted to back away from the apache way of doing things
[19:54] patzak has joined the channel
[19:54] patzak has joined the channel
[19:54] xerox: sinke: it is not on the homepage
[19:54] xerox: what is your problem :C
[19:54] CoverSlide: didn't like 'reinventing the wheel'
[19:55] voodootikigod: ryah: you around
[19:55] sinke: xerox: https://github.com/Flotype/now/blob/d937bbdc8aa745aa1aef6bce712a3cb303205d94/examples/helloworld_example/helloworld_server.js
[19:55] voodootikigod: dealing with the damn event loop disappearing again (like at codeconf)
[19:55] llrcombs: e.g. I've got http://rodgercombs.webhop.net/maps/freenode/node.js/true/
[19:55] voodootikigod: seems system
[19:55] voodootikigod: ic
[19:55] MooGoo: but the node way of being a webserver makes every script you run within it a single-point-of-failure
[19:55] xerox: sinke: ooh.
[19:55] xerox: ok no idea xD
[19:56] CoverSlide: true
[19:56] sinke: if setting port and server is required it will be writen somewhere...
[19:56] llrcombs: it runs on an Apache server (for now) with a few PHP (for now) backend scripts, but it uses a node.js server-sent-events script that has to be proxied by Apache
[19:56] fizx has joined the channel
[19:56] swaj has joined the channel
[19:57] ekryski has joined the channel
[19:57] xerox: sinke: try #nowjs
[19:57] llrcombs: I want to be able to run the whole server on Node, and have the PHP scripts run as if they were in Apache, pending a node.js rewrite, with no proxying involved
[19:57] sinke: if it exists i will :)
[19:57] xerox: sinke: it's written there on the homepage
[19:57] fizx has joined the channel
[19:57] ekryski has left the channel
[19:57] jetienne: stagas: are you around ? i need your 2D animation skills :)
[19:57] sinke: it exists :)
[19:57] ekryski has joined the channel
[19:57] sinke: xerox.. is it
[19:57] xerox: yep on the left
[19:58] MooGoo: nowjs is actually a nice little shim to smooth over inter-process-communication in node
[19:58] CoverSlide: gmm
[19:58] CoverSlide: i mean
[19:58] CoverSlide: hmm
[19:58] MooGoo: always wished node had better facilities to communicate with child processes than just stdin and stdout
[19:58] MooGoo: node child processes at least
[19:58] sinke: thanks
[19:59] DEVX_ has joined the channel
[19:59] llrcombs: any reccomendations on how to get a Java bot to tell a Node program that it's just made a new file?
[19:59] xerox: sinke: np
[19:59] llrcombs: right now, I'm using a directory watcher, but that can't be very efficient...
[19:59] CoverSlide: or somain sockets
[19:59] ekryski: that nowjs is pretty zexy.  I have been wanting to try it out for a while
[19:59] MooGoo: java bot?
[19:59] llrcombs: MooGoo: IRC bot
[19:59] voodootikigod: how do i compile node into debug mode again
[20:00] voodootikigod: anyone
[20:00] llrcombs: it's the grunt work behind http://rodgercombs.webhop.net/maps/freenode/node.js/true/
[20:00] MooGoo: you can have node keep a socket server open that the java bot could log into and communicate with
[20:00] CoverSlide: depends on the bot api
[20:00] llrcombs: CoverSlide: I have (and have edited) the source code
[20:00] llrcombs: of the bot
[20:00] _Sorensen has joined the channel
[20:01] llrcombs: (and the server [wrote the server])
[20:01] llrcombs: no non-using-a-port solution?
[20:01] llrcombs: (if not, I'll use a port, sure)
[20:01] CoverSlide: domain socket?
[20:01] ezmobius has joined the channel
[20:01] MooGoo: er
[20:02] MooGoo: maybe you if the java bot knew the pid of your node app, it could send a signal to it that way
[20:02] MooGoo: process.on('SIGWHATEVER'
[20:02] jbpros has joined the channel
[20:02] llrcombs: can you send data beyond a sig name in a signal?
[20:02] CoverSlide: named pipe?
[20:02] MooGoo: dunno
[20:02] llrcombs: ooh! named pipes!
[20:02] llrcombs: I somehow completely forgot those existed!
[20:03] llrcombs: d'oh
[20:03] llrcombs: brilliant
[20:03] llrcombs: now I've just gotta learn a bit more Java to figure out how those work there, and read more of the Node API docs to find out how they work here
[20:04] bitwise_: so is expresso the way to go for unit testing in node?
[20:04] Skola: or jasmine
[20:04] Skola: and there's vows too
[20:04] Skola: expresso + should is nice
[20:04] CoverSlide: probaby just fileoutputstream like it's a standard file
[20:04] forzan has joined the channel
[20:04] CoverSlide: i dunno for sure
[20:04] bitwise_: thanks Skola i will check out jasmine
[20:04] Skola: embarras de richesse
[20:04] sub_pop has joined the channel
[20:04] bitwise_: s/should/shoulda?
[20:04] dnjaramba has joined the channel
[20:05] Skola: negative
[20:05] Skola: should.js
[20:05] bitwise_: k
[20:05] Skola: I like jasmine a lot personally
[20:05] quackquack: how does mongoose tell me when there is an error on a model when I save?
[20:06] MooGoo: I have to drive in 40 minutes, should I take another shot or two of jack or hold off
[20:06] CoverSlide: hm no fs.mkfifo?
[20:06] onurb has left the channel
[20:06] MooGoo: why not just use mkfifo
[20:06] ekryski: @quack I think it just throws an error up the stack (if your using express)
[20:06] MooGoo: with child.exec
[20:06] llrcombs: looks like I'm looking for http://nodejs.org/docs/latest/api/fs.html#fs.ReadStream
[20:06] CoverSlide: i dunno, keep it in-node
[20:06] FIQ has joined the channel
[20:07] MooGoo: that looks new
[20:07] llrcombs: then as for the Java bit... gonna need to goole that one
[20:07] llrcombs: *google
[20:07] ekryski: you should see the error in your log
[20:07] quackquack: ekryski: I am using express. how do I grab the error and let the client know?
[20:08] sudhirjonathan has joined the channel
[20:08] tjholowaychuk: quackquack it should pass the error in a callback
[20:08] tjholowaychuk: the old mongoose didnt
[20:08] tjholowaychuk: for some reason
[20:08] ekryski: yep. thanks tj
[20:08] quackquack: tj, is there a way to get a human-readable error from it?
[20:08] tjholowaychuk: no clue
[20:08] tjholowaychuk: i dont really use it
[20:08] tjholowaychuk: personally
[20:09] quackquack: oh, okay
[20:09] ekryski: ya I'm not sure either.
[20:09] CoverSlide: oh crap i'm at work
[20:09] CoverSlide: i should do work stuff
[20:09] MooGoo: irc is work
[20:09] ph^ has joined the channel
[20:09] MooGoo: hard work
[20:09] ekryski: I've been meaning to lend a hand with updating the mongoose documentation. Gotta get on that
[20:12] llrcombs: nttpd's new error handling scheme for errors in Node files: write the output as HTML containing a <p> with error.message and a <pre> with error.stack
[20:12] sixtus42 has joined the channel
[20:13] teemow has joined the channel
[20:13] AvianFlu has joined the channel
[20:13] Cover|Work: llrcombs: i'd recommend making that customizable
[20:14] llrcombs: it will be once I've written the configuration file parser
[20:14] Calvin has joined the channel
[20:14] llrcombs: I wonder if there's a module for that
[20:15] llrcombs: anyone know of a config file module?
[20:15] llrcombs: if not, I'll probably just make it JSON
[20:15] SubStack: is there a trick I'm missing to make vm.runInNewContext(src) show line numbers inside the src for the stack trace?
[20:16] Cover|Work: eval'
[20:16] MooGoo: uh
[20:16] Cover|Work: d code tends to interpret everything as line 1
[20:16] MooGoo: vm.runInNewContext(src, filename)
[20:16] Cover|Work: for some browsers for me at least
[20:16] SubStack: oh?
[20:16] SubStack: aha
[20:17] SubStack: erm doesn't seem to change anything
[20:17] MooGoo: uh
[20:17] charleyd has joined the channel
[20:17] MooGoo: is there an associated file
[20:17] MooGoo: or is it just a string
[20:18] SubStack: just a string
[20:18] MooGoo: yea actuall eval() gives me line numbers
[20:18] MooGoo: for plain strings
[20:19] quackquack: could anyone point me to a sample web app using mongoose? 
[20:19] Skola: I have some ugly shit on github
[20:19] Skola: https://github.com/basdirks
[20:19] quackquack: ty
[20:19] Cover|Work: learnboost.com ?
[20:19] Skola: has basic mongoose stuff
[20:19] Skola: but is not pretty
[20:20] sinke: if you have to make clock on a page that is synchronised with clock on a server, what will you do
[20:20] jesusabdullah: I think we ALL do, Skola 
[20:20] zmbmartin: how do I access the id of an embedded doc that I just pushed with mongoose?
[20:20] Skola: sure, but I have quite pretty code on my dev box
[20:20] Skola: well I'd like to think so
[20:20] Skola: I'll push it to gh next week
[20:20] jesusabdullah: I see
[20:21] jesusabdullah: I've been too busy driving to do any coding lately
[20:21] Cover|Work: SubStack: maybe a cr/lf problem ... ?
[20:22] Sidnicious has joined the channel
[20:22] Sidnicious has joined the channel
[20:22] llrcombs: yeah, looks like it's JSON time
[20:23] Cover|Work: llrcombs: or just do a simple ini file syntax
[20:23] llrcombs: not really as expandable
[20:23] llrcombs: doesn't do objects and such
[20:23] Cover|Work: true
[20:23] S1kx: after testing node.js mongodb vs. php mongodb and getting results of the PHP extension being more than 2x as fast I am wondering if PHP might be a better choice even though I will have >500 concurrent requests?
[20:23] llrcombs: what if I want my users to be able to supply multiple vhosts?
[20:25] MooGoo: JSON makes for great conf files
[20:25] MooGoo: or just plain JS objects
[20:26] MooGoo: sometimes its nice to be able to throw inline functions in with the rest of your configuration if you are feeling hackish
[20:26] llrcombs: if(opts.configFile){config = JSON.parse(fs.readSync(opts.configFile));}
[20:26] Bradleymeck has joined the channel
[20:27] llrcombs: MooGoo: I'll let them specify .njf files if they want functions
[20:27] MooGoo: I just hate always having to quote my keys...
[20:28] llrcombs: that bugs me too, but I don't like the idea of having the config file _be_ an executable
[20:28] zmbmartin: anyone have any idea how I can get the id of the embedded doc I just pushed in mongoose?
[20:28] llrcombs: (well, pseudo-executable)
[20:28] MooGoo: probably not the best idea when people other than you might want to use your software
[20:28] llrcombs: exactly
[20:29] broofa has joined the channel
[20:30] yozgrahame has joined the channel
[20:31] llrcombs: is there any way in node.js of checking if a file OR an "ancestor" of that file exists?
[20:31] ekryski: S1kx let me know how that goes.  I am in the same boat as you.  Right now we are going to be benching node with mongo but we might also try nginx php mongo stack
[20:31] llrcombs: e.g. there's a file called test.njf
[20:31] llrcombs: I wanna be able to do checkFunction("test.njf"); and get true, but also checkFunction("test.njf/party") and also get true
[20:31] newy_ has joined the channel
[20:31] sudhirjonathan has joined the channel
[20:32] rworth: I'm working on a globalization module (used to be jquery-global, will be globalize.js). It will have multiple culture files as well as the main file. Each culture file will add to the globalize module.
[20:32] S1kx: ekryski: yep I benched the same functionality (just a findAndModify) with node.js+express+node-mongodb and php+apache and php had about 772req/s while node was on 300req/s with ab -n 1000 -c 200
[20:32] rworth: What's the recommended way to load these additional files?
[20:32] rworth: Should they each be modules?
[20:32] S1kx: ekryski: in production I would then go with nginx + php-fpm
[20:33] sinke has left the channel
[20:33] S1kx: will do some benchmarks then... maybe putting it on the mailing list for node-mongodb-native
[20:33] tjholowaychuk: S1kx NODE_ENV=production ?
[20:33] tjholowaychuk: mongodb-native, is surely a bottleneck though
[20:33] ekryski: hmmm. Interesting.  Well I'm currently migrating over from IIS and SQL Server 2008 so anything will be better than that.
[20:33] tjholowaychuk: it's pretty beefy
[20:34] llrcombs: how fast is path.existsSync?
[20:34] ekryski: IIS was there before i got here. But I imagine that it is the mongo drivers that are the bottleneck
[20:34] wilmoore has joined the channel
[20:34] xerox: llrcombs: as fast as the disk??
[20:34] xerox: (which means slow) xD
[20:35] Cover|Work: disk is the new tape !!
[20:35] llrcombs: hmm...
[20:35] xerox: you never know how long a read file will take
[20:35] llrcombs: Node.js does multithreading, right?
[20:35] S1kx: tjholowaychuk: Hm nope I tried it without node_env=production, I will give that a try now.
[20:35] MooGoo: what
[20:35] MooGoo: no
[20:35] MooGoo: nodejs is single threaded
[20:35] tjholowaychuk: S1kx if you were using templates, that would be muuuch slower without it
[20:35] llrcombs: oh! I thought it was multi-threaded
[20:35] llrcombs: my bad
[20:36] llrcombs: lol
[20:36] MooGoo: it's non-blocking for the most part...but still single threaded
[20:36] S1kx: tjholowaychuk: but yeah, mongodb-native is almost entirely in JS apart from the BSON serialization which is in C/C++
[20:36] darshanshankar has joined the channel
[20:36] MooGoo: tho child processes are by definition using multithreading
[20:36] MooGoo: maybe
[20:36] S1kx: tjholowaychuk: its just bad that there is this trade-off between asynchronous request handling and processing speed
[20:36] MooGoo: actually threads are all from the same process
[20:37] MooGoo: I think
[20:37] MooGoo: what do I know
[20:37] tjholowaychuk: S1kx would be a no-brainer for me
[20:37] tjholowaychuk: php sucks
[20:37] llrcombs: so, then doing a bunch of existsSync's will block the whole server until they've all been checked?
[20:37] tjholowaychuk: not enjoyable at all
[20:37] MooGoo: yes
[20:37] Cover|Work: llrcombs: yes
[20:37] S1kx: tjholowaychuk: speed is absolutely crucial here, I have consistently 500 to 1000 requests per second
[20:37] llrcombs: I liked PHP at first, back when I'd never programmed anything before...
[20:37] tjholowaychuk: S1kx besides even if you use something else, not point going with php, not like it's fast
[20:37] Cover|Work: that's why you use async
[20:37] llrcombs: now, it seems like a horribly painful architecture to work with
[20:37] rworth: are there any examples of modules that are extended by code in other files?
[20:37] Skola: how can you like PHP, ever! : D
[20:38] mraleph has joined the channel
[20:38] Skola: it's against my INSTINCT
[20:38] MooGoo: as he said...when he had never experienced anything else
[20:38] MooGoo: that's the only reason anyone likes PHP
[20:38] donaldpcook has joined the channel
[20:38] Skola: I guess yeah
[20:38] kruckenb has joined the channel
[20:38] Cover|Work: coming from non-synchronous programming, yes it is a pain
[20:38] overra has joined the channel
[20:38] Skola: my first "language" was Java!
[20:38] Cover|Work: but you get used to it
[20:38] Skola: lasted 1 week
[20:39] swistak has joined the channel
[20:39] Cover|Work: helps with the asynchronous parts << https://github.com/creationix/step
[20:40] skm has joined the channel
[20:40] S1kx: I have no problems programming it asynchronously, as I have already written the entire thing in node.js now. I am just thinking of switching to PHP as benchmarks show that *even though it is handling requests synchronously* it is by far faster
[20:40] niftylettuce: `pastebin
[20:40] gbot2: Please do not use pastebin.com. There are problems with syntax highlighting and font sizes that make it hard to read, and copy/paste includes line numbers. Consider using http://www.webdevout.net/test which allows you run the code in your browser to help with debugging.
[20:40] ekryski: S1kx: for me I might eventually have 1000's of req/s but our db writes and reads will still need to be fast.  I've also be looking into hypertable.  What module are you using for you mongodb hookups?
[20:41] S1kx: ekryski: for replica sets?
[20:41] ekryski: hmm?
[20:41] S1kx: not sure what you are asking. english is not my native language
[20:42] bronson: I see people using Capistrano to deploy node.js...  are there any alternatives?
[20:42] coreb: php faster than node.js?
[20:42] romanb has joined the channel
[20:42] S1kx: coreb: the driver, yes.
[20:42] Cover|Work: Capistrano? that Objective-J thing?
[20:42] bronson: Cap was OK but I'd prefer something in Node.
[20:42] bronson: Cover|Work, it's a Ruby thing.
[20:42] ekryski: sorry.  We might use hypertable for some data because we have a massive table that will have latitude and longitude lookups
[20:42] tjholowaychuk: bronson: this is pretty new but might be what you want http://github.com/visionmedia/deploy
[20:42] coreb: S1kx: the driver for what, I wasn't following it all
[20:43] tjholowaychuk: no reason that shit should ever be hosted by ruby / node etc IMO
[20:43] tjholowaychuk: pointless
[20:43] jscheel_ has joined the channel
[20:43] S1kx: coreb: mongodb, considering switching from mongodb-native to php's pecl mongo as its significantly faster
[20:43] bronson: tjholowaychuk, agreed.
[20:43] bronson: tjholowaychuk, daaaam, you've written everything.
[20:43] bronson: I'll give that a shot.
[20:43] AvianFlu has joined the channel
[20:44] coreb: S1kx: I'm sure mongodb-native isn't too fast, doesn't surprise me
[20:44] aheckmann_ has joined the channel
[20:44] S1kx: and on concurrency levels below something like 10000 req/s it probably is not even that bad to have synchronous scripts as long as they provide quick access, as the OS's task scheduler should be working pretty well there
[20:44] ekryski: is mongoose built on top of mongo-db native or are they completely different?
[20:44] Murvin: coreb:  yeah. mongodb-native is kinda old now compare to mongoose
[20:44] S1kx: coreb: any suggestions then on sticking to node.js, or generally an asynchronous background, but with a fast driver?
[20:45] Murvin: ekryski: i believe it is completely different
[20:45] ekryski: that was my understanding
[20:45] S1kx: mongoose seems to be 100% JS
[20:45] llrcombs: and now, for something...
[20:45] Cover|Work: ..completely different
[20:45] S1kx: ekryski: ah, lookups! mongodb supports geospatial indexes natively
[20:45] Murvin: does anyone know how to close or kill the server?  I tried http.close()  or http.emit('close')   both throw error
[20:45] coreb: Murvin: mongoose uses mongodb-native
[20:45] KingJamool has joined the channel
[20:45] llrcombs: ACTION ^5's Cover|Work
[20:46] mraleph: omg mongo-native uses strings to build binary commands. WTF?
[20:46] ekryski: s1kx: mongo-db native is not 100% js?
[20:46] S1kx: ekryski: you can turn on native BSON serialization
[20:46] coreb: it has c++ parts
[20:46] S1kx: ekryski: by passing { native_parser: true } to the DB-object or so
[20:46] llrcombs: Murvin: it should be server.close();
[20:46] llrcombs: not http.close();
[20:46] pdeschen has joined the channel
[20:46] ekryski: oh. I gotcha.
[20:47] coreb: I tried the native part, messed up the autogenerated ObjectIds
[20:47] Murvin: coreb:  yes.. you are right.. just check mongoose lib.  
[20:47] ekryski: It would be interesting to bench both mongodb-native and mongoose as well
[20:47] S1kx: if mongoose is built on top of mongodb-native... *shrugs*
[20:47] S1kx: i need to do some production system benchmarks for high concurrency on node <=> php on this issue
[20:48] coreb: I don't like mongoose, another layer of pointless abstraction on top of a not too good driver
[20:48] ekryski: ya.  maybe it would just be slower.
[20:48] coreb: would be great if 10gen supported an official driver
[20:48] Murvin: llrcombs: thanks.. got it.  :)
[20:48] ekryski: coreb: totally!!
[20:48] S1kx: yep their ruby driver for mongodb is nice
[20:48] coreb: pymongo is good, the c# driver is good
[20:48] jim68000 has joined the channel
[20:49] coreb: probably there will be something, but the mongodb-native developer claims he's in talks with 10gen
[20:49] clee has joined the channel
[20:49] llrcombs: welcome, murvin
[20:50] ekryski: S1kx: that was the other option.  See how ruby's dirver performs compared to php.  Right now I'm prototyping one system and then we are gonna bench it.  Then we might switch it up, be that database or server or both
[20:50] S1kx: ekryski: well the ruby driver is blocking from what I can see
[20:50] S1kx: ekryski: em-mongo is another option but it is written entirely in ruby, so probably subpar aswell
[20:51] coreb: look at the examples of mongodb-native, I guess mongoose was created to mitigate all those callbacks
[20:51] joshthecoder has joined the channel
[20:51] sudhirjonathan has joined the channel
[20:51] jacobolus has joined the channel
[20:51] Murvin: just wanna let you guys know that. when doing http.request, must be take into consideration that you will run into socket problem and unrecoverable.
[20:52] S1kx: actually, em-mongo uses an external bson library so that can be native too, so this might be a good option, as eventmachine is really fast
[20:52] ekryski: hmm. I'll have to delve into the code a little more but this is some really good preliminary discussion.  I intend to get a blog up and running to show some benchmarks in the next month or two.
[20:52] S1kx: hook that up with async sinatra
[20:52] S1kx: https://github.com/christophsturm/em-mongo
[20:52] coreb: S1kx: tlaking about ruby?
[20:52] coreb: talking
[20:52] S1kx: yes
[20:52] coreb: wasn't it php you considered?
[20:53] S1kx: yep
[20:53] tjholowaychuk: ruby is kinda awkward for async stuff
[20:53] ekryski: but I've been looking at maybe ruby as well
[20:53] S1kx: because the php driver is written *entirely* in C
[20:53] eazyigz has joined the channel
[20:53] S1kx: and eventmachine is really nice, i have been using it for a ton of projects for like a year now
[20:53] S1kx: mostly written in C++ too
[20:54] ekryski: hmm. now we just need a fast mongodb node.js driver ;-)
[20:54] S1kx: coreb: I for one don't care which language it is in the end as long as it, and the driver, can perform to my needs
[20:54] ekryski: anyone?
[20:54] ekryski: me too
[20:54] coreb: I'm not sure why it's important to have the driver in c++, it should be fast enough anyway
[20:54] eazyigz: Hello, I am having a problem with using a collection in node-mongodb-native
[20:54] S1kx: ekryski: maybe emongo :D
[20:54] eazyigz: i keep getting an error type: 'invalid_in_operator_use', 
[20:55] junkee[] has left the channel
[20:55] ekryski: ha ha.  We'll see… but that may be an option :-)
[20:55] eazyigz: has anybody used node-mongodb-native & come across this problem?
[20:55] S1kx: haha
[20:55] coreb: S1kx: how is mongodb-native performing in numbers, compared to the php driver
[20:55] S1kx: eazyigz: post codez
[20:56] ekryski: eazyigz: I've been sticking with mongoose but I haven't seen that error. Sorry...
[20:56] tjholowaychuk: S1kx what sort of data are you getting the higher volume traffic on?
[20:56] eazyigz: Sikx: http://pastie.org/2079522
[20:57] simenbrekken has joined the channel
[20:57] S1kx: tjholowaychuk: lots of reads to a collection to mainly check for existence of an ID (and if it not exists, create a document for it & statistics, its purpose is mainly to record statistics)
[20:57] eazyigz: ekryski: the only reason that I didn't go with Mongoose is because I don't feel like defining my schemas.  It is pointless, since I am not creating an ORM mapping, I am just querying the db
[20:57] tjholowaychuk: you should consider redis
[20:58] tjholowaychuk: would be much better/faster for that
[20:58] Cover|Work: redis ftw!
[20:58] coreb: isn't redis memory only?
[20:58] tjholowaychuk: no
[20:58] Cover|Work: tjholowaychuk: are you actively working on nedis btw
[20:58] tjholowaychuk: you can configure it like anything else
[20:58] tjholowaychuk: Cover|Work not overly, it's not abandoned but I dont have plans to add anything any time soon
[20:58] coreb: I think most people are using redis for temporary storage
[20:59] ekryski: coreb: kind of… you can push snapshots of memory to your disk
[20:59] Cover|Work: it's mostly memory, but you can set a memory limit before starting to use virtual memory
[20:59] S1kx: tjholowaychuk: I already did consider it and actually switched *away* from that because I am talking about hundred thousands of docs. I may use redis again at some point to merely check for the existence, in combination with using mongodb as persistent storage
[20:59] bitwise_ has joined the channel
[20:59] tjholowaychuk: and the AOF
[20:59] Cover|Work: the one thing that bothers me is going that way, you have two locations on disk, the AOF, and the vm
[20:59] charleyd has joined the channel
[20:59] Cover|Work: well yeah, the AOF for persistent data
[20:59] tjholowaychuk: S1kx mmk.. redis can handle hundreds of thousands
[21:00] tjholowaychuk: faster
[21:00] tjholowaychuk: lol
[21:00] tjholowaychuk: but, really depends on the data
[21:00] S1kx: i dont see a point in keeping all my documents from previous days in memory
[21:00] ekryski: ya.  More me redis is no good either. I have too much data for memory only and can't really afford to have stale data
[21:00] S1kx: when most of the time the stats from jsut that day are accessed
[21:00] tjholowaychuk: S1kx then use lists
[21:00] coreb: tjholowaychuk: are you using redis for permanent storage?
[21:00] tjholowaychuk: and trim them
[21:00] tjholowaychuk: coreb semi-permanent yeah, it's volatile stuff, nothing important, but it is permanent until i remove it yes
[21:01] dans: i dont really get node TDD as well as i do with ruby - what can help me? I want to start with something basic
[21:01] S1kx: tjholowaychuk: if mongodb proves to be a bottleneck at some point i will certainly look into keeping stats from that day in memory and then moving them off to mongodb
[21:01] Skola: for small cms/blog type stuff, would you recommend redis or mongo?
[21:01] tjholowaychuk: S1kx you already have been saying it's a bottleneck
[21:01] S1kx: i'm a bit limited on time on this project lol
[21:01] tjholowaychuk: because of the drivers at least
[21:01] tjholowaychuk: i wouldnt use mongo for stats
[21:01] S1kx: tjholowaychuk: yeah just the drivers. shouldnt be the problem
[21:02] S1kx: tjholowaychuk: do you have some docs on proper redis layouts for recording statistics?
[21:02] coreb: it doesn't help with redis' performance if the data are supposed to be durable
[21:02] coreb: is node's redis driver fast?
[21:02] tjholowaychuk: yeah
[21:02] tjholowaychuk: a lot faster than mongodb-native
[21:02] ekryski: Skola: probably mongo.  You don't need crazy speed from memory compared to the need for persistent storage
[21:02] Cover|Work: pretty fast
[21:02] Murvin: question about http.Server.close().    if there are tones of requests, how can I Pause the server taking new requests before closing it?
[21:02] Skola: thanks ekryski
[21:03] KingJamool has joined the channel
[21:03] tjholowaychuk: Skola look at redis.io
[21:03] Cover|Work: and there's an optional c driver
[21:03] tjholowaychuk: there are many data structures you can use
[21:03] tjholowaychuk: doh
[21:03] tjholowaychuk: S1kx ^
[21:03] tjholowaychuk: you could use a capped list
[21:03] S1kx: yes I am already using redis for statistics on one of my websites
[21:03] yozgrahame has joined the channel
[21:03] S1kx: its just... i don't know, getting a little bit messy with merely keys and no documents
[21:03] Murvin: is there something called http.Server.pause() ?
[21:03] tjholowaychuk: :s
[21:03] tjholowaychuk: k
[21:03] tjholowaychuk: lol
[21:04] coreb: it's such a shame that there isn't a fast mondodb driver available, it's a lot of work though
[21:04] ekryski: we could make it a group effort ^
[21:04] S1kx: what I might do though for now is to use redis to keep track of existence of these objects in memory
[21:04] adambeynon has joined the channel
[21:04] S1kx: to remove 95% of the traffic which will be read-only
[21:05] ekryski: S1kx: this is exactly the reason why I may be looking into hypertable in conjunction with mongo. Fast huge batch reads.
[21:05] tjholowaychuk: the redis client can certainly handle well over 100k/s that's for sure
[21:05] m00p has joined the channel
[21:05] S1kx: tjholowaychuk: but how about node.js http servers?
[21:05] S1kx: tjholowaychuk: I am using express at the moment. le fast?
[21:05] tjholowaychuk: S1kx yeah
[21:06] ekryski: ya
[21:06] coreb: how many req/s can the mongodb native driver do?
[21:06] mraleph: ACTION sighs
[21:06] xerox: 1
[21:06] S1kx: coreb: on 1 connection?
[21:06] coreb: it doesn't do pooling
[21:06] coreb: so yeah
[21:07] Murvin: coreb:  i have a real test 2 weeks ago. let me look for it
[21:07] S1kx: you can implement some pooling yourself easily and start multiple http servers with spark/cluster etc
[21:07] Fredderf has joined the channel
[21:07] ekryski: ^ that's what I was thinking
[21:07] mraleph: people y u no profiling stuff... 
[21:08] coreb: doing your connection pooling quickly turns into a mess
[21:08] mraleph: guesses about whats hot/bottleneck and whats not do not help
[21:09] Murvin: coreb:  one of my tests is:   Test Tool: Jmeter .      Action:  send http request to node.  node insert simple data into mongo with mongoose.   default setting for driver.   Test settings: concurrent level: 1000, loop: 10 times.  Throughput: ~500req/sec
[21:09] AvianFlu has joined the channel
[21:09] RORgasm: isaacs: i have a local isntallation of npm on a staging server, runnign itno this issue trying to install the nodemailer package
[21:10] RORgasm: isaacs: Error: EACCES, Permission denied '/tmp/npm-1308258565821' 
[21:10] coreb: I know the mongodb native driver developer is working on connection pooling
[21:10] isaacs: RORgasm: you don't have permission to write to /tmp?
[21:10] RORgasm: why does it keep trying to write to /tmp/ 
[21:10] RORgasm: right
[21:10] RORgasm: but its a local user instalaation
[21:10] coreb: Murvin: one connection?
[21:10] Murvin: yes
[21:10] isaacs: RORgasm: because npm deals with temp files, and respects the $TMPDIR environment variable like a good unix program should ;)
[21:10] Murvin: one node instance.  one connection.   
[21:11] jpstrikesback has joined the channel
[21:11] Murvin: all default settings.
[21:11] RORgasm: isaacs: is there anyway to deal with that if your trying to install as a local user that doesn't have access to that directory
[21:12] isaacs: RORgasm: sure.  just set the "tmp" config var (npm help config), or set the TMPDIR environ to some other folder.
[21:12] TheFuzzball has joined the channel
[21:12] isaacs: RORgasm: if you don't have permission to write to $TMPDIR, then a lot of things will fail in odd ways.
[21:12] coreb: there are alternatives to mongodb native though
[21:12] Tobsn has joined the channel
[21:12] isaacs: RORgasm: i'm surprised you can even log in like that.
[21:12] fangel has joined the channel
[21:13] sudhirjonathan has joined the channel
[21:14] RORgasm: isaacs: trying to deal with an issue on a staging server
[21:14] Murvin: coreb: my number may be lower than actual.  
[21:15] S1kx: tjholowaychuk: node-redis being the driver of choice?
[21:15] isaacs: RORgasm: right.  so, set the npm "tmp" config var, or set the TMPDIR environment variable, and it'll work.
[21:15] isaacs: RORgasm: it has to be able to write to the temp directory.
[21:15] RORgasm: isaacs: so the node_modules folder contains this npm pacakge but when i do npm list i'm seein that it says the unmet depency
[21:15] isaacs: RORgasm: ok
[21:15] sub_pop has joined the channel
[21:15] RORgasm: isaacs: not sure what's going on...works on my local machine
[21:16] isaacs: RORgasm: sounds like you know what the problem is :)  put the dependency there.  `npm update` will do this for you.
[21:16] tjholowaychuk: S1kx yeah mjr's "redis" in npm
[21:16] isaacs: RORgasm: how are you putting that package there?
[21:16] tjholowaychuk: S1kx one of the redis guys added a drop-in replacment as well
[21:16] tjholowaychuk: for the parser
[21:16] pquerna: bcantril does dtrace in production on no.de right now at #velocityconf
[21:16] RORgasm: isaacs: the package is in node_modules folder, we committed
[21:16] RORgasm: isaacs: its in the git repo
[21:16] isaacs: RORgasm: but you probably didn't commit its dependencies.  does the package contain a .gitignore file?
[21:17] isaacs: RORgasm: does that gitignore file contain "node_modules"?
[21:17] S1kx: tjholowaychuk: hiredis?
[21:17] blup has joined the channel
[21:17] tjholowaychuk: yeah
[21:17] jakehow has joined the channel
[21:17] S1kx: thanks ;)
[21:18] matyr_ has joined the channel
[21:18] RORgasm: isaacs: i don't think so
[21:19] RORgasm: isaacs: no i'm not
[21:19] ekryski: S1kx: would you be able to post your bench numbers on the node mailing list?  If need be when I am doing our benchmarking in the next 6 months I'll compile a blog comparing the technologies.
[21:19] RORgasm: isaacs: what's weird is that all other dpendecies are being recognized properly
[21:19] jmoyers has joined the channel
[21:19] isaacs: RORgasm: so, you've added the dependency to git, but *its* dependencies are not there.  this is not an npm bug.
[21:19] rfay has joined the channel
[21:19] isaacs: RORgasm: run `npm install whatever` and it'll install whatever and its deps
[21:20] RORgasm: isaacs: no but the dpendeci is there 
[21:20] S1kx: ekryski: if I get the time to do that, yeah :P I was pushed to basically write the entire tracking system in 1 week
[21:20] isaacs: RORgasm: gist, please.  what does `npm ls` actually output?
[21:20] RORgasm: hmm
[21:20] RORgasm: isaacs: sure...one sec
[21:20] overra has joined the channel
[21:20] sadfweer has joined the channel
[21:21] piscisaureus has joined the channel
[21:21] tomtomaso has joined the channel
[21:21] ekryski: S1kx: ha ha fair enough. It doesn't have to be today or even next week. Just some time in the not so distant future would be awesome.  It would be good to have a place where people can reference how fast different complete stacks compare.
[21:22] ekryski: that way people can make a good judgement on which solution is best for their system.
[21:22] RORgasm: isaacs: i think i know what the porblem is...hold on a sec
[21:23] S1kx: ekryski: yep I agree
[21:23] bitwise_: im trying to set variables inside my event loop when a file is changed. Is this not the right approach? https://gist.github.com/1030314
[21:23] eazyigz has joined the channel
[21:24] eazyigz: I know that node.js is asynchronous, but how is it possible that I have an if/else statement, and both get executed?
[21:24] ekryski: S1kx: it sounds like you and I have similar problems.  I need to be able to handle a lot of clients with fast writes but I also need to have fast reads on huge data sets.
[21:24] ekryski: easzyigz: need code. Maybe you have a typo.
[21:24] RORgasm: isaacs: weird so for that one package, its dpeendencies are not in git...that's the problem...trying to figure out why...will update you in a bit :)
[21:25] S1kx: ekryski: got jabber?
[21:25] coreb: are there good drivers for other nosql dbs than redis, ignoring mongodb?
[21:25] Cover|Work: riak, couch, cassandra
[21:25] ekryski: Yes. but I mostly use google talk.  I use Adium as my client so it doesn't really matter
[21:25] sudhirjonathan has joined the channel
[21:26] S1kx: 3fingers@jabber.ccc.de
[21:26] coreb: Cover|Work: you know they're fast?
[21:26] necromancer: node takes too long to install =P
[21:26] eazyigz: ekryski:http://pastie.org/2079655
[21:26] eazyigz: note that both messages get outputted!
[21:26] RORgasm: isaacs: shoot
[21:27] RORgasm: isaacs: so that one modeul nodemailer... had a .gitingore which was ignoring the nodem_modules requried for it :)
[21:27] RORgasm: :)
[21:27] OneBraveHog: funny nick there ROR
[21:27] Cover|Work: no idea
[21:27] ekryski: eazyigz: at the same time?
[21:27] Skola: don't be old Hog : D
[21:28] eazyigz: ekryski: the else message gets outputted, and then the if message
[21:28] eazyigz: that is so confusing
[21:28] ekryski: S1kx: I added you. Mines just e.kryski@gmail.com
[21:28] context: ekryski: then its being called twice
[21:28] context: ekryski: put a console.log before the if....
[21:28] ekryski: eazyigz: I need more to go on. agreed with context it must be called twice.
[21:29] context: that or its in a loop .... there are many reasons why that happens
[21:29] context: you gave us 5 lines... zero context surrounding those 5 lines
[21:29] ekryski: you have one time with no error and one time with an error. Can't tell you much else with the code posted. ^
[21:29] eazyigz: ekryski: this happens in the context of node-mongodb-native.  I am trying to get a collection
[21:29] eazyigz: but logically this makes no sense
[21:30] eazyigz: how could control statements like if/else happen at once???
[21:30] ekryski: your trying to grab the collection more than once?
[21:30] eazyigz: nah
[21:31] tomtomaso has joined the channel
[21:31] jacobolus has joined the channel
[21:31] Cover|Work: might be happening without your knowledge
[21:31] bitwise_: just updated this gist in case anyone can help me out: https://gist.github.com/1030314 setting a var that is referenced inside the createServer closure doesnt seem to be appearing.
[21:31] context: ekryski: they arent. as i said, put a console.log BEFORE the if statement
[21:31] tomtomaso has joined the channel
[21:31] Tobsn: mscdex, believe it or not im still getting the same S3 image...
[21:31] Skola: hehe confusing names you two 
[21:31] cjm has joined the channel
[21:31] ekryski: thanks context. It's actually eazyigz problem.
[21:32] Skola: :D
[21:32] context: eazyigz: console.log("HI THER bout to run if statement");
[21:32] context: :x
[21:32] context: ekryski: oops
[21:32] ekryski: no prob.
[21:32] context: ACTION waits for it
[21:33] ekryski: It's been fun chatting guys but I really should get some work done.
[21:33] eazyigz: ekryski: you're right, seems like the .collection call get executed twice
[21:33] eazyigz: that explains it
[21:33] prettyrobots has joined the channel
[21:33] Cover|Work: computers are funny like that, sometimes things happen so fast it goes twice when you think it happens once
[21:34] eazyigz: but I'm still very frustrated with node-mongodb-native api (it is too confusing).  But that is my personal issue :)
[21:34] context: cover|work: no. people just think computers work slower than they do
[21:34] ryan0x2 has joined the channel
[21:34] context: eazyigz: then use mongoose ?
[21:34] alessio_alex has joined the channel
[21:34] eazyigz: context: mongoose requires you to define a schema & ORM mapping before using it
[21:34] alessio_alex: hello
[21:34] alessio_alex: tjholowaychuk are you online?
[21:34] tjholowaychuk: yeah
[21:34] ekryski: I have to agree the mongodb api's have some confusing things to them.  Even mongoose...
[21:34] eazyigz: that is way too much effort for someone not familiar with the db!  I just want to query a single table.
[21:35] alessio_alex: res.redirect('/test/tes2');
[21:35] alessio_alex: and my app is "loading" continuously
[21:35] alessio_alex: the route is valid
[21:35] zmbmartin: tjholowaychuk: is there a way to grab the value of the commit button in express. I don't see it in req.body like in rails I could have 2 seperate commits and depending on which one was pushed I could redirect to different places?
[21:35] context: alessio_alex: did you res.end() ?
[21:35] Skola: context sh
[21:35] Skola: only tj can fix this
[21:35] Skola: :[]
[21:35] context: skola: oh right.
[21:35] context: sry nxt tyme
[21:35] tjholowaychuk: probably a cyclic redirect
[21:36] alessio_alex: context res.redirect() has res.end() defined
[21:36] eazyigz: why can't working with mongodb in Node.js be simple - like in PHP or in Python?  Why do we only have some confusing libraries at our disposal?
[21:36] context: tjholowaychuk: most browsers will stop
[21:36] alessio_alex: tjholowaychuk I tried to debug but.. fuck it doesn't enter the redirect function
[21:36] tjholowaychuk: zmbmartin give it a name
[21:36] context: alessio_alex: so curl it and see what it does
[21:36] tjholowaychuk: it should be there
[21:36] tbrnyn: eazyigz: to keep people on couchdb
[21:36] alessio_alex: I put an express repo in node_modules
[21:36] coreb: eazyigz: I share that frustration
[21:36] alessio_alex: it dost load it 
[21:36] Skola: eazyigz it is pretty easy.....
[21:36] alessio_alex: but it just doesn't go to https://github.com/visionmedia/express/blob/master/lib/response.js#L335
[21:36] alessio_alex: context i'll curl it now
[21:36] tjholowaychuk: alessio_alex: well then you obviously have a different issue :p
[21:37] eazyigz: Skola: you find node-mongodb-native pretty easy?  Then why does a collection call throw "arguments: [ 'limit', null ],   type: 'invalid_in_operator_use'"?
[21:37] tjholowaychuk: gist of your code would help
[21:37] eazyigz: you get that??
[21:37] alessio_alex: tjholowaychuk I have a framework i
[21:37] alessio_alex: i'm dev-ing...
[21:37] tjholowaychuk: ah
[21:37] alessio_alex: don't think I could gist you everything..
[21:37] zmbmartin: tjholowaychuk: my bad I forgot to refresh the page after I changed it. You are right.
[21:37] tjholowaychuk: well i have to blame your code :p
[21:38] alessio_alex: is there a "TeamViewer" for Ubuntu or something ?:D
[21:38] alessio_alex: I would let you have a look at my code if I could somehow
[21:38] davve: alessio_alex: VNC?
[21:38] tjholowaychuk: alessio_alex step through it with a debugger
[21:39] tjholowaychuk: and curl -X HEAD -i
[21:39] alessio_alex: erm, the debugger ryah shows in vimeo ?
[21:39] alessio_alex: V8 debugger?
[21:39] tjholowaychuk: yeah
[21:39] kruckenb has joined the channel
[21:39] alessio_alex: ok
[21:39] bitwise_: alessio_alex: can you link me that
[21:39] brettgoulder has joined the channel
[21:39] alessio_alex: ok
[21:40] alessio_alex: http://79.118.206.3/root/redir
[21:40] alessio_alex: it's suppose to go to /test/test2
[21:41] alessio_alex: res.redirect('/test/test2');
[21:41] bitwise_: i meant the debug video link
[21:41] alessio_alex: oh
[21:41] tjholowaychuk: alessio_alex i dont get a response at all
[21:41] alessio_alex: yes
[21:41] tjholowaychuk: so you're not responding :p
[21:41] alessio_alex: that's the problem
[21:41] alessio_alex: what the heck is going on?
[21:41] tjholowaychuk: not an express thing
[21:41] tjholowaychuk: you're not receiving a callback etc
[21:41] alessio_alex: sys.log(res.redirect) shows your function
[21:41] alessio_alex: just before I call it
[21:41] ryan0x2 has joined the channel
[21:42] alessio_alex: bitwise_ search on vimeo for "Ryan Dahl Debugger"
[21:43] RORgasm: isaacs: nice the npm config command for tmp thing btw worked for me with another issue
[21:43] jetienne has joined the channel
[21:43] isaacs: RORgasm: great :)
[21:43] RORgasm: isaacs: i love that you've built those sort of utitlities in npm, sometimes ppl dont' have full access to the system :)
[21:43] KingJamool has joined the channel
[21:44] Cover|Work: isaacs: what's the point of npm_g ? are people too lazy to type -g ?
[21:44] isaacs: RORgasm: yeah, the goal is to be very configurable whenever it doestn' cost  too much
[21:44] Murvin: tjholowaychuk: do you know who should I contact for http.request socket problem?  
[21:44] pjacobs has joined the channel
[21:44] zeropx has joined the channel
[21:44] isaacs: Cover|Work: it's that i keep mistyping npm-g
[21:44] RORgasm: isaacs: yup :)
[21:44] tjholowaychuk: Murvin people working on node's core, if it really is a bug
[21:44] isaacs: Cover|Work: so i figured i may as well have npm_g as well.
[21:44] quackquack: how can I do a before_filter in express?
[21:44] isaacs: i dunno.  seemed kinda handy
[21:44] tjholowaychuk: quackquack middleware
[21:44] Cover|Work: Murvin: https://github.com/joyent/node/issues
[21:45] alessio_alex: tjholowaychuk is there another component of yours that uses the same redirect function? (connect, ejs, connect-form etc..) ?
[21:45] quackquack: tjholowaychuk: ah, thank you
[21:45] dtan has joined the channel
[21:45] tjholowaychuk: alessio_alex: nope
[21:45] Murvin: tjholowaychuk: I believe it is a bug on connection pool.. i posted the problem in the issues but seems that not catching the core team attention. 
[21:45] alessio_alex: ok than I believe in aliens :-(
[21:46] tjholowaychuk: alessio_alex gotta learn to debug my friend, node's debugger will definitely help you out
[21:46] coreb: does res.end() do anything to the socket connection other than send some sort of EOF?
[21:46] christopherdb has joined the channel
[21:46] tjholowaychuk: you can put a break right before that call
[21:46] alessio_alex: ok I'll do that
[21:46] bitwise_: how do you add a breakpoint in the debugger/
[21:46] tjholowaychuk: "debugger"
[21:46] Murvin: bitwise_: just like firebug
[21:46] bitwise_: there doesnt seem to be much documentation on how to debug
[21:47] tjholowaychuk: it's a keyword
[21:47] bitwise_: ok
[21:47] ap3mantus has joined the channel
[21:47] tmpvar has joined the channel
[21:48] coreb: bitwise_: did you find that video?
[21:48] bitwise_: coreb: no
[21:48] alessio_alex: http://vimeo.com/19465332
[21:48] alessio_alex: there it is
[21:48] Murvin: https://github.com/joyent/node/issues/1176    if anyone has time, please look into it.
[21:48] ekryski: I thought I saw somewhere that some guy made a mongoose add-on to support email and passwords.  Tried googling but I can't find it on github. Anyone know where it might be?
[21:49] quackquack: i think its called mongoose-auth, should be on github
[21:49] quackquack: https://github.com/bnoguchi/mongoose-auth
[21:50] ekryski: thanks quack
[21:51] hackband has joined the channel
[21:51] jslatts has joined the channel
[21:51] quackquack: np
[21:51] hackband has joined the channel
[21:51] sudhirjonathan has joined the channel
[21:51] patcito_ has joined the channel
[21:51] puffpio_ has joined the channel
[21:53] bartt has joined the channel
[21:53] alessio_alex: with the risk of sounding stupid, how do I debug my app, which needs debugging only when the client accesses http://site.com/my_custom_route
[21:53] alessio_alex: :-/
[21:53] quackquack: tj, is there a standard library of helpers like rails' form_for that you recommend?
[21:53] BillyBreen has joined the channel
[21:53] mailerg has joined the channel
[21:53] tjholowaychuk: quackquack i recomment not using that stuff
[21:54] tjholowaychuk: recommend*
[21:54] tjholowaychuk: but nope im not aware of anything good
[21:54] quackquack: tjholowaychuk: why do you not like it? prefer raw html?
[21:55] tjholowaychuk: I dont get much value from those
[21:55] mailerg: Hi guys, does anyone know if there's a reason the Error object is module-local?
[21:55] quackquack: so at what level do you abstract into helpers?
[21:55] tjholowaychuk: i dont
[21:55] tjholowaychuk: i use jade
[21:55] tjholowaychuk: and that's it
[21:56] quackquack: for helpers? or do you not use helpers
[21:56] quackquack: just partials
[21:56] tjholowaychuk: well i use helpers for some things but not forms
[21:56] Calvin has joined the channel
[21:56] patcito has joined the channel
[21:56] saschagehlich: mjr_: ping, my redis pro
[21:56] quackquack: hmm, okay
[21:57] boogyman has joined the channel
[21:57] saschagehlich: or tjholowaychuk, maybe you know this as well... is there an easy way to get all members of a sorted set, with their index _and_ their name, sorted by the index?
[21:57] bitwise_: wish i knew why node-inspector doesnt work in chrome but it does in safari. chrome seems to not like the 0.0.0.0 ip
[21:58] Skola: use diff IP then? :[]
[21:58] samsonjs has joined the channel
[21:58] glenjamin: For example: echo "module.exports = Error" > test.js && node -e "require('./test') === Error" produces false
[21:58] glenjamin: bitwise_: if you connect to 127.0.0.1 it works in crhome
[21:58] tjholowaychuk: saschagehlich sure you could hack it together with SORT
[21:58] hybsch has joined the channel
[21:59] tjholowaychuk: not something i've done personally
[21:59] ekryski: tjhollowaychuk: I have to say tj it took me a little bit to get used to jade but I absolutely love it! Thank you!
[21:59] bitwise_: hmm glenjamin not for me
[21:59] saschagehlich: ah i did something with sort lately but failed horribly... 
[21:59] tjholowaychuk: ekryski haha yeah it takes a bit
[22:00] tjholowaychuk: ekryski it can still be somewhat ugly at times but muuuuuuch faster
[22:00] glenjamin: bitwise_: thats odd 0.0.0.0 means it should listen on any address that resolves to that machine
[22:00] tjholowaychuk: i cant stand ejs
[22:00] bitwise_: doesnt seem to do much in safari either. i see the web inspector but don't see any code
[22:00] alessio_alex: break in #<Object>.redirect(param=#<Object>, req=undefined, res=undefined, next=undefined), /home/alessio/www/go/lib/utils.js:152
[22:00] alessio_alex: this seems bad
[22:00] tjholowaychuk: what is utils.js:152?
[22:00] tjholowaychuk: gist that
[22:01] coreb: much faster in what way, typing the view?
[22:01] alessio_alex: it's my fault, it's one of my files
[22:01] tjholowaychuk: coreb yeah much faster to write
[22:01] ekryski: tjhollowaychuk: ya much faster.  It would be nice to have some conversion shortcut for textmate that fixes the tabs and spaces issue (since I usually use spaces) but overall it is really nice.
[22:01] mikeal has joined the channel
[22:01] glenjamin: bitwise_: node --debug-brk myscript.js in one terminal, node-inspector in another, then visit http://127.0.0.1?port=5858
[22:01] telemachus: ACTION must be the only one who still prefers e(js|rb) over jade|haml
[22:01] coreb: tjholowaychuk: true
[22:01] glenjamin: ah, forgot the port, 127.0.0.1:8080?port=5858
[22:02] coreb: I wish some text editor would implement syntax highlighting for jade
[22:02] bitwise_: there is a debug in there somewhere too
[22:02] tjholowaychuk: textmate has a syntax
[22:02] fattytuna has joined the channel
[22:02] tjholowaychuk: i think vim too
[22:02] bitwise_: not needed
[22:02] ekryski: tjhollowaychuk: I have to say I'm a fan of a lot of your stuff. Especially being that I am over in Calgary and I haven't met any other people playing with node over here
[22:02] tjholowaychuk: ekryski haha nice! thanks man. im from edmonton originally
[22:02] glenjamin: I can't seem to get it to work with the "debugger" statement, only with --debug-brk and then setting additional breakpoints in node-inspector
[22:02] tjholowaychuk: but in vic now
[22:03] bitwise_: i see in my node-inspector window 'debugger not connected' and 'connection closed'
[22:03] coreb: I'm not a mac user, and I don't like those old school unix text editors like vim
[22:03] tjholowaychuk: coreb what do you use?
[22:03] ekryski: I wish.  We've been getting more rain than you guys lately
[22:03] coreb: notepad++, sometimes aptana
[22:03] alessio_alex: tjholowaychuk really thanks for the help
[22:03] alessio_alex: I sort it out
[22:03] glenjamin: telemachus: I never really minded erb style, but after using HAML for a while due to work i got used to it and now prefer it
[22:03] tjholowaychuk: alessio_alex what was it?
[22:03] ekryski: I'm a born and raised Calgary boy
[22:03] alessio_alex: the error was because of my fatigue :)
[22:04] bitwise_: nice, sorted
[22:04] quackquack: coreb: i am working on a text editor (should be released in a couple weeks) with jade highlighting, but that doesnt help you now :P
[22:04] alessio_alex: calling a function with 1 param instead of 4 :)
[22:04] bitwise_: i think it was the --debug-brk arg
[22:04] coreb: quackquack: what platform?
[22:04] F1LT3R has joined the channel
[22:04] glenjamin: i assume it's technically a node bug that debugger statements in code are ignored after starting with --debug
[22:04] coreb: textpad seems great though, why would they make it mac only
[22:04] alessio_alex: coreb use Vim
[22:04] telemachus: textmate?
[22:05] ekryski: coreb: textmate does have syntax highlighting
[22:05] alessio_alex: it's the Node.js of the editors :)
[22:05] quackquack: coreb: it will be cloud based, so the client can be any, the server needs to be linux/mac
[22:05] telemachus: meh
[22:05] telemachus: vim
[22:05] alessio_alex: yeah, Vim
[22:05] telemachus: what he said
[22:05] telemachus: :)
[22:05] coreb: they'd earn a lot releasing it for windows and linux
[22:05] bitwise_: anyone use the cloud 9 ide?
[22:05] level09 has joined the channel
[22:05] coreb: textmate, that is
[22:05] telemachus: coreb: He's too busy finishing Duke Textmate II
[22:05] BillyBreen has joined the channel
[22:05] quackquack: rofl
[22:05] coreb: telemachus: who is
[22:05] level09: my node server is still crashing even with forever :(
[22:06] bitwise_: http://cloud9ide.com/
[22:06] level09: how do I keep it running
[22:06] telemachus: coreb: The original Texmate dev has been working on Textmate next forever
[22:06] telemachus: It's the Perl 6 of editors
[22:06] level09: last thing in the log is some error about Socket is not writable
[22:06] bitwise_: hopefully not the duke nukem forever 
[22:06] coreb: so you're stuck with vim
[22:06] telemachus: fuck stuck
[22:06] telemachus: I love vim
[22:06] coreb: vim users sure seem to do that
[22:07] coreb: as do emacs users with emacs
[22:07] level09: :D
[22:07] alessio_alex: we are not stuck
[22:07] alessio_alex: we're addicted 
[22:07] telemachus: coreb: Sure, but they're crazy
[22:07] alessio_alex: it's a difference
[22:07] telemachus: We're right
[22:07] alessio_alex: yes
[22:07] alessio_alex: the 'holy war' is won by Vim
[22:07] glenjamin: So, can anyone explain this: echo "module.exports = Error" > test.js && node -e "require('./test') === Error" produces false
[22:07] glenjamin: or should i try the mailing list?
[22:07] Swizec has joined the channel
[22:07] zmbmartin: is there a good plugin for number_to_currency like the rails helper?
[22:08] glenjamin: oh hang on
[22:08] glenjamin: thats true now
[22:08] glenjamin: wtf
[22:08] coreb: for vim users vim is great, stick to it and be silent about it
[22:09] skm has joined the channel
[22:10] bentkus has joined the channel
[22:11] glenjamin: huh, weird. Error object in the REPL is not the same as Error object elsewhere
[22:11] samsonjs_ has joined the channel
[22:11] zmbmartin: coreb: telemachus sublime text 2 is pretty nice
[22:11] zmbmartin: it is in alpha still but I having been using it off and on with no problems
[22:11] fcambus has joined the channel
[22:12] addisonj: oh no, text editor wars...
[22:12] addisonj: ACTION runs for the hills
[22:12] coreb: zmbmartin: what platform
[22:12] level09: any articles on node-php integration
[22:12] telemachus: zmbmartin: cool - I think I looked at it briefly
[22:12] zmbmartin: coreb: I believe it is available for all platforms
[22:12] addisonj: coreb, its all platforms
[22:12] telemachus: Koi is pretty, but last time I tried it, very alpha
[22:12] Skola: how's the moving around?
[22:12] Skola: in Sublime
[22:13] zmbmartin: Skola: It seems to take a lot of features and ideas from textmate.
[22:13] bitwise_: so i get a break on the first line of the file i'm debugging, but when i press > 'play' it exits out even though i do have a debugger statement
[22:14] JJMalina has joined the channel
[22:14] zmbmartin: Skola: I use vim so much that I haven't used sublime text enough to get use to all the key combos
[22:14] saschagehlich: mjr_: what is the right syntax for commands like zrevrangebyscore in node_redis? I get a syntax error for this one: zrevrangebyscore("toplist", "-inf", "+inf", "LIMIT 0, 10")
[22:14] coreb: downloading sublime text 2 now
[22:14] indexzero has joined the channel
[22:14] zmbmartin: But you can use textmate themes and syntax highlighting files
[22:14] Skola: I've briefly looked at it, but couldn't see an immediate gain from switching
[22:14] Skola: but of course it probably deserves a more serious try
[22:15] zmbmartin: Skola: what do you use now?
[22:15] Skola: vim
[22:15] coreb: 59 bucks for a text editor, ouch
[22:15] yozgrahame has joined the channel
[22:15] Murvin: isaacs: are you  Isaac Schlueter ? 
[22:15] isaacs: yessir
[22:15] isaacs: have we met?
[22:15] telemachus: I think you just did. Internet meetings are so tricky...
[22:15] Murvin: isaacs: no.. l would like to sir.
[22:15] Skola: : D
[22:16] isaacs: hehe
[22:16] Skola: zmbmartin
[22:16] bitwise_: Error 0 in debugger whats that about
[22:16] Skola: I hate the mouse for editing
[22:16] coreb: it seems some developers here have fans
[22:16] Cover|Work: stalker alert
[22:16] Skola: when I'm doing webdev in the browser/vim, no mouse ever
[22:16] Cover|Work: isaacs: can i have a lock of your hair?
[22:16] Murvin: isaacs:  I need some help from a possible bug.   I made the post in issues but didn't catch any attention...
[22:16] alessio_alex has joined the channel
[22:16] asdf22 has joined the channel
[22:16] alessio_alex: hey again
[22:17] isaacs: Cover|Work: too far, dude.
[22:17] coreb: isaacs should maybe start sending out signed pictures of himself
[22:17] isaacs: you guys are so weird.
[22:17] alessio_alex: how can I properly "stop" my Express app? tried throw new Error('ss');
[22:17] isaacs: Murvin: what's the bug?
[22:17] Skola: lol
[22:17] alessio_alex: throw new Exception('ss');
[22:17] Skola: got sat
[22:17] alessio_alex: nada
[22:17] Murvin: isaacs:  it is most likely a connection pool problem which causing the socket die forever. 
[22:17] KingJamool has joined the channel
[22:17] zmbmartin: Skola: I find it hard to switch to from vim but I like to switch it up every now and again
[22:17] tjholowaychuk: alessio_alex woah throwing is not a good way to stop it
[22:17] Murvin: isaacs:  issue # is 1176
[22:17] alessio_alex: how then?
[22:17] Skola: me too zmbmartin, just to see what's out there
[22:17] tjholowaychuk: alessio_alex close()
[22:17] alessio_alex: redirect to 500 - Internal server error?
[22:18] coreb: a signed version of the source code would be nice, signed with a private key of course
[22:18] Skola: but vim's just so convenient
[22:18] alessio_alex: res.close() ?
[22:18] tjholowaychuk: alessio_alex depends what you mean by stop
[22:18] zmbmartin: Skola: I always got back to vim after a few days though
[22:18] Skola: with all the plugins :[]
[22:18] alessio_alex: die() in php
[22:18] alessio_alex: just .. stop right there mister..
[22:18] tjholowaychuk: i dont remember php
[22:18] alessio_alex: halts program execution 
[22:18] alessio_alex: right after the die 
[22:18] tjholowaychuk: process.exit()?
[22:18] samsonjs has joined the channel
[22:19] Cover|Work: i like the syntax
[22:19] isaacs: Murvin: can you gist a more reduced example with fewer moving parts?
[22:19] alessio_alex: when I want to access site.com/a_stupid_route I want the program to console log something and not show anything to the user
[22:19] Cover|Work: i.e.  do_this() or die() !!!
[22:19] isaacs: Murvin: like, just a single node program that shows the error?
[22:19] alessio_alex: that's what I want to do
[22:19] Murvin: isaccs: I sent a lot of request,  and http.request handles it without problem in the beginning,, but then, it starts sending out socket hang up.   I could able to do a retry and make the call succeed.  But, usually, after 700,000 calls, then I can't recover the socket.  
[22:20] tjholowaychuk: alessio_alex well you dont want kill the process for that
[22:20] isaacs: Murvin: yeah, can you do that in a single node program that doesn't pull in seq and express and stuff?
[22:20] alessio_alex: no no
[22:20] tjholowaychuk: php
[22:20] alessio_alex: I just want to stop it right there
[22:20] alessio_alex: and I don't know how
[22:20] tjholowaychuk: is not the right thing to compare with
[22:20] Murvin: isaacs:  yes..I think the second post I had there is native.
[22:20] alessio_alex: hmm
[22:20] dividinglimits has joined the channel
[22:21] alessio_alex: translated into node "don't process anymore, there is nothing else to do for you"
[22:21] alessio_alex: "idle"
[22:21] bitwise_: anyone dones this? changed the first line of expresso to be node --debug-brk and then use with node-inspector
[22:21] Murvin: isaacs:  is there a way to upload file to issues?
[22:21] isaacs: Murvin: can you reduce it any further?  there's a lot of code here that doesn't seem relevant to the issue.
[22:22] coreb: sublime text 2 seems nice
[22:23] alessio_alex: oh
[22:23] sadfweer has left the channel
[22:23] Murvin: isaacs: ok.  I will do that. I can be as simple as http.server   makes a http.request call to any remote site.      I will upload one there, along with my linux environment settings.
[22:23] alessio_alex: console.log('My error'); res.end();
[22:23] xerox: coreb: I wish it edited files over sftp :C
[22:23] alessio_alex: that seems to be the solution
[22:23] tjholowaychuk: alessio_alex yeah, you're just responding with no body. the event loop is much different than php
[22:23] coreb: tjholowaychuk: is jade pure haml or haml inspired?
[22:23] isaacs: Murvin: you can put it on http://gist.github.com, and then paste a link.
[22:23] isaacs: .
[22:23] asobrasil has left the channel
[22:24] tjholowaychuk: coreb it was derived from my haml.js
[22:24] tjholowaychuk: back in the day
[22:24] alessio_alex: tjholowaychuk if I want to log an error into workers.error.log
[22:24] alessio_alex: must I throw new Error()
[22:24] isaacs: tjholowaychuk: that means it's not an invention ;P
[22:24] alessio_alex: ?
[22:24] tjholowaychuk: isaacs: ?
[22:24] tjholowaychuk: alessio_alex nope
[22:24] tjholowaychuk: alessio_alex output to stderr
[22:24] tjholowaychuk: console.error()
[22:24] alessio_alex: oh
[22:24] Cover|Work: jade is just haml with no % tags
[22:24] alessio_alex: ok, thanks
[22:24] Murvin: isaacs: ok.  thanks
[22:24] isaacs: tjholowaychuk: mailing list ref.
[22:24] coreb: yeah, but is the syntax strictly haml?
[22:25] tjholowaychuk: Cover|Work it's evolved more than that
[22:25] tjholowaychuk: but essentially yeah
[22:25] tjholowaychuk: isaacs not sure what you're referring to
[22:25] tjholowaychuk: coreb no
[22:25] isaacs: tjholowaychuk: http://groups.google.com/group/nodejs/browse_thread/thread/4c878b5c29450063
[22:25] matyr has joined the channel
[22:26] Cover|Work: on the one hand jade is cleaner than haml, on the other, if you have long blocks of inline code, writing - for every line is less than ideal
[22:26] coreb: tjholowaychuk: do you get jade syntax highlighting in textpad?
[22:26] kruckenb has joined the channel
[22:26] tjholowaychuk: isaacs oh lol fuck
[22:26] tjholowaychuk: nothing we do is invention then
[22:26] isaacs: tjholowaychuk: yeah, i make that point a bit further down.
[22:26] isaacs: tjholowaychuk: but we mean something when we say "invention", so clearly that definition is kinda wanting.
[22:27] Cover|Work: "invention" means you can patent it
[22:27] isaacs: i think dean was making that basic point as well, but getting tripped up in the wordsmithery
[22:27] tjholowaychuk: evolution is definitely more the word
[22:27] Cover|Work: just like Microsoft "invented" page up / page down
[22:27] hellp has joined the channel
[22:28] isaacs: ACTION "invented" the iframe
[22:28] isaacs: of course, it was years after every browser had implemented it...
[22:28] isaacs: but i'm named as the engineer on the patent
[22:28] CodyGray has joined the channel
[22:28] isaacs: for what is essentially an iframe
[22:28] coreb: google didn't "invent" internet search either
[22:28] CodyGray has left the channel
[22:29] isaacs: and now that i've sent this irc channel into no-man's-land, i'll retreat back to the shadows..
[22:29] coreb: doing invention or evolution
[22:30] Cover|Work: everything is evolution there is no intelligent design !!!!
[22:30] puffpio has joined the channel
[22:30] samsonjs has joined the channel
[22:30] coreb: how about a revolution
[22:31] Cover|Work: you say you wanna revolution?
[22:31] Cover|Work: weelll ... you know ...
[22:32] alessio_alex has joined the channel
[22:32] alessio_alex: How can I serve a static file with a custom status code with Express.js ?
[22:32] coreb: most popular languages are c derivatives, rdbms-es have been around for _some_ years, so yeah, evolution
[22:32] patrickarlt has joined the channel
[22:32] tjholowaychuk: alessio_alex req.statusCode = n
[22:32] tjholowaychuk: sorry, res :p
[22:32] alessio_alex: well yes
[22:32] davidbanham has joined the channel
[22:32] alessio_alex: but I have 404.html
[22:33] alessio_alex: it's in the "public" thingy
[22:33] alessio_alex: res.redirect('/404.html', 404) ?
[22:33] sonnym has joined the channel
[22:33] tjholowaychuk: nope
[22:34] alessio_alex: if I say res.statusCode and then res.render() it won't work
[22:34] bloodsucker_ has joined the channel
[22:34] alessio_alex: because it's not a view, it's in the public folder
[22:34] tjholowaychuk: if you want to transfer stuff and customize specifics res.sendfile() would be better
[22:34] tjholowaychuk: it uses connect.static.send()
[22:34] tjholowaychuk: so it's the same thing
[22:34] tjholowaychuk: but more flexible
[22:34] insin: I evolve, but I don't ... revolve http://www.youtube.com/watch?v=LjAWDdbgTrM&t=2m22s
[22:34] alessio_alex: res.statusCode = 404; res.sendfile(path) ?
[22:34] zackattack has joined the channel
[22:35] tjholowaychuk: alessio_alex yeah
[22:35] Calvin has joined the channel
[22:35] alessio_alex: great
[22:35] alessio_alex: thanks
[22:36] hij1nx has joined the channel
[22:36] replore has joined the channel
[22:37] sudhirjonathan has joined the channel
[22:37] alessio_alex: the last question before I go to bed: would it make sense to build an MVC framework on top of Express.js or use just Connect.js ?:P
[22:38] tjholowaychuk: makes sense to use express yeah
[22:38] alessio_alex: (I apologize for being a pain in the ass)
[22:38] alessio_alex: res.donate('TJ', 'external mic');
[22:38] alessio_alex: res.send('thanks. bye');
[22:38] liar has joined the channel
[22:39] alessio_alex: :p
[22:41] bloodsucker_: Good morning everybodyyyyyyyyyyy
[22:41] JoseCabo: good morning!
[22:41] JoseCabo: night*** *** *** omg
[22:43] patrickarlt has joined the channel
[22:43] cafesofie has joined the channel
[22:43] niftylettuce has joined the channel
[22:46] matyr has joined the channel
[22:47] Aria has joined the channel
[22:48] zmbmartin: tjholowaychuk: is cluster meant to manage multiple apps or can I run a seperate cluster instance with each app?
[22:49] jetienne has joined the channel
[22:50] tjholowaychuk: zmbmartin it would work best with one app
[22:50] tjholowaychuk: but it's not impossible to use it with several
[22:50] tjholowaychuk: though you would be managing them as a whole
[22:51] zmbmartin: tjholowaychuk: I would rather use it with each app. Just wanted to make sure that was an intended use.
[22:51] zmbmartin: tjholowaychuk: thanks
[22:51] saschagehlich: tjholowaychuk: fyi: there is a "WITHSCORES" argument for zrangebyscore
[22:51] isaqual has joined the channel
[22:51] tjholowaychuk: saschagehlich oh nice
[22:52] Sorella has joined the channel
[22:52] saschagehlich: but nevertheless i get an syntax error on node_redis.zrevrangebyscore :(
[22:53] saschagehlich: anyone here familiar with node_redis and zrevrangescore? :(
[22:54] vnguyen has joined the channel
[22:55] jj0hns0n has joined the channel
[22:58] raidfive has joined the channel
[22:58] matyr_ has joined the channel
[22:59] sudhirjonathan has joined the channel
[23:01] Tobsn: whats that js lib called again that sorts elements in a table by size?
[23:01] Tobsn: mosiory or something
[23:01] sh1mmer has joined the channel
[23:02] markwubben has joined the channel
[23:02] c4milo1 has joined the channel
[23:02] newy has joined the channel
[23:03] mikeal has joined the channel
[23:03] Renegade001 has joined the channel
[23:03] sh1mmer: Hooray, it's office hours
[23:03] matyr has joined the channel
[23:04] darshanshankar has joined the channel
[23:04] brettgoulder has joined the channel
[23:05] rfay has joined the channel
[23:06] matyr has joined the channel
[23:08] fattytuna: anyone here have experience with node-http-proxy?
[23:08] fattytuna: I am a bit confused as to how it proxies (or, rather, doesn't proxy) websockets
[23:08] hermanjunge has joined the channel
[23:09] Tobsn: can nobody remember that library?
[23:10] Mrfloyd has joined the channel
[23:11] isaacs: THE TIME FOR THE HOURING OF OFFICE HAS BEGUN!
[23:11] sh1mmer: fattytuna: I imagine that indexzero or one of the other nodejitsu guys would know about that ;)
[23:11] fattytuna: thanks :) I will consider them pung
[23:11] sh1mmer: fattytuna: one assumes that it supports upgrades
[23:11] sh1mmer: and then shuttles the TCP traffic
[23:11] mandric has joined the channel
[23:12] indexzero: fattytuna sh1mmer: That's exactly what it does
[23:12] isaacs: fattytuna: yes, it proxies websockets.
[23:12] isaacs: ACTION steps back to let indexzero handle this one.
[23:12] sh1mmer: indexzero: I'm like a dumber you :)
[23:12] indexzero: fattytuna: If you are experiencing issues, the best way to get support is by opening a github issue: https://github.com/nodejitsu/node-http-proxy/issues
[23:12] tilgovi has joined the channel
[23:12] tilgovi has joined the channel
[23:13] fattytuna: heh.. well, I have apache + node/socket.io, and am trying to use node-http-proxy to forward port 80 to them both.. the docs seemed to imply that it would handle websockets transparently, but Chrome always connects to socket.io as xhr-polling. 
[23:13] fattytuna: Am I just misunderstanding the situation?
[23:14] Tobsn: found it: Masonry
[23:14] MooGoo: anyone here know shit about sqlite
[23:14] MooGoo: #sqlite is dead
[23:14] tbranyen: i know shit about sqlite
[23:14] tbranyen: not a lot of shit
[23:14] indexzero: fattytuna: You need to put node-http-proxy in front of apache or else apache be your bottleneck
[23:14] MooGoo: is it possible to do a direct binary transfer of a table to an in-memory database?
[23:15] tbranyen: ummm just read in the whole file i guess
[23:15] hermanjunge: If you have an issue, here's a tissue
[23:15] indexzero: fattytuna: I suspect this is something with your socket.io setup
[23:15] fattytuna: yes, it is... does this look remotely right? http://pastebin.com/TDZx8nc6
[23:15] niftylettuce: any good UI/UX guys in here?
[23:15] MooGoo: file?
[23:15] hermanjunge: Have anyone seen Marak?
[23:15] tbranyen: MooGoo: sqlite is a file
[23:15] MooGoo: yea I know
[23:15] MooGoo: but
[23:15] tbranyen: read the damn thing in as binary
[23:15] MooGoo: far as I know all I can do is recreate the table in memory
[23:15] MooGoo: how
[23:15] indexzero: fattytuna: that looks fine, have you ensured that you get a websocket connection without the proxy?
[23:15] fattytuna: indexzero: w/o node-http-proxy, Chrome connects to socket.io w/ websocket.. so you might be right, but if so I don't understand why
[23:15] fattytuna: yes
[23:16] tbranyen: MooGoo: isn't that what the encoding argument is?
[23:16] MooGoo: there's an encoding argument?
[23:16] indexzero: fattytuna: have you tried w/o hostname only?
[23:16] fattytuna: no, I'll try that now. thanks
[23:16] indexzero: just simple pass-thru proxying
[23:16] tbranyen: MooGoo: http://stackoverflow.com/questions/5784621/how-to-read-binary-files-byte-by-byte-in-node-js
[23:17] indexzero: so `var myProxy = httpProxy.createServer('127.0.0.1', 9000).listen(80);
[23:17] MooGoo: what does this have to do with sqlite....
[23:17] MooGoo: I think you misunderstand
[23:17] tbranyen: MooGoo: i think so too
[23:17] MooGoo: I have a sqlite databse file with tables and shit
[23:18] tbranyen: yeah and you asked if you coudl do a direct binary transfer of it into memory
[23:18] MooGoo: I want to put those tables into an in-memory databse without redoing all the CREATE TABLE/INSERT INTO etc stuff
[23:18] fattytuna: indexzero: still connecting w/ xhr-polling
[23:18] tbranyen: OH
[23:18] tbranyen: well thast not the same thing at all
[23:18] fattytuna: with hostnameonly removed
[23:18] MooGoo: guess not
[23:18] isaacs: ACTION super love `npm explore`
[23:18] tbranyen: MooGoo: I'd venture a not possible, but yeah thats over my head with sqlite
[23:18] indexzero: fattytuna: I suspect it's something to do w/ socket.io, I have the sample app working just fine 
[23:18] tbranyen: you could set up a ramdisk
[23:18] MooGoo: I'm venturing that too
[23:18] indexzero: w/ websockets, in chrome
[23:18] tbranyen: and load it in that xD
[23:18] MooGoo: hmm
[23:18] MooGoo: true
[23:18] MooGoo: lol
[23:18] fattytuna: ok, thanks
[23:19] MooGoo: so I just setup a ramdisk and copy the db file over
[23:19] MooGoo: interesting
[23:19] skm has joined the channel
[23:19] clifton has joined the channel
[23:19] Cover|Work: wtf npm explore?
[23:19] isaacs: Cover|Work: npm help explore
[23:20] isaacs: Cover|Work: you can do stuff like this:  npm explore express -- ls -laF
[23:20] isaacs: Cover|Work: the -- is just to keep npm from eating any -params
[23:20] eventualbuddha has joined the channel
[23:21] isaacs: Cover|Work: it's also handy when you do something like this:  git checkout git://github.com/user/project.git node_modules/project; and then some time later: npm explore project -- git pull origin master
[23:21] Cover|Work: oh sweer
[23:21] isaacs: Cover|Work: if you do `npm explore project` without any command, it'll just put you in a subshell in that folder.
[23:26] tactical2 has joined the channel
[23:26] tactical2: hi
[23:27] tactical2: are Node.js programmers scripters or programmers
[23:27] SubStack: yes
[23:27] Cover|Work: scripters?
[23:27] Cover|Work: what's a "scripter"
[23:28] jerrysv: programmers?
[23:28] SubStack: what distinguishes a "scripter" from a "programmer"
[23:28] Bonuspunkt: node.js users are awesome!
[23:28] tactical2: is Node.js scripting or programming?
[23:28] mahna: Typically dismissal of a front-end programmer)
[23:28] jerrysv: tactical2: what do you consider python people? or ruby? scripters or programmers?
[23:28] mAritz has joined the channel
[23:29] TooTallNate: tactical2: the real question is: Why does that matter?
[23:29] Cover|Work: and what's the difference?
[23:29] tactical2: they are people who could be using a real language instead
[23:29] rio{ has joined the channel
[23:29] Cover|Work: define a "real language"
[23:29] tactical2: well, would you call yourself a programmer
[23:29] Cover|Work: I would
[23:29] tactical2: an example of a real language is:  C#
[23:29] Cover|Work: it's in my job title
[23:29] tjholowaychuk: tactical2 we just dont get help from compilers
[23:29] Cover|Work: JavaScript is a real language
[23:30] TooTallNate: ok, but what defines that?
[23:30] Cover|Work: prove it's not
[23:30] tjholowaychuk: which is perhaps more difficult :p
[23:30] tjholowaychuk: IMO
[23:30] tactical2: it's a scripting language
[23:30] Cover|Work: being compiled doesn't make it a "real language"
[23:30] xandrews has joined the channel
[23:30] tactical2: in some cases, js is jit-compiled anyway
[23:31] Cover|Work: there are interpreters for C#
[23:31] fattytuna: starting to smell a little trolly in here
[23:31] niftylettuce: who gives a flying f*** what some title means?
[23:31] Cover|Work: so that means it's no longer a "real language"
[23:31] bitwise_ has joined the channel
[23:32] tactical2: i asked whether it was scripting or programmingg
[23:32] niftylettuce: oh
[23:32] niftylettuce: didn't read up ^.^
[23:32] Cover|Work: if you think there's really a major difference between interpreted and compiled languages, then you obviously need to learn more about programming
[23:32] tjholowaychuk: tactical2 you can't decide on you're own? looks like you already have
[23:32] bitwise_: http://dmarr.tumblr.com/post/6600851822/debugging-with-nodejs-and-expresso what you think, would this help anyone or do i need more info on the debugging process
[23:32] fattytuna: http://en.wikipedia.org/wiki/Scripting_language doesn't sound like Node.js
[23:32] Tobsn has joined the channel
[23:32] tactical2: isn't it a little crazy though
[23:33] niftylettuce: can we pay tjholowaychuk in bitcoins to build more goodness?
[23:33] tactical2: http.createServer()
[23:33] tactical2: that's it
[23:33] tjholowaychuk: ?
[23:33] frodenius: lol
[23:33] tjholowaychuk: CRAZY
[23:33] tactical2: (request, response)
[23:33] TooTallNate: you don't like easy code?
[23:33] tjholowaychuk: ZOMBGASDFAsdf
[23:33] tjholowaychuk: what he really wants is
[23:33] tactical2: it's like:  WriteMyProgramForMe();
[23:33] Bonuspunkt: thats maybe the most awesome line in webdevelopment EVER!
[23:33] Bonuspunkt: no it isnt
[23:33] Cover|Work: you can launch a C# webserver without writing any code
[23:34] tjholowaychuk: com.mylame.site.stupidshit.HTTPServer
[23:34] rio{: click launch IIS icon
[23:34] tactical2: MakeMyProgram(MaybeAddAFewButtonsHereAndThere, AndAddSomeDialogs);
[23:34] niftylettuce: tjholowaychuk++ I figured out how to do mod_proxy to get apache/node.js making babies
[23:34] rio{: and you have a webserver for C# :D
[23:34] Cover|Work: install IIS > webserver started
[23:34] tactical2: is that what programming has come to?
[23:34] Cover|Work: even easier
[23:34] tjholowaychuk: com.tactical2.is.really.lame
[23:35] TooTallNate: tactical2: what are you trying to write specifically?
[23:35] tactical2: a compiler
[23:35] sudhirjonathan has joined the channel
[23:35] tjholowaychuk: with node?
[23:35] Cover|Work: then go somewhere else
[23:35] tactical2: yes
[23:35] tjholowaychuk: tactical2 Y U WRITE BAD COMPILER
[23:35] TooTallNate: tactical2: good luck!
[23:35] tactical2: if node can't do this, then it is not a real language
[23:35] frodenius: look at coffeescrit
[23:35] tjholowaychuk: Y U USING NODE
[23:35] frodenius: coffescript even
[23:35] tjholowaychuk: IF U DONT LIKE
[23:35] Cover|Work: node can do this
[23:35] tjholowaychuk: YOU CAN COMPILE SHIT WITH BASH IF YOU REALLY WANT
[23:35] josephholsten has joined the channel
[23:35] SubStack: tjholowaychuk Y U NO RELEASE MORE SOFTWARES
[23:36] tjholowaychuk: I DONT KNOW
[23:36] SubStack: gogo
[23:36] tjholowaychuk: OKOK
[23:36] TooTallNate: tactical2: tj's written quite a few compilers with node, you're being really vague / trolling
[23:36] tactical2: where is the source
[23:36] Bonuspunkt: tbh if u want to build a webserver with C# u should really think about just using IHttpHandler --> http://msdn.microsoft.com/en-us/library/system.web.ihttphandler%28v=VS.100%29.aspx
[23:36] tactical2: i doubt node can make compilers
[23:36] tjholowaychuk: are you
[23:36] tjholowaychuk: retarded
[23:36] tactical2: i created an http server in c#/.net
[23:36] frodenius: lol javascript is turing complete, why should it not?
[23:36] TooTallNate: tactical2: compiling WHAT exactly?
[23:36] baoist has joined the channel
[23:37] Cover|Work: tactical2: how old are you
[23:37] tjholowaychuk: 12
[23:37] Cover|Work: this is about to explain everything
[23:37] tactical2: i am 12 and what is this
[23:37] frodenius: rofl
[23:37] frodenius: I PUT ON MY HAT AND WIZARD ROBE
[23:37] rio{: 8====>
[23:37] TooTallNate: tactical2: go back to HTML, you got some learning to do
[23:37] tactical2: i could school you folks
[23:37] tactical2: i have written all kinds of TCP servers
[23:37] Bonuspunkt: in trolling?
[23:38] clifton: I don't always write TCP servers, but when I do, I prefer assembler
[23:38] tjholowaychuk: tactical2 zomg
[23:38] Cover|Work: wow
[23:38] tjholowaychuk: i can haz tcp?
[23:38] Cover|Work: Socket.listen
[23:38] tjholowaychuk: tactical2 u can haz tcp?
[23:38] Cover|Work: go you
[23:38] tactical2: Cover, i could school you
[23:38] tactical2: i have written bots which have more intelligence than you do
[23:39] TooTallNate: tactical2: not TJ though?
[23:39] tjholowaychuk: im a bot
[23:39] tjholowaychuk: com.tj.bot
[23:39] TooTallNate: he really is
[23:39] tactical2: i once wrote a Yahoo Chat bot which would come up on the mic and speak
[23:39] MooGoo: this channel doesnt have any bots
[23:39] MooGoo: right calvin?
[23:39] Calvin: right now i go to palestinian places like gaza it is about socket hang up , and people shit those out like no tomorrow
[23:39] clifton: will your bot come at me, bro
[23:40] jerrysv: heh. amusing.
[23:40] tjholowaychuk: Calvin what do you think of tactical2
[23:40] Calvin: tactical2 u can make reference to what the videos are is not
[23:40] TooTallNate: calvin
[23:40] Cleer has joined the channel
[23:40] zeade has joined the channel
[23:40] frodenius: Calvin++
[23:40] v8bot:  frodenius has given a beer to Calvin. Calvin now has 0 beers.
[23:40] Calvin: frodenius is getting too many , but ok
[23:40] tactical2: someone on yahoo chat offered me $100 for my bot
[23:40] tactical2: but i refused
[23:40] tjholowaychuk: Calvin i can haz tcp?
[23:40] Calvin: can I execute a function, s case, haz
[23:41] aheckmann_: Calvin is my hero
[23:41] Calvin: hero , nvm guys, any idea why I'm getting excited
[23:41] tactical2: you folks should try that programming language
[23:41] tactical2: lolcode
[23:41] jerrysv: calvin++
[23:41] v8bot:  jerrysv has given a beer to calvin. calvin now has 2 beers.
[23:41] Calvin: jerrysv is an unknown encoding ' errors rs or beers
[23:41] tactical2: foo++
[23:41] tactical2: andyl++
[23:41] v8bot:  tactical2 has given a beer to foo. foo now has 1 beers.
[23:41] v8bot:  tactical2 has given a beer to andyl. andyl now has 1 beers.
[23:41] SubStack: tjholowaychuk: but in all seriousness, ryanflorence has stormed the npmtop rankings
[23:41] SubStack: not sure if I can let this stand
[23:41] TooTallNate: tactical2--
[23:41] v8bot:  TooTallNate has taken a beer from tactical2. tactical2 now has -1 beers.
[23:41] tactical2: ++test
[23:41] SubStack: might have to start releasing computer-generated modules
[23:42] jerrysv: substack: npmtop?
[23:42] SubStack: and a module to generate computer generated modules
[23:42] tactical2: you only metaphorically took a beer
[23:42] tactical2: for i had zero to begin with
[23:42] tactical2: your metaphors do not hurt me
[23:42] Cover|Work: tactical2: i make $100 before lunchtime for what I write
[23:42] igl has joined the channel
[23:42] isaacs: SubStack: well, it looks like he's just put all of mootools and jquery in there.
[23:42] tjholowaychuk: you're logic hurts me
[23:42] tactical2: but you don't have people throwing money at you
[23:42] rio{: lolwut?
[23:42] SubStack: jerrysv: https://gist.github.com/1030578
[23:43] azend: thats $33.3/h right?
[23:43] isaacs: SubStack: http://registry.npmjs.org/-/by-user/ryanflorence
[23:43] azend: from 9 till 12
[23:43] rio{: pretty easy to get people to throw money at you these days
[23:43] tactical2: Cover|Work, you don't sound like an ego at all
[23:43] SubStack: isaacs: yeah that part is obvious but he's still #1!
[23:43] TooTallNate: awww, im way down at 10 now :(
[23:43] jerrysv: substack: eek, i've got to get busy
[23:43] jerrysv: i can probably hit 19 by end of weekend if i hustle ?
[23:43] tactical2: tjholowaychuk, any logic would hurt you
[23:43] tjholowaychuk: wtf lol why are people using npm for more client stuff
[23:43] TooTallNate: how does tj have .08 of a module?
[23:43] tjholowaychuk: tactical2 DoOOooOH
[23:43] fattytuna has left the channel
[23:43] isaacs: SubStack: npmtop should be able to ignore stuff like thiat.
[23:44] jerrysv: tootallnate: he's tj
[23:44] SubStack: maybe!
[23:44] isaacs: SubStack: maybe anything that's named $other_project-blah
[23:44] SubStack: TooTallNate: each package gets 1 point that it distributes evenly among the maintainers
[23:44] isaacs: or $other_project.blah
[23:44] tactical2: so why do you use Node.js
[23:44] tactical2: instead of something ele
[23:44] jhurliman has joined the channel
[23:44] tactical2: els
[23:44] davidbanham has joined the channel
[23:44] SubStack: tactical2: conversely, why do people use something else instead of node?
[23:44] TooTallNate: go away troll
[23:45] chbrown has joined the channel
[23:45] tactical2: projecting again, Nate
[23:45] tactical2: lemme guess: you're Jewish
[23:45] tjholowaychuk: tactical2 what's your GH?
[23:45] SubStack: ACTION summons the kickenboots
[23:45] tactical2: my growth hormone?
[23:46] SubStack: ryah: ^^^
[23:46] frodenius: wait, waht
[23:46] tjholowaychuk: tactical2 you should know what that is
[23:46] niftylettuce: is TooTallNate really too tall?
[23:46] tjholowaychuk: niftylettuce he's super tall
[23:46] MooGoo: what happened to tactical1
[23:46] niftylettuce: git hubbbbb
[23:46] MooGoo: he was better at trolling than this imposter
[23:46] tjholowaychuk: niftylettuce he could crush tactical2
[23:46] tactical2: i don't use git; i use svn
[23:46] tjholowaychuk: tactical2 newb
[23:46] niftylettuce: tjholowaychuk++
[23:46] v8bot:  niftylettuce has given a beer to tjholowaychuk. tjholowaychuk now has 33 beers.
[23:46] tactical2: i'm like street fighter ii
[23:47] niftylettuce: II*
[23:47] pyrony has joined the channel
[23:47] frodenius: is quite fun but looks like shit?
[23:47] AvianFlu has joined the channel
[23:47] boaz has joined the channel
[23:48] piscisaureus: SubStack: ryah is long gone, you might have more luck with another op
[23:48] tactical2: srsly, how many diff apps can you make with Node.js
[23:48] jerrysv: tactical2: 3. 3 apps to get to the middle of the tootsie roll app writer
[23:48] tjholowaychuk: 10 million
[23:48] niftylettuce: the same number as the limit to the number of Bitcoins that will ever exist in the multiverse
[23:48] niftylettuce: but if you believe in string theory, then there are 11 dimensions of possibilities
[23:48] svenlito has joined the channel
[23:48] MooGoo: string theory is b
[23:48] MooGoo: s
[23:48] MooGoo: b
[23:48] MooGoo: s
[23:49] niftylettuce: if you know Higgs, and your dog's name is Boson, then you're in luck for making 10 petaflops of node.js apps
[23:49] MooGoo: nodejs isnt turing complete
[23:49] MooGoo: it's been proven
[23:49] Bonuspunkt: tactical2 show me some async code in c# that isnt a pain in the ass
[23:49] ekryski: Hey guys I'm trying to grab bcrypt through npm but I'm getting an error that says I'm missing the "Scripting" module. Anyone else have this problem?
[23:49] tactical2: with anonymous methods it's not
[23:49] frodenius: MooGoo link or it didn't happen
[23:49] Bonuspunkt: SHOW ME THE CODE
[23:50] tactical2: YOU CAN'T HANDLE THE CODE
[23:50] MooGoo: it happened and I had a link but it was shut down by the nodejs nazi secret police
[23:50] jerrysv: konobi: ping
[23:50] ekryski: I'm running version 2.6 of python an v1.0.5 of npm
[23:50] Bonuspunkt: i bet u cant even write async code in c#
[23:50] frodenius: aw, of course
[23:50] mAritz has joined the channel
[23:50] AvianFlu: MooGoo is glenn beck in disguise
[23:50] tactical2: ekryski:  you should have zigged when you zagged
[23:50] ekryski: ha ha ya I guess.
[23:52] ekryski: Not that tactical2's answer isn't a good one but anyone have a solution to this little problem?
[23:52] tactical2: move zig
[23:53] tactical2: you know what you doing take off every zig
[23:53] ekryski: tactical2: what?
[23:53] tactical2: you have no chance to survive make your time
[23:54] TooTallNate: are you bored?
[23:54] TooTallNate: like go write some C# or something
[23:54] tjholowaychuk: he shouldn't be bored he's making a super cool node compiler
[23:54] TooTallNate: SubStack: npmtop doesn't install for me...
[23:55] TooTallNate: ∞ ~ (master) $ npm install -g npmtop
[23:55] TooTallNate: npm ERR! TypeError: Cannot call method 'filter' of undefined
[23:55] TooTallNate: npm ERR!     at /usr/local/lib/node_modules/npm/lib/utils/load-package-defaults.js:64:15
[23:55] TooTallNate: npm ERR!     at cb (/usr/local/lib/node_modules/npm/lib/utils/async-map.js:51:11)
[23:55] TooTallNate: npm ERR!     at /usr/local/lib/node_modules/npm/lib/utils/find.js:23:20
[23:55] SubStack: o_O
[23:55] [[zz]] has joined the channel
[23:55] TooTallNate: npm ERR!     at cb (/usr/local/lib/node_modules/npm/lib/utils/graceful-fs.js:31:9)
[23:55] TooTallNate: might be one for isaacs ^
[23:55] SubStack: O_o
[23:55] tactical2: are you religious
[23:56] Bonuspunkt: 1/10
[23:56] MooGoo: why am I still not drunk
[23:56] isaacs: TooTallNate:  update to 1.0.13
[23:56] TooTallNate: :) thanks
[23:56] isaacs: np
[23:57] TooTallNate: what's the best way to update nowadays? npm install -g npm?
[23:57] TooTallNate: acutally nvm, that gave the same error message
[23:57] TooTallNate: back to the curl installer ;)
[23:57] isaacs: TooTallNate: that might work.  or curl | sh, yeah
[23:57] bitwise_: why does this happen Failed to open socket on port 5858, waiting 1000 ms before retrying
[23:57] seangaffney has joined the channel
[23:58] bitwise_: thats with a node --debug-brk test.js
[23:58] TooTallNate: isaacs:
[23:58] TooTallNate: fetching: http://registry.npmjs.org/npm/-/npm-1.0.13.tgz
[23:58] TooTallNate: gzip: stdin: unexpected end of file
[23:58] TooTallNate: npm-install-3205.sh: line 89: cd: *: No such file or directory
[23:58] TooTallNate: It failed
[23:58] ekryski: isaacs: maybe you can help with this.  When I'm trying to install bcrypt I get a no Scripting module error.  I'm running python v2.6 and npm v1.0.5
[23:59] tim_smart has joined the channel
[23:59] isaacs: TooTallNate: well that's odd.
[23:59] isaacs: TooTallNate: try again?
[23:59] TooTallNate: nope, same thing
[23:59] isaacs: TooTallNate: can you gist the whole thing?
[23:59] isaacs: TooTallNate: also, what os is this?  what version of tar?
