[00:00] AAA_awright: And that returns a list of every combination for ?resource ?name and ?value that fits into that pattern
[00:00] jesusabdullah: It'd be cool to be able to do a couch-esque mapreduce over your resources instead of using an sql-like syntax
[00:00] AAA_awright: So it handles very similar to SQL
[00:00] AAA_awright: And is quite a bit more flexible too
[00:00] jesusabdullah: not to say that sparql sucks because I don't know, but I do think that would be neat ^^
[00:01] IanCormac84 has joined the channel
[00:01] AAA_awright: I'm not familiar with couch-esque mapreducing action
[00:01] dget has joined the channel
[00:01] AAA_awright: I know about CouchDB and doing MapReduce but I'm not sure what it's good for
[00:01] Aria: You can walk a graph, too. That's the equivalent of map-reduce, really.
[00:02] Aria: And it's the other major mode of query.
[00:02] AAA_awright: Ah yeah
[00:02] jesusabdullah: well, it's a reasonable way to do queries on a big ol' stack of documents I suppose
[00:02] jesusabdullah: I'm certainly no database expert
[00:02] AAA_awright: I have SPARQL queries stored as RDF resources, you have to walk those to evaluate the query
[00:02] jesusabdullah: it just felt like a good mental model is all
[00:02] AAA_awright: It's pretty cool actually
[00:03] trepan has joined the channel
[00:03] jesusabdullah: hmm
[00:03] joshkehn has joined the channel
[00:03] jesusabdullah: Interesting
[00:03] joshkehn has left the channel
[00:03] AAA_awright: jesusabdullah: Documents are very similar to resources probably
[00:03] AAA_awright: Except that you can only store facts 1 level deep, so that forces you to atomicize your data, which is a good thing
[00:04] ryanfitz has joined the channel
[00:04] AAA_awright: jesusabdullah: Read my description of RDF at http://magnode.org/doc/en/ if you haven't
[00:05] Aria: If document stores (big piles of arbitrary values) and relational databases in first normal form lie on a spectrum, RDF is the bit where the spectrum curls back and links the two ends ;-)
[00:05] TheFuzzball has joined the channel
[00:05] AAA_awright: Hah that's a good way to put it
[00:06] AAA_awright: Everything is in 1st normal form, but not in a way it becomes a PITA because everything has a globally unique identifier too
[00:06] piscisaureus__ has joined the channel
[00:06] jesusabdullah: AAA_awright: I think you should write a tl;dr for this thing
[00:06] Aria: More like 0th normal, where every column has its own relation. But then made sane because it all works this way.
[00:06] jesusabdullah: that is, developers should be able to just glance at a quick example and be like, "oh hey that works!"
[00:06] AAA_awright: I don't think I'm familiar with 0th normal
[00:06] jesusabdullah: "That was simple enough"
[00:06] AAA_awright: Aria: What's DKNF?
[00:06] AAA_awright: Same thing?
[00:07] AAA_awright: hmmm, yeah jesusabdullah
[00:07] bluebit has joined the channel
[00:07] kriszyp has joined the channel
[00:08] Aria: Nah, DKNF is trying to do OWL/RDF without any infrastructure.
[00:08] cjm has joined the channel
[00:09] Aria: 0nf is just "join for every column" -- querying it looks a lot like sparql-turned-SQL, like postgresql mappings do
[00:10] enmand has joined the channel
[00:14] Sorella has joined the channel
[00:15] Kami__ has joined the channel
[00:16] cjheath has joined the channel
[00:17] cjm has joined the channel
[00:19] fread2281 has joined the channel
[00:21] captain_morgan has joined the channel
[00:24] replore_ has joined the channel
[00:24] replore has joined the channel
[00:25] mandric has joined the channel
[00:25] [[zz]] has joined the channel
[00:27] stagas has joined the channel
[00:28] mikeal has joined the channel
[00:28] dget has joined the channel
[00:30] Tobsn has joined the channel
[00:35] neoesque has joined the channel
[00:35] kriszyp2 has joined the channel
[00:37] a_meteorite: Sigh. Dissapointed Cluster doesn't work with 0.5.x yet
[00:37] a_meteorite: uses customFds
[00:39] devongovett has joined the channel
[00:40] c4milo has joined the channel
[00:41] ewj has joined the channel
[00:44] scott_gonzalez has joined the channel
[00:44] dshaw_ has joined the channel
[00:44] dominictarr has joined the channel
[00:45] kriszyp has joined the channel
[00:47] Drakonite has joined the channel
[00:50] Tobsn: does anyone know what this means:
[00:50] Tobsn: { stack: [Getter/Setter], arguments: [ 'ILLEGAL' ], type: 'unexpected_token', message: [Getter/Setter] }
[00:50] Tobsn: catch throws me that
[00:51] rayfinkle has joined the channel
[00:52] Lingerance: It's better if you print out .stack and .message
[00:52] jesusabdullah: Tobsn: That's the error object. What you usually see when an error errors, is the message and the stack.
[00:52] Lingerance: ... also that error is worthless if you don't know where the error is (which you can use stack to find out)
[00:53] jesusabdullah: so, instead of console.log(err) do console.log(err.message) or console.log(err.stack) depending on how much information you want
[00:53] blaenk has joined the channel
[00:53] blaenk has joined the channel
[00:53] xtianw has joined the channel
[00:53] Tobsn: i actually found the error
[00:54] Tobsn: its in my request function
[00:54] Tobsn: if( total += data.length > 10240 ) {
[00:54] Tobsn: data is > 10240
[00:54] Tobsn: this.emit('error') gets triggered
[00:54] Tobsn: fuck my life.
[00:54] Tobsn: 8 hours of fucking around and not finding the error because "sometimes" it worked
[00:54] Tobsn: ...
[00:55] jesusabdullah: Happens, maan
[00:56] blaenk: is there a way to see if a Buffer object was instantiated with the 'base64' encoding?
[00:56] blaenk: new Buffer('laosdfas', 'base64')
[00:57] Lingerance: Why would you want to?
[00:58] blaenk: just to piss you off
[01:00] blaenk: oh I got this now :)
[01:00] nerdy has joined the channel
[01:02] blaenk: was a misconception on my part
[01:03] Tobsn: ping movies.netflix.com
[01:03] Tobsn: i guess amazon ec2 is fucking up again this weekend
[01:03] Tobsn: last night foursquare was down for 5 hours
[01:03] Tobsn: now netflix web interface is down
[01:03] blaenk: yup timeouts
[01:03] MooGoo: been down for a bit
[01:03] ryanallenbobcat_ has joined the channel
[01:03] Tobsn: wanna bet amazon fucked up again?
[01:04] MooGoo: ironic since its usualy netflix that is making the rest of my internets not work
[01:04] CarterL has joined the channel
[01:04] Tobsn: hehe
[01:04] Tobsn: funny, its working on my apple tv
[01:05] Tobsn: seems like their api and streaming servers are still up
[01:06] Tobsn: i really down like their mini cluster per service concept.. you can always see that on xbox/appleTV - sometimes "suggested movies" is missing, or recently watched, or new movies etc.
[01:06] Tobsn: menu items are just randomly missing
[01:06] MooGoo: their suggestion list is terrible
[01:07] Tobsn: lol yeah that too
[01:07] MooGoo: it seems to always list the opposite of what you want to watch
[01:07] zeade has joined the channel
[01:07] Tobsn: also, did you ever recognized that the new movies list is completely suffled up? new releases end up somewhere in the middle
[01:09] MooGoo: lol they are doing that thing where you can only watch the videos listed on their technical dificulties page
[01:09] zkirill has joined the channel
[01:09] Tobsn: hehe
[01:09] tokuzfunpi has joined the channel
[01:10] Tobsn: what i love is when you go through the tv shows under new releases and you find a tv show with a cover that has "NEW EPISODES" on it but its somewhere within the stuff from 2 month even if they just uploaded it yesterday
[01:10] Tobsn: someone really did not think ahead of how to manage that stuff
[01:10] Sorella has joined the channel
[01:14] Emmanuel` has joined the channel
[01:16] toxico has joined the channel
[01:18] harthur has joined the channel
[01:20] Tobsn: We're currently experiencing a technical issue.
[01:20] Tobsn: While we get things back to normal, some features aren't available - but you can play select titles on this page.
[01:20] Aria: I'm sure someone did.
[01:20] Aria: I'm sure they keep that person far away from the controls
[01:21] miccolis has joined the channel
[01:22] Tobsn: so thats funny
[01:22] Tobsn: the movies you see on that page
[01:22] Tobsn: work
[01:22] Tobsn: everything else is borked
[01:22] Tobsn: i wonder if they have a server thats up 100% just to serve those fallback titles
[01:22] Tobsn: i bet they do that for legal reasons
[01:22] Tobsn: so nobody can say you couldnt watch at all
[01:24] Aria: Heh. Possible.
[01:24] Aria: Or it's just sharded and some of the shards are down
[01:24] nerdfiles1 has joined the channel
[01:25] nerdfiles1 has left the channel
[01:26] zkirill has joined the channel
[01:29] joshgillies has joined the channel
[01:30] k1ttty has joined the channel
[01:31] abraxas has joined the channel
[01:32] ditesh|cassini has joined the channel
[01:32] stagas has joined the channel
[01:33] bluebit has joined the channel
[01:37] dominictarr has joined the channel
[01:37] kriszyp has joined the channel
[01:37] JakeyChan has joined the channel
[01:39] JakeyChan_ has joined the channel
[01:39] LuckySMack has joined the channel
[01:39] LuckySMack has joined the channel
[01:40] icewhite has joined the channel
[01:40] LuckySMack has left the channel
[01:42] JasonSmith: isaacs: About the 409 conflict and _update bug I reported, I mostly posted it to have the workaround written down somewhere. I don't think it's a big deal. Replacing the _update function is a "rewrite" and rewrites are only so valuable, yak now?
[01:42] JasonSmith: yaknow?
[01:42] JasonSmith: #autocorrect
[01:43] joshthecoder has joined the channel
[01:46] mikeal has joined the channel
[01:48] kimico has joined the channel
[01:49] ryanfitz has joined the channel
[01:52] cjm has joined the channel
[01:54] tshpaper has joined the channel
[01:55] tshpaper has joined the channel
[01:56] tshpaper has joined the channel
[01:57] jldbasa has joined the channel
[01:57] stagas has joined the channel
[01:57] Sorella has joined the channel
[01:58] sineltor has joined the channel
[02:00] devongovett has joined the channel
[02:01] piscisaureus__ has joined the channel
[02:02] andrewfff has joined the channel
[02:03] deedubs1 has joined the channel
[02:03] xtianw has joined the channel
[02:06] deedubs has joined the channel
[02:07] spathi^ has joined the channel
[02:08] dgathright has joined the channel
[02:10] gavin_huang has joined the channel
[02:10] a_suenami has joined the channel
[02:11] briandh has joined the channel
[02:11] zkirill has joined the channel
[02:12] JSManiacs has joined the channel
[02:13] epsas has joined the channel
[02:16] Emmanuel` has joined the channel
[02:16] coderdad has joined the channel
[02:18] CrypticSwarm has joined the channel
[02:21] jspiros has joined the channel
[02:23] ParadoxQuine has joined the channel
[02:24] scott_gonzalez has joined the channel
[02:25] dget has joined the channel
[02:25] kriszyp has joined the channel
[02:25] dexter_e has joined the channel
[02:26] ParadoxQuine: hey quick question: i have an express project and I want to get the connect object, and connect isn't in the top level of node_modules because it's just installed as a dependency for express. how do i grab the connect object with a require() statement without adding connect to my package.json separately?
[02:27] sineltor: what do you want it for?
[02:27] sineltor: … is it so you can interact with express, or so you can use some of connect's other handlers and stuff?
[02:27] sineltor: if its the latter, you should depend on it directl
[02:27] sineltor: directly
[02:27] sineltor: so the version of connect you depend on isn't tied to the version of connect that express is using
[02:27] daaku has left the channel
[02:28] ParadoxQuine: just so i can grab parseCookie out of that and use it to parse the cookie out of the header (i'm using socket.io and i need access to the sessionID express generated so im following a writeup on a good way to do that)
[02:28] ParadoxQuine: so not to do anything sophisticated with connect at all :P
[02:28] maletor has joined the channel
[02:29] sineltor: ok
[02:29] sineltor: I'd still recommend putting it in your package.json as well
[02:30] ParadoxQuine: ok, i'll do it that way then since i'm trying to learn the standard approach
[02:30] sineltor: :)
[02:30] ParadoxQuine: thanks sineltor!
[02:30] sineltor: np
[02:31] jacobolus has joined the channel
[02:31] ParadoxQuine: and before i do the extra work, i should probably ask: is there a dead-simple way to have express and socket.io interact so i can get a sessionID (or better yet a session object that I could further use) on 'connect'
[02:32] sineltor: on socket.io connections?
[02:32] ParadoxQuine: yep
[02:32] sineltor: I'm not sure, sorry
[02:32] sineltor: I know you get session objects from socket.io connections
[02:32] sineltor: which have session IDs and all that
[02:32] EhevuTov has joined the channel
[02:32] sineltor: but I don't know how that interacts with express sessions
[02:33] a_meteor_proxy has joined the channel
[02:34] ParadoxQuine: mk. i'm trying to keep the user logged in even if they close the tab so i think i have to use a session cookie and afaik socket.io doesn't deal with such things
[02:35] tilgovi has joined the channel
[02:35] tilgovi has joined the channel
[02:35] _dc has joined the channel
[02:37] deedubs has joined the channel
[02:38] sineltor: yeah I *think* you're right...
[02:38] sineltor: though the socket.io guys sure seem to enjoy adding features
[02:38] deedubs: wow sad panda face at facebook-client, which is used here https://github.com/heroku/facebook-template-nodejs to promote Facebook/Heroku/Node karate chop.
[02:38] kriszyp has joined the channel
[02:39] jspiros has joined the channel
[02:39] dmitrig01 has joined the channel
[02:39] deedubs: the whole repo has one instance of the string 'error' https://github.com/DracoBlue/node-facebook-client
[02:39] deedubs: "I don't use the facebook API much. But when I do it better not throw an error"
[02:40] sineltor: hehe
[02:40] sineltor: weekend project gogo
[02:41] _dc has joined the channel
[02:42] zcopley has joined the channel
[02:42] jspiros has joined the channel
[02:42] Qbix2 has joined the channel
[02:46] renaudsauvain has joined the channel
[02:48] flamboz has joined the channel
[02:48] mikeric has joined the channel
[02:49] piscisaureus___ has joined the channel
[02:50] jspiros has joined the channel
[02:52] boltR has joined the channel
[02:53] zkirill: anyone have a good guide for connecting to MongoHQ from node?
[02:53] deedubs: zkirill: using mongoose?
[02:53] zkirill: deedubs: node-mongodb-native
[02:54] dshaw_ has joined the channel
[02:54] deedubs: probs the same just pass {uri: 'mongodb://user@pass:host:port/db'} no?
[02:55] zkirill: deedubs: thanks, i'm just really confused by where that would even go because I'm using server = new mongo.Server("127.0.0.1", 27017, {}); to connect
[02:56] zkirill: deedubs: found it, thanks https://gist.github.com/1209163
[02:56] avdg has joined the channel
[02:56] deedubs: ah sorry
[02:56] deedubs: I thought mongoose passed directly to native but guess they break it up
[03:00] meso has joined the channel
[03:01] mattrobenolt has joined the channel
[03:01] mattrobenolt: I'm trying to write an error handler middleware for Connect, and I can't get the middleware to catch an error thrown from the main server.
[03:02] JaKWaC has joined the channel
[03:02] mikeal has joined the channel
[03:02] stagas has joined the channel
[03:02] deedubs: It's sensitive to where in the middleware stack your putting it
[03:03] wookiehangover has joined the channel
[03:04] passionke has joined the channel
[03:04] materialdesigner has joined the channel
[03:04] mattrobenolt: deedubs: Care to explain?
[03:04] mattrobenolt: I have this just for testing: https://gist.github.com/9a57017455370fbef5b5
[03:04] mattrobenolt: And first of all, in the middleware, if I have the variable "err", the middleware isn't even called. And without it, the try…catch around next() doesn't catch anything.
[03:05] toopay has joined the channel
[03:05] sineltor: so....
[03:05] sineltor: first, I'm pretty sure middleware takes (req, res, next) not (err, req, res, next)
[03:05] dget has joined the channel
[03:06] mattrobenolt: sineltor: I'm following the pattern here: https://github.com/senchalabs/connect/blob/master/lib/middleware/errorHandler.js
[03:06] mattrobenolt: And, actually, I can't get that errorHandler middleware to do anything either.
[03:06] PastorBones has joined the channel
[03:07] mattrobenolt: I'm using node 0.4.x, and connect, whatever the latest is. 1.0?
[03:07] deedubs: ahh well
[03:07] deedubs: you see
[03:07] julioj has joined the channel
[03:07] deedubs: that is a special flavour of middleware that gets added ala https://github.com/senchalabs/connect/blob/master/examples/error.js#L17
[03:07] deedubs: wait...
[03:07] deedubs: what
[03:07] PastorBones: I'm using node with express and for each request it's calling my route twice...anybody have a clue as to why?
[03:08] ecin has joined the channel
[03:08] PastorBones: I have two routes ('/') and ('/:tag')
[03:08] mattrobenolt: deedubs: The middleware is included AFTER the main server to catch errors?
[03:08] deedubs: yea
[03:09] mattrobenolt: Ahh, so Connect's middleware does an onionskin?
[03:09] deedubs: indeed
[03:09] mattrobenolt: Middleware before the server are run on the request, and after are handled on the response, correct?
[03:09] sineltor: ACTION is confused about how its implementing that
[03:09] mattrobenolt: Gotcha. That explains it all. :)
[03:10] sineltor: mattrobenolt: is there example code of that kicking around anywhere?
[03:10] sineltor: that sounds useful
[03:10] mattrobenolt: I assumed every middleware was run through twice automatically.
[03:10] mattrobenolt: sineltor: For what specifically?
[03:10] sineltor: adding middleware 'after the server'
[03:11] sineltor: - I'm confused as to how you would use that errorHandler middleware, and if you use it normally, how connect is figuring out that it takes err as the first argument
[03:11] sineltor: instead of the request
[03:11] mattrobenolt: A picture would better explain. One second.
[03:12] mattrobenolt: This is from Django docs, but it's the best explanation I know of: https://docs.djangoproject.com/en/dev/_images/middleware.png
[03:12] mattrobenolt: Connect just implements request and response middlewares separately.
[03:12] mattrobenolt: That's what I wasn't aware of.
[03:12] sineltor: I've never heard of that
[03:13] sineltor: how do you add response middleware?
[03:13] mattrobenolt: So your request comes in, and it first goes through the first middlewares before it even hits your "view". Your main server function.
[03:13] mattrobenolt: So for example, processing query string variables, routing functions, sessions, etc.
[03:13] mattrobenolt: After your "view" runs, it goes back through all of the response middleware. Those are typically used for caching or error logging.
[03:14] sineltor: the thing is, how would middleware do that?
[03:14] sineltor: if my middleware calls next(), I might return before I've served up the response
[03:14] sineltor: - because I could be serving up the response asynchronously
[03:15] mattrobenolt: And that's fine. Unless you're exiting the entire process.
[03:15] sineltor: …. right
[03:15] sineltor: which we're not doing
[03:15] mattrobenolt: The middleware is run before it gets to the "core". Then the rest are running after.
[03:15] mattrobenolt: If you're returning from your middleware, it's still going to run through the response middleware.
[03:16] mattrobenolt: Now, I don't know exactly how that's implemented in Connect because I haven't dug through the source.
[03:16] sineltor: hm
[03:16] mattrobenolt: But the concepts of middleware are pretty solid and have been around for a bit.
[03:16] mattrobenolt: Django does it by every call running through the same middleware class twice.
[03:17] mattrobenolt: Once with a process_request() method, and once with process_response()
[03:17] sineltor: see, I don't think it does that though
[03:17] sineltor: let me make a test...
[03:17] mattrobenolt: No, in Express, they are separate.
[03:18] mattrobenolt: Err, Connect, sorry.
[03:19] mattrobenolt: Ok, I see what it's doing. It's pretty basic.
[03:19] mattrobenolt: It's just a function stack that is looped through and called.
[03:19] sineltor: yeah
[03:19] kriszyp has joined the channel
[03:19] sineltor: - but does it really call middleware twice?
[03:19] mattrobenolt: Each argument to the connect() "constructor" is just appended to a call stack.
[03:19] mattrobenolt: No, Connect calls each once.
[03:19] mattrobenolt: That's the point of my original confusion. :)
[03:20] mattrobenolt: I assumed they were based on my previous experience.
[03:20] pid_ has joined the channel
[03:20] sineltor: rigth
[03:20] sineltor: cool
[03:20] sineltor: … that matches my experience
[03:20] mattrobenolt: * previous experience in other languages/frameworks.
[03:21] mattrobenolt: Yeah, sorry for that confusion, haha
[03:21] sineltor: :)
[03:21] sineltor: ok - but still, that errorHandler you linked takes err as the first argument
[03:21] mattrobenolt: I come from a heavy Python background and had some false assumptions about how they worked here.
[03:21] sineltor: yeah, np
[03:21] mattrobenolt: Right, but it must come AFTER the main server call/view, whatever you want to call it.
[03:21] sineltor: yeah
[03:22] sineltor: - you can't put a catch block around next() and expect to get the errors
[03:22] sineltor: because errors can be thrown asynchronously
[03:22] mattrobenolt: At that point, it has an "err" variable if it errors out.
[03:22] mattrobenolt: Right, and it all became clear to me after I knew what Connect was doing with middleware.
[03:22] sineltor: :)
[03:22] mattrobenolt: I think we're on the same page here, haha
[03:22] sineltor: hehe cool
[03:22] sineltor: so how do you use that errorHandler code?
[03:22] mattrobenolt: I updated: https://gist.github.com/9a57017455370fbef5b5
[03:22] mattrobenolt: That works.
[03:23] mattrobenolt: You just include the middleware after your main server block.
[03:23] mattrobenolt: So it's caught AFTER the exception is thrown.
[03:23] mattrobenolt: It needs to be the last method in the call stack to catch anything.
[03:23] sineltor: change the gist to print out the 'err' variable
[03:23] mattrobenolt: It it comes before, no error has been thrown yet.
[03:23] mattrobenolt: Yeah, it'll work. I can do err.stack at that point to get the error stack.
[03:23] sineltor: I bet it doesn't contain the err, but instead contains the request
[03:24] sineltor: pl
[03:24] sineltor: ok
[03:24] sineltor: really??
[03:24] mattrobenolt: Nope, it contains the error.
[03:24] mattrobenolt: Yeah.
[03:24] mattrobenolt: https://github.com/senchalabs/connect/blob/master/lib/proto.js#L182
[03:24] mattrobenolt: It's handled there.
[03:24] sineltor: aaaaaah
[03:24] sineltor: var arity = layer.handle.length;
[03:24] mattrobenolt: If there is an error, and there are 4 arguments, it calls it. :)
[03:24] sineltor: I didn't know you could do that :)
[03:24] mattrobenolt: I didn't either, haha
[03:25] sineltor: thats … unusual.
[03:25] sineltor: heh
[03:25] sineltor: good to know though!
[03:25] mattrobenolt: Hence why I was in here asking.
[03:25] mattrobenolt: Yeah, it is unusual. But I guess it works.
[03:25] mattrobenolt: I wish it was more like Django though. An actual onion skin effect.
[03:25] sineltor: that was how I was confused - I was like "how can it tell that it can take an error argument?'
[03:25] sineltor: heh...
[03:25] sineltor: so what, the handlers are called again on the way out?
[03:25] mattrobenolt: And each layer of the middleware was run through twice with two different methods.
[03:25] mattrobenolt: No, you have to specify two sets of handlers.
[03:26] sineltor: you could wrap it pretty easily to give you that behaviour
[03:26] mattrobenolt: One set goes before your main view, and the rest go after.
[03:26] mattrobenolt: Yeah, I could write my own middleware to act as a middleware for Connect, haha
[03:26] sineltor: :)
[03:26] sineltor: … but connect middleware is all called in turn. You can just add some functions before your view and some functions after
[03:26] mattrobenolt: Not worth it. I'm glad to know the behavior now. I only need to catch errors.
[03:26] sineltor: yep
[03:27] mattrobenolt: I'm writing an adapter to hook into Sentry for error logging.
[03:27] sineltor: - I guess you don't get anything called once a piece of middleware handles the request, because it doesn't call next()
[03:27] sineltor: … nice
[03:27] mattrobenolt: Ever use Sentry?
[03:27] sineltor: no
[03:27] mattrobenolt: It was developed by the main dude at Disqus.
[03:28] mattrobenolt: It's an error logging server. And a client sends errors to it.
[03:28] diogogmt has joined the channel
[03:28] sineltor: I was chatting to some of the guys from some web2.0 log analysis startup the other day though
[03:28] sineltor: at a trade show thing
[03:28] sineltor: um… what were they called?
[03:28] sineltor: but yeah - that looks good. All web 2.0-ish
[03:28] mattrobenolt: But right now, it's really geared towards Django development. He has finally broken out the client into it's own project, Raven. So I'm just writing a Node client as well so all errors can be logged in the same place.
[03:29] sineltor: cool.
[03:29] sineltor: this is my baby: http://sharejs.org/
[03:29] sineltor: its an operational transform library so you can do realtime text (& JSON) editing through nodejs
[03:30] mattrobenolt: That sounds fun.
[03:30] sineltor: yeah :)
[03:30] sineltor: though socket.io is giving me troubles
[03:30] mattrobenolt: I'm leading development on a startup, Drund.
[03:30] mattrobenolt: drund.com
[03:31] PastorBones has left the channel
[03:31] sineltor: wow - that looks ambitious
[03:31] mattrobenolt: It is. ;)
[03:31] mattrobenolt: We're selling to ISPs to distribute to their customers. It's not a direct to consumer product at all.
[03:31] mattrobenolt: It's like those shitty web portal things your ISP gives you, but on crack.
[03:31] mattrobenolt: It's a little virtual OS.
[03:32] mattrobenolt: Web apps, storage, chat, phone calling, etc.
[03:32] sineltor: cute
[03:32] mattrobenolt: Oh, and website publishing.
[03:32] sineltor: cool
[03:32] sineltor: I was gonna say, why can't I just use normal web apps anyway?
[03:32] mattrobenolt: And the ISP can brand it however they want.
[03:32] sineltor: - but things like phone calling through the page is really nice
[03:33] mattrobenolt: You honestly can.
[03:33] mattrobenolt: Our market isn't people like us. ;)
[03:33] orospakr has joined the channel
[03:33] mattrobenolt: Right now, our first partners are more rural wireless ISPs. The idea is giving the tools to people who haven't been exposed to technology very much.
[03:34] mattrobenolt: And small businesses. We have a lot of nifty collaboration tools for them and communication pieces.
[03:36] mattrobenolt: So if say, you're a small business owner who is a customer if ISP "XYZ", they give you Drund. You can set up all of your business social applications in there, as well as create accounts for all of your employees. Now, you can give someone privileges to update your company's Facebook or Twitter account without anything else. And everyone within the company is instantly able to do browser-to-browser calling if they're logged in anywhere. Or if they're
[03:36] slifty_corsair has joined the channel
[03:36] mattrobenolt: Document sharing, blah blah blah.
[03:36] sineltor: yep
[03:36] sineltor: how do things like document sharing work?
[03:36] mattrobenolt: Then all of the web apps can be used to publish to a website.
[03:37] mattrobenolt: We don't do any real time collaboration, it's not like, send the document to someone.
[03:37] mattrobenolt: And they get their own copy of it.
[03:37] sineltor: yeah ok.
[03:38] mattrobenolt: It's at least a fun project to work on. I don't necessarily believe it's the best idea in the world, but it's a challenge definitely.
[03:39] galaxywatcher has joined the channel
[03:40] mattrobenolt: Looks like this: http://a.yfrog.com/img823/3696/84316227.jpg
[03:42] sineltor: hey, thats quite nice!
[03:42] sineltor: y'know.. that interface would work really well on an ipad
[03:42] sineltor: though maybe the phone thing wouldn't work without flash
[03:43] mattrobenolt: Mobile devices are planned. We need to secure some funding first. ;)
[03:43] sineltor: hehe fair enough
[03:43] mattrobenolt: And there are ways to do the phone stuff without using Flash for iDevices.
[03:43] Spion_ has joined the channel
[03:47] smathy_ has joined the channel
[03:47] gregmore_ has joined the channel
[03:48] Spion has joined the channel
[03:49] martin_sunset has joined the channel
[03:49] boehm has joined the channel
[03:50] Sarav has joined the channel
[03:50] towski has joined the channel
[03:51] Sarav: I am trying to install node in windows.. I am getting error like this Error: waf-light requires wafadmin -> export WAFDIR=/folder
[03:51] Sarav: anybody have solution for this?
[03:53] Murugaratham has joined the channel
[03:54] harthur has joined the channel
[03:54] sorensen: mmmeeeowww
[03:55] Saravanan has joined the channel
[03:55] dexter_e has joined the channel
[03:56] Carter has joined the channel
[03:57] jsanford has left the channel
[03:57] Saravanan has left the channel
[03:59] flamboz has joined the channel
[04:00] kriszyp has joined the channel
[04:00] gregmoreno has joined the channel
[04:02] ryanfitz has joined the channel
[04:10] nodelog has joined the channel
[04:11] actonapp has joined the channel
[04:11] martin_sunset_ has joined the channel
[04:11] delian66 has joined the channel
[04:11] lmorchard has joined the channel
[04:11] renaudsauvain has joined the channel
[04:11] Shrink has joined the channel
[04:11] Tobbe has joined the channel
[04:12] hazridi has joined the channel
[04:12] meder has joined the channel
[04:12] mattrobenolt1 has joined the channel
[04:13] mattrobenolt1 has left the channel
[04:15] __class__ has joined the channel
[04:16] RexM: i'm trying to share some mongoose schema files between two web applications that i'm working on, what's the best way to go about doing that? obviously i don't want to define my schemas twice, and make any changes in two places, any tips for a node noob? :)
[04:16] SomeoneWeird has joined the channel
[04:17] sstreza has joined the channel
[04:18] SomeoneWeird has joined the channel
[04:18] caolanm has joined the channel
[04:20] caolanm has joined the channel
[04:21] superjudge has joined the channel
[04:21] caolanm: now require.paths has been removed is there any way to dynamically make a module globally available using require() ?
[04:21] SuMarDi has joined the channel
[04:22] ncb000gt has joined the channel
[04:22] Nuck: caolanm: huh o_O
[04:22] sineltor: would editing the globals object work?
[04:23] Nuck: caolanm: You can put node_modules in the user's folder?
[04:23] Nuck: Or root?
[04:23] Nuck: Or, I believe, the node bin folder
[04:23] caolanm: I'd prefer not to create node_modules directories and symlinks in random directories
[04:23] caolanm: basically I have a script that will run another script which I don't have fore-knowledge of
[04:24] Nuck: RexM: The best way to share schemas would be to put them in a file and then export them via like exports.ThingSchema = ThingSchema;
[04:24] Nuck: And then to require() that file in both
[04:24] caolanm: I don't want to modify the NODE_PATH environment variable, spawn a new process, process the result, output as JSON, read into the original process ... etc
[04:24] ohtogo has joined the channel
[04:25] caolanm: what I'd really like to do is require.paths.push('foo')
[04:25] caolanm: ;)
[04:25] Nuck: caolanm: Perhaps you're approaching the problem incorrectly?  I've done that before >_>
[04:25] caolanm: Nuck: probably, but that's kind of why I'm asking
[04:25] RexM: Nuck: cool, that's how i have my files setup, right now, i guess it's just a matter of getting them referenced in both projects without it erroring. Do you typically just have one app reference the files of another, or do you have a common place where both apps reference the schemas?
[04:25] Nuck: caolanm: Trust me, changing the behavior of require() for all future scripts is *never* good.
[04:25] Nuck: Think about the repurcussions?
[04:26] caolanm: I'm not running the kind of node environment you'd expect ;)
[04:26] Nuck: RexM: Well, the easiest way for me is to just copy the files (or I guess you could use links?)
[04:26] mattrobenolt has joined the channel
[04:26] RexM: Nuck: yeah, i didn't want to copy them, i have links setup now, and it's erroring for some reason
[04:26] mattrobenolt: Anyone play with zlib in the 0.5 branch yet?
[04:26] Nuck: RexM: What kind of links?
[04:26] Nuck: hard link?
[04:26] Nuck: :/
[04:26] RexM: soft links
[04:26] Nuck: RexM: Ah k
[04:27] tbranyen: caolanm: you could probably just write your own version of require that pushes into the cache
[04:27] tbranyen: heh
[04:27] Nuck: RexM: This on *nix?
[04:27] RexM: Nuck: yes, ubuntu (in a vm on windows 7, if that matters)
[04:27] caolanm: tbranyen: that could be an option
[04:27] tbranyen: i was looking into the new module loading code and it seems to be significantly refactored
[04:27] Nuck: RexM: Nah, it shouldn't matter, AFAIK.
[04:27] caolanm: seems a bit hacky though
[04:28] caolanm: but then, in some ways it makes sense...
[04:28] Nuck: Hmmm... Not sure what to say, honestly, RexM, try gisting the error?
[04:28] fread2281 has joined the channel
[04:28] RexM: i made a link for a folder called "models" to the "models" folder in my other project, yeah, i'll grab the error real quick
[04:28] tbranyen: at the end of the day you want to get your shared object that represents the module into the require.cache
[04:29] tbranyen: seems like of lame to confine yourself to the perceived limitations when its "easy" enough to step outside the box
[04:30] tbranyen: i think?
[04:30] mattrobenolt: Can I use the zlib library just to compress text? Instead of feeding it an actual source stream?
[04:30] Nuck: tbranyen: The limitations are there for a reason :)
[04:30] FiveLemon has left the channel
[04:30] tbranyen: duck punch the monkey patch
[04:30] tbranyen: Nuck: well they are artificial limitations
[04:31] tbranyen: imposed to stop nooby mistakes i'd imagine
[04:31] txxt has joined the channel
[04:31] Nuck: mattrobenolt: Probably doable, I'd imagine.  Haven't tried though
[04:31] caolanm: tbranyen: Nuck: like I said, this is a particularly custom environment
[04:31] caolanm: https://github.com/caolan/kanso
[04:31] Nuck: tbranyen: require.paths was removed to prevent a catastrophe of global proportions.  As in, people start fucking around with in and it slowly becomes unmanagable ;)
[04:31] tbranyen: right, which i'd imagine calls for some customization :D
[04:32] RexM: Nuck: https://gist.github.com/1308378
[04:32] tbranyen: Nuck: like i said, nooby mistakes =)
[04:32] tshpaper has joined the channel
[04:32] Nuck: tbranyen: Any messing with require.paths fucks up the way require works for all scripts
[04:32] Nuck: So no matter what, it's bad
[04:32] caolanm: tbranyen: I agree, custom require implementation sounds right to me
[04:32] mattrobenolt: Nuck: I guess a better question might be, can I convert a normal string into a stream object?
[04:33] mattrobenolt: So I can pipe that into zlib.
[04:33] Nuck: RexM: And what are you exporting? It seems like you're not messing up somewhere there maybe?
[04:33] gigo1980 has joined the channel
[04:34] Nuck: mattrobenolt: IIRC, a stream is just an EventEmitter that fires 'data' events and an 'end' event
[04:34] Nuck: For the most part
[04:35] Nuck: mattrobenolt: So theoretically, it'd be as easy as firing 'data' once, then 'end'
[04:35] tbranyen: caolanm: https://github.com/tbranyen/vertebrae/blob/master/build/watch.js#L4
[04:35] tbranyen: any idea if that would be useful in async?
[04:35] RexM: Nuck: https://gist.github.com/1308378 i added my whole user.js, but it's exporting the User schema object into the exports.User field
[04:36] mattrobenolt: Nuck: Right. I can't even find an example of using a Stream() object natively. I should just be able to call 'write()' on it to write to the stream, then feed it into zlib.
[04:36] tbranyen: i might still pull req, but wasn't sure if the concept of it was worth pursuing
[04:36] mattrobenolt: require('stream').Stream() yields undefined. :/
[04:36] Nuck: mattrobenolt: Just create an EventEmitter, fire 'data' with the string
[04:37] caolanm: tbranyen: I don't want to tie async to node's file libs
[04:37] caolanm: its also used in the browser
[04:37] tbranyen: caolanm: me neither, monitor would be written entirely angostic
[04:37] tbranyen: agnostic*
[04:37] Nuck: RexM: Why is it referencing line 21 in app.js when there is no line 21?
[04:37] Nuck: Did the file change between that version and the error?
[04:38] RexM: that's not the whole app.js, i can post the whole thing if you want
[04:38] caolanm: tbranyen: in that case, I'm not sure I understand what its doing ;)
[04:38] Nuck: RexM: Does line 21 do anything with Mongoose?
[04:38] RexM: yes, refresh, i just posted the whole app.js
[04:39] RexM: it's where it sets up the User object, line 20 outputs the right object to the console
[04:39] tbranyen: caolanm: http://pastie.org/2748644
[04:39] tbranyen: not sure if anything else like that exists in async
[04:39] tbranyen: i wasn't able to find anything at least
[04:39] Nuck: RexM: Does the Gallery schema reference the User schema?
[04:39] Nuck: If so, you've got a circular reference
[04:39] RexM: no, it doesn't
[04:39] Nuck: hmm
[04:40] Nuck: RexM: "mongoose.model('User').count({'email': value}"
[04:40] Nuck: ?
[04:40] Nuck: You're accessing hte model before it's set
[04:40] metellus has joined the channel
[04:40] Nuck: Either set the model on line 30 of the user.js or do something different
[04:41] RexM: that should only get called when i'm actually validating
[04:41] tbranyen: i mean the obv use case would be multiple file watches with a single callback
[04:41] RexM: Nuck: it's working fine in another project
[04:41] RexM: that's why i'm really confused why this isn't working
[04:41] Nuck: RexM: hmmm might be race condition caused by that?
[04:41] d_low_ has joined the channel
[04:41] Nuck: Or a problem with caching
[04:41] Nuck: RexM: Are both projects loaded in the same node process?
[04:42] RexM: Nuck: no, currently it's just one at a time, while i'm testing
[04:42] Nuck: RexM: Okay, is the console.log working?
[04:42] Nuck: Of the model?
[04:42] RexM: yes
[04:42] zilch_ has joined the channel
[04:42] dominictarr has joined the channel
[04:43] RexM: i posted the whole console output, if that's helpful
[04:44] RexM: but it looks good, from what i can tell... (i just started messing with node a couple days ago, so it might not be right...)
[04:44] digman543 has joined the channel
[04:46] Nuck: RexM: Line 21 is requiring Gallery?
[04:46] Nuck: RexM: So... Obviously the User object is being called on for Gallery?
[04:47] RexM: hmm, there's a blank line at the top in vim, that's not showing up in the gist
[04:47] Nuck: ah
[04:47] fairwinds has joined the channel
[04:48] Nuck: RexM: Honestly, I'm scratching my head over why it's giving an error?
[04:48] Nuck: Try a hard link, see if it persists?
[04:49] RexM: the link is a directory, so i think it has to be a soft link?
[04:49] RexM: i can try to link each file
[04:50] Nuck: hmmm
[04:50] Nuck: RexM: I don't know much about such things, but it seems really odd to me
[04:51] Nuck: RexM: It strikes me as one of those errors that you'll notice only when you stop trying to debug it
[04:51] Nuck: One of those ones that makes you facepalm and wonder how you missed it haha
[04:51] RexM: yeah, i just did hard links, and it works
[04:51] RexM: very weird
[04:51] RexM: and the other application is working, too
[04:52] RexM: i don't know what to think, but i'm glad it's working.. lol
[04:52] Nuck: RexM: Hmmm, sounds like it might be a bug in how require resolves
[04:52] Nuck: RexM: Maybe it follows the symlink but fails to resolve relative to that or something
[04:52] confoocious has joined the channel
[04:53] RexM: Nuck: yeah, that's possible
[04:54] teadict: what share of this channel is using node for web apps? 
[04:54] teadict: as in.. administrative applications preferably
[04:55] Nuck: teadict: I'm building a website using node.js
[04:55] RexM: teadict: i'm trying to use node to build a website :)
[04:55] teadict: Nuck: which modules?
[04:55] Nuck: teadict: I'm using Express and Mongoose
[04:55] Nuck: And a bunch of other minor things
[04:55] teadict: RexM: great, I thought it wasn't being used for public websites much
[04:55] teadict: Nuck: good, good, I'm on the right track
[04:56] RexM: teadict: i'm using the same modules as Nuck
[04:56] teadict: although I need mysql sadly
[04:56] Nuck: teadict: I'm building a social network for artists and art appreciators using Node.js :B
[04:56] Nuck: teadict: Ahh fun
[04:56] Nuck: teadict: Not even Postgres?
[04:56] teadict: Nuck: no! I wanted to use document-based DB too
[04:56] RexM: Nuck: lol, sounds eerily similar to what i'm building =x
[04:56] teadict: Nuck: whichever, haven't decided, thing is it must be relational
[04:56] Nuck: RexM: What's yours?
[04:56] deedubs has joined the channel
[04:57] Nuck: teadict: Do Postgres.  MySQL is shit, Postgres scales way better and is supposed to be more actively developed, etc.
[04:57] RexM: a site where you can showcase art work/photography
[04:57] RexM: Galleries, with Pieces
[04:57] teadict: Nuck: yes, I'll most probably use it
[04:58] teadict: although I'll try to inject mongo where the data stored is not of importance to the client
[04:58] Nuck: RexM: haha I'm focusing heavily on the social elements.  I figure another dumping grounds for art is a great way to make money but not a way to change the world :P
[04:58] teadict: >:-D
[04:58] Nuck: teadict: Mongo is not scalable
[04:58] dshaw_1 has joined the channel
[04:58] Nuck: Be forewarned
[04:58] Nuck: I've accepted this fact
[04:58] Nuck: But I want others to know it too :P
[04:58] RexM: how is it not scalable?
[04:58] Nuck: RexM: Locks
[04:59] Lorentz: How does it lock
[04:59] Nuck: And honestly, at times, I wish I'd gone with postgres
[04:59] Nuck: :/
[04:59] Nuck: Mongo is nice and all
[04:59] Lorentz: I still haven't groked postgres
[04:59] teadict: no problemo, I'm building a closed system with like 25 client PCs
[04:59] Nuck: teadict: ah okay that's no biggie then
[04:59] teadict: that's why I specificied administrative system
[04:59] teadict: yeah,it'll be more than fine
[05:00] Nuck: teadict: BE wary of eventual consistency and whatnot
[05:00] _th_n_ has joined the channel
[05:00] Nuck: Lorentz: I don't grok Postgres specifically, as I haven't tried it
[05:00] teadict: it's the distrbuted and concurrency awesomeness which made me choose node...
[05:00] teadict: you see, there's going to be this tasks schedule
[05:00] teadict: r
[05:00] RexM: yeah, i think when mongo is writing, it locks the whole collection (or maybe the whole db, i can't remember)
[05:00] teadict: which is cooperative, and must respond in real time
[05:00] teadict: so node is perfect
[05:01] RexM: teadict: are you using socket.io?
[05:01] Nuck: But in taking the db-class I've kearned to appreciate the relational model :P
[05:01] Nuck: RexM: Yeah, whole DB
[05:01] teadict: RexM: bettter! I found nowjs.org
[05:01] Nuck: Oh nowjs
[05:01] Nuck: I prefer socket.io personally
[05:01] _dc has joined the channel
[05:01] Nuck: But that's mostly preference
[05:01] teadict: I still need to know the differences
[05:01] teadict: I thought now was an upper level compared to socket.io
[05:02] Nuck: teadict: IIRC nowjs is more like RPC while socket.io is like a shared EventEmitter?
[05:02] teadict: but maybe they're the same?
[05:02] teadict: so nowjs is more pulished then?
[05:02] RexM: teadict: cool, i haven't seen that, is there anything that when something changes on the server, something like knockout can automatically pick up the change and update the UI?
[05:02] teadict: and I'll code less
[05:02] Nuck: yeaaaah nowjs is RPC
[05:02] teadict: great
[05:02] Nuck: teadict: Not really.  IT's a question of whether it's a networked Event model or a remote function calling setup
[05:02] teadict: then I'll make use of now I guess
[05:02] teadict: ah...
[05:02] Nuck: It's all preference
[05:03] teadict: then if I need complexity... I should learn socket.io
[05:03] teadict: as much as it hurts more than now
[05:03] Nuck: If you want to just e able to call functions between them or just pass data, etc.
[05:03] teadict: which works instantly
[05:03] Nuck: teadict: socket.io does too :P
[05:03] Nuck: If you've ever done EventEmitters, it's really easy
[05:03] teadict: I meant there's less preparation with now..
[05:03] Nuck: You fire events with .emit() and bind them with .on()
[05:03] deedubs: teadict: you should just learn socket.io
[05:03] teadict: yeah
[05:04] Nuck: My only gripe with socket.io is it's too heavy for me :P
[05:04] teadict: I'd be doing the "learn the framework instead of the language" way if I'd go with now... gottcha
[05:04] Nuck: I just want a networked EventEmitter, really
[05:04] Nuck: And they add some magic and whatnot
[05:04] teadict: mmmm
[05:04] Nuck: And I wish it were all optional middlewares or something ;~;
[05:04] teadict: then now *is* an abstraction level higher than socket.io
[05:04] Nuck: namespaces are the only one I'd keep
[05:04] teadict: in fact, doesn't it use socket.io?
[05:05] Nuck: teadict: apparently >_>
[05:05] Nuck: ACTION glances at the package.json
[05:05] Nuck: dependencies: socket.io >= 0.8.4
[05:06] teadict: then I'll be using both..
[05:06] Nuck: haha
[05:06] teadict: now for the realtime funciton calling..
[05:06] teadict: to solve interface stuff
[05:06] dean__ has joined the channel
[05:06] teadict: and socket.io for more core-y things
[05:06] astropirate has joined the channel
[05:06] Nuck: I might look into forking and stripping down socket.io someday
[05:06] Nuck: Since it's too heavy for me still
[05:06] Nuck: Tear out some magicks
[05:06] teadict: I'll see about the details as I start coding... good news is I've done good research apparently
[05:08] dean__ has left the channel
[05:08] astropirate: Any HTTP nerds here?
[05:08] Nuck: My biggest grips with socket.io are (1) storing data to a client (2) getting acknowledgements
[05:09] Nuck: Don't need them, don't want them
[05:09] teadict: what other aspects beside modules choosing are needed to be studied before coding?
[05:09] Nuck: They'd be better implemented as modules on top of socket.io IMHO
[05:09] tokuz has joined the channel
[05:09] Nuck: teadict: Don't bother, just code :P
[05:09] astropirate: teadict, bahh jump right in
[05:09] teadict: lolk
[05:10] teadict: npm will do the rest
[05:10] teadict: oh, I should learn to write modules...
[05:10] Nuck: Haha it's not hard
[05:10] mattrobenolt: Ok, now does anyone have any idea why a zlib buffer encoded as base64 is not compatible with Python's zlib and base64 modules?
[05:10] teadict: or in a module-fashio rather
[05:10] Nuck: But it's great for splitting huge projects into files
[05:10] teadict: exactly
[05:10] teadict: this will be a huge app
[05:10] Nuck: I use require heavily in my site for that.
[05:11] Nuck: teadict: Just know that if yo require a two different files which both require another file, that shared file also shares state between them
[05:11] teadict: huge in terms of system design, not in terms of dealing with necessities of half a million users
[05:12] teadict: Nuck: good to know indeed..
[05:12] teadict: wow, wait, WHAT
[05:12] Nuck: teadict: Yeah, I have a file that exports my express app, and nothing else
[05:12] teadict: give me a hard example
[05:12] Nuck: So I just require that in a bunch of files which add routes
[05:13] teadict: what would happen there if you'd share a require in that code of yours?
[05:13] Nuck: And then I can require('./routes/foo.js') and it will access the same app object as any other routes
[05:13] teadict: k, I think I get the point
[05:13] Nuck: As long as they all require the same app.js
[05:13] teadict: the word "state" scares me now I admit, though
[05:14] Nuck: teadict: Yeah, odd thing but really useful in splitting code into files
[05:14] Nuck: I was setting app onto a global before to share it, so this works way better
[05:15] teadict: I'll put a pin on that concept
[05:16] fairwinds has joined the channel
[05:17] teadict: oh, just to confirm, there's no need for nginx, righT?
[05:17] teadict: someone told me I should reverse proxy the whole thing
[05:17] Nuck: teadict: Not in front of Node
[05:17] teadict: put Express behind it
[05:17] teadict: and that's it
[05:17] teadict: aweosome
[05:17] Nuck: teadict: You can use Node.js for a reverse proxy
[05:17] teadict: gut, gut
[05:17] Nuck: See node-http-proxy and bouncy
[05:18] teadict: yeah
[05:18] Nuck: I still have Nginx, but only for a static file server (serving tons of artworks won't be an easy task, I'll leave it to something dedicated)
[05:18] monokrome_ has joined the channel
[05:19] teadict: yes, I already thought about all the amount of images that will be handled.. better leave those to nginx
[05:19] Nuck: teadict: I'll put nginx behind bouncy
[05:19] flamboz has joined the channel
[05:19] Nuck: SubStack: Also, <3 for making the HTTP proxy of my dreams.
[05:19] Nuck: Seriously.
[05:20] Nuck: This is what all reverse proxies should aspire to
[05:20] teadict: I don't know how that would work
[05:20] fairwinds_ has joined the channel
[05:21] Nuck: teadict: You just set it to route requests from img.example.com to the localhost port 8001 or something, then have Nginx listen on that port
[05:21] teadict: http://goo.gl/HaE1X is this SubStack ?
[05:21] teadict: Nuck: noted
[05:21] luxigo has joined the channel
[05:22] Nuck: teadict: Quite possibly his self-portrait
[05:22] teadict: heh
[05:22] Nuck: Looks kinda like his style
[05:23] pizthewiz has joined the channel
[05:24] teadict: well, thanks for the help (for now, because you'll see me often here)
[05:24] Nuck: haha k
[05:24] teadict: I must go, my people need me
[05:24] teadict: ACTION flies away
[05:26] iivvoo has joined the channel
[05:26] luxigo: when i try to "var mymodule=require('/path/mymodule.js')"  from a native module (frome node-git/lib directory) an error occurs when running node: "Error: No such native module /path/mymodule.js"  ...  any idea on how to load it ?
[05:27] luxigo: i need it for testing a javascript "native module" without recompiling node
[05:28] SubStack: teadict: it's just some robocritter
[05:29] d_low has joined the channel
[05:29] SubStack: Nuck: I just pushed out a new release an hour ago that uses parsley too
[05:30] SubStack: should fix some annoying corner-cases although it's a bit slower than before
[05:30] SubStack: the interface is unchanged
[05:31] Nuck: SubStack: Still got leakage?
[05:31] SubStack: not sure
[05:31] SubStack: it's a completely different parser now
[05:31] SubStack: the upside is that it's much cleaner
[05:32] captain__ has joined the channel
[05:33] fangel has joined the channel
[05:33] SubStack: anyhow I just need bouncy for this continuous integration stack
[05:33] SubStack: I want zero-downtime continuous deploys to be the sort of thing you can manage with one-liners
[05:33] HT has joined the channel
[05:33] Nuck: SubStack: I'd like to use it in front of my site when we launch :P
[05:34] sh1mmer has joined the channel
[05:34] Nuck: SubStack: But I could easily see that leakage becoming a major issue
[05:34] Nuck: Possibly creating security holes
[05:34] SubStack: Nuck: if you want to help contribute you could write a test to check memory utilization
[05:34] Nuck: I'm... not good at tests.
[05:34] Nuck: At all.
[05:35] SubStack: could be a great time to start
[05:35] Nuck: SubStack: Nah, my time to start is mid-november, when my site will hopefully be at MVP level
[05:37] SubStack: but how do you even know your software works unless you write lots of tests?
[05:37] SubStack: tests are the best thing ever
[05:37] dubenstein has joined the channel
[05:38] d_low has joined the channel
[05:38] d_low has joined the channel
[05:38] SubStack: if I had to verify all the crap I write by hand that would take so long
[05:38] Nuck: SubStack: I know it works because it works
[05:38] Nuck: Simply put
[05:38] Nuck: Until I try it, I don't know
[05:38] Nuck: :P
[05:38] Nuck: Living on the edge OHHHHH YEAAAAAAAH
[05:39] craigm has joined the channel
[05:39] Peniar has joined the channel
[05:40] a_meteorite: Oh, hey, it's SubStack
[05:40] jesusabdullah: "trying it out" is a form of tests
[05:40] jesusabdullah: er, testing
[05:40] jesusabdullah: but formalized testing is nice because it lets you automate a large part of that "try it and see" approach
[05:41] a_meteorite: Shameless request follows... have node-put support all the types that node-binary does
[05:41] SubStack: it's just a bit laborious
[05:41] jesusabdullah: Sometimes it's laborious to write tests
[05:41] a_meteorite: Cuz that'd be awesome! :)
[05:41] SubStack: a_meteorite: pull request?
[05:41] jesusabdullah: Not usually, but sometimes
[05:41] SubStack: should be pretty easy to add some of that stuff
[05:41] a_meteorite: I haven't patched it myself yet, but I was considering it
[05:41] SubStack: also node 0.6 makes node-put pretty irrelevant
[05:42] a_meteorite: It has some new things in Buffer for dealing with packed numbers, I saw
[05:42] a_meteorite: But not as nice as put
[05:42] T-Co: Followed by a question. When is 0.6 coming out?
[05:42] SubStack: really? it looks like pretty much the same interface
[05:42] SubStack: down to the le and be for endianness
[05:42] a_meteorite: No chainable interface
[05:42] luxigo: let's reformulate.. Trying to load a javascript module stored in a file from "_third_party_main.js",  node exit with "No such native module" error at node.js:486 ...
[05:42] a_meteorite: Or maybe it is chainable
[05:42] luxigo: how to load a module from a file from "_third_party_main.js" ?..
[05:43] chjj: T-Co: ry said this week i think
[05:43] larsvegas has joined the channel
[05:43] larsvegas has joined the channel
[05:45] T-Co: Awesome
[05:46] T-Co: What has been the trend with found bugs in the earlier releases?
[05:46] T-Co: And the actual stability of a new stable release?
[05:48] Nuck: You know what I want?  Ecma Coolers.
[05:48] Nuck: Like Ecto Coolers, but made my ECMA.
[05:48] metellus has joined the channel
[05:49] Cev has joined the channel
[05:49] Murugaratham has joined the channel
[05:52] ryanallenbobcat has joined the channel
[05:53] ewj has joined the channel
[05:54] dominictarr has joined the channel
[05:55] p1d has joined the channel
[05:55] simenbrekken has joined the channel
[05:56] pizthewiz has joined the channel
[05:57] jesusabdullah: ttp://i.imgur.com/jpSoz.png
[06:02] slifty has joined the channel
[06:02] confoocious has joined the channel
[06:05] secoif: is there any way to have a function handle unknown object properties or something?
[06:05] secoif: eg
[06:05] astropirate: someone the http specs aren't as dry as i thought
[06:05] secoif: i.want.to.do.something
[06:05] secoif: and not have to specify the properties in advance?
[06:05] astropirate: secoif, you want getters
[06:05] xerox: you just check if they are defined
[06:06] xerox: …before using them
[06:06] secoif: xerox I'm trying to design an interface to a library where that would be highly inconvenient
[06:06] secoif: astropirate thanks
[06:06] astropirate: secoif, yw
[06:07] xerox: you still have to check what the getters return, so it's the same thing
[06:08] sineltor: can you explain what you're trying to do? is i.want.to.do.something a method you're going to call?
[06:08] sineltor: or what?
[06:08] astropirate: secoif, you wouldn't be desiging a testing library would you?  bob.should.be.a.string?
[06:08] astropirate: i did one as a thought exercise https://github.com/mansoor-s/Should-Node
[06:09] secoif: nah, I'm thinking about a kind of remote request lib, where you can transparently access a restful resource via object properties
[06:09] secoif: just sussing out if it's possible
[06:10] astropirate: secoif, kind of like   Nowjs?
[06:10] secoif: eg
[06:10] secoif: not really I don't think
[06:10] xerox: restful, there is this, built on top of the excellent express https://github.com/visionmedia/express-resource
[06:10] ambroff has joined the channel
[06:10] saikat has joined the channel
[06:11] secoif: I'm accessing a restful resource
[06:11] secoif: not creating one
[06:11] xerox: ah the other way around
[06:11] xerox: aha
[06:11] secoif: eg, github api: `github.user()` `github.users('username')`
[06:11] xerox: github('users.username') :)
[06:12] secoif: ahh
[06:12] ambroff has joined the channel
[06:12] secoif: though it'd be good to be able to get code completion
[06:12] secoif: but your idea will work
[06:12] xerox: yeah but you do need the user to read the api documentation, and/or discover it with completition
[06:12] sineltor: secoif: heh - what you really want is harmony proxies
[06:12] sineltor: they'll make that sort of thing *awesome*
[06:12] sineltor: only available in firefox for now though.
[06:13] briandh has joined the channel
[06:13] sineltor: (part of ecmascript 5)
[06:13] sineltor: (oh, and there's a couple npm packages which add them to nodejs)
[06:13] SubStack: npm install node-proxy
[06:13] luxigo: ah require('Module')._load(path,Module) seems to work..
[06:13] SubStack: I think it's usually best to call functions though
[06:13] Max has joined the channel
[06:14] sineltor: SubStack foo().bar().zot() ?
[06:14] sineltor: imo that doesn't make as much sense for foo.bar.zot for model objects
[06:14] SubStack: you can have attributes too
[06:14] mekwall has joined the channel
[06:14] SubStack: json-style
[06:14] SubStack: anyways just use dnode or nowjs
[06:14] sineltor: hehe
[06:15] sineltor: oh yeah SubStack - I'm working on a nodejs browser channel library
[06:15] secoif: SubStack cool
[06:15] sineltor: - because socket.io is so bloaty
[06:15] magnetik has joined the channel
[06:15] sineltor: is it worth making the work with diode?
[06:15] sineltor: dnode
[06:15] SubStack: browser channel?
[06:15] SubStack: what does that do
[06:15] SubStack: like event emitters?
[06:16] sineltor: (argh text autocorrect in colloquy makes me rage)
[06:16] sineltor: SubStack: its basically another version of socket.io
[06:16] SubStack: I really don't think it's very useful to only have "channels" and "rooms"
[06:16] rgl has joined the channel
[06:16] sineltor: its what google uses for google chat and docs
[06:16] sineltor: yeah - it doesn't do any of that stuff, and currently it doesn't use web sockets (sad)
[06:16] sineltor: but its lightweight, and works in any browser (including ie5.5 apparently!)
[06:16] SubStack: you have to design too much up-front and route the messages where they need to go
[06:16] sineltor: yeah - I agree.
[06:17] SubStack: routing messages is crazy annoying
[06:17] sineltor: also, unlike socket.io it gives you strong guarantees about disconnecting - which is really important for sharejs
[06:17] sineltor: heh
[06:17] sineltor: yeah - and with socket.io if you connect to a namespace, then call disconnect()
[06:17] sineltor: the socket is never actually disconnected
[06:17] sineltor: … etc
[06:17] sineltor: anyway, until socket.io is good, browserchannel!
[06:17] SubStack: I really don't think socket.io should have namespaces and rooms
[06:17] SubStack: that should be a separate module
[06:18] aah: any way to get a heap dump from a node process?
[06:18] sineltor: yep
[06:18] SubStack: or the transport code should be ripped out into another module if they want to keep the branding
[06:18] SubStack: I'll probably do this at some point
[06:18] sineltor: … and rpc should be handled by 3rd party libraries, not baked in to the transport library
[06:18] sineltor: yeah
[06:18] SubStack: and then write a lot of tests for it
[06:18] sineltor: hehe
[06:18] SubStack: that's sort of what I do
[06:18] SubStack: sineltor: exactly
[06:18] SubStack: there are too many ways to do rpc
[06:19] sineltor: yeah, and for a lot of people its not useful anyway.
[06:19] SubStack: I worry that socket.io is going to start reading email here pretty soon
[06:19] sineltor: hehehe
[06:19] d_low_ has joined the channel
[06:19] sineltor: if you did that with socket.io, I'd help
[06:20] sineltor: socket.io's lack of testing keeps breaking sharejs in different wacky ways, and its driving me nuts
[06:20] d_low has joined the channel
[06:20] AAA_awright_ has joined the channel
[06:20] sineltor: - enough that I've rewritten an entire transport layer ( https://github.com/josephg/node-browserchannel )
[06:20] SubStack: I already wrote some proof of concept tests for socket.io under testling
[06:20] AAA_awright_: It's already in your IRC channels
[06:21] SubStack: https://github.com/substack/socket.io-test
[06:21] AAA_awright_: This is me chatting over socket.io over JSON+TCP over IRC
[06:21] AAA_awright_: All Node.js
[06:21] tylerstalder has joined the channel
[06:22] sineltor: AAA_awright: sure, thats nice. but irc channels don't belong in the transport layer
[06:22] sineltor: they belong in a layer above it
[06:22] sineltor: SubStack: cool.
[06:22] AAA_awright: hah
[06:22] AAA_awright: Yeah, I mean, socket.io relayed to JSON+TCP relayed to Freenode
[06:23] boltR has joined the channel
[06:23] SubStack: I like it when modules are just /finished/
[06:24] sineltor: SubStack: hahaha I bet you do
[06:24] SubStack: and they only need occasional fixes as the platform evolves
[06:24] sineltor: you have enough of them :p
[06:24] sineltor: yeah...
[06:24] SubStack: if you want to extend the functionality of stuff that already exists, do it in a separate project
[06:25] SubStack: modules are great like that
[06:25] AAA_awright: Is Node.js ever going to be finished like that?
[06:25] AAA_awright: I've got all the functionality I need
[06:25] AAA_awright: Why can't we produce a stable API by now
[06:25] sineltor: AAA_awright: probably not…
[06:25] AAA_awright: What more could you possibly need
[06:25] sineltor: heh - ask ry that
[06:26] zilch_ has joined the channel
[06:26] mikeric has joined the channel
[06:26] sineltor: idk… I know with sharejs, there's a million little features I want to add
[06:26] sineltor: and I'm sure I'll think of more things once I've got all that stuff written
[06:26] gut4 has joined the channel
[06:26] secoif: AAA_awright_it's a stable API if you don't update
[06:27] secoif: if you don't need new functionality, just stick with what you have
[06:27] AAA_awright: secoif: Looks like the target is Windows
[06:27] AAA_awright: er, sineltor, looks like the target now is Windows
[06:27] AAA_awright: secoif: That kinda defeats the point of being on the bleeding edge (I run master)
[06:28] sineltor: ACTION shrugs
[06:28] secoif: AAA_awright you want to be on bleeding edge, but you're complaining about the API changingh??
[06:28] sineltor: if you can't think of things that would be useful things for nodejs to be able to do, that might just be a lack of imagination
[06:28] AAA_awright: Yes
[06:28] secoif: :D
[06:32] joeyang has joined the channel
[06:37] sineltor has joined the channel
[06:38] blueadept has joined the channel
[06:38] blueadept has joined the channel
[06:39] nabble has joined the channel
[06:40] joshgillies has joined the channel
[06:42] nabble has joined the channel
[06:44] martin_sunset has joined the channel
[06:44] `3rdEden has joined the channel
[06:46] ecin has joined the channel
[06:46] dreamdust has joined the channel
[06:46] Morkel has joined the channel
[06:49] groom has joined the channel
[06:49] neshaug has joined the channel
[06:52] stagas has joined the channel
[06:53] simenbrekken has joined the channel
[06:54] svnlto has joined the channel
[06:54] emattias has joined the channel
[06:55] mikl has joined the channel
[06:58] Murugaratham has joined the channel
[07:01] dreamdust has joined the channel
[07:01] gut4 has joined the channel
[07:01] aliem has joined the channel
[07:02] simenbrekken has joined the channel
[07:02] fangel has joined the channel
[07:03] dshaw_ has joined the channel
[07:04] dshaw_ has joined the channel
[07:04] markwubben has joined the channel
[07:04] loob2 has joined the channel
[07:05] xerox: how does one make a deep copy of an object?
[07:06] xerox: var mine = object.something; object.something = undefined; also clears mine
[07:07] SubStack: require('traverse').clone()
[07:08] Morkel has joined the channel
[07:08] bosphorus has joined the channel
[07:08] hwinkel has joined the channel
[07:11] xerox: oh well since it's for JSON.stringify's consumption I just stringify and save the result there
[07:11] xerox: thanks tho
[07:11] ej_ has joined the channel
[07:11] dreamdust has joined the channel
[07:12] raphdg has joined the channel
[07:13] groom has joined the channel
[07:14] Nuck: Hey, elliottcable, is purr's <3 open-source?
[07:14] saesh has joined the channel
[07:15] topaxi has joined the channel
[07:17] djcoin has joined the channel
[07:23] digman543 has joined the channel
[07:25] vguerra has joined the channel
[07:25] sgimeno has joined the channel
[07:32] groom has joined the channel
[07:32] stagas has joined the channel
[07:33] AD7six has joined the channel
[07:33] memoryleak has left the channel
[07:34] N0va has joined the channel
[07:34] lzskiss has joined the channel
[07:35] ovasina has joined the channel
[07:35] [AD]Turbo has joined the channel
[07:35] [AD]Turbo: hi there
[07:35] zkirill: should I be using select/filter loop if I'm only interested in one result?
[07:36] ovasina: hi there
[07:36] zkirill: sorry, wrong forum
[07:37] ovasina: can anybody help me to install Node on VDS without root privileges?
[07:39] _kud has joined the channel
[07:39] astropirate: I refuse to learn coffeescript..
[07:40] lyte has joined the channel
[07:42] svnlto has joined the channel
[07:42] ovasina: # Fatal error in v8::Context::New()
[07:42] ovasina: # Error initializing V8
[07:42] ovasina: what does it mean?
[07:43] tlynn has joined the channel
[07:44] astropirate: ovasina, when/where are you getting the error from?
[07:45] ovasina: astropirate, when I try to compile it
[07:45] astropirate: ovasina, that can't be possable, that looks like a runtime error
[07:47] ovasina: astropirate, when i configure it with --without-snapshots i get FATAL ERROR: v8::Debug::SetDebugMessageDispatchHandler Error initializing V8 when try run Node
[07:49] ovasina: I try two days with no success
[07:49] astropirate: ovasina, sorry i'm not familiar with what might cause that error, i think though that you will have better luck with that kind of error on the mailing list
[07:50] dubenstein has joined the channel
[07:51] ovasina: I am not lonely with such problem. But nobody has prompted decisions.:S
[07:52] ovasina: Thanks for sympathy)))
[07:53] ovasina: I'll try to install old version - 0.2
[07:53] joshgillies has joined the channel
[07:53] svnlto has joined the channel
[07:56] beve has left the channel
[07:57] ovasina: same error(((
[07:58] mikedeboer has joined the channel
[07:59] Druid_ has joined the channel
[07:59] Margle has joined the channel
[08:00] kickingvegas has joined the channel
[08:02] __tosh has joined the channel
[08:03] jbpros has joined the channel
[08:04] cosmincx has joined the channel
[08:05] beevi7 has joined the channel
[08:05] robhawkes has joined the channel
[08:05] gut4 has joined the channel
[08:09] mikl has joined the channel
[08:11] _kud has joined the channel
[08:12] neshaug has joined the channel
[08:12] hipsterslapfight has joined the channel
[08:12] andree has joined the channel
[08:13] AAA_awright: mongoose or mongodb?
[08:13] magnetik has joined the channel
[08:13] whitman has joined the channel
[08:14] astropirate: AAA_awright, mongoose is merely an ORM for Mongodb
[08:14] AAA_awright: I'm not sure if that's a good thing
[08:14] astropirate: so, eitherway you are using mongodb,
[08:15] xerox: mongoskin is nice
[08:15] xerox: thin layer over mongodb
[08:16] astropirate: xerox, have you by any chance used mongoose too?
[08:16] martin_sunset has joined the channel
[08:17] astropirate: i'm nearing the stage that i have to choose one..
[08:17] astropirate: *where
[08:17] aaronmcadam has joined the channel
[08:18] stagas: this is probably stupid https://github.com/stagas/eventstack
[08:19] passionke has joined the channel
[08:19] xerox: yes astropirate 
[08:20] adnasa has joined the channel
[08:20] xerox: unfortunately it did not map well on my problem
[08:21] astropirate: ahh
[08:21] xerox: with async validators for some properties, which are cool, kept firing all the time I updated some unrelated, unvalidated, field of a model
[08:21] jimt has joined the channel
[08:21] xerox: and other similar edge cases which made me using it harder than just doing it by hand, which I ended up doing with node-mongodb-native
[08:22] xerox: then I discovered mongoskin, which has some of the things one does by hand already, and I am kind satisfied
[08:22] svnlto has joined the channel
[08:22] xerox: it's not as full-featured as mongoose ofc
[08:22] superjudge_ has joined the channel
[08:24] Esteb has joined the channel
[08:24] aron_ has joined the channel
[08:24] jacobolus has joined the channel
[08:25] akamike has joined the channel
[08:25] mediacoder has joined the channel
[08:27] q_no has joined the channel
[08:27] cjheath has joined the channel
[08:28] mandric has joined the channel
[08:29] DRMacIver: Are events for an EventEmitter guaranteed to be processed in the same order they're emitted?
[08:29] jimt has joined the channel
[08:30] DRMacIver: On the one hand the docs don't say they are, on the other hand the behaviour seems to be yes and the usefulness of EE goes *way* down if they're not.
[08:30] versicolor has joined the channel
[08:33] rendar has joined the channel
[08:34] Margle has joined the channel
[08:36] svnlto has joined the channel
[08:37] burningdog has joined the channel
[08:38] shapeshed has joined the channel
[08:38] AAA_awright: DRMacIver: What do you mean?
[08:38] AAA_awright: processed?
[08:39] DRMacIver: AAA_awright: i.e. if I do event.emit('foo'); event.emit('bar'); will the listeners for foo always be called before the listeners for bar?
[08:39] AAA_awright: It's a synchronous operation, of course
[08:40] DRMacIver: Or more concretely if I do query.on('row', blah) and query.on('end', blah2) will the callback for end always fire after the last callback for row
[08:40] DRMacIver: Ah, ok. So there's no event queueing mechanism, it literally just calls the listener functions?
[08:40] DRMacIver: That's fine then. Thanks
[08:40] AAA_awright: It's written in Javascript, look at the source yourself...
[08:41] AAA_awright: https://github.com/joyent/node/blob/master/lib/events.js
[08:41] TomY has joined the channel
[08:41] AAA_awright: The ultimate documentation
[08:41] AAA_awright: That's the one file personally I think everyone needs to read
[08:42] DRMacIver: Fair enough. Thanks.
[08:43] davidvanleeuwen has joined the channel
[08:44] herbySk has joined the channel
[08:47] metellus has joined the channel
[08:49] TheCode has joined the channel
[08:49] TheCode: Any idea how to wrire to fs.createWriteStream ? It's not in the docs.
[08:51] neerolyte has joined the channel
[08:52] Xano has joined the channel
[08:52] dominictarr has joined the channel
[08:52] mc_greeny has joined the channel
[08:53] AAA_awright: I want to use https://github.com/christkv/node-mongodb-native right?
[08:53] AAA_awright: teadict: Yeah it is
[08:54] AAA_awright: teadict: http://nodejs.org/docs/latest/api/all.html#fs.createWriteStream it produces a `stream` like any other, which you can call stream.write() to multiple times
[08:54] AAA_awright: erm 
[08:54] AAA_awright: TheCode: ^^
[08:55] AAA_awright: (I'm gonna figure out this tab-completion thing one day)
[08:57] cosmincx has joined the channel
[08:57] eddyb has joined the channel
[08:57] eddyb: omg, node_file.cc is awful
[08:57] eddyb: gonna have some fun cleaning that up
[08:58] eddyb: bbl anyway
[08:58] __tosh has joined the channel
[08:58] makuchaku has joined the channel
[08:59] arcanis has joined the channel
[08:59] geoKe has joined the channel
[09:00] geoKe has left the channel
[09:02] andree has joined the channel
[09:03] makuchaku has joined the channel
[09:05] bosphorus has joined the channel
[09:06] _kud_ has joined the channel
[09:07] mc_greeny has joined the channel
[09:08] TheCode: so sockets are streams, right?
[09:08] makuchaku has joined the channel
[09:10] mies has joined the channel
[09:12] emattias has joined the channel
[09:13] simenbrekken has joined the channel
[09:13] AAA_awright: TheCode: TCP sockets yeah
[09:14] TheCode: ok, what's the point of doint socket.pipe(socket) ? It seems to work even without doing that.
[09:15] TheCode: that's for the connection event
[09:15] ej__ has joined the channel
[09:15] bzinger has joined the channel
[09:15] DennisRasmussen has joined the channel
[09:15] mischief has joined the channel
[09:17] innociv_ has joined the channel
[09:17] Margle has joined the channel
[09:17] netlemur has joined the channel
[09:19] ph^ has joined the channel
[09:20] eldios has joined the channel
[09:24] srijan4 has joined the channel
[09:25] emattias_ has joined the channel
[09:31] wbednarski has joined the channel
[09:32] stagas has joined the channel
[09:33] adrianmg has joined the channel
[09:36] vindice has joined the channel
[09:36] jkridner has joined the channel
[09:36] jkridner has joined the channel
[09:38] mikl has joined the channel
[09:38] mc_greeny has joined the channel
[09:41] __doc__ has joined the channel
[09:43] mc_greeny1 has joined the channel
[09:44] GeorgeJ has joined the channel
[09:44] GeorgeJ has joined the channel
[09:45] iivvoo has left the channel
[09:47] quam has joined the channel
[09:48] quam: hi--is it possible to execve(3P) or similar from node?
[09:49] quam: i.e. replace the current process
[09:49] SubStack: quam: not without writing some C++
[09:49] quam: ok, thanks
[09:50] SubStack: but you can spawn new processes with child_process
[09:51] quam: yes, that's what I'll resort to
[09:51] quam: I just thought exec is so basic... it has to be implemented already...
[09:51] quam: :)
[09:54] Frippe has joined the channel
[09:55] superjudge has joined the channel
[09:56] briemens has joined the channel
[09:57] stagas has joined the channel
[10:01] mike5w3c has joined the channel
[10:02] stagas has joined the channel
[10:03] meso has joined the channel
[10:03] mmalecki has joined the channel
[10:05] MrNibbles has joined the channel
[10:07] zilch_ has joined the channel
[10:07] srijan4 has joined the channel
[10:08] sineltor has joined the channel
[10:12] IvanoffCSI has joined the channel
[10:13] daglees has joined the channel
[10:13] daglees has joined the channel
[10:14] thalll has joined the channel
[10:14] quam has left the channel
[10:16] fly-away has joined the channel
[10:17] r04r has joined the channel
[10:17] r04r has joined the channel
[10:20] DennisRasmussen has joined the channel
[10:20] fermion has joined the channel
[10:21] Miko2 has joined the channel
[10:21] mike5w3c has joined the channel
[10:21] r04r has joined the channel
[10:22] jimt_ has joined the channel
[10:22] Miko2: Hi, how do I set multiple Cookie headers for a HTTP request? I've tried doing http.request({ headers: { "Cookie": ["cookie1=value", "cookie2=value"] }, ... }), but that doesn't seem to work.
[10:23] dexter_e has joined the channel
[10:24] jldbasa has joined the channel
[10:24] Miko2: The application seems to receive only the first cookie.
[10:24] replore has joined the channel
[10:24] replore_ has joined the channel
[10:25] adrianmg has left the channel
[10:26] cosmincx has joined the channel
[10:26] meso has joined the channel
[10:28] dingomanatee_ has joined the channel
[10:30] renaudsauvain has joined the channel
[10:31] m00p has joined the channel
[10:35] jamesd has joined the channel
[10:35] TomY has joined the channel
[10:35] OneOfOne has joined the channel
[10:35] OneOfOne has joined the channel
[10:38] markwubben has joined the channel
[10:39] sineltor: Miko2: If you want to set multiple cookies in an http header they're separated by semicolons I think
[10:39] dexter_e has joined the channel
[10:39] Miko2: Yeah, I noticed that just now. :)
[10:39] sineltor: so, something like "Cookie": "cookie1=value; cookie2=value"
[10:39] sineltor: :)
[10:39] Miko2: I tried that before and it didn't work for some reason...
[10:39] sineltor: ACTION shrugs
[10:40] Miko2: The reason being I used cookieHeader = cookieName + "=" + cookieValue instead of cookieHeader += in the loop...
[10:41] dubenstein has joined the channel
[10:42] boltR has joined the channel
[10:46] mike5w3c has joined the channel
[10:47] Ang3 has joined the channel
[10:48] gut4 has joined the channel
[10:51] sfoster has joined the channel
[10:53] shapeshed has joined the channel
[10:55] materialdesigner has joined the channel
[11:01] _unary has joined the channel
[11:02] AAA_awright_ has joined the channel
[11:02] DoNaLd` has joined the channel
[11:03] mike5w3c_ has joined the channel
[11:08] jbpros has joined the channel
[11:08] rev087 has joined the channel
[11:08] rev087 has joined the channel
[11:10] rev087 has joined the channel
[11:10] burningdog has joined the channel
[11:11] jimt has joined the channel
[11:12] liar has joined the channel
[11:13] SoulRaven has joined the channel
[11:13] SoulRaven has joined the channel
[11:14] SoulRaven has joined the channel
[11:16] SoulRaven has joined the channel
[11:18] toopay has joined the channel
[11:19] adnasa has joined the channel
[11:26] davidcoallier has joined the channel
[11:26] davidcoallier has joined the channel
[11:26] Frippe_ has joined the channel
[11:27] stagas has joined the channel
[11:28] AAA_awright__ has joined the channel
[11:29] mc_greeny has joined the channel
[11:31] aklt has joined the channel
[11:31] jbpros has joined the channel
[11:32] Morkel has joined the channel
[11:32] criswell has joined the channel
[11:32] amigojapan has joined the channel
[11:33] MCHammer has joined the channel
[11:35] magnetik_ has joined the channel
[11:38] _kud has joined the channel
[11:40] guillermo has joined the channel
[11:42] sirdancealot has joined the channel
[11:45] simenbrekken_ has joined the channel
[11:46] mischief has left the channel
[11:47] neurodrone has joined the channel
[11:48] xetorthio has joined the channel
[11:49] mmalecki has joined the channel
[11:49] scott_gonzalez has joined the channel
[11:52] hugodias has joined the channel
[11:53] Cromulent has joined the channel
[11:53] bzinger has joined the channel
[11:55] Cheery has joined the channel
[11:56] simenbrekken has joined the channel
[11:57] superjudge_ has joined the channel
[12:00] bshumate has joined the channel
[12:00] bshumate has joined the channel
[12:00] Frippe has joined the channel
[12:01] briemens has joined the channel
[12:02] tuhoojabotti: http://urly.fi/me
[12:02] tuhoojabotti: oops, wrong channel
[12:04] jebberjeb has joined the channel
[12:04] jomoho has joined the channel
[12:05] jebberjeb: I'm starting a new web application, my first with node. Is Express a good choice for my tech stack. In other words, is it suitable for such a newbie?
[12:05] burningdog has joined the channel
[12:06] Ezku: jebberjeb: definitely
[12:06] Ezku: jebberjeb: it's minimal and very easy to get into
[12:06] mike5w3c has joined the channel
[12:06] jebberjeb: Ezku: great, Express it is then
[12:07] lyte has joined the channel
[12:07] lyte has joined the channel
[12:08] jebberjeb: So, I'd like to maybe use backbone.js and jquery templating as well. Any suggestion of a template engine that would gel well with those choices?
[12:08] jebberjeb: Should I just use Jade?
[12:09] Ezku: you might find it a lot easier to go in with a readily supported template engine
[12:09] swestcott has joined the channel
[12:09] Ezku: i remember having significant trouble getting coffeekup set up, although i found the engine itself almost godlike.
[12:10] jebberjeb: Jade's not readily supported?
[12:11] hipsterslapfight: jebberjeb: http://expressjs.com/guide.html#template-engines
[12:13] jebberjeb: ah, I can just use jquery templates
[12:15] cjm has joined the channel
[12:15] Bodil has joined the channel
[12:15] phiggins has joined the channel
[12:16] flexd has joined the channel
[12:16] Atlantic777 has joined the channel
[12:18] enmand has joined the channel
[12:19] patrickgamer has joined the channel
[12:19] patrickgamer has left the channel
[12:21] burningdog_ has joined the channel
[12:24] erichynds has joined the channel
[12:28] zmbmartin has joined the channel
[12:28] zmbmartin has left the channel
[12:28] mehtryx has joined the channel
[12:31] decaf_ has joined the channel
[12:32] AaronMT has joined the channel
[12:33] gigo1980: hi is there an support channel for socket.io ?
[12:34] gigo1980: i get the error that the module "socket.io" can´t be found
[12:34] `3rdEden: gigo1980 npm install socket.io
[12:34] `3rdEden: in the directory of your app
[12:34] gigo1980: i installed it globaly
[12:34] `3rdEden: dont
[12:34] `3rdEden: install it locally instead
[12:35] magnetik_ has joined the channel
[12:35] devongovett has joined the channel
[12:35] `3rdEden: There is no need to install it globally as it doesn't provide anything that needs to be installed globally.
[12:36] gigo1980: ok 
[12:36] Mokona has joined the channel
[12:36] gigo1980: MAGIC, 	it works :)
[12:36] gigo1980: thx
[12:36] vicapow has joined the channel
[12:36] mike5w3c has joined the channel
[12:36] gigo1980: is there an good framework for webapplication develoment ?
[12:37] gigo1980: because my server app is finisged now i need the presentation layer
[12:37] AphelionZ has joined the channel
[12:40] jebberjeb: what's the most popular templating engine for people using express? 
[12:40] mehtryx has left the channel
[12:41] zilch_ has joined the channel
[12:41] ksheurs has joined the channel
[12:42] fumanchu182 has joined the channel
[12:43] arcanis has joined the channel
[12:45] murz has joined the channel
[12:45] nils_r has joined the channel
[12:46] dreamdust has joined the channel
[12:47] jimt has joined the channel
[12:47] sriley: personally i prefer ejs since it keeps html as html and not some screwy thing
[12:48] swestcott has joined the channel
[12:51] Glenjamin: i like the idea of mustache, but haven't really tried it properly
[12:51] Glenjamin: it enforces logic-free views and presenter objects
[12:51] hipsterslapfight: ejs is similar enough to erb templates that i'm pretty comfortable with it over the others
[12:54] sledge has joined the channel
[12:55] coderdad has joined the channel
[12:55] coderdad has joined the channel
[12:55] jebberjeb: I really liked django templating last time I used it -- kinda just want something similar to that
[12:56] neerolyte has joined the channel
[12:57] guillermo has joined the channel
[12:57] dob_ has joined the channel
[12:57] scott_gonzalez has joined the channel
[12:57] _kud has joined the channel
[12:57] Glenjamin: jebberjeb: try JinJS maybe?
[12:58] jebberjeb: Glenjamin, I'll check it out
[12:58] ksheurs has left the channel
[12:59] jebberjeb: How about John Resig's micro templating?
[13:02] davidsklar has joined the channel
[13:04] Kami_ has joined the channel
[13:04] geoKe has joined the channel
[13:05] AphelionZ has joined the channel
[13:08] miccolis has joined the channel
[13:09] gut4 has joined the channel
[13:11] tisba has joined the channel
[13:12] lazyshot has joined the channel
[13:13] sadasant has joined the channel
[13:14] sadasant: Hello :)
[13:15] patrickjst has joined the channel
[13:15] RyanD has joined the channel
[13:15] sadasant: Hello :)
[13:16] sadasant: I need help :(
[13:16] fmeyer has joined the channel
[13:16] lmatteis: we do all
[13:16] TheCode: just ask bro, someone will answer eventually
[13:17] Cromulent has joined the channel
[13:17] sadasant: Thanks, well, 
[13:17] te-brian2 has joined the channel
[13:18] Tobsn has joined the channel
[13:18] dreamdust has joined the channel
[13:19] sadasant: How easy is to find work with node?
[13:19] d0k has joined the channel
[13:19] lmatteis: hrm, try http://nodejobs.com/
[13:19] sadasant: :D thanks
[13:20] sadasant: I was going to tell the storie of love and pain but this is faster
[13:20] JasonJS has joined the channel
[13:20] lmatteis: not sure how well into enterprise is node used, but surely many startups are using it
[13:21] CIA-48: node: 03Maciej Małecki 07 * r7ee29d1 10/ lib/net.js : (log message trimmed)
[13:21] CIA-48: node: net: `Server.listen`, `Server.close` and `Socket.connect` return `this`
[13:21] CIA-48: node: Just a syntactic sugar for doing, for example:
[13:21] CIA-48: node:  var server = net.createServer(function (c) {
[13:21] CIA-48: node:  c.end('goodbye, cruel world!\r\n');
[13:21] CIA-48: node:  server.close().on('close', function () {
[13:21] CIA-48: node:  console.log('really, goodbye!');
[13:21] micxer has joined the channel
[13:21] sadasant: I need dollars to pay a node.js host where I can put games and such, but I live in a country where gov have control over the exchange between local currency and dollars
[13:21] voodootikigod_ has joined the channel
[13:21] lmatteis: jee where is that?
[13:21] sadasant: Venezuela
[13:21] sadasant: So I wish to work for another country
[13:22] sadasant: in order to learn in depth node and then pay a host
[13:22] mmalecki_ has joined the channel
[13:23] sadasant: I started with node last week, about a week and 2 days ago
[13:23] sadasant: I've made this on my free time
[13:23] sadasant: https://github.com/sadasant/bledgejs
[13:23] Margle has joined the channel
[13:23] sadasant: So well that's the story
[13:24] Mokona has joined the channel
[13:26] icebox has joined the channel
[13:26] deedubs has joined the channel
[13:27] lmatteis: sadasant: well done :-)
[13:29] sadasant: lmatteis: Thanks ^^, so you think I can apply for a job with that? I've done more things on the client side...
[13:30] thalll has joined the channel
[13:30] lmatteis: it's hard to say, i would just get in contact with some node companies and people... see about contracting gigs
[13:30] icebox: Hello... What is the best path to migrate to free smartmachine v1 to v2 one?
[13:30] sadasant: thanks lmatteis
[13:31] baoist has joined the channel
[13:33] jimt has joined the channel
[13:34] vkareh has joined the channel
[13:34] lmatteis: sadasant: following you on github, if i see something interesting i'll contact you
[13:35] mmalecki has joined the channel
[13:35] guidocalvano has joined the channel
[13:35] Miko2: Is there an event for http.ClientRequest that would fire when the request has actually been sent?
[13:35] guidocalvano: hey people, I was wondering how far node for windows was?
[13:35] mmalecki: sadasant: actually, it's quite easy to get node.js job
[13:35] lmatteis: guidocalvano: it's pretty good actually
[13:35] thalll_ has joined the channel
[13:35] sadasant: lmatteis: Thanks again :)
[13:35] mmalecki: sadasant: or, generally, software engineering job
[13:36] guidocalvano: how good? what is already there, what is still missing?
[13:36] mmalecki: sadasant: keep on hacking on open source projects by companies
[13:36] lmatteis: yeah, fix their code, work for them for free :-)
[13:36] mmalecki: or, generally, open source projects
[13:36] guidocalvano: is the net library already working?
[13:36] sadasant: mmalecki: Well, not here in Venezuela, heh, I have short experience doing PHP LAMP projects before, node is like a great adventure to me :)
[13:37] mmalecki: that's why I got contacted by fb and google
[13:37] Vennril has joined the channel
[13:37] mmalecki: sadasant: fuck Venezuela, you'll get visa and everything
[13:37] mmalecki: sadasant: everything you need is GitHub :)
[13:37] sadasant: :) you made my day, thanks lmatteis mmalecki
[13:38] lmatteis: mmalecki: please stop disrespecting other peoples countries, Venezuela is a beautiful place
[13:38] Jho_ has joined the channel
[13:38] mmalecki: lmatteis: I didn't mean that
[13:38] mmalecki: lmatteis: I meant: don't care about where you are, you're a hacker. you can do it wherever you want
[13:38] qmx: lmatteis: I live in south america, foreign policies suck :(
[13:39] sadasant: lmatteis: Hey,, hey, but he's right, Venezuela is a beautiful place, but surely not a place to innovate! Either live in peace! (It's pretty dangerous)
[13:39] Tales_ has joined the channel
[13:39] storrgie has joined the channel
[13:39] mmalecki: sadasant: also, your github link? I don't know how to scroll in irssi on OS X
[13:39] qmx: mmalecki: try shift+pageup
[13:39] swestcott has joined the channel
[13:39] lmatteis: or just pageup
[13:40] sadasant: https://github.com/sadasant
[13:40] sadasant: my last week node project is called bledge
[13:40] mmalecki: sadasant: have an follow, my fine sir :)
[13:40] sadasant: is just a simple blog with markdown, express, mongoose, etc etc
[13:40] CrisO has joined the channel
[13:40] sadasant: mmalecki :) thanks, I'll follow you back too
[13:40] mmalecki: qmx: it scrolls whole terminal, not irssi
[13:40] dreamdust has joined the channel
[13:41] mmalecki: sadasant: hah, ok, thanks :)
[13:41] socketio\test\33 has joined the channel
[13:41] thomblake has joined the channel
[13:41] thomblake has left the channel
[13:41] mmalecki: yay, my next core patch got accepted
[13:42] sadasant: mmalecki woh you work for nodejitsu! great!
[13:42] mmalecki: btw, it introduces kinda neat shorthands: https://github.com/joyent/node/pull/1922
[13:42] mmalecki: sadasant: yeah, best job of my life :)
[13:42] guidocalvano: lmatteis: the reason I am asking how node is doing on windows is because I am not currently on windows
[13:42] neurodrone has joined the channel
[13:43] lmatteis: well then why do you care? :-)
[13:43] lmatteis: last time i tried (roughly last week) it worked quite well
[13:43] guidocalvano: because I want my project to work on windows as well
[13:43] lmatteis: then use the unstable branch
[13:43] lmatteis: it should have the same API as windows' version
[13:44] Miko2: So, does anyone know whether there's an event that would fire when ClientRequest is actually been sent? I'm trying to log the time it takes to make a request from start to response, and when there's more than 1 requests queued, the time from recording the start time to the request being sent seems to linearry increase.
[13:44] guidocalvano: I think I am using the same API, long story
[13:45] mike5w3c has joined the channel
[13:45] guidocalvano: I'll ask ben later (:
[13:45] malletjo has joined the channel
[13:46] MCHammer: server: everyone.now.showFiles = function(callback) { 	callback = "test"; } client: 	now.showFiles(function(data) { console.log(data); });
[13:46] MCHammer: anyone familar with now js?
[13:46] ceej has joined the channel
[13:46] jtrudeau has joined the channel
[13:47] MCHammer: why doesnt this work?
[13:47] sadasant: I'll leave, thanks to everyone
[13:47] sadasant: :) all node.js developers rock
[13:47] dubenstein has joined the channel
[13:48] magnetik__ has joined the channel
[13:49] EhevuTov has joined the channel
[13:50] k1ttty has joined the channel
[13:50] luizlopes has joined the channel
[13:52] azorai has joined the channel
[13:53] metaverse has joined the channel
[13:55] bronson has joined the channel
[13:57] trose: I'm looking to access a postgres database with my express server, I've noticed there a several libraries for this. Could someone point me to the best one?
[13:58] RORgasm has joined the channel
[13:58] wink_: trose: which version of node?
[13:58] mmalecki: qmx: fn+shift+arrow
[13:59] wink_: if you're not on 0.5.x , go with brianc's module and use the libpq bindings
[13:59] qmx: mmalecki: (d'oh), forgot to ask if it was a mac
[13:59] azorai: https://github.com/brianc/node-postgres seems to be the most followed and the most recently updated.
[13:59] trose: wink_, 0.4.12
[13:59] ryanfitz has joined the channel
[13:59] ditesh|cassini has joined the channel
[13:59] mmalecki: qmx: :)
[14:00] trose: wink_, it looks like node-postgres has the most forks...
[14:00] trose: wink_, missed that other comment. cool we're on the same page :D
[14:01] wink_: trose: yeah, ryah's version was the canonical module to use for a long time :p
[14:01] wink_: brianc took it and has been maintaining it for a bit
[14:01] trose: wink_, cool cool
[14:02] wink_: make sure to use the native binding if possible, the js implementation is going to be a fair bit slower overall
[14:02] Poetro has joined the channel
[14:02] Poetro has joined the channel
[14:03] trose: wink_, i'm working on moving my system from a proof of concept to a use-able system with user logins and such. node seems to make that really easy
[14:03] slifty has joined the channel
[14:04] Squeese has joined the channel
[14:05] willwhite has joined the channel
[14:05] Aphelion has joined the channel
[14:08] trose: wink_, lol i almost asked how to use the native bindings then saw it's a flag
[14:08] trose: ACTION needs to RTFM
[14:08] kriszyp has joined the channel
[14:08] mattrobenolt has left the channel
[14:09] DennisRasmussen has joined the channel
[14:10] dreamdust has joined the channel
[14:11] deedubs has joined the channel
[14:11] c4milo has joined the channel
[14:12] mpavel has joined the channel
[14:12] qbit_: I have a question about native modules and linking .. i am upgrading the openbsd port to use 0.4.12 .. and everything works great on amd64.. but native modules ( like sqlite ) are linking incorrectly to libev
[14:12] qbit_: i have built the port with and without shared libev 
[14:13] qbit_: and get the same result 
[14:13] aron_ has joined the channel
[14:13] qbit_: using npm to install sqlite 
[14:13] hij1nx has joined the channel
[14:14] qbit_: does anyone have any suggestions for tracking down the issue? 
[14:14] wgo has joined the channel
[14:14] memoryleak has joined the channel
[14:15] qbit_: https://github.com/qbit/openbsd-nodejs-port <-- that's the port i have updated
[14:16] dexter_e has joined the channel
[14:17] dubenstein has joined the channel
[14:17] qbit_: the error that node-sqlite throws is " node_modules/sqlite/build/default/sqlite3_bindings.node: undefined symbol '_ZN4node12EventEmitter20constructor_templateE'
[14:17] qbit_: "
[14:18] nibblebot has joined the channel
[14:19] sub_pop has joined the channel
[14:19] memoryleak: I have following code http://pastie.org/2750679. response.on('data' Callback is called for every chunk, but how I can ensure the response data is fully received?
[14:20] mpavel has left the channel
[14:21] azorai: http://nodejs.org/docs/v0.4.7/api/streams.html#event_end_
[14:21] dreamdust has joined the channel
[14:22] memoryleak: azorai: Thanks, exactly in the same moment I discovered this page
[14:22] azorai: :]
[14:22] nibblebot has joined the channel
[14:23] dubenstein has joined the channel
[14:25] igl has joined the channel
[14:26] strevat has joined the channel
[14:26] dubenstein has joined the channel
[14:26] jocafa has joined the channel
[14:27] davemo has joined the channel
[14:27] superjudge has joined the channel
[14:27] gavin_huang has left the channel
[14:27] Frippe_ has joined the channel
[14:29] martinciu has joined the channel
[14:30] swestcott has joined the channel
[14:32] dexter_e has joined the channel
[14:33] Frippe has joined the channel
[14:33] pandeiro has joined the channel
[14:33] pixel13 has joined the channel
[14:33] Guest68995 has joined the channel
[14:34] aheckmann has joined the channel
[14:34] CarterL has joined the channel
[14:35] brianloveswords has joined the channel
[14:35] materialdesigner has joined the channel
[14:36] ixti has joined the channel
[14:37] nerdfiles has joined the channel
[14:38] wdperson has joined the channel
[14:38] nibblebot: is cluster module being superceded by builtin cluster functionality in core 0.6?
[14:39] deedubs: yeah it appears like it will go most of the wy
[14:39] deedubs: *way
[14:40] deedubs: tj has a pull request open to push it there
[14:41] pixel13 has left the channel
[14:43] vindice_ has joined the channel
[14:45] gopelaez has joined the channel
[14:46] fatjonny has joined the channel
[14:46] thalll has joined the channel
[14:47] swestcott has joined the channel
[14:47] mchammer has joined the channel
[14:47] AphelionZ has joined the channel
[14:48] figital has joined the channel
[14:49] replore has joined the channel
[14:49] replore_ has joined the channel
[14:50] davidwalsh has joined the channel
[14:51] EyePulp has joined the channel
[14:52] NetRoY has joined the channel
[14:52] wdperson has joined the channel
[14:53] ewj has joined the channel
[14:53] mixin has joined the channel
[14:55] tjholowaychuk has joined the channel
[14:56] tjholowaychuk has joined the channel
[14:57] slifty_corsair has joined the channel
[14:58] ohtogo has joined the channel
[15:00] ritch has joined the channel
[15:00] ritch has left the channel
[15:01] vereteran has joined the channel
[15:03] dr_slifty has joined the channel
[15:03] DarkGrey has joined the channel
[15:03] smtlaissezfaire has joined the channel
[15:04] kriszyp has joined the channel
[15:04] Spion has joined the channel
[15:06] dylang has joined the channel
[15:07] pizthewiz has joined the channel
[15:08] dob__ has joined the channel
[15:08] zahary has joined the channel
[15:10] garrensmith has joined the channel
[15:10] saikat has joined the channel
[15:11] zahary: Hey guys, npm used to have a "must-install" config option telling it whether to skip installing packages already present on the system. Does anyone know what happened to it? is there a new way to achieve this?
[15:11] Kunda has joined the channel
[15:11] AvianFlu has joined the channel
[15:12] towski has joined the channel
[15:12] __tosh has joined the channel
[15:13] zemanel has joined the channel
[15:13] garrensmith: zahary: not sure if npm needs to do that now. Each project will have a node_modules folder so it installs it in there
[15:13] harthur has joined the channel
[15:14] zahary: yes, when I say "on the system", I mean the node_modules folder
[15:14] kriszyp2 has joined the channel
[15:15] zemanel has joined the channel
[15:15] merlin83 has joined the channel
[15:15] aliem has joined the channel
[15:16] swestcott has joined the channel
[15:17] jocafa: tjholowaychuk:  around?
[15:17] tjholowaychuk: somewhat yup
[15:18] jocafa: in stylus, if i have A.style which imports B and C, and both B and C import D, will it handle it appropriately?
[15:18] jocafa: styl, not style
[15:19] jocafa: (caffeine no kick in yet.)
[15:19] tjholowaychuk: should work yup
[15:19] jocafa: k
[15:19] toopay has joined the channel
[15:19] jocafa: basically what i want to do is have a master .styl file that imports all of my widgets/modules, but they could all potentially import other mixin files
[15:19] devongovett has joined the channel
[15:20] tjholowaychuk: should be fine I do similar in most of my projects
[15:20] tjholowaychuk: stylus supports /index.styl like require() so you can do that as well
[15:20] tjholowaychuk: if you want to @import 'mixins' or something and have a dir of them
[15:20] spasquali has joined the channel
[15:20] jocafa: good to know
[15:20] deedubs: someone needs to write blueprint for stylus
[15:21] tjholowaychuk: i think someone did actually
[15:21] deedubs: every once in a while I do a search for it
[15:21] tjholowaychuk: https://github.com/brianc/stylus-blueprint
[15:21] tjholowaychuk: havent tried it
[15:22] deedubs: hmm seems a solid base anyway sweet!
[15:23] jocafa: i'm decoupling this project from using a node/express server for now, so watch+make will be my friends for a while
[15:23] jslatts has joined the channel
[15:23] deedubs: jocafa: are you using any http server? 
[15:24] EhevuTov has joined the channel
[15:24] jocafa: we're using carrier pigeon..
[15:24] spasquali has left the channel
[15:24] jocafa: :)
[15:24] jocafa: nginx actually
[15:24] robhawkes has joined the channel
[15:24] mixin has joined the channel
[15:24] slifty_corsair has joined the channel
[15:26] flamboz has joined the channel
[15:27] broofa has joined the channel
[15:27] Margle has joined the channel
[15:27] _th_n_ has joined the channel
[15:27] catshirt has joined the channel
[15:28] te-brian2 has joined the channel
[15:28] caolanm has joined the channel
[15:31] vipaca has joined the channel
[15:31] vipaca has joined the channel
[15:31] sub_pop has joined the channel
[15:31] voodootikigod__ has joined the channel
[15:33] nibblebo_ has joined the channel
[15:34] unimedisys has joined the channel
[15:35] unimedisys has left the channel
[15:36] voodootikigod_ has joined the channel
[15:36] EhevuTov has joined the channel
[15:37] Renegade001 has joined the channel
[15:37] jzacsh has joined the channel
[15:37] jzacsh has joined the channel
[15:38] Qbix2 has joined the channel
[15:39] joshkehn has joined the channel
[15:39] joshkehn has left the channel
[15:39] jetienne has joined the channel
[15:40] cjm has joined the channel
[15:41] eresair has joined the channel
[15:41] hugodias has joined the channel
[15:42] Spion_ has joined the channel
[15:42] willwh has joined the channel
[15:42] willwh has joined the channel
[15:43] LifterAH has joined the channel
[15:44] fread2281 has joined the channel
[15:45] fread228_ has joined the channel
[15:46] fread22__ has joined the channel
[15:47] jetienne has joined the channel
[15:47] smathy has joined the channel
[15:48] halfhalo has joined the channel
[15:50] halfhalo has joined the channel
[15:50] mmalecki has joined the channel
[15:51] trose: I'm installing pg using npm. During the install it says Checking for node path: not found but later says the install finished successfully... Is that a problem?
[15:51] swestcott has joined the channel
[15:52] qbit_: trose: i think it's just looking for the "NODE_PATH" variable - and that is only needed if node is not installed in /usr or /usr/local
[15:52] qbit_: afaik
[15:52] trose: qbit_, oh okay
[15:52] trose: that makes sense
[15:52] trose: :D
[15:54] saikat has joined the channel
[15:57] joshthecoder has joined the channel
[15:58] fmeyer has joined the channel
[15:58] spiffytech has joined the channel
[15:59] mattrobenolt has joined the channel
[15:59] stephank has joined the channel
[15:59] mattrobenolt: When node is compiled and installed, where are the actual Node libraries sitting?
[16:00] mattrobenolt: The normal ones you require() in.
[16:01] LifterA has joined the channel
[16:01] baudehlo: inside the binary
[16:01] spiffytech: Node seems to be getting confuzed about my timezone. My server is set to UTC (as indicated by `date`), but Date().getTime() returns EST time, and Date().getTimezoneOffset() returns 0. 
[16:02] baudehlo: spiffytech: what does process.env.TZ say?
[16:02] mattrobenolt: Really? All of the normal .js files get compiled in? So what's the easiest way to test/debug something I'm writing for Node?
[16:02] mattrobenolt: I have to keep compiling? Even for raw JS?
[16:03] deedubs: put it in the same dir and require('./mything')
[16:03] baudehlo: What do you mean by "normal"? I'm talking about the core libraries.
[16:03] mattrobenolt: Yeah, I'm writing a pull request for the zlib module.
[16:03] spiffytech: baudehlo: undefined
[16:03] mattrobenolt: So it's a core library. But pure JS. I didn't think those were actually compiled in.
[16:04] baudehlo: try setting it to UTC
[16:04] baudehlo: before starting node
[16:04] EhevuTov_ has joined the channel
[16:06] mattrobenolt: I guess I can monkey patch it in for testing to avoid compiling over and over again, then when I think it's ready, put it in and compile. Is there a normal procedure you use to do this?
[16:07] deedubs: mattrobenolt: Why can't you just require it normally?
[16:07] mattrobenolt: deedubs: Becuase I'm patching the core zlib library.
[16:07] deedubs: and...
[16:08] mattrobenolt: Wait… yeah, I could just copy the normal zlib.js into my own project and require it.
[16:08] mattrobenolt: Duh.
[16:08] storrgie has joined the channel
[16:08] mattrobenolt: Hello, Monday.
[16:09] spiffytech: baudehlo: I don't know how to set that before starting node. I tried, setting the env variable "TZ" on the command line, which didn't work.
[16:09] eignerchris has joined the channel
[16:09] baudehlo: TZ=UTC node script.js
[16:09] devongovett has joined the channel
[16:10] dreamdust has joined the channel
[16:10] baudehlo: (on unixes, anyway)
[16:11] EhevuTov_ has joined the channel
[16:11] context: off topic. http://www.youtube.com/watch?v=rNp2tZXWr9k if anyone might know the two songs on here, id <3 you (1:45 - 2:00, and 2:59 - on)
[16:11] context: its driving me crazy
[16:12] LifterA: Why don't you shazam the songs?
[16:13] baudehlo: no matches on shazam
[16:13] eb4890 has joined the channel
[16:14] spiffytech: baudehlo: That still returns EST time with an offset of 0. Interestingly, I can set TZ=EST and get the correct offset for EST, so setting the env variable is actually doing *something*.
[16:14] CoverSlide has joined the channel
[16:14] _dc has joined the channel
[16:15] mandric has joined the channel
[16:15] LifterAH has joined the channel
[16:15] rev087 has joined the channel
[16:16] coderdad has joined the channel
[16:17] sonnym has joined the channel
[16:18] TooTallNate has joined the channel
[16:18] _dc has joined the channel
[16:18] kkszysiu_ has joined the channel
[16:19] jerrysv has joined the channel
[16:20] baudehlo: spiffytech: I think this must just be an issue with how your server is "set to UTC"
[16:20] baudehlo: otherwise how does it know to use EST?
[16:22] JSManiacs has joined the channel
[16:22] baudehlo: does perl -le 'print 1000 * time'  give you the same value?
[16:22] simenbrekken has joined the channel
[16:23] Wa has joined the channel
[16:23] digman543 has joined the channel
[16:24] pizthewiz has joined the channel
[16:24] ilikeit has joined the channel
[16:25] slifty has joined the channel
[16:26] dubenstein has joined the channel
[16:27] neilk_ has joined the channel
[16:27] spiffytech: baudehlo: Yes. So it's not a Node problem. I ran `dpkg-reconfigre tzdata` and selected UTC, which still makes `date` print time in UTC and say "UTC". So the interesting question is why that information isn't getting to Perl and Node...
[16:28] te-brian2 has joined the channel
[16:28] baudehlo: Umm, no, the interesting question is why you think those seconds since the epoch aren't in UTC.
[16:28] baudehlo: because they are.
[16:28] trotter has joined the channel
[16:28] JaKWaC has joined the channel
[16:29] fattytuna has joined the channel
[16:30] wadey has joined the channel
[16:30] q_no has joined the channel
[16:31] nibblebot has joined the channel
[16:31] aheckmann has joined the channel
[16:31] spiffytech: baudehlo: Because apparently I don't know how to use python's time.ctime() right :P Running that on the *correct* machine indeed shows UTC. Which means my client browser is interpreting my post times as 4 hours ago for a different reason...
[16:31] isaacs has joined the channel
[16:32] fmeyer has joined the channel
[16:32] michaeldeol has joined the channel
[16:36] JSManiacs has left the channel
[16:38] HardPhuck has joined the channel
[16:38] kenperkins has joined the channel
[16:39] dshaw_ has joined the channel
[16:39] cl0udy has joined the channel
[16:40] Morkel has joined the channel
[16:40] aguynamedben has joined the channel
[16:41] aheckmann has joined the channel
[16:42] airhorns has joined the channel
[16:44] mchammer: anyone familiar with nowjs?
[16:45] jetienne has joined the channel
[16:45] mchammer: server: everyone.now.showFiles = function(callback) { callback = "test"; }
[16:45] mchammer: client: now.showFiles(function(data) { console.log(data); }); 
[16:45] mchammer: function is called but i dont receive an answer
[16:46] ecin has joined the channel
[16:48] TooTallNate: server: everyone.now.showFiles = function(callback) { callback("test"); }
[16:48] TooTallNate: mchammer: try that
[16:48] joeytwiddle has joined the channel
[16:49] dreamdust has joined the channel
[16:49] githogori has joined the channel
[16:50] smathy_ has joined the channel
[16:51] Ang3 has joined the channel
[16:51] mchammer: TooTallNate: still wont work :/
[16:51] mchammer: oh sec.
[16:51] TooTallNate: i dunno then, that was just a guess. never used nowjs
[16:52] te-brian2 has joined the channel
[16:52] digman543 has joined the channel
[16:52] TooTallNate: P.S. Use socket.io straight up if you're a sav
[16:52] smathy__ has joined the channel
[16:52] coderdad has joined the channel
[16:52] mchammer: it worked had a typo
[16:52] mchammer: thx :)
[16:52] nyrb has joined the channel
[16:53] sechrist has joined the channel
[16:53] maletor has joined the channel
[16:53] devongovett: Hey guess what? I'm back at it with Badass JS finally! http://badassjs.com/post/11867989702/badass-js-is-back-with-a-new-look-heres-a-little W00t!
[16:54] natebeck has joined the channel
[16:54] _kud has joined the channel
[16:55] briemens has joined the channel
[16:55] Nietecht has joined the channel
[16:56] trotter has joined the channel
[16:57] Carter has joined the channel
[16:58] DennisRasmussen has joined the channel
[17:00] herbySk has joined the channel
[17:00] ritch has joined the channel
[17:01] ritch has left the channel
[17:02] mcluskydodallas has joined the channel
[17:02] towski has joined the channel
[17:03] jsurfer has joined the channel
[17:03] kriszyp has joined the channel
[17:04] mehtryx has joined the channel
[17:04] Wizek has joined the channel
[17:04] svnlto has joined the channel
[17:04] mehtryx has left the channel
[17:04] slifty has joined the channel
[17:05] EvRide has joined the channel
[17:06] perezd has joined the channel
[17:06] harthur has joined the channel
[17:06] `3rdEden has joined the channel
[17:06] strevat has joined the channel
[17:07] harth has joined the channel
[17:07] jetienne has joined the channel
[17:08] charlenopires has joined the channel
[17:08] dgathright has joined the channel
[17:08] bengrue has joined the channel
[17:11] thisandagain has joined the channel
[17:11] Morkel has joined the channel
[17:13] jsurfer has joined the channel
[17:14] Cev has joined the channel
[17:15] brion has joined the channel
[17:15] brion has joined the channel
[17:16] franciscallo has joined the channel
[17:16] rev087 has joined the channel
[17:16] reid has joined the channel
[17:17] jsurfer has joined the channel
[17:17] chrislorenz has joined the channel
[17:18] nerdfiles1 has joined the channel
[17:18] svnlto has joined the channel
[17:18] nerdfiles1 has left the channel
[17:18] jonrohan has joined the channel
[17:18] aguynamedben has joined the channel
[17:21] sh1mmer has joined the channel
[17:22] sub_pop has joined the channel
[17:24] dshaw_ has joined the channel
[17:25] StanlySoManly has joined the channel
[17:26] mmalecki: oh shit, I derped
[17:26] dubenstein has joined the channel
[17:26] mmalecki: oh, I fucked vows up just a bit
[17:26] jerrysv: mmalecki: how?
[17:27] mmalecki: jerrysv: notice how this line will be parsed: https://github.com/cloudhead/vows/blob/master/lib/assert/error.js#L22
[17:27] n8ji has joined the channel
[17:27] mmalecki: jerrysv: it works, it just won't output any data about failed assertions
[17:27] mmalecki: pull request incoming
[17:28] iivvoo has joined the channel
[17:28] jerrysv: cool cool. i have a soft-spot in my heart for vows, so ...
[17:28] mmalecki: jerrysv: but hey, I made it work on 0.5 :D
[17:29] jerrysv: mmalecki: betting you had to do a quick pathing change on some of my stuff
[17:29] shykes_ has joined the channel
[17:29] mmalecki: jerrysv: dunno, didn't blame files I was changing :p
[17:30] jerrysv: yup: [refactor v0.6] Remove/replace `sys` usages
[17:30] jerrysv: the coverage stuff was mine
[17:30] mmalecki: nice!
[17:30] mmalecki: I think I didn't mess around it too much, though
[17:30] jerrysv: i need to spend a few minutes and make sure bricks is working in 0.5 latest and on windows
[17:31] jerrysv: date-utils seems to be kicking fine
[17:31] mmalecki: jerrysv: that's what we're doing since a week or so now
[17:31] fread2281 has joined the channel
[17:31] jerrysv: but think i need to update eventemitter a bit on the bricks side
[17:31] ksheurs has joined the channel
[17:31] jerrysv: mmalecki: i have a lot on my plate at the moment, trying to find spare cycles :)
[17:31] mmalecki: jerrysv: preempt other things
[17:32] jerrysv: mmalecki: can't tell that to my day job at the moment :/
[17:32] fread228_ has joined the channel
[17:32] Cromulent has joined the channel
[17:33] slifty has joined the channel
[17:33] pointlessjon has joined the channel
[17:34] jtsnow has joined the channel
[17:35] metaverse has joined the channel
[17:36] slifty_corsair has joined the channel
[17:37] ryah: `3rdEden: ping
[17:37] `3rdEden: ryah pong
[17:37] ryah: `3rdEden: is there an issue for thie http parser bug your hitting?
[17:37] `3rdEden: yes and no
[17:37] flagg0204 has joined the channel
[17:38] `3rdEden: i was able to instantly crash node with a assertion error in the HTTP parser using node 0.5.9
[17:38] `3rdEden: but on my mac i'm unable to reproduce it with 0.5.10
[17:38] `3rdEden: but einaros said that he was able reproduce the same crash in 0.5.10
[17:38] ryah: `3rdEden: do we have a github issue for this?
[17:38] ayaz has joined the channel
[17:38] `3rdEden: ryah don't think so
[17:38] ryah: ok
[17:38] `3rdEden: I haven't been able to narrow it down yet to a small test case
[17:39] `3rdEden: as it's inside our Socket.IO test suite
[17:39] wbednarski has joined the channel
[17:40] `3rdEden: ryah but i was doing really silly things with the HTTP module, like calling the socket's onend method to forcefully close a connection
[17:40] nibblebo_ has joined the channel
[17:41] magnetik__ has joined the channel
[17:41] ryah: `3rdEden: https://github.com/joyent/node/issues/1931
[17:42] ryah: `3rdEden: what's your github handle?
[17:42] `3rdEden: @3rdeden
[17:42] hipsterslapfight has joined the channel
[17:43] ryah: `3rdEden: we'd love to be able to reproduce this
[17:43] `3rdEden: also hitting a segmentation fault somewhere in other app that i'm bulding
[17:43] ryah: can you tell me more about that?
[17:43] `3rdEden: ryah: i'll see what id can cc einaros
[17:44] patcito has joined the channel
[17:44] `3rdEden: ACTION give einaros another poke
[17:44] Renegade001 has joined the channel
[17:45] `3rdEden: ryah i hit the issue because we use `agent.sockets` in our test suite: https://github.com/LearnBoost/socket.io/blob/master/test/common.js#L93-97
[17:45] `3rdEden: changing it to that: https://gist.github.com/1309613 instantly crashed it on 0.5.9
[17:46] ryah: :/
[17:46] `3rdEden: yes, I do silly stuff ;)
[17:47] ryah: `3rdEden: can you pair this down to a small test case?
[17:47] `3rdEden: ryah will try to
[17:47] `3rdEden: but idk i will manage it tonight
[17:47] ryah: pare even
[17:47] `3rdEden: if i*
[17:47] ryah: `3rdEden: thanks
[17:48] ryah: `3rdEden: update that issue if you find out anything more
[17:48] ryah: this is going to be a blocker for v0.6.0
[17:48] `3rdEden: willy do
[17:48] `3rdEden: will do*
[17:48] `3rdEden: dear god, silly typos :(
[17:49] ctide: is nvm sync broken atm?
[17:49] ctide: https://gist.github.com/f3e24e918e3b8aa98c58
[17:49] ctide: it won't recognize that any versions exist past 0.5.0
[17:49] vidi has joined the channel
[17:50] ryah: tjholowaychuk: --^
[17:50] `3rdEden: ryah actually nvm is by creationx
[17:50] `3rdEden: tjholowaychuk made `n`
[17:51] `3rdEden: https://github.com/creationix/nvm <-
[17:51] jimt_ has joined the channel
[17:51] jslatts has joined the channel
[17:51] pkrumins: Announcing Testling!
[17:52] pkrumins: http://catonmat.net/blog/announcing-testling/
[17:52] pkrumins: Automated Cross-Browser JavaScript Testing
[17:52] pkrumins: wee hoo
[17:52] overthemike has joined the channel
[17:52] overthemike has left the channel
[17:52] ctide: oh, apparently that sync command was removed in new versions
[17:53] saikat has joined the channel
[17:53] mmalecki: jerrysv: https://github.com/cloudhead/vows/pull/146
[17:53] mmalecki: so, yeah, let's hope it gets merged and released asap
[17:53] natebeck has left the channel
[17:54] nibblebot has joined the channel
[17:54] t4nk778 has joined the channel
[17:54] briancra_ has joined the channel
[17:55] ej_ has joined the channel
[17:55] mikedeboer has joined the channel
[17:56] fzzzy has joined the channel
[17:57] gregmoreno has joined the channel
[17:57] SubStack: testling on http://news.ycombinator.com/newest upboats would be great!
[17:58] harthur has joined the channel
[17:58] base698 has joined the channel
[17:58] jerrysv: mmalecki: awesome, he's been pretty quick getting things merged
[17:58] AvianFlu has joined the channel
[17:59] mmalecki: jerrysv: I also cc'ed him on twitter, so should be like +30 to speed
[17:59] jerrysv: should send him a text too :)
[18:00] mmalecki: yeah, and come to his house
[18:00] mmalecki: "who the fuck are you?!" "merge my pull request."
[18:00] JaKWaC has joined the channel
[18:01] gut4 has joined the channel
[18:01] postwait has joined the channel
[18:02] JaKWaC has joined the channel
[18:03] digman543 has joined the channel
[18:03] cjm has joined the channel
[18:03] jerrysv: ha, yeah. that would work too
[18:03] Harzilein has joined the channel
[18:03] Harzilein: hi
[18:03] jerrysv: ACTION fears the knocks at the door.
[18:03] Aikar: cloudhead ^ hes coming to your house! run!
[18:04] jerrysv: Aikar: actually indexzero is the maintainer now
[18:04] Aikar: oh?
[18:04] jerrysv: Aikar: yeah, as of a few months ago
[18:04] briancray has joined the channel
[18:04] Harzilein: is there a way to (temporarily) suppress error message output? jsdom is quite verbose about errors in its input (which i can't do anything about, as they are sites to be scraped)
[18:06] dget has joined the channel
[18:06] thisandagain has joined the channel
[18:07] thisandagain has left the channel
[18:08] jerrysv: mmalecki: was the previous version released on npm?
[18:08] jerrysv: i'm getting errors running tests
[18:08] mmalecki: jerrysv: yes, should be
[18:08] mmalecki: jerrysv: s/assert.length/assert.lengthOf/g
[18:08] mmalecki: jerrysv: sorry for that, it's caused by my patch to core :(
[18:09] mmalecki: jerrysv: now core assert is also a function
[18:09] jerrysv: that's not the issue i'm getting. i think it's from the eyes dependency
[18:09] mmalecki: so it has length property
[18:09] mmalecki: jerrysv: sys usage?
[18:09] jerrysv: The "sys" module is now called "util". It should have a similar interface.
[18:09] mmalecki: yeah, we're still waiting for commit access, I think
[18:09] jerrysv: aha
[18:09] jerrysv: ok
[18:09] mmalecki: jerrysv: but it's just a warning, right?
[18:10] jerrysv: and my tests are doing the right thing otherwise
[18:10] jerrysv: appears to be, yes
[18:10] jerrysv: one of my tests is failing with error: RegExp as function has been depricated as of Node.js 0.5 
[18:10] jerrysv: i think it's my test that checks for regexp as a function actually :)
[18:10] martin_sunset has joined the channel
[18:11] mmalecki: jerrysv: are you doing /regexp/(something)?
[18:11] jerrysv: mmalecki: checking against it in a test, yeah
[18:11] jerrysv: mmalecki: ok, not too bad off then, a failing test and the rest appears to be working.
[18:12] jerrysv: to be fair, i had it all working well in an earlier 0.5, so i wasn't too concerned
[18:12] mattrobenolt has joined the channel
[18:13] mikeric has joined the channel
[18:13] enos_feedler has joined the channel
[18:13] mmalecki: jerrysv: well, some tests worked with old version, I think
[18:14] dget has joined the channel
[18:14] mmalecki: jerrysv: but yeah, it's important to recheck it now
[18:15] Kunda has joined the channel
[18:15] slifty has joined the channel
[18:15] jerrysv: i need to update eventemitter2 at some point
[18:15] coderdad has joined the channel
[18:17] dnyy has joined the channel
[18:19] JSManiacs has joined the channel
[18:19] Margle has joined the channel
[18:20] replore has joined the channel
[18:20] replore_ has joined the channel
[18:20] wankdanker has joined the channel
[18:21] smathy has joined the channel
[18:22] aron_ has joined the channel
[18:22] whalesofthesky has joined the channel
[18:23] mike5w3c_ has joined the channel
[18:24] simenbrekken has joined the channel
[18:24] mmalecki: jerrysv: merge in
[18:24] mmalecki: *merged
[18:24] Ang3 has joined the channel
[18:25] saikat has joined the channel
[18:26] Venom_X has joined the channel
[18:26] thisandagain has joined the channel
[18:27] CarterL has joined the channel
[18:28] jsurfer_ has joined the channel
[18:28] smtlaissezfaire has joined the channel
[18:29] JaKWaC has joined the channel
[18:30] towski_ has joined the channel
[18:32] lz has joined the channel
[18:34] maushu has joined the channel
[18:35] martinciu has joined the channel
[18:35] jerrysv: mmalecki: yup, confirmed. just removing the test for regexp makes me 100% compliant. woo!
[18:35] mmalecki: jerrysv: happy to hear it :)
[18:36] jerrysv: now just need to set up a windows vm and see how borked it is
[18:36] mmalecki: jerrysv: btw, there's an assertion, assert.match
[18:36] mmalecki: haha, just a bit
[18:36] mmalecki: or maybe it'll work now?
[18:36] mmalecki: no idea
[18:36] jerrysv: maybe? will need to install windows. haven't done that in quite a while
[18:37] mmalecki: jerrysv: why would you do that anyway?
[18:37] metellus has joined the channel
[18:37] jerrysv: mmalecki: to verify that it does actually work. you know, be safe.
[18:37] harthur has joined the channel
[18:38] AvianFlu has joined the channel
[18:38] mmalecki: jerrysv: ping me later, I'm curious if it still craps out on some options ;)
[18:39] hydrozen has joined the channel
[18:39] jerrysv: mmalecki: will do
[18:39] tylerstalder has joined the channel
[18:40] mmalecki: jerrysv: thanks. after last changes in node and v8 it *should* work
[18:40] mmalecki: --isolate was the biggest problems, but it got fixed
[18:40] simenbrekken has joined the channel
[18:40] mmalecki: I never bothered to check, tho
[18:41] jerrysv: isolate works fine on linux/mac
[18:41] mmalecki: jerrysv: I know, I tested it
[18:41] mixin has joined the channel
[18:41] mmalecki: jerrysv: but it was a problem on windows
[18:41] mmalecki: some stdout redirection stuff
[18:41] jerrysv: will test on windows as soon as i can make some space to create a vm (maybe tonight, which is about 8 hours from me my time)
[18:42] AvianFlu has joined the channel
[18:43] cjheath has joined the channel
[18:44] olivier has joined the channel
[18:45] dnyy has joined the channel
[18:45] yhahn has joined the channel
[18:45] wankdanker has joined the channel
[18:46] yhahn has left the channel
[18:46] springmeyer has joined the channel
[18:46] Ang3 has joined the channel
[18:46] MCHammer_ has joined the channel
[18:49] fangel has joined the channel
[18:50] shapeshed has joined the channel
[18:51] darshanshankar has joined the channel
[18:52] Garf has joined the channel
[18:53] decaf has joined the channel
[18:53] decaf has joined the channel
[18:53] Garf: what's the reason for crankshaft being disabled in node.js 0.4.x?
[18:53] reid has joined the channel
[18:54] dreamdust has left the channel
[18:55] donburks has joined the channel
[18:55] `3rdEden: Garf the V8 engine in 0.4 doesn't support crankshaft yet
[18:55] `3rdEden: 0.5.x doe
[18:55] `3rdEden: s*
[18:55] j-dev has joined the channel
[18:56] Garf: are you sure? if I add the options, my code gets twice faster
[18:56] Garf: this is on x64 even. at first I thought it was due to the jit being ia32, but thats clearly not the case
[18:56] `3rdEden: it's was probably still in a experiment phase
[18:57] Garf: can it be turned in from within the JS itself?
[18:57] vidi has joined the channel
[18:57] `3rdEden: 0.5.x contains the "offical" release, i'm pretty sure it's not 0.4.. but I have been wrong before
[18:58] jerrysv: `3rdEden: i think you're right
[18:58] mattrobenolt: Node takes 6.5 minutes to compile on my Macbook Air, and 38 seconds on my Mac Pro. :)
[18:58] patcito has joined the channel
[18:58] donburks: Question: If I have a Node server instance, whose primary job is to accept uploaded files and parse them, but I need to have a default form page for those people who insist on doing it manually, is it better to a) Use a module like node-static or connect, b) just use readFile/readStream/pipe to output the one page, or c) inline the HTML and just serve it with response.write?
[18:59] mikedeboer has joined the channel
[18:59] hij1nx has joined the channel
[19:00] sh1mmer: Enki:~/Code/node-clean/deps/v8(master) $ git show refs/tags/v0.4.12:deps/v8/ChangeLog | head -1
[19:00] sh1mmer: 2011-03-02: Version 3.1.8
[19:00] sh1mmer: Enki:~/Code/node-clean/deps/v8(master) $ head -1 ChangeLog
[19:00] sh1mmer: 2011-10-13: Version 3.7.0
[19:01] sh1mmer: I don't know when crankshaft became official but there are you versions to look it up
[19:01] swestcott has joined the channel
[19:01] N0va` has joined the channel
[19:03] dgathright has joined the channel
[19:04] jerrysv: garf: add which options? at runtime? or compiletime?
[19:04] magnetik has joined the channel
[19:04] gxdssoft has joined the channel
[19:04] dgathright_ has joined the channel
[19:04] Garf: controlling v8 options in the js instead of in the commandline
[19:05] ryah: Garf: V8's release cycle is 6 weeks - which forces major features like crankshaft to be developed under commandline flags until they are stable
[19:05] ryah: Garf: they didn't consider it stable back then, now they do
[19:05] cjheath has joined the channel
[19:05] charlenopires has joined the channel
[19:05] __tosh has joined the channel
[19:05] Garf: http://stackoverflow.com/questions/7213574/since-which-version-of-nodejs-is-crankshaft-enabled-by-default
[19:06] harthur has joined the channel
[19:06] Garf: so I guess I'm seeing this because I'm on x64, and on an ia32 system I would see it defaulted on
[19:06] Me1000 has joined the channel
[19:06] jbpros has joined the channel
[19:06] ryah: Garf: oh yeah, i guess
[19:06] deedubs: would be interesting to see a version of  node 0.4.12 with crankshaft vs node 0.6.x 
[19:07] d4rk1ink has joined the channel
[19:07] Garf: I just checked against node 0.5.10, and it regressed :P only one benchmark though
[19:07] ryah: Garf: which benchmark?
[19:07] Garf: ryah: an own program for statistical analysis
[19:07] Garf: ryah: mix of integer and float maths
[19:08] Garf: I wrote this in python originally, then did a web version, then figured I could make a commandline one with node.js
[19:08] ryah: no io?
[19:09] Garf: none in the performance-critical path
[19:12] donburks: Question: If I have a Node server instance, whose primary job is to accept uploaded files and parse them, but I need to have a default form page for those people who insist on doing it manually, is it better to a) Use a module like node-static or connect, b) just use readFile/readStream/pipe to output the one page, or c) inline the HTML and just serve it with response.write?
[19:13] deedubs: wasn't node 0.5+ expected to be slower than 0.4.x
[19:13] thalll has joined the channel
[19:13] boltR has joined the channel
[19:13] pHcF has joined the channel
[19:14] JaKWaC: donburks: I'd probably do it in an external file and read it in, but just do that Sync before you start your app and then serve it from memory.
[19:14] JaKWaC: node-static would be a really easy way to do it though.
[19:15] donburks: Ty. 
[19:16] kriszyp has joined the channel
[19:18] siculars has joined the channel
[19:20] DennisRasmussen has joined the channel
[19:20] AvianFlu_ has joined the channel
[19:21] ghankstef has joined the channel
[19:21] ghankstef: need  some conceptual  help  -  I want to use  now to  make  a little  chat application and embed it inside a php application  (Drupal CMS).  In the example   chat server  on the nowjs   web  site  Nodejs  is serving the  web page.  In this case I want  Php/Drupal to serve   the  page  and   and handshake    with nodejs .    I don't even really  need to  send  stuff  from  Php   so  much  as just  embed the javascript into the Drupal page . 
[19:23] bergelmir has joined the channel
[19:23] bergelmir has joined the channel
[19:24] jakobdamjensen has joined the channel
[19:24] npa has joined the channel
[19:25] spechtacular has joined the channel
[19:28] devongovett has joined the channel
[19:30] bosphorus has joined the channel
[19:32] fzzzy has joined the channel
[19:32] mikeric has joined the channel
[19:35] harthur has joined the channel
[19:36] Slashbunny has joined the channel
[19:36] saesh has joined the channel
[19:38] nerdfiles1 has joined the channel
[19:42] aheckmann has joined the channel
[19:44] fra000 has joined the channel
[19:45] skenqbx has joined the channel
[19:46] AphelionZ has joined the channel
[19:47] skenqbx: Hello, will there be support for passing udp handles through child.send() in v0.6?
[19:47] eignerchris_ has joined the channel
[19:50] Xano_ has joined the channel
[19:51] TomY has joined the channel
[19:51] Ang3 has joined the channel
[19:53] iivvoo has left the channel
[19:53] superjudge_ has joined the channel
[19:54] xetorthio has joined the channel
[19:54] saikat has joined the channel
[19:55] mixin_ has joined the channel
[19:56] nooble has joined the channel
[19:57] nabble has joined the channel
[19:57] mikeric has joined the channel
[19:58] jsurfer has joined the channel
[19:58] Nuck: Okay, let's say page A requires script X and page B requires script Y, and I want to put the code to load teh modules in the <head> while using a templating engine and a layout file.
[19:58] Nuck: How the hell is this possible?
[19:59] magnetik has joined the channel
[19:59] Nuck: Like, certain pages use certain jQuery plugins
[19:59] Nuck: And I don't wanna include rarely-used JS on all pages, nor do I want to have <script> tags scattered all over
[19:59] Nuck: But I can't think of how to do this :/
[20:00] Nuck: Like, set a variable that would be passed upward to the layout.hbs file
[20:00] Nuck: Any ideas?
[20:01] ghankstef: Nuck:   I  am  very   new to  node  but  have seen  there are  templating option s sort of like smarty  for php
[20:02] Nuck: I'm using Handlebars already :P
[20:02] Nuck: And I'm not using PHP-style templating
[20:02] arcanis has joined the channel
[20:03] icebox has joined the channel
[20:04] Nuck: I'd also like to do the same with stylesheets :/
[20:04] baoist has joined the channel
[20:04] icebox: Hello... in no.de machine (v2) I have config.json = { "version": "latest"} but I get  npm WARN invalid config node-version="latest"
[20:04] isaacs: icebox: that's ok to ignore
[20:04] icebox: isaacs: ok thanks
[20:04] Nuck: Like, have a way to push an entry onto a "head" array which I can read off and handle in layout.hbs
[20:05] icebox: isaacs: v2 rocks :)
[20:05] isaacs: icebox: thanks :)
[20:05] Nuck: That's the best way to describe it, I guess.  An array that I could set up in the page.hbs and then read from in layout.hbs
[20:05] garrensmith has joined the channel
[20:05] SubStack: isaacs: in other news, bouncy is now using parsley to pretty good effect
[20:06] SubStack: a little bit slower is all
[20:06] Nuck: tjholowaychuk: Express wouldn't happen to have some magick for that, would it? :S
[20:06] tjholowaychuk: ?
[20:06] dget has joined the channel
[20:06] SubStack: it's a little bit silly that I couldn't find any pure js http parsers on npm
[20:06] boltR has joined the channel
[20:06] Nuck: tjholowaychuk: The layout handling, can I set a variable in the page.hbs and and read from it in layout.hbs?
[20:06] isaacs: SubStack: yes, that is a notable failing.  way to rectify that ;)
[20:07] baudehlo: SubStack: it's built into node: RegExp.
[20:07] tjholowaychuk: Nuck yup
[20:07] Nuck: tjholowaychuk: Where is this sorcery?
[20:07] Nuck: :D
[20:07] tjholowaychuk: Nuck if you have say locals.scripts = []; you can access it in the page/layout views
[20:07] fly-away has joined the channel
[20:07] Dreamer3 has joined the channel
[20:07] Nuck: tjholowaychuk: And if I modify it somehow from the page view, I can read it from in the layout view?
[20:08] tjholowaychuk: yup
[20:08] SubStack: baudehlo: regex is pretty inadequate for doing streaming http parsing with support for keep-alive, chunked encodings, content length bodies, upgrades
[20:08] EvRide1 has joined the channel
[20:08] Nuck: (I'll find a way to mod it in handlebars :P)
[20:08] Nuck: Sadly, we don't have a streaming Regex parser :P
[20:08] baudehlo: SubStack: well you said a parser, not an API...
[20:08] Nuck: That would be an interesting thing to see though haha
[20:08] baudehlo: Reading just the header is pretty easy.
[20:09] Nuck: baudehlo: Not when it's streaming
[20:09] vicapow has joined the channel
[20:09] Nuck: Trust me, streaming parsers sound really easy but are actually *really* hard
[20:09] Nuck: tjholowaychuk: Awesome! I hope that works for me.
[20:09] baudehlo: *shrug* I've written one before for http (albeit in perl)
[20:09] darshanshankar has joined the channel
[20:09] AvianFlu_ has joined the channel
[20:09] Nuck: tjholowaychuk: I assume locals is the object I pass to res.render()?
[20:09] baudehlo: it supported keep-alive and chunked encoding.
[20:09] Nuck: baudehlo: Was is streaming or just string parsing?
[20:10] baudehlo: streaming, using non-blocking I/O.
[20:10] Nuck: Streams are a very different beast
[20:10] tjholowaychuk: Nuck yeah, you could just do app.dynamicHelpers({ scripts: function(){ return [] }})
[20:10] tjholowaychuk: (to get an array unique to the request that you can manipulate)
[20:10] Nuck: tjholowaychuk: oh that's a cool trick
[20:10] Nuck: tjholowaychuk: Thanks!
[20:11] enotodden has joined the channel
[20:12] AphelionZ1 has joined the channel
[20:14] perezd has joined the channel
[20:14] p1d has joined the channel
[20:15] jmoiron has left the channel
[20:15] ghankstef1 has joined the channel
[20:15] tilgovi has joined the channel
[20:15] tilgovi has joined the channel
[20:15] harthur has joined the channel
[20:17] fzzzy has joined the channel
[20:17] EyePulp: tjholowaychuk: have you run into the errors of node 0.5.9 + cluster?  fdsCustom or some such?  I dropped back to an older version of node for now.  Ignore me if this is a known issue, I just remembered it when I saw your nick.
[20:17] tjholowaychuk: EyePulp yeah it wont work with the new windows stuff
[20:18] tjholowaychuk: EyePulp this patch will facilitate everything needed to do similar though https://github.com/joyent/node/pull/1879
[20:18] CIA-48: node: 03isaacs 07master * r4c5751b 10/ (lib/zlib.js test/simple/test-zlib-random-byte-pipes.js): Close #1929 zlib Respond to 'resume' events properly - http://git.io/gOsxLQ
[20:19] cgfuh has joined the channel
[20:19] enotodde- has joined the channel
[20:19] npa has joined the channel
[20:20] Nuck: tjholowaychuk: ZOMFGAGHAG;AF IT WORKS
[20:20] ryah: tjholowaychuk: we came up with another solution
[20:20] tjholowaychuk: ryah yeah?
[20:20] Nuck: Thanks soooo much!
[20:20] tjholowaychuk: that's good
[20:21] ryah: we're going to remove the "node cluster" command and have force the user to do some boilerplate code to build the master process
[20:21] Nuck: :(
[20:21] tjholowaychuk: ryah ah ok cool
[20:21] Nuck: ryah: I am disappoint.
[20:21] Nuck: But I'll roll with it nonetheless
[20:22] Ang3 has joined the channel
[20:22] ryah: tjholowaychuk: should allow for plugins though
[20:22] mmalecki: https://twitter.com/#!/codinghorror/status/128565830932901888 <- :(
[20:22] mikeal has joined the channel
[20:22] eddyb has joined the channel
[20:23] Nuck: Every time I see "coding horror" I imagine a lovecraftian horror sitting in a cubicle
[20:24] Determinist has joined the channel
[20:24] Nuck: Also mmalecki :( Why are all great people dying
[20:24] CIA-48: node: 03Ryan Dahl 07master * r239b3d6 10/ (doc/api/streams.markdown lib/stream.js lib/util.js): 
[20:24] CIA-48: node: Remove resume and pause events
[20:24] CIA-48: node: Too complex; unnecessary. - http://git.io/6bwI7A
[20:24] mmalecki: shitty, shitty month.
[20:24] Dmitrijus: this autumn is sure ugly, first Ritchie, now McCarthy
[20:25] wbednarski has joined the channel
[20:28] vidi has joined the channel
[20:28] lightcap has joined the channel
[20:29] ryah: `3rdEden: hey
[20:29] Nuck: mmalecki: No confirmation yet?
[20:29] ryah: `3rdEden: i just tried to run the chat app example in socket.io and it failed
[20:29] Nuck: Odd
[20:29] mmalecki: Nuck: only this tweet
[20:30] Nuck: mmalecki: Wonder what his source is
[20:30] zeade has joined the channel
[20:30] `3rdEden: ryah what exactly did fail?
[20:30] hij1nx has joined the channel
[20:31] _1marc has joined the channel
[20:31] Nuck: mmalecki: Autoreverted by bots on WP
[20:31] Nuck: Prolly just a rumor
[20:31] coderdad has joined the channel
[20:33] ryah: `3rdEden: https://github.com/LearnBoost/socket.io/issues/592
[20:33] `3rdEden: oooh
[20:33] `3rdEden: yeh
[20:34] willwh has joined the channel
[20:34] willwh has joined the channel
[20:35] tbranyen: `3rdEden: https://github.com/LearnBoost/socket.io/pull/588 any comment on this pull req?
[20:35] `3rdEden: ryah i'm pretty sure we had a pull req against it, but it seems rauchg closed that one. But thanks for noticing :)
[20:35] Nuck: mmalecki: Only reference anyone had for his death was "a personal communication by his sister"
[20:35] tbranyen: j/w since i'll be using a patched version of socket.io in a demo otherwise =/
[20:35] Nuck: I'm alling bullshit for now
[20:35] strevat has joined the channel
[20:35] `3rdEden: tbranyen einaros fixed that with a bunch of websocket fixes : https://github.com/LearnBoost/socket.io/pull/591
[20:36] tbranyen: sweet any chance of seeing that get pulled within the next week or so?
[20:36] shanez has joined the channel
[20:36] `3rdEden: tbranyen it will be pulled it, but idk when the next release will be
[20:37] `3rdEden: tbranyen but i'm sure we wil do another release before node 0.6 is released
[20:37] tbranyen: sure that makes sense
[20:38] ryah: tjholowaychuk: https://github.com/visionmedia/express/issues/868
[20:38] tjholowaychuk: yu[
[20:38] tjholowaychuk: yup*
[20:39] ctide: yeah, i ran into that earlier
[20:39] ctide: then ran into the commander issue
[20:39] tjholowaychuk: I haven't had time for 0.5.x stuff
[20:39] ctide: and stopped for the moment :)
[20:39] mmalecki: oh shit.
[20:39] dubenstein has joined the channel
[20:39] dget has joined the channel
[20:40] ryah: it's time for the painful fork lift
[20:40] ryanfitz has joined the channel
[20:40] AvianFlu: I've been running 0.5.10 as my main node for a few days, very little is broken
[20:40] ryah: i know it's hard - but you're getting a massive new userbase out of it
[20:40] tjholowaychuk: i have to update connect first
[20:41] AvianFlu: ACTION 's previous comment did not involve windows
[20:41] ryah: API is almost exactly the same in v0.5.10 vs v0.4.12
[20:41] jerrysv: ryah: i have one test to fix, then all libraries 0.5.10 compliant
[20:41] ryah: the only changes are intended API fixes
[20:41] ryah: e.g. require.paths
[20:42] AvianFlu: yeah, the changes are really quite small in almost all cases
[20:42] Margle has joined the channel
[20:43] kriszyp has joined the channel
[20:43] tjholowaychuk: i'll try and get to it soon
[20:43] deedubs: I liked our old userbase
[20:43] mmalecki: and ttys not closing themselves >.<
[20:43] mmalecki: deedubs++
[20:43] tjholowaychuk: i've been slacking on the book so i have to work on that tonight
[20:43] catb0t: deedubs now has 1 beer
[20:43] v8bot_:  mmalecki has given a beer to deedubs. deedubs now has 1 beers.
[20:46] mmalecki: ACTION is afraid of every npm test npw
[20:46] mmalecki: *now
[20:48] mmalecki: btw, does anyone know a way of making ttys close themselves just like they did in 0.4?
[20:49] mikeric_ has joined the channel
[20:49] lightcap has joined the channel
[20:50] jerrysv has joined the channel
[20:50] deedubs: A good way for windows node.js guys to get up to speed would be for them to update the libraries that were broken to accommodate them
[20:50] tbranyen: windows devs contributing to open source
[20:50] tbranyen: no wai
[20:51] mmalecki: the best way would be too get like shitload of vms and test whole npm
[20:51] `3rdEden: I do notice that NPM fails to work with node 0.5.10
[20:51] tjholowaychuk: deedubs hahaha
[20:51] tjholowaychuk: good call
[20:51] mmalecki: tbranyen: igorzi, or whatever his handle was
[20:51] mmalecki: `3rdEden: no such module?
[20:51] `3rdEden: yup
[20:51] mmalecki: `3rdEden: process.binding('stdio') or something, iirc
[20:51] `3rdEden: but maybe I should just upgrade lol
[20:52] `3rdEden: i'm still running 1.0.12
[20:52] mmalecki: AvianFlu knows more about it, I think
[20:52] ryah: mmalecki: what do you mean close themselves?
[20:52] SubStack: joyent has the perfect infrastructure to build a test farm, that would be super great
[20:53] crodas has joined the channel
[20:53] ryah: `3rdEden: how does npm fail to work with v0.5.10?
[20:53] mmalecki: ryah: in 0.4 ttys closed themselves when process was going to finish, in 0.5 they block it
[20:53] ryah: `3rdEden: seems to work for me?
[20:53] tjholowaychuk: no moar bash test runners :(
[20:53] mmalecki: and you have to destroy them by hand
[20:53] ryah: mmalecki: can you be more clear?
[20:53] AvianFlu: what do I know about?
[20:53] mmalecki: SubStack++
[20:53] catb0t: SubStack now has 1 beer
[20:53] v8bot_:  mmalecki has given a beer to SubStack. SubStack now has 13 beers.
[20:53] mmalecki: AvianFlu: npm issue
[20:53] AvianFlu: yeah, you need npm > 1.0.96 or so if you're on 0.5.10
[20:54] deedubs: tjholowaychuk: what? that was taken away too? no more 'make test'
[20:54] AvianFlu: update to latest and it's great, in my experience
[20:54] `3rdEden: ryah https://gist.github.com/1310251
[20:54] tjholowaychuk: deedubs well for windows
[20:54] mmalecki: ryah: for example, when using readline module
[20:54] `3rdEden: AvianFlu yeh i'm still running 1.0.10 of npm
[20:54] ryah: `3rdEden: which version of npm?
[20:54] deedubs: oh pfff okay
[20:54] AvianFlu: yeah you gotta upgrade `3rdEden 
[20:54] AvianFlu: it uses process.binding('stdio') prior to recent versions
[20:54] AvianFlu: and that got taken away
[20:55] `3rdEden: AvianFlu still annoying that you can to `npm install npm`
[20:55] mmalecki: ryah: I'm talking specifically about process.stdin.destroy() needed there
[20:55] `3rdEden: :p
[20:55] JaKWaC has joined the channel
[20:55] ryah: mmalecki: can you show me a test script
[20:55] mmalecki: ryah: yeah, sure, give me a minute
[20:56] mmalecki: (or two)
[20:56] mmalecki: ACTION extracts code from node-prompt
[20:56] amk221 has joined the channel
[20:57] amk221 has left the channel
[20:57] `3rdEden: Bleh: our IRC chat example still dies under node 0.5.10
[20:58] `3rdEden: Anybody here knows what a "Error: connect Unknown system errno 65" means?
[20:59] `3rdEden: errno's aren't that developer friendly ;)
[20:59] slifty has joined the channel
[20:59] jimt has joined the channel
[21:00] amk has joined the channel
[21:00] amk has left the channel
[21:00] ryah: `3rdEden: which os?
[21:00] `3rdEden: ryah Mac OSX lion
[21:00] ryah: % grep -R 65 /usr/include/sys/errno.h 
[21:00] ryah: #define	EHOSTUNREACH	65		/* No route to host */
[21:01] base698: I'm writing a file loader in node for some data on Mac OSX.  after 249 flies it fails on 250 with a BAD FILE DESCRIPTOR.  I tweaked ulimit yesterday and it fixed it for a time.  Is back again today.  Using 0.4.12 Node
[21:01] amk221 has joined the channel
[21:01] `3rdEden: ryah thanks, it might actually nice if Node did that conversion
[21:02] amk221 has left the channel
[21:02] ryah: `3rdEden: yes - it is supposed to
[21:02] ryah: it's a bug
[21:02] `3rdEden: ah okay
[21:02] ryah: fixing it now...
[21:04] jackbean_ has joined the channel
[21:05] tjholowaychuk: looks like most of the connect tests are passing
[21:05] smathy has joined the channel
[21:05] Me1000 has joined the channel
[21:05] amk221 has joined the channel
[21:06] kriszyp has joined the channel
[21:06] CIA-48: libuv: 03Ryan Dahl 07master * r5738314 10/ src/unix/error.c : Map EHOSTUNREACH on Unix - http://git.io/yoJG4w
[21:06] ryah: tjholowaychuk++
[21:06] v8bot_:  ryah has given a beer to tjholowaychuk. tjholowaychuk now has 7 beers.
[21:07] CIA-48: libuv: 03Ryan Dahl 07master * rb5d69f9 10/ src/unix/error.c : Map EHOSTUNREACH on Unix - http://git.io/MFiSkw
[21:09] Bonuspunk: anything i should know about symlinks on windows with 0.5.10 - fs.symlinkSync('node_modules', 'mods', 'dir') --> Error: UNKNOWN, The operation completed successfully.
[21:09] mmalecki: ryah: https://gist.github.com/9dd3364f2a80cfb86be0
[21:10] mmalecki: ryah: it closes it automatically on 0.4
[21:10] mmalecki: ryah: I mean, this code never exits on 0.5, but exits on 0.4
[21:11] devongovett has joined the channel
[21:12] Wa has joined the channel
[21:14] micheil has joined the channel
[21:15] slajax1 has joined the channel
[21:19] mmalecki: ryah: is it expected behaviour? do you want a test for it?
[21:20] fread2281 has joined the channel
[21:20] slifty_corsair has joined the channel
[21:21] slifty has joined the channel
[21:21] Excedrin: http://pastebin.com/u5jAipaf is there any way to cause line 7 to print "got a req: CONNECT"?  it seems like connect causes connections to be silently dropped
[21:25] slifty has joined the channel
[21:25] markwubben has joined the channel
[21:26] harthur has joined the channel
[21:26] enotodden has joined the channel
[21:26] fread2281 has joined the channel
[21:27] mc_greeny has joined the channel
[21:28] Bioxyde has joined the channel
[21:28] Bioxyde has left the channel
[21:28] Morkel has joined the channel
[21:32] CarterL has joined the channel
[21:32] dget has joined the channel
[21:32] devongovett has joined the channel
[21:34] fread2281 has joined the channel
[21:34] slifty has joined the channel
[21:35] chunhao_ has joined the channel
[21:35] bluebit has joined the channel
[21:36] base698: Can anyone help with issues with the mongo native driver?  
[21:36] _1marc has joined the channel
[21:37] matyr has joined the channel
[21:37] mcluskydodallas has joined the channel
[21:38] AvianFlu: base698: try using 0.9.6-19
[21:38] darshanshankar has joined the channel
[21:38] AvianFlu: there was a bug in like, 0.9.6-22 that prevented it from authing, ever
[21:38] AvianFlu: I'm just guessing at your issue, of course :)
[21:38] Xano has joined the channel
[21:40] TomY has joined the channel
[21:41] hij1nx has joined the channel
[21:42] base698: AvianFlu: My issue has more to do with general use.  Like say you are writing files in a load script and calling a write_file method on a MongoDB object (which uses the driver).  How many DB objects and server objects should there be?  Basically what's the lifecycle of the driver?  I'm not sure when to call open/close.  It's conceivable in my load script to call write 100+ times before the callback for the write has started
[21:42] fread228_ has joined the channel
[21:43] AvianFlu: you should ask #mongodb, those questions I don't really have answers for
[21:43] AvianFlu: I thought you might have been seeing a specific issue that a number of other people have
[21:43] AvianFlu: everything I've done with mongo so far has been too simple to worry about that stuff
[21:44] base698: it seems to work when doing one record insert or one read
[21:44] base698: but if you do it unload it freaks out and crashes
[21:44] olivier has joined the channel
[21:44] base698: *under load 
[21:45] base698: every time I work with that driver I want to kick babies
[21:45] sdwrage has joined the channel
[21:46] JaKWaC has joined the channel
[21:47] simenbrekken has joined the channel
[21:50] jbpros: Anyone with zombie.js experience?
[21:50] mmalecki: ryah: you there?
[21:52] Poetro has joined the channel
[21:52] Poetro has joined the channel
[21:53] Sorella has joined the channel
[21:54] fzzzy has joined the channel
[21:54] rachelderp has left the channel
[21:55] mixin has joined the channel
[21:56] slifty_corsair has joined the channel
[22:00] harthur has joined the channel
[22:04] jamescarr has joined the channel
[22:04] fzzzy has joined the channel
[22:04] zeade has joined the channel
[22:05] MatthewS has joined the channel
[22:07] stagas has joined the channel
[22:09] boltR has joined the channel
[22:09] jamescarr: is there some nice easy way to calculate the current time for a specific timezone?
[22:10] tjholowaychuk: ah nice the new debugger is  sweet
[22:10] dominictarr has joined the channel
[22:10] micheil: tjholowaychuk: new debugger?
[22:11] sonnym has joined the channel
[22:11] jamescarr: I havent tried a debugger in node yet
[22:12] jamescarr: I probably should
[22:12] jamescarr: my current app is getting BIG
[22:12] pHcF has joined the channel
[22:13] mmalecki: jamescarr: it usually means that you should split it into modules :P
[22:14] jamescarr: mmalecki, yeah. I guess I need to setup an internal npm index
[22:14] jamescarr: doesn't mde lurk here?
[22:14] jamescarr: ah, yes he does
[22:14] mmalecki: jamescarr: no, that's not the way you do it
[22:15] mmalecki: jamescarr: *public* npm index
[22:15] jamescarr: mmalecki, only for stuff I have open source :)
[22:15] jamescarr: there's no reason for me to opensource a module related to very specific business logic
[22:17] mmalecki: jamescarr: yeah, well, you should just publish everything that can be useful for anybody else
[22:17] cjheath has joined the channel
[22:17] jamescarr: anyway
[22:18] eignerchris has joined the channel
[22:18] jamescarr: mde, I found your module timezone-js... do you by any chance have a node.js impl?
[22:18] jamescarr: mde, I didn
[22:18] jamescarr: I didn't find one, so I just forked it and stated adapting it
[22:19] akujin has joined the channel
[22:20] sfoster has joined the channel
[22:20] akujin- has joined the channel
[22:20] chilts: anyone know why these requests aren't setting the headers properly? http://paste.dollyfish.net.nz/1a03b6
[22:20] chilts: I'm doing a request to Amazone S3 which requires 'Date' but it's not being sent
[22:21] chilts: that paste is a short version :)
[22:21] chilts: I must be doing something wrong, I'm pretty sure of it
[22:21] _unary has joined the channel
[22:21] diogogmt has joined the channel
[22:21] chilts: I should have pasted the output too : http://paste.dollyfish.net.nz/124730
[22:22] chilts: (so yeah, the weird thing is many of the other fields aren't set either) :(
[22:22] joshgillies has joined the channel
[22:25] mc_greeny has joined the channel
[22:25] jamescarr: I'm over thinking this
[22:25] jamescarr: I'm just going to let the app be configured to say "leads in AZ can be called between 9am and 6pm Central Time"
[22:26] mikeycgto has joined the channel
[22:26] mikeycgto has joined the channel
[22:27] tlynn has joined the channel
[22:28] piscisaureus has joined the channel
[22:29] kriszyp has joined the channel
[22:29] vidi has joined the channel
[22:29] sirdancealot has joined the channel
[22:31] ceej has joined the channel
[22:31] ej_ has joined the channel
[22:32] ecin has joined the channel
[22:34] sdwrage has joined the channel
[22:37] PPilate has joined the channel
[22:37] AvianFlu_ has joined the channel
[22:38] ph^ has joined the channel
[22:40] dgathright_ has joined the channel
[22:43] mrryanjohnston has joined the channel
[22:43] skm has joined the channel
[22:43] mikeal has joined the channel
[22:43] cody-- has joined the channel
[22:47] materialdesigner has joined the channel
[22:48] neilk_ has joined the channel
[22:48] eddyb: anyone here familiar with gyp?
[22:48] bnoordhuis has joined the channel
[22:48] eddyb: I need some help :S
[22:49] cjroebuck has joined the channel
[22:49] captain_morgan has joined the channel
[22:49] andrewreedy has joined the channel
[22:52] Me1000 has joined the channel
[22:54] saikat_ has joined the channel
[22:55] cody-- has joined the channel
[22:55] tiagobutzke has joined the channel
[22:57] EhevuTov has joined the channel
[22:58] enmand has joined the channel
[22:59] muam__ has joined the channel
[22:59] DennisRas has joined the channel
[23:00] jarek has joined the channel
[23:02] mmalecki: can anyone tell me if this behavior is expected? https://gist.github.com/9dd3364f2a80cfb86be0 <- when I run this in 0.4, it exits after printint the name, when I run it in 0.5, it just hangs
[23:04] bnoordhuis: mmalecki: looks like a bug
[23:04] mmalecki: yay!
[23:05] mmalecki: bnoordhuis: thanks, I'm really happy to hear that (we were going crazy trying to get node-prompt to work)
[23:06] bnoordhuis: mmalecki: can you open an issue?
[23:06] mmalecki: bnoordhuis: I will make it a pull request, with a test
[23:06] bnoordhuis: mmalecki: even better, thanks
[23:06] mmalecki: or I will open an issue first
[23:07] brandel has joined the channel
[23:07] fg3 has joined the channel
[23:09] don_burks has joined the channel
[23:09] mmalecki: bnoordhuis: how would you call this test case?
[23:09] mmalecki: (I'm bad at naming things)
[23:10] mmalecki: ((too bad I'm no longer DrMcKay, this would make a funny Stargate reference))
[23:10] eddyb: why is node.gyp building v8 *twice*?
[23:10] eddyb: once with CXX(host) and the other time with CXX(target)
[23:10] eddyb: ?
[23:11] micheil has joined the channel
[23:11] bnoordhuis: mmalecki: test/simple/test-stdin-resume-pause.js?
[23:11] bnoordhuis: does it only happen in interactive mode?
[23:11] mmalecki: bnoordhuis: looks good, thanks :)
[23:11] context: before writing a ticket id try it on HEAD
[23:11] context: its possible its already fixed.
[23:11] eddyb: ../deps/zlib/contrib/minizip/unzip.c:1545:5: error: expected expression before ‘/’ token
[23:11] eddyb: wait, what?
[23:11] mmalecki: context: you mean the latest change? good point.
[23:11] eddyb: what happened?
[23:12] don_burks: Anyone here particularly familiar with the CSV parser module?
[23:12] bnoordhuis: context: mmalecki's test fails on master
[23:12] materialdesigner has joined the channel
[23:12] eddyb: also, why the two spaces everywhere?
[23:12] pizthewiz has joined the channel
[23:13] bnoordhuis: eddyb: because that's the only proper way to do it
[23:13] eddyb: two spaces + python-style JSON => nonono
[23:13] mmalecki: bnoordhuis: interactive mode? what do you mean?
[23:13] jocafa: <rage>TABS</rage>
[23:13] bnoordhuis: eddyb: with what compiler are you compiling?
[23:13] eddyb: I need a special IDE just to see what's going on
[23:13] eddyb: bnoordhuis: gcc, why?
[23:13] descipher_ has joined the channel
[23:13] bnoordhuis: eddyb: that error is complaining about c++ comments in c code
[23:14] bnoordhuis: but it only does that in strict mode
[23:14] eddyb: lol
[23:14] eddyb: gcc (SUSE Linux) 4.5.1 20101208 [gcc-4_5-branch revision 167585]
[23:14] squinteye has joined the channel
[23:14] bnoordhuis: bnoordhuis: tty mode, i.e. stdin is not a pipe
[23:14] bnoordhuis: err... mmalecki ^
[23:14] pHcF_ has joined the channel
[23:14] tylerstalder has joined the channel
[23:14] Nuck: bnoordhuis: Nice self-tab :P
[23:15] AphelionZ has joined the channel
[23:15] slifty has joined the channel
[23:15] bnoordhuis: ACTION is kinda jetlagged
[23:15] eddyb: bnoordhuis:             'cflags': [ '-ansi' ],
[23:16] eddyb: could that have caused my problem?
[23:17] eddyb: WHY REBUILD V8
[23:17] eddyb: PLEASE NO
[23:17] eddyb: :((((
[23:17] tuhoojabotti: :D
[23:17] tuhoojabotti: Have fun
[23:17] eddyb: bnoordhuis: you on the project?
[23:17] Nuck: lololol
[23:17] bnoordhuis: eddyb: yes
[23:18] eddyb: any experience with gyp/
[23:18] eddyb: ?
[23:18] bnoordhuis: yes
[23:18] eddyb: ok, make v8 not compile twice (once for host and once for target) and remove -ansi, if that causes the strict mode problem
[23:18] bnoordhuis: the -ansi switch is probably it (combined with -Werror) but it's kind of odd that it only fails for you
[23:18] don_burks: Anyone with any experience with the CSV parser module?
[23:18] eddyb: kthxbye
[23:18] eddyb: bnoordhuis: no kidding?
[23:19] bnoordhuis: eddyb: if it wouldn't compile for me, i'd have fixed it by now :)
[23:19] eddyb: ok, at least fix the v8 thing
[23:20] eddyb:  'deps/v8/tools/gyp/v8-node.gyp:v8' =>>  'deps/v8/tools/gyp/v8.gyp:v8' 
[23:20] eddyb: and remove deps/v8/tools/gyp/v8-node.gyp
[23:20] lsdafjklsd has joined the channel
[23:20] eddyb: ACTION is assuming here
[23:21] eddyb: ok, so nomore strict errors, -ansi should go
[23:21] CIA-48: node: 03Nathan Rajlich 07master * r58cb0fa 10/ lib/stream.js : 
[23:21] CIA-48: node: Directly export the Stream constructor.
[23:21] CIA-48: node: Also setting up a circular reference back to the
[23:21] CIA-48: node: stream as `Stream.Stream`, for backwards-compatibility.
[23:21] CIA-48: node: Fixes #1933 - http://git.io/s0suMg
[23:22] mmalecki: bnoordhuis: hanging the test suite when test fails isn't a desired situation, right?
[23:22] shanez has joined the channel
[23:22] bnoordhuis: mmalecki: the suite won't hang indefinitely, the test gets killed after 15 or 30 seconds
[23:23] mmalecki: bnoordhuis: nice. so no setTimeout hacks.
[23:23] bnoordhuis: mmalecki: nope, not necessary
[23:23] eddyb: bnoordhuis: got a more serious problem for you: http://pastebin.com/NiH4gDvc
[23:23] eddyb: I wonder why that fails only for me, too
[23:24] bnoordhuis: eddyb: are you cross-compiling?
[23:24] eddyb: nothing like that
[23:24] eddyb: I have no special options
[23:24] eddyb: I just want the darn thing to work
[23:25] lastk has joined the channel
[23:25] bnoordhuis: eddyb: in that case use the regular build system (configure && make)
[23:25] bnoordhuis: gyp is still WIP
[23:25] lastk: hi guys, what webserver you use with node.js?
[23:25] eddyb: bnoordhuis: the problem is I'm not an actual user
[23:26] eddyb: I'm trying to get bugs out of the way so I can use node's *new* build system
[23:27] ryah: lastk: nginx
[23:27] lastk: hmm
[23:28] lastk: and about the built in server ? is not good for production right?
[23:28] Nuck: o_O
[23:28] Nuck: Are we talking about Node.js or Ruby?
[23:28] kriszyp has joined the channel
[23:28] Nuck: lastk: Yes, there's no other webserver
[23:29] BillyBreen has joined the channel
[23:29] lastk: really? a friend of my, tell me that he is using the node server or something like that
[23:29] Nuck: The builtin Node.js server is quite literally *the* Node.js server
[23:29] Nuck: lastk: no.de?
[23:29] lastk: Nuck: so is ok use this right?
[23:29] Nuck: lastk: Yes, absolutely
[23:29] lastk: I think he is starting the node like: node app
[23:30] Nuck: lastk: Yes, node is the binary for Node.js
[23:30] Nuck: :P
[23:30] brandel has joined the channel
[23:30] lastk: my friend have a good latency on development but in the server the node is slower than php lol
[23:31] eddyb: lastk: ohreally?
[23:31] Nuck: lastk: ... huh?
[23:31] eddyb: that sounds like bullshit
[23:31] Nuck: Node.js is invariably faster than PHP
[23:31] Nuck: PHP's compiler is a complete piece of shit
[23:31] Nuck: Compared to V8, at least
[23:32] lastk: yeah Im not a node user, but I advice node because i read a lot , he liked but when he tried on the server he got this problem ,very strange
[23:33] nibblebot has joined the channel
[23:34] lastk: how do you guys using node? with a hybrid application like ( php/java/ruby/whatever ) + node? ou just node?
[23:34] Nuck: I'm using pure Node.js for my startup
[23:35] don_burks: You say you read a lot about node, lastk?
[23:35] SubStack: mine is node all the way down too
[23:35] SubStack: http://testling.com http://browserling.com
[23:35] Nuck: SubStack: Congrats on making HN with testling today
[23:36] lastk: don_burks: I mean read a lot of peoples  writing about the goods of node
[23:36] lastk: I cant write a app in node
[23:36] don_burks: Ah. Okay.
[23:36] andrewreedy: SubStack: listening to you on NodeUp right now ha
[23:36] lastk: thats because Im asking you guys how you use, I think is strange code all my app in node
[23:36] c4milo has joined the channel
[23:36] Nuck: andrewreedy: pffft I got to hear the Super Secret Message For Stream Listeners Only
[23:37] andrewreedy: Nuck: :( i want to hear
[23:37] colinclark has joined the channel
[23:38] decaf has joined the channel
[23:38] decaf has joined the channel
[23:38] bnoordhuis: eddyb: re gyp: sure, play around with it but be prepared to deal with pain
[23:38] bnoordhuis: gyp itself is not entirely free of bugs either :/
[23:39] lastk: I have a webservice with c#, I think will be good rewrite in node.js
[23:39] mmalecki: bnoordhuis: actually, I can't reproduce it with child_process
[23:39] bnoordhuis: mmalecki: okay, no worries - just file an issue and i'll look into it
[23:40] brandel: lastk: have you looked at Express?
[23:40] eddyb: bnoordhuis: any ideas why it builds v8 twice?
[23:40] lastk: nope, what is that?
[23:40] mmalecki: bnoordhuis: ok, thanks
[23:41] brandel: a lightweight web framework for Node, it's a bit like Sinatra if you're familiar with that
[23:41] Lorentz: lastk: it's a basic framework for making websites in nodejs
[23:41] bnoordhuis: eddyb: it may be a gyp bug, i think i saw it on solaris too
[23:41] base698: Has anyone gotten this with the node.js mongo driver: Error: Socket is not writable
[23:41] base698:     at Socket._writeOut (net.js:391:11)
[23:41] base698:     at Socket.write (net.js:377:17)
[23:41] lastk: oh seems good, like sinatra, right?
[23:41] base698: happens after I've written about 300 files to gridfs
[23:41] bnoordhuis: eddyb: to be sure, how did you configure gyp?
[23:41] lastk: brandel: yep, nice
[23:41] eddyb: ./configure-gyp
[23:41] eddyb: make
[23:41] eddyb: that's all
[23:41] eddyb: haven't touch anything else
[23:42] cliffano has joined the channel
[23:42] lastk: brandel: my webservice just send me a json, so with node I think will be more fast
[23:42] eddyb: I'm trying to get this amazing feat done: https://github.com/eddyb/gearbox-node
[23:42] lsdafjklsd has left the channel
[23:43] tjholowaychuk: lastk profile first :p unless you have 50+ million requests a day, that's probably not something you need to worry about
[23:43] brandel: .Net is pretty fast lastk! if you have performance problems, it's probably your DB
[23:43] willwhite has joined the channel
[23:43] tjholowaychuk: what brandel said
[23:43] tjholowaychuk: our app goes down to something like 200 rps when the db gets involved, but who cares that's still several millions of requests a day
[23:44] lastk: brandel: in really I dont like .net platform, so in the future I'll rewrite the app on rails or other thing, is a simple bid site..
[23:44] lastk: the admin is horrible
[23:44] bnoordhuis: damn, john mccarthy died
[23:44] andrewreedy: rip
[23:44] Lorentz: RIP o>
[23:44] lastk: bnoordhuis: yep, these last days a lot of genius is dying :(
[23:45] Swizec has joined the channel
[23:45] bnoordhuis: sure seems that way :(
[23:45] shanebo has joined the channel
[23:45] dominictarr has joined the channel
[23:46] wadey has joined the channel
[23:46] brandel: he lived to 84, that's not bad going 
[23:47] scottschecter has joined the channel
[23:47] tjholowaychuk: anyone for adding a filename to these deprecation warnings
[23:48] donald_cook has joined the channel
[23:48] tjholowaychuk: hard to find some of them with a bunch of deps
[23:48] mape: tjholowaychuk: more info is always better 
[23:48] fread2281 has joined the channel
[23:49] CarterL has joined the channel
[23:49] shanebo: can anyone help me understand how to chain functions? Where the following function gets passed to it the next function as an arg that can be called on when completed?
[23:50] bnoordhuis: eddyb: `./configure-gyp && make` actually works for you? plain `make` runs the waf based build system
[23:50] tk has joined the channel
[23:50] mmalecki: bnoordhuis: actually, there's a test case (nvm, global, node)
[23:50] eddyb: bnoordhuis: the gyp makefile
[23:51] mmalecki: ^ it's me being too tired to construct a statement
[23:51] FIQ|screen has joined the channel
[23:51] bnoordhuis: mmalecki: i'm indeed not following :)
[23:51] eddyb: disabled the snapshot, it's working
[23:51] bnoordhuis: eddyb: so that's `make -f Makefile-gyp`?
[23:52] eddyb: make for me, I copied the build system to my working dir
[23:52] eddyb: for the record, I have the same problems inside the node dir, so yeah
[23:52] mmalecki: bnoordhuis: I switched my node version to v0.4.12 in nvm, so executing stuff using node called node 0.4.12 
[23:52] eddyb: consider me doing make -f Makefile-gyp
[23:52] mmalecki: yeah, actually, I'll just shut up
[23:52] hostsamurai has joined the channel
[23:53] Bonuspunkt has joined the channel
[23:55] fread228_ has joined the channel
[23:55] sirdancealot has joined the channel
[23:56] hansy has joined the channel
[23:56] micheil_mbp has joined the channel
[23:57] dylang has joined the channel
[23:57] dgathright has joined the channel
[23:58] rchavik has joined the channel
[23:58] Nuck: I love that node.js is now mentioned right next to Rails
[23:59] shanebo: Nuck, have a sec?
[23:59] AvianFlu: nodejs-vs-ror.nodejitsu.com
[23:59] Nuck: shanebo: Aye?
[23:59] bnoordhuis: eddyb: btw, https://github.com/joyent/node/issues/1736
